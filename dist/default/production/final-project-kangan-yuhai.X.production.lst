

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Mar 12 10:53:35 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99  0000                     
   100                           ; Version 2.35
   101                           ; Generated 05/05/2021 GMT
   102                           ; 
   103                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK0
   137  0057C4                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _SENSITIVITY
   141  0057C4  0A                 	db	10
   142                           
   143                           	psect	idataBANK1
   144  0057C0                     __pidataBANK1:
   145                           	callstack 0
   146                           
   147                           ;initializer for _CALIBRATION_180
   148  0057C0  14                 	db	20
   149                           
   150                           ;initializer for _CALIBRATION_135
   151  0057C1  0A                 	db	10
   152                           
   153                           	psect	smallconst
   154  000E00                     __psmallconst:
   155                           	callstack 0
   156  000E00  00                 	db	0
   157  000E01  0000               	dw	0
   158  000E03  4B00               	dw	19200
   159  000E05                     __end_of_toint:
   160                           	callstack 0
   161  0000                     _TX4REG	set	3812
   162  0000                     _RC4STAbits	set	3815
   163  0000                     _SP4BRGH	set	3814
   164  0000                     _LATEbits	set	3965
   165  0000                     _TRISGbits	set	3975
   166  0000                     _TRISEbits	set	3973
   167  0000                     _LATGbits	set	3967
   168  0000                     _LATFbits	set	3966
   169  0000                     _TRISFbits	set	3974
   170  0000                     _SSP2CON2bits	set	3802
   171  0000                     _LATG	set	3967
   172  0000                     _LATE	set	3965
   173  0000                     _RX4PPS	set	3605
   174  0000                     _SSP2CLKPPS	set	3612
   175  0000                     _SSP2DATPPS	set	3613
   176  0000                     _ANSELDbits	set	3751
   177  0000                     _SSP2ADD	set	3798
   178  0000                     _SSP2CON1bits	set	3801
   179  0000                     _LATAbits	set	3961
   180  0000                     _LATDbits	set	3964
   181  0000                     _LATHbits	set	3968
   182  0000                     _TRISDbits	set	3972
   183  0000                     _TRISHbits	set	3976
   184  0000                     _PORTFbits	set	3982
   185  0000                     _T2PR	set	4028
   186  0000                     _T2CONbits	set	4029
   187  0000                     _PWM7DCH	set	4000
   188  0000                     _PWM6DCH	set	4003
   189  0000                     _TRISAbits	set	3969
   190  0000                     _TRISCbits	set	3971
   191  0000                     _LATCbits	set	3963
   192  0000                     _RC4REG	set	3811
   193  0000                     _SP4BRGL	set	3813
   194  0000                     _TX4STAbits	set	3816
   195  0000                     _BAUD4CONbits	set	3817
   196  0000                     _SSP2CON2	set	3802
   197  0000                     _SSP2STAT	set	3800
   198  0000                     _ANSELFbits	set	3764
   199  0000                     _SSP2BUF	set	3797
   200  0000                     _PIE0bits	set	3625
   201  0000                     _PIE4bits	set	3629
   202  0000                     _PIR4bits	set	3639
   203  0000                     _RC0PPS	set	3682
   204  0000                     _RC7PPS	set	3689
   205  0000                     _RD5PPS	set	3695
   206  0000                     _RE2PPS	set	3700
   207  0000                     _RD6PPS	set	3696
   208  0000                     _TMR0L	set	4051
   209  0000                     _TMR0H	set	4052
   210  0000                     _T0CON0bits	set	4053
   211  0000                     _T2CLKCONbits	set	4031
   212  0000                     _T2HLTbits	set	4030
   213  0000                     _PWM6CONbits	set	4004
   214  0000                     _PWM7CONbits	set	4001
   215  0000                     _PIR0bits	set	3635
   216  0000                     _T0CON1bits	set	4054
   217  0000                     _INTCONbits	set	4082
   218  000E05                     STR_1:
   219  000E05  25                 	db	37
   220  000E06  64                 	db	100	;'d'
   221  000E07  09                 	db	9
   222  000E08  25                 	db	37
   223  000E09  64                 	db	100	;'d'
   224  000E0A  09                 	db	9
   225  000E0B  25                 	db	37
   226  000E0C  64                 	db	100	;'d'
   227  000E0D  09                 	db	9
   228  000E0E  25                 	db	37
   229  000E0F  64                 	db	100	;'d'
   230  000E10  0D                 	db	13
   231  000E11  0A                 	db	10
   232  000E12  00                 	db	0
   233  000E13  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238  005094                     __pcinit:
   239                           	callstack 0
   240  005094                     start_initialization:
   241                           	callstack 0
   242  005094                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK1 (2 bytes)
   246                           ; load TBLPTR registers with __pidataBANK1
   247  005094  0EC0               	movlw	low __pidataBANK1
   248  005096  6EF6               	movwf	tblptrl,c
   249  005098  0E57               	movlw	high __pidataBANK1
   250  00509A  6EF7               	movwf	tblptrh,c
   251  00509C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   252  00509E  6EF8               	movwf	tblptru,c
   253  0050A0  0009               	tblrd		*+	;fetch initializer
   254  0050A2  CFF5 F1F9          	movff	tablat,__pdataBANK1
   255  0050A6  0009               	tblrd		*+	;fetch initializer
   256  0050A8  CFF5 F1FA          	movff	tablat,__pdataBANK1+1
   257                           
   258                           ; Initialize objects allocated to BANK0 (1 bytes)
   259                           ; load TBLPTR registers with __pidataBANK0
   260  0050AC  0EC4               	movlw	low __pidataBANK0
   261  0050AE  6EF6               	movwf	tblptrl,c
   262  0050B0  0E57               	movlw	high __pidataBANK0
   263  0050B2  6EF7               	movwf	tblptrh,c
   264  0050B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   265  0050B6  6EF8               	movwf	tblptru,c
   266  0050B8  0009               	tblrd		*+	;fetch initializer
   267  0050BA  CFF5 F0FA          	movff	tablat,__pdataBANK0
   268                           
   269                           ; Clear objects allocated to BANK1 (189 bytes)
   270  0050BE  EE01  F000         	lfsr	0,__pbssBANK1
   271  0050C2  0EBD               	movlw	189
   272  0050C4                     clear_0:
   273  0050C4  6AEE               	clrf	postinc0,c
   274  0050C6  06E8               	decf	wreg,f,c
   275  0050C8  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK0 (5 bytes)
   278  0050CA  0100               	movlb	0
   279  0050CC  6BF9               	clrf	(__pbssBANK0+4)& (0+255),b
   280  0050CE  6BF8               	clrf	(__pbssBANK0+3)& (0+255),b
   281  0050D0  6BF7               	clrf	(__pbssBANK0+2)& (0+255),b
   282  0050D2  6BF6               	clrf	(__pbssBANK0+1)& (0+255),b
   283  0050D4  6BF5               	clrf	__pbssBANK0& (0+255),b
   284                           
   285                           ; Clear objects allocated to COMRAM (2 bytes)
   286  0050D6  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   287  0050D8  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   288  0050DA                     end_of_initialization:
   289                           	callstack 0
   290  0050DA                     __end_of__initialization:
   291                           	callstack 0
   292  0050DA  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   293  0050DC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   294  0050DE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   295  0050E0  6EF8               	movwf	tblptru,c
   296  0050E2  0E0E               	movlw	high __Lsmallconst
   297  0050E4  6EF7               	movwf	tblptrh,c
   298  0050E6  0100               	movlb	0
   299  0050E8  EFB4  F027         	goto	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMRAM
   302  00005A                     __pbssCOMRAM:
   303                           	callstack 0
   304  00005A                     _array_index:
   305                           	callstack 0
   306  00005A                     	ds	1
   307  00005B                     _TxBufWriteCnt:
   308                           	callstack 0
   309  00005B                     	ds	1
   310                           
   311                           	psect	bssBANK0
   312  0000F5                     __pbssBANK0:
   313                           	callstack 0
   314  0000F5                     _flags:
   315                           	callstack 0
   316  0000F5                     	ds	2
   317  0000F7                     _TxBufReadCnt:
   318                           	callstack 0
   319  0000F7                     	ds	1
   320  0000F8                     _RxBufReadCnt:
   321                           	callstack 0
   322  0000F8                     	ds	1
   323  0000F9                     _RxBufWriteCnt:
   324                           	callstack 0
   325  0000F9                     	ds	1
   326                           
   327                           	psect	dataBANK0
   328  0000FA                     __pdataBANK0:
   329                           	callstack 0
   330  0000FA                     _SENSITIVITY:
   331                           	callstack 0
   332  0000FA                     	ds	1
   333                           
   334                           	psect	bssBANK1
   335  000100                     __pbssBANK1:
   336                           	callstack 0
   337  000100                     _EUSART4TXbuf:
   338                           	callstack 0
   339  000100                     	ds	60
   340  00013C                     _memory:
   341                           	callstack 0
   342  00013C                     	ds	40
   343  000164                     _EUSART4RXbuf:
   344                           	callstack 0
   345  000164                     	ds	20
   346  000178                     _motorR:
   347                           	callstack 0
   348  000178                     	ds	10
   349  000182                     _motorL:
   350                           	callstack 0
   351  000182                     	ds	10
   352  00018C                     roundf@F527:
   353                           	callstack 0
   354  00018C                     	ds	4
   355  000190                     _nout:
   356                           	callstack 0
   357  000190                     	ds	2
   358  000192                     _width:
   359                           	callstack 0
   360  000192                     	ds	2
   361  000194                     _prec:
   362                           	callstack 0
   363  000194                     	ds	2
   364  000196                     _stop_move:
   365                           	callstack 0
   366  000196                     	ds	2
   367  000198                     _start_move:
   368                           	callstack 0
   369  000198                     	ds	2
   370  00019A                     _second:
   371                           	callstack 0
   372  00019A                     	ds	2
   373  00019C                     _color:
   374                           	callstack 0
   375  00019C                     	ds	1
   376  00019D                     _dbuf:
   377                           	callstack 0
   378  00019D                     	ds	32
   379                           
   380                           	psect	dataBANK1
   381  0001F9                     __pdataBANK1:
   382                           	callstack 0
   383  0001F9                     _CALIBRATION_180:
   384                           	callstack 0
   385  0001F9                     	ds	1
   386  0001FA                     _CALIBRATION_135:
   387                           	callstack 0
   388  0001FA                     	ds	1
   389                           
   390                           	psect	cstackBANK1
   391  0001BD                     __pcstackBANK1:
   392                           	callstack 0
   393  0001BD                     test_function@amb_light:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x0
   397  0001BD                     	ds	2
   398  0001BF                     test_function@complete:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x2
   402  0001BF                     	ds	1
   403  0001C0                     test_function@color:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x3
   407  0001C0                     	ds	1
   408  0001C1                     test_function@stop_signal:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x4
   412  0001C1                     	ds	1
   413  0001C2                     test_function@test_code:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x5
   417  0001C2                     	ds	1
   418  0001C3                     main@rgb:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x6
   422  0001C3                     	ds	8
   423  0001CB                     main@white:
   424                           	callstack 0
   425                           
   426                           ; 26 bytes @ 0xE
   427  0001CB                     	ds	26
   428  0001E5                     main@motorL:
   429                           	callstack 0
   430                           
   431                           ; 10 bytes @ 0x28
   432  0001E5                     	ds	10
   433  0001EF                     main@motorR:
   434                           	callstack 0
   435                           
   436                           ; 10 bytes @ 0x32
   437  0001EF                     	ds	10
   438                           
   439                           	psect	cstackBANK0
   440  000060                     __pcstackBANK0:
   441                           	callstack 0
   442  000060                     ?_sprintf:
   443                           	callstack 0
   444  000060                     sprintf@s:
   445                           	callstack 0
   446  000060                     _roundf$3218:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x0
   450  000060                     	ds	2
   451  000062                     sprintf@fmt:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x2
   455  000062                     	ds	2
   456  000064                     roundf@e:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460  000064                     	ds	2
   461  000066                     _roundf$3217:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x6
   465  000066                     	ds	4
   466  00006A                     roundf@u:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0xA
   470  00006A                     	ds	2
   471  00006C                     sprintf@ap:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xC
   475  00006C                     	ds	2
   476  00006E                     roundf@y:
   477                           	callstack 0
   478  00006E                     sprintf@f:
   479                           	callstack 0
   480                           
   481                           ; 11 bytes @ 0xE
   482  00006E                     	ds	4
   483  000072                     ?___fltol:
   484                           	callstack 0
   485  000072                     ___fltol@f1:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x12
   489  000072                     	ds	4
   490  000076                     ?_lroundf:
   491                           	callstack 0
   492  000076                     lroundf@x:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x16
   496  000076                     	ds	3
   497  000079                     color_display@m:
   498                           	callstack 0
   499  000079                     color_predict@buf:
   500                           	callstack 0
   501                           
   502                           ; 100 bytes @ 0x19
   503  000079                     	ds	1
   504  00007A                     ?_amb_light_measure:
   505                           	callstack 0
   506  00007A                     compare@lower:
   507                           	callstack 0
   508  00007A                     amb_light_measure@amb:
   509                           	callstack 0
   510  00007A                     distance_measure@mL:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1A
   514  00007A                     	ds	1
   515  00007B                     color_display@buf:
   516                           	callstack 0
   517                           
   518                           ; 100 bytes @ 0x1B
   519  00007B                     	ds	1
   520  00007C                     compare@value2compare:
   521                           	callstack 0
   522  00007C                     amb_light_measure@upper_bound:
   523                           	callstack 0
   524  00007C                     distance_measure@mR:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1C
   528  00007C                     	ds	2
   529  00007E                     compare@upper:
   530                           	callstack 0
   531  00007E                     amb_light_measure@CC_amb_ave:
   532                           	callstack 0
   533  00007E                     distance_measure@amb_light:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1E
   537  00007E                     	ds	2
   538  000080                     detect_color@m:
   539                           	callstack 0
   540  000080                     amb_light_measure@CC_amb_1:
   541                           	callstack 0
   542  000080                     distance_measure@CG_amb:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x20
   546  000080                     	ds	2
   547  000082                     detect_color@w:
   548                           	callstack 0
   549  000082                     amb_light_measure@CC_amb_2:
   550                           	callstack 0
   551  000082                     _distance_measure$3216:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x22
   555  000082                     	ds	2
   556  000084                     detect_color@RB:
   557                           	callstack 0
   558  000084                     amb_light_measure@CC_amb_3:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x24
   562  000084                     	ds	2
   563  000086                     detect_color@GB:
   564                           	callstack 0
   565  000086                     distance_measure@CC_amb:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x26
   569  000086                     	ds	2
   570  000088                     detect_color@RG:
   571                           	callstack 0
   572  000088                     distance_measure@threshold:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x28
   576  000088                     	ds	2
   577  00008A                     distance_measure@stop:
   578                           	callstack 0
   579  00008A                     detect_color@GR:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2A
   583  00008A                     	ds	2
   584  00008C                     detect_color@GG:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x2C
   588  00008C                     	ds	2
   589  00008E                     detect_color@RR:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2E
   593  00008E                     	ds	2
   594  000090                     detect_color@BR:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x30
   598  000090                     	ds	2
   599  000092                     detect_color@BB:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x32
   603  000092                     	ds	2
   604  000094                     detect_color@color:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x34
   608  000094                     	ds	1
   609  000095                     detect_color@BG:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x35
   613  000095                     	ds	2
   614  000097                     _detect_color$3215:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x37
   618  000097                     	ds	4
   619  00009B                     verify_color@m:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x3B
   623  00009B                     	ds	2
   624  00009D                     verify_color@w:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x3D
   628  00009D                     	ds	2
   629  00009F                     verify_color@color3:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x3F
   633  00009F                     	ds	2
   634  0000A1                     verify_color@color2:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x41
   638  0000A1                     	ds	2
   639  0000A3                     verify_color@color:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x43
   643  0000A3                     	ds	58
   644  0000DD                     color_predict@color:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x7D
   648  0000DD                     	ds	2
   649  0000DF                     color_data_collection@m:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x7F
   653  0000DF                     	ds	2
   654  0000E1                     ??_color_data_collection:
   655                           
   656                           ; 1 bytes @ 0x81
   657  0000E1                     	ds	2
   658  0000E3                     color_data_collection@i:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x83
   662  0000E3                     	ds	2
   663  0000E5                     color_data_collection@j:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x85
   667  0000E5                     	ds	2
   668  0000E7                     color_data_collection@k:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x87
   672  0000E7                     	ds	2
   673  0000E9                     color_data_collection@x:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x89
   677  0000E9                     	ds	2
   678  0000EB                     test_function@m:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x8B
   682  0000EB                     	ds	2
   683  0000ED                     test_function@w:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8D
   687  0000ED                     	ds	2
   688  0000EF                     test_function@mL:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x8F
   692  0000EF                     	ds	2
   693  0000F1                     test_function@mR:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x91
   697  0000F1                     	ds	2
   698  0000F3                     ??_test_function:
   699                           
   700                           ; 1 bytes @ 0x93
   701  0000F3                     	ds	2
   702                           
   703                           	psect	cstackCOMRAM
   704  000001                     __pcstackCOMRAM:
   705                           	callstack 0
   706  000001                     ??_LowISR:
   707  000001                     
   708                           ; 1 bytes @ 0x0
   709  000001                     	ds	2
   710  000003                     ??_LED_C:
   711  000003                     ??_LED_OFF:
   712  000003                     ??_LED_R:
   713  000003                     ??_LED_B:
   714  000003                     ??_LED_G:
   715  000003                     ??_I2C_2_Master_Idle:
   716  000003                     ?_strlen:
   717                           	callstack 0
   718  000003                     ?___wmul:
   719                           	callstack 0
   720  000003                     ?___fladd:
   721                           	callstack 0
   722  000003                     ?___flneg:
   723                           	callstack 0
   724  000003                     ?___xxtofl:
   725                           	callstack 0
   726  000003                     ?___aodiv:
   727                           	callstack 0
   728  000003                     ?___aomod:
   729                           	callstack 0
   730  000003                     toggle_light@toggletime:
   731                           	callstack 0
   732  000003                     sendCharSerial4@charToSend:
   733                           	callstack 0
   734  000003                     initDCmotorsPWM@PWMperiod:
   735                           	callstack 0
   736  000003                     initDCmotors_parameter@motorL:
   737                           	callstack 0
   738  000003                     ___wmul@multiplier:
   739                           	callstack 0
   740  000003                     fputc@c:
   741                           	callstack 0
   742  000003                     strlen@s:
   743                           	callstack 0
   744  000003                     ___flge@ff1:
   745                           	callstack 0
   746  000003                     ___flneg@f1:
   747                           	callstack 0
   748  000003                     ___fladd@b:
   749                           	callstack 0
   750  000003                     ___xxtofl@val:
   751                           	callstack 0
   752  000003                     ___aodiv@dividend:
   753                           	callstack 0
   754  000003                     ___aomod@dividend:
   755                           	callstack 0
   756                           
   757                           ; 8 bytes @ 0x2
   758  000003                     	ds	1
   759  000004                     ??_I2C_2_Master_Read:
   760  000004                     ??_toggle_light:
   761  000004                     I2C_2_Master_Write@data_byte:
   762                           	callstack 0
   763  000004                     sendStringSerial4@string:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x3
   767  000004                     	ds	1
   768  000005                     color_writetoaddr@value:
   769                           	callstack 0
   770  000005                     I2C_2_Master_Read@ack:
   771                           	callstack 0
   772  000005                     initDCmotors_parameter@motorR:
   773                           	callstack 0
   774  000005                     ___wmul@multiplicand:
   775                           	callstack 0
   776  000005                     fputc@fp:
   777                           	callstack 0
   778  000005                     strlen@a:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x4
   782  000005                     	ds	1
   783  000006                     toggle_light@i:
   784                           	callstack 0
   785  000006                     color_writetoaddr@address:
   786                           	callstack 0
   787  000006                     I2C_2_Master_Read@tmp:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x5
   791  000006                     	ds	1
   792  000007                     ??_fputc:
   793  000007                     ??_color_click_init:
   794  000007                     ??___xxtofl:
   795  000007                     ?_color_read_Red:
   796                           	callstack 0
   797  000007                     ?_color_read_Blue:
   798                           	callstack 0
   799  000007                     ?_color_read_Green:
   800                           	callstack 0
   801  000007                     ?_color_read_Clear:
   802                           	callstack 0
   803  000007                     toggle_light@lightnumber:
   804                           	callstack 0
   805  000007                     ___wmul@product:
   806                           	callstack 0
   807  000007                     ___flge@ff2:
   808                           	callstack 0
   809  000007                     ___fladd@a:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x6
   813  000007                     	ds	2
   814  000009                     ??_color_read_Red:
   815  000009                     ??_color_read_Blue:
   816  000009                     ??_color_read_Green:
   817  000009                     ??_color_read_Clear:
   818  000009                     ?___awdiv:
   819                           	callstack 0
   820  000009                     ___awdiv@dividend:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x8
   824  000009                     	ds	2
   825  00000B                     ??___fladd:
   826  00000B                     ??___flge:
   827  00000B                     ___xxtofl@sign:
   828                           	callstack 0
   829  00000B                     ___awdiv@divisor:
   830                           	callstack 0
   831  00000B                     ___aodiv@divisor:
   832                           	callstack 0
   833  00000B                     ___aomod@divisor:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0xA
   837  00000B                     	ds	1
   838  00000C                     ___xxtofl@exp:
   839                           	callstack 0
   840  00000C                     color_read_Red@tmp:
   841                           	callstack 0
   842  00000C                     color_read_Blue@tmp:
   843                           	callstack 0
   844  00000C                     color_read_Green@tmp:
   845                           	callstack 0
   846  00000C                     color_read_Clear@tmp:
   847                           	callstack 0
   848  00000C                     fputs@s:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xB
   852  00000C                     	ds	1
   853  00000D                     ___awdiv@counter:
   854                           	callstack 0
   855  00000D                     ___xxtofl@arg:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0xC
   859  00000D                     	ds	1
   860  00000E                     ___awdiv@sign:
   861                           	callstack 0
   862  00000E                     read_color@m:
   863                           	callstack 0
   864  00000E                     calibrate_white@w:
   865                           	callstack 0
   866  00000E                     fputs@fp:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xD
   870  00000E                     	ds	1
   871  00000F                     ___fladd@signs:
   872                           	callstack 0
   873  00000F                     ___awdiv@quotient:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xE
   877  00000F                     	ds	1
   878  000010                     ??_calibrate_white:
   879  000010                     ___fladd@aexp:
   880                           	callstack 0
   881  000010                     fputs@c:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0xF
   885  000010                     	ds	1
   886  000011                     ?___fldiv:
   887                           	callstack 0
   888  000011                     ___fladd@bexp:
   889                           	callstack 0
   890  000011                     setMotorPWM@m:
   891                           	callstack 0
   892  000011                     fputs@i:
   893                           	callstack 0
   894  000011                     ___fldiv@b:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x10
   898  000011                     	ds	1
   899  000012                     ___fladd@grs:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x11
   903  000012                     	ds	1
   904  000013                     ??_setMotorPWM:
   905  000013                     ?_pad:
   906                           	callstack 0
   907  000013                     ?___flsub:
   908                           	callstack 0
   909  000013                     ___aodiv@counter:
   910                           	callstack 0
   911  000013                     ___aomod@counter:
   912                           	callstack 0
   913  000013                     pad@fp:
   914                           	callstack 0
   915  000013                     ___flsub@b:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x12
   919  000013                     	ds	1
   920  000014                     ___aodiv@sign:
   921                           	callstack 0
   922  000014                     ___aomod@sign:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x13
   926  000014                     	ds	1
   927  000015                     ?_abs:
   928                           	callstack 0
   929  000015                     pad@buf:
   930                           	callstack 0
   931  000015                     abs@a:
   932                           	callstack 0
   933  000015                     ___fldiv@a:
   934                           	callstack 0
   935  000015                     ___aodiv@quotient:
   936                           	callstack 0
   937                           
   938                           ; 8 bytes @ 0x14
   939  000015                     	ds	2
   940  000017                     ??_abs:
   941  000017                     pad@p:
   942                           	callstack 0
   943  000017                     ___flsub@a:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x16
   947  000017                     	ds	2
   948  000019                     ??___fldiv:
   949  000019                     ??_pad:
   950                           
   951                           ; 1 bytes @ 0x18
   952  000019                     	ds	1
   953  00001A                     setMotorPWM@PWMduty:
   954                           	callstack 0
   955  00001A                     pad@i:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x19
   959  00001A                     	ds	1
   960  00001B                     
   961                           ; 1 bytes @ 0x1A
   962  00001B                     	ds	1
   963  00001C                     stop@mL:
   964                           	callstack 0
   965  00001C                     fullSpeedAhead@mL:
   966                           	callstack 0
   967  00001C                     pad@w:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x1B
   971  00001C                     	ds	1
   972  00001D                     ___fldiv@rem:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x1C
   976  00001D                     	ds	1
   977  00001E                     ?_dtoa:
   978                           	callstack 0
   979  00001E                     stop@mR:
   980                           	callstack 0
   981  00001E                     fullSpeedAhead@mR:
   982                           	callstack 0
   983  00001E                     dtoa@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x1D
   987  00001E                     	ds	2
   988  000020                     ??_fullSpeedAhead:
   989  000020                     ??_stop:
   990  000020                     dtoa@d:
   991                           	callstack 0
   992                           
   993                           ; 8 bytes @ 0x1F
   994  000020                     	ds	1
   995  000021                     ___fldiv@sign:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x20
   999  000021                     	ds	1
  1000  000022                     turnLeft@mL:
  1001                           	callstack 0
  1002  000022                     turnRight@mL:
  1003                           	callstack 0
  1004  000022                     fullSpeedBack@mL:
  1005                           	callstack 0
  1006  000022                     ___fldiv@new_exp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x21
  1010  000022                     	ds	2
  1011  000024                     turnLeft@mR:
  1012                           	callstack 0
  1013  000024                     turnRight@mR:
  1014                           	callstack 0
  1015  000024                     fullSpeedBack@mR:
  1016                           	callstack 0
  1017  000024                     ___fldiv@grs:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x23
  1021  000024                     	ds	2
  1022  000026                     ??_fullSpeedBack:
  1023  000026                     turnLeft@angle_left:
  1024                           	callstack 0
  1025  000026                     turnRight@angle_right:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x25
  1029  000026                     	ds	1
  1030  000027                     ??_turnLeft:
  1031  000027                     ??_turnRight:
  1032                           
  1033                           ; 1 bytes @ 0x26
  1034  000027                     	ds	1
  1035  000028                     ??_dtoa:
  1036  000028                     ___fldiv@bexp:
  1037                           	callstack 0
  1038  000028                     turnLeft@delay_135:
  1039                           	callstack 0
  1040  000028                     turnRight@delay_135:
  1041                           	callstack 0
  1042  000028                     short_reverse@mL:
  1043                           	callstack 0
  1044  000028                     reverse_square@mL:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x27
  1048  000028                     	ds	1
  1049  000029                     ___fldiv@aexp:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x28
  1053  000029                     	ds	1
  1054  00002A                     ?___flmul:
  1055                           	callstack 0
  1056  00002A                     turnLeft@delay_180:
  1057                           	callstack 0
  1058  00002A                     turnRight@delay_180:
  1059                           	callstack 0
  1060  00002A                     short_reverse@mR:
  1061                           	callstack 0
  1062  00002A                     reverse_square@mR:
  1063                           	callstack 0
  1064  00002A                     ___flmul@b:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x29
  1068  00002A                     	ds	2
  1069  00002C                     ??_short_reverse:
  1070  00002C                     ??_reverse_square:
  1071  00002C                     turnLeft@i:
  1072                           	callstack 0
  1073  00002C                     turnRight@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2B
  1077  00002C                     	ds	2
  1078  00002E                     turnLeft@i_1476:
  1079                           	callstack 0
  1080  00002E                     turnRight@i_1500:
  1081                           	callstack 0
  1082  00002E                     ___flmul@a:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x2D
  1086  00002E                     	ds	2
  1087  000030                     turnLeft@i_1477:
  1088                           	callstack 0
  1089  000030                     turnRight@i_1501:
  1090                           	callstack 0
  1091  000030                     _dtoa$2865:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x2F
  1095  000030                     	ds	2
  1096  000032                     ??___flmul:
  1097  000032                     turnLeft@delay:
  1098                           	callstack 0
  1099  000032                     turnRight@delay:
  1100                           	callstack 0
  1101  000032                     dtoa@p:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x31
  1105  000032                     	ds	2
  1106  000034                     goback@mL:
  1107                           	callstack 0
  1108  000034                     dtoa@w:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x33
  1112  000034                     	ds	2
  1113  000036                     ___flmul@sign:
  1114                           	callstack 0
  1115  000036                     goback@mR:
  1116                           	callstack 0
  1117  000036                     dtoa@s:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x35
  1121  000036                     	ds	1
  1122  000037                     ___flmul@aexp:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x36
  1126  000037                     	ds	1
  1127  000038                     ??_goback:
  1128  000038                     ___flmul@grs:
  1129                           	callstack 0
  1130  000038                     dtoa@n:
  1131                           	callstack 0
  1132                           
  1133                           ; 8 bytes @ 0x37
  1134  000038                     	ds	2
  1135  00003A                     goback@i:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x39
  1139  00003A                     	ds	2
  1140  00003C                     ___flmul@bexp:
  1141                           	callstack 0
  1142  00003C                     action@mL:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x3B
  1146  00003C                     	ds	1
  1147  00003D                     ___flmul@prod:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x3C
  1151  00003D                     	ds	1
  1152  00003E                     action@mR:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x3D
  1156  00003E                     	ds	2
  1157  000040                     ??_action:
  1158  000040                     dtoa@i:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3F
  1162  000040                     	ds	1
  1163  000041                     ___flmul@temp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x40
  1167  000041                     	ds	1
  1168  000042                     ?_vfpfcnvrt:
  1169                           	callstack 0
  1170  000042                     action@color:
  1171                           	callstack 0
  1172  000042                     vfpfcnvrt@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x41
  1176  000042                     	ds	1
  1177  000043                     ?_roundf:
  1178                           	callstack 0
  1179  000043                     roundf@x:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x42
  1183  000043                     	ds	1
  1184  000044                     vfpfcnvrt@fmt:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x43
  1188  000044                     	ds	2
  1189  000046                     vfpfcnvrt@ap:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x45
  1193  000046                     	ds	1
  1194  000047                     ??_roundf:
  1195                           
  1196                           ; 1 bytes @ 0x46
  1197  000047                     	ds	1
  1198  000048                     ??_vfpfcnvrt:
  1199                           
  1200                           ; 1 bytes @ 0x47
  1201  000048                     	ds	2
  1202  00004A                     vfpfcnvrt@ll:
  1203                           	callstack 0
  1204                           
  1205                           ; 8 bytes @ 0x49
  1206  00004A                     	ds	1
  1207  00004B                     ??___fltol:
  1208                           
  1209                           ; 1 bytes @ 0x4A
  1210  00004B                     	ds	4
  1211  00004F                     ___fltol@sign1:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x4E
  1215  00004F                     	ds	1
  1216  000050                     ___fltol@exp1:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x4F
  1220  000050                     	ds	1
  1221  000051                     ??_amb_light_measure:
  1222  000051                     ??_distance_measure:
  1223  000051                     compare@result:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x50
  1227  000051                     	ds	1
  1228  000052                     ??_detect_color:
  1229  000052                     ?_vfprintf:
  1230                           	callstack 0
  1231  000052                     vfprintf@fp:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x51
  1235  000052                     	ds	2
  1236  000054                     vfprintf@fmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x53
  1240  000054                     	ds	2
  1241  000056                     ??_verify_color:
  1242  000056                     vfprintf@ap:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x55
  1246  000056                     	ds	2
  1247  000058                     vfprintf@cfmt:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x57
  1251  000058                     	ds	2
  1252  00005A                     
  1253                           ; 1 bytes @ 0x59
  1254 ;;
  1255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1256 ;;
  1257 ;; *************** function _main *****************
  1258 ;; Defined at:
  1259 ;;		line 26 in file "main.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  white          26   14[BANK1 ] struct white_card
  1264 ;;  motorR         10   50[BANK1 ] struct DC_motor
  1265 ;;  motorL         10   40[BANK1 ] struct DC_motor
  1266 ;;  rgb             8    6[BANK1 ] struct color_rgb
  1267 ;;  amb             8    0        struct color_rgb
  1268 ;;  amb_light       2    0        unsigned int 
  1269 ;;  stop_signal     1    0        unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1280 ;;      Locals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1282 ;;      Totals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;Total ram usage:       54 bytes
  1284 ;; Hardware stack levels required when called: 13
  1285 ;; This function calls:
  1286 ;;		_I2C_2_Master_Init
  1287 ;;		_Interrupts_init
  1288 ;;		_Timer0_init
  1289 ;;		_action
  1290 ;;		_amb_light_measure
  1291 ;;		_buggylight_init
  1292 ;;		_calibrate_white
  1293 ;;		_color_click_init
  1294 ;;		_detect_color
  1295 ;;		_distance_measure
  1296 ;;		_fullSpeedAhead
  1297 ;;		_initDCmotorsPWM
  1298 ;;		_initDCmotors_parameter
  1299 ;;		_initUSART4
  1300 ;;		_pin_init
  1301 ;;		_stop
  1302 ;;		_test_function
  1303 ;;		_verify_color
  1304 ;; This function is called by:
  1305 ;;		Startup code after reset
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text0
  1310  004F68                     __ptext0:
  1311                           	callstack 0
  1312  004F68                     _main:
  1313                           	callstack 18
  1314  004F68                     
  1315                           ;main.c: 27:     Interrupts_init();
  1316  004F68  ECC9  F02B         	call	_Interrupts_init	;wreg free
  1317  004F6C                     
  1318                           ;main.c: 28:     Timer0_init();
  1319  004F6C  EC9D  F02B         	call	_Timer0_init	;wreg free
  1320  004F70                     
  1321                           ;main.c: 29:     I2C_2_Master_Init();
  1322  004F70  ECE2  F02A         	call	_I2C_2_Master_Init	;wreg free
  1323  004F74                     
  1324                           ;main.c: 30:     color_click_init();
  1325  004F74  EC99  F02A         	call	_color_click_init	;wreg free
  1326  004F78                     
  1327                           ;main.c: 31:     initDCmotorsPWM(199);
  1328  004F78  0E00               	movlw	0
  1329  004F7A  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1330  004F7C  0EC7               	movlw	199
  1331  004F7E  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1332  004F80  ECA5  F029         	call	_initDCmotorsPWM	;wreg free
  1333  004F84                     
  1334                           ;main.c: 32:     buggylight_init();
  1335  004F84  ECB8  F02B         	call	_buggylight_init	;wreg free
  1336  004F88                     
  1337                           ;main.c: 33:     initUSART4();
  1338  004F88  EC8E  F02B         	call	_initUSART4	;wreg free
  1339  004F8C                     
  1340                           ;main.c: 35:     struct color_rgb rgb, amb;;main.c: 36:     struct white_card white;;mai
      +                          n.c: 40:     struct DC_motor motorL, motorR;;main.c: 41:     pin_init();
  1341  004F8C  EC6E  F02B         	call	_pin_init	;wreg free
  1342  004F90                     
  1343                           ;main.c: 42:     initDCmotors_parameter(&motorL, &motorR);
  1344  004F90  0EE5               	movlw	low main@motorL
  1345  004F92  6E03               	movwf	initDCmotors_parameter@motorL^0,c
  1346  004F94  0E01               	movlw	high main@motorL
  1347  004F96  6E04               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1348  004F98  0EEF               	movlw	low main@motorR
  1349  004F9A  6E05               	movwf	initDCmotors_parameter@motorR^0,c
  1350  004F9C  0E01               	movlw	high main@motorR
  1351  004F9E  6E06               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1352  004FA0  EC27  F024         	call	_initDCmotors_parameter	;wreg free
  1353  004FA4                     l7398:
  1354                           
  1355                           ;main.c: 56:             test_function(4, &rgb, &white, &motorL, &motorR);
  1356  004FA4  0EC3               	movlw	low main@rgb
  1357  004FA6  0100               	movlb	0	; () banked
  1358  004FA8  6FEB               	movwf	test_function@m& (0+255),b
  1359  004FAA  0E01               	movlw	high main@rgb
  1360  004FAC  6FEC               	movwf	(test_function@m+1)& (0+255),b
  1361  004FAE  0ECB               	movlw	low main@white
  1362  004FB0  6FED               	movwf	test_function@w& (0+255),b
  1363  004FB2  0E01               	movlw	high main@white
  1364  004FB4  6FEE               	movwf	(test_function@w+1)& (0+255),b
  1365  004FB6  0EE5               	movlw	low main@motorL
  1366  004FB8  6FEF               	movwf	test_function@mL& (0+255),b
  1367  004FBA  0E01               	movlw	high main@motorL
  1368  004FBC  6FF0               	movwf	(test_function@mL+1)& (0+255),b
  1369  004FBE  0EEF               	movlw	low main@motorR
  1370  004FC0  6FF1               	movwf	test_function@mR& (0+255),b
  1371  004FC2  0E01               	movlw	high main@motorR
  1372  004FC4  6FF2               	movwf	(test_function@mR+1)& (0+255),b
  1373  004FC6  0E04               	movlw	4
  1374  004FC8  ECD2  F01E         	call	_test_function
  1375  004FCC  EFD2  F027         	goto	l7398
  1376  004FD0  EF24  F000         	goto	start
  1377  004FD4                     __end_of_main:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _verify_color *****************
  1381 ;; Defined at:
  1382 ;;		line 398 in file "color.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  color           1    wreg     unsigned char 
  1385 ;;  m               2   59[BANK0 ] PTR struct color_rgb
  1386 ;;		 -> main@rgb(8), 
  1387 ;;  w               2   61[BANK0 ] PTR struct white_card
  1388 ;;		 -> main@white(26), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  color           1   67[BANK0 ] unsigned char 
  1391 ;;  color2          2   65[BANK0 ] unsigned int 
  1392 ;;  color3          2   63[BANK0 ] unsigned int 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;Total ram usage:       11 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 7
  1409 ;; This function calls:
  1410 ;;		_detect_color
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text1
  1417  004DB4                     __ptext1:
  1418                           	callstack 0
  1419  004DB4                     _verify_color:
  1420                           	callstack 23
  1421                           
  1422                           ;incstack = 0
  1423                           ;verify_color@color stored from wreg
  1424  004DB4  0100               	movlb	0	; () banked
  1425  004DB6  6FA3               	movwf	verify_color@color& (0+255),b
  1426  004DB8                     
  1427                           ;color.c: 398: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 399: {;color.c: 400:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1428  004DB8  0E05               	movlw	5
  1429  004DBA  6E57               	movwf	(??_verify_color+1)^0,c
  1430  004DBC  0E0F               	movlw	15
  1431  004DBE  6E56               	movwf	??_verify_color^0,c
  1432  004DC0  0EF1               	movlw	241
  1433  004DC2                     u8437:
  1434  004DC2  2EE8               	decfsz	wreg,f,c
  1435  004DC4  D7FE               	bra	u8437
  1436  004DC6  2E56               	decfsz	??_verify_color^0,f,c
  1437  004DC8  D7FC               	bra	u8437
  1438  004DCA  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1439  004DCC  D7FA               	bra	u8437
  1440  004DCE  F000               	nop	
  1441  004DD0                     
  1442                           ;color.c: 401:     unsigned int color2, color3;;color.c: 402:     color2 = detect_color(
      +                          m,w);
  1443  004DD0  C09B  F080         	movff	verify_color@m,detect_color@m
  1444  004DD4  C09C  F081         	movff	verify_color@m+1,detect_color@m+1
  1445  004DD8  C09D  F082         	movff	verify_color@w,detect_color@w
  1446  004DDC  C09E  F083         	movff	verify_color@w+1,detect_color@w+1
  1447  004DE0  EC0A  F007         	call	_detect_color	;wreg free
  1448  004DE4  6E56               	movwf	??_verify_color^0,c
  1449  004DE6  5056               	movf	??_verify_color^0,w,c
  1450  004DE8  0100               	movlb	0	; () banked
  1451  004DEA  6FA1               	movwf	verify_color@color2& (0+255),b
  1452  004DEC  6BA2               	clrf	(verify_color@color2+1)& (0+255),b
  1453  004DEE                     
  1454                           ; BSR set to: 0
  1455                           ;color.c: 403:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1456  004DEE  0E05               	movlw	5
  1457  004DF0  6E57               	movwf	(??_verify_color+1)^0,c
  1458  004DF2  0E0F               	movlw	15
  1459  004DF4  6E56               	movwf	??_verify_color^0,c
  1460  004DF6  0EF1               	movlw	241
  1461  004DF8                     u8447:
  1462  004DF8  2EE8               	decfsz	wreg,f,c
  1463  004DFA  D7FE               	bra	u8447
  1464  004DFC  2E56               	decfsz	??_verify_color^0,f,c
  1465  004DFE  D7FC               	bra	u8447
  1466  004E00  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1467  004E02  D7FA               	bra	u8447
  1468  004E04  F000               	nop	
  1469  004E06                     
  1470                           ;color.c: 404:     color3 = detect_color(m,w);
  1471  004E06  C09B  F080         	movff	verify_color@m,detect_color@m
  1472  004E0A  C09C  F081         	movff	verify_color@m+1,detect_color@m+1
  1473  004E0E  C09D  F082         	movff	verify_color@w,detect_color@w
  1474  004E12  C09E  F083         	movff	verify_color@w+1,detect_color@w+1
  1475  004E16  EC0A  F007         	call	_detect_color	;wreg free
  1476  004E1A  6E56               	movwf	??_verify_color^0,c
  1477  004E1C  5056               	movf	??_verify_color^0,w,c
  1478  004E1E  0100               	movlb	0	; () banked
  1479  004E20  6F9F               	movwf	verify_color@color3& (0+255),b
  1480  004E22  6BA0               	clrf	(verify_color@color3+1)& (0+255),b
  1481  004E24                     
  1482                           ; BSR set to: 0
  1483                           ;color.c: 405:     if (color == color2 && color2 == color3){return color;}
  1484  004E24  51A3               	movf	verify_color@color& (0+255),w,b
  1485  004E26  6E56               	movwf	??_verify_color^0,c
  1486  004E28  6A57               	clrf	(??_verify_color+1)^0,c
  1487  004E2A  51A1               	movf	verify_color@color2& (0+255),w,b
  1488  004E2C  1856               	xorwf	??_verify_color^0,w,c
  1489  004E2E  E107               	bnz	u8261
  1490  004E30  51A2               	movf	(verify_color@color2+1)& (0+255),w,b
  1491  004E32  1857               	xorwf	(??_verify_color+1)^0,w,c
  1492  004E34  A4D8               	btfss	status,2,c
  1493  004E36  EF1F  F027         	goto	u8261
  1494  004E3A  EF21  F027         	goto	u8260
  1495  004E3E                     u8261:
  1496  004E3E  EF30  F027         	goto	l7252
  1497  004E42                     u8260:
  1498  004E42                     
  1499                           ; BSR set to: 0
  1500  004E42  519F               	movf	verify_color@color3& (0+255),w,b
  1501  004E44  19A1               	xorwf	verify_color@color2& (0+255),w,b
  1502  004E46  E107               	bnz	u8271
  1503  004E48  51A0               	movf	(verify_color@color3+1)& (0+255),w,b
  1504  004E4A  19A2               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1505  004E4C  A4D8               	btfss	status,2,c
  1506  004E4E  EF2B  F027         	goto	u8271
  1507  004E52  EF2D  F027         	goto	u8270
  1508  004E56                     u8271:
  1509  004E56  EF30  F027         	goto	l7252
  1510  004E5A                     u8270:
  1511  004E5A                     
  1512                           ; BSR set to: 0
  1513  004E5A  51A3               	movf	verify_color@color& (0+255),w,b
  1514  004E5C  EF31  F027         	goto	l212
  1515  004E60                     l7252:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;color.c: 408:         return color;}
  1519  004E60  0E00               	movlw	0
  1520  004E62                     l212:
  1521                           
  1522                           ; BSR set to: 0
  1523  004E62  0012               	return		;funcret
  1524  004E64                     __end_of_verify_color:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _test_function *****************
  1528 ;; Defined at:
  1529 ;;		line 27 in file "color.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  test_code       1    wreg     unsigned char 
  1532 ;;  m               2  139[BANK0 ] PTR struct color_rgb
  1533 ;;		 -> main@rgb(8), 
  1534 ;;  w               2  141[BANK0 ] PTR struct white_card
  1535 ;;		 -> main@white(26), 
  1536 ;;  mL              2  143[BANK0 ] PTR struct DC_motor
  1537 ;;		 -> main@motorL(10), 
  1538 ;;  mR              2  145[BANK0 ] PTR struct DC_motor
  1539 ;;		 -> main@motorR(10), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  test_code       1    5[BANK1 ] unsigned char 
  1542 ;;  amb_light       2    0[BANK1 ] unsigned int 
  1543 ;;  stop_signal     1    4[BANK1 ] unsigned char 
  1544 ;;  color           1    3[BANK1 ] unsigned char 
  1545 ;;  complete        1    2[BANK1 ] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:       16 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 12
  1562 ;; This function calls:
  1563 ;;		_LED_C
  1564 ;;		_amb_light_measure
  1565 ;;		_calibrate_white
  1566 ;;		_color_data_collection
  1567 ;;		_color_display
  1568 ;;		_color_predict
  1569 ;;		_detect_color
  1570 ;;		_distance_measure
  1571 ;;		_fullSpeedAhead
  1572 ;;		_read_color
  1573 ;;		_stop
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text2
  1580  003DA4                     __ptext2:
  1581                           	callstack 0
  1582  003DA4                     _test_function:
  1583                           	callstack 18
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;incstack = 0
  1587                           ;test_function@test_code stored from wreg
  1588  003DA4  0101               	movlb	1	; () banked
  1589  003DA6  6FC2               	movwf	test_function@test_code& (0+255),b
  1590  003DA8                     
  1591                           ;color.c: 27: void test_function(unsigned char test_code, struct color_rgb *m, struct wh
      +                          ite_card *w, struct DC_motor *mL, struct DC_motor *mR);color.c: 28: {;color.c: 29:     u
      +                          nsigned char complete = 0;
  1592  003DA8  0E00               	movlw	0
  1593  003DAA  0101               	movlb	1	; () banked
  1594  003DAC  6FBF               	movwf	test_function@complete& (0+255),b
  1595                           
  1596                           ;color.c: 31:     unsigned char stop_signal = 0;
  1597  003DAE  0E00               	movlw	0
  1598  003DB0  6FC1               	movwf	test_function@stop_signal& (0+255),b
  1599                           
  1600                           ;color.c: 32:     unsigned int amb_light = 0;
  1601  003DB2  0E00               	movlw	0
  1602  003DB4  6FBE               	movwf	(test_function@amb_light+1)& (0+255),b
  1603  003DB6  0E00               	movlw	0
  1604  003DB8  6FBD               	movwf	test_function@amb_light& (0+255),b
  1605  003DBA                     
  1606                           ; BSR set to: 1
  1607                           ;color.c: 34:     if (test_code == 2){calibrate_white(w);}
  1608  003DBA  0E02               	movlw	2
  1609  003DBC  19C2               	xorwf	test_function@test_code& (0+255),w,b
  1610  003DBE  A4D8               	btfss	status,2,c
  1611  003DC0  EFE4  F01E         	goto	u8181
  1612  003DC4  EFE6  F01E         	goto	u8180
  1613  003DC8                     u8181:
  1614  003DC8  EFEC  F01E         	goto	l7180
  1615  003DCC                     u8180:
  1616  003DCC                     
  1617                           ; BSR set to: 1
  1618  003DCC  C0ED  F00E         	movff	test_function@w,calibrate_white@w
  1619  003DD0  C0EE  F00F         	movff	test_function@w+1,calibrate_white@w+1
  1620  003DD4  EC5C  F01A         	call	_calibrate_white	;wreg free
  1621  003DD8                     l7180:
  1622                           
  1623                           ;color.c: 35:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1624  003DD8  0E04               	movlw	4
  1625  003DDA  0101               	movlb	1	; () banked
  1626  003DDC  19C2               	xorwf	test_function@test_code& (0+255),w,b
  1627  003DDE  A4D8               	btfss	status,2,c
  1628  003DE0  EFF4  F01E         	goto	u8191
  1629  003DE4  EFF6  F01E         	goto	u8190
  1630  003DE8                     u8191:
  1631  003DE8  EF00  F01F         	goto	l7184
  1632  003DEC                     u8190:
  1633  003DEC                     
  1634                           ; BSR set to: 1
  1635  003DEC  C0EB  F07A         	movff	test_function@m,amb_light_measure@amb
  1636  003DF0  C0EC  F07B         	movff	test_function@m+1,amb_light_measure@amb+1
  1637  003DF4  EC8D  F022         	call	_amb_light_measure	;wreg free
  1638  003DF8  C07A  F1BD         	movff	?_amb_light_measure,test_function@amb_light
  1639  003DFC  C07B  F1BE         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1640  003E00                     l7184:
  1641                           
  1642                           ;color.c: 39:         if (test_code == 1){
  1643  003E00  0101               	movlb	1	; () banked
  1644  003E02  05C2               	decf	test_function@test_code& (0+255),w,b
  1645  003E04  A4D8               	btfss	status,2,c
  1646  003E06  EF07  F01F         	goto	u8201
  1647  003E0A  EF09  F01F         	goto	u8200
  1648  003E0E                     u8201:
  1649  003E0E  EF17  F01F         	goto	l7192
  1650  003E12                     u8200:
  1651  003E12                     
  1652                           ; BSR set to: 1
  1653                           ;color.c: 40:             LED_C();
  1654  003E12  EC5E  F02B         	call	_LED_C	;wreg free
  1655  003E16                     
  1656                           ;color.c: 41:             read_color(m);
  1657  003E16  C0EB  F00E         	movff	test_function@m,read_color@m
  1658  003E1A  C0EC  F00F         	movff	test_function@m+1,read_color@m+1
  1659  003E1E  EC1B  F028         	call	_read_color	;wreg free
  1660  003E22                     
  1661                           ;color.c: 42:             color_display(m);
  1662  003E22  C0EB  F079         	movff	test_function@m,color_display@m
  1663  003E26  C0EC  F07A         	movff	test_function@m+1,color_display@m+1
  1664  003E2A  EC7C  F027         	call	_color_display	;wreg free
  1665  003E2E                     l7192:
  1666                           
  1667                           ;color.c: 45:         if (test_code == 2){
  1668  003E2E  0E02               	movlw	2
  1669  003E30  0101               	movlb	1	; () banked
  1670  003E32  19C2               	xorwf	test_function@test_code& (0+255),w,b
  1671  003E34  A4D8               	btfss	status,2,c
  1672  003E36  EF1F  F01F         	goto	u8211
  1673  003E3A  EF21  F01F         	goto	u8210
  1674  003E3E                     u8211:
  1675  003E3E  EF30  F01F         	goto	l7198
  1676  003E42                     u8210:
  1677  003E42                     
  1678                           ; BSR set to: 1
  1679                           ;color.c: 46:             color = detect_color(m,w);
  1680  003E42  C0EB  F080         	movff	test_function@m,detect_color@m
  1681  003E46  C0EC  F081         	movff	test_function@m+1,detect_color@m+1
  1682  003E4A  C0ED  F082         	movff	test_function@w,detect_color@w
  1683  003E4E  C0EE  F083         	movff	test_function@w+1,detect_color@w+1
  1684  003E52  EC0A  F007         	call	_detect_color	;wreg free
  1685  003E56  0101               	movlb	1	; () banked
  1686  003E58  6FC0               	movwf	test_function@color& (0+255),b
  1687  003E5A                     
  1688                           ; BSR set to: 1
  1689                           ;color.c: 47:             color_predict(color);
  1690  003E5A  51C0               	movf	test_function@color& (0+255),w,b
  1691  003E5C  ECCB  F02A         	call	_color_predict
  1692  003E60                     l7198:
  1693                           
  1694                           ;color.c: 50:         if (test_code == 3){
  1695  003E60  0E03               	movlw	3
  1696  003E62  0101               	movlb	1	; () banked
  1697  003E64  19C2               	xorwf	test_function@test_code& (0+255),w,b
  1698  003E66  A4D8               	btfss	status,2,c
  1699  003E68  EF38  F01F         	goto	u8221
  1700  003E6C  EF3A  F01F         	goto	u8220
  1701  003E70                     u8221:
  1702  003E70  EF4D  F01F         	goto	l7208
  1703  003E74                     u8220:
  1704  003E74  EF45  F01F         	goto	l7206
  1705  003E78                     l7202:
  1706                           
  1707                           ; BSR set to: 1
  1708                           ;color.c: 52:                 color_data_collection(m);
  1709  003E78  C0EB  F0DF         	movff	test_function@m,color_data_collection@m
  1710  003E7C  C0EC  F0E0         	movff	test_function@m+1,color_data_collection@m+1
  1711  003E80  EC3F  F01C         	call	_color_data_collection	;wreg free
  1712  003E84                     
  1713                           ;color.c: 53:                 complete = 1;
  1714  003E84  0E01               	movlw	1
  1715  003E86  0101               	movlb	1	; () banked
  1716  003E88  6FBF               	movwf	test_function@complete& (0+255),b
  1717  003E8A                     l7206:
  1718                           
  1719                           ; BSR set to: 1
  1720                           ;color.c: 51:             while (complete == 0){
  1721  003E8A  51BF               	movf	test_function@complete& (0+255),w,b
  1722  003E8C  B4D8               	btfsc	status,2,c
  1723  003E8E  EF4B  F01F         	goto	u8231
  1724  003E92  EF4D  F01F         	goto	u8230
  1725  003E96                     u8231:
  1726  003E96  EF3C  F01F         	goto	l7202
  1727  003E9A                     u8230:
  1728  003E9A                     l7208:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;color.c: 57:         if (test_code == 4){
  1732  003E9A  0E04               	movlw	4
  1733  003E9C  19C2               	xorwf	test_function@test_code& (0+255),w,b
  1734  003E9E  A4D8               	btfss	status,2,c
  1735  003EA0  EF54  F01F         	goto	u8241
  1736  003EA4  EF56  F01F         	goto	u8240
  1737  003EA8                     u8241:
  1738  003EA8  EF00  F01F         	goto	l7184
  1739  003EAC                     u8240:
  1740  003EAC  EF72  F01F         	goto	l7216
  1741  003EB0                     l7212:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;color.c: 59:                 fullSpeedAhead(mL, mR);
  1745  003EB0  C0EF  F01C         	movff	test_function@mL,fullSpeedAhead@mL
  1746  003EB4  C0F0  F01D         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1747  003EB8  C0F1  F01E         	movff	test_function@mR,fullSpeedAhead@mR
  1748  003EBC  C0F2  F01F         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1749  003EC0  EC32  F027         	call	_fullSpeedAhead	;wreg free
  1750  003EC4                     
  1751                           ;color.c: 60:                 stop_signal = distance_measure(mL, mR, amb_light);
  1752  003EC4  C0EF  F07A         	movff	test_function@mL,distance_measure@mL
  1753  003EC8  C0F0  F07B         	movff	test_function@mL+1,distance_measure@mL+1
  1754  003ECC  C0F1  F07C         	movff	test_function@mR,distance_measure@mR
  1755  003ED0  C0F2  F07D         	movff	test_function@mR+1,distance_measure@mR+1
  1756  003ED4  C1BD  F07E         	movff	test_function@amb_light,distance_measure@amb_light
  1757  003ED8  C1BE  F07F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1758  003EDC  EC58  F025         	call	_distance_measure	;wreg free
  1759  003EE0  0101               	movlb	1	; () banked
  1760  003EE2  6FC1               	movwf	test_function@stop_signal& (0+255),b
  1761  003EE4                     l7216:
  1762                           
  1763                           ; BSR set to: 1
  1764                           ;color.c: 58:             while (stop_signal == 0){
  1765  003EE4  51C1               	movf	test_function@stop_signal& (0+255),w,b
  1766  003EE6  B4D8               	btfsc	status,2,c
  1767  003EE8  EF78  F01F         	goto	u8251
  1768  003EEC  EF7A  F01F         	goto	u8250
  1769  003EF0                     u8251:
  1770  003EF0  EF58  F01F         	goto	l7212
  1771  003EF4                     u8250:
  1772  003EF4                     
  1773                           ; BSR set to: 1
  1774                           ;color.c: 62:             stop(mL, mR);
  1775  003EF4  C0EF  F01C         	movff	test_function@mL,stop@mL
  1776  003EF8  C0F0  F01D         	movff	test_function@mL+1,stop@mL+1
  1777  003EFC  C0F1  F01E         	movff	test_function@mR,stop@mR
  1778  003F00  C0F2  F01F         	movff	test_function@mR+1,stop@mR+1
  1779  003F04  EC7C  F026         	call	_stop	;wreg free
  1780  003F08                     
  1781                           ;color.c: 63:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1782  003F08  0E52               	movlw	82
  1783  003F0A  0100               	movlb	0	; () banked
  1784  003F0C  6FF4               	movwf	(??_test_function+1)& (0+255),b
  1785  003F0E  0E2B               	movlw	43
  1786  003F10  6FF3               	movwf	??_test_function& (0+255),b
  1787  003F12  0E00               	movlw	0
  1788  003F14                     u8457:
  1789  003F14  2EE8               	decfsz	wreg,f,c
  1790  003F16  D7FE               	bra	u8457
  1791  003F18  2FF3               	decfsz	??_test_function& (0+255),f,b
  1792  003F1A  D7FC               	bra	u8457
  1793  003F1C  2FF4               	decfsz	(??_test_function+1)& (0+255),f,b
  1794  003F1E  D7FA               	bra	u8457
  1795  003F20  F000               	nop	
  1796  003F22                     
  1797                           ;color.c: 64:             stop_signal = 0;
  1798  003F22  0E00               	movlw	0
  1799  003F24  0101               	movlb	1	; () banked
  1800  003F26  6FC1               	movwf	test_function@stop_signal& (0+255),b
  1801  003F28  EF00  F01F         	goto	l7184
  1802  003F2C  0012               	return		;funcret
  1803  003F2E                     __end_of_test_function:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _distance_measure *****************
  1807 ;; Defined at:
  1808 ;;		line 436 in file "color.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  1811 ;;		 -> main@motorL(10), 
  1812 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  1813 ;;		 -> main@motorR(10), 
  1814 ;;  amb_light       2   30[BANK0 ] unsigned int 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  threshold       2   40[BANK0 ] unsigned int 
  1817 ;;  CC_amb          2   38[BANK0 ] unsigned int 
  1818 ;;  CG_amb          2   32[BANK0 ] unsigned int 
  1819 ;;  stop            1   42[BANK0 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      unsigned char 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1829 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;Total ram usage:       19 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 6
  1836 ;; This function calls:
  1837 ;;		_LED_C
  1838 ;;		___flmul
  1839 ;;		___xxtofl
  1840 ;;		_color_read_Clear
  1841 ;;		_color_read_Green
  1842 ;;		_lroundf
  1843 ;; This function is called by:
  1844 ;;		_test_function
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text3
  1850  004AB0                     __ptext3:
  1851                           	callstack 0
  1852  004AB0                     _distance_measure:
  1853                           	callstack 23
  1854  004AB0  0E00               	movlw	0
  1855  004AB2  0100               	movlb	0	; () banked
  1856  004AB4  6F81               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  1857  004AB6  0E00               	movlw	0
  1858  004AB8  6F80               	movwf	distance_measure@CG_amb& (0+255),b
  1859                           
  1860                           ;color.c: 439:     unsigned char stop = 0;
  1861  004ABA  0E00               	movlw	0
  1862  004ABC  6F8A               	movwf	distance_measure@stop& (0+255),b
  1863                           
  1864                           ;color.c: 440:     unsigned int threshold = 0;
  1865  004ABE  0E00               	movlw	0
  1866  004AC0  6F89               	movwf	(distance_measure@threshold+1)& (0+255),b
  1867  004AC2  0E00               	movlw	0
  1868  004AC4  6F88               	movwf	distance_measure@threshold& (0+255),b
  1869  004AC6                     
  1870                           ; BSR set to: 0
  1871                           ;color.c: 441:     LED_C();
  1872  004AC6  EC5E  F02B         	call	_LED_C	;wreg free
  1873  004ACA                     
  1874                           ;color.c: 442:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1875  004ACA  0E09               	movlw	9
  1876  004ACC  6E52               	movwf	(??_distance_measure+1)^0,c
  1877  004ACE  0E1E               	movlw	30
  1878  004AD0  6E51               	movwf	??_distance_measure^0,c
  1879  004AD2  0EE4               	movlw	228
  1880  004AD4                     u8467:
  1881  004AD4  2EE8               	decfsz	wreg,f,c
  1882  004AD6  D7FE               	bra	u8467
  1883  004AD8  2E51               	decfsz	??_distance_measure^0,f,c
  1884  004ADA  D7FC               	bra	u8467
  1885  004ADC  2E52               	decfsz	(??_distance_measure+1)^0,f,c
  1886  004ADE  D7FA               	bra	u8467
  1887  004AE0  D000               	nop2	
  1888  004AE2                     
  1889                           ;color.c: 443:     CC_amb = color_read_Clear();
  1890  004AE2  EC17  F029         	call	_color_read_Clear	;wreg free
  1891  004AE6  C007  F086         	movff	?_color_read_Clear,distance_measure@CC_amb
  1892  004AEA  C008  F087         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  1893  004AEE  ECC7  F028         	call	_color_read_Green	;wreg free
  1894  004AF2                     
  1895                           ;color.c: 445:     threshold = lroundf((float)amb_light * 1.1);
  1896  004AF2  C07E  F003         	movff	distance_measure@amb_light,___xxtofl@val
  1897  004AF6  C07F  F004         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  1898  004AFA  6A05               	clrf	(___xxtofl@val+2)^0,c
  1899  004AFC  6A06               	clrf	(___xxtofl@val+3)^0,c
  1900  004AFE  0E00               	movlw	0
  1901  004B00  ECF8  F01D         	call	___xxtofl
  1902  004B04  C003  F02A         	movff	?___xxtofl,___flmul@b
  1903  004B08  C004  F02B         	movff	?___xxtofl+1,___flmul@b+1
  1904  004B0C  C005  F02C         	movff	?___xxtofl+2,___flmul@b+2
  1905  004B10  C006  F02D         	movff	?___xxtofl+3,___flmul@b+3
  1906  004B14  0ECD               	movlw	205
  1907  004B16  6E2E               	movwf	___flmul@a^0,c
  1908  004B18  0ECC               	movlw	204
  1909  004B1A  6E2F               	movwf	(___flmul@a+1)^0,c
  1910  004B1C  0E8C               	movlw	140
  1911  004B1E  6E30               	movwf	(___flmul@a+2)^0,c
  1912  004B20  0E3F               	movlw	63
  1913  004B22  6E31               	movwf	(___flmul@a+3)^0,c
  1914  004B24  EC0B  F00F         	call	___flmul	;wreg free
  1915  004B28  C02A  F082         	movff	?___flmul,_distance_measure$3216
  1916  004B2C  C02B  F083         	movff	?___flmul+1,_distance_measure$3216+1
  1917  004B30  C02C  F084         	movff	?___flmul+2,_distance_measure$3216+2
  1918  004B34  C02D  F085         	movff	?___flmul+3,_distance_measure$3216+3
  1919  004B38                     
  1920                           ;color.c: 445:     threshold = lroundf((float)amb_light * 1.1);
  1921  004B38  C082  F076         	movff	_distance_measure$3216,lroundf@x
  1922  004B3C  C083  F077         	movff	_distance_measure$3216+1,lroundf@x+1
  1923  004B40  C084  F078         	movff	_distance_measure$3216+2,lroundf@x+2
  1924  004B44  C085  F079         	movff	_distance_measure$3216+3,lroundf@x+3
  1925  004B48  EC45  F02A         	call	_lroundf	;wreg free
  1926  004B4C  C076  F088         	movff	?_lroundf,distance_measure@threshold
  1927  004B50  C077  F089         	movff	?_lroundf+1,distance_measure@threshold+1
  1928  004B54                     
  1929                           ;color.c: 448:     if (CC_amb >= threshold){stop = 1;}
  1930  004B54  0100               	movlb	0	; () banked
  1931  004B56  5188               	movf	distance_measure@threshold& (0+255),w,b
  1932  004B58  5D86               	subwf	distance_measure@CC_amb& (0+255),w,b
  1933  004B5A  5189               	movf	(distance_measure@threshold+1)& (0+255),w,b
  1934  004B5C  5987               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  1935  004B5E  A0D8               	btfss	status,0,c
  1936  004B60  EFB4  F025         	goto	u8071
  1937  004B64  EFB6  F025         	goto	u8070
  1938  004B68                     u8071:
  1939  004B68  EFB8  F025         	goto	l219
  1940  004B6C                     u8070:
  1941  004B6C                     
  1942                           ; BSR set to: 0
  1943  004B6C  0E01               	movlw	1
  1944  004B6E  6F8A               	movwf	distance_measure@stop& (0+255),b
  1945  004B70                     l219:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;color.c: 449:     return stop;
  1949  004B70  518A               	movf	distance_measure@stop& (0+255),w,b
  1950  004B72                     
  1951                           ; BSR set to: 0
  1952  004B72  0012               	return		;funcret
  1953  004B74                     __end_of_distance_measure:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _detect_color *****************
  1957 ;; Defined at:
  1958 ;;		line 327 in file "color.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  m               2   32[BANK0 ] PTR struct color_rgb
  1961 ;;		 -> main@rgb(8), 
  1962 ;;  w               2   34[BANK0 ] PTR struct white_card
  1963 ;;		 -> main@white(26), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  BG              2   53[BANK0 ] unsigned int 
  1966 ;;  BB              2   50[BANK0 ] unsigned int 
  1967 ;;  BR              2   48[BANK0 ] unsigned int 
  1968 ;;  RR              2   46[BANK0 ] unsigned int 
  1969 ;;  GG              2   44[BANK0 ] unsigned int 
  1970 ;;  GR              2   42[BANK0 ] unsigned int 
  1971 ;;  RG              2   40[BANK0 ] unsigned int 
  1972 ;;  GB              2   38[BANK0 ] unsigned int 
  1973 ;;  RB              2   36[BANK0 ] unsigned int 
  1974 ;;  color           1   52[BANK0 ] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      unsigned char 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;      Totals:         4      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;Total ram usage:       31 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 6
  1991 ;; This function calls:
  1992 ;;		_LED_B
  1993 ;;		_LED_G
  1994 ;;		_LED_R
  1995 ;;		___fldiv
  1996 ;;		___flmul
  1997 ;;		___xxtofl
  1998 ;;		_compare
  1999 ;;		_lroundf
  2000 ;;		_read_color
  2001 ;; This function is called by:
  2002 ;;		_test_function
  2003 ;;		_verify_color
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text4
  2009  000E14                     __ptext4:
  2010                           	callstack 0
  2011  000E14                     _detect_color:
  2012                           	callstack 23
  2013  000E14  0E00               	movlw	0
  2014  000E16  0100               	movlb	0	; () banked
  2015  000E18  6F89               	movwf	(detect_color@RG+1)& (0+255),b
  2016  000E1A  0E00               	movlw	0
  2017  000E1C  6F88               	movwf	detect_color@RG& (0+255),b
  2018  000E1E  0E00               	movlw	0
  2019  000E20  6F85               	movwf	(detect_color@RB+1)& (0+255),b
  2020  000E22  0E00               	movlw	0
  2021  000E24  6F84               	movwf	detect_color@RB& (0+255),b
  2022  000E26  0E00               	movlw	0
  2023  000E28  6F8B               	movwf	(detect_color@GR+1)& (0+255),b
  2024  000E2A  0E00               	movlw	0
  2025  000E2C  6F8A               	movwf	detect_color@GR& (0+255),b
  2026  000E2E  0E00               	movlw	0
  2027  000E30  6F8D               	movwf	(detect_color@GG+1)& (0+255),b
  2028  000E32  0E00               	movlw	0
  2029  000E34  6F8C               	movwf	detect_color@GG& (0+255),b
  2030  000E36  0E00               	movlw	0
  2031  000E38  6F87               	movwf	(detect_color@GB+1)& (0+255),b
  2032  000E3A  0E00               	movlw	0
  2033  000E3C  6F86               	movwf	detect_color@GB& (0+255),b
  2034  000E3E  0E00               	movlw	0
  2035  000E40  6F91               	movwf	(detect_color@BR+1)& (0+255),b
  2036  000E42  0E00               	movlw	0
  2037  000E44  6F90               	movwf	detect_color@BR& (0+255),b
  2038  000E46  0E00               	movlw	0
  2039  000E48  6F96               	movwf	(detect_color@BG+1)& (0+255),b
  2040  000E4A  0E00               	movlw	0
  2041  000E4C  6F95               	movwf	detect_color@BG& (0+255),b
  2042  000E4E  0E00               	movlw	0
  2043  000E50  6F93               	movwf	(detect_color@BB+1)& (0+255),b
  2044  000E52  0E00               	movlw	0
  2045  000E54  6F92               	movwf	detect_color@BB& (0+255),b
  2046                           
  2047                           ;color.c: 332:     unsigned char color = 0;
  2048  000E56  0E00               	movlw	0
  2049  000E58  6F94               	movwf	detect_color@color& (0+255),b
  2050  000E5A                     
  2051                           ; BSR set to: 0
  2052                           ;color.c: 334:     LED_R();
  2053  000E5A  EC1E  F02B         	call	_LED_R	;wreg free
  2054  000E5E                     
  2055                           ;color.c: 335:     read_color(m);
  2056  000E5E  C080  F00E         	movff	detect_color@m,read_color@m
  2057  000E62  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2058  000E66  EC1B  F028         	call	_read_color	;wreg free
  2059  000E6A                     
  2060                           ;color.c: 337:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2061  000E6A  C082  FFD9         	movff	detect_color@w,fsr2l
  2062  000E6E  C083  FFDA         	movff	detect_color@w+1,fsr2h
  2063  000E72  CFDE F052          	movff	postinc2,??_detect_color
  2064  000E76  CFDD F053          	movff	postdec2,??_detect_color+1
  2065  000E7A  C052  F003         	movff	??_detect_color,___xxtofl@val
  2066  000E7E  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2067  000E82  6A05               	clrf	(___xxtofl@val+2)^0,c
  2068  000E84  6A06               	clrf	(___xxtofl@val+3)^0,c
  2069  000E86  0E00               	movlw	0
  2070  000E88  ECF8  F01D         	call	___xxtofl
  2071  000E8C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2072  000E90  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2073  000E94  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2074  000E98  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2075  000E9C  C080  FFD9         	movff	detect_color@m,fsr2l
  2076  000EA0  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2077  000EA4  CFDE F054          	movff	postinc2,??_detect_color+2
  2078  000EA8  CFDD F055          	movff	postdec2,??_detect_color+3
  2079  000EAC  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2080  000EB0  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2081  000EB4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2082  000EB6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2083  000EB8  0E00               	movlw	0
  2084  000EBA  ECF8  F01D         	call	___xxtofl
  2085  000EBE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2086  000EC2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2087  000EC6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2088  000ECA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2089  000ECE  ECF9  F012         	call	___fldiv	;wreg free
  2090  000ED2  C011  F02A         	movff	?___fldiv,___flmul@b
  2091  000ED6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2092  000EDA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2093  000EDE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2094  000EE2  0E00               	movlw	0
  2095  000EE4  6E2E               	movwf	___flmul@a^0,c
  2096  000EE6  0E00               	movlw	0
  2097  000EE8  6E2F               	movwf	(___flmul@a+1)^0,c
  2098  000EEA  0EC8               	movlw	200
  2099  000EEC  6E30               	movwf	(___flmul@a+2)^0,c
  2100  000EEE  0E42               	movlw	66
  2101  000EF0  6E31               	movwf	(___flmul@a+3)^0,c
  2102  000EF2  EC0B  F00F         	call	___flmul	;wreg free
  2103  000EF6  C02A  F097         	movff	?___flmul,_detect_color$3215
  2104  000EFA  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2105  000EFE  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2106  000F02  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2107  000F06                     
  2108                           ;color.c: 337:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2109  000F06  C097  F076         	movff	_detect_color$3215,lroundf@x
  2110  000F0A  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2111  000F0E  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2112  000F12  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2113  000F16  EC45  F02A         	call	_lroundf	;wreg free
  2114  000F1A  C076  F08E         	movff	?_lroundf,detect_color@RR
  2115  000F1E  C077  F08F         	movff	?_lroundf+1,detect_color@RR+1
  2116  000F22  0100               	movlb	0	; () banked
  2117  000F24  EE20 F002          	lfsr	2,2
  2118  000F28  5182               	movf	detect_color@w& (0+255),w,b
  2119  000F2A  26D9               	addwf	fsr2l,f,c
  2120  000F2C  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2121  000F2E  22DA               	addwfc	fsr2h,f,c
  2122  000F30  CFDE F052          	movff	postinc2,??_detect_color
  2123  000F34  CFDD F053          	movff	postdec2,??_detect_color+1
  2124  000F38  C052  F003         	movff	??_detect_color,___xxtofl@val
  2125  000F3C  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2126  000F40  6A05               	clrf	(___xxtofl@val+2)^0,c
  2127  000F42  6A06               	clrf	(___xxtofl@val+3)^0,c
  2128  000F44  0E00               	movlw	0
  2129  000F46  ECF8  F01D         	call	___xxtofl
  2130  000F4A  C003  F015         	movff	?___xxtofl,___fldiv@a
  2131  000F4E  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2132  000F52  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2133  000F56  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2134  000F5A  0100               	movlb	0	; () banked
  2135  000F5C  EE20 F002          	lfsr	2,2
  2136  000F60  5180               	movf	detect_color@m& (0+255),w,b
  2137  000F62  26D9               	addwf	fsr2l,f,c
  2138  000F64  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2139  000F66  22DA               	addwfc	fsr2h,f,c
  2140  000F68  CFDE F054          	movff	postinc2,??_detect_color+2
  2141  000F6C  CFDD F055          	movff	postdec2,??_detect_color+3
  2142  000F70  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2143  000F74  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2144  000F78  6A05               	clrf	(___xxtofl@val+2)^0,c
  2145  000F7A  6A06               	clrf	(___xxtofl@val+3)^0,c
  2146  000F7C  0E00               	movlw	0
  2147  000F7E  ECF8  F01D         	call	___xxtofl
  2148  000F82  C003  F011         	movff	?___xxtofl,___fldiv@b
  2149  000F86  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2150  000F8A  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2151  000F8E  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2152  000F92  ECF9  F012         	call	___fldiv	;wreg free
  2153  000F96  C011  F02A         	movff	?___fldiv,___flmul@b
  2154  000F9A  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2155  000F9E  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2156  000FA2  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2157  000FA6  0E00               	movlw	0
  2158  000FA8  6E2E               	movwf	___flmul@a^0,c
  2159  000FAA  0E00               	movlw	0
  2160  000FAC  6E2F               	movwf	(___flmul@a+1)^0,c
  2161  000FAE  0EC8               	movlw	200
  2162  000FB0  6E30               	movwf	(___flmul@a+2)^0,c
  2163  000FB2  0E42               	movlw	66
  2164  000FB4  6E31               	movwf	(___flmul@a+3)^0,c
  2165  000FB6  EC0B  F00F         	call	___flmul	;wreg free
  2166  000FBA  C02A  F097         	movff	?___flmul,_detect_color$3215
  2167  000FBE  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2168  000FC2  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2169  000FC6  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2170  000FCA  C097  F076         	movff	_detect_color$3215,lroundf@x
  2171  000FCE  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2172  000FD2  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2173  000FD6  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2174  000FDA  EC45  F02A         	call	_lroundf	;wreg free
  2175  000FDE  C076  F088         	movff	?_lroundf,detect_color@RG
  2176  000FE2  C077  F089         	movff	?_lroundf+1,detect_color@RG+1
  2177  000FE6  0100               	movlb	0	; () banked
  2178  000FE8  EE20 F004          	lfsr	2,4
  2179  000FEC  5182               	movf	detect_color@w& (0+255),w,b
  2180  000FEE  26D9               	addwf	fsr2l,f,c
  2181  000FF0  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2182  000FF2  22DA               	addwfc	fsr2h,f,c
  2183  000FF4  CFDE F052          	movff	postinc2,??_detect_color
  2184  000FF8  CFDD F053          	movff	postdec2,??_detect_color+1
  2185  000FFC  C052  F003         	movff	??_detect_color,___xxtofl@val
  2186  001000  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2187  001004  6A05               	clrf	(___xxtofl@val+2)^0,c
  2188  001006  6A06               	clrf	(___xxtofl@val+3)^0,c
  2189  001008  0E00               	movlw	0
  2190  00100A  ECF8  F01D         	call	___xxtofl
  2191  00100E  C003  F015         	movff	?___xxtofl,___fldiv@a
  2192  001012  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2193  001016  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2194  00101A  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2195  00101E  0100               	movlb	0	; () banked
  2196  001020  EE20 F004          	lfsr	2,4
  2197  001024  5180               	movf	detect_color@m& (0+255),w,b
  2198  001026  26D9               	addwf	fsr2l,f,c
  2199  001028  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2200  00102A  22DA               	addwfc	fsr2h,f,c
  2201  00102C  CFDE F054          	movff	postinc2,??_detect_color+2
  2202  001030  CFDD F055          	movff	postdec2,??_detect_color+3
  2203  001034  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2204  001038  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2205  00103C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2206  00103E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2207  001040  0E00               	movlw	0
  2208  001042  ECF8  F01D         	call	___xxtofl
  2209  001046  C003  F011         	movff	?___xxtofl,___fldiv@b
  2210  00104A  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2211  00104E  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2212  001052  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2213  001056  ECF9  F012         	call	___fldiv	;wreg free
  2214  00105A  C011  F02A         	movff	?___fldiv,___flmul@b
  2215  00105E  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2216  001062  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2217  001066  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2218  00106A  0E00               	movlw	0
  2219  00106C  6E2E               	movwf	___flmul@a^0,c
  2220  00106E  0E00               	movlw	0
  2221  001070  6E2F               	movwf	(___flmul@a+1)^0,c
  2222  001072  0EC8               	movlw	200
  2223  001074  6E30               	movwf	(___flmul@a+2)^0,c
  2224  001076  0E42               	movlw	66
  2225  001078  6E31               	movwf	(___flmul@a+3)^0,c
  2226  00107A  EC0B  F00F         	call	___flmul	;wreg free
  2227  00107E  C02A  F097         	movff	?___flmul,_detect_color$3215
  2228  001082  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2229  001086  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2230  00108A  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2231  00108E  C097  F076         	movff	_detect_color$3215,lroundf@x
  2232  001092  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2233  001096  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2234  00109A  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2235  00109E  EC45  F02A         	call	_lroundf	;wreg free
  2236  0010A2                     
  2237                           ;color.c: 338:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2238  0010A2  0E05               	movlw	5
  2239  0010A4  6E53               	movwf	(??_detect_color+1)^0,c
  2240  0010A6  0E0F               	movlw	15
  2241  0010A8  6E52               	movwf	??_detect_color^0,c
  2242  0010AA  0EF1               	movlw	241
  2243  0010AC                     u8477:
  2244  0010AC  2EE8               	decfsz	wreg,f,c
  2245  0010AE  D7FE               	bra	u8477
  2246  0010B0  2E52               	decfsz	??_detect_color^0,f,c
  2247  0010B2  D7FC               	bra	u8477
  2248  0010B4  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2249  0010B6  D7FA               	bra	u8477
  2250  0010B8  F000               	nop	
  2251  0010BA                     
  2252                           ;color.c: 340:     LED_G();
  2253  0010BA  EC3E  F02B         	call	_LED_G	;wreg free
  2254  0010BE                     
  2255                           ;color.c: 341:     read_color(m);
  2256  0010BE  C080  F00E         	movff	detect_color@m,read_color@m
  2257  0010C2  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2258  0010C6  EC1B  F028         	call	_read_color	;wreg free
  2259  0010CA                     
  2260                           ;color.c: 344:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2261  0010CA  0100               	movlb	0	; () banked
  2262  0010CC  EE20 F006          	lfsr	2,6
  2263  0010D0  5182               	movf	detect_color@w& (0+255),w,b
  2264  0010D2  26D9               	addwf	fsr2l,f,c
  2265  0010D4  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2266  0010D6  22DA               	addwfc	fsr2h,f,c
  2267  0010D8  CFDE F052          	movff	postinc2,??_detect_color
  2268  0010DC  CFDD F053          	movff	postdec2,??_detect_color+1
  2269  0010E0  C052  F003         	movff	??_detect_color,___xxtofl@val
  2270  0010E4  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2271  0010E8  6A05               	clrf	(___xxtofl@val+2)^0,c
  2272  0010EA  6A06               	clrf	(___xxtofl@val+3)^0,c
  2273  0010EC  0E00               	movlw	0
  2274  0010EE  ECF8  F01D         	call	___xxtofl
  2275  0010F2  C003  F015         	movff	?___xxtofl,___fldiv@a
  2276  0010F6  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2277  0010FA  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2278  0010FE  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2279  001102  C080  FFD9         	movff	detect_color@m,fsr2l
  2280  001106  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2281  00110A  CFDE F054          	movff	postinc2,??_detect_color+2
  2282  00110E  CFDD F055          	movff	postdec2,??_detect_color+3
  2283  001112  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2284  001116  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2285  00111A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2286  00111C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2287  00111E  0E00               	movlw	0
  2288  001120  ECF8  F01D         	call	___xxtofl
  2289  001124  C003  F011         	movff	?___xxtofl,___fldiv@b
  2290  001128  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2291  00112C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2292  001130  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2293  001134  ECF9  F012         	call	___fldiv	;wreg free
  2294  001138  C011  F02A         	movff	?___fldiv,___flmul@b
  2295  00113C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2296  001140  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2297  001144  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2298  001148  0E00               	movlw	0
  2299  00114A  6E2E               	movwf	___flmul@a^0,c
  2300  00114C  0E00               	movlw	0
  2301  00114E  6E2F               	movwf	(___flmul@a+1)^0,c
  2302  001150  0EC8               	movlw	200
  2303  001152  6E30               	movwf	(___flmul@a+2)^0,c
  2304  001154  0E42               	movlw	66
  2305  001156  6E31               	movwf	(___flmul@a+3)^0,c
  2306  001158  EC0B  F00F         	call	___flmul	;wreg free
  2307  00115C  C02A  F097         	movff	?___flmul,_detect_color$3215
  2308  001160  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2309  001164  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2310  001168  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2311  00116C                     
  2312                           ;color.c: 344:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2313  00116C  C097  F076         	movff	_detect_color$3215,lroundf@x
  2314  001170  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2315  001174  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2316  001178  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2317  00117C  EC45  F02A         	call	_lroundf	;wreg free
  2318  001180  C076  F08A         	movff	?_lroundf,detect_color@GR
  2319  001184  C077  F08B         	movff	?_lroundf+1,detect_color@GR+1
  2320  001188  0100               	movlb	0	; () banked
  2321  00118A  EE20 F008          	lfsr	2,8
  2322  00118E  5182               	movf	detect_color@w& (0+255),w,b
  2323  001190  26D9               	addwf	fsr2l,f,c
  2324  001192  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2325  001194  22DA               	addwfc	fsr2h,f,c
  2326  001196  CFDE F052          	movff	postinc2,??_detect_color
  2327  00119A  CFDD F053          	movff	postdec2,??_detect_color+1
  2328  00119E  C052  F003         	movff	??_detect_color,___xxtofl@val
  2329  0011A2  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2330  0011A6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2331  0011A8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2332  0011AA  0E00               	movlw	0
  2333  0011AC  ECF8  F01D         	call	___xxtofl
  2334  0011B0  C003  F015         	movff	?___xxtofl,___fldiv@a
  2335  0011B4  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2336  0011B8  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2337  0011BC  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2338  0011C0  0100               	movlb	0	; () banked
  2339  0011C2  EE20 F002          	lfsr	2,2
  2340  0011C6  5180               	movf	detect_color@m& (0+255),w,b
  2341  0011C8  26D9               	addwf	fsr2l,f,c
  2342  0011CA  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2343  0011CC  22DA               	addwfc	fsr2h,f,c
  2344  0011CE  CFDE F054          	movff	postinc2,??_detect_color+2
  2345  0011D2  CFDD F055          	movff	postdec2,??_detect_color+3
  2346  0011D6  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2347  0011DA  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2348  0011DE  6A05               	clrf	(___xxtofl@val+2)^0,c
  2349  0011E0  6A06               	clrf	(___xxtofl@val+3)^0,c
  2350  0011E2  0E00               	movlw	0
  2351  0011E4  ECF8  F01D         	call	___xxtofl
  2352  0011E8  C003  F011         	movff	?___xxtofl,___fldiv@b
  2353  0011EC  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2354  0011F0  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2355  0011F4  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2356  0011F8  ECF9  F012         	call	___fldiv	;wreg free
  2357  0011FC  C011  F02A         	movff	?___fldiv,___flmul@b
  2358  001200  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2359  001204  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2360  001208  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2361  00120C  0E00               	movlw	0
  2362  00120E  6E2E               	movwf	___flmul@a^0,c
  2363  001210  0E00               	movlw	0
  2364  001212  6E2F               	movwf	(___flmul@a+1)^0,c
  2365  001214  0EC8               	movlw	200
  2366  001216  6E30               	movwf	(___flmul@a+2)^0,c
  2367  001218  0E42               	movlw	66
  2368  00121A  6E31               	movwf	(___flmul@a+3)^0,c
  2369  00121C  EC0B  F00F         	call	___flmul	;wreg free
  2370  001220  C02A  F097         	movff	?___flmul,_detect_color$3215
  2371  001224  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2372  001228  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2373  00122C  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2374  001230  C097  F076         	movff	_detect_color$3215,lroundf@x
  2375  001234  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2376  001238  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2377  00123C  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2378  001240  EC45  F02A         	call	_lroundf	;wreg free
  2379  001244  C076  F08C         	movff	?_lroundf,detect_color@GG
  2380  001248  C077  F08D         	movff	?_lroundf+1,detect_color@GG+1
  2381  00124C  0100               	movlb	0	; () banked
  2382  00124E  EE20 F00A          	lfsr	2,10
  2383  001252  5182               	movf	detect_color@w& (0+255),w,b
  2384  001254  26D9               	addwf	fsr2l,f,c
  2385  001256  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2386  001258  22DA               	addwfc	fsr2h,f,c
  2387  00125A  CFDE F052          	movff	postinc2,??_detect_color
  2388  00125E  CFDD F053          	movff	postdec2,??_detect_color+1
  2389  001262  C052  F003         	movff	??_detect_color,___xxtofl@val
  2390  001266  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2391  00126A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2392  00126C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2393  00126E  0E00               	movlw	0
  2394  001270  ECF8  F01D         	call	___xxtofl
  2395  001274  C003  F015         	movff	?___xxtofl,___fldiv@a
  2396  001278  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2397  00127C  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2398  001280  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2399  001284  0100               	movlb	0	; () banked
  2400  001286  EE20 F004          	lfsr	2,4
  2401  00128A  5180               	movf	detect_color@m& (0+255),w,b
  2402  00128C  26D9               	addwf	fsr2l,f,c
  2403  00128E  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2404  001290  22DA               	addwfc	fsr2h,f,c
  2405  001292  CFDE F054          	movff	postinc2,??_detect_color+2
  2406  001296  CFDD F055          	movff	postdec2,??_detect_color+3
  2407  00129A  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2408  00129E  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2409  0012A2  6A05               	clrf	(___xxtofl@val+2)^0,c
  2410  0012A4  6A06               	clrf	(___xxtofl@val+3)^0,c
  2411  0012A6  0E00               	movlw	0
  2412  0012A8  ECF8  F01D         	call	___xxtofl
  2413  0012AC  C003  F011         	movff	?___xxtofl,___fldiv@b
  2414  0012B0  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2415  0012B4  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2416  0012B8  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2417  0012BC  ECF9  F012         	call	___fldiv	;wreg free
  2418  0012C0  C011  F02A         	movff	?___fldiv,___flmul@b
  2419  0012C4  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2420  0012C8  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2421  0012CC  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2422  0012D0  0E00               	movlw	0
  2423  0012D2  6E2E               	movwf	___flmul@a^0,c
  2424  0012D4  0E00               	movlw	0
  2425  0012D6  6E2F               	movwf	(___flmul@a+1)^0,c
  2426  0012D8  0EC8               	movlw	200
  2427  0012DA  6E30               	movwf	(___flmul@a+2)^0,c
  2428  0012DC  0E42               	movlw	66
  2429  0012DE  6E31               	movwf	(___flmul@a+3)^0,c
  2430  0012E0  EC0B  F00F         	call	___flmul	;wreg free
  2431  0012E4  C02A  F097         	movff	?___flmul,_detect_color$3215
  2432  0012E8  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2433  0012EC  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2434  0012F0  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2435  0012F4  C097  F076         	movff	_detect_color$3215,lroundf@x
  2436  0012F8  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2437  0012FC  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2438  001300  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2439  001304  EC45  F02A         	call	_lroundf	;wreg free
  2440  001308                     
  2441                           ;color.c: 346:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2442  001308  0E05               	movlw	5
  2443  00130A  6E53               	movwf	(??_detect_color+1)^0,c
  2444  00130C  0E0F               	movlw	15
  2445  00130E  6E52               	movwf	??_detect_color^0,c
  2446  001310  0EF1               	movlw	241
  2447  001312                     u8487:
  2448  001312  2EE8               	decfsz	wreg,f,c
  2449  001314  D7FE               	bra	u8487
  2450  001316  2E52               	decfsz	??_detect_color^0,f,c
  2451  001318  D7FC               	bra	u8487
  2452  00131A  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2453  00131C  D7FA               	bra	u8487
  2454  00131E  F000               	nop	
  2455  001320                     
  2456                           ;color.c: 348:     LED_B();
  2457  001320  EC4E  F02B         	call	_LED_B	;wreg free
  2458  001324                     
  2459                           ;color.c: 349:     read_color(m);
  2460  001324  C080  F00E         	movff	detect_color@m,read_color@m
  2461  001328  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2462  00132C  EC1B  F028         	call	_read_color	;wreg free
  2463  001330                     
  2464                           ;color.c: 350:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2465  001330  0100               	movlb	0	; () banked
  2466  001332  EE20 F00C          	lfsr	2,12
  2467  001336  5182               	movf	detect_color@w& (0+255),w,b
  2468  001338  26D9               	addwf	fsr2l,f,c
  2469  00133A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2470  00133C  22DA               	addwfc	fsr2h,f,c
  2471  00133E  CFDE F052          	movff	postinc2,??_detect_color
  2472  001342  CFDD F053          	movff	postdec2,??_detect_color+1
  2473  001346  C052  F003         	movff	??_detect_color,___xxtofl@val
  2474  00134A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2475  00134E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2476  001350  6A06               	clrf	(___xxtofl@val+3)^0,c
  2477  001352  0E00               	movlw	0
  2478  001354  ECF8  F01D         	call	___xxtofl
  2479  001358  C003  F015         	movff	?___xxtofl,___fldiv@a
  2480  00135C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2481  001360  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2482  001364  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2483  001368  C080  FFD9         	movff	detect_color@m,fsr2l
  2484  00136C  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2485  001370  CFDE F054          	movff	postinc2,??_detect_color+2
  2486  001374  CFDD F055          	movff	postdec2,??_detect_color+3
  2487  001378  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2488  00137C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2489  001380  6A05               	clrf	(___xxtofl@val+2)^0,c
  2490  001382  6A06               	clrf	(___xxtofl@val+3)^0,c
  2491  001384  0E00               	movlw	0
  2492  001386  ECF8  F01D         	call	___xxtofl
  2493  00138A  C003  F011         	movff	?___xxtofl,___fldiv@b
  2494  00138E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2495  001392  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2496  001396  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2497  00139A  ECF9  F012         	call	___fldiv	;wreg free
  2498  00139E  C011  F02A         	movff	?___fldiv,___flmul@b
  2499  0013A2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2500  0013A6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2501  0013AA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2502  0013AE  0E00               	movlw	0
  2503  0013B0  6E2E               	movwf	___flmul@a^0,c
  2504  0013B2  0E00               	movlw	0
  2505  0013B4  6E2F               	movwf	(___flmul@a+1)^0,c
  2506  0013B6  0EC8               	movlw	200
  2507  0013B8  6E30               	movwf	(___flmul@a+2)^0,c
  2508  0013BA  0E42               	movlw	66
  2509  0013BC  6E31               	movwf	(___flmul@a+3)^0,c
  2510  0013BE  EC0B  F00F         	call	___flmul	;wreg free
  2511  0013C2  C02A  F097         	movff	?___flmul,_detect_color$3215
  2512  0013C6  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2513  0013CA  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2514  0013CE  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2515  0013D2                     
  2516                           ;color.c: 350:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2517  0013D2  C097  F076         	movff	_detect_color$3215,lroundf@x
  2518  0013D6  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2519  0013DA  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2520  0013DE  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2521  0013E2  EC45  F02A         	call	_lroundf	;wreg free
  2522  0013E6  C076  F090         	movff	?_lroundf,detect_color@BR
  2523  0013EA  C077  F091         	movff	?_lroundf+1,detect_color@BR+1
  2524  0013EE  0100               	movlb	0	; () banked
  2525  0013F0  EE20 F00E          	lfsr	2,14
  2526  0013F4  5182               	movf	detect_color@w& (0+255),w,b
  2527  0013F6  26D9               	addwf	fsr2l,f,c
  2528  0013F8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2529  0013FA  22DA               	addwfc	fsr2h,f,c
  2530  0013FC  CFDE F052          	movff	postinc2,??_detect_color
  2531  001400  CFDD F053          	movff	postdec2,??_detect_color+1
  2532  001404  C052  F003         	movff	??_detect_color,___xxtofl@val
  2533  001408  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2534  00140C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2535  00140E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2536  001410  0E00               	movlw	0
  2537  001412  ECF8  F01D         	call	___xxtofl
  2538  001416  C003  F015         	movff	?___xxtofl,___fldiv@a
  2539  00141A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2540  00141E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2541  001422  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2542  001426  0100               	movlb	0	; () banked
  2543  001428  EE20 F002          	lfsr	2,2
  2544  00142C  5180               	movf	detect_color@m& (0+255),w,b
  2545  00142E  26D9               	addwf	fsr2l,f,c
  2546  001430  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2547  001432  22DA               	addwfc	fsr2h,f,c
  2548  001434  CFDE F054          	movff	postinc2,??_detect_color+2
  2549  001438  CFDD F055          	movff	postdec2,??_detect_color+3
  2550  00143C  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2551  001440  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2552  001444  6A05               	clrf	(___xxtofl@val+2)^0,c
  2553  001446  6A06               	clrf	(___xxtofl@val+3)^0,c
  2554  001448  0E00               	movlw	0
  2555  00144A  ECF8  F01D         	call	___xxtofl
  2556  00144E  C003  F011         	movff	?___xxtofl,___fldiv@b
  2557  001452  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2558  001456  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2559  00145A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2560  00145E  ECF9  F012         	call	___fldiv	;wreg free
  2561  001462  C011  F02A         	movff	?___fldiv,___flmul@b
  2562  001466  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2563  00146A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2564  00146E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2565  001472  0E00               	movlw	0
  2566  001474  6E2E               	movwf	___flmul@a^0,c
  2567  001476  0E00               	movlw	0
  2568  001478  6E2F               	movwf	(___flmul@a+1)^0,c
  2569  00147A  0EC8               	movlw	200
  2570  00147C  6E30               	movwf	(___flmul@a+2)^0,c
  2571  00147E  0E42               	movlw	66
  2572  001480  6E31               	movwf	(___flmul@a+3)^0,c
  2573  001482  EC0B  F00F         	call	___flmul	;wreg free
  2574  001486  C02A  F097         	movff	?___flmul,_detect_color$3215
  2575  00148A  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2576  00148E  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2577  001492  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2578  001496  C097  F076         	movff	_detect_color$3215,lroundf@x
  2579  00149A  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2580  00149E  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2581  0014A2  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2582  0014A6  EC45  F02A         	call	_lroundf	;wreg free
  2583  0014AA  C076  F095         	movff	?_lroundf,detect_color@BG
  2584  0014AE  C077  F096         	movff	?_lroundf+1,detect_color@BG+1
  2585  0014B2  0100               	movlb	0	; () banked
  2586  0014B4  EE20 F010          	lfsr	2,16
  2587  0014B8  5182               	movf	detect_color@w& (0+255),w,b
  2588  0014BA  26D9               	addwf	fsr2l,f,c
  2589  0014BC  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2590  0014BE  22DA               	addwfc	fsr2h,f,c
  2591  0014C0  CFDE F052          	movff	postinc2,??_detect_color
  2592  0014C4  CFDD F053          	movff	postdec2,??_detect_color+1
  2593  0014C8  C052  F003         	movff	??_detect_color,___xxtofl@val
  2594  0014CC  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2595  0014D0  6A05               	clrf	(___xxtofl@val+2)^0,c
  2596  0014D2  6A06               	clrf	(___xxtofl@val+3)^0,c
  2597  0014D4  0E00               	movlw	0
  2598  0014D6  ECF8  F01D         	call	___xxtofl
  2599  0014DA  C003  F015         	movff	?___xxtofl,___fldiv@a
  2600  0014DE  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2601  0014E2  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2602  0014E6  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2603  0014EA  0100               	movlb	0	; () banked
  2604  0014EC  EE20 F004          	lfsr	2,4
  2605  0014F0  5180               	movf	detect_color@m& (0+255),w,b
  2606  0014F2  26D9               	addwf	fsr2l,f,c
  2607  0014F4  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2608  0014F6  22DA               	addwfc	fsr2h,f,c
  2609  0014F8  CFDE F054          	movff	postinc2,??_detect_color+2
  2610  0014FC  CFDD F055          	movff	postdec2,??_detect_color+3
  2611  001500  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2612  001504  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2613  001508  6A05               	clrf	(___xxtofl@val+2)^0,c
  2614  00150A  6A06               	clrf	(___xxtofl@val+3)^0,c
  2615  00150C  0E00               	movlw	0
  2616  00150E  ECF8  F01D         	call	___xxtofl
  2617  001512  C003  F011         	movff	?___xxtofl,___fldiv@b
  2618  001516  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2619  00151A  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2620  00151E  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2621  001522  ECF9  F012         	call	___fldiv	;wreg free
  2622  001526  C011  F02A         	movff	?___fldiv,___flmul@b
  2623  00152A  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2624  00152E  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2625  001532  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2626  001536  0E00               	movlw	0
  2627  001538  6E2E               	movwf	___flmul@a^0,c
  2628  00153A  0E00               	movlw	0
  2629  00153C  6E2F               	movwf	(___flmul@a+1)^0,c
  2630  00153E  0EC8               	movlw	200
  2631  001540  6E30               	movwf	(___flmul@a+2)^0,c
  2632  001542  0E42               	movlw	66
  2633  001544  6E31               	movwf	(___flmul@a+3)^0,c
  2634  001546  EC0B  F00F         	call	___flmul	;wreg free
  2635  00154A  C02A  F097         	movff	?___flmul,_detect_color$3215
  2636  00154E  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2637  001552  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2638  001556  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2639  00155A  C097  F076         	movff	_detect_color$3215,lroundf@x
  2640  00155E  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2641  001562  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2642  001566  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2643  00156A  EC45  F02A         	call	_lroundf	;wreg free
  2644  00156E  C076  F092         	movff	?_lroundf,detect_color@BB
  2645  001572  C077  F093         	movff	?_lroundf+1,detect_color@BB+1
  2646  001576                     
  2647                           ;color.c: 351:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2648  001576  0E05               	movlw	5
  2649  001578  6E53               	movwf	(??_detect_color+1)^0,c
  2650  00157A  0E0F               	movlw	15
  2651  00157C  6E52               	movwf	??_detect_color^0,c
  2652  00157E  0EF1               	movlw	241
  2653  001580                     u8497:
  2654  001580  2EE8               	decfsz	wreg,f,c
  2655  001582  D7FE               	bra	u8497
  2656  001584  2E52               	decfsz	??_detect_color^0,f,c
  2657  001586  D7FC               	bra	u8497
  2658  001588  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2659  00158A  D7FA               	bra	u8497
  2660  00158C  F000               	nop	
  2661  00158E                     
  2662                           ;color.c: 354:     if (compare(0, BR, 70)){
  2663  00158E  0E00               	movlw	0
  2664  001590  0100               	movlb	0	; () banked
  2665  001592  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2666  001594  0E00               	movlw	0
  2667  001596  6F7A               	movwf	compare@lower& (0+255),b
  2668  001598  C090  F07C         	movff	detect_color@BR,compare@value2compare
  2669  00159C  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2670  0015A0  0E00               	movlw	0
  2671  0015A2  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2672  0015A4  0E46               	movlw	70
  2673  0015A6  6F7E               	movwf	compare@upper& (0+255),b
  2674  0015A8  EC28  F02A         	call	_compare	;wreg free
  2675  0015AC  0900               	iorlw	0
  2676  0015AE  B4D8               	btfsc	status,2,c
  2677  0015B0  EFDC  F00A         	goto	u7891
  2678  0015B4  EFDE  F00A         	goto	u7890
  2679  0015B8                     u7891:
  2680  0015B8  EF4F  F00B         	goto	l6954
  2681  0015BC                     u7890:
  2682  0015BC                     
  2683                           ;color.c: 356:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2684  0015BC  C092  F003         	movff	detect_color@BB,___xxtofl@val
  2685  0015C0  C093  F004         	movff	detect_color@BB+1,___xxtofl@val+1
  2686  0015C4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2687  0015C6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2688  0015C8  0E00               	movlw	0
  2689  0015CA  ECF8  F01D         	call	___xxtofl
  2690  0015CE  C003  F015         	movff	?___xxtofl,___fldiv@a
  2691  0015D2  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2692  0015D6  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2693  0015DA  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2694  0015DE  0100               	movlb	0	; () banked
  2695  0015E0  5195               	movf	detect_color@BG& (0+255),w,b
  2696  0015E2  258C               	addwf	detect_color@GG& (0+255),w,b
  2697  0015E4  6E52               	movwf	??_detect_color^0,c
  2698  0015E6  5196               	movf	(detect_color@BG+1)& (0+255),w,b
  2699  0015E8  218D               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2700  0015EA  6E53               	movwf	(??_detect_color+1)^0,c
  2701  0015EC  C052  F003         	movff	??_detect_color,___xxtofl@val
  2702  0015F0  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2703  0015F4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2704  0015F6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2705  0015F8  0E00               	movlw	0
  2706  0015FA  ECF8  F01D         	call	___xxtofl
  2707  0015FE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2708  001602  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2709  001606  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2710  00160A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2711  00160E  ECF9  F012         	call	___fldiv	;wreg free
  2712  001612  C011  F02A         	movff	?___fldiv,___flmul@b
  2713  001616  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2714  00161A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2715  00161E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2716  001622  0E00               	movlw	0
  2717  001624  6E2E               	movwf	___flmul@a^0,c
  2718  001626  0E00               	movlw	0
  2719  001628  6E2F               	movwf	(___flmul@a+1)^0,c
  2720  00162A  0E48               	movlw	72
  2721  00162C  6E30               	movwf	(___flmul@a+2)^0,c
  2722  00162E  0E43               	movlw	67
  2723  001630  6E31               	movwf	(___flmul@a+3)^0,c
  2724  001632  EC0B  F00F         	call	___flmul	;wreg free
  2725  001636  C02A  F097         	movff	?___flmul,_detect_color$3215
  2726  00163A  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2727  00163E  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2728  001642  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2729                           
  2730                           ;color.c: 356:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2731  001646  0E00               	movlw	0
  2732  001648  0100               	movlb	0	; () banked
  2733  00164A  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2734  00164C  0E00               	movlw	0
  2735  00164E  6F7A               	movwf	compare@lower& (0+255),b
  2736  001650  C097  F076         	movff	_detect_color$3215,lroundf@x
  2737  001654  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2738  001658  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2739  00165C  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2740  001660  EC45  F02A         	call	_lroundf	;wreg free
  2741  001664  C076  F07C         	movff	?_lroundf,compare@value2compare
  2742  001668  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2743  00166C  0E01               	movlw	1
  2744  00166E  0100               	movlb	0	; () banked
  2745  001670  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2746  001672  0E9E               	movlw	158
  2747  001674  6F7E               	movwf	compare@upper& (0+255),b
  2748  001676  EC28  F02A         	call	_compare	;wreg free
  2749  00167A  0900               	iorlw	0
  2750  00167C  B4D8               	btfsc	status,2,c
  2751  00167E  EF43  F00B         	goto	u7901
  2752  001682  EF45  F00B         	goto	u7900
  2753  001686                     u7901:
  2754  001686  EF4A  F00B         	goto	l6952
  2755  00168A                     u7900:
  2756  00168A  0E03               	movlw	3
  2757  00168C  0100               	movlb	0	; () banked
  2758  00168E  6F94               	movwf	detect_color@color& (0+255),b
  2759  001690  EF30  F00C         	goto	l6984
  2760  001694                     l6952:
  2761  001694  0E02               	movlw	2
  2762  001696  0100               	movlb	0	; () banked
  2763  001698  6F94               	movwf	detect_color@color& (0+255),b
  2764  00169A  EF30  F00C         	goto	l6984
  2765  00169E                     l6954:
  2766                           
  2767                           ;color.c: 360:         if (compare(0, BG, 75)){
  2768  00169E  0E00               	movlw	0
  2769  0016A0  0100               	movlb	0	; () banked
  2770  0016A2  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2771  0016A4  0E00               	movlw	0
  2772  0016A6  6F7A               	movwf	compare@lower& (0+255),b
  2773  0016A8  C095  F07C         	movff	detect_color@BG,compare@value2compare
  2774  0016AC  C096  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2775  0016B0  0E00               	movlw	0
  2776  0016B2  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2777  0016B4  0E4B               	movlw	75
  2778  0016B6  6F7E               	movwf	compare@upper& (0+255),b
  2779  0016B8  EC28  F02A         	call	_compare	;wreg free
  2780  0016BC  0900               	iorlw	0
  2781  0016BE  B4D8               	btfsc	status,2,c
  2782  0016C0  EF64  F00B         	goto	u7911
  2783  0016C4  EF66  F00B         	goto	u7910
  2784  0016C8                     u7911:
  2785  0016C8  EFE0  F00B         	goto	l6966
  2786  0016CC                     u7910:
  2787  0016CC                     
  2788                           ;color.c: 362:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2789  0016CC  C088  F003         	movff	detect_color@RG,___xxtofl@val
  2790  0016D0  C089  F004         	movff	detect_color@RG+1,___xxtofl@val+1
  2791  0016D4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2792  0016D6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2793  0016D8  0E00               	movlw	0
  2794  0016DA  ECF8  F01D         	call	___xxtofl
  2795  0016DE  C003  F015         	movff	?___xxtofl,___fldiv@a
  2796  0016E2  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2797  0016E6  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2798  0016EA  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2799  0016EE  C08E  F003         	movff	detect_color@RR,___xxtofl@val
  2800  0016F2  C08F  F004         	movff	detect_color@RR+1,___xxtofl@val+1
  2801  0016F6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2802  0016F8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2803  0016FA  0E00               	movlw	0
  2804  0016FC  ECF8  F01D         	call	___xxtofl
  2805  001700  C003  F011         	movff	?___xxtofl,___fldiv@b
  2806  001704  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2807  001708  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2808  00170C  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2809  001710  ECF9  F012         	call	___fldiv	;wreg free
  2810  001714  C011  F02A         	movff	?___fldiv,___flmul@b
  2811  001718  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2812  00171C  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2813  001720  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2814  001724  0E00               	movlw	0
  2815  001726  6E2E               	movwf	___flmul@a^0,c
  2816  001728  0E00               	movlw	0
  2817  00172A  6E2F               	movwf	(___flmul@a+1)^0,c
  2818  00172C  0EFA               	movlw	250
  2819  00172E  6E30               	movwf	(___flmul@a+2)^0,c
  2820  001730  0E43               	movlw	67
  2821  001732  6E31               	movwf	(___flmul@a+3)^0,c
  2822  001734  EC0B  F00F         	call	___flmul	;wreg free
  2823  001738  C02A  F097         	movff	?___flmul,_detect_color$3215
  2824  00173C  C02B  F098         	movff	?___flmul+1,_detect_color$3215+1
  2825  001740  C02C  F099         	movff	?___flmul+2,_detect_color$3215+2
  2826  001744  C02D  F09A         	movff	?___flmul+3,_detect_color$3215+3
  2827                           
  2828                           ;color.c: 362:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2829  001748  0E00               	movlw	0
  2830  00174A  0100               	movlb	0	; () banked
  2831  00174C  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2832  00174E  0E00               	movlw	0
  2833  001750  6F7A               	movwf	compare@lower& (0+255),b
  2834  001752  C097  F076         	movff	_detect_color$3215,lroundf@x
  2835  001756  C098  F077         	movff	_detect_color$3215+1,lroundf@x+1
  2836  00175A  C099  F078         	movff	_detect_color$3215+2,lroundf@x+2
  2837  00175E  C09A  F079         	movff	_detect_color$3215+3,lroundf@x+3
  2838  001762  EC45  F02A         	call	_lroundf	;wreg free
  2839  001766  C076  F07C         	movff	?_lroundf,compare@value2compare
  2840  00176A  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2841  00176E  0E02               	movlw	2
  2842  001770  0100               	movlb	0	; () banked
  2843  001772  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2844  001774  0E9E               	movlw	158
  2845  001776  6F7E               	movwf	compare@upper& (0+255),b
  2846  001778  EC28  F02A         	call	_compare	;wreg free
  2847  00177C  0900               	iorlw	0
  2848  00177E  B4D8               	btfsc	status,2,c
  2849  001780  EFC4  F00B         	goto	u7921
  2850  001784  EFC6  F00B         	goto	u7920
  2851  001788                     u7921:
  2852  001788  EFDB  F00B         	goto	l6964
  2853  00178C                     u7920:
  2854  00178C                     
  2855                           ;color.c: 363:                 if (GR > 90){color = 6;}
  2856  00178C  0100               	movlb	0	; () banked
  2857  00178E  518B               	movf	(detect_color@GR+1)& (0+255),w,b
  2858  001790  E109               	bnz	u7930
  2859  001792  0E5B               	movlw	91
  2860  001794  5D8A               	subwf	detect_color@GR& (0+255),w,b
  2861  001796  A0D8               	btfss	status,0,c
  2862  001798  EFD0  F00B         	goto	u7931
  2863  00179C  EFD2  F00B         	goto	u7930
  2864  0017A0                     u7931:
  2865  0017A0  EFD6  F00B         	goto	l6962
  2866  0017A4                     u7930:
  2867  0017A4                     
  2868                           ; BSR set to: 0
  2869  0017A4  0E06               	movlw	6
  2870  0017A6  6F94               	movwf	detect_color@color& (0+255),b
  2871  0017A8  EF30  F00C         	goto	l6984
  2872  0017AC                     l6962:
  2873  0017AC  0E00               	movlw	0
  2874  0017AE  0100               	movlb	0	; () banked
  2875  0017B0  6F94               	movwf	detect_color@color& (0+255),b
  2876  0017B2  EF30  F00C         	goto	l6984
  2877  0017B6                     l6964:
  2878  0017B6  0E01               	movlw	1
  2879  0017B8  0100               	movlb	0	; () banked
  2880  0017BA  6F94               	movwf	detect_color@color& (0+255),b
  2881  0017BC  EF30  F00C         	goto	l6984
  2882  0017C0                     l6966:
  2883                           
  2884                           ;color.c: 369:             if (compare(0, BR, 90)){
  2885  0017C0  0E00               	movlw	0
  2886  0017C2  0100               	movlb	0	; () banked
  2887  0017C4  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2888  0017C6  0E00               	movlw	0
  2889  0017C8  6F7A               	movwf	compare@lower& (0+255),b
  2890  0017CA  C090  F07C         	movff	detect_color@BR,compare@value2compare
  2891  0017CE  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2892  0017D2  0E00               	movlw	0
  2893  0017D4  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2894  0017D6  0E5A               	movlw	90
  2895  0017D8  6F7E               	movwf	compare@upper& (0+255),b
  2896  0017DA  EC28  F02A         	call	_compare	;wreg free
  2897  0017DE  0900               	iorlw	0
  2898  0017E0  B4D8               	btfsc	status,2,c
  2899  0017E2  EFF5  F00B         	goto	u7941
  2900  0017E6  EFF7  F00B         	goto	u7940
  2901  0017EA                     u7941:
  2902  0017EA  EF07  F00C         	goto	l6974
  2903  0017EE                     u7940:
  2904  0017EE                     
  2905                           ;color.c: 370:                 if (BG > 90){color = 7;}
  2906  0017EE  0100               	movlb	0	; () banked
  2907  0017F0  5196               	movf	(detect_color@BG+1)& (0+255),w,b
  2908  0017F2  E109               	bnz	u7950
  2909  0017F4  0E5B               	movlw	91
  2910  0017F6  5D95               	subwf	detect_color@BG& (0+255),w,b
  2911  0017F8  A0D8               	btfss	status,0,c
  2912  0017FA  EF01  F00C         	goto	u7951
  2913  0017FE  EF03  F00C         	goto	u7950
  2914  001802                     u7951:
  2915  001802  EFD6  F00B         	goto	l6962
  2916  001806                     u7950:
  2917  001806                     
  2918                           ; BSR set to: 0
  2919  001806  0E07               	movlw	7
  2920  001808  6F94               	movwf	detect_color@color& (0+255),b
  2921  00180A  EF30  F00C         	goto	l6984
  2922  00180E                     l6974:
  2923                           
  2924                           ;color.c: 374:                 if (BG < BB){color = 5;}
  2925  00180E  0100               	movlb	0	; () banked
  2926  001810  5192               	movf	detect_color@BB& (0+255),w,b
  2927  001812  5D95               	subwf	detect_color@BG& (0+255),w,b
  2928  001814  5193               	movf	(detect_color@BB+1)& (0+255),w,b
  2929  001816  5996               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2930  001818  B0D8               	btfsc	status,0,c
  2931  00181A  EF11  F00C         	goto	u7961
  2932  00181E  EF13  F00C         	goto	u7960
  2933  001822                     u7961:
  2934  001822  EF17  F00C         	goto	l6978
  2935  001826                     u7960:
  2936  001826                     
  2937                           ; BSR set to: 0
  2938  001826  0E05               	movlw	5
  2939  001828  6F94               	movwf	detect_color@color& (0+255),b
  2940  00182A  EF30  F00C         	goto	l6984
  2941  00182E                     l6978:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;color.c: 376:                     if (compare(0, BB, 90)){color = 4;}
  2945  00182E  0E00               	movlw	0
  2946  001830  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2947  001832  0E00               	movlw	0
  2948  001834  6F7A               	movwf	compare@lower& (0+255),b
  2949  001836  C092  F07C         	movff	detect_color@BB,compare@value2compare
  2950  00183A  C093  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2951  00183E  0E00               	movlw	0
  2952  001840  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2953  001842  0E5A               	movlw	90
  2954  001844  6F7E               	movwf	compare@upper& (0+255),b
  2955  001846  EC28  F02A         	call	_compare	;wreg free
  2956  00184A  0900               	iorlw	0
  2957  00184C  B4D8               	btfsc	status,2,c
  2958  00184E  EF2B  F00C         	goto	u7971
  2959  001852  EF2D  F00C         	goto	u7970
  2960  001856                     u7971:
  2961  001856  EFD6  F00B         	goto	l6962
  2962  00185A                     u7970:
  2963  00185A  0E04               	movlw	4
  2964  00185C  0100               	movlb	0	; () banked
  2965  00185E  6F94               	movwf	detect_color@color& (0+255),b
  2966  001860                     l6984:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;color.c: 383:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  2970  001860  0E00               	movlw	0
  2971  001862  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2972  001864  0E5F               	movlw	95
  2973  001866  6F7A               	movwf	compare@lower& (0+255),b
  2974  001868  C090  F07C         	movff	detect_color@BR,compare@value2compare
  2975  00186C  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2976  001870  0E00               	movlw	0
  2977  001872  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2978  001874  0E69               	movlw	105
  2979  001876  6F7E               	movwf	compare@upper& (0+255),b
  2980  001878  EC28  F02A         	call	_compare	;wreg free
  2981  00187C  0900               	iorlw	0
  2982  00187E  B4D8               	btfsc	status,2,c
  2983  001880  EF44  F00C         	goto	u7981
  2984  001884  EF46  F00C         	goto	u7980
  2985  001888                     u7981:
  2986  001888  EF77  F00C         	goto	l6992
  2987  00188C                     u7980:
  2988  00188C  0E00               	movlw	0
  2989  00188E  0100               	movlb	0	; () banked
  2990  001890  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2991  001892  0E5F               	movlw	95
  2992  001894  6F7A               	movwf	compare@lower& (0+255),b
  2993  001896  C095  F07C         	movff	detect_color@BG,compare@value2compare
  2994  00189A  C096  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2995  00189E  0E00               	movlw	0
  2996  0018A0  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2997  0018A2  0E69               	movlw	105
  2998  0018A4  6F7E               	movwf	compare@upper& (0+255),b
  2999  0018A6  EC28  F02A         	call	_compare	;wreg free
  3000  0018AA  0900               	iorlw	0
  3001  0018AC  B4D8               	btfsc	status,2,c
  3002  0018AE  EF5B  F00C         	goto	u7991
  3003  0018B2  EF5D  F00C         	goto	u7990
  3004  0018B6                     u7991:
  3005  0018B6  EF77  F00C         	goto	l6992
  3006  0018BA                     u7990:
  3007  0018BA  0E00               	movlw	0
  3008  0018BC  0100               	movlb	0	; () banked
  3009  0018BE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3010  0018C0  0E5F               	movlw	95
  3011  0018C2  6F7A               	movwf	compare@lower& (0+255),b
  3012  0018C4  C092  F07C         	movff	detect_color@BB,compare@value2compare
  3013  0018C8  C093  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  3014  0018CC  0E00               	movlw	0
  3015  0018CE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3016  0018D0  0E69               	movlw	105
  3017  0018D2  6F7E               	movwf	compare@upper& (0+255),b
  3018  0018D4  EC28  F02A         	call	_compare	;wreg free
  3019  0018D8  0900               	iorlw	0
  3020  0018DA  B4D8               	btfsc	status,2,c
  3021  0018DC  EF72  F00C         	goto	u8001
  3022  0018E0  EF74  F00C         	goto	u8000
  3023  0018E4                     u8001:
  3024  0018E4  EF77  F00C         	goto	l6992
  3025  0018E8                     u8000:
  3026  0018E8  0E08               	movlw	8
  3027  0018EA  0100               	movlb	0	; () banked
  3028  0018EC  6F94               	movwf	detect_color@color& (0+255),b
  3029  0018EE                     l6992:
  3030                           
  3031                           ;color.c: 384:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3032  0018EE  0E00               	movlw	0
  3033  0018F0  0100               	movlb	0	; () banked
  3034  0018F2  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3035  0018F4  0E00               	movlw	0
  3036  0018F6  6F7A               	movwf	compare@lower& (0+255),b
  3037  0018F8  C090  F07C         	movff	detect_color@BR,compare@value2compare
  3038  0018FC  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  3039  001900  0E00               	movlw	0
  3040  001902  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3041  001904  0E19               	movlw	25
  3042  001906  6F7E               	movwf	compare@upper& (0+255),b
  3043  001908  EC28  F02A         	call	_compare	;wreg free
  3044  00190C  0900               	iorlw	0
  3045  00190E  B4D8               	btfsc	status,2,c
  3046  001910  EF8C  F00C         	goto	u8011
  3047  001914  EF8E  F00C         	goto	u8010
  3048  001918                     u8011:
  3049  001918  EFA8  F00C         	goto	l203
  3050  00191C                     u8010:
  3051  00191C  0E00               	movlw	0
  3052  00191E  0100               	movlb	0	; () banked
  3053  001920  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3054  001922  0E00               	movlw	0
  3055  001924  6F7A               	movwf	compare@lower& (0+255),b
  3056  001926  C08E  F07C         	movff	detect_color@RR,compare@value2compare
  3057  00192A  C08F  F07D         	movff	detect_color@RR+1,compare@value2compare+1
  3058  00192E  0E00               	movlw	0
  3059  001930  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3060  001932  0E5A               	movlw	90
  3061  001934  6F7E               	movwf	compare@upper& (0+255),b
  3062  001936  EC28  F02A         	call	_compare	;wreg free
  3063  00193A  0900               	iorlw	0
  3064  00193C  B4D8               	btfsc	status,2,c
  3065  00193E  EFA3  F00C         	goto	u8021
  3066  001942  EFA5  F00C         	goto	u8020
  3067  001946                     u8021:
  3068  001946  EFA8  F00C         	goto	l203
  3069  00194A                     u8020:
  3070  00194A  0E00               	movlw	0
  3071  00194C  0100               	movlb	0	; () banked
  3072  00194E  6F94               	movwf	detect_color@color& (0+255),b
  3073  001950                     l203:
  3074                           
  3075                           ;color.c: 387:     return color;
  3076  001950  0100               	movlb	0	; () banked
  3077  001952  5194               	movf	detect_color@color& (0+255),w,b
  3078  001954                     
  3079                           ; BSR set to: 0
  3080  001954  0012               	return		;funcret
  3081  001956                     __end_of_detect_color:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _compare *****************
  3085 ;; Defined at:
  3086 ;;		line 390 in file "color.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  lower           2   26[BANK0 ] unsigned int 
  3089 ;;  value2compar    2   28[BANK0 ] unsigned int 
  3090 ;;  upper           2   30[BANK0 ] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  result          1   80[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3102 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;Total ram usage:        7 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 2
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_detect_color
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text5
  3117  005450                     __ptext5:
  3118                           	callstack 0
  3119  005450                     _compare:
  3120                           	callstack 26
  3121  005450                     
  3122                           ;color.c: 390: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 391: {;color.c: 392:     unsigned char result = 0;
  3123  005450  0E00               	movlw	0
  3124  005452  6E51               	movwf	compare@result^0,c
  3125  005454                     
  3126                           ;color.c: 393:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3127  005454  0100               	movlb	0	; () banked
  3128  005456  517C               	movf	compare@value2compare& (0+255),w,b
  3129  005458  5D7A               	subwf	compare@lower& (0+255),w,b
  3130  00545A  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  3131  00545C  597B               	subwfb	(compare@lower+1)& (0+255),w,b
  3132  00545E  B0D8               	btfsc	status,0,c
  3133  005460  EF34  F02A         	goto	u7421
  3134  005464  EF36  F02A         	goto	u7420
  3135  005468                     u7421:
  3136  005468  EF43  F02A         	goto	l207
  3137  00546C                     u7420:
  3138  00546C                     
  3139                           ; BSR set to: 0
  3140  00546C  517C               	movf	compare@value2compare& (0+255),w,b
  3141  00546E  5D7E               	subwf	compare@upper& (0+255),w,b
  3142  005470  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  3143  005472  597F               	subwfb	(compare@upper+1)& (0+255),w,b
  3144  005474  A0D8               	btfss	status,0,c
  3145  005476  EF3F  F02A         	goto	u7431
  3146  00547A  EF41  F02A         	goto	u7430
  3147  00547E                     u7431:
  3148  00547E  EF43  F02A         	goto	l207
  3149  005482                     u7430:
  3150  005482                     
  3151                           ; BSR set to: 0
  3152  005482  0E01               	movlw	1
  3153  005484  6E51               	movwf	compare@result^0,c
  3154  005486                     l207:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;color.c: 394:     return result;
  3158  005486  5051               	movf	compare@result^0,w,c
  3159  005488                     
  3160                           ; BSR set to: 0
  3161  005488  0012               	return		;funcret
  3162  00548A                     __end_of_compare:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _color_data_collection *****************
  3166 ;; Defined at:
  3167 ;;		line 240 in file "color.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  m               2  127[BANK0 ] PTR struct color_rgb
  3170 ;;		 -> main@rgb(8), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  x               2  137[BANK0 ] int 
  3173 ;;  k               2  135[BANK0 ] int 
  3174 ;;  j               2  133[BANK0 ] int 
  3175 ;;  i               2  131[BANK0 ] int 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;Total ram usage:       12 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 11
  3192 ;; This function calls:
  3193 ;;		_LED_B
  3194 ;;		_LED_C
  3195 ;;		_LED_G
  3196 ;;		_LED_R
  3197 ;;		_color_display
  3198 ;;		_color_predict
  3199 ;;		_read_color
  3200 ;; This function is called by:
  3201 ;;		_test_function
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text6
  3206  00387E                     __ptext6:
  3207                           	callstack 0
  3208  00387E                     _color_data_collection:
  3209                           	callstack 18
  3210  00387E                     
  3211                           ;color.c: 242:     int i = 0; int j = 0; int k = 0; int x = 0;
  3212  00387E  0E00               	movlw	0
  3213  003880  0100               	movlb	0	; () banked
  3214  003882  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3215  003884  0E00               	movlw	0
  3216  003886  6FE3               	movwf	color_data_collection@i& (0+255),b
  3217  003888  0E00               	movlw	0
  3218  00388A  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3219  00388C  0E00               	movlw	0
  3220  00388E  6FE7               	movwf	color_data_collection@k& (0+255),b
  3221  003890  0E00               	movlw	0
  3222  003892  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3223  003894  0E00               	movlw	0
  3224  003896  6FE9               	movwf	color_data_collection@x& (0+255),b
  3225                           
  3226                           ;color.c: 243:     for (i = 0; i <5; ++i){
  3227  003898  0E00               	movlw	0
  3228  00389A  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3229  00389C  0E00               	movlw	0
  3230  00389E  6FE3               	movwf	color_data_collection@i& (0+255),b
  3231  0038A0                     l7006:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;color.c: 244:         LED_C();
  3235  0038A0  EC5E  F02B         	call	_LED_C	;wreg free
  3236  0038A4                     
  3237                           ;color.c: 245:         read_color(m);
  3238  0038A4  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3239  0038A8  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3240  0038AC  EC1B  F028         	call	_read_color	;wreg free
  3241  0038B0                     
  3242                           ;color.c: 246:         color_display(m);
  3243  0038B0  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3244  0038B4  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3245  0038B8  EC7C  F027         	call	_color_display	;wreg free
  3246  0038BC                     
  3247                           ;color.c: 247:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3248  0038BC  0E09               	movlw	9
  3249  0038BE  0100               	movlb	0	; () banked
  3250  0038C0  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3251  0038C2  0E1E               	movlw	30
  3252  0038C4  6FE1               	movwf	??_color_data_collection& (0+255),b
  3253  0038C6  0EE4               	movlw	228
  3254  0038C8                     u8507:
  3255  0038C8  2EE8               	decfsz	wreg,f,c
  3256  0038CA  D7FE               	bra	u8507
  3257  0038CC  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3258  0038CE  D7FC               	bra	u8507
  3259  0038D0  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3260  0038D2  D7FA               	bra	u8507
  3261  0038D4  F000               	nop	
  3262  0038D6                     
  3263                           ;color.c: 248:     }
  3264  0038D6  0100               	movlb	0	; () banked
  3265  0038D8  4BE3               	infsnz	color_data_collection@i& (0+255),f,b
  3266  0038DA  2BE4               	incf	(color_data_collection@i+1)& (0+255),f,b
  3267  0038DC                     
  3268                           ; BSR set to: 0
  3269  0038DC  BFE4               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3270  0038DE  EF7A  F01C         	goto	u8031
  3271  0038E2  51E4               	movf	(color_data_collection@i+1)& (0+255),w,b
  3272  0038E4  E109               	bnz	u8030
  3273  0038E6  0E05               	movlw	5
  3274  0038E8  5DE3               	subwf	color_data_collection@i& (0+255),w,b
  3275  0038EA  A0D8               	btfss	status,0,c
  3276  0038EC  EF7A  F01C         	goto	u8031
  3277  0038F0  EF7C  F01C         	goto	u8030
  3278  0038F4                     u8031:
  3279  0038F4  EF50  F01C         	goto	l7006
  3280  0038F8                     u8030:
  3281  0038F8                     
  3282                           ; BSR set to: 0
  3283                           ;color.c: 249:     color_predict(00000);
  3284  0038F8  0E00               	movlw	0
  3285  0038FA  ECCB  F02A         	call	_color_predict
  3286  0038FE                     
  3287                           ;color.c: 250:     for (j = 0; j < 5; ++j){
  3288  0038FE  0E00               	movlw	0
  3289  003900  0100               	movlb	0	; () banked
  3290  003902  6FE6               	movwf	(color_data_collection@j+1)& (0+255),b
  3291  003904  0E00               	movlw	0
  3292  003906  6FE5               	movwf	color_data_collection@j& (0+255),b
  3293  003908                     l7026:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;color.c: 251:         LED_R();
  3297  003908  EC1E  F02B         	call	_LED_R	;wreg free
  3298  00390C                     
  3299                           ;color.c: 252:         read_color(m);
  3300  00390C  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3301  003910  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3302  003914  EC1B  F028         	call	_read_color	;wreg free
  3303  003918                     
  3304                           ;color.c: 253:         color_display(m);
  3305  003918  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3306  00391C  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3307  003920  EC7C  F027         	call	_color_display	;wreg free
  3308  003924                     
  3309                           ;color.c: 254:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3310  003924  0E09               	movlw	9
  3311  003926  0100               	movlb	0	; () banked
  3312  003928  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3313  00392A  0E1E               	movlw	30
  3314  00392C  6FE1               	movwf	??_color_data_collection& (0+255),b
  3315  00392E  0EE4               	movlw	228
  3316  003930                     u8517:
  3317  003930  2EE8               	decfsz	wreg,f,c
  3318  003932  D7FE               	bra	u8517
  3319  003934  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3320  003936  D7FC               	bra	u8517
  3321  003938  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3322  00393A  D7FA               	bra	u8517
  3323  00393C  F000               	nop	
  3324  00393E                     
  3325                           ;color.c: 255:     }
  3326  00393E  0100               	movlb	0	; () banked
  3327  003940  4BE5               	infsnz	color_data_collection@j& (0+255),f,b
  3328  003942  2BE6               	incf	(color_data_collection@j+1)& (0+255),f,b
  3329  003944                     
  3330                           ; BSR set to: 0
  3331  003944  BFE6               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3332  003946  EFAE  F01C         	goto	u8041
  3333  00394A  51E6               	movf	(color_data_collection@j+1)& (0+255),w,b
  3334  00394C  E109               	bnz	u8040
  3335  00394E  0E05               	movlw	5
  3336  003950  5DE5               	subwf	color_data_collection@j& (0+255),w,b
  3337  003952  A0D8               	btfss	status,0,c
  3338  003954  EFAE  F01C         	goto	u8041
  3339  003958  EFB0  F01C         	goto	u8040
  3340  00395C                     u8041:
  3341  00395C  EF84  F01C         	goto	l7026
  3342  003960                     u8040:
  3343  003960                     
  3344                           ; BSR set to: 0
  3345                           ;color.c: 256:     color_predict(00000);
  3346  003960  0E00               	movlw	0
  3347  003962  ECCB  F02A         	call	_color_predict
  3348  003966                     
  3349                           ;color.c: 257:     for (k = 0; k < 5; ++k){
  3350  003966  0E00               	movlw	0
  3351  003968  0100               	movlb	0	; () banked
  3352  00396A  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3353  00396C  0E00               	movlw	0
  3354  00396E  6FE7               	movwf	color_data_collection@k& (0+255),b
  3355  003970                     l7046:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;color.c: 258:         LED_G();
  3359  003970  EC3E  F02B         	call	_LED_G	;wreg free
  3360  003974                     
  3361                           ;color.c: 259:         read_color(m);
  3362  003974  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3363  003978  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3364  00397C  EC1B  F028         	call	_read_color	;wreg free
  3365  003980                     
  3366                           ;color.c: 260:         color_display(m);
  3367  003980  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3368  003984  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3369  003988  EC7C  F027         	call	_color_display	;wreg free
  3370  00398C                     
  3371                           ;color.c: 261:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3372  00398C  0E09               	movlw	9
  3373  00398E  0100               	movlb	0	; () banked
  3374  003990  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3375  003992  0E1E               	movlw	30
  3376  003994  6FE1               	movwf	??_color_data_collection& (0+255),b
  3377  003996  0EE4               	movlw	228
  3378  003998                     u8527:
  3379  003998  2EE8               	decfsz	wreg,f,c
  3380  00399A  D7FE               	bra	u8527
  3381  00399C  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3382  00399E  D7FC               	bra	u8527
  3383  0039A0  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3384  0039A2  D7FA               	bra	u8527
  3385  0039A4  F000               	nop	
  3386  0039A6                     
  3387                           ;color.c: 262:     }
  3388  0039A6  0100               	movlb	0	; () banked
  3389  0039A8  4BE7               	infsnz	color_data_collection@k& (0+255),f,b
  3390  0039AA  2BE8               	incf	(color_data_collection@k+1)& (0+255),f,b
  3391  0039AC                     
  3392                           ; BSR set to: 0
  3393  0039AC  BFE8               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3394  0039AE  EFE2  F01C         	goto	u8051
  3395  0039B2  51E8               	movf	(color_data_collection@k+1)& (0+255),w,b
  3396  0039B4  E109               	bnz	u8050
  3397  0039B6  0E05               	movlw	5
  3398  0039B8  5DE7               	subwf	color_data_collection@k& (0+255),w,b
  3399  0039BA  A0D8               	btfss	status,0,c
  3400  0039BC  EFE2  F01C         	goto	u8051
  3401  0039C0  EFE4  F01C         	goto	u8050
  3402  0039C4                     u8051:
  3403  0039C4  EFB8  F01C         	goto	l7046
  3404  0039C8                     u8050:
  3405  0039C8                     
  3406                           ; BSR set to: 0
  3407                           ;color.c: 263:     color_predict(00000);
  3408  0039C8  0E00               	movlw	0
  3409  0039CA  ECCB  F02A         	call	_color_predict
  3410  0039CE                     
  3411                           ;color.c: 264:     for (x = 0; x < 5; ++x){
  3412  0039CE  0E00               	movlw	0
  3413  0039D0  0100               	movlb	0	; () banked
  3414  0039D2  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3415  0039D4  0E00               	movlw	0
  3416  0039D6  6FE9               	movwf	color_data_collection@x& (0+255),b
  3417  0039D8                     l7066:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;color.c: 265:         LED_B();
  3421  0039D8  EC4E  F02B         	call	_LED_B	;wreg free
  3422  0039DC                     
  3423                           ;color.c: 266:         read_color(m);
  3424  0039DC  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3425  0039E0  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3426  0039E4  EC1B  F028         	call	_read_color	;wreg free
  3427  0039E8                     
  3428                           ;color.c: 267:         color_display(m);
  3429  0039E8  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3430  0039EC  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3431  0039F0  EC7C  F027         	call	_color_display	;wreg free
  3432  0039F4                     
  3433                           ;color.c: 268:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3434  0039F4  0E09               	movlw	9
  3435  0039F6  0100               	movlb	0	; () banked
  3436  0039F8  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3437  0039FA  0E1E               	movlw	30
  3438  0039FC  6FE1               	movwf	??_color_data_collection& (0+255),b
  3439  0039FE  0EE4               	movlw	228
  3440  003A00                     u8537:
  3441  003A00  2EE8               	decfsz	wreg,f,c
  3442  003A02  D7FE               	bra	u8537
  3443  003A04  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3444  003A06  D7FC               	bra	u8537
  3445  003A08  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3446  003A0A  D7FA               	bra	u8537
  3447  003A0C  F000               	nop	
  3448  003A0E                     
  3449                           ;color.c: 269:     }
  3450  003A0E  0100               	movlb	0	; () banked
  3451  003A10  4BE9               	infsnz	color_data_collection@x& (0+255),f,b
  3452  003A12  2BEA               	incf	(color_data_collection@x+1)& (0+255),f,b
  3453  003A14                     
  3454                           ; BSR set to: 0
  3455  003A14  BFEA               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3456  003A16  EF16  F01D         	goto	u8061
  3457  003A1A  51EA               	movf	(color_data_collection@x+1)& (0+255),w,b
  3458  003A1C  E109               	bnz	u8060
  3459  003A1E  0E05               	movlw	5
  3460  003A20  5DE9               	subwf	color_data_collection@x& (0+255),w,b
  3461  003A22  A0D8               	btfss	status,0,c
  3462  003A24  EF16  F01D         	goto	u8061
  3463  003A28  EF18  F01D         	goto	u8060
  3464  003A2C                     u8061:
  3465  003A2C  EFEC  F01C         	goto	l7066
  3466  003A30                     u8060:
  3467  003A30                     
  3468                           ; BSR set to: 0
  3469                           ;color.c: 270:     color_predict(1);
  3470  003A30  0E01               	movlw	1
  3471  003A32  ECCB  F02A         	call	_color_predict
  3472  003A36                     
  3473                           ;color.c: 271:     LED_C();
  3474  003A36  EC5E  F02B         	call	_LED_C	;wreg free
  3475  003A3A  0012               	return		;funcret
  3476  003A3C                     __end_of_color_data_collection:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function _read_color *****************
  3480 ;; Defined at:
  3481 ;;		line 187 in file "color.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3484 ;;		 -> main@rgb(8), 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 5
  3503 ;; This function calls:
  3504 ;;		_color_read_Blue
  3505 ;;		_color_read_Clear
  3506 ;;		_color_read_Green
  3507 ;;		_color_read_Red
  3508 ;; This function is called by:
  3509 ;;		_test_function
  3510 ;;		_color_data_collection
  3511 ;;		_detect_color
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text7
  3516  005036                     __ptext7:
  3517                           	callstack 0
  3518  005036                     _read_color:
  3519                           	callstack 23
  3520  005036                     
  3521                           ;color.c: 187: void read_color (struct color_rgb *m);color.c: 188: {;color.c: 189:     m
      +                          ->R = color_read_Red();
  3522  005036  EC9F  F028         	call	_color_read_Red	;wreg free
  3523  00503A  C00E  FFD9         	movff	read_color@m,fsr2l
  3524  00503E  C00F  FFDA         	movff	read_color@m+1,fsr2h
  3525  005042  C007  FFDE         	movff	?_color_read_Red,postinc2
  3526  005046  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  3527                           
  3528                           ;color.c: 190:     m->B = color_read_Blue();
  3529  00504A  ECEF  F028         	call	_color_read_Blue	;wreg free
  3530  00504E  EE20 F004          	lfsr	2,4
  3531  005052  500E               	movf	read_color@m^0,w,c
  3532  005054  26D9               	addwf	fsr2l,f,c
  3533  005056  500F               	movf	(read_color@m+1)^0,w,c
  3534  005058  22DA               	addwfc	fsr2h,f,c
  3535  00505A  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3536  00505E  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3537                           
  3538                           ;color.c: 191:     m->G = color_read_Green();
  3539  005062  ECC7  F028         	call	_color_read_Green	;wreg free
  3540  005066  EE20 F002          	lfsr	2,2
  3541  00506A  500E               	movf	read_color@m^0,w,c
  3542  00506C  26D9               	addwf	fsr2l,f,c
  3543  00506E  500F               	movf	(read_color@m+1)^0,w,c
  3544  005070  22DA               	addwfc	fsr2h,f,c
  3545  005072  C007  FFDE         	movff	?_color_read_Green,postinc2
  3546  005076  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  3547                           
  3548                           ;color.c: 192:     m->C = color_read_Clear();
  3549  00507A  EC17  F029         	call	_color_read_Clear	;wreg free
  3550  00507E  EE20 F006          	lfsr	2,6
  3551  005082  500E               	movf	read_color@m^0,w,c
  3552  005084  26D9               	addwf	fsr2l,f,c
  3553  005086  500F               	movf	(read_color@m+1)^0,w,c
  3554  005088  22DA               	addwfc	fsr2h,f,c
  3555  00508A  C007  FFDE         	movff	?_color_read_Clear,postinc2
  3556  00508E  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  3557  005092  0012               	return		;funcret
  3558  005094                     __end_of_read_color:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _color_predict *****************
  3562 ;; Defined at:
  3563 ;;		line 290 in file "color.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  color           1    wreg     unsigned char 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  color           1  125[BANK0 ] unsigned char 
  3568 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:      101 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 10
  3585 ;; This function calls:
  3586 ;;		_sendStringSerial4
  3587 ;;		_sprintf
  3588 ;; This function is called by:
  3589 ;;		_test_function
  3590 ;;		_color_data_collection
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text8
  3595  005596                     __ptext8:
  3596                           	callstack 0
  3597  005596                     _color_predict:
  3598                           	callstack 19
  3599                           
  3600                           ;incstack = 0
  3601                           ;color_predict@color stored from wreg
  3602  005596  0100               	movlb	0	; () banked
  3603  005598  6FDD               	movwf	color_predict@color& (0+255),b
  3604  00559A                     
  3605                           ;color.c: 290: void color_predict(unsigned char color);color.c: 291: {;color.c: 292:    
      +                           char buf[100];;color.c: 293:     sprintf(buf,"\t%d\r\n", color);
  3606  00559A  0E79               	movlw	low color_predict@buf
  3607  00559C  0100               	movlb	0	; () banked
  3608  00559E  6F60               	movwf	sprintf@s& (0+255),b
  3609  0055A0  0E00               	movlw	high color_predict@buf
  3610  0055A2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3611  0055A4  0E0D               	movlw	low (STR_1+8)
  3612  0055A6  6F62               	movwf	sprintf@fmt& (0+255),b
  3613  0055A8  0E0E               	movlw	high (STR_1+8)
  3614  0055AA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3615  0055AC  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  3616  0055B0  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3617  0055B2  EC76  F028         	call	_sprintf	;wreg free
  3618  0055B6                     
  3619                           ;color.c: 294:     sendStringSerial4(buf);
  3620  0055B6  0E79               	movlw	low color_predict@buf
  3621  0055B8  6E04               	movwf	sendStringSerial4@string^0,c
  3622  0055BA  0E00               	movlw	high color_predict@buf
  3623  0055BC  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  3624  0055BE  ECB3  F02A         	call	_sendStringSerial4	;wreg free
  3625  0055C2  0012               	return		;funcret
  3626  0055C4                     __end_of_color_predict:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _color_display *****************
  3630 ;; Defined at:
  3631 ;;		line 274 in file "color.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  3634 ;;		 -> main@rgb(8), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  buf           100   27[BANK0 ] unsigned char [100]
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Totals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;Total ram usage:      102 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 10
  3653 ;; This function calls:
  3654 ;;		_sendStringSerial4
  3655 ;;		_sprintf
  3656 ;; This function is called by:
  3657 ;;		_test_function
  3658 ;;		_color_data_collection
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text9
  3663  004EF8                     __ptext9:
  3664                           	callstack 0
  3665  004EF8                     _color_display:
  3666                           	callstack 19
  3667  004EF8                     
  3668                           ;color.c: 274: void color_display(struct color_rgb *m);color.c: 275: {;color.c: 276:    
      +                           char buf[100];;color.c: 277:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3669  004EF8  0E7B               	movlw	low color_display@buf
  3670  004EFA  0100               	movlb	0	; () banked
  3671  004EFC  6F60               	movwf	sprintf@s& (0+255),b
  3672  004EFE  0E00               	movlw	high color_display@buf
  3673  004F00  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3674  004F02  0E05               	movlw	low STR_1
  3675  004F04  6F62               	movwf	sprintf@fmt& (0+255),b
  3676  004F06  0E0E               	movlw	high STR_1
  3677  004F08  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3678  004F0A  C079  FFD9         	movff	color_display@m,fsr2l
  3679  004F0E  C07A  FFDA         	movff	color_display@m+1,fsr2h
  3680  004F12  CFDE F064          	movff	postinc2,?_sprintf+4
  3681  004F16  CFDD F065          	movff	postdec2,?_sprintf+5
  3682  004F1A  EE20 F002          	lfsr	2,2
  3683  004F1E  5179               	movf	color_display@m& (0+255),w,b
  3684  004F20  26D9               	addwf	fsr2l,f,c
  3685  004F22  517A               	movf	(color_display@m+1)& (0+255),w,b
  3686  004F24  22DA               	addwfc	fsr2h,f,c
  3687  004F26  CFDE F066          	movff	postinc2,?_sprintf+6
  3688  004F2A  CFDD F067          	movff	postdec2,?_sprintf+7
  3689  004F2E  EE20 F004          	lfsr	2,4
  3690  004F32  5179               	movf	color_display@m& (0+255),w,b
  3691  004F34  26D9               	addwf	fsr2l,f,c
  3692  004F36  517A               	movf	(color_display@m+1)& (0+255),w,b
  3693  004F38  22DA               	addwfc	fsr2h,f,c
  3694  004F3A  CFDE F068          	movff	postinc2,?_sprintf+8
  3695  004F3E  CFDD F069          	movff	postdec2,?_sprintf+9
  3696  004F42  EE20 F006          	lfsr	2,6
  3697  004F46  5179               	movf	color_display@m& (0+255),w,b
  3698  004F48  26D9               	addwf	fsr2l,f,c
  3699  004F4A  517A               	movf	(color_display@m+1)& (0+255),w,b
  3700  004F4C  22DA               	addwfc	fsr2h,f,c
  3701  004F4E  CFDE F06A          	movff	postinc2,?_sprintf+10
  3702  004F52  CFDD F06B          	movff	postdec2,?_sprintf+11
  3703  004F56  EC76  F028         	call	_sprintf	;wreg free
  3704  004F5A                     
  3705                           ;color.c: 278:     sendStringSerial4(buf);
  3706  004F5A  0E7B               	movlw	low color_display@buf
  3707  004F5C  6E04               	movwf	sendStringSerial4@string^0,c
  3708  004F5E  0E00               	movlw	high color_display@buf
  3709  004F60  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  3710  004F62  ECB3  F02A         	call	_sendStringSerial4	;wreg free
  3711  004F66  0012               	return		;funcret
  3712  004F68                     __end_of_color_display:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _sprintf *****************
  3716 ;; Defined at:
  3717 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3720 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  3721 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3722 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  f              11   14[BANK0 ] struct _IO_FILE
  3725 ;;  ap              2   12[BANK0 ] PTR void [1]
  3726 ;;		 -> ?_sprintf(2), 
  3727 ;;  ret             2    0        int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2    0[BANK0 ] int 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3737 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;Total ram usage:       25 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 9
  3744 ;; This function calls:
  3745 ;;		_vfprintf
  3746 ;; This function is called by:
  3747 ;;		_color_display
  3748 ;;		_color_predict
  3749 ;;		_check_color_reading
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text10
  3754  0050EC                     __ptext10:
  3755                           	callstack 0
  3756  0050EC                     _sprintf:
  3757                           	callstack 19
  3758  0050EC  0E64               	movlw	low (?_sprintf+4)
  3759  0050EE  0100               	movlb	0	; () banked
  3760  0050F0  6F6C               	movwf	sprintf@ap& (0+255),b
  3761  0050F2  0E00               	movlw	high (?_sprintf+4)
  3762  0050F4  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  3763  0050F6  C060  F06E         	movff	sprintf@s,sprintf@f
  3764  0050FA  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  3765  0050FE                     
  3766                           ; BSR set to: 0
  3767  0050FE  0E00               	movlw	0
  3768  005100  6F72               	movwf	(sprintf@f+4)& (0+255),b
  3769  005102  0E00               	movlw	0
  3770  005104  6F71               	movwf	(sprintf@f+3)& (0+255),b
  3771  005106                     
  3772                           ; BSR set to: 0
  3773  005106  0E00               	movlw	0
  3774  005108  6F78               	movwf	(sprintf@f+10)& (0+255),b
  3775  00510A  0E00               	movlw	0
  3776  00510C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  3777  00510E                     
  3778                           ; BSR set to: 0
  3779  00510E  0E6E               	movlw	low sprintf@f
  3780  005110  6E52               	movwf	vfprintf@fp^0,c
  3781  005112  0E00               	movlw	high sprintf@f
  3782  005114  6E53               	movwf	(vfprintf@fp+1)^0,c
  3783  005116  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  3784  00511A  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3785  00511E  0E6C               	movlw	low sprintf@ap
  3786  005120  6E56               	movwf	vfprintf@ap^0,c
  3787  005122  0E00               	movlw	high sprintf@ap
  3788  005124  6E57               	movwf	(vfprintf@ap+1)^0,c
  3789  005126  ECEA  F027         	call	_vfprintf	;wreg free
  3790  00512A  0100               	movlb	0	; () banked
  3791  00512C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  3792  00512E  2560               	addwf	sprintf@s& (0+255),w,b
  3793  005130  6ED9               	movwf	fsr2l,c
  3794  005132  5172               	movf	(sprintf@f+4)& (0+255),w,b
  3795  005134  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  3796  005136  6EDA               	movwf	fsr2h,c
  3797  005138  0E00               	movlw	0
  3798  00513A  6EDF               	movwf	indf2,c
  3799  00513C                     
  3800                           ; BSR set to: 0
  3801  00513C  0012               	return		;funcret
  3802  00513E                     __end_of_sprintf:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _vfprintf *****************
  3806 ;; Defined at:
  3807 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3810 ;;		 -> sprintf@f(11), 
  3811 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3812 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3813 ;;  ap              2   85[COMRAM] PTR PTR void 
  3814 ;;		 -> sprintf@ap(2), 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  3817 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2   81[COMRAM] int 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        8 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 8
  3834 ;; This function calls:
  3835 ;;		_vfpfcnvrt
  3836 ;; This function is called by:
  3837 ;;		_sprintf
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text11
  3842  004FD4                     __ptext11:
  3843                           	callstack 0
  3844  004FD4                     _vfprintf:
  3845                           	callstack 19
  3846  004FD4                     
  3847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3848  004FD4  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  3849  004FD8  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3850  004FDC                     
  3851                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3852  004FDC  0E00               	movlw	0
  3853  004FDE  0101               	movlb	1	; () banked
  3854  004FE0  6F91               	movwf	(_nout+1)& (0+255),b
  3855  004FE2  0E00               	movlw	0
  3856  004FE4  6F90               	movwf	_nout& (0+255),b
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3859  004FE6  EF08  F028         	goto	l6290
  3860  004FEA                     l6288:
  3861                           
  3862                           ; BSR set to: 1
  3863                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3864  004FEA  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3865  004FEE  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3866  004FF2  0E58               	movlw	low vfprintf@cfmt
  3867  004FF4  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3868  004FF6  0E00               	movlw	high vfprintf@cfmt
  3869  004FF8  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3870  004FFA  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3871  004FFE  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3872  005002  EC1E  F01D         	call	_vfpfcnvrt	;wreg free
  3873  005006  5042               	movf	?_vfpfcnvrt^0,w,c
  3874  005008  0101               	movlb	1	; () banked
  3875  00500A  2790               	addwf	_nout& (0+255),f,b
  3876  00500C  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3877  00500E  2391               	addwfc	(_nout+1)& (0+255),f,b
  3878  005010                     l6290:
  3879                           
  3880                           ; BSR set to: 1
  3881                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3882  005010  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  3883  005014  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3884  005018                     	if	0	;tblptru may be non-zero
  3885  005018                     	endif
  3886  005018                     	if	0	;tblptru may be non-zero
  3887  005018                     	endif
  3888  005018  0008               	tblrd		*
  3889  00501A  50F5               	movf	tablat,w,c
  3890  00501C  0900               	iorlw	0
  3891  00501E  A4D8               	btfss	status,2,c
  3892  005020  EF14  F028         	goto	u6941
  3893  005024  EF16  F028         	goto	u6940
  3894  005028                     u6941:
  3895  005028  EFF5  F027         	goto	l6288
  3896  00502C                     u6940:
  3897  00502C                     
  3898                           ; BSR set to: 1
  3899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3900  00502C  C190  F052         	movff	_nout,?_vfprintf
  3901  005030  C191  F053         	movff	_nout+1,?_vfprintf+1
  3902  005034                     
  3903                           ; BSR set to: 1
  3904  005034  0012               	return		;funcret
  3905  005036                     __end_of_vfprintf:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function _vfpfcnvrt *****************
  3909 ;; Defined at:
  3910 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3913 ;;		 -> sprintf@f(11), 
  3914 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3915 ;;		 -> vfprintf@cfmt(2), 
  3916 ;;  ap              2   69[COMRAM] PTR PTR void 
  3917 ;;		 -> sprintf@ap(2), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  ll              8   73[COMRAM] long long 
  3920 ;;  llu             8    0        unsigned long long 
  3921 ;;  f               4    0        unsigned long long 
  3922 ;;  vp              3    0        PTR void 
  3923 ;;  ct              3    0        unsigned char [3]
  3924 ;;  cp              3    0        PTR unsigned char 
  3925 ;;  i               2    0        int 
  3926 ;;  done            2    0        int 
  3927 ;;  c               1    0        unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  2   65[COMRAM] int 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3937 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;Total ram usage:       16 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 7
  3944 ;; This function calls:
  3945 ;;		_dtoa
  3946 ;;		_fputc
  3947 ;; This function is called by:
  3948 ;;		_vfprintf
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text12
  3953  003A3C                     __ptext12:
  3954                           	callstack 0
  3955  003A3C                     _vfpfcnvrt:
  3956                           	callstack 19
  3957  003A3C                     
  3958                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3959  003A3C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3960  003A40  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3961  003A44  CFDE FFF6          	movff	postinc2,tblptrl
  3962  003A48  CFDD FFF7          	movff	postdec2,tblptrh
  3963  003A4C                     	if	0	;tblptru may be non-zero
  3964  003A4C                     	endif
  3965  003A4C                     	if	0	;tblptru may be non-zero
  3966  003A4C                     	endif
  3967  003A4C  0008               	tblrd		*
  3968  003A4E  50F5               	movf	tablat,w,c
  3969  003A50  0A25               	xorlw	37
  3970  003A52  A4D8               	btfss	status,2,c
  3971  003A54  EF2E  F01D         	goto	u6581
  3972  003A58  EF30  F01D         	goto	u6580
  3973  003A5C                     u6581:
  3974  003A5C  EFDC  F01D         	goto	l6054
  3975  003A60                     u6580:
  3976  003A60                     
  3977                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3978  003A60  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3979  003A64  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3980  003A68  2ADE               	incf	postinc2,f,c
  3981  003A6A  0E00               	movlw	0
  3982  003A6C  22DD               	addwfc	postdec2,f,c
  3983  003A6E                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3985  003A6E  0E00               	movlw	0
  3986  003A70  0101               	movlb	1	; () banked
  3987  003A72  6F93               	movwf	(_width+1)& (0+255),b
  3988  003A74  0E00               	movlw	0
  3989  003A76  6F92               	movwf	_width& (0+255),b
  3990  003A78  C192  F0F5         	movff	_width,_flags
  3991  003A7C  C193  F0F6         	movff	_width+1,_flags+1
  3992  003A80                     
  3993                           ; BSR set to: 1
  3994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3995  003A80  6994               	setf	_prec& (0+255),b
  3996  003A82  6995               	setf	(_prec+1)& (0+255),b
  3997  003A84                     
  3998                           ; BSR set to: 1
  3999                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4000  003A84  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  003A88  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  003A8C  CFDE FFF6          	movff	postinc2,tblptrl
  4003  003A90  CFDD FFF7          	movff	postdec2,tblptrh
  4004  003A94                     	if	0	;tblptru may be non-zero
  4005  003A94                     	endif
  4006  003A94                     	if	0	;tblptru may be non-zero
  4007  003A94                     	endif
  4008  003A94  0008               	tblrd		*
  4009  003A96  50F5               	movf	tablat,w,c
  4010  003A98  0A64               	xorlw	100
  4011  003A9A  B4D8               	btfsc	status,2,c
  4012  003A9C  EF52  F01D         	goto	u6591
  4013  003AA0  EF54  F01D         	goto	u6590
  4014  003AA4                     u6591:
  4015  003AA4  EF66  F01D         	goto	l6032
  4016  003AA8                     u6590:
  4017  003AA8                     
  4018                           ; BSR set to: 1
  4019  003AA8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4020  003AAC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4021  003AB0  CFDE FFF6          	movff	postinc2,tblptrl
  4022  003AB4  CFDD FFF7          	movff	postdec2,tblptrh
  4023  003AB8                     	if	0	;tblptru may be non-zero
  4024  003AB8                     	endif
  4025  003AB8                     	if	0	;tblptru may be non-zero
  4026  003AB8                     	endif
  4027  003AB8  0008               	tblrd		*
  4028  003ABA  50F5               	movf	tablat,w,c
  4029  003ABC  0A69               	xorlw	105
  4030  003ABE  A4D8               	btfss	status,2,c
  4031  003AC0  EF64  F01D         	goto	u6601
  4032  003AC4  EF66  F01D         	goto	u6600
  4033  003AC8                     u6601:
  4034  003AC8  EFA6  F01D         	goto	l6038
  4035  003ACC                     u6600:
  4036  003ACC                     l6032:
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4040  003ACC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4041  003AD0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4042  003AD4  2ADE               	incf	postinc2,f,c
  4043  003AD6  0E00               	movlw	0
  4044  003AD8  22DD               	addwfc	postdec2,f,c
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4047  003ADA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4048  003ADE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4049  003AE2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4050  003AE6  0E02               	movlw	2
  4051  003AE8  26DE               	addwf	postinc2,f,c
  4052  003AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4053  003AEE  0E00               	movlw	0
  4054  003AF0  22DD               	addwfc	postdec2,f,c
  4055  003AF2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4056  003AF6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4057  003AFA  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  4058  003AFE  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  4059  003B02  0E00               	movlw	0
  4060  003B04  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4061  003B06  0EFF               	movlw	-1
  4062  003B08  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  4063  003B0A  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  4064  003B0C  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  4065  003B0E  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  4066  003B10  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  4067  003B12  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  4068  003B14                     
  4069                           ; BSR set to: 1
  4070                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4071  003B14  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4072  003B18  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4073  003B1C  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4074  003B20  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4075  003B24  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4076  003B28  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4077  003B2C  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4078  003B30  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4079  003B34  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4080  003B38  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4081  003B3C  EC48  F016         	call	_dtoa	;wreg free
  4082  003B40  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4083  003B44  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4084  003B48  EFF7  F01D         	goto	l1506
  4085  003B4C                     l6038:
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4089  003B4C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4090  003B50  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4091  003B54  CFDE FFF6          	movff	postinc2,tblptrl
  4092  003B58  CFDD FFF7          	movff	postdec2,tblptrh
  4093  003B5C                     	if	0	;tblptru may be non-zero
  4094  003B5C                     	endif
  4095  003B5C                     	if	0	;tblptru may be non-zero
  4096  003B5C                     	endif
  4097  003B5C  0008               	tblrd		*
  4098  003B5E  50F5               	movf	tablat,w,c
  4099  003B60  0A25               	xorlw	37
  4100  003B62  A4D8               	btfss	status,2,c
  4101  003B64  EFB6  F01D         	goto	u6611
  4102  003B68  EFB8  F01D         	goto	u6610
  4103  003B6C                     u6611:
  4104  003B6C  EFCF  F01D         	goto	l6048
  4105  003B70                     u6610:
  4106  003B70                     
  4107                           ; BSR set to: 1
  4108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4109  003B70  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4110  003B74  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4111  003B78  2ADE               	incf	postinc2,f,c
  4112  003B7A  0E00               	movlw	0
  4113  003B7C  22DD               	addwfc	postdec2,f,c
  4114  003B7E                     
  4115                           ; BSR set to: 1
  4116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4117  003B7E  0E00               	movlw	0
  4118  003B80  6E04               	movwf	(fputc@c+1)^0,c
  4119  003B82  0E25               	movlw	37
  4120  003B84  6E03               	movwf	fputc@c^0,c
  4121  003B86  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4122  003B8A  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4123  003B8E  EC90  F024         	call	_fputc	;wreg free
  4124  003B92                     l6044:
  4125                           
  4126                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4127  003B92  0E00               	movlw	0
  4128  003B94  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4129  003B96  0E01               	movlw	1
  4130  003B98  6E42               	movwf	?_vfpfcnvrt^0,c
  4131  003B9A  EFF7  F01D         	goto	l1506
  4132  003B9E                     l6048:
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4136  003B9E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4137  003BA2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4138  003BA6  2ADE               	incf	postinc2,f,c
  4139  003BA8  0E00               	movlw	0
  4140  003BAA  22DD               	addwfc	postdec2,f,c
  4141  003BAC                     
  4142                           ; BSR set to: 1
  4143                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4144  003BAC  0E00               	movlw	0
  4145  003BAE  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4146  003BB0  0E00               	movlw	0
  4147  003BB2  6E42               	movwf	?_vfpfcnvrt^0,c
  4148  003BB4  EFF7  F01D         	goto	l1506
  4149  003BB8                     l6054:
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4152  003BB8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4153  003BBC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4154  003BC0  CFDE FFF6          	movff	postinc2,tblptrl
  4155  003BC4  CFDD FFF7          	movff	postdec2,tblptrh
  4156  003BC8                     	if	0	;tblptru may be non-zero
  4157  003BC8                     	endif
  4158  003BC8                     	if	0	;tblptru may be non-zero
  4159  003BC8                     	endif
  4160  003BC8  0008               	tblrd		*
  4161  003BCA  50F5               	movf	tablat,w,c
  4162  003BCC  6E03               	movwf	fputc@c^0,c
  4163  003BCE  6A04               	clrf	(fputc@c+1)^0,c
  4164  003BD0  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4165  003BD4  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4166  003BD8  EC90  F024         	call	_fputc	;wreg free
  4167  003BDC                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4169  003BDC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4170  003BE0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4171  003BE4  2ADE               	incf	postinc2,f,c
  4172  003BE6  0E00               	movlw	0
  4173  003BE8  22DD               	addwfc	postdec2,f,c
  4174  003BEA  EFC9  F01D         	goto	l6044
  4175  003BEE                     l1506:
  4176  003BEE  0012               	return		;funcret
  4177  003BF0                     __end_of_vfpfcnvrt:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _dtoa *****************
  4181 ;; Defined at:
  4182 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4185 ;;		 -> sprintf@f(11), 
  4186 ;;  d               8   31[COMRAM] long long 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  n               8   55[COMRAM] long long 
  4189 ;;  i               2   63[COMRAM] int 
  4190 ;;  s               2   53[COMRAM] int 
  4191 ;;  w               2   51[COMRAM] int 
  4192 ;;  p               2   49[COMRAM] int 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2   29[COMRAM] int 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4202 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;Total ram usage:       36 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 6
  4209 ;; This function calls:
  4210 ;;		___aodiv
  4211 ;;		___aomod
  4212 ;;		_abs
  4213 ;;		_pad
  4214 ;; This function is called by:
  4215 ;;		_vfpfcnvrt
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text13
  4220  002C90                     __ptext13:
  4221                           	callstack 0
  4222  002C90                     _dtoa:
  4223                           	callstack 19
  4224  002C90                     
  4225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4226  002C90  C020  F038         	movff	dtoa@d,dtoa@n
  4227  002C94  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  4228  002C98  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  4229  002C9C  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  4230  002CA0  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  4231  002CA4  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  4232  002CA8  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  4233  002CAC  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  4234  002CB0                     
  4235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4236  002CB0  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4237  002CB2  EF5D  F016         	goto	u5981
  4238  002CB6  EF60  F016         	goto	u5980
  4239  002CBA                     u5981:
  4240  002CBA  0E01               	movlw	1
  4241  002CBC  EF61  F016         	goto	u5990
  4242  002CC0                     u5980:
  4243  002CC0  0E00               	movlw	0
  4244  002CC2                     u5990:
  4245  002CC2  6E36               	movwf	dtoa@s^0,c
  4246  002CC4  6A37               	clrf	(dtoa@s+1)^0,c
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4249  002CC6  5036               	movf	dtoa@s^0,w,c
  4250  002CC8  1037               	iorwf	(dtoa@s+1)^0,w,c
  4251  002CCA  B4D8               	btfsc	status,2,c
  4252  002CCC  EF6A  F016         	goto	u6001
  4253  002CD0  EF6C  F016         	goto	u6000
  4254  002CD4                     u6001:
  4255  002CD4  EF7C  F016         	goto	l5744
  4256  002CD8                     u6000:
  4257  002CD8                     
  4258                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4259  002CD8  1E3F               	comf	(dtoa@n+7)^0,f,c
  4260  002CDA  1E3E               	comf	(dtoa@n+6)^0,f,c
  4261  002CDC  1E3D               	comf	(dtoa@n+5)^0,f,c
  4262  002CDE  1E3C               	comf	(dtoa@n+4)^0,f,c
  4263  002CE0  1E3B               	comf	(dtoa@n+3)^0,f,c
  4264  002CE2  1E3A               	comf	(dtoa@n+2)^0,f,c
  4265  002CE4  1E39               	comf	(dtoa@n+1)^0,f,c
  4266  002CE6  6C38               	negf	dtoa@n^0,c
  4267  002CE8  0E00               	movlw	0
  4268  002CEA  2239               	addwfc	(dtoa@n+1)^0,f,c
  4269  002CEC  223A               	addwfc	(dtoa@n+2)^0,f,c
  4270  002CEE  223B               	addwfc	(dtoa@n+3)^0,f,c
  4271  002CF0  223C               	addwfc	(dtoa@n+4)^0,f,c
  4272  002CF2  223D               	addwfc	(dtoa@n+5)^0,f,c
  4273  002CF4  223E               	addwfc	(dtoa@n+6)^0,f,c
  4274  002CF6  223F               	addwfc	(dtoa@n+7)^0,f,c
  4275  002CF8                     l5744:
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4278  002CF8  0101               	movlb	1	; () banked
  4279  002CFA  BF95               	btfsc	(_prec+1)& (0+255),7,b
  4280  002CFC  EF82  F016         	goto	u6011
  4281  002D00  EF84  F016         	goto	u6010
  4282  002D04                     u6011:
  4283  002D04  EF86  F016         	goto	l5748
  4284  002D08                     u6010:
  4285  002D08                     
  4286                           ; BSR set to: 1
  4287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4288  002D08  0100               	movlb	0	; () banked
  4289  002D0A  93F5               	bcf	_flags& (0+255),1,b
  4290  002D0C                     l5748:
  4291                           
  4292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4293  002D0C  0101               	movlb	1	; () banked
  4294  002D0E  BF95               	btfsc	(_prec+1)& (0+255),7,b
  4295  002D10  EF94  F016         	goto	u6020
  4296  002D14  5195               	movf	(_prec+1)& (0+255),w,b
  4297  002D16  E106               	bnz	u6021
  4298  002D18  0594               	decf	_prec& (0+255),w,b
  4299  002D1A  B0D8               	btfsc	status,0,c
  4300  002D1C  EF92  F016         	goto	u6021
  4301  002D20  EF94  F016         	goto	u6020
  4302  002D24                     u6021:
  4303  002D24  EF9A  F016         	goto	l1479
  4304  002D28                     u6020:
  4305  002D28                     
  4306                           ; BSR set to: 1
  4307  002D28  0E00               	movlw	0
  4308  002D2A  6E33               	movwf	(dtoa@p+1)^0,c
  4309  002D2C  0E01               	movlw	1
  4310  002D2E  6E32               	movwf	dtoa@p^0,c
  4311  002D30  EF9E  F016         	goto	l1481
  4312  002D34                     l1479:
  4313                           
  4314                           ; BSR set to: 1
  4315  002D34  C194  F032         	movff	_prec,dtoa@p
  4316  002D38  C195  F033         	movff	_prec+1,dtoa@p+1
  4317  002D3C                     l1481:
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4321  002D3C  C192  F034         	movff	_width,dtoa@w
  4322  002D40  C193  F035         	movff	_width+1,dtoa@w+1
  4323  002D44                     
  4324                           ; BSR set to: 1
  4325                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4326  002D44  5036               	movf	dtoa@s^0,w,c
  4327  002D46  1037               	iorwf	(dtoa@s+1)^0,w,c
  4328  002D48  A4D8               	btfss	status,2,c
  4329  002D4A  EFA9  F016         	goto	u6031
  4330  002D4E  EFAB  F016         	goto	u6030
  4331  002D52                     u6031:
  4332  002D52  EFB3  F016         	goto	l5756
  4333  002D56                     u6030:
  4334  002D56                     
  4335                           ; BSR set to: 1
  4336  002D56  0100               	movlb	0	; () banked
  4337  002D58  A5F5               	btfss	_flags& (0+255),2,b
  4338  002D5A  EFB1  F016         	goto	u6041
  4339  002D5E  EFB3  F016         	goto	u6040
  4340  002D62                     u6041:
  4341  002D62  EFB6  F016         	goto	l5758
  4342  002D66                     u6040:
  4343  002D66                     l5756:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4346  002D66  0634               	decf	dtoa@w^0,f,c
  4347  002D68  A0D8               	btfss	status,0,c
  4348  002D6A  0635               	decf	(dtoa@w+1)^0,f,c
  4349  002D6C                     l5758:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4352  002D6C  0E00               	movlw	0
  4353  002D6E  6E41               	movwf	(dtoa@i+1)^0,c
  4354  002D70  0E1F               	movlw	31
  4355  002D72  6E40               	movwf	dtoa@i^0,c
  4356  002D74                     
  4357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4358  002D74  0E00               	movlw	0
  4359  002D76  0101               	movlb	1	; () banked
  4360  002D78  6FBC               	movwf	(_dbuf+31)& (0+255),b
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4363  002D7A  EF3B  F017         	goto	l5772
  4364  002D7E                     l5762:
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4367  002D7E  0640               	decf	dtoa@i^0,f,c
  4368  002D80  A0D8               	btfss	status,0,c
  4369  002D82  0641               	decf	(dtoa@i+1)^0,f,c
  4370  002D84                     
  4371                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4372  002D84  0E9D               	movlw	low _dbuf
  4373  002D86  2440               	addwf	dtoa@i^0,w,c
  4374  002D88  6ED9               	movwf	fsr2l,c
  4375  002D8A  0E01               	movlw	high _dbuf
  4376  002D8C  2041               	addwfc	(dtoa@i+1)^0,w,c
  4377  002D8E  6EDA               	movwf	fsr2h,c
  4378  002D90  C038  F003         	movff	dtoa@n,___aomod@dividend
  4379  002D94  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  4380  002D98  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  4381  002D9C  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  4382  002DA0  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  4383  002DA4  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  4384  002DA8  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  4385  002DAC  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  4386  002DB0  0E0A               	movlw	10
  4387  002DB2  6E0B               	movwf	___aomod@divisor^0,c
  4388  002DB4  0E00               	movlw	0
  4389  002DB6  6E0C               	movwf	(___aomod@divisor+1)^0,c
  4390  002DB8  0E00               	movlw	0
  4391  002DBA  6E0D               	movwf	(___aomod@divisor+2)^0,c
  4392  002DBC  0E00               	movlw	0
  4393  002DBE  6E0E               	movwf	(___aomod@divisor+3)^0,c
  4394  002DC0  0E00               	movlw	0
  4395  002DC2  6E0F               	movwf	(___aomod@divisor+4)^0,c
  4396  002DC4  0E00               	movlw	0
  4397  002DC6  6E10               	movwf	(___aomod@divisor+5)^0,c
  4398  002DC8  0E00               	movlw	0
  4399  002DCA  6E11               	movwf	(___aomod@divisor+6)^0,c
  4400  002DCC  0E00               	movlw	0
  4401  002DCE  6E12               	movwf	(___aomod@divisor+7)^0,c
  4402  002DD0  ECDB  F021         	call	___aomod	;wreg free
  4403  002DD4  C003  F028         	movff	?___aomod,??_dtoa
  4404  002DD8  C004  F029         	movff	?___aomod+1,??_dtoa+1
  4405  002DDC  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  4406  002DE0  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  4407  002DE4  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  4408  002DE8  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  4409  002DEC  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  4410  002DF0  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  4411  002DF4  C028  F015         	movff	??_dtoa,abs@a
  4412  002DF8  C02A  F016         	movff	??_dtoa+2,abs@a+1
  4413  002DFC  EC08  F02A         	call	_abs	;wreg free
  4414  002E00  5015               	movf	?_abs^0,w,c
  4415  002E02  0F30               	addlw	48
  4416  002E04  6EDF               	movwf	indf2,c
  4417  002E06                     
  4418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4419  002E06  0632               	decf	dtoa@p^0,f,c
  4420  002E08  A0D8               	btfss	status,0,c
  4421  002E0A  0633               	decf	(dtoa@p+1)^0,f,c
  4422  002E0C                     
  4423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4424  002E0C  0634               	decf	dtoa@w^0,f,c
  4425  002E0E  A0D8               	btfss	status,0,c
  4426  002E10  0635               	decf	(dtoa@w+1)^0,f,c
  4427  002E12                     
  4428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4429  002E12  C038  F003         	movff	dtoa@n,___aodiv@dividend
  4430  002E16  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  4431  002E1A  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  4432  002E1E  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  4433  002E22  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  4434  002E26  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  4435  002E2A  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  4436  002E2E  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  4437  002E32  0E0A               	movlw	10
  4438  002E34  6E0B               	movwf	___aodiv@divisor^0,c
  4439  002E36  0E00               	movlw	0
  4440  002E38  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  4441  002E3A  0E00               	movlw	0
  4442  002E3C  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  4443  002E3E  0E00               	movlw	0
  4444  002E40  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  4445  002E42  0E00               	movlw	0
  4446  002E44  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  4447  002E46  0E00               	movlw	0
  4448  002E48  6E10               	movwf	(___aodiv@divisor+5)^0,c
  4449  002E4A  0E00               	movlw	0
  4450  002E4C  6E11               	movwf	(___aodiv@divisor+6)^0,c
  4451  002E4E  0E00               	movlw	0
  4452  002E50  6E12               	movwf	(___aodiv@divisor+7)^0,c
  4453  002E52  EC97  F01F         	call	___aodiv	;wreg free
  4454  002E56  C003  F038         	movff	?___aodiv,dtoa@n
  4455  002E5A  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  4456  002E5E  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  4457  002E62  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  4458  002E66  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  4459  002E6A  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  4460  002E6E  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  4461  002E72  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  4462  002E76                     l5772:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4465  002E76  BE41               	btfsc	(dtoa@i+1)^0,7,c
  4466  002E78  EF46  F017         	goto	u6051
  4467  002E7C  5041               	movf	(dtoa@i+1)^0,w,c
  4468  002E7E  E108               	bnz	u6050
  4469  002E80  0440               	decf	dtoa@i^0,w,c
  4470  002E82  A0D8               	btfss	status,0,c
  4471  002E84  EF46  F017         	goto	u6051
  4472  002E88  EF48  F017         	goto	u6050
  4473  002E8C                     u6051:
  4474  002E8C  EF79  F017         	goto	l5782
  4475  002E90                     u6050:
  4476  002E90  5038               	movf	dtoa@n^0,w,c
  4477  002E92  1039               	iorwf	(dtoa@n+1)^0,w,c
  4478  002E94  103A               	iorwf	(dtoa@n+2)^0,w,c
  4479  002E96  103B               	iorwf	(dtoa@n+3)^0,w,c
  4480  002E98  103C               	iorwf	(dtoa@n+4)^0,w,c
  4481  002E9A  103D               	iorwf	(dtoa@n+5)^0,w,c
  4482  002E9C  103E               	iorwf	(dtoa@n+6)^0,w,c
  4483  002E9E  103F               	iorwf	(dtoa@n+7)^0,w,c
  4484  002EA0  A4D8               	btfss	status,2,c
  4485  002EA2  EF55  F017         	goto	u6061
  4486  002EA6  EF57  F017         	goto	u6060
  4487  002EAA                     u6061:
  4488  002EAA  EFBF  F016         	goto	l5762
  4489  002EAE                     u6060:
  4490  002EAE  BE33               	btfsc	(dtoa@p+1)^0,7,c
  4491  002EB0  EF64  F017         	goto	u6070
  4492  002EB4  5033               	movf	(dtoa@p+1)^0,w,c
  4493  002EB6  E106               	bnz	u6071
  4494  002EB8  0432               	decf	dtoa@p^0,w,c
  4495  002EBA  B0D8               	btfsc	status,0,c
  4496  002EBC  EF62  F017         	goto	u6071
  4497  002EC0  EF64  F017         	goto	u6070
  4498  002EC4                     u6071:
  4499  002EC4  EFBF  F016         	goto	l5762
  4500  002EC8                     u6070:
  4501  002EC8  BE35               	btfsc	(dtoa@w+1)^0,7,c
  4502  002ECA  EF6F  F017         	goto	u6081
  4503  002ECE  5035               	movf	(dtoa@w+1)^0,w,c
  4504  002ED0  E108               	bnz	u6080
  4505  002ED2  0434               	decf	dtoa@w^0,w,c
  4506  002ED4  A0D8               	btfss	status,0,c
  4507  002ED6  EF6F  F017         	goto	u6081
  4508  002EDA  EF71  F017         	goto	u6080
  4509  002EDE                     u6081:
  4510  002EDE  EF79  F017         	goto	l5782
  4511  002EE2                     u6080:
  4512  002EE2  0100               	movlb	0	; () banked
  4513  002EE4  B3F5               	btfsc	_flags& (0+255),1,b
  4514  002EE6  EF77  F017         	goto	u6091
  4515  002EEA  EF79  F017         	goto	u6090
  4516  002EEE                     u6091:
  4517  002EEE  EFBF  F016         	goto	l5762
  4518  002EF2                     u6090:
  4519  002EF2                     l5782:
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4522  002EF2  5036               	movf	dtoa@s^0,w,c
  4523  002EF4  1037               	iorwf	(dtoa@s+1)^0,w,c
  4524  002EF6  A4D8               	btfss	status,2,c
  4525  002EF8  EF80  F017         	goto	u6101
  4526  002EFC  EF82  F017         	goto	u6100
  4527  002F00                     u6101:
  4528  002F00  EF8A  F017         	goto	l5786
  4529  002F04                     u6100:
  4530  002F04  0100               	movlb	0	; () banked
  4531  002F06  A5F5               	btfss	_flags& (0+255),2,b
  4532  002F08  EF88  F017         	goto	u6111
  4533  002F0C  EF8A  F017         	goto	u6110
  4534  002F10                     u6111:
  4535  002F10  EFA8  F017         	goto	l5796
  4536  002F14                     u6110:
  4537  002F14                     l5786:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4540  002F14  0640               	decf	dtoa@i^0,f,c
  4541  002F16  A0D8               	btfss	status,0,c
  4542  002F18  0641               	decf	(dtoa@i+1)^0,f,c
  4543  002F1A                     
  4544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4545  002F1A  5036               	movf	dtoa@s^0,w,c
  4546  002F1C  1037               	iorwf	(dtoa@s+1)^0,w,c
  4547  002F1E  A4D8               	btfss	status,2,c
  4548  002F20  EF94  F017         	goto	u6121
  4549  002F24  EF96  F017         	goto	u6120
  4550  002F28                     u6121:
  4551  002F28  EF9C  F017         	goto	l5792
  4552  002F2C                     u6120:
  4553  002F2C  0E00               	movlw	0
  4554  002F2E  6E31               	movwf	(_dtoa$2865+1)^0,c
  4555  002F30  0E2B               	movlw	43
  4556  002F32  6E30               	movwf	_dtoa$2865^0,c
  4557  002F34  EFA0  F017         	goto	l5794
  4558  002F38                     l5792:
  4559  002F38  0E00               	movlw	0
  4560  002F3A  6E31               	movwf	(_dtoa$2865+1)^0,c
  4561  002F3C  0E2D               	movlw	45
  4562  002F3E  6E30               	movwf	_dtoa$2865^0,c
  4563  002F40                     l5794:
  4564  002F40  0E9D               	movlw	low _dbuf
  4565  002F42  2440               	addwf	dtoa@i^0,w,c
  4566  002F44  6ED9               	movwf	fsr2l,c
  4567  002F46  0E01               	movlw	high _dbuf
  4568  002F48  2041               	addwfc	(dtoa@i+1)^0,w,c
  4569  002F4A  6EDA               	movwf	fsr2h,c
  4570  002F4C  C030  FFDF         	movff	_dtoa$2865,indf2
  4571  002F50                     l5796:
  4572                           
  4573                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4574  002F50  C01E  F013         	movff	dtoa@fp,pad@fp
  4575  002F54  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  4576  002F58  0E9D               	movlw	low _dbuf
  4577  002F5A  2440               	addwf	dtoa@i^0,w,c
  4578  002F5C  6E15               	movwf	pad@buf^0,c
  4579  002F5E  0E01               	movlw	high _dbuf
  4580  002F60  2041               	addwfc	(dtoa@i+1)^0,w,c
  4581  002F62  6E16               	movwf	(pad@buf+1)^0,c
  4582  002F64  C034  F017         	movff	dtoa@w,pad@p
  4583  002F68  C035  F018         	movff	dtoa@w+1,pad@p+1
  4584  002F6C  ECF5  F024         	call	_pad	;wreg free
  4585  002F70  C013  F01E         	movff	?_pad,?_dtoa
  4586  002F74  C014  F01F         	movff	?_pad+1,?_dtoa+1
  4587  002F78  0012               	return		;funcret
  4588  002F7A                     __end_of_dtoa:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _pad *****************
  4592 ;; Defined at:
  4593 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4596 ;;		 -> sprintf@f(11), 
  4597 ;;  buf             2   20[COMRAM] PTR unsigned char 
  4598 ;;		 -> dbuf(32), 
  4599 ;;  p               2   22[COMRAM] int 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  w               2   27[COMRAM] int 
  4602 ;;  i               2   25[COMRAM] int 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2   18[COMRAM] int 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:       11 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 5
  4619 ;; This function calls:
  4620 ;;		_fputc
  4621 ;;		_fputs
  4622 ;;		_strlen
  4623 ;; This function is called by:
  4624 ;;		_dtoa
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text14
  4629  0049EA                     __ptext14:
  4630                           	callstack 0
  4631  0049EA                     _pad:
  4632                           	callstack 19
  4633  0049EA                     
  4634                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4635  0049EA  0100               	movlb	0	; () banked
  4636  0049EC  A1F5               	btfss	_flags& (0+255),0,b
  4637  0049EE  EFFB  F024         	goto	u5871
  4638  0049F2  EFFD  F024         	goto	u5870
  4639  0049F6                     u5871:
  4640  0049F6  EF07  F025         	goto	l5666
  4641  0049FA                     u5870:
  4642  0049FA                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4645  0049FA  C015  F00C         	movff	pad@buf,fputs@s
  4646  0049FE  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4647  004A02  C013  F00E         	movff	pad@fp,fputs@fp
  4648  004A06  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4649  004A0A  EC62  F029         	call	_fputs	;wreg free
  4650  004A0E                     l5666:
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4653  004A0E  BE18               	btfsc	(pad@p+1)^0,7,c
  4654  004A10  EF0C  F025         	goto	u5881
  4655  004A14  EF0E  F025         	goto	u5880
  4656  004A18                     u5881:
  4657  004A18  EF14  F025         	goto	l5670
  4658  004A1C                     u5880:
  4659  004A1C  C017  F01C         	movff	pad@p,pad@w
  4660  004A20  C018  F01D         	movff	pad@p+1,pad@w+1
  4661  004A24  EF18  F025         	goto	l1468
  4662  004A28                     l5670:
  4663  004A28  0E00               	movlw	0
  4664  004A2A  6E1D               	movwf	(pad@w+1)^0,c
  4665  004A2C  0E00               	movlw	0
  4666  004A2E  6E1C               	movwf	pad@w^0,c
  4667  004A30                     l1468:
  4668                           
  4669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4670  004A30  0E00               	movlw	0
  4671  004A32  6E1B               	movwf	(pad@i+1)^0,c
  4672  004A34  0E00               	movlw	0
  4673  004A36  6E1A               	movwf	pad@i^0,c
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4676  004A38  EF2A  F025         	goto	l5676
  4677  004A3C                     l5672:
  4678                           
  4679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4680  004A3C  0E00               	movlw	0
  4681  004A3E  6E04               	movwf	(fputc@c+1)^0,c
  4682  004A40  0E20               	movlw	32
  4683  004A42  6E03               	movwf	fputc@c^0,c
  4684  004A44  C013  F005         	movff	pad@fp,fputc@fp
  4685  004A48  C014  F006         	movff	pad@fp+1,fputc@fp+1
  4686  004A4C  EC90  F024         	call	_fputc	;wreg free
  4687  004A50                     
  4688                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4689  004A50  4A1A               	infsnz	pad@i^0,f,c
  4690  004A52  2A1B               	incf	(pad@i+1)^0,f,c
  4691  004A54                     l5676:
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4694  004A54  501C               	movf	pad@w^0,w,c
  4695  004A56  5C1A               	subwf	pad@i^0,w,c
  4696  004A58  501B               	movf	(pad@i+1)^0,w,c
  4697  004A5A  0A80               	xorlw	128
  4698  004A5C  6E19               	movwf	??_pad^0,c
  4699  004A5E  501D               	movf	(pad@w+1)^0,w,c
  4700  004A60  0A80               	xorlw	128
  4701  004A62  5819               	subwfb	??_pad^0,w,c
  4702  004A64  A0D8               	btfss	status,0,c
  4703  004A66  EF37  F025         	goto	u5891
  4704  004A6A  EF39  F025         	goto	u5890
  4705  004A6E                     u5891:
  4706  004A6E  EF1E  F025         	goto	l5672
  4707  004A72                     u5890:
  4708  004A72                     
  4709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4710  004A72  0100               	movlb	0	; () banked
  4711  004A74  B1F5               	btfsc	_flags& (0+255),0,b
  4712  004A76  EF3F  F025         	goto	u5901
  4713  004A7A  EF41  F025         	goto	u5900
  4714  004A7E                     u5901:
  4715  004A7E  EF4B  F025         	goto	l5680
  4716  004A82                     u5900:
  4717  004A82                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4720  004A82  C015  F00C         	movff	pad@buf,fputs@s
  4721  004A86  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4722  004A8A  C013  F00E         	movff	pad@fp,fputs@fp
  4723  004A8E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4724  004A92  EC62  F029         	call	_fputs	;wreg free
  4725  004A96                     l5680:
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4728  004A96  C015  F003         	movff	pad@buf,strlen@s
  4729  004A9A  C016  F004         	movff	pad@buf+1,strlen@s+1
  4730  004A9E  EC7E  F02A         	call	_strlen	;wreg free
  4731  004AA2  501C               	movf	pad@w^0,w,c
  4732  004AA4  2403               	addwf	?_strlen^0,w,c
  4733  004AA6  6E13               	movwf	?_pad^0,c
  4734  004AA8  501D               	movf	(pad@w+1)^0,w,c
  4735  004AAA  2004               	addwfc	(?_strlen+1)^0,w,c
  4736  004AAC  6E14               	movwf	(?_pad+1)^0,c
  4737  004AAE  0012               	return		;funcret
  4738  004AB0                     __end_of_pad:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function _strlen *****************
  4742 ;; Defined at:
  4743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4746 ;;		 -> dbuf(32), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4749 ;;		 -> dbuf(32), 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  2    2[COMRAM] unsigned int 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;Total ram usage:        4 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; Hardware stack levels required when called: 2
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_pad
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text15
  4774  0054FC                     __ptext15:
  4775                           	callstack 0
  4776  0054FC                     _strlen:
  4777                           	callstack 21
  4778  0054FC  C003  F005         	movff	strlen@s,strlen@a
  4779  005500  C004  F006         	movff	strlen@s+1,strlen@a+1
  4780  005504  EF86  F02A         	goto	l5576
  4781  005508                     l5574:
  4782  005508  4A03               	infsnz	strlen@s^0,f,c
  4783  00550A  2A04               	incf	(strlen@s+1)^0,f,c
  4784  00550C                     l5576:
  4785  00550C  C003  FFD9         	movff	strlen@s,fsr2l
  4786  005510  C004  FFDA         	movff	strlen@s+1,fsr2h
  4787  005514  50DF               	movf	indf2,w,c
  4788  005516  A4D8               	btfss	status,2,c
  4789  005518  EF90  F02A         	goto	u5731
  4790  00551C  EF92  F02A         	goto	u5730
  4791  005520                     u5731:
  4792  005520  EF84  F02A         	goto	l5574
  4793  005524                     u5730:
  4794  005524  5005               	movf	strlen@a^0,w,c
  4795  005526  5C03               	subwf	strlen@s^0,w,c
  4796  005528  6E03               	movwf	?_strlen^0,c
  4797  00552A  5006               	movf	(strlen@a+1)^0,w,c
  4798  00552C  5804               	subwfb	(strlen@s+1)^0,w,c
  4799  00552E  6E04               	movwf	(?_strlen+1)^0,c
  4800  005530  0012               	return		;funcret
  4801  005532                     __end_of_strlen:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _fputs *****************
  4805 ;; Defined at:
  4806 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4809 ;;		 -> dbuf(32), 
  4810 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4811 ;;		 -> sprintf@f(11), 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  i               2   16[COMRAM] int 
  4814 ;;  c               1   15[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2   11[COMRAM] int 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;Total ram usage:        7 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 4
  4831 ;; This function calls:
  4832 ;;		_fputc
  4833 ;; This function is called by:
  4834 ;;		_pad
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text16
  4839  0052C4                     __ptext16:
  4840                           	callstack 0
  4841  0052C4                     _fputs:
  4842                           	callstack 19
  4843  0052C4  0E00               	movlw	0
  4844  0052C6  6E12               	movwf	(fputs@i+1)^0,c
  4845  0052C8  0E00               	movlw	0
  4846  0052CA  6E11               	movwf	fputs@i^0,c
  4847  0052CC  EF73  F029         	goto	l5570
  4848  0052D0                     l5566:
  4849  0052D0  C010  F003         	movff	fputs@c,fputc@c
  4850  0052D4  6A04               	clrf	(fputc@c+1)^0,c
  4851  0052D6  C00E  F005         	movff	fputs@fp,fputc@fp
  4852  0052DA  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  4853  0052DE  EC90  F024         	call	_fputc	;wreg free
  4854  0052E2  4A11               	infsnz	fputs@i^0,f,c
  4855  0052E4  2A12               	incf	(fputs@i+1)^0,f,c
  4856  0052E6                     l5570:
  4857  0052E6  5011               	movf	fputs@i^0,w,c
  4858  0052E8  240C               	addwf	fputs@s^0,w,c
  4859  0052EA  6ED9               	movwf	fsr2l,c
  4860  0052EC  5012               	movf	(fputs@i+1)^0,w,c
  4861  0052EE  200D               	addwfc	(fputs@s+1)^0,w,c
  4862  0052F0  6EDA               	movwf	fsr2h,c
  4863  0052F2  50DF               	movf	indf2,w,c
  4864  0052F4  6E10               	movwf	fputs@c^0,c
  4865  0052F6  5010               	movf	fputs@c^0,w,c
  4866  0052F8  A4D8               	btfss	status,2,c
  4867  0052FA  EF81  F029         	goto	u5721
  4868  0052FE  EF83  F029         	goto	u5720
  4869  005302                     u5721:
  4870  005302  EF68  F029         	goto	l5566
  4871  005306                     u5720:
  4872  005306  0012               	return		;funcret
  4873  005308                     __end_of_fputs:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function _fputc *****************
  4877 ;; Defined at:
  4878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  c               2    2[COMRAM] int 
  4881 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4882 ;;		 -> sprintf@f(11), 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  2    2[COMRAM] int 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;Total ram usage:        9 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 3
  4901 ;; This function calls:
  4902 ;;		_putch
  4903 ;; This function is called by:
  4904 ;;		_pad
  4905 ;;		_vfpfcnvrt
  4906 ;;		_fputs
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text17
  4911  004920                     __ptext17:
  4912                           	callstack 0
  4913  004920                     _fputc:
  4914                           	callstack 22
  4915  004920  5005               	movf	fputc@fp^0,w,c
  4916  004922  1006               	iorwf	(fputc@fp+1)^0,w,c
  4917  004924  B4D8               	btfsc	status,2,c
  4918  004926  EF97  F024         	goto	u5681
  4919  00492A  EF99  F024         	goto	u5680
  4920  00492E                     u5681:
  4921  00492E  EFA2  F024         	goto	l5554
  4922  004932                     u5680:
  4923  004932  5005               	movf	fputc@fp^0,w,c
  4924  004934  1006               	iorwf	(fputc@fp+1)^0,w,c
  4925  004936  A4D8               	btfss	status,2,c
  4926  004938  EFA0  F024         	goto	u5691
  4927  00493C  EFA2  F024         	goto	u5690
  4928  004940                     u5691:
  4929  004940  EFA7  F024         	goto	l5556
  4930  004944                     u5690:
  4931  004944                     l5554:
  4932  004944  5003               	movf	fputc@c^0,w,c
  4933  004946  ECE1  F02B         	call	_putch
  4934  00494A  EFF4  F024         	goto	l1532
  4935  00494E                     l5556:
  4936  00494E  EE20 F009          	lfsr	2,9
  4937  004952  5005               	movf	fputc@fp^0,w,c
  4938  004954  26D9               	addwf	fsr2l,f,c
  4939  004956  5006               	movf	(fputc@fp+1)^0,w,c
  4940  004958  22DA               	addwfc	fsr2h,f,c
  4941  00495A  50DE               	movf	postinc2,w,c
  4942  00495C  10DE               	iorwf	postinc2,w,c
  4943  00495E  B4D8               	btfsc	status,2,c
  4944  004960  EFB4  F024         	goto	u5701
  4945  004964  EFB6  F024         	goto	u5700
  4946  004968                     u5701:
  4947  004968  EFD1  F024         	goto	l5560
  4948  00496C                     u5700:
  4949  00496C  EE20 F009          	lfsr	2,9
  4950  004970  5005               	movf	fputc@fp^0,w,c
  4951  004972  26D9               	addwf	fsr2l,f,c
  4952  004974  5006               	movf	(fputc@fp+1)^0,w,c
  4953  004976  22DA               	addwfc	fsr2h,f,c
  4954  004978  EE10 F003          	lfsr	1,3
  4955  00497C  5005               	movf	fputc@fp^0,w,c
  4956  00497E  26E1               	addwf	fsr1l,f,c
  4957  004980  5006               	movf	(fputc@fp+1)^0,w,c
  4958  004982  22E2               	addwfc	fsr1h,f,c
  4959  004984  50DE               	movf	postinc2,w,c
  4960  004986  5CE6               	subwf	postinc1,w,c
  4961  004988  50E6               	movf	postinc1,w,c
  4962  00498A  0A80               	xorlw	128
  4963  00498C  6E0B               	movwf	(??_fputc+4)^0,c
  4964  00498E  50DE               	movf	postinc2,w,c
  4965  004990  0A80               	xorlw	128
  4966  004992  580B               	subwfb	(??_fputc+4)^0,w,c
  4967  004994  B0D8               	btfsc	status,0,c
  4968  004996  EFCF  F024         	goto	u5711
  4969  00499A  EFD1  F024         	goto	u5710
  4970  00499E                     u5711:
  4971  00499E  EFF4  F024         	goto	l1532
  4972  0049A2                     u5710:
  4973  0049A2                     l5560:
  4974  0049A2  EE20 F003          	lfsr	2,3
  4975  0049A6  5005               	movf	fputc@fp^0,w,c
  4976  0049A8  26D9               	addwf	fsr2l,f,c
  4977  0049AA  5006               	movf	(fputc@fp+1)^0,w,c
  4978  0049AC  22DA               	addwfc	fsr2h,f,c
  4979  0049AE  CFDE F007          	movff	postinc2,??_fputc
  4980  0049B2  CFDD F008          	movff	postdec2,??_fputc+1
  4981  0049B6  C005  FFD9         	movff	fputc@fp,fsr2l
  4982  0049BA  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4983  0049BE  CFDE F009          	movff	postinc2,??_fputc+2
  4984  0049C2  CFDD F00A          	movff	postdec2,??_fputc+3
  4985  0049C6  5007               	movf	??_fputc^0,w,c
  4986  0049C8  2409               	addwf	(??_fputc+2)^0,w,c
  4987  0049CA  6ED9               	movwf	fsr2l,c
  4988  0049CC  5008               	movf	(??_fputc+1)^0,w,c
  4989  0049CE  200A               	addwfc	(??_fputc+3)^0,w,c
  4990  0049D0  6EDA               	movwf	fsr2h,c
  4991  0049D2  C003  FFDF         	movff	fputc@c,indf2
  4992  0049D6  EE20 F003          	lfsr	2,3
  4993  0049DA  5005               	movf	fputc@fp^0,w,c
  4994  0049DC  26D9               	addwf	fsr2l,f,c
  4995  0049DE  5006               	movf	(fputc@fp+1)^0,w,c
  4996  0049E0  22DA               	addwfc	fsr2h,f,c
  4997  0049E2  2ADE               	incf	postinc2,f,c
  4998  0049E4  0E00               	movlw	0
  4999  0049E6  22DD               	addwfc	postdec2,f,c
  5000  0049E8                     l1532:
  5001  0049E8  0012               	return		;funcret
  5002  0049EA                     __end_of_fputc:
  5003                           	callstack 0
  5004                           
  5005 ;; *************** function _putch *****************
  5006 ;; Defined at:
  5007 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  c               1    wreg     unsigned char 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  c               1    0[COMRAM] unsigned char 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; Hardware stack levels required when called: 2
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_fputc
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text18
  5036  0057C2                     __ptext18:
  5037                           	callstack 0
  5038  0057C2                     _putch:
  5039                           	callstack 22
  5040  0057C2  0012               	return		;funcret
  5041  0057C4                     __end_of_putch:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _abs *****************
  5045 ;; Defined at:
  5046 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  a               2   20[COMRAM] int 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2   20[COMRAM] int 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;Total ram usage:        4 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 2
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_dtoa
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text19
  5075  005410                     __ptext19:
  5076                           	callstack 0
  5077  005410                     _abs:
  5078                           	callstack 22
  5079  005410  BE16               	btfsc	(abs@a+1)^0,7,c
  5080  005412  EF15  F02A         	goto	u5910
  5081  005416  5016               	movf	(abs@a+1)^0,w,c
  5082  005418  E106               	bnz	u5911
  5083  00541A  0415               	decf	abs@a^0,w,c
  5084  00541C  B0D8               	btfsc	status,0,c
  5085  00541E  EF13  F02A         	goto	u5911
  5086  005422  EF15  F02A         	goto	u5910
  5087  005426                     u5911:
  5088  005426  EF23  F02A         	goto	l1517
  5089  00542A                     u5910:
  5090  00542A  C015  F017         	movff	abs@a,??_abs
  5091  00542E  C016  F018         	movff	abs@a+1,??_abs+1
  5092  005432  1E17               	comf	??_abs^0,f,c
  5093  005434  1E18               	comf	(??_abs+1)^0,f,c
  5094  005436  4A17               	infsnz	??_abs^0,f,c
  5095  005438  2A18               	incf	(??_abs+1)^0,f,c
  5096  00543A  C017  F015         	movff	??_abs,?_abs
  5097  00543E  C018  F016         	movff	??_abs+1,?_abs+1
  5098  005442  EF27  F02A         	goto	l1520
  5099  005446                     l1517:
  5100  005446  C015  F015         	movff	abs@a,?_abs
  5101  00544A  C016  F016         	movff	abs@a+1,?_abs+1
  5102  00544E                     l1520:
  5103  00544E  0012               	return		;funcret
  5104  005450                     __end_of_abs:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function ___aomod *****************
  5108 ;; Defined at:
  5109 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  dividend        8    2[COMRAM] long long 
  5112 ;;  divisor         8   10[COMRAM] long long 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  sign            1   19[COMRAM] unsigned char 
  5115 ;;  counter         1   18[COMRAM] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  8    2[COMRAM] long long 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5125 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;Total ram usage:       18 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_dtoa
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text20
  5140  0043B6                     __ptext20:
  5141                           	callstack 0
  5142  0043B6                     ___aomod:
  5143                           	callstack 22
  5144  0043B6  0E00               	movlw	0
  5145  0043B8  6E14               	movwf	___aomod@sign^0,c
  5146  0043BA  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  5147  0043BC  EFE4  F021         	goto	u5810
  5148  0043C0  EFE2  F021         	goto	u5811
  5149  0043C4                     u5811:
  5150  0043C4  EFF6  F021         	goto	l5634
  5151  0043C8                     u5810:
  5152  0043C8  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5153  0043CA  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5154  0043CC  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5155  0043CE  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5156  0043D0  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5157  0043D2  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5158  0043D4  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5159  0043D6  6C03               	negf	___aomod@dividend^0,c
  5160  0043D8  0E00               	movlw	0
  5161  0043DA  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5162  0043DC  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5163  0043DE  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5164  0043E0  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5165  0043E2  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5166  0043E4  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5167  0043E6  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5168  0043E8  0E01               	movlw	1
  5169  0043EA  6E14               	movwf	___aomod@sign^0,c
  5170  0043EC                     l5634:
  5171  0043EC  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  5172  0043EE  EFFD  F021         	goto	u5820
  5173  0043F2  EFFB  F021         	goto	u5821
  5174  0043F6                     u5821:
  5175  0043F6  EF0D  F022         	goto	l5638
  5176  0043FA                     u5820:
  5177  0043FA  1E12               	comf	(___aomod@divisor+7)^0,f,c
  5178  0043FC  1E11               	comf	(___aomod@divisor+6)^0,f,c
  5179  0043FE  1E10               	comf	(___aomod@divisor+5)^0,f,c
  5180  004400  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  5181  004402  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  5182  004404  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  5183  004406  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  5184  004408  6C0B               	negf	___aomod@divisor^0,c
  5185  00440A  0E00               	movlw	0
  5186  00440C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  5187  00440E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  5188  004410  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  5189  004412  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  5190  004414  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  5191  004416  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  5192  004418  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  5193  00441A                     l5638:
  5194  00441A  500B               	movf	___aomod@divisor^0,w,c
  5195  00441C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  5196  00441E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  5197  004420  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  5198  004422  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  5199  004424  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  5200  004426  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  5201  004428  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  5202  00442A  B4D8               	btfsc	status,2,c
  5203  00442C  EF1A  F022         	goto	u5831
  5204  004430  EF1C  F022         	goto	u5830
  5205  004434                     u5831:
  5206  004434  EF64  F022         	goto	l5654
  5207  004438                     u5830:
  5208  004438  0E01               	movlw	1
  5209  00443A  6E13               	movwf	___aomod@counter^0,c
  5210  00443C  EF2A  F022         	goto	l5644
  5211  004440                     l5642:
  5212  004440  90D8               	bcf	status,0,c
  5213  004442  360B               	rlcf	___aomod@divisor^0,f,c
  5214  004444  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  5215  004446  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  5216  004448  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  5217  00444A  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  5218  00444C  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  5219  00444E  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  5220  004450  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  5221  004452  2A13               	incf	___aomod@counter^0,f,c
  5222  004454                     l5644:
  5223  004454  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  5224  004456  EF2F  F022         	goto	u5841
  5225  00445A  EF31  F022         	goto	u5840
  5226  00445E                     u5841:
  5227  00445E  EF20  F022         	goto	l5642
  5228  004462                     u5840:
  5229  004462                     l5646:
  5230  004462  500B               	movf	___aomod@divisor^0,w,c
  5231  004464  5C03               	subwf	___aomod@dividend^0,w,c
  5232  004466  500C               	movf	(___aomod@divisor+1)^0,w,c
  5233  004468  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  5234  00446A  500D               	movf	(___aomod@divisor+2)^0,w,c
  5235  00446C  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  5236  00446E  500E               	movf	(___aomod@divisor+3)^0,w,c
  5237  004470  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  5238  004472  500F               	movf	(___aomod@divisor+4)^0,w,c
  5239  004474  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  5240  004476  5010               	movf	(___aomod@divisor+5)^0,w,c
  5241  004478  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  5242  00447A  5011               	movf	(___aomod@divisor+6)^0,w,c
  5243  00447C  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  5244  00447E  5012               	movf	(___aomod@divisor+7)^0,w,c
  5245  004480  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  5246  004482  A0D8               	btfss	status,0,c
  5247  004484  EF46  F022         	goto	u5851
  5248  004488  EF48  F022         	goto	u5850
  5249  00448C                     u5851:
  5250  00448C  EF58  F022         	goto	l5650
  5251  004490                     u5850:
  5252  004490  500B               	movf	___aomod@divisor^0,w,c
  5253  004492  5E03               	subwf	___aomod@dividend^0,f,c
  5254  004494  500C               	movf	(___aomod@divisor+1)^0,w,c
  5255  004496  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  5256  004498  500D               	movf	(___aomod@divisor+2)^0,w,c
  5257  00449A  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  5258  00449C  500E               	movf	(___aomod@divisor+3)^0,w,c
  5259  00449E  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  5260  0044A0  500F               	movf	(___aomod@divisor+4)^0,w,c
  5261  0044A2  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  5262  0044A4  5010               	movf	(___aomod@divisor+5)^0,w,c
  5263  0044A6  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  5264  0044A8  5011               	movf	(___aomod@divisor+6)^0,w,c
  5265  0044AA  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  5266  0044AC  5012               	movf	(___aomod@divisor+7)^0,w,c
  5267  0044AE  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  5268  0044B0                     l5650:
  5269  0044B0  90D8               	bcf	status,0,c
  5270  0044B2  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  5271  0044B4  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  5272  0044B6  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  5273  0044B8  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  5274  0044BA  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  5275  0044BC  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  5276  0044BE  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  5277  0044C0  320B               	rrcf	___aomod@divisor^0,f,c
  5278  0044C2  2E13               	decfsz	___aomod@counter^0,f,c
  5279  0044C4  EF31  F022         	goto	l5646
  5280  0044C8                     l5654:
  5281  0044C8  5014               	movf	___aomod@sign^0,w,c
  5282  0044CA  B4D8               	btfsc	status,2,c
  5283  0044CC  EF6A  F022         	goto	u5861
  5284  0044D0  EF6C  F022         	goto	u5860
  5285  0044D4                     u5861:
  5286  0044D4  EF7C  F022         	goto	l5658
  5287  0044D8                     u5860:
  5288  0044D8  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5289  0044DA  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5290  0044DC  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5291  0044DE  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5292  0044E0  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5293  0044E2  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5294  0044E4  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5295  0044E6  6C03               	negf	___aomod@dividend^0,c
  5296  0044E8  0E00               	movlw	0
  5297  0044EA  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5298  0044EC  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5299  0044EE  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5300  0044F0  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5301  0044F2  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5302  0044F4  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5303  0044F6  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5304  0044F8                     l5658:
  5305  0044F8  C003  F003         	movff	___aomod@dividend,?___aomod
  5306  0044FC  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  5307  004500  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  5308  004504  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  5309  004508  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  5310  00450C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  5311  004510  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  5312  004514  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  5313  004518  0012               	return		;funcret
  5314  00451A                     __end_of___aomod:
  5315                           	callstack 0
  5316                           
  5317 ;; *************** function ___aodiv *****************
  5318 ;; Defined at:
  5319 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  dividend        8    2[COMRAM] long long 
  5322 ;;  divisor         8   10[COMRAM] long long 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  quotient        8   20[COMRAM] long long 
  5325 ;;  sign            1   19[COMRAM] unsigned char 
  5326 ;;  counter         1   18[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  8    2[COMRAM] long long 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5336 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;Total ram usage:       26 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 2
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_dtoa
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text21
  5351  003F2E                     __ptext21:
  5352                           	callstack 0
  5353  003F2E                     ___aodiv:
  5354                           	callstack 22
  5355  003F2E  0E00               	movlw	0
  5356  003F30  6E14               	movwf	___aodiv@sign^0,c
  5357  003F32  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  5358  003F34  EFA0  F01F         	goto	u5740
  5359  003F38  EF9E  F01F         	goto	u5741
  5360  003F3C                     u5741:
  5361  003F3C  EFB2  F01F         	goto	l5590
  5362  003F40                     u5740:
  5363  003F40  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  5364  003F42  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  5365  003F44  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  5366  003F46  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  5367  003F48  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  5368  003F4A  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  5369  003F4C  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  5370  003F4E  6C0B               	negf	___aodiv@divisor^0,c
  5371  003F50  0E00               	movlw	0
  5372  003F52  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  5373  003F54  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  5374  003F56  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  5375  003F58  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  5376  003F5A  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  5377  003F5C  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  5378  003F5E  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  5379  003F60  0E01               	movlw	1
  5380  003F62  6E14               	movwf	___aodiv@sign^0,c
  5381  003F64                     l5590:
  5382  003F64  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  5383  003F66  EFB9  F01F         	goto	u5750
  5384  003F6A  EFB7  F01F         	goto	u5751
  5385  003F6E                     u5751:
  5386  003F6E  EFCB  F01F         	goto	l5596
  5387  003F72                     u5750:
  5388  003F72  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  5389  003F74  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  5390  003F76  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  5391  003F78  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  5392  003F7A  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  5393  003F7C  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  5394  003F7E  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  5395  003F80  6C03               	negf	___aodiv@dividend^0,c
  5396  003F82  0E00               	movlw	0
  5397  003F84  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  5398  003F86  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  5399  003F88  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  5400  003F8A  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  5401  003F8C  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  5402  003F8E  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  5403  003F90  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  5404  003F92  0E01               	movlw	1
  5405  003F94  1A14               	xorwf	___aodiv@sign^0,f,c
  5406  003F96                     l5596:
  5407  003F96  EE20  F015         	lfsr	2,___aodiv@quotient
  5408  003F9A  0E07               	movlw	7
  5409  003F9C                     u5761:
  5410  003F9C  6ADE               	clrf	postinc2,c
  5411  003F9E  06E8               	decf	wreg,f,c
  5412  003FA0  E2FD               	bc	u5761
  5413  003FA2  500B               	movf	___aodiv@divisor^0,w,c
  5414  003FA4  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  5415  003FA6  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  5416  003FA8  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  5417  003FAA  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  5418  003FAC  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  5419  003FAE  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  5420  003FB0  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  5421  003FB2  B4D8               	btfsc	status,2,c
  5422  003FB4  EFDE  F01F         	goto	u5771
  5423  003FB8  EFE0  F01F         	goto	u5770
  5424  003FBC                     u5771:
  5425  003FBC  EF32  F020         	goto	l5618
  5426  003FC0                     u5770:
  5427  003FC0  0E01               	movlw	1
  5428  003FC2  6E13               	movwf	___aodiv@counter^0,c
  5429  003FC4  EFEE  F01F         	goto	l5604
  5430  003FC8                     l5602:
  5431  003FC8  90D8               	bcf	status,0,c
  5432  003FCA  360B               	rlcf	___aodiv@divisor^0,f,c
  5433  003FCC  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  5434  003FCE  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  5435  003FD0  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  5436  003FD2  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  5437  003FD4  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  5438  003FD6  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  5439  003FD8  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  5440  003FDA  2A13               	incf	___aodiv@counter^0,f,c
  5441  003FDC                     l5604:
  5442  003FDC  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  5443  003FDE  EFF3  F01F         	goto	u5781
  5444  003FE2  EFF5  F01F         	goto	u5780
  5445  003FE6                     u5781:
  5446  003FE6  EFE4  F01F         	goto	l5602
  5447  003FEA                     u5780:
  5448  003FEA                     l5606:
  5449  003FEA  90D8               	bcf	status,0,c
  5450  003FEC  3615               	rlcf	___aodiv@quotient^0,f,c
  5451  003FEE  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  5452  003FF0  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  5453  003FF2  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  5454  003FF4  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  5455  003FF6  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  5456  003FF8  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  5457  003FFA  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  5458  003FFC  500B               	movf	___aodiv@divisor^0,w,c
  5459  003FFE  5C03               	subwf	___aodiv@dividend^0,w,c
  5460  004000  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5461  004002  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  5462  004004  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5463  004006  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  5464  004008  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5465  00400A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  5466  00400C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5467  00400E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  5468  004010  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5469  004012  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  5470  004014  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5471  004016  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  5472  004018  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5473  00401A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  5474  00401C  A0D8               	btfss	status,0,c
  5475  00401E  EF13  F020         	goto	u5791
  5476  004022  EF15  F020         	goto	u5790
  5477  004026                     u5791:
  5478  004026  EF26  F020         	goto	l5614
  5479  00402A                     u5790:
  5480  00402A  500B               	movf	___aodiv@divisor^0,w,c
  5481  00402C  5E03               	subwf	___aodiv@dividend^0,f,c
  5482  00402E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5483  004030  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  5484  004032  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5485  004034  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  5486  004036  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5487  004038  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  5488  00403A  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5489  00403C  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  5490  00403E  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5491  004040  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  5492  004042  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5493  004044  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  5494  004046  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5495  004048  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  5496  00404A  8015               	bsf	___aodiv@quotient^0,0,c
  5497  00404C                     l5614:
  5498  00404C  90D8               	bcf	status,0,c
  5499  00404E  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  5500  004050  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  5501  004052  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  5502  004054  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  5503  004056  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  5504  004058  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  5505  00405A  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  5506  00405C  320B               	rrcf	___aodiv@divisor^0,f,c
  5507  00405E  2E13               	decfsz	___aodiv@counter^0,f,c
  5508  004060  EFF5  F01F         	goto	l5606
  5509  004064                     l5618:
  5510  004064  5014               	movf	___aodiv@sign^0,w,c
  5511  004066  B4D8               	btfsc	status,2,c
  5512  004068  EF38  F020         	goto	u5801
  5513  00406C  EF3A  F020         	goto	u5800
  5514  004070                     u5801:
  5515  004070  EF4A  F020         	goto	l5622
  5516  004074                     u5800:
  5517  004074  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  5518  004076  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  5519  004078  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  5520  00407A  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  5521  00407C  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  5522  00407E  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  5523  004080  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  5524  004082  6C15               	negf	___aodiv@quotient^0,c
  5525  004084  0E00               	movlw	0
  5526  004086  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  5527  004088  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  5528  00408A  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  5529  00408C  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  5530  00408E  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  5531  004090  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  5532  004092  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  5533  004094                     l5622:
  5534  004094  C015  F003         	movff	___aodiv@quotient,?___aodiv
  5535  004098  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  5536  00409C  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  5537  0040A0  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  5538  0040A4  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  5539  0040A8  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  5540  0040AC  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  5541  0040B0  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  5542  0040B4  0012               	return		;funcret
  5543  0040B6                     __end_of___aodiv:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _sendStringSerial4 *****************
  5547 ;; Defined at:
  5548 ;;		line 36 in file "serial.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  string          2    3[COMRAM] PTR unsigned char 
  5551 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 3
  5570 ;; This function calls:
  5571 ;;		_sendCharSerial4
  5572 ;; This function is called by:
  5573 ;;		_color_display
  5574 ;;		_color_predict
  5575 ;;		_check_color_reading
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text22
  5580  005566                     __ptext22:
  5581                           	callstack 0
  5582  005566                     _sendStringSerial4:
  5583                           	callstack 25
  5584  005566                     
  5585                           ;serial.c: 38:     while(*string != 0){
  5586  005566  EFBE  F02A         	goto	l6334
  5587  00556A                     l6330:
  5588                           
  5589                           ;serial.c: 39:   sendCharSerial4(*string++);}
  5590  00556A  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  5591  00556E  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5592  005572  50DF               	movf	indf2,w,c
  5593  005574  ECAC  F02B         	call	_sendCharSerial4
  5594  005578  4A04               	infsnz	sendStringSerial4@string^0,f,c
  5595  00557A  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  5596  00557C                     l6334:
  5597                           
  5598                           ;serial.c: 38:     while(*string != 0){
  5599  00557C  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  5600  005580  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5601  005584  50DF               	movf	indf2,w,c
  5602  005586  A4D8               	btfss	status,2,c
  5603  005588  EFC8  F02A         	goto	u6951
  5604  00558C  EFCA  F02A         	goto	u6950
  5605  005590                     u6951:
  5606  005590  EFB5  F02A         	goto	l6330
  5607  005594                     u6950:
  5608  005594  0012               	return		;funcret
  5609  005596                     __end_of_sendStringSerial4:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _sendCharSerial4 *****************
  5613 ;; Defined at:
  5614 ;;		line 29 in file "serial.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  charToSend      1    wreg     unsigned char 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  charToSend      1    2[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;Total ram usage:        1 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 2
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_sendStringSerial4
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text23
  5643  005758                     __ptext23:
  5644                           	callstack 0
  5645  005758                     _sendCharSerial4:
  5646                           	callstack 25
  5647                           
  5648                           ;incstack = 0
  5649                           ;sendCharSerial4@charToSend stored from wreg
  5650  005758  6E03               	movwf	sendCharSerial4@charToSend^0,c
  5651  00575A                     l486:
  5652  00575A  010E               	movlb	14	; () banked
  5653  00575C  A537               	btfss	55,2,b	;volatile
  5654  00575E  EFB3  F02B         	goto	u6681
  5655  005762  EFB5  F02B         	goto	u6680
  5656  005766                     u6681:
  5657  005766  EFAD  F02B         	goto	l486
  5658  00576A                     u6680:
  5659  00576A                     
  5660                           ; BSR set to: 14
  5661                           ;serial.c: 31:     TX4REG = charToSend;
  5662  00576A  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5663  00576E                     
  5664                           ; BSR set to: 14
  5665  00576E  0012               	return		;funcret
  5666  005770                     __end_of_sendCharSerial4:
  5667                           	callstack 0
  5668                           
  5669 ;; *************** function _calibrate_white *****************
  5670 ;; Defined at:
  5671 ;;		line 298 in file "color.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  w               2   13[COMRAM] PTR struct white_card
  5674 ;;		 -> main@white(26), 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;Total ram usage:        4 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 5
  5693 ;; This function calls:
  5694 ;;		_LED_B
  5695 ;;		_LED_C
  5696 ;;		_LED_G
  5697 ;;		_LED_OFF
  5698 ;;		_LED_R
  5699 ;;		_color_read_Blue
  5700 ;;		_color_read_Clear
  5701 ;;		_color_read_Green
  5702 ;;		_color_read_Red
  5703 ;;		_toggle_light
  5704 ;; This function is called by:
  5705 ;;		_test_function
  5706 ;;		_main
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text24
  5711  0034B8                     __ptext24:
  5712                           	callstack 0
  5713  0034B8                     _calibrate_white:
  5714                           	callstack 24
  5715  0034B8                     
  5716                           ;color.c: 298: void calibrate_white(struct white_card *w);color.c: 299: {;color.c: 300: 
      +                              LED_OFF();
  5717  0034B8  EC2E  F02B         	call	_LED_OFF	;wreg free
  5718  0034BC                     
  5719                           ;color.c: 301:     toggle_light(1,2);
  5720  0034BC  0E02               	movlw	2
  5721  0034BE  6E03               	movwf	toggle_light@toggletime^0,c
  5722  0034C0  0E01               	movlw	1
  5723  0034C2  ECBD  F017         	call	_toggle_light
  5724  0034C6                     
  5725                           ;color.c: 302:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5726  0034C6  0E29               	movlw	41
  5727  0034C8  6E11               	movwf	(??_calibrate_white+1)^0,c
  5728  0034CA  0E96               	movlw	150
  5729  0034CC  6E10               	movwf	??_calibrate_white^0,c
  5730  0034CE  0E7F               	movlw	127
  5731  0034D0                     u8547:
  5732  0034D0  2EE8               	decfsz	wreg,f,c
  5733  0034D2  D7FE               	bra	u8547
  5734  0034D4  2E10               	decfsz	??_calibrate_white^0,f,c
  5735  0034D6  D7FC               	bra	u8547
  5736  0034D8  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5737  0034DA  D7FA               	bra	u8547
  5738  0034DC  F000               	nop	
  5739  0034DE                     
  5740                           ;color.c: 304:     LED_R();
  5741  0034DE  EC1E  F02B         	call	_LED_R	;wreg free
  5742  0034E2                     
  5743                           ;color.c: 305:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  5744  0034E2  EC9F  F028         	call	_color_read_Red	;wreg free
  5745  0034E6  C00E  FFD9         	movff	calibrate_white@w,fsr2l
  5746  0034EA  C00F  FFDA         	movff	calibrate_white@w+1,fsr2h
  5747  0034EE  C007  FFDE         	movff	?_color_read_Red,postinc2
  5748  0034F2  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5749  0034F6  ECC7  F028         	call	_color_read_Green	;wreg free
  5750  0034FA  EE20 F002          	lfsr	2,2
  5751  0034FE  500E               	movf	calibrate_white@w^0,w,c
  5752  003500  26D9               	addwf	fsr2l,f,c
  5753  003502  500F               	movf	(calibrate_white@w+1)^0,w,c
  5754  003504  22DA               	addwfc	fsr2h,f,c
  5755  003506  C007  FFDE         	movff	?_color_read_Green,postinc2
  5756  00350A  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5757  00350E  ECEF  F028         	call	_color_read_Blue	;wreg free
  5758  003512  EE20 F004          	lfsr	2,4
  5759  003516  500E               	movf	calibrate_white@w^0,w,c
  5760  003518  26D9               	addwf	fsr2l,f,c
  5761  00351A  500F               	movf	(calibrate_white@w+1)^0,w,c
  5762  00351C  22DA               	addwfc	fsr2h,f,c
  5763  00351E  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5764  003522  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5765  003526                     
  5766                           ;color.c: 306:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5767  003526  0E09               	movlw	9
  5768  003528  6E11               	movwf	(??_calibrate_white+1)^0,c
  5769  00352A  0E1E               	movlw	30
  5770  00352C  6E10               	movwf	??_calibrate_white^0,c
  5771  00352E  0EE4               	movlw	228
  5772  003530                     u8557:
  5773  003530  2EE8               	decfsz	wreg,f,c
  5774  003532  D7FE               	bra	u8557
  5775  003534  2E10               	decfsz	??_calibrate_white^0,f,c
  5776  003536  D7FC               	bra	u8557
  5777  003538  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5778  00353A  D7FA               	bra	u8557
  5779  00353C  D000               	nop2	
  5780  00353E                     
  5781                           ;color.c: 308:     LED_G();
  5782  00353E  EC3E  F02B         	call	_LED_G	;wreg free
  5783  003542                     
  5784                           ;color.c: 309:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  5785  003542  EC9F  F028         	call	_color_read_Red	;wreg free
  5786  003546  EE20 F006          	lfsr	2,6
  5787  00354A  500E               	movf	calibrate_white@w^0,w,c
  5788  00354C  26D9               	addwf	fsr2l,f,c
  5789  00354E  500F               	movf	(calibrate_white@w+1)^0,w,c
  5790  003550  22DA               	addwfc	fsr2h,f,c
  5791  003552  C007  FFDE         	movff	?_color_read_Red,postinc2
  5792  003556  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5793  00355A  ECC7  F028         	call	_color_read_Green	;wreg free
  5794  00355E  EE20 F008          	lfsr	2,8
  5795  003562  500E               	movf	calibrate_white@w^0,w,c
  5796  003564  26D9               	addwf	fsr2l,f,c
  5797  003566  500F               	movf	(calibrate_white@w+1)^0,w,c
  5798  003568  22DA               	addwfc	fsr2h,f,c
  5799  00356A  C007  FFDE         	movff	?_color_read_Green,postinc2
  5800  00356E  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5801  003572  ECEF  F028         	call	_color_read_Blue	;wreg free
  5802  003576  EE20 F00A          	lfsr	2,10
  5803  00357A  500E               	movf	calibrate_white@w^0,w,c
  5804  00357C  26D9               	addwf	fsr2l,f,c
  5805  00357E  500F               	movf	(calibrate_white@w+1)^0,w,c
  5806  003580  22DA               	addwfc	fsr2h,f,c
  5807  003582  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5808  003586  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5809  00358A                     
  5810                           ;color.c: 311:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5811  00358A  0E09               	movlw	9
  5812  00358C  6E11               	movwf	(??_calibrate_white+1)^0,c
  5813  00358E  0E1E               	movlw	30
  5814  003590  6E10               	movwf	??_calibrate_white^0,c
  5815  003592  0EE4               	movlw	228
  5816  003594                     u8567:
  5817  003594  2EE8               	decfsz	wreg,f,c
  5818  003596  D7FE               	bra	u8567
  5819  003598  2E10               	decfsz	??_calibrate_white^0,f,c
  5820  00359A  D7FC               	bra	u8567
  5821  00359C  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5822  00359E  D7FA               	bra	u8567
  5823  0035A0  D000               	nop2	
  5824  0035A2                     
  5825                           ;color.c: 313:     LED_B();
  5826  0035A2  EC4E  F02B         	call	_LED_B	;wreg free
  5827  0035A6                     
  5828                           ;color.c: 314:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  5829  0035A6  EC9F  F028         	call	_color_read_Red	;wreg free
  5830  0035AA  EE20 F00C          	lfsr	2,12
  5831  0035AE  500E               	movf	calibrate_white@w^0,w,c
  5832  0035B0  26D9               	addwf	fsr2l,f,c
  5833  0035B2  500F               	movf	(calibrate_white@w+1)^0,w,c
  5834  0035B4  22DA               	addwfc	fsr2h,f,c
  5835  0035B6  C007  FFDE         	movff	?_color_read_Red,postinc2
  5836  0035BA  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5837  0035BE  ECC7  F028         	call	_color_read_Green	;wreg free
  5838  0035C2  EE20 F00E          	lfsr	2,14
  5839  0035C6  500E               	movf	calibrate_white@w^0,w,c
  5840  0035C8  26D9               	addwf	fsr2l,f,c
  5841  0035CA  500F               	movf	(calibrate_white@w+1)^0,w,c
  5842  0035CC  22DA               	addwfc	fsr2h,f,c
  5843  0035CE  C007  FFDE         	movff	?_color_read_Green,postinc2
  5844  0035D2  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5845  0035D6  ECEF  F028         	call	_color_read_Blue	;wreg free
  5846  0035DA  EE20 F010          	lfsr	2,16
  5847  0035DE  500E               	movf	calibrate_white@w^0,w,c
  5848  0035E0  26D9               	addwf	fsr2l,f,c
  5849  0035E2  500F               	movf	(calibrate_white@w+1)^0,w,c
  5850  0035E4  22DA               	addwfc	fsr2h,f,c
  5851  0035E6  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5852  0035EA  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5853  0035EE                     
  5854                           ;color.c: 315:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5855  0035EE  0E09               	movlw	9
  5856  0035F0  6E11               	movwf	(??_calibrate_white+1)^0,c
  5857  0035F2  0E1E               	movlw	30
  5858  0035F4  6E10               	movwf	??_calibrate_white^0,c
  5859  0035F6  0EE4               	movlw	228
  5860  0035F8                     u8577:
  5861  0035F8  2EE8               	decfsz	wreg,f,c
  5862  0035FA  D7FE               	bra	u8577
  5863  0035FC  2E10               	decfsz	??_calibrate_white^0,f,c
  5864  0035FE  D7FC               	bra	u8577
  5865  003600  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5866  003602  D7FA               	bra	u8577
  5867  003604  D000               	nop2	
  5868  003606                     
  5869                           ;color.c: 317:     LED_C();
  5870  003606  EC5E  F02B         	call	_LED_C	;wreg free
  5871  00360A                     
  5872                           ;color.c: 318:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  5873  00360A  EC9F  F028         	call	_color_read_Red	;wreg free
  5874  00360E  EE20 F012          	lfsr	2,18
  5875  003612  500E               	movf	calibrate_white@w^0,w,c
  5876  003614  26D9               	addwf	fsr2l,f,c
  5877  003616  500F               	movf	(calibrate_white@w+1)^0,w,c
  5878  003618  22DA               	addwfc	fsr2h,f,c
  5879  00361A  C007  FFDE         	movff	?_color_read_Red,postinc2
  5880  00361E  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5881  003622  ECC7  F028         	call	_color_read_Green	;wreg free
  5882  003626  EE20 F014          	lfsr	2,20
  5883  00362A  500E               	movf	calibrate_white@w^0,w,c
  5884  00362C  26D9               	addwf	fsr2l,f,c
  5885  00362E  500F               	movf	(calibrate_white@w+1)^0,w,c
  5886  003630  22DA               	addwfc	fsr2h,f,c
  5887  003632  C007  FFDE         	movff	?_color_read_Green,postinc2
  5888  003636  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5889  00363A  ECEF  F028         	call	_color_read_Blue	;wreg free
  5890  00363E  EE20 F016          	lfsr	2,22
  5891  003642  500E               	movf	calibrate_white@w^0,w,c
  5892  003644  26D9               	addwf	fsr2l,f,c
  5893  003646  500F               	movf	(calibrate_white@w+1)^0,w,c
  5894  003648  22DA               	addwfc	fsr2h,f,c
  5895  00364A  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5896  00364E  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5897  003652  EC17  F029         	call	_color_read_Clear	;wreg free
  5898  003656  EE20 F018          	lfsr	2,24
  5899  00365A  500E               	movf	calibrate_white@w^0,w,c
  5900  00365C  26D9               	addwf	fsr2l,f,c
  5901  00365E  500F               	movf	(calibrate_white@w+1)^0,w,c
  5902  003660  22DA               	addwfc	fsr2h,f,c
  5903  003662  C007  FFDE         	movff	?_color_read_Clear,postinc2
  5904  003666  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  5905  00366A                     
  5906                           ;color.c: 319:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5907  00366A  0E29               	movlw	41
  5908  00366C  6E11               	movwf	(??_calibrate_white+1)^0,c
  5909  00366E  0E96               	movlw	150
  5910  003670  6E10               	movwf	??_calibrate_white^0,c
  5911  003672  0E7F               	movlw	127
  5912  003674                     u8587:
  5913  003674  2EE8               	decfsz	wreg,f,c
  5914  003676  D7FE               	bra	u8587
  5915  003678  2E10               	decfsz	??_calibrate_white^0,f,c
  5916  00367A  D7FC               	bra	u8587
  5917  00367C  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5918  00367E  D7FA               	bra	u8587
  5919  003680  F000               	nop	
  5920  003682                     
  5921                           ;color.c: 321:     LED_OFF();
  5922  003682  EC2E  F02B         	call	_LED_OFF	;wreg free
  5923  003686                     
  5924                           ;color.c: 322:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5925  003686  0E29               	movlw	41
  5926  003688  6E11               	movwf	(??_calibrate_white+1)^0,c
  5927  00368A  0E96               	movlw	150
  5928  00368C  6E10               	movwf	??_calibrate_white^0,c
  5929  00368E  0E7F               	movlw	127
  5930  003690                     u8597:
  5931  003690  2EE8               	decfsz	wreg,f,c
  5932  003692  D7FE               	bra	u8597
  5933  003694  2E10               	decfsz	??_calibrate_white^0,f,c
  5934  003696  D7FC               	bra	u8597
  5935  003698  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5936  00369A  D7FA               	bra	u8597
  5937  00369C  F000               	nop	
  5938  00369E                     
  5939                           ;color.c: 323:     toggle_light(1,2);
  5940  00369E  0E02               	movlw	2
  5941  0036A0  6E03               	movwf	toggle_light@toggletime^0,c
  5942  0036A2  0E01               	movlw	1
  5943  0036A4  ECBD  F017         	call	_toggle_light
  5944  0036A8  0012               	return		;funcret
  5945  0036AA                     __end_of_calibrate_white:
  5946                           	callstack 0
  5947                           
  5948 ;; *************** function _color_read_Red *****************
  5949 ;; Defined at:
  5950 ;;		line 131 in file "color.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  tmp             2   11[COMRAM] unsigned int 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2    6[COMRAM] unsigned int 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5968 ;;Total ram usage:        7 bytes
  5969 ;; Hardware stack levels used: 1
  5970 ;; Hardware stack levels required when called: 4
  5971 ;; This function calls:
  5972 ;;		_I2C_2_Master_Read
  5973 ;;		_I2C_2_Master_RepStart
  5974 ;;		_I2C_2_Master_Start
  5975 ;;		_I2C_2_Master_Stop
  5976 ;;		_I2C_2_Master_Write
  5977 ;; This function is called by:
  5978 ;;		_read_color
  5979 ;;		_calibrate_white
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text25
  5984  00513E                     __ptext25:
  5985                           	callstack 0
  5986  00513E                     _color_read_Red:
  5987                           	callstack 23
  5988  00513E                     
  5989                           ;color.c: 133:  unsigned int tmp;;color.c: 134:  I2C_2_Master_Start();
  5990  00513E  ECD9  F02B         	call	_I2C_2_Master_Start	;wreg free
  5991                           
  5992                           ;color.c: 135:  I2C_2_Master_Write(0x52 | 0x00);
  5993  005142  0E52               	movlw	82
  5994  005144  ECC3  F02B         	call	_I2C_2_Master_Write
  5995                           
  5996                           ;color.c: 136:  I2C_2_Master_Write(0xA0 | 0x16);
  5997  005148  0EB6               	movlw	182
  5998  00514A  ECC3  F02B         	call	_I2C_2_Master_Write
  5999                           
  6000                           ;color.c: 137:  I2C_2_Master_RepStart();
  6001  00514E  ECCF  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6002                           
  6003                           ;color.c: 138:  I2C_2_Master_Write(0x52 | 0x01);
  6004  005152  0E53               	movlw	83
  6005  005154  ECC3  F02B         	call	_I2C_2_Master_Write
  6006                           
  6007                           ;color.c: 139:  tmp=I2C_2_Master_Read(1);
  6008  005158  0E01               	movlw	1
  6009  00515A  EC84  F029         	call	_I2C_2_Master_Read
  6010  00515E  6E09               	movwf	??_color_read_Red^0,c
  6011  005160  5009               	movf	??_color_read_Red^0,w,c
  6012  005162  6E0C               	movwf	color_read_Red@tmp^0,c
  6013  005164  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  6014                           
  6015                           ;color.c: 140:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6016  005166  0E00               	movlw	0
  6017  005168  EC84  F029         	call	_I2C_2_Master_Read
  6018  00516C  6E09               	movwf	??_color_read_Red^0,c
  6019  00516E  5009               	movf	??_color_read_Red^0,w,c
  6020  005170  6E0B               	movwf	(??_color_read_Red+2)^0,c
  6021  005172  6A0A               	clrf	(??_color_read_Red+1)^0,c
  6022  005174  500C               	movf	color_read_Red@tmp^0,w,c
  6023  005176  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  6024  005178  6E0C               	movwf	color_read_Red@tmp^0,c
  6025  00517A  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  6026  00517C  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  6027  00517E  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  6028                           
  6029                           ;color.c: 141:  I2C_2_Master_Stop();
  6030  005180  ECD4  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6031  005184                     
  6032                           ;color.c: 142:  return tmp;
  6033  005184  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  6034  005188  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6035  00518C  0012               	return		;funcret
  6036  00518E                     __end_of_color_read_Red:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _color_read_Green *****************
  6040 ;; Defined at:
  6041 ;;		line 159 in file "color.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  tmp             2   11[COMRAM] unsigned int 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2    6[COMRAM] unsigned int 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;Total ram usage:        7 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 4
  6062 ;; This function calls:
  6063 ;;		_I2C_2_Master_Read
  6064 ;;		_I2C_2_Master_RepStart
  6065 ;;		_I2C_2_Master_Start
  6066 ;;		_I2C_2_Master_Stop
  6067 ;;		_I2C_2_Master_Write
  6068 ;; This function is called by:
  6069 ;;		_read_color
  6070 ;;		_calibrate_white
  6071 ;;		_distance_measure
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text26
  6076  00518E                     __ptext26:
  6077                           	callstack 0
  6078  00518E                     _color_read_Green:
  6079                           	callstack 23
  6080  00518E                     
  6081                           ;color.c: 161:  unsigned int tmp;;color.c: 162:  I2C_2_Master_Start();
  6082  00518E  ECD9  F02B         	call	_I2C_2_Master_Start	;wreg free
  6083                           
  6084                           ;color.c: 163:  I2C_2_Master_Write(0x52 | 0x00);
  6085  005192  0E52               	movlw	82
  6086  005194  ECC3  F02B         	call	_I2C_2_Master_Write
  6087                           
  6088                           ;color.c: 164:  I2C_2_Master_Write(0xA0 | 0x18);
  6089  005198  0EB8               	movlw	184
  6090  00519A  ECC3  F02B         	call	_I2C_2_Master_Write
  6091                           
  6092                           ;color.c: 165:  I2C_2_Master_RepStart();
  6093  00519E  ECCF  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6094                           
  6095                           ;color.c: 166:  I2C_2_Master_Write(0x52 | 0x01);
  6096  0051A2  0E53               	movlw	83
  6097  0051A4  ECC3  F02B         	call	_I2C_2_Master_Write
  6098                           
  6099                           ;color.c: 167:  tmp=I2C_2_Master_Read(1);
  6100  0051A8  0E01               	movlw	1
  6101  0051AA  EC84  F029         	call	_I2C_2_Master_Read
  6102  0051AE  6E09               	movwf	??_color_read_Green^0,c
  6103  0051B0  5009               	movf	??_color_read_Green^0,w,c
  6104  0051B2  6E0C               	movwf	color_read_Green@tmp^0,c
  6105  0051B4  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  6106                           
  6107                           ;color.c: 168:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6108  0051B6  0E00               	movlw	0
  6109  0051B8  EC84  F029         	call	_I2C_2_Master_Read
  6110  0051BC  6E09               	movwf	??_color_read_Green^0,c
  6111  0051BE  5009               	movf	??_color_read_Green^0,w,c
  6112  0051C0  6E0B               	movwf	(??_color_read_Green+2)^0,c
  6113  0051C2  6A0A               	clrf	(??_color_read_Green+1)^0,c
  6114  0051C4  500C               	movf	color_read_Green@tmp^0,w,c
  6115  0051C6  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  6116  0051C8  6E0C               	movwf	color_read_Green@tmp^0,c
  6117  0051CA  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  6118  0051CC  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  6119  0051CE  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  6120                           
  6121                           ;color.c: 169:  I2C_2_Master_Stop();
  6122  0051D0  ECD4  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6123  0051D4                     
  6124                           ;color.c: 170:  return tmp;
  6125  0051D4  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  6126  0051D8  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6127  0051DC  0012               	return		;funcret
  6128  0051DE                     __end_of_color_read_Green:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _color_read_Blue *****************
  6132 ;; Defined at:
  6133 ;;		line 145 in file "color.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  tmp             2   11[COMRAM] unsigned int 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  2    6[COMRAM] unsigned int 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;Total ram usage:        7 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 4
  6154 ;; This function calls:
  6155 ;;		_I2C_2_Master_Read
  6156 ;;		_I2C_2_Master_RepStart
  6157 ;;		_I2C_2_Master_Start
  6158 ;;		_I2C_2_Master_Stop
  6159 ;;		_I2C_2_Master_Write
  6160 ;; This function is called by:
  6161 ;;		_read_color
  6162 ;;		_calibrate_white
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text27
  6167  0051DE                     __ptext27:
  6168                           	callstack 0
  6169  0051DE                     _color_read_Blue:
  6170                           	callstack 23
  6171  0051DE                     
  6172                           ;color.c: 147:  unsigned int tmp;;color.c: 148:  I2C_2_Master_Start();
  6173  0051DE  ECD9  F02B         	call	_I2C_2_Master_Start	;wreg free
  6174                           
  6175                           ;color.c: 149:  I2C_2_Master_Write(0x52 | 0x00);
  6176  0051E2  0E52               	movlw	82
  6177  0051E4  ECC3  F02B         	call	_I2C_2_Master_Write
  6178                           
  6179                           ;color.c: 150:  I2C_2_Master_Write(0xA0 | 0x1A);
  6180  0051E8  0EBA               	movlw	186
  6181  0051EA  ECC3  F02B         	call	_I2C_2_Master_Write
  6182                           
  6183                           ;color.c: 151:  I2C_2_Master_RepStart();
  6184  0051EE  ECCF  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6185                           
  6186                           ;color.c: 152:  I2C_2_Master_Write(0x52 | 0x01);
  6187  0051F2  0E53               	movlw	83
  6188  0051F4  ECC3  F02B         	call	_I2C_2_Master_Write
  6189                           
  6190                           ;color.c: 153:  tmp=I2C_2_Master_Read(1);
  6191  0051F8  0E01               	movlw	1
  6192  0051FA  EC84  F029         	call	_I2C_2_Master_Read
  6193  0051FE  6E09               	movwf	??_color_read_Blue^0,c
  6194  005200  5009               	movf	??_color_read_Blue^0,w,c
  6195  005202  6E0C               	movwf	color_read_Blue@tmp^0,c
  6196  005204  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  6197                           
  6198                           ;color.c: 154:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6199  005206  0E00               	movlw	0
  6200  005208  EC84  F029         	call	_I2C_2_Master_Read
  6201  00520C  6E09               	movwf	??_color_read_Blue^0,c
  6202  00520E  5009               	movf	??_color_read_Blue^0,w,c
  6203  005210  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  6204  005212  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  6205  005214  500C               	movf	color_read_Blue@tmp^0,w,c
  6206  005216  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  6207  005218  6E0C               	movwf	color_read_Blue@tmp^0,c
  6208  00521A  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  6209  00521C  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  6210  00521E  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  6211                           
  6212                           ;color.c: 155:  I2C_2_Master_Stop();
  6213  005220  ECD4  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6214  005224                     
  6215                           ;color.c: 156:  return tmp;
  6216  005224  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  6217  005228  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6218  00522C  0012               	return		;funcret
  6219  00522E                     __end_of_color_read_Blue:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _LED_R *****************
  6223 ;; Defined at:
  6224 ;;		line 204 in file "color.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;Total ram usage:        2 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 2
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_color_data_collection
  6249 ;;		_calibrate_white
  6250 ;;		_detect_color
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text28
  6255  00563C                     __ptext28:
  6256                           	callstack 0
  6257  00563C                     _LED_R:
  6258                           	callstack 26
  6259  00563C                     
  6260                           ;color.c: 206:     LATGbits.LATG1 = 1;
  6261  00563C  827F               	bsf	127,1,c	;volatile
  6262                           
  6263                           ;color.c: 207:     LATFbits.LATF7 = 0;
  6264  00563E  9E7E               	bcf	126,7,c	;volatile
  6265                           
  6266                           ;color.c: 208:     LATAbits.LATA4 = 0;
  6267  005640  9879               	bcf	121,4,c	;volatile
  6268  005642                     
  6269                           ;color.c: 209:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6270  005642  0E11               	movlw	17
  6271  005644  6E04               	movwf	(??_LED_R+1)^0,c
  6272  005646  0E3C               	movlw	60
  6273  005648  6E03               	movwf	??_LED_R^0,c
  6274  00564A  0ECB               	movlw	203
  6275  00564C                     u8607:
  6276  00564C  2EE8               	decfsz	wreg,f,c
  6277  00564E  D7FE               	bra	u8607
  6278  005650  2E03               	decfsz	??_LED_R^0,f,c
  6279  005652  D7FC               	bra	u8607
  6280  005654  2E04               	decfsz	(??_LED_R+1)^0,f,c
  6281  005656  D7FA               	bra	u8607
  6282  005658  F000               	nop	
  6283  00565A  0012               	return		;funcret
  6284  00565C                     __end_of_LED_R:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _LED_OFF *****************
  6288 ;; Defined at:
  6289 ;;		line 195 in file "color.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;Total ram usage:        2 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 2
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_calibrate_white
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text29
  6318  00565C                     __ptext29:
  6319                           	callstack 0
  6320  00565C                     _LED_OFF:
  6321                           	callstack 26
  6322  00565C                     
  6323                           ;color.c: 197:     LATGbits.LATG1 = 0;
  6324  00565C  927F               	bcf	127,1,c	;volatile
  6325                           
  6326                           ;color.c: 198:     LATFbits.LATF7 = 0;
  6327  00565E  9E7E               	bcf	126,7,c	;volatile
  6328                           
  6329                           ;color.c: 199:     LATAbits.LATA4 = 0;
  6330  005660  9879               	bcf	121,4,c	;volatile
  6331  005662                     
  6332                           ;color.c: 200:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6333  005662  0E11               	movlw	17
  6334  005664  6E04               	movwf	(??_LED_OFF+1)^0,c
  6335  005666  0E3C               	movlw	60
  6336  005668  6E03               	movwf	??_LED_OFF^0,c
  6337  00566A  0ECB               	movlw	203
  6338  00566C                     u8617:
  6339  00566C  2EE8               	decfsz	wreg,f,c
  6340  00566E  D7FE               	bra	u8617
  6341  005670  2E03               	decfsz	??_LED_OFF^0,f,c
  6342  005672  D7FC               	bra	u8617
  6343  005674  2E04               	decfsz	(??_LED_OFF+1)^0,f,c
  6344  005676  D7FA               	bra	u8617
  6345  005678  F000               	nop	
  6346  00567A  0012               	return		;funcret
  6347  00567C                     __end_of_LED_OFF:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function _LED_G *****************
  6351 ;; Defined at:
  6352 ;;		line 231 in file "color.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;Total ram usage:        2 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 2
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_color_data_collection
  6377 ;;		_calibrate_white
  6378 ;;		_detect_color
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text30
  6383  00567C                     __ptext30:
  6384                           	callstack 0
  6385  00567C                     _LED_G:
  6386                           	callstack 26
  6387  00567C                     
  6388                           ;color.c: 233:     LATGbits.LATG1 = 0;
  6389  00567C  927F               	bcf	127,1,c	;volatile
  6390                           
  6391                           ;color.c: 234:     LATFbits.LATF7 = 0;
  6392  00567E  9E7E               	bcf	126,7,c	;volatile
  6393                           
  6394                           ;color.c: 235:     LATAbits.LATA4 = 1;
  6395  005680  8879               	bsf	121,4,c	;volatile
  6396  005682                     
  6397                           ;color.c: 236:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6398  005682  0E11               	movlw	17
  6399  005684  6E04               	movwf	(??_LED_G+1)^0,c
  6400  005686  0E3C               	movlw	60
  6401  005688  6E03               	movwf	??_LED_G^0,c
  6402  00568A  0ECB               	movlw	203
  6403  00568C                     u8627:
  6404  00568C  2EE8               	decfsz	wreg,f,c
  6405  00568E  D7FE               	bra	u8627
  6406  005690  2E03               	decfsz	??_LED_G^0,f,c
  6407  005692  D7FC               	bra	u8627
  6408  005694  2E04               	decfsz	(??_LED_G+1)^0,f,c
  6409  005696  D7FA               	bra	u8627
  6410  005698  F000               	nop	
  6411  00569A  0012               	return		;funcret
  6412  00569C                     __end_of_LED_G:
  6413                           	callstack 0
  6414                           
  6415 ;; *************** function _LED_B *****************
  6416 ;; Defined at:
  6417 ;;		line 222 in file "color.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;		None
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;Total ram usage:        2 bytes
  6436 ;; Hardware stack levels used: 1
  6437 ;; Hardware stack levels required when called: 2
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_color_data_collection
  6442 ;;		_calibrate_white
  6443 ;;		_detect_color
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text31
  6448  00569C                     __ptext31:
  6449                           	callstack 0
  6450  00569C                     _LED_B:
  6451                           	callstack 26
  6452  00569C                     
  6453                           ;color.c: 224:     LATGbits.LATG1 = 0;
  6454  00569C  927F               	bcf	127,1,c	;volatile
  6455                           
  6456                           ;color.c: 225:     LATFbits.LATF7 = 1;
  6457  00569E  8E7E               	bsf	126,7,c	;volatile
  6458                           
  6459                           ;color.c: 226:     LATAbits.LATA4 = 0;
  6460  0056A0  9879               	bcf	121,4,c	;volatile
  6461  0056A2                     
  6462                           ;color.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6463  0056A2  0E11               	movlw	17
  6464  0056A4  6E04               	movwf	(??_LED_B+1)^0,c
  6465  0056A6  0E3C               	movlw	60
  6466  0056A8  6E03               	movwf	??_LED_B^0,c
  6467  0056AA  0ECB               	movlw	203
  6468  0056AC                     u8637:
  6469  0056AC  2EE8               	decfsz	wreg,f,c
  6470  0056AE  D7FE               	bra	u8637
  6471  0056B0  2E03               	decfsz	??_LED_B^0,f,c
  6472  0056B2  D7FC               	bra	u8637
  6473  0056B4  2E04               	decfsz	(??_LED_B+1)^0,f,c
  6474  0056B6  D7FA               	bra	u8637
  6475  0056B8  F000               	nop	
  6476  0056BA  0012               	return		;funcret
  6477  0056BC                     __end_of_LED_B:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _amb_light_measure *****************
  6481 ;; Defined at:
  6482 ;;		line 413 in file "color.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  6485 ;;		 -> main@rgb(8), main@amb(8), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  CC_amb_3        2   36[BANK0 ] unsigned int 
  6488 ;;  CC_amb_2        2   34[BANK0 ] unsigned int 
  6489 ;;  CC_amb_1        2   32[BANK0 ] unsigned int 
  6490 ;;  CC_amb_ave      2   30[BANK0 ] unsigned int 
  6491 ;;  upper_bound     2   28[BANK0 ] unsigned int 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2   26[BANK0 ] unsigned int 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;Total ram usage:       14 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 6
  6508 ;; This function calls:
  6509 ;;		_LED_C
  6510 ;;		___fldiv
  6511 ;;		___xxtofl
  6512 ;;		_color_read_Clear
  6513 ;;		_lroundf
  6514 ;;		_toggle_light
  6515 ;; This function is called by:
  6516 ;;		_test_function
  6517 ;;		_main
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text32
  6522  00451A                     __ptext32:
  6523                           	callstack 0
  6524  00451A                     _amb_light_measure:
  6525                           	callstack 23
  6526  00451A  0E00               	movlw	0
  6527  00451C  0100               	movlb	0	; () banked
  6528  00451E  6F83               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  6529  004520  0E00               	movlw	0
  6530  004522  6F82               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  6531  004524  0E00               	movlw	0
  6532  004526  6F85               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  6533  004528  0E00               	movlw	0
  6534  00452A  6F84               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  6535  00452C  0E00               	movlw	0
  6536  00452E  6F7D               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  6537  004530  0E00               	movlw	0
  6538  004532  6F7C               	movwf	amb_light_measure@upper_bound& (0+255),b
  6539  004534                     
  6540                           ; BSR set to: 0
  6541                           ;color.c: 416:     toggle_light(2,2);
  6542  004534  0E02               	movlw	2
  6543  004536  6E03               	movwf	toggle_light@toggletime^0,c
  6544  004538  0E02               	movlw	2
  6545  00453A  ECBD  F017         	call	_toggle_light
  6546  00453E                     
  6547                           ;color.c: 417:     LED_C();
  6548  00453E  EC5E  F02B         	call	_LED_C	;wreg free
  6549  004542                     
  6550                           ;color.c: 418:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6551  004542  0E29               	movlw	41
  6552  004544  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6553  004546  0E96               	movlw	150
  6554  004548  6E51               	movwf	??_amb_light_measure^0,c
  6555  00454A  0E7F               	movlw	127
  6556  00454C                     u8647:
  6557  00454C  2EE8               	decfsz	wreg,f,c
  6558  00454E  D7FE               	bra	u8647
  6559  004550  2E51               	decfsz	??_amb_light_measure^0,f,c
  6560  004552  D7FC               	bra	u8647
  6561  004554  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6562  004556  D7FA               	bra	u8647
  6563  004558  F000               	nop	
  6564  00455A                     
  6565                           ;color.c: 420:     CC_amb_1 = color_read_Clear();
  6566  00455A  EC17  F029         	call	_color_read_Clear	;wreg free
  6567  00455E  C007  F080         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  6568  004562  C008  F081         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  6569  004566                     
  6570                           ;color.c: 421:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6571  004566  0E11               	movlw	17
  6572  004568  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6573  00456A  0E3C               	movlw	60
  6574  00456C  6E51               	movwf	??_amb_light_measure^0,c
  6575  00456E  0ECB               	movlw	203
  6576  004570                     u8657:
  6577  004570  2EE8               	decfsz	wreg,f,c
  6578  004572  D7FE               	bra	u8657
  6579  004574  2E51               	decfsz	??_amb_light_measure^0,f,c
  6580  004576  D7FC               	bra	u8657
  6581  004578  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6582  00457A  D7FA               	bra	u8657
  6583  00457C  F000               	nop	
  6584  00457E                     
  6585                           ;color.c: 423:     CC_amb_2 = color_read_Clear();
  6586  00457E  EC17  F029         	call	_color_read_Clear	;wreg free
  6587  004582  C007  F082         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  6588  004586  C008  F083         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  6589  00458A                     
  6590                           ;color.c: 424:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6591  00458A  0E11               	movlw	17
  6592  00458C  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6593  00458E  0E3C               	movlw	60
  6594  004590  6E51               	movwf	??_amb_light_measure^0,c
  6595  004592  0ECB               	movlw	203
  6596  004594                     u8667:
  6597  004594  2EE8               	decfsz	wreg,f,c
  6598  004596  D7FE               	bra	u8667
  6599  004598  2E51               	decfsz	??_amb_light_measure^0,f,c
  6600  00459A  D7FC               	bra	u8667
  6601  00459C  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6602  00459E  D7FA               	bra	u8667
  6603  0045A0  F000               	nop	
  6604  0045A2                     
  6605                           ;color.c: 426:     CC_amb_3 = color_read_Clear();
  6606  0045A2  EC17  F029         	call	_color_read_Clear	;wreg free
  6607  0045A6  C007  F084         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  6608  0045AA  C008  F085         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  6609  0045AE                     
  6610                           ;color.c: 427:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6611  0045AE  0E11               	movlw	17
  6612  0045B0  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6613  0045B2  0E3C               	movlw	60
  6614  0045B4  6E51               	movwf	??_amb_light_measure^0,c
  6615  0045B6  0ECB               	movlw	203
  6616  0045B8                     u8677:
  6617  0045B8  2EE8               	decfsz	wreg,f,c
  6618  0045BA  D7FE               	bra	u8677
  6619  0045BC  2E51               	decfsz	??_amb_light_measure^0,f,c
  6620  0045BE  D7FC               	bra	u8677
  6621  0045C0  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6622  0045C2  D7FA               	bra	u8677
  6623  0045C4  F000               	nop	
  6624  0045C6                     
  6625                           ;color.c: 429:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  6626  0045C6  0100               	movlb	0	; () banked
  6627  0045C8  5182               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  6628  0045CA  2580               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  6629  0045CC  6E51               	movwf	??_amb_light_measure^0,c
  6630  0045CE  5183               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  6631  0045D0  2181               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  6632  0045D2  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6633  0045D4  5184               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  6634  0045D6  2651               	addwf	??_amb_light_measure^0,f,c
  6635  0045D8  5185               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  6636  0045DA  2252               	addwfc	(??_amb_light_measure+1)^0,f,c
  6637  0045DC  C051  F003         	movff	??_amb_light_measure,___xxtofl@val
  6638  0045E0  C052  F004         	movff	??_amb_light_measure+1,___xxtofl@val+1
  6639  0045E4  6A05               	clrf	(___xxtofl@val+2)^0,c
  6640  0045E6  6A06               	clrf	(___xxtofl@val+3)^0,c
  6641  0045E8  0E00               	movlw	0
  6642  0045EA  ECF8  F01D         	call	___xxtofl
  6643  0045EE  C003  F011         	movff	?___xxtofl,___fldiv@b
  6644  0045F2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  6645  0045F6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  6646  0045FA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  6647  0045FE  0E00               	movlw	0
  6648  004600  6E15               	movwf	___fldiv@a^0,c
  6649  004602  0E00               	movlw	0
  6650  004604  6E16               	movwf	(___fldiv@a+1)^0,c
  6651  004606  0E40               	movlw	64
  6652  004608  6E17               	movwf	(___fldiv@a+2)^0,c
  6653  00460A  0E40               	movlw	64
  6654  00460C  6E18               	movwf	(___fldiv@a+3)^0,c
  6655  00460E  ECF9  F012         	call	___fldiv	;wreg free
  6656  004612  C011  F076         	movff	?___fldiv,lroundf@x
  6657  004616  C012  F077         	movff	?___fldiv+1,lroundf@x+1
  6658  00461A  C013  F078         	movff	?___fldiv+2,lroundf@x+2
  6659  00461E  C014  F079         	movff	?___fldiv+3,lroundf@x+3
  6660  004622  EC45  F02A         	call	_lroundf	;wreg free
  6661  004626  C076  F07E         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  6662  00462A  C077  F07F         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  6663  00462E                     
  6664                           ;color.c: 431:     toggle_light(2,2);
  6665  00462E  0E02               	movlw	2
  6666  004630  6E03               	movwf	toggle_light@toggletime^0,c
  6667  004632  0E02               	movlw	2
  6668  004634  ECBD  F017         	call	_toggle_light
  6669  004638                     
  6670                           ;color.c: 433:     return CC_amb_ave;
  6671  004638  C07E  F07A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  6672  00463C  C07F  F07B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  6673  004640  0012               	return		;funcret
  6674  004642                     __end_of_amb_light_measure:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _toggle_light *****************
  6678 ;; Defined at:
  6679 ;;		line 69 in file "color.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  lightnumber     1    wreg     unsigned char 
  6682 ;;  toggletime      1    2[COMRAM] unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  lightnumber     1    6[COMRAM] unsigned char 
  6685 ;;  i               1    5[COMRAM] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;Total ram usage:        5 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 2
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_calibrate_white
  6706 ;;		_amb_light_measure
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text33
  6711  002F7A                     __ptext33:
  6712                           	callstack 0
  6713  002F7A                     _toggle_light:
  6714                           	callstack 26
  6715                           
  6716                           ;incstack = 0
  6717                           ;toggle_light@lightnumber stored from wreg
  6718  002F7A  6E07               	movwf	toggle_light@lightnumber^0,c
  6719  002F7C                     
  6720                           ;color.c: 69: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 70: {;color.c: 71:     unsigned char i = 0;
  6721  002F7C  0E00               	movlw	0
  6722  002F7E  6E06               	movwf	toggle_light@i^0,c
  6723                           
  6724                           ;color.c: 73:     for (i = 0; i < toggletime; i++){
  6725  002F80  0E00               	movlw	0
  6726  002F82  6E06               	movwf	toggle_light@i^0,c
  6727  002F84  EF09  F019         	goto	l114
  6728  002F88                     l6462:
  6729                           
  6730                           ;color.c: 74:         if (lightnumber == 1){
  6731  002F88  0407               	decf	toggle_light@lightnumber^0,w,c
  6732  002F8A  A4D8               	btfss	status,2,c
  6733  002F8C  EFCA  F017         	goto	u7161
  6734  002F90  EFCC  F017         	goto	u7160
  6735  002F94                     u7161:
  6736  002F94  EF04  F018         	goto	l6470
  6737  002F98                     u7160:
  6738  002F98                     
  6739                           ;color.c: 75:             LATHbits.LATH1 = !LATHbits.LATH1;
  6740  002F98  A280               	btfss	128,1,c	;volatile
  6741  002F9A  EFD1  F017         	goto	u7171
  6742  002F9E  EFD5  F017         	goto	u7170
  6743  002FA2                     u7171:
  6744  002FA2  6A04               	clrf	??_toggle_light^0,c
  6745  002FA4  2A04               	incf	??_toggle_light^0,f,c
  6746  002FA6  EFD6  F017         	goto	u7188
  6747  002FAA                     u7170:
  6748  002FAA  6A04               	clrf	??_toggle_light^0,c
  6749  002FAC                     u7188:
  6750  002FAC  4604               	rlncf	??_toggle_light^0,f,c
  6751  002FAE  5080               	movf	128,w,c	;volatile
  6752  002FB0  1804               	xorwf	??_toggle_light^0,w,c
  6753  002FB2  0BFD               	andlw	-3
  6754  002FB4  1804               	xorwf	??_toggle_light^0,w,c
  6755  002FB6  6E80               	movwf	128,c	;volatile
  6756  002FB8                     
  6757                           ;color.c: 76:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6758  002FB8  0E29               	movlw	41
  6759  002FBA  6E05               	movwf	(??_toggle_light+1)^0,c
  6760  002FBC  0E96               	movlw	150
  6761  002FBE  6E04               	movwf	??_toggle_light^0,c
  6762  002FC0  0E7F               	movlw	127
  6763  002FC2                     u8687:
  6764  002FC2  2EE8               	decfsz	wreg,f,c
  6765  002FC4  D7FE               	bra	u8687
  6766  002FC6  2E04               	decfsz	??_toggle_light^0,f,c
  6767  002FC8  D7FC               	bra	u8687
  6768  002FCA  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6769  002FCC  D7FA               	bra	u8687
  6770  002FCE  F000               	nop	
  6771  002FD0                     
  6772                           ;color.c: 77:             LATHbits.LATH1 = !LATHbits.LATH1;
  6773  002FD0  A280               	btfss	128,1,c	;volatile
  6774  002FD2  EFED  F017         	goto	u7191
  6775  002FD6  EFF1  F017         	goto	u7190
  6776  002FDA                     u7191:
  6777  002FDA  6A04               	clrf	??_toggle_light^0,c
  6778  002FDC  2A04               	incf	??_toggle_light^0,f,c
  6779  002FDE  EFF2  F017         	goto	u7208
  6780  002FE2                     u7190:
  6781  002FE2  6A04               	clrf	??_toggle_light^0,c
  6782  002FE4                     u7208:
  6783  002FE4  4604               	rlncf	??_toggle_light^0,f,c
  6784  002FE6  5080               	movf	128,w,c	;volatile
  6785  002FE8  1804               	xorwf	??_toggle_light^0,w,c
  6786  002FEA  0BFD               	andlw	-3
  6787  002FEC  1804               	xorwf	??_toggle_light^0,w,c
  6788  002FEE  6E80               	movwf	128,c	;volatile
  6789                           
  6790                           ;color.c: 78:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6791  002FF0  0E29               	movlw	41
  6792  002FF2  6E05               	movwf	(??_toggle_light+1)^0,c
  6793  002FF4  0E96               	movlw	150
  6794  002FF6  6E04               	movwf	??_toggle_light^0,c
  6795  002FF8  0E7F               	movlw	127
  6796  002FFA                     u8697:
  6797  002FFA  2EE8               	decfsz	wreg,f,c
  6798  002FFC  D7FE               	bra	u8697
  6799  002FFE  2E04               	decfsz	??_toggle_light^0,f,c
  6800  003000  D7FC               	bra	u8697
  6801  003002  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6802  003004  D7FA               	bra	u8697
  6803  003006  F000               	nop	
  6804  003008                     l6470:
  6805                           
  6806                           ;color.c: 80:         if (lightnumber == 2){
  6807  003008  0E02               	movlw	2
  6808  00300A  1807               	xorwf	toggle_light@lightnumber^0,w,c
  6809  00300C  A4D8               	btfss	status,2,c
  6810  00300E  EF0B  F018         	goto	u7211
  6811  003012  EF0D  F018         	goto	u7210
  6812  003016                     u7211:
  6813  003016  EF45  F018         	goto	l6478
  6814  00301A                     u7210:
  6815  00301A                     
  6816                           ;color.c: 81:             LATDbits.LATD4 = !LATDbits.LATD4;
  6817  00301A  A87C               	btfss	124,4,c	;volatile
  6818  00301C  EF12  F018         	goto	u7221
  6819  003020  EF16  F018         	goto	u7220
  6820  003024                     u7221:
  6821  003024  6A04               	clrf	??_toggle_light^0,c
  6822  003026  2A04               	incf	??_toggle_light^0,f,c
  6823  003028  EF17  F018         	goto	u7238
  6824  00302C                     u7220:
  6825  00302C  6A04               	clrf	??_toggle_light^0,c
  6826  00302E                     u7238:
  6827  00302E  3A04               	swapf	??_toggle_light^0,f,c
  6828  003030  507C               	movf	124,w,c	;volatile
  6829  003032  1804               	xorwf	??_toggle_light^0,w,c
  6830  003034  0BEF               	andlw	-17
  6831  003036  1804               	xorwf	??_toggle_light^0,w,c
  6832  003038  6E7C               	movwf	124,c	;volatile
  6833  00303A                     
  6834                           ;color.c: 82:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6835  00303A  0E29               	movlw	41
  6836  00303C  6E05               	movwf	(??_toggle_light+1)^0,c
  6837  00303E  0E96               	movlw	150
  6838  003040  6E04               	movwf	??_toggle_light^0,c
  6839  003042  0E7F               	movlw	127
  6840  003044                     u8707:
  6841  003044  2EE8               	decfsz	wreg,f,c
  6842  003046  D7FE               	bra	u8707
  6843  003048  2E04               	decfsz	??_toggle_light^0,f,c
  6844  00304A  D7FC               	bra	u8707
  6845  00304C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6846  00304E  D7FA               	bra	u8707
  6847  003050  F000               	nop	
  6848  003052                     
  6849                           ;color.c: 83:             LATDbits.LATD4 = !LATDbits.LATD4;
  6850  003052  A87C               	btfss	124,4,c	;volatile
  6851  003054  EF2E  F018         	goto	u7241
  6852  003058  EF32  F018         	goto	u7240
  6853  00305C                     u7241:
  6854  00305C  6A04               	clrf	??_toggle_light^0,c
  6855  00305E  2A04               	incf	??_toggle_light^0,f,c
  6856  003060  EF33  F018         	goto	u7258
  6857  003064                     u7240:
  6858  003064  6A04               	clrf	??_toggle_light^0,c
  6859  003066                     u7258:
  6860  003066  3A04               	swapf	??_toggle_light^0,f,c
  6861  003068  507C               	movf	124,w,c	;volatile
  6862  00306A  1804               	xorwf	??_toggle_light^0,w,c
  6863  00306C  0BEF               	andlw	-17
  6864  00306E  1804               	xorwf	??_toggle_light^0,w,c
  6865  003070  6E7C               	movwf	124,c	;volatile
  6866                           
  6867                           ;color.c: 84:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6868  003072  0E29               	movlw	41
  6869  003074  6E05               	movwf	(??_toggle_light+1)^0,c
  6870  003076  0E96               	movlw	150
  6871  003078  6E04               	movwf	??_toggle_light^0,c
  6872  00307A  0E7F               	movlw	127
  6873  00307C                     u8717:
  6874  00307C  2EE8               	decfsz	wreg,f,c
  6875  00307E  D7FE               	bra	u8717
  6876  003080  2E04               	decfsz	??_toggle_light^0,f,c
  6877  003082  D7FC               	bra	u8717
  6878  003084  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6879  003086  D7FA               	bra	u8717
  6880  003088  F000               	nop	
  6881  00308A                     l6478:
  6882                           
  6883                           ;color.c: 86:         if (lightnumber == 3){
  6884  00308A  0E03               	movlw	3
  6885  00308C  1807               	xorwf	toggle_light@lightnumber^0,w,c
  6886  00308E  A4D8               	btfss	status,2,c
  6887  003090  EF4C  F018         	goto	u7261
  6888  003094  EF4E  F018         	goto	u7260
  6889  003098                     u7261:
  6890  003098  EF8A  F018         	goto	l6486
  6891  00309C                     u7260:
  6892  00309C                     
  6893                           ;color.c: 87:             LATDbits.LATD3 = !LATDbits.LATD3;
  6894  00309C  A67C               	btfss	124,3,c	;volatile
  6895  00309E  EF53  F018         	goto	u7271
  6896  0030A2  EF57  F018         	goto	u7270
  6897  0030A6                     u7271:
  6898  0030A6  6A04               	clrf	??_toggle_light^0,c
  6899  0030A8  2A04               	incf	??_toggle_light^0,f,c
  6900  0030AA  EF58  F018         	goto	u7288
  6901  0030AE                     u7270:
  6902  0030AE  6A04               	clrf	??_toggle_light^0,c
  6903  0030B0                     u7288:
  6904  0030B0  4604               	rlncf	??_toggle_light^0,f,c
  6905  0030B2  4604               	rlncf	??_toggle_light^0,f,c
  6906  0030B4  4604               	rlncf	??_toggle_light^0,f,c
  6907  0030B6  507C               	movf	124,w,c	;volatile
  6908  0030B8  1804               	xorwf	??_toggle_light^0,w,c
  6909  0030BA  0BF7               	andlw	-9
  6910  0030BC  1804               	xorwf	??_toggle_light^0,w,c
  6911  0030BE  6E7C               	movwf	124,c	;volatile
  6912  0030C0                     
  6913                           ;color.c: 88:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6914  0030C0  0E29               	movlw	41
  6915  0030C2  6E05               	movwf	(??_toggle_light+1)^0,c
  6916  0030C4  0E96               	movlw	150
  6917  0030C6  6E04               	movwf	??_toggle_light^0,c
  6918  0030C8  0E7F               	movlw	127
  6919  0030CA                     u8727:
  6920  0030CA  2EE8               	decfsz	wreg,f,c
  6921  0030CC  D7FE               	bra	u8727
  6922  0030CE  2E04               	decfsz	??_toggle_light^0,f,c
  6923  0030D0  D7FC               	bra	u8727
  6924  0030D2  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6925  0030D4  D7FA               	bra	u8727
  6926  0030D6  F000               	nop	
  6927  0030D8                     
  6928                           ;color.c: 89:             LATDbits.LATD3 = !LATDbits.LATD3;
  6929  0030D8  A67C               	btfss	124,3,c	;volatile
  6930  0030DA  EF71  F018         	goto	u7291
  6931  0030DE  EF75  F018         	goto	u7290
  6932  0030E2                     u7291:
  6933  0030E2  6A04               	clrf	??_toggle_light^0,c
  6934  0030E4  2A04               	incf	??_toggle_light^0,f,c
  6935  0030E6  EF76  F018         	goto	u7308
  6936  0030EA                     u7290:
  6937  0030EA  6A04               	clrf	??_toggle_light^0,c
  6938  0030EC                     u7308:
  6939  0030EC  4604               	rlncf	??_toggle_light^0,f,c
  6940  0030EE  4604               	rlncf	??_toggle_light^0,f,c
  6941  0030F0  4604               	rlncf	??_toggle_light^0,f,c
  6942  0030F2  507C               	movf	124,w,c	;volatile
  6943  0030F4  1804               	xorwf	??_toggle_light^0,w,c
  6944  0030F6  0BF7               	andlw	-9
  6945  0030F8  1804               	xorwf	??_toggle_light^0,w,c
  6946  0030FA  6E7C               	movwf	124,c	;volatile
  6947                           
  6948                           ;color.c: 90:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6949  0030FC  0E29               	movlw	41
  6950  0030FE  6E05               	movwf	(??_toggle_light+1)^0,c
  6951  003100  0E96               	movlw	150
  6952  003102  6E04               	movwf	??_toggle_light^0,c
  6953  003104  0E7F               	movlw	127
  6954  003106                     u8737:
  6955  003106  2EE8               	decfsz	wreg,f,c
  6956  003108  D7FE               	bra	u8737
  6957  00310A  2E04               	decfsz	??_toggle_light^0,f,c
  6958  00310C  D7FC               	bra	u8737
  6959  00310E  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6960  003110  D7FA               	bra	u8737
  6961  003112  F000               	nop	
  6962  003114                     l6486:
  6963                           
  6964                           ;color.c: 92:         if (lightnumber == 4){
  6965  003114  0E04               	movlw	4
  6966  003116  1807               	xorwf	toggle_light@lightnumber^0,w,c
  6967  003118  A4D8               	btfss	status,2,c
  6968  00311A  EF91  F018         	goto	u7311
  6969  00311E  EF93  F018         	goto	u7310
  6970  003122                     u7311:
  6971  003122  EFC9  F018         	goto	l6494
  6972  003126                     u7310:
  6973  003126                     
  6974                           ;color.c: 93:             LATFbits.LATF0 = !LATFbits.LATF0;
  6975  003126  A07E               	btfss	126,0,c	;volatile
  6976  003128  EF98  F018         	goto	u7321
  6977  00312C  EF9C  F018         	goto	u7320
  6978  003130                     u7321:
  6979  003130  6A04               	clrf	??_toggle_light^0,c
  6980  003132  2A04               	incf	??_toggle_light^0,f,c
  6981  003134  EF9D  F018         	goto	u7338
  6982  003138                     u7320:
  6983  003138  6A04               	clrf	??_toggle_light^0,c
  6984  00313A                     u7338:
  6985  00313A  507E               	movf	126,w,c	;volatile
  6986  00313C  1804               	xorwf	??_toggle_light^0,w,c
  6987  00313E  0BFE               	andlw	-2
  6988  003140  1804               	xorwf	??_toggle_light^0,w,c
  6989  003142  6E7E               	movwf	126,c	;volatile
  6990  003144                     
  6991                           ;color.c: 94:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6992  003144  0E29               	movlw	41
  6993  003146  6E05               	movwf	(??_toggle_light+1)^0,c
  6994  003148  0E96               	movlw	150
  6995  00314A  6E04               	movwf	??_toggle_light^0,c
  6996  00314C  0E7F               	movlw	127
  6997  00314E                     u8747:
  6998  00314E  2EE8               	decfsz	wreg,f,c
  6999  003150  D7FE               	bra	u8747
  7000  003152  2E04               	decfsz	??_toggle_light^0,f,c
  7001  003154  D7FC               	bra	u8747
  7002  003156  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7003  003158  D7FA               	bra	u8747
  7004  00315A  F000               	nop	
  7005  00315C                     
  7006                           ;color.c: 95:             LATFbits.LATF0 = !LATFbits.LATF0;
  7007  00315C  A07E               	btfss	126,0,c	;volatile
  7008  00315E  EFB3  F018         	goto	u7341
  7009  003162  EFB7  F018         	goto	u7340
  7010  003166                     u7341:
  7011  003166  6A04               	clrf	??_toggle_light^0,c
  7012  003168  2A04               	incf	??_toggle_light^0,f,c
  7013  00316A  EFB8  F018         	goto	u7358
  7014  00316E                     u7340:
  7015  00316E  6A04               	clrf	??_toggle_light^0,c
  7016  003170                     u7358:
  7017  003170  507E               	movf	126,w,c	;volatile
  7018  003172  1804               	xorwf	??_toggle_light^0,w,c
  7019  003174  0BFE               	andlw	-2
  7020  003176  1804               	xorwf	??_toggle_light^0,w,c
  7021  003178  6E7E               	movwf	126,c	;volatile
  7022                           
  7023                           ;color.c: 96:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7024  00317A  0E29               	movlw	41
  7025  00317C  6E05               	movwf	(??_toggle_light+1)^0,c
  7026  00317E  0E96               	movlw	150
  7027  003180  6E04               	movwf	??_toggle_light^0,c
  7028  003182  0E7F               	movlw	127
  7029  003184                     u8757:
  7030  003184  2EE8               	decfsz	wreg,f,c
  7031  003186  D7FE               	bra	u8757
  7032  003188  2E04               	decfsz	??_toggle_light^0,f,c
  7033  00318A  D7FC               	bra	u8757
  7034  00318C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7035  00318E  D7FA               	bra	u8757
  7036  003190  F000               	nop	
  7037  003192                     l6494:
  7038                           
  7039                           ;color.c: 98:         if (lightnumber == 3){
  7040  003192  0E03               	movlw	3
  7041  003194  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7042  003196  A4D8               	btfss	status,2,c
  7043  003198  EFD0  F018         	goto	u7361
  7044  00319C  EFD2  F018         	goto	u7360
  7045  0031A0                     u7361:
  7046  0031A0  EF08  F019         	goto	l6502
  7047  0031A4                     u7360:
  7048  0031A4                     
  7049                           ;color.c: 99:             LATHbits.LATH0 = !LATHbits.LATH0;
  7050  0031A4  A080               	btfss	128,0,c	;volatile
  7051  0031A6  EFD7  F018         	goto	u7371
  7052  0031AA  EFDB  F018         	goto	u7370
  7053  0031AE                     u7371:
  7054  0031AE  6A04               	clrf	??_toggle_light^0,c
  7055  0031B0  2A04               	incf	??_toggle_light^0,f,c
  7056  0031B2  EFDC  F018         	goto	u7388
  7057  0031B6                     u7370:
  7058  0031B6  6A04               	clrf	??_toggle_light^0,c
  7059  0031B8                     u7388:
  7060  0031B8  5080               	movf	128,w,c	;volatile
  7061  0031BA  1804               	xorwf	??_toggle_light^0,w,c
  7062  0031BC  0BFE               	andlw	-2
  7063  0031BE  1804               	xorwf	??_toggle_light^0,w,c
  7064  0031C0  6E80               	movwf	128,c	;volatile
  7065  0031C2                     
  7066                           ;color.c: 100:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7067  0031C2  0E29               	movlw	41
  7068  0031C4  6E05               	movwf	(??_toggle_light+1)^0,c
  7069  0031C6  0E96               	movlw	150
  7070  0031C8  6E04               	movwf	??_toggle_light^0,c
  7071  0031CA  0E7F               	movlw	127
  7072  0031CC                     u8767:
  7073  0031CC  2EE8               	decfsz	wreg,f,c
  7074  0031CE  D7FE               	bra	u8767
  7075  0031D0  2E04               	decfsz	??_toggle_light^0,f,c
  7076  0031D2  D7FC               	bra	u8767
  7077  0031D4  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7078  0031D6  D7FA               	bra	u8767
  7079  0031D8  F000               	nop	
  7080  0031DA                     
  7081                           ;color.c: 101:             LATHbits.LATH0 = !LATHbits.LATH0;
  7082  0031DA  A080               	btfss	128,0,c	;volatile
  7083  0031DC  EFF2  F018         	goto	u7391
  7084  0031E0  EFF6  F018         	goto	u7390
  7085  0031E4                     u7391:
  7086  0031E4  6A04               	clrf	??_toggle_light^0,c
  7087  0031E6  2A04               	incf	??_toggle_light^0,f,c
  7088  0031E8  EFF7  F018         	goto	u7408
  7089  0031EC                     u7390:
  7090  0031EC  6A04               	clrf	??_toggle_light^0,c
  7091  0031EE                     u7408:
  7092  0031EE  5080               	movf	128,w,c	;volatile
  7093  0031F0  1804               	xorwf	??_toggle_light^0,w,c
  7094  0031F2  0BFE               	andlw	-2
  7095  0031F4  1804               	xorwf	??_toggle_light^0,w,c
  7096  0031F6  6E80               	movwf	128,c	;volatile
  7097                           
  7098                           ;color.c: 102:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7099  0031F8  0E29               	movlw	41
  7100  0031FA  6E05               	movwf	(??_toggle_light+1)^0,c
  7101  0031FC  0E96               	movlw	150
  7102  0031FE  6E04               	movwf	??_toggle_light^0,c
  7103  003200  0E7F               	movlw	127
  7104  003202                     u8777:
  7105  003202  2EE8               	decfsz	wreg,f,c
  7106  003204  D7FE               	bra	u8777
  7107  003206  2E04               	decfsz	??_toggle_light^0,f,c
  7108  003208  D7FC               	bra	u8777
  7109  00320A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7110  00320C  D7FA               	bra	u8777
  7111  00320E  F000               	nop	
  7112  003210                     l6502:
  7113                           
  7114                           ;color.c: 104:     }
  7115  003210  2A06               	incf	toggle_light@i^0,f,c
  7116  003212                     l114:
  7117  003212  5003               	movf	toggle_light@toggletime^0,w,c
  7118  003214  5C06               	subwf	toggle_light@i^0,w,c
  7119  003216  A0D8               	btfss	status,0,c
  7120  003218  EF10  F019         	goto	u7411
  7121  00321C  EF12  F019         	goto	u7410
  7122  003220                     u7411:
  7123  003220  EFC4  F017         	goto	l6462
  7124  003224                     u7410:
  7125  003224  0012               	return		;funcret
  7126  003226                     __end_of_toggle_light:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _lroundf *****************
  7130 ;; Defined at:
  7131 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  x               4   22[BANK0 ] float 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  4   22[BANK0 ] long 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;Total ram usage:        4 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 5
  7152 ;; This function calls:
  7153 ;;		___fltol
  7154 ;;		_roundf
  7155 ;; This function is called by:
  7156 ;;		_detect_color
  7157 ;;		_amb_light_measure
  7158 ;;		_distance_measure
  7159 ;;		_check_color_reading
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text34
  7164  00548A                     __ptext34:
  7165                           	callstack 0
  7166  00548A                     _lroundf:
  7167                           	callstack 23
  7168  00548A  C076  F043         	movff	lroundf@x,roundf@x
  7169  00548E  C077  F044         	movff	lroundf@x+1,roundf@x+1
  7170  005492  C078  F045         	movff	lroundf@x+2,roundf@x+2
  7171  005496  C079  F046         	movff	lroundf@x+3,roundf@x+3
  7172  00549A  EC20  F011         	call	_roundf	;wreg free
  7173  00549E  C043  F072         	movff	?_roundf,___fltol@f1
  7174  0054A2  C044  F073         	movff	?_roundf+1,___fltol@f1+1
  7175  0054A6  C045  F074         	movff	?_roundf+2,___fltol@f1+2
  7176  0054AA  C046  F075         	movff	?_roundf+3,___fltol@f1+3
  7177  0054AE  EC21  F023         	call	___fltol	;wreg free
  7178  0054B2  C072  F076         	movff	?___fltol,?_lroundf
  7179  0054B6  C073  F077         	movff	?___fltol+1,?_lroundf+1
  7180  0054BA  C074  F078         	movff	?___fltol+2,?_lroundf+2
  7181  0054BE  C075  F079         	movff	?___fltol+3,?_lroundf+3
  7182  0054C2  0012               	return		;funcret
  7183  0054C4                     __end_of_lroundf:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function _roundf *****************
  7187 ;; Defined at:
  7188 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  x               4   66[COMRAM] float 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;  y               4   14[BANK0 ] float 
  7193 ;;  u               4   10[BANK0 ] struct .
  7194 ;;  e               2    4[BANK0 ] int 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  4   66[COMRAM] float 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;Total ram usage:       26 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 4
  7211 ;; This function calls:
  7212 ;;		___fladd
  7213 ;;		___flge
  7214 ;;		___flmul
  7215 ;;		___flneg
  7216 ;;		___flsub
  7217 ;; This function is called by:
  7218 ;;		_lroundf
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text35
  7223  002240                     __ptext35:
  7224                           	callstack 0
  7225  002240                     _roundf:
  7226                           	callstack 23
  7227  002240  C18C  F06A         	movff	roundf@F527,roundf@u
  7228  002244  C18D  F06B         	movff	roundf@F527+1,roundf@u+1
  7229  002248  C18E  F06C         	movff	roundf@F527+2,roundf@u+2
  7230  00224C  C18F  F06D         	movff	roundf@F527+3,roundf@u+3
  7231  002250  C043  F06A         	movff	roundf@x,roundf@u
  7232  002254  C044  F06B         	movff	roundf@x+1,roundf@u+1
  7233  002258  C045  F06C         	movff	roundf@x+2,roundf@u+2
  7234  00225C  C046  F06D         	movff	roundf@x+3,roundf@u+3
  7235  002260  C06A  F047         	movff	roundf@u,??_roundf
  7236  002264  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7237  002268  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7238  00226C  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7239  002270  0E18               	movlw	24
  7240  002272  EF40  F011         	goto	u7050
  7241  002276                     u7055:
  7242  002276  90D8               	bcf	status,0,c
  7243  002278  324A               	rrcf	(??_roundf+3)^0,f,c
  7244  00227A  3249               	rrcf	(??_roundf+2)^0,f,c
  7245  00227C  3248               	rrcf	(??_roundf+1)^0,f,c
  7246  00227E  3247               	rrcf	??_roundf^0,f,c
  7247  002280                     u7050:
  7248  002280  2EE8               	decfsz	wreg,f,c
  7249  002282  EF3B  F011         	goto	u7055
  7250  002286  5047               	movf	??_roundf^0,w,c
  7251  002288  0100               	movlb	0	; () banked
  7252  00228A  6F64               	movwf	roundf@e& (0+255),b
  7253  00228C  6B65               	clrf	(roundf@e+1)& (0+255),b
  7254  00228E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7255  002290  EF53  F011         	goto	u7061
  7256  002294  5165               	movf	(roundf@e+1)& (0+255),w,b
  7257  002296  E109               	bnz	u7060
  7258  002298  0E96               	movlw	150
  7259  00229A  5D64               	subwf	roundf@e& (0+255),w,b
  7260  00229C  A0D8               	btfss	status,0,c
  7261  00229E  EF53  F011         	goto	u7061
  7262  0022A2  EF55  F011         	goto	u7060
  7263  0022A6                     u7061:
  7264  0022A6  EF5F  F011         	goto	l6404
  7265  0022AA                     u7060:
  7266  0022AA                     
  7267                           ; BSR set to: 0
  7268  0022AA  C043  F043         	movff	roundf@x,?_roundf
  7269  0022AE  C044  F044         	movff	roundf@x+1,?_roundf+1
  7270  0022B2  C045  F045         	movff	roundf@x+2,?_roundf+2
  7271  0022B6  C046  F046         	movff	roundf@x+3,?_roundf+3
  7272  0022BA  EFF8  F012         	goto	l1551
  7273  0022BE                     l6404:
  7274                           
  7275                           ; BSR set to: 0
  7276  0022BE  C06A  F047         	movff	roundf@u,??_roundf
  7277  0022C2  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7278  0022C6  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7279  0022CA  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7280  0022CE  0E20               	movlw	32
  7281  0022D0  EF6F  F011         	goto	u7070
  7282  0022D4                     u7075:
  7283  0022D4  90D8               	bcf	status,0,c
  7284  0022D6  324A               	rrcf	(??_roundf+3)^0,f,c
  7285  0022D8  3249               	rrcf	(??_roundf+2)^0,f,c
  7286  0022DA  3248               	rrcf	(??_roundf+1)^0,f,c
  7287  0022DC  3247               	rrcf	??_roundf^0,f,c
  7288  0022DE                     u7070:
  7289  0022DE  2EE8               	decfsz	wreg,f,c
  7290  0022E0  EF6A  F011         	goto	u7075
  7291  0022E4  5047               	movf	??_roundf^0,w,c
  7292  0022E6  1048               	iorwf	(??_roundf+1)^0,w,c
  7293  0022E8  1049               	iorwf	(??_roundf+2)^0,w,c
  7294  0022EA  104A               	iorwf	(??_roundf+3)^0,w,c
  7295  0022EC  B4D8               	btfsc	status,2,c
  7296  0022EE  EF7B  F011         	goto	u7081
  7297  0022F2  EF7D  F011         	goto	u7080
  7298  0022F6                     u7081:
  7299  0022F6  EF8F  F011         	goto	l6408
  7300  0022FA                     u7080:
  7301  0022FA                     
  7302                           ; BSR set to: 0
  7303  0022FA  C043  F003         	movff	roundf@x,___flneg@f1
  7304  0022FE  C044  F004         	movff	roundf@x+1,___flneg@f1+1
  7305  002302  C045  F005         	movff	roundf@x+2,___flneg@f1+2
  7306  002306  C046  F006         	movff	roundf@x+3,___flneg@f1+3
  7307  00230A  EC62  F02A         	call	___flneg	;wreg free
  7308  00230E  C003  F043         	movff	?___flneg,roundf@x
  7309  002312  C004  F044         	movff	?___flneg+1,roundf@x+1
  7310  002316  C005  F045         	movff	?___flneg+2,roundf@x+2
  7311  00231A  C006  F046         	movff	?___flneg+3,roundf@x+3
  7312  00231E                     l6408:
  7313  00231E  0100               	movlb	0	; () banked
  7314  002320  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7315  002322  EF9E  F011         	goto	u7090
  7316  002326  5165               	movf	(roundf@e+1)& (0+255),w,b
  7317  002328  E107               	bnz	u7091
  7318  00232A  0E7E               	movlw	126
  7319  00232C  5D64               	subwf	roundf@e& (0+255),w,b
  7320  00232E  B0D8               	btfsc	status,0,c
  7321  002330  EF9C  F011         	goto	u7091
  7322  002334  EF9E  F011         	goto	u7090
  7323  002338                     u7091:
  7324  002338  EFBA  F011         	goto	l6414
  7325  00233C                     u7090:
  7326  00233C                     
  7327                           ; BSR set to: 0
  7328  00233C  C06A  F02A         	movff	roundf@u,___flmul@b
  7329  002340  C06B  F02B         	movff	roundf@u+1,___flmul@b+1
  7330  002344  C06C  F02C         	movff	roundf@u+2,___flmul@b+2
  7331  002348  C06D  F02D         	movff	roundf@u+3,___flmul@b+3
  7332  00234C  0E00               	movlw	0
  7333  00234E  6E2E               	movwf	___flmul@a^0,c
  7334  002350  0E00               	movlw	0
  7335  002352  6E2F               	movwf	(___flmul@a+1)^0,c
  7336  002354  0E00               	movlw	0
  7337  002356  6E30               	movwf	(___flmul@a+2)^0,c
  7338  002358  0E00               	movlw	0
  7339  00235A  6E31               	movwf	(___flmul@a+3)^0,c
  7340  00235C  EC0B  F00F         	call	___flmul	;wreg free
  7341  002360  C02A  F043         	movff	?___flmul,?_roundf
  7342  002364  C02B  F044         	movff	?___flmul+1,?_roundf+1
  7343  002368  C02C  F045         	movff	?___flmul+2,?_roundf+2
  7344  00236C  C02D  F046         	movff	?___flmul+3,?_roundf+3
  7345  002370  EFF8  F012         	goto	l1551
  7346  002374                     l6414:
  7347                           
  7348                           ; BSR set to: 0
  7349  002374  0E00               	movlw	0
  7350  002376  6E07               	movwf	___fladd@a^0,c
  7351  002378  0E00               	movlw	0
  7352  00237A  6E08               	movwf	(___fladd@a+1)^0,c
  7353  00237C  0E00               	movlw	0
  7354  00237E  6E09               	movwf	(___fladd@a+2)^0,c
  7355  002380  0E4B               	movlw	75
  7356  002382  6E0A               	movwf	(___fladd@a+3)^0,c
  7357  002384  C043  F003         	movff	roundf@x,___fladd@b
  7358  002388  C044  F004         	movff	roundf@x+1,___fladd@b+1
  7359  00238C  C045  F005         	movff	roundf@x+2,___fladd@b+2
  7360  002390  C046  F006         	movff	roundf@x+3,___fladd@b+3
  7361  002394  ECAB  F00C         	call	___fladd	;wreg free
  7362  002398  C003  F066         	movff	?___fladd,_roundf$3217
  7363  00239C  C004  F067         	movff	?___fladd+1,_roundf$3217+1
  7364  0023A0  C005  F068         	movff	?___fladd+2,_roundf$3217+2
  7365  0023A4  C006  F069         	movff	?___fladd+3,_roundf$3217+3
  7366  0023A8  0E00               	movlw	0
  7367  0023AA  6E07               	movwf	___fladd@a^0,c
  7368  0023AC  0E00               	movlw	0
  7369  0023AE  6E08               	movwf	(___fladd@a+1)^0,c
  7370  0023B0  0E00               	movlw	0
  7371  0023B2  6E09               	movwf	(___fladd@a+2)^0,c
  7372  0023B4  0ECB               	movlw	203
  7373  0023B6  6E0A               	movwf	(___fladd@a+3)^0,c
  7374  0023B8  C066  F003         	movff	_roundf$3217,___fladd@b
  7375  0023BC  C067  F004         	movff	_roundf$3217+1,___fladd@b+1
  7376  0023C0  C068  F005         	movff	_roundf$3217+2,___fladd@b+2
  7377  0023C4  C069  F006         	movff	_roundf$3217+3,___fladd@b+3
  7378  0023C8  ECAB  F00C         	call	___fladd	;wreg free
  7379  0023CC  C003  F060         	movff	?___fladd,_roundf$3218
  7380  0023D0  C004  F061         	movff	?___fladd+1,_roundf$3218+1
  7381  0023D4  C005  F062         	movff	?___fladd+2,_roundf$3218+2
  7382  0023D8  C006  F063         	movff	?___fladd+3,_roundf$3218+3
  7383  0023DC  C060  F013         	movff	_roundf$3218,___flsub@b
  7384  0023E0  C061  F014         	movff	_roundf$3218+1,___flsub@b+1
  7385  0023E4  C062  F015         	movff	_roundf$3218+2,___flsub@b+2
  7386  0023E8  C063  F016         	movff	_roundf$3218+3,___flsub@b+3
  7387  0023EC  C043  F017         	movff	roundf@x,___flsub@a
  7388  0023F0  C044  F018         	movff	roundf@x+1,___flsub@a+1
  7389  0023F4  C045  F019         	movff	roundf@x+2,___flsub@a+2
  7390  0023F8  C046  F01A         	movff	roundf@x+3,___flsub@a+3
  7391  0023FC  EC3F  F029         	call	___flsub	;wreg free
  7392  002400  C013  F06E         	movff	?___flsub,roundf@y
  7393  002404  C014  F06F         	movff	?___flsub+1,roundf@y+1
  7394  002408  C015  F070         	movff	?___flsub+2,roundf@y+2
  7395  00240C  C016  F071         	movff	?___flsub+3,roundf@y+3
  7396  002410  0E00               	movlw	0
  7397  002412  6E03               	movwf	___flge@ff1^0,c
  7398  002414  0E00               	movlw	0
  7399  002416  6E04               	movwf	(___flge@ff1+1)^0,c
  7400  002418  0E00               	movlw	0
  7401  00241A  6E05               	movwf	(___flge@ff1+2)^0,c
  7402  00241C  0E3F               	movlw	63
  7403  00241E  6E06               	movwf	(___flge@ff1+3)^0,c
  7404  002420  C06E  F007         	movff	roundf@y,___flge@ff2
  7405  002424  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  7406  002428  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  7407  00242C  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  7408  002430  ECA5  F023         	call	___flge	;wreg free
  7409  002434  B0D8               	btfsc	status,0,c
  7410  002436  EF1F  F012         	goto	u7101
  7411  00243A  EF21  F012         	goto	u7100
  7412  00243E                     u7101:
  7413  00243E  EF57  F012         	goto	l6418
  7414  002442                     u7100:
  7415  002442  C043  F007         	movff	roundf@x,___fladd@a
  7416  002446  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7417  00244A  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7418  00244E  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7419  002452  C06E  F003         	movff	roundf@y,___fladd@b
  7420  002456  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7421  00245A  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7422  00245E  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7423  002462  ECAB  F00C         	call	___fladd	;wreg free
  7424  002466  C003  F066         	movff	?___fladd,_roundf$3217
  7425  00246A  C004  F067         	movff	?___fladd+1,_roundf$3217+1
  7426  00246E  C005  F068         	movff	?___fladd+2,_roundf$3217+2
  7427  002472  C006  F069         	movff	?___fladd+3,_roundf$3217+3
  7428  002476  C066  F003         	movff	_roundf$3217,___fladd@b
  7429  00247A  C067  F004         	movff	_roundf$3217+1,___fladd@b+1
  7430  00247E  C068  F005         	movff	_roundf$3217+2,___fladd@b+2
  7431  002482  C069  F006         	movff	_roundf$3217+3,___fladd@b+3
  7432  002486  0E00               	movlw	0
  7433  002488  6E07               	movwf	___fladd@a^0,c
  7434  00248A  0E00               	movlw	0
  7435  00248C  6E08               	movwf	(___fladd@a+1)^0,c
  7436  00248E  0E80               	movlw	128
  7437  002490  6E09               	movwf	(___fladd@a+2)^0,c
  7438  002492  0EBF               	movlw	191
  7439  002494  6E0A               	movwf	(___fladd@a+3)^0,c
  7440  002496  ECAB  F00C         	call	___fladd	;wreg free
  7441  00249A  C003  F06E         	movff	?___fladd,roundf@y
  7442  00249E  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7443  0024A2  C005  F070         	movff	?___fladd+2,roundf@y+2
  7444  0024A6  C006  F071         	movff	?___fladd+3,roundf@y+3
  7445  0024AA  EFC0  F012         	goto	l6424
  7446  0024AE                     l6418:
  7447  0024AE  0E00               	movlw	0
  7448  0024B0  6E03               	movwf	___flge@ff1^0,c
  7449  0024B2  0E00               	movlw	0
  7450  0024B4  6E04               	movwf	(___flge@ff1+1)^0,c
  7451  0024B6  0E00               	movlw	0
  7452  0024B8  6E05               	movwf	(___flge@ff1+2)^0,c
  7453  0024BA  0EBF               	movlw	191
  7454  0024BC  6E06               	movwf	(___flge@ff1+3)^0,c
  7455  0024BE  C06E  F007         	movff	roundf@y,___flge@ff2
  7456  0024C2  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  7457  0024C6  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  7458  0024CA  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  7459  0024CE  ECA5  F023         	call	___flge	;wreg free
  7460  0024D2  A0D8               	btfss	status,0,c
  7461  0024D4  EF6E  F012         	goto	u7111
  7462  0024D8  EF70  F012         	goto	u7110
  7463  0024DC                     u7111:
  7464  0024DC  EFA6  F012         	goto	l6422
  7465  0024E0                     u7110:
  7466  0024E0  C043  F007         	movff	roundf@x,___fladd@a
  7467  0024E4  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7468  0024E8  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7469  0024EC  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7470  0024F0  C06E  F003         	movff	roundf@y,___fladd@b
  7471  0024F4  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7472  0024F8  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7473  0024FC  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7474  002500  ECAB  F00C         	call	___fladd	;wreg free
  7475  002504  C003  F066         	movff	?___fladd,_roundf$3217
  7476  002508  C004  F067         	movff	?___fladd+1,_roundf$3217+1
  7477  00250C  C005  F068         	movff	?___fladd+2,_roundf$3217+2
  7478  002510  C006  F069         	movff	?___fladd+3,_roundf$3217+3
  7479  002514  C066  F003         	movff	_roundf$3217,___fladd@b
  7480  002518  C067  F004         	movff	_roundf$3217+1,___fladd@b+1
  7481  00251C  C068  F005         	movff	_roundf$3217+2,___fladd@b+2
  7482  002520  C069  F006         	movff	_roundf$3217+3,___fladd@b+3
  7483  002524  0E00               	movlw	0
  7484  002526  6E07               	movwf	___fladd@a^0,c
  7485  002528  0E00               	movlw	0
  7486  00252A  6E08               	movwf	(___fladd@a+1)^0,c
  7487  00252C  0E80               	movlw	128
  7488  00252E  6E09               	movwf	(___fladd@a+2)^0,c
  7489  002530  0E3F               	movlw	63
  7490  002532  6E0A               	movwf	(___fladd@a+3)^0,c
  7491  002534  ECAB  F00C         	call	___fladd	;wreg free
  7492  002538  C003  F06E         	movff	?___fladd,roundf@y
  7493  00253C  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7494  002540  C005  F070         	movff	?___fladd+2,roundf@y+2
  7495  002544  C006  F071         	movff	?___fladd+3,roundf@y+3
  7496  002548  EFC0  F012         	goto	l6424
  7497  00254C                     l6422:
  7498  00254C  C06E  F003         	movff	roundf@y,___fladd@b
  7499  002550  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7500  002554  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7501  002558  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7502  00255C  C043  F007         	movff	roundf@x,___fladd@a
  7503  002560  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7504  002564  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7505  002568  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7506  00256C  ECAB  F00C         	call	___fladd	;wreg free
  7507  002570  C003  F06E         	movff	?___fladd,roundf@y
  7508  002574  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7509  002578  C005  F070         	movff	?___fladd+2,roundf@y+2
  7510  00257C  C006  F071         	movff	?___fladd+3,roundf@y+3
  7511  002580                     l6424:
  7512  002580  C06A  F047         	movff	roundf@u,??_roundf
  7513  002584  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7514  002588  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7515  00258C  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7516  002590  0E20               	movlw	32
  7517  002592  EFD0  F012         	goto	u7120
  7518  002596                     u7125:
  7519  002596  90D8               	bcf	status,0,c
  7520  002598  324A               	rrcf	(??_roundf+3)^0,f,c
  7521  00259A  3249               	rrcf	(??_roundf+2)^0,f,c
  7522  00259C  3248               	rrcf	(??_roundf+1)^0,f,c
  7523  00259E  3247               	rrcf	??_roundf^0,f,c
  7524  0025A0                     u7120:
  7525  0025A0  2EE8               	decfsz	wreg,f,c
  7526  0025A2  EFCB  F012         	goto	u7125
  7527  0025A6  5047               	movf	??_roundf^0,w,c
  7528  0025A8  1048               	iorwf	(??_roundf+1)^0,w,c
  7529  0025AA  1049               	iorwf	(??_roundf+2)^0,w,c
  7530  0025AC  104A               	iorwf	(??_roundf+3)^0,w,c
  7531  0025AE  B4D8               	btfsc	status,2,c
  7532  0025B0  EFDC  F012         	goto	u7131
  7533  0025B4  EFDE  F012         	goto	u7130
  7534  0025B8                     u7131:
  7535  0025B8  EFF0  F012         	goto	l6428
  7536  0025BC                     u7130:
  7537  0025BC  C06E  F003         	movff	roundf@y,___flneg@f1
  7538  0025C0  C06F  F004         	movff	roundf@y+1,___flneg@f1+1
  7539  0025C4  C070  F005         	movff	roundf@y+2,___flneg@f1+2
  7540  0025C8  C071  F006         	movff	roundf@y+3,___flneg@f1+3
  7541  0025CC  EC62  F02A         	call	___flneg	;wreg free
  7542  0025D0  C003  F06E         	movff	?___flneg,roundf@y
  7543  0025D4  C004  F06F         	movff	?___flneg+1,roundf@y+1
  7544  0025D8  C005  F070         	movff	?___flneg+2,roundf@y+2
  7545  0025DC  C006  F071         	movff	?___flneg+3,roundf@y+3
  7546  0025E0                     l6428:
  7547  0025E0  C06E  F043         	movff	roundf@y,?_roundf
  7548  0025E4  C06F  F044         	movff	roundf@y+1,?_roundf+1
  7549  0025E8  C070  F045         	movff	roundf@y+2,?_roundf+2
  7550  0025EC  C071  F046         	movff	roundf@y+3,?_roundf+3
  7551  0025F0                     l1551:
  7552  0025F0  0012               	return		;funcret
  7553  0025F2                     __end_of_roundf:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function ___flsub *****************
  7557 ;; Defined at:
  7558 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  b               4   18[COMRAM] float 
  7561 ;;  a               4   22[COMRAM] float 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  4   18[COMRAM] float 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;Total ram usage:        8 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; Hardware stack levels required when called: 3
  7580 ;; This function calls:
  7581 ;;		___fladd
  7582 ;; This function is called by:
  7583 ;;		_roundf
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text36
  7588  00527E                     __ptext36:
  7589                           	callstack 0
  7590  00527E                     ___flsub:
  7591                           	callstack 23
  7592  00527E  0E00               	movlw	0
  7593  005280  1A17               	xorwf	___flsub@a^0,f,c
  7594  005282  0E00               	movlw	0
  7595  005284  1A18               	xorwf	(___flsub@a+1)^0,f,c
  7596  005286  0E00               	movlw	0
  7597  005288  1A19               	xorwf	(___flsub@a+2)^0,f,c
  7598  00528A  0E80               	movlw	128
  7599  00528C  1A1A               	xorwf	(___flsub@a+3)^0,f,c
  7600  00528E  C013  F003         	movff	___flsub@b,___fladd@b
  7601  005292  C014  F004         	movff	___flsub@b+1,___fladd@b+1
  7602  005296  C015  F005         	movff	___flsub@b+2,___fladd@b+2
  7603  00529A  C016  F006         	movff	___flsub@b+3,___fladd@b+3
  7604  00529E  C017  F007         	movff	___flsub@a,___fladd@a
  7605  0052A2  C018  F008         	movff	___flsub@a+1,___fladd@a+1
  7606  0052A6  C019  F009         	movff	___flsub@a+2,___fladd@a+2
  7607  0052AA  C01A  F00A         	movff	___flsub@a+3,___fladd@a+3
  7608  0052AE  ECAB  F00C         	call	___fladd	;wreg free
  7609  0052B2  C003  F013         	movff	?___fladd,?___flsub
  7610  0052B6  C004  F014         	movff	?___fladd+1,?___flsub+1
  7611  0052BA  C005  F015         	movff	?___fladd+2,?___flsub+2
  7612  0052BE  C006  F016         	movff	?___fladd+3,?___flsub+3
  7613  0052C2  0012               	return		;funcret
  7614  0052C4                     __end_of___flsub:
  7615                           	callstack 0
  7616                           
  7617 ;; *************** function ___fladd *****************
  7618 ;; Defined at:
  7619 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  b               4    2[COMRAM] float 
  7622 ;;  a               4    6[COMRAM] float 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;  grs             1   17[COMRAM] unsigned char 
  7625 ;;  bexp            1   16[COMRAM] unsigned char 
  7626 ;;  aexp            1   15[COMRAM] unsigned char 
  7627 ;;  signs           1   14[COMRAM] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  4    2[COMRAM] unsigned char 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7637 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;Total ram usage:       16 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 2
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		___flsub
  7648 ;;		_roundf
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text37
  7653  001956                     __ptext37:
  7654                           	callstack 0
  7655  001956                     ___fladd:
  7656                           	callstack 23
  7657  001956  5006               	movf	(___fladd@b+3)^0,w,c
  7658  001958  0B80               	andlw	128
  7659  00195A  6E0F               	movwf	___fladd@signs^0,c
  7660  00195C  5006               	movf	(___fladd@b+3)^0,w,c
  7661  00195E  2406               	addwf	(___fladd@b+3)^0,w,c
  7662  001960  6E11               	movwf	___fladd@bexp^0,c
  7663  001962  AE05               	btfss	(___fladd@b+2)^0,7,c
  7664  001964  EFB6  F00C         	goto	u6191
  7665  001968  EFB8  F00C         	goto	u6190
  7666  00196C                     u6191:
  7667  00196C  EFB9  F00C         	goto	l5824
  7668  001970                     u6190:
  7669  001970  8011               	bsf	___fladd@bexp^0,0,c
  7670  001972                     l5824:
  7671  001972  5011               	movf	___fladd@bexp^0,w,c
  7672  001974  B4D8               	btfsc	status,2,c
  7673  001976  EFBF  F00C         	goto	u6201
  7674  00197A  EFC1  F00C         	goto	u6200
  7675  00197E                     u6201:
  7676  00197E  EFD6  F00C         	goto	l5834
  7677  001982                     u6200:
  7678  001982  2811               	incf	___fladd@bexp^0,w,c
  7679  001984  A4D8               	btfss	status,2,c
  7680  001986  EFC7  F00C         	goto	u6211
  7681  00198A  EFC9  F00C         	goto	u6210
  7682  00198E                     u6211:
  7683  00198E  EFD1  F00C         	goto	l5830
  7684  001992                     u6210:
  7685  001992  0E00               	movlw	0
  7686  001994  6E03               	movwf	___fladd@b^0,c
  7687  001996  0E00               	movlw	0
  7688  001998  6E04               	movwf	(___fladd@b+1)^0,c
  7689  00199A  0E00               	movlw	0
  7690  00199C  6E05               	movwf	(___fladd@b+2)^0,c
  7691  00199E  0E00               	movlw	0
  7692  0019A0  6E06               	movwf	(___fladd@b+3)^0,c
  7693  0019A2                     l5830:
  7694  0019A2  8E05               	bsf	(___fladd@b+2)^0,7,c
  7695  0019A4  0E00               	movlw	0
  7696  0019A6  6E06               	movwf	(___fladd@b+3)^0,c
  7697  0019A8  EFDE  F00C         	goto	l5836
  7698  0019AC                     l5834:
  7699  0019AC  0E00               	movlw	0
  7700  0019AE  6E03               	movwf	___fladd@b^0,c
  7701  0019B0  0E00               	movlw	0
  7702  0019B2  6E04               	movwf	(___fladd@b+1)^0,c
  7703  0019B4  0E00               	movlw	0
  7704  0019B6  6E05               	movwf	(___fladd@b+2)^0,c
  7705  0019B8  0E00               	movlw	0
  7706  0019BA  6E06               	movwf	(___fladd@b+3)^0,c
  7707  0019BC                     l5836:
  7708  0019BC  500A               	movf	(___fladd@a+3)^0,w,c
  7709  0019BE  0B80               	andlw	128
  7710  0019C0  6E10               	movwf	___fladd@aexp^0,c
  7711  0019C2  500F               	movf	___fladd@signs^0,w,c
  7712  0019C4  1810               	xorwf	___fladd@aexp^0,w,c
  7713  0019C6  B4D8               	btfsc	status,2,c
  7714  0019C8  EFE8  F00C         	goto	u6221
  7715  0019CC  EFEA  F00C         	goto	u6220
  7716  0019D0                     u6221:
  7717  0019D0  EFEB  F00C         	goto	l5842
  7718  0019D4                     u6220:
  7719  0019D4  8C0F               	bsf	___fladd@signs^0,6,c
  7720  0019D6                     l5842:
  7721  0019D6  500A               	movf	(___fladd@a+3)^0,w,c
  7722  0019D8  240A               	addwf	(___fladd@a+3)^0,w,c
  7723  0019DA  6E10               	movwf	___fladd@aexp^0,c
  7724  0019DC  AE09               	btfss	(___fladd@a+2)^0,7,c
  7725  0019DE  EFF3  F00C         	goto	u6231
  7726  0019E2  EFF5  F00C         	goto	u6230
  7727  0019E6                     u6231:
  7728  0019E6  EFF6  F00C         	goto	l5848
  7729  0019EA                     u6230:
  7730  0019EA  8010               	bsf	___fladd@aexp^0,0,c
  7731  0019EC                     l5848:
  7732  0019EC  5010               	movf	___fladd@aexp^0,w,c
  7733  0019EE  B4D8               	btfsc	status,2,c
  7734  0019F0  EFFC  F00C         	goto	u6241
  7735  0019F4  EFFE  F00C         	goto	u6240
  7736  0019F8                     u6241:
  7737  0019F8  EF13  F00D         	goto	l5858
  7738  0019FC                     u6240:
  7739  0019FC  2810               	incf	___fladd@aexp^0,w,c
  7740  0019FE  A4D8               	btfss	status,2,c
  7741  001A00  EF04  F00D         	goto	u6251
  7742  001A04  EF06  F00D         	goto	u6250
  7743  001A08                     u6251:
  7744  001A08  EF0E  F00D         	goto	l5854
  7745  001A0C                     u6250:
  7746  001A0C  0E00               	movlw	0
  7747  001A0E  6E07               	movwf	___fladd@a^0,c
  7748  001A10  0E00               	movlw	0
  7749  001A12  6E08               	movwf	(___fladd@a+1)^0,c
  7750  001A14  0E00               	movlw	0
  7751  001A16  6E09               	movwf	(___fladd@a+2)^0,c
  7752  001A18  0E00               	movlw	0
  7753  001A1A  6E0A               	movwf	(___fladd@a+3)^0,c
  7754  001A1C                     l5854:
  7755  001A1C  8E09               	bsf	(___fladd@a+2)^0,7,c
  7756  001A1E  0E00               	movlw	0
  7757  001A20  6E0A               	movwf	(___fladd@a+3)^0,c
  7758  001A22  EF1B  F00D         	goto	l5860
  7759  001A26                     l5858:
  7760  001A26  0E00               	movlw	0
  7761  001A28  6E07               	movwf	___fladd@a^0,c
  7762  001A2A  0E00               	movlw	0
  7763  001A2C  6E08               	movwf	(___fladd@a+1)^0,c
  7764  001A2E  0E00               	movlw	0
  7765  001A30  6E09               	movwf	(___fladd@a+2)^0,c
  7766  001A32  0E00               	movlw	0
  7767  001A34  6E0A               	movwf	(___fladd@a+3)^0,c
  7768  001A36                     l5860:
  7769  001A36  5011               	movf	___fladd@bexp^0,w,c
  7770  001A38  5C10               	subwf	___fladd@aexp^0,w,c
  7771  001A3A  B0D8               	btfsc	status,0,c
  7772  001A3C  EF22  F00D         	goto	u6261
  7773  001A40  EF24  F00D         	goto	u6260
  7774  001A44                     u6261:
  7775  001A44  EF4B  F00D         	goto	l5896
  7776  001A48                     u6260:
  7777  001A48  AC0F               	btfss	___fladd@signs^0,6,c
  7778  001A4A  EF29  F00D         	goto	u6271
  7779  001A4E  EF2B  F00D         	goto	u6270
  7780  001A52                     u6271:
  7781  001A52  EF2D  F00D         	goto	l5866
  7782  001A56                     u6270:
  7783  001A56  0E80               	movlw	128
  7784  001A58  1A0F               	xorwf	___fladd@signs^0,f,c
  7785  001A5A                     l5866:
  7786  001A5A  C011  F012         	movff	___fladd@bexp,___fladd@grs
  7787  001A5E  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  7788  001A62  C012  F010         	movff	___fladd@grs,___fladd@aexp
  7789  001A66  C003  F012         	movff	___fladd@b,___fladd@grs
  7790  001A6A  C007  F003         	movff	___fladd@a,___fladd@b
  7791  001A6E  C012  F007         	movff	___fladd@grs,___fladd@a
  7792  001A72  C004  F012         	movff	___fladd@b+1,___fladd@grs
  7793  001A76  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  7794  001A7A  C012  F008         	movff	___fladd@grs,___fladd@a+1
  7795  001A7E  C005  F012         	movff	___fladd@b+2,___fladd@grs
  7796  001A82  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  7797  001A86  C012  F009         	movff	___fladd@grs,___fladd@a+2
  7798  001A8A  C006  F012         	movff	___fladd@b+3,___fladd@grs
  7799  001A8E  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  7800  001A92  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  7801  001A96                     l5896:
  7802  001A96  0E00               	movlw	0
  7803  001A98  6E12               	movwf	___fladd@grs^0,c
  7804  001A9A  5011               	movf	___fladd@bexp^0,w,c
  7805  001A9C  C010  F00B         	movff	___fladd@aexp,??___fladd
  7806  001AA0  6A0C               	clrf	(??___fladd+1)^0,c
  7807  001AA2  5E0B               	subwf	??___fladd^0,f,c
  7808  001AA4  0E00               	movlw	0
  7809  001AA6  5A0C               	subwfb	(??___fladd+1)^0,f,c
  7810  001AA8  BE0C               	btfsc	(??___fladd+1)^0,7,c
  7811  001AAA  EF60  F00D         	goto	u6281
  7812  001AAE  500C               	movf	(??___fladd+1)^0,w,c
  7813  001AB0  E109               	bnz	u6280
  7814  001AB2  0E1A               	movlw	26
  7815  001AB4  5C0B               	subwf	??___fladd^0,w,c
  7816  001AB6  A0D8               	btfss	status,0,c
  7817  001AB8  EF60  F00D         	goto	u6281
  7818  001ABC  EF62  F00D         	goto	u6280
  7819  001AC0                     u6281:
  7820  001AC0  EF99  F00D         	goto	l1287
  7821  001AC4                     u6280:
  7822  001AC4  5003               	movf	___fladd@b^0,w,c
  7823  001AC6  1004               	iorwf	(___fladd@b+1)^0,w,c
  7824  001AC8  1005               	iorwf	(___fladd@b+2)^0,w,c
  7825  001ACA  1006               	iorwf	(___fladd@b+3)^0,w,c
  7826  001ACC  A4D8               	btfss	status,2,c
  7827  001ACE  EF6B  F00D         	goto	u6291
  7828  001AD2  EF6E  F00D         	goto	u6290
  7829  001AD6                     u6291:
  7830  001AD6  0E01               	movlw	1
  7831  001AD8  EF6F  F00D         	goto	u6300
  7832  001ADC                     u6290:
  7833  001ADC  0E00               	movlw	0
  7834  001ADE                     u6300:
  7835  001ADE  6E12               	movwf	___fladd@grs^0,c
  7836  001AE0  0E00               	movlw	0
  7837  001AE2  6E03               	movwf	___fladd@b^0,c
  7838  001AE4  0E00               	movlw	0
  7839  001AE6  6E04               	movwf	(___fladd@b+1)^0,c
  7840  001AE8  0E00               	movlw	0
  7841  001AEA  6E05               	movwf	(___fladd@b+2)^0,c
  7842  001AEC  0E00               	movlw	0
  7843  001AEE  6E06               	movwf	(___fladd@b+3)^0,c
  7844  001AF0  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  7845  001AF4  EFA2  F00D         	goto	l1286
  7846  001AF8                     l1288:
  7847  001AF8  A012               	btfss	___fladd@grs^0,0,c
  7848  001AFA  EF81  F00D         	goto	u6311
  7849  001AFE  EF83  F00D         	goto	u6310
  7850  001B02                     u6311:
  7851  001B02  EF89  F00D         	goto	l5908
  7852  001B06                     u6310:
  7853  001B06  90D8               	bcf	status,0,c
  7854  001B08  3012               	rrcf	___fladd@grs^0,w,c
  7855  001B0A  0901               	iorlw	1
  7856  001B0C  6E12               	movwf	___fladd@grs^0,c
  7857  001B0E  EF8B  F00D         	goto	l5910
  7858  001B12                     l5908:
  7859  001B12  90D8               	bcf	status,0,c
  7860  001B14  3212               	rrcf	___fladd@grs^0,f,c
  7861  001B16                     l5910:
  7862  001B16  A003               	btfss	___fladd@b^0,0,c
  7863  001B18  EF90  F00D         	goto	u6321
  7864  001B1C  EF92  F00D         	goto	u6320
  7865  001B20                     u6321:
  7866  001B20  EF93  F00D         	goto	l5914
  7867  001B24                     u6320:
  7868  001B24  8E12               	bsf	___fladd@grs^0,7,c
  7869  001B26                     l5914:
  7870  001B26  3406               	rlcf	(___fladd@b+3)^0,w,c
  7871  001B28  3206               	rrcf	(___fladd@b+3)^0,f,c
  7872  001B2A  3205               	rrcf	(___fladd@b+2)^0,f,c
  7873  001B2C  3204               	rrcf	(___fladd@b+1)^0,f,c
  7874  001B2E  3203               	rrcf	___fladd@b^0,f,c
  7875  001B30  2A11               	incf	___fladd@bexp^0,f,c
  7876  001B32                     l1287:
  7877  001B32  5010               	movf	___fladd@aexp^0,w,c
  7878  001B34  5C11               	subwf	___fladd@bexp^0,w,c
  7879  001B36  A0D8               	btfss	status,0,c
  7880  001B38  EFA0  F00D         	goto	u6331
  7881  001B3C  EFA2  F00D         	goto	u6330
  7882  001B40                     u6331:
  7883  001B40  EF7C  F00D         	goto	l1288
  7884  001B44                     u6330:
  7885  001B44                     l1286:
  7886  001B44  BC0F               	btfsc	___fladd@signs^0,6,c
  7887  001B46  EFA7  F00D         	goto	u6341
  7888  001B4A  EFA9  F00D         	goto	u6340
  7889  001B4E                     u6341:
  7890  001B4E  EFE9  F00D         	goto	l5942
  7891  001B52                     u6340:
  7892  001B52  5011               	movf	___fladd@bexp^0,w,c
  7893  001B54  A4D8               	btfss	status,2,c
  7894  001B56  EFAF  F00D         	goto	u6351
  7895  001B5A  EFB1  F00D         	goto	u6350
  7896  001B5E                     u6351:
  7897  001B5E  EFBB  F00D         	goto	l5924
  7898  001B62                     u6350:
  7899  001B62  0E00               	movlw	0
  7900  001B64  6E03               	movwf	?___fladd^0,c
  7901  001B66  0E00               	movlw	0
  7902  001B68  6E04               	movwf	(?___fladd+1)^0,c
  7903  001B6A  0E00               	movlw	0
  7904  001B6C  6E05               	movwf	(?___fladd+2)^0,c
  7905  001B6E  0E00               	movlw	0
  7906  001B70  6E06               	movwf	(?___fladd+3)^0,c
  7907  001B72  EF0A  F00F         	goto	l1295
  7908  001B76                     l5924:
  7909  001B76  5007               	movf	___fladd@a^0,w,c
  7910  001B78  2603               	addwf	___fladd@b^0,f,c
  7911  001B7A  5008               	movf	(___fladd@a+1)^0,w,c
  7912  001B7C  2204               	addwfc	(___fladd@b+1)^0,f,c
  7913  001B7E  5009               	movf	(___fladd@a+2)^0,w,c
  7914  001B80  2205               	addwfc	(___fladd@b+2)^0,f,c
  7915  001B82  500A               	movf	(___fladd@a+3)^0,w,c
  7916  001B84  2206               	addwfc	(___fladd@b+3)^0,f,c
  7917  001B86  A006               	btfss	(___fladd@b+3)^0,0,c
  7918  001B88  EFC8  F00D         	goto	u6361
  7919  001B8C  EFCA  F00D         	goto	u6360
  7920  001B90                     u6361:
  7921  001B90  EF76  F00E         	goto	l5978
  7922  001B94                     u6360:
  7923  001B94  A012               	btfss	___fladd@grs^0,0,c
  7924  001B96  EFCF  F00D         	goto	u6371
  7925  001B9A  EFD1  F00D         	goto	u6370
  7926  001B9E                     u6371:
  7927  001B9E  EFD7  F00D         	goto	l5932
  7928  001BA2                     u6370:
  7929  001BA2  90D8               	bcf	status,0,c
  7930  001BA4  3012               	rrcf	___fladd@grs^0,w,c
  7931  001BA6  0901               	iorlw	1
  7932  001BA8  6E12               	movwf	___fladd@grs^0,c
  7933  001BAA  EFD9  F00D         	goto	l5934
  7934  001BAE                     l5932:
  7935  001BAE  90D8               	bcf	status,0,c
  7936  001BB0  3212               	rrcf	___fladd@grs^0,f,c
  7937  001BB2                     l5934:
  7938  001BB2  A003               	btfss	___fladd@b^0,0,c
  7939  001BB4  EFDE  F00D         	goto	u6381
  7940  001BB8  EFE0  F00D         	goto	u6380
  7941  001BBC                     u6381:
  7942  001BBC  EFE1  F00D         	goto	l5938
  7943  001BC0                     u6380:
  7944  001BC0  8E12               	bsf	___fladd@grs^0,7,c
  7945  001BC2                     l5938:
  7946  001BC2  3406               	rlcf	(___fladd@b+3)^0,w,c
  7947  001BC4  3206               	rrcf	(___fladd@b+3)^0,f,c
  7948  001BC6  3205               	rrcf	(___fladd@b+2)^0,f,c
  7949  001BC8  3204               	rrcf	(___fladd@b+1)^0,f,c
  7950  001BCA  3203               	rrcf	___fladd@b^0,f,c
  7951  001BCC  2A11               	incf	___fladd@bexp^0,f,c
  7952  001BCE  EF76  F00E         	goto	l5978
  7953  001BD2                     l5942:
  7954  001BD2  5007               	movf	___fladd@a^0,w,c
  7955  001BD4  5C03               	subwf	___fladd@b^0,w,c
  7956  001BD6  5008               	movf	(___fladd@a+1)^0,w,c
  7957  001BD8  5804               	subwfb	(___fladd@b+1)^0,w,c
  7958  001BDA  5009               	movf	(___fladd@a+2)^0,w,c
  7959  001BDC  5805               	subwfb	(___fladd@b+2)^0,w,c
  7960  001BDE  5006               	movf	(___fladd@b+3)^0,w,c
  7961  001BE0  0A80               	xorlw	128
  7962  001BE2  6E0B               	movwf	??___fladd^0,c
  7963  001BE4  500A               	movf	(___fladd@a+3)^0,w,c
  7964  001BE6  0A80               	xorlw	128
  7965  001BE8  580B               	subwfb	??___fladd^0,w,c
  7966  001BEA  B0D8               	btfsc	status,0,c
  7967  001BEC  EFFA  F00D         	goto	u6391
  7968  001BF0  EFFC  F00D         	goto	u6390
  7969  001BF4                     u6391:
  7970  001BF4  EF27  F00E         	goto	l5952
  7971  001BF8                     u6390:
  7972  001BF8  5003               	movf	___fladd@b^0,w,c
  7973  001BFA  5C07               	subwf	___fladd@a^0,w,c
  7974  001BFC  6E0B               	movwf	??___fladd^0,c
  7975  001BFE  5004               	movf	(___fladd@b+1)^0,w,c
  7976  001C00  5808               	subwfb	(___fladd@a+1)^0,w,c
  7977  001C02  6E0C               	movwf	(??___fladd+1)^0,c
  7978  001C04  5005               	movf	(___fladd@b+2)^0,w,c
  7979  001C06  5809               	subwfb	(___fladd@a+2)^0,w,c
  7980  001C08  6E0D               	movwf	(??___fladd+2)^0,c
  7981  001C0A  5006               	movf	(___fladd@b+3)^0,w,c
  7982  001C0C  580A               	subwfb	(___fladd@a+3)^0,w,c
  7983  001C0E  6E0E               	movwf	(??___fladd+3)^0,c
  7984  001C10  0EFF               	movlw	255
  7985  001C12  240B               	addwf	??___fladd^0,w,c
  7986  001C14  6E03               	movwf	___fladd@b^0,c
  7987  001C16  0EFF               	movlw	255
  7988  001C18  200C               	addwfc	(??___fladd+1)^0,w,c
  7989  001C1A  6E04               	movwf	(___fladd@b+1)^0,c
  7990  001C1C  0EFF               	movlw	255
  7991  001C1E  200D               	addwfc	(??___fladd+2)^0,w,c
  7992  001C20  6E05               	movwf	(___fladd@b+2)^0,c
  7993  001C22  0EFF               	movlw	255
  7994  001C24  200E               	addwfc	(??___fladd+3)^0,w,c
  7995  001C26  6E06               	movwf	(___fladd@b+3)^0,c
  7996  001C28  0E80               	movlw	128
  7997  001C2A  1A0F               	xorwf	___fladd@signs^0,f,c
  7998  001C2C  6C12               	negf	___fladd@grs^0,c
  7999  001C2E  5012               	movf	___fladd@grs^0,w,c
  8000  001C30  A4D8               	btfss	status,2,c
  8001  001C32  EF1D  F00E         	goto	u6401
  8002  001C36  EF1F  F00E         	goto	u6400
  8003  001C3A                     u6401:
  8004  001C3A  EF2F  F00E         	goto	l1303
  8005  001C3E                     u6400:
  8006  001C3E  0E01               	movlw	1
  8007  001C40  2603               	addwf	___fladd@b^0,f,c
  8008  001C42  0E00               	movlw	0
  8009  001C44  2204               	addwfc	(___fladd@b+1)^0,f,c
  8010  001C46  2205               	addwfc	(___fladd@b+2)^0,f,c
  8011  001C48  2206               	addwfc	(___fladd@b+3)^0,f,c
  8012  001C4A  EF2F  F00E         	goto	l1303
  8013  001C4E                     l5952:
  8014  001C4E  5007               	movf	___fladd@a^0,w,c
  8015  001C50  5E03               	subwf	___fladd@b^0,f,c
  8016  001C52  5008               	movf	(___fladd@a+1)^0,w,c
  8017  001C54  5A04               	subwfb	(___fladd@b+1)^0,f,c
  8018  001C56  5009               	movf	(___fladd@a+2)^0,w,c
  8019  001C58  5A05               	subwfb	(___fladd@b+2)^0,f,c
  8020  001C5A  500A               	movf	(___fladd@a+3)^0,w,c
  8021  001C5C  5A06               	subwfb	(___fladd@b+3)^0,f,c
  8022  001C5E                     l1303:
  8023  001C5E  5003               	movf	___fladd@b^0,w,c
  8024  001C60  1004               	iorwf	(___fladd@b+1)^0,w,c
  8025  001C62  1005               	iorwf	(___fladd@b+2)^0,w,c
  8026  001C64  1006               	iorwf	(___fladd@b+3)^0,w,c
  8027  001C66  A4D8               	btfss	status,2,c
  8028  001C68  EF38  F00E         	goto	u6411
  8029  001C6C  EF3A  F00E         	goto	u6410
  8030  001C70                     u6411:
  8031  001C70  EF6F  F00E         	goto	l5976
  8032  001C74                     u6410:
  8033  001C74  5012               	movf	___fladd@grs^0,w,c
  8034  001C76  A4D8               	btfss	status,2,c
  8035  001C78  EF40  F00E         	goto	u6421
  8036  001C7C  EF42  F00E         	goto	u6420
  8037  001C80                     u6421:
  8038  001C80  EF6F  F00E         	goto	l5976
  8039  001C84                     u6420:
  8040  001C84  0E00               	movlw	0
  8041  001C86  6E03               	movwf	?___fladd^0,c
  8042  001C88  0E00               	movlw	0
  8043  001C8A  6E04               	movwf	(?___fladd+1)^0,c
  8044  001C8C  0E00               	movlw	0
  8045  001C8E  6E05               	movwf	(?___fladd+2)^0,c
  8046  001C90  0E00               	movlw	0
  8047  001C92  6E06               	movwf	(?___fladd+3)^0,c
  8048  001C94  EF0A  F00F         	goto	l1295
  8049  001C98                     l5960:
  8050  001C98  90D8               	bcf	status,0,c
  8051  001C9A  3603               	rlcf	___fladd@b^0,f,c
  8052  001C9C  3604               	rlcf	(___fladd@b+1)^0,f,c
  8053  001C9E  3605               	rlcf	(___fladd@b+2)^0,f,c
  8054  001CA0  3606               	rlcf	(___fladd@b+3)^0,f,c
  8055  001CA2  AE12               	btfss	___fladd@grs^0,7,c
  8056  001CA4  EF56  F00E         	goto	u6431
  8057  001CA8  EF58  F00E         	goto	u6430
  8058  001CAC                     u6431:
  8059  001CAC  EF59  F00E         	goto	l5966
  8060  001CB0                     u6430:
  8061  001CB0  8003               	bsf	___fladd@b^0,0,c
  8062  001CB2                     l5966:
  8063  001CB2  A012               	btfss	___fladd@grs^0,0,c
  8064  001CB4  EF5E  F00E         	goto	u6441
  8065  001CB8  EF60  F00E         	goto	u6440
  8066  001CBC                     u6441:
  8067  001CBC  EF64  F00E         	goto	l5970
  8068  001CC0                     u6440:
  8069  001CC0  80D8               	bsf	status,0,c
  8070  001CC2  3612               	rlcf	___fladd@grs^0,f,c
  8071  001CC4  EF66  F00E         	goto	l5972
  8072  001CC8                     l5970:
  8073  001CC8  90D8               	bcf	status,0,c
  8074  001CCA  3612               	rlcf	___fladd@grs^0,f,c
  8075  001CCC                     l5972:
  8076  001CCC  5011               	movf	___fladd@bexp^0,w,c
  8077  001CCE  B4D8               	btfsc	status,2,c
  8078  001CD0  EF6C  F00E         	goto	u6451
  8079  001CD4  EF6E  F00E         	goto	u6450
  8080  001CD8                     u6451:
  8081  001CD8  EF6F  F00E         	goto	l5976
  8082  001CDC                     u6450:
  8083  001CDC  0611               	decf	___fladd@bexp^0,f,c
  8084  001CDE                     l5976:
  8085  001CDE  AE05               	btfss	(___fladd@b+2)^0,7,c
  8086  001CE0  EF74  F00E         	goto	u6461
  8087  001CE4  EF76  F00E         	goto	u6460
  8088  001CE8                     u6461:
  8089  001CE8  EF4C  F00E         	goto	l5960
  8090  001CEC                     u6460:
  8091  001CEC                     l5978:
  8092  001CEC  0E00               	movlw	0
  8093  001CEE  6E10               	movwf	___fladd@aexp^0,c
  8094  001CF0  AE12               	btfss	___fladd@grs^0,7,c
  8095  001CF2  EF7D  F00E         	goto	u6471
  8096  001CF6  EF7F  F00E         	goto	u6470
  8097  001CFA                     u6471:
  8098  001CFA  EF97  F00E         	goto	l1312
  8099  001CFE                     u6470:
  8100  001CFE  C012  F00B         	movff	___fladd@grs,??___fladd
  8101  001D02  0E7F               	movlw	127
  8102  001D04  160B               	andwf	??___fladd^0,f,c
  8103  001D06  B4D8               	btfsc	status,2,c
  8104  001D08  EF88  F00E         	goto	u6481
  8105  001D0C  EF8A  F00E         	goto	u6480
  8106  001D10                     u6481:
  8107  001D10  EF8E  F00E         	goto	l1313
  8108  001D14                     u6480:
  8109  001D14                     l5984:
  8110  001D14  0E01               	movlw	1
  8111  001D16  6E10               	movwf	___fladd@aexp^0,c
  8112  001D18  EF97  F00E         	goto	l1312
  8113  001D1C                     l1313:
  8114  001D1C  A003               	btfss	___fladd@b^0,0,c
  8115  001D1E  EF93  F00E         	goto	u6491
  8116  001D22  EF95  F00E         	goto	u6490
  8117  001D26                     u6491:
  8118  001D26  EF97  F00E         	goto	l1312
  8119  001D2A                     u6490:
  8120  001D2A  EF8A  F00E         	goto	l5984
  8121  001D2E                     l1312:
  8122  001D2E  5010               	movf	___fladd@aexp^0,w,c
  8123  001D30  B4D8               	btfsc	status,2,c
  8124  001D32  EF9D  F00E         	goto	u6501
  8125  001D36  EF9F  F00E         	goto	u6500
  8126  001D3A                     u6501:
  8127  001D3A  EFCA  F00E         	goto	l5996
  8128  001D3E                     u6500:
  8129  001D3E  0E01               	movlw	1
  8130  001D40  2603               	addwf	___fladd@b^0,f,c
  8131  001D42  0E00               	movlw	0
  8132  001D44  2204               	addwfc	(___fladd@b+1)^0,f,c
  8133  001D46  2205               	addwfc	(___fladd@b+2)^0,f,c
  8134  001D48  2206               	addwfc	(___fladd@b+3)^0,f,c
  8135  001D4A  A006               	btfss	(___fladd@b+3)^0,0,c
  8136  001D4C  EFAA  F00E         	goto	u6511
  8137  001D50  EFAC  F00E         	goto	u6510
  8138  001D54                     u6511:
  8139  001D54  EFCA  F00E         	goto	l5996
  8140  001D58                     u6510:
  8141  001D58  C003  F00B         	movff	___fladd@b,??___fladd
  8142  001D5C  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  8143  001D60  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  8144  001D64  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  8145  001D68  340E               	rlcf	(??___fladd+3)^0,w,c
  8146  001D6A  320E               	rrcf	(??___fladd+3)^0,f,c
  8147  001D6C  320D               	rrcf	(??___fladd+2)^0,f,c
  8148  001D6E  320C               	rrcf	(??___fladd+1)^0,f,c
  8149  001D70  320B               	rrcf	??___fladd^0,f,c
  8150  001D72  C00B  F003         	movff	??___fladd,___fladd@b
  8151  001D76  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  8152  001D7A  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  8153  001D7E  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  8154  001D82  2811               	incf	___fladd@bexp^0,w,c
  8155  001D84  B4D8               	btfsc	status,2,c
  8156  001D86  EFC7  F00E         	goto	u6521
  8157  001D8A  EFC9  F00E         	goto	u6520
  8158  001D8E                     u6521:
  8159  001D8E  EFCA  F00E         	goto	l5996
  8160  001D92                     u6520:
  8161  001D92  2A11               	incf	___fladd@bexp^0,f,c
  8162  001D94                     l5996:
  8163  001D94  2811               	incf	___fladd@bexp^0,w,c
  8164  001D96  B4D8               	btfsc	status,2,c
  8165  001D98  EFD0  F00E         	goto	u6531
  8166  001D9C  EFD2  F00E         	goto	u6530
  8167  001DA0                     u6531:
  8168  001DA0  EFDA  F00E         	goto	l6000
  8169  001DA4                     u6530:
  8170  001DA4  5011               	movf	___fladd@bexp^0,w,c
  8171  001DA6  A4D8               	btfss	status,2,c
  8172  001DA8  EFD8  F00E         	goto	u6541
  8173  001DAC  EFDA  F00E         	goto	u6540
  8174  001DB0                     u6541:
  8175  001DB0  EFEC  F00E         	goto	l6004
  8176  001DB4                     u6540:
  8177  001DB4                     l6000:
  8178  001DB4  0E00               	movlw	0
  8179  001DB6  6E03               	movwf	___fladd@b^0,c
  8180  001DB8  0E00               	movlw	0
  8181  001DBA  6E04               	movwf	(___fladd@b+1)^0,c
  8182  001DBC  0E00               	movlw	0
  8183  001DBE  6E05               	movwf	(___fladd@b+2)^0,c
  8184  001DC0  0E00               	movlw	0
  8185  001DC2  6E06               	movwf	(___fladd@b+3)^0,c
  8186  001DC4  5011               	movf	___fladd@bexp^0,w,c
  8187  001DC6  A4D8               	btfss	status,2,c
  8188  001DC8  EFE8  F00E         	goto	u6551
  8189  001DCC  EFEA  F00E         	goto	u6550
  8190  001DD0                     u6551:
  8191  001DD0  EFEC  F00E         	goto	l6004
  8192  001DD4                     u6550:
  8193  001DD4  0E00               	movlw	0
  8194  001DD6  6E0F               	movwf	___fladd@signs^0,c
  8195  001DD8                     l6004:
  8196  001DD8  A011               	btfss	___fladd@bexp^0,0,c
  8197  001DDA  EFF1  F00E         	goto	u6561
  8198  001DDE  EFF3  F00E         	goto	u6560
  8199  001DE2                     u6561:
  8200  001DE2  EFF6  F00E         	goto	l6008
  8201  001DE6                     u6560:
  8202  001DE6  8E05               	bsf	(___fladd@b+2)^0,7,c
  8203  001DE8  EFF7  F00E         	goto	l6010
  8204  001DEC                     l6008:
  8205  001DEC  9E05               	bcf	(___fladd@b+2)^0,7,c
  8206  001DEE                     l6010:
  8207  001DEE  90D8               	bcf	status,0,c
  8208  001DF0  3011               	rrcf	___fladd@bexp^0,w,c
  8209  001DF2  6E06               	movwf	(___fladd@b+3)^0,c
  8210  001DF4  AE0F               	btfss	___fladd@signs^0,7,c
  8211  001DF6  EFFF  F00E         	goto	u6571
  8212  001DFA  EF01  F00F         	goto	u6570
  8213  001DFE                     u6571:
  8214  001DFE  EF02  F00F         	goto	l6016
  8215  001E02                     u6570:
  8216  001E02  8E06               	bsf	(___fladd@b+3)^0,7,c
  8217  001E04                     l6016:
  8218  001E04  C003  F003         	movff	___fladd@b,?___fladd
  8219  001E08  C004  F004         	movff	___fladd@b+1,?___fladd+1
  8220  001E0C  C005  F005         	movff	___fladd@b+2,?___fladd+2
  8221  001E10  C006  F006         	movff	___fladd@b+3,?___fladd+3
  8222  001E14                     l1295:
  8223  001E14  0012               	return		;funcret
  8224  001E16                     __end_of___fladd:
  8225                           	callstack 0
  8226                           
  8227 ;; *************** function ___flneg *****************
  8228 ;; Defined at:
  8229 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  f1              4    2[COMRAM] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  4    2[COMRAM] unsigned char 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;Total ram usage:        4 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 2
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_roundf
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text38
  8258  0054C4                     __ptext38:
  8259                           	callstack 0
  8260  0054C4                     ___flneg:
  8261                           	callstack 24
  8262  0054C4  5003               	movf	___flneg@f1^0,w,c
  8263  0054C6  1004               	iorwf	(___flneg@f1+1)^0,w,c
  8264  0054C8  1005               	iorwf	(___flneg@f1+2)^0,w,c
  8265  0054CA  1006               	iorwf	(___flneg@f1+3)^0,w,c
  8266  0054CC  B4D8               	btfsc	status,2,c
  8267  0054CE  EF6B  F02A         	goto	u6931
  8268  0054D2  EF6D  F02A         	goto	u6930
  8269  0054D6                     u6931:
  8270  0054D6  EF75  F02A         	goto	l6280
  8271  0054DA                     u6930:
  8272  0054DA  0E00               	movlw	0
  8273  0054DC  1A03               	xorwf	___flneg@f1^0,f,c
  8274  0054DE  0E00               	movlw	0
  8275  0054E0  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  8276  0054E2  0E00               	movlw	0
  8277  0054E4  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  8278  0054E6  0E80               	movlw	128
  8279  0054E8  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  8280  0054EA                     l6280:
  8281  0054EA  C003  F003         	movff	___flneg@f1,?___flneg
  8282  0054EE  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  8283  0054F2  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  8284  0054F6  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  8285  0054FA  0012               	return		;funcret
  8286  0054FC                     __end_of___flneg:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function ___flmul *****************
  8290 ;; Defined at:
  8291 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  b               4   41[COMRAM] unsigned char 
  8294 ;;  a               4   45[COMRAM] unsigned char 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  prod            4   60[COMRAM] struct .
  8297 ;;  grs             4   55[COMRAM] unsigned long 
  8298 ;;  temp            2   64[COMRAM] struct .
  8299 ;;  bexp            1   59[COMRAM] unsigned char 
  8300 ;;  aexp            1   54[COMRAM] unsigned char 
  8301 ;;  sign            1   53[COMRAM] unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  4   41[COMRAM] unsigned char 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0, prodl, prodh
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8311 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;Total ram usage:       25 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 2
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_detect_color
  8322 ;;		_distance_measure
  8323 ;;		_roundf
  8324 ;;		_check_color_reading
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text39
  8329  001E16                     __ptext39:
  8330                           	callstack 0
  8331  001E16                     ___flmul:
  8332                           	callstack 24
  8333  001E16  502D               	movf	(___flmul@b+3)^0,w,c
  8334  001E18  0B80               	andlw	128
  8335  001E1A  6E36               	movwf	___flmul@sign^0,c
  8336  001E1C  502D               	movf	(___flmul@b+3)^0,w,c
  8337  001E1E  242D               	addwf	(___flmul@b+3)^0,w,c
  8338  001E20  6E3C               	movwf	___flmul@bexp^0,c
  8339  001E22  AE2C               	btfss	(___flmul@b+2)^0,7,c
  8340  001E24  EF16  F00F         	goto	u6691
  8341  001E28  EF18  F00F         	goto	u6690
  8342  001E2C                     u6691:
  8343  001E2C  EF19  F00F         	goto	l6124
  8344  001E30                     u6690:
  8345  001E30  803C               	bsf	___flmul@bexp^0,0,c
  8346  001E32                     l6124:
  8347  001E32  503C               	movf	___flmul@bexp^0,w,c
  8348  001E34  B4D8               	btfsc	status,2,c
  8349  001E36  EF1F  F00F         	goto	u6701
  8350  001E3A  EF21  F00F         	goto	u6700
  8351  001E3E                     u6701:
  8352  001E3E  EF34  F00F         	goto	l6132
  8353  001E42                     u6700:
  8354  001E42  283C               	incf	___flmul@bexp^0,w,c
  8355  001E44  A4D8               	btfss	status,2,c
  8356  001E46  EF27  F00F         	goto	u6711
  8357  001E4A  EF29  F00F         	goto	u6710
  8358  001E4E                     u6711:
  8359  001E4E  EF31  F00F         	goto	l6130
  8360  001E52                     u6710:
  8361  001E52  0E00               	movlw	0
  8362  001E54  6E2A               	movwf	___flmul@b^0,c
  8363  001E56  0E00               	movlw	0
  8364  001E58  6E2B               	movwf	(___flmul@b+1)^0,c
  8365  001E5A  0E00               	movlw	0
  8366  001E5C  6E2C               	movwf	(___flmul@b+2)^0,c
  8367  001E5E  0E00               	movlw	0
  8368  001E60  6E2D               	movwf	(___flmul@b+3)^0,c
  8369  001E62                     l6130:
  8370  001E62  8E2C               	bsf	(___flmul@b+2)^0,7,c
  8371  001E64  EF3C  F00F         	goto	l6134
  8372  001E68                     l6132:
  8373  001E68  0E00               	movlw	0
  8374  001E6A  6E2A               	movwf	___flmul@b^0,c
  8375  001E6C  0E00               	movlw	0
  8376  001E6E  6E2B               	movwf	(___flmul@b+1)^0,c
  8377  001E70  0E00               	movlw	0
  8378  001E72  6E2C               	movwf	(___flmul@b+2)^0,c
  8379  001E74  0E00               	movlw	0
  8380  001E76  6E2D               	movwf	(___flmul@b+3)^0,c
  8381  001E78                     l6134:
  8382  001E78  5031               	movf	(___flmul@a+3)^0,w,c
  8383  001E7A  0B80               	andlw	128
  8384  001E7C  1A36               	xorwf	___flmul@sign^0,f,c
  8385  001E7E  5031               	movf	(___flmul@a+3)^0,w,c
  8386  001E80  2431               	addwf	(___flmul@a+3)^0,w,c
  8387  001E82  6E37               	movwf	___flmul@aexp^0,c
  8388  001E84  AE30               	btfss	(___flmul@a+2)^0,7,c
  8389  001E86  EF47  F00F         	goto	u6721
  8390  001E8A  EF49  F00F         	goto	u6720
  8391  001E8E                     u6721:
  8392  001E8E  EF4A  F00F         	goto	l6142
  8393  001E92                     u6720:
  8394  001E92  8037               	bsf	___flmul@aexp^0,0,c
  8395  001E94                     l6142:
  8396  001E94  5037               	movf	___flmul@aexp^0,w,c
  8397  001E96  B4D8               	btfsc	status,2,c
  8398  001E98  EF50  F00F         	goto	u6731
  8399  001E9C  EF52  F00F         	goto	u6730
  8400  001EA0                     u6731:
  8401  001EA0  EF65  F00F         	goto	l6150
  8402  001EA4                     u6730:
  8403  001EA4  2837               	incf	___flmul@aexp^0,w,c
  8404  001EA6  A4D8               	btfss	status,2,c
  8405  001EA8  EF58  F00F         	goto	u6741
  8406  001EAC  EF5A  F00F         	goto	u6740
  8407  001EB0                     u6741:
  8408  001EB0  EF62  F00F         	goto	l6148
  8409  001EB4                     u6740:
  8410  001EB4  0E00               	movlw	0
  8411  001EB6  6E2E               	movwf	___flmul@a^0,c
  8412  001EB8  0E00               	movlw	0
  8413  001EBA  6E2F               	movwf	(___flmul@a+1)^0,c
  8414  001EBC  0E00               	movlw	0
  8415  001EBE  6E30               	movwf	(___flmul@a+2)^0,c
  8416  001EC0  0E00               	movlw	0
  8417  001EC2  6E31               	movwf	(___flmul@a+3)^0,c
  8418  001EC4                     l6148:
  8419  001EC4  8E30               	bsf	(___flmul@a+2)^0,7,c
  8420  001EC6  EF6D  F00F         	goto	l1372
  8421  001ECA                     l6150:
  8422  001ECA  0E00               	movlw	0
  8423  001ECC  6E2E               	movwf	___flmul@a^0,c
  8424  001ECE  0E00               	movlw	0
  8425  001ED0  6E2F               	movwf	(___flmul@a+1)^0,c
  8426  001ED2  0E00               	movlw	0
  8427  001ED4  6E30               	movwf	(___flmul@a+2)^0,c
  8428  001ED6  0E00               	movlw	0
  8429  001ED8  6E31               	movwf	(___flmul@a+3)^0,c
  8430  001EDA                     l1372:
  8431  001EDA  5037               	movf	___flmul@aexp^0,w,c
  8432  001EDC  B4D8               	btfsc	status,2,c
  8433  001EDE  EF73  F00F         	goto	u6751
  8434  001EE2  EF75  F00F         	goto	u6750
  8435  001EE6                     u6751:
  8436  001EE6  EF7D  F00F         	goto	l6154
  8437  001EEA                     u6750:
  8438  001EEA  503C               	movf	___flmul@bexp^0,w,c
  8439  001EEC  A4D8               	btfss	status,2,c
  8440  001EEE  EF7B  F00F         	goto	u6761
  8441  001EF2  EF7D  F00F         	goto	u6760
  8442  001EF6                     u6761:
  8443  001EF6  EF87  F00F         	goto	l6158
  8444  001EFA                     u6760:
  8445  001EFA                     l6154:
  8446  001EFA  0E00               	movlw	0
  8447  001EFC  6E2A               	movwf	?___flmul^0,c
  8448  001EFE  0E00               	movlw	0
  8449  001F00  6E2B               	movwf	(?___flmul+1)^0,c
  8450  001F02  0E00               	movlw	0
  8451  001F04  6E2C               	movwf	(?___flmul+2)^0,c
  8452  001F06  0E00               	movlw	0
  8453  001F08  6E2D               	movwf	(?___flmul+3)^0,c
  8454  001F0A  EF1F  F011         	goto	l1376
  8455  001F0E                     l6158:
  8456  001F0E  5030               	movf	(___flmul@a+2)^0,w,c
  8457  001F10  022A               	mulwf	___flmul@b^0,c
  8458  001F12  CFF3 F041          	movff	prodl,___flmul@temp
  8459  001F16  CFF4 F042          	movff	prodh,___flmul@temp+1
  8460  001F1A  5041               	movf	___flmul@temp^0,w,c
  8461  001F1C  6E38               	movwf	___flmul@grs^0,c
  8462  001F1E  6A39               	clrf	(___flmul@grs+1)^0,c
  8463  001F20  6A3A               	clrf	(___flmul@grs+2)^0,c
  8464  001F22  6A3B               	clrf	(___flmul@grs+3)^0,c
  8465  001F24  5042               	movf	(___flmul@temp+1)^0,w,c
  8466  001F26  6E3D               	movwf	___flmul@prod^0,c
  8467  001F28  6A3E               	clrf	(___flmul@prod+1)^0,c
  8468  001F2A  6A3F               	clrf	(___flmul@prod+2)^0,c
  8469  001F2C  6A40               	clrf	(___flmul@prod+3)^0,c
  8470  001F2E  502F               	movf	(___flmul@a+1)^0,w,c
  8471  001F30  022B               	mulwf	(___flmul@b+1)^0,c
  8472  001F32  CFF3 F041          	movff	prodl,___flmul@temp
  8473  001F36  CFF4 F042          	movff	prodh,___flmul@temp+1
  8474  001F3A  5041               	movf	___flmul@temp^0,w,c
  8475  001F3C  2638               	addwf	___flmul@grs^0,f,c
  8476  001F3E  0E00               	movlw	0
  8477  001F40  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8478  001F42  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8479  001F44  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8480  001F46  5042               	movf	(___flmul@temp+1)^0,w,c
  8481  001F48  263D               	addwf	___flmul@prod^0,f,c
  8482  001F4A  0E00               	movlw	0
  8483  001F4C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8484  001F4E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8485  001F50  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8486  001F52  502E               	movf	___flmul@a^0,w,c
  8487  001F54  022C               	mulwf	(___flmul@b+2)^0,c
  8488  001F56  CFF3 F041          	movff	prodl,___flmul@temp
  8489  001F5A  CFF4 F042          	movff	prodh,___flmul@temp+1
  8490  001F5E  5041               	movf	___flmul@temp^0,w,c
  8491  001F60  2638               	addwf	___flmul@grs^0,f,c
  8492  001F62  0E00               	movlw	0
  8493  001F64  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8494  001F66  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8495  001F68  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8496  001F6A  5042               	movf	(___flmul@temp+1)^0,w,c
  8497  001F6C  263D               	addwf	___flmul@prod^0,f,c
  8498  001F6E  0E00               	movlw	0
  8499  001F70  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8500  001F72  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8501  001F74  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8502  001F76  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8503  001F7A  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8504  001F7E  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8505  001F82  6A38               	clrf	___flmul@grs^0,c
  8506  001F84  502E               	movf	___flmul@a^0,w,c
  8507  001F86  022B               	mulwf	(___flmul@b+1)^0,c
  8508  001F88  CFF3 F041          	movff	prodl,___flmul@temp
  8509  001F8C  CFF4 F042          	movff	prodh,___flmul@temp+1
  8510  001F90  5041               	movf	___flmul@temp^0,w,c
  8511  001F92  2638               	addwf	___flmul@grs^0,f,c
  8512  001F94  5042               	movf	(___flmul@temp+1)^0,w,c
  8513  001F96  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8514  001F98  0E00               	movlw	0
  8515  001F9A  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8516  001F9C  0E00               	movlw	0
  8517  001F9E  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8518  001FA0  502F               	movf	(___flmul@a+1)^0,w,c
  8519  001FA2  022A               	mulwf	___flmul@b^0,c
  8520  001FA4  CFF3 F041          	movff	prodl,___flmul@temp
  8521  001FA8  CFF4 F042          	movff	prodh,___flmul@temp+1
  8522  001FAC  5041               	movf	___flmul@temp^0,w,c
  8523  001FAE  2638               	addwf	___flmul@grs^0,f,c
  8524  001FB0  5042               	movf	(___flmul@temp+1)^0,w,c
  8525  001FB2  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8526  001FB4  0E00               	movlw	0
  8527  001FB6  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8528  001FB8  0E00               	movlw	0
  8529  001FBA  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8530  001FBC  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8531  001FC0  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8532  001FC4  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8533  001FC8  6A38               	clrf	___flmul@grs^0,c
  8534  001FCA  502E               	movf	___flmul@a^0,w,c
  8535  001FCC  022A               	mulwf	___flmul@b^0,c
  8536  001FCE  CFF3 F041          	movff	prodl,___flmul@temp
  8537  001FD2  CFF4 F042          	movff	prodh,___flmul@temp+1
  8538  001FD6  5041               	movf	___flmul@temp^0,w,c
  8539  001FD8  2638               	addwf	___flmul@grs^0,f,c
  8540  001FDA  5042               	movf	(___flmul@temp+1)^0,w,c
  8541  001FDC  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8542  001FDE  0E00               	movlw	0
  8543  001FE0  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8544  001FE2  0E00               	movlw	0
  8545  001FE4  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8546  001FE6  5030               	movf	(___flmul@a+2)^0,w,c
  8547  001FE8  022B               	mulwf	(___flmul@b+1)^0,c
  8548  001FEA  CFF3 F041          	movff	prodl,___flmul@temp
  8549  001FEE  CFF4 F042          	movff	prodh,___flmul@temp+1
  8550  001FF2  5041               	movf	___flmul@temp^0,w,c
  8551  001FF4  263D               	addwf	___flmul@prod^0,f,c
  8552  001FF6  5042               	movf	(___flmul@temp+1)^0,w,c
  8553  001FF8  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8554  001FFA  0E00               	movlw	0
  8555  001FFC  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8556  001FFE  0E00               	movlw	0
  8557  002000  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8558  002002  502F               	movf	(___flmul@a+1)^0,w,c
  8559  002004  022C               	mulwf	(___flmul@b+2)^0,c
  8560  002006  CFF3 F041          	movff	prodl,___flmul@temp
  8561  00200A  CFF4 F042          	movff	prodh,___flmul@temp+1
  8562  00200E  5041               	movf	___flmul@temp^0,w,c
  8563  002010  263D               	addwf	___flmul@prod^0,f,c
  8564  002012  5042               	movf	(___flmul@temp+1)^0,w,c
  8565  002014  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8566  002016  0E00               	movlw	0
  8567  002018  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8568  00201A  0E00               	movlw	0
  8569  00201C  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8570  00201E  5030               	movf	(___flmul@a+2)^0,w,c
  8571  002020  022C               	mulwf	(___flmul@b+2)^0,c
  8572  002022  CFF3 F041          	movff	prodl,___flmul@temp
  8573  002026  CFF4 F042          	movff	prodh,___flmul@temp+1
  8574  00202A  5041               	movf	___flmul@temp^0,w,c
  8575  00202C  6E32               	movwf	??___flmul^0,c
  8576  00202E  5042               	movf	(___flmul@temp+1)^0,w,c
  8577  002030  6E33               	movwf	(??___flmul+1)^0,c
  8578  002032  6A34               	clrf	(??___flmul+2)^0,c
  8579  002034  6A35               	clrf	(??___flmul+3)^0,c
  8580  002036  C034  F035         	movff	??___flmul+2,??___flmul+3
  8581  00203A  C033  F034         	movff	??___flmul+1,??___flmul+2
  8582  00203E  C032  F033         	movff	??___flmul,??___flmul+1
  8583  002042  6A32               	clrf	??___flmul^0,c
  8584  002044  5032               	movf	??___flmul^0,w,c
  8585  002046  263D               	addwf	___flmul@prod^0,f,c
  8586  002048  5033               	movf	(??___flmul+1)^0,w,c
  8587  00204A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8588  00204C  5034               	movf	(??___flmul+2)^0,w,c
  8589  00204E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8590  002050  5035               	movf	(??___flmul+3)^0,w,c
  8591  002052  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8592  002054  C038  F032         	movff	___flmul@grs,??___flmul
  8593  002058  C039  F033         	movff	___flmul@grs+1,??___flmul+1
  8594  00205C  C03A  F034         	movff	___flmul@grs+2,??___flmul+2
  8595  002060  C03B  F035         	movff	___flmul@grs+3,??___flmul+3
  8596  002064  0E19               	movlw	25
  8597  002066  EF3A  F010         	goto	u6770
  8598  00206A                     u6775:
  8599  00206A  90D8               	bcf	status,0,c
  8600  00206C  3235               	rrcf	(??___flmul+3)^0,f,c
  8601  00206E  3234               	rrcf	(??___flmul+2)^0,f,c
  8602  002070  3233               	rrcf	(??___flmul+1)^0,f,c
  8603  002072  3232               	rrcf	??___flmul^0,f,c
  8604  002074                     u6770:
  8605  002074  2EE8               	decfsz	wreg,f,c
  8606  002076  EF35  F010         	goto	u6775
  8607  00207A  5032               	movf	??___flmul^0,w,c
  8608  00207C  263D               	addwf	___flmul@prod^0,f,c
  8609  00207E  5033               	movf	(??___flmul+1)^0,w,c
  8610  002080  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8611  002082  5034               	movf	(??___flmul+2)^0,w,c
  8612  002084  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8613  002086  5035               	movf	(??___flmul+3)^0,w,c
  8614  002088  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8615  00208A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8616  00208E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8617  002092  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8618  002096  6A38               	clrf	___flmul@grs^0,c
  8619  002098  5037               	movf	___flmul@aexp^0,w,c
  8620  00209A  C03C  F032         	movff	___flmul@bexp,??___flmul
  8621  00209E  6A33               	clrf	(??___flmul+1)^0,c
  8622  0020A0  2632               	addwf	??___flmul^0,f,c
  8623  0020A2  0E00               	movlw	0
  8624  0020A4  2233               	addwfc	(??___flmul+1)^0,f,c
  8625  0020A6  0E82               	movlw	130
  8626  0020A8  2432               	addwf	??___flmul^0,w,c
  8627  0020AA  6E41               	movwf	___flmul@temp^0,c
  8628  0020AC  0EFF               	movlw	255
  8629  0020AE  2033               	addwfc	(??___flmul+1)^0,w,c
  8630  0020B0  6E42               	movwf	(___flmul@temp+1)^0,c
  8631  0020B2  EF70  F010         	goto	l6206
  8632  0020B6                     l6200:
  8633  0020B6  90D8               	bcf	status,0,c
  8634  0020B8  363D               	rlcf	___flmul@prod^0,f,c
  8635  0020BA  363E               	rlcf	(___flmul@prod+1)^0,f,c
  8636  0020BC  363F               	rlcf	(___flmul@prod+2)^0,f,c
  8637  0020BE  3640               	rlcf	(___flmul@prod+3)^0,f,c
  8638  0020C0  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8639  0020C2  EF65  F010         	goto	u6781
  8640  0020C6  EF67  F010         	goto	u6780
  8641  0020CA                     u6781:
  8642  0020CA  EF68  F010         	goto	l1379
  8643  0020CE                     u6780:
  8644  0020CE  803D               	bsf	___flmul@prod^0,0,c
  8645  0020D0                     l1379:
  8646  0020D0  90D8               	bcf	status,0,c
  8647  0020D2  3638               	rlcf	___flmul@grs^0,f,c
  8648  0020D4  3639               	rlcf	(___flmul@grs+1)^0,f,c
  8649  0020D6  363A               	rlcf	(___flmul@grs+2)^0,f,c
  8650  0020D8  363B               	rlcf	(___flmul@grs+3)^0,f,c
  8651  0020DA  0641               	decf	___flmul@temp^0,f,c
  8652  0020DC  A0D8               	btfss	status,0,c
  8653  0020DE  0642               	decf	(___flmul@temp+1)^0,f,c
  8654  0020E0                     l6206:
  8655  0020E0  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  8656  0020E2  EF75  F010         	goto	u6791
  8657  0020E6  EF77  F010         	goto	u6790
  8658  0020EA                     u6791:
  8659  0020EA  EF5B  F010         	goto	l6200
  8660  0020EE                     u6790:
  8661  0020EE  0E00               	movlw	0
  8662  0020F0  6E37               	movwf	___flmul@aexp^0,c
  8663  0020F2  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8664  0020F4  EF7E  F010         	goto	u6801
  8665  0020F8  EF80  F010         	goto	u6800
  8666  0020FC                     u6801:
  8667  0020FC  EFA4  F010         	goto	l1381
  8668  002100                     u6800:
  8669  002100  0EFF               	movlw	255
  8670  002102  1438               	andwf	___flmul@grs^0,w,c
  8671  002104  6E32               	movwf	??___flmul^0,c
  8672  002106  0EFF               	movlw	255
  8673  002108  1439               	andwf	(___flmul@grs+1)^0,w,c
  8674  00210A  6E33               	movwf	(??___flmul+1)^0,c
  8675  00210C  0EFF               	movlw	255
  8676  00210E  143A               	andwf	(___flmul@grs+2)^0,w,c
  8677  002110  6E34               	movwf	(??___flmul+2)^0,c
  8678  002112  0E7F               	movlw	127
  8679  002114  143B               	andwf	(___flmul@grs+3)^0,w,c
  8680  002116  6E35               	movwf	(??___flmul+3)^0,c
  8681  002118  5032               	movf	??___flmul^0,w,c
  8682  00211A  1033               	iorwf	(??___flmul+1)^0,w,c
  8683  00211C  1034               	iorwf	(??___flmul+2)^0,w,c
  8684  00211E  1035               	iorwf	(??___flmul+3)^0,w,c
  8685  002120  B4D8               	btfsc	status,2,c
  8686  002122  EF95  F010         	goto	u6811
  8687  002126  EF97  F010         	goto	u6810
  8688  00212A                     u6811:
  8689  00212A  EF9B  F010         	goto	l1382
  8690  00212E                     u6810:
  8691  00212E                     l6214:
  8692  00212E  0E01               	movlw	1
  8693  002130  6E37               	movwf	___flmul@aexp^0,c
  8694  002132  EFA4  F010         	goto	l1381
  8695  002136                     l1382:
  8696  002136  A03D               	btfss	___flmul@prod^0,0,c
  8697  002138  EFA0  F010         	goto	u6821
  8698  00213C  EFA2  F010         	goto	u6820
  8699  002140                     u6821:
  8700  002140  EFA4  F010         	goto	l1381
  8701  002144                     u6820:
  8702  002144  EF97  F010         	goto	l6214
  8703  002148                     l1381:
  8704  002148  5037               	movf	___flmul@aexp^0,w,c
  8705  00214A  B4D8               	btfsc	status,2,c
  8706  00214C  EFAA  F010         	goto	u6831
  8707  002150  EFAC  F010         	goto	u6830
  8708  002154                     u6831:
  8709  002154  EFD0  F010         	goto	l6226
  8710  002158                     u6830:
  8711  002158  0E01               	movlw	1
  8712  00215A  263D               	addwf	___flmul@prod^0,f,c
  8713  00215C  0E00               	movlw	0
  8714  00215E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8715  002160  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8716  002162  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8717  002164  A040               	btfss	(___flmul@prod+3)^0,0,c
  8718  002166  EFB7  F010         	goto	u6841
  8719  00216A  EFB9  F010         	goto	u6840
  8720  00216E                     u6841:
  8721  00216E  EFD0  F010         	goto	l6226
  8722  002172                     u6840:
  8723  002172  C03D  F032         	movff	___flmul@prod,??___flmul
  8724  002176  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  8725  00217A  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  8726  00217E  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  8727  002182  3435               	rlcf	(??___flmul+3)^0,w,c
  8728  002184  3235               	rrcf	(??___flmul+3)^0,f,c
  8729  002186  3234               	rrcf	(??___flmul+2)^0,f,c
  8730  002188  3233               	rrcf	(??___flmul+1)^0,f,c
  8731  00218A  3232               	rrcf	??___flmul^0,f,c
  8732  00218C  C032  F03D         	movff	??___flmul,___flmul@prod
  8733  002190  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  8734  002194  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  8735  002198  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  8736  00219C  4A41               	infsnz	___flmul@temp^0,f,c
  8737  00219E  2A42               	incf	(___flmul@temp+1)^0,f,c
  8738  0021A0                     l6226:
  8739  0021A0  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  8740  0021A2  EFDB  F010         	goto	u6851
  8741  0021A6  5042               	movf	(___flmul@temp+1)^0,w,c
  8742  0021A8  E108               	bnz	u6850
  8743  0021AA  2841               	incf	___flmul@temp^0,w,c
  8744  0021AC  A0D8               	btfss	status,0,c
  8745  0021AE  EFDB  F010         	goto	u6851
  8746  0021B2  EFDD  F010         	goto	u6850
  8747  0021B6                     u6851:
  8748  0021B6  EFE7  F010         	goto	l6230
  8749  0021BA                     u6850:
  8750  0021BA  0E00               	movlw	0
  8751  0021BC  6E3D               	movwf	___flmul@prod^0,c
  8752  0021BE  0E00               	movlw	0
  8753  0021C0  6E3E               	movwf	(___flmul@prod+1)^0,c
  8754  0021C2  0E80               	movlw	128
  8755  0021C4  6E3F               	movwf	(___flmul@prod+2)^0,c
  8756  0021C6  0E7F               	movlw	127
  8757  0021C8  6E40               	movwf	(___flmul@prod+3)^0,c
  8758  0021CA  EF15  F011         	goto	l6242
  8759  0021CE                     l6230:
  8760  0021CE  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  8761  0021D0  EFF4  F010         	goto	u6860
  8762  0021D4  5042               	movf	(___flmul@temp+1)^0,w,c
  8763  0021D6  E106               	bnz	u6861
  8764  0021D8  0441               	decf	___flmul@temp^0,w,c
  8765  0021DA  B0D8               	btfsc	status,0,c
  8766  0021DC  EFF2  F010         	goto	u6861
  8767  0021E0  EFF4  F010         	goto	u6860
  8768  0021E4                     u6861:
  8769  0021E4  EF00  F011         	goto	l1389
  8770  0021E8                     u6860:
  8771  0021E8  0E00               	movlw	0
  8772  0021EA  6E3D               	movwf	___flmul@prod^0,c
  8773  0021EC  0E00               	movlw	0
  8774  0021EE  6E3E               	movwf	(___flmul@prod+1)^0,c
  8775  0021F0  0E00               	movlw	0
  8776  0021F2  6E3F               	movwf	(___flmul@prod+2)^0,c
  8777  0021F4  0E00               	movlw	0
  8778  0021F6  6E40               	movwf	(___flmul@prod+3)^0,c
  8779  0021F8  0E00               	movlw	0
  8780  0021FA  6E36               	movwf	___flmul@sign^0,c
  8781  0021FC  EF15  F011         	goto	l6242
  8782  002200                     l1389:
  8783  002200  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  8784  002204  0EFF               	movlw	255
  8785  002206  163D               	andwf	___flmul@prod^0,f,c
  8786  002208  0EFF               	movlw	255
  8787  00220A  163E               	andwf	(___flmul@prod+1)^0,f,c
  8788  00220C  0E7F               	movlw	127
  8789  00220E  163F               	andwf	(___flmul@prod+2)^0,f,c
  8790  002210  0E00               	movlw	0
  8791  002212  1640               	andwf	(___flmul@prod+3)^0,f,c
  8792  002214  A03C               	btfss	___flmul@bexp^0,0,c
  8793  002216  EF0F  F011         	goto	u6871
  8794  00221A  EF11  F011         	goto	u6870
  8795  00221E                     u6871:
  8796  00221E  EF12  F011         	goto	l6240
  8797  002222                     u6870:
  8798  002222  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  8799  002224                     l6240:
  8800  002224  90D8               	bcf	status,0,c
  8801  002226  303C               	rrcf	___flmul@bexp^0,w,c
  8802  002228  6E40               	movwf	(___flmul@prod+3)^0,c
  8803  00222A                     l6242:
  8804  00222A  5036               	movf	___flmul@sign^0,w,c
  8805  00222C  1240               	iorwf	(___flmul@prod+3)^0,f,c
  8806  00222E  C03D  F02A         	movff	___flmul@prod,?___flmul
  8807  002232  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  8808  002236  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  8809  00223A  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  8810  00223E                     l1376:
  8811  00223E  0012               	return		;funcret
  8812  002240                     __end_of___flmul:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function ___flge *****************
  8816 ;; Defined at:
  8817 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  ff1             4    2[COMRAM] unsigned char 
  8820 ;;  ff2             4    6[COMRAM] unsigned char 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;		None
  8823 ;; Return value:  Size  Location     Type
  8824 ;;		None               void
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;Total ram usage:       12 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 2
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_roundf
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text40
  8847  00474A                     __ptext40:
  8848                           	callstack 0
  8849  00474A                     ___flge:
  8850                           	callstack 24
  8851  00474A  0E00               	movlw	0
  8852  00474C  1403               	andwf	___flge@ff1^0,w,c
  8853  00474E  6E0B               	movwf	??___flge^0,c
  8854  004750  0E00               	movlw	0
  8855  004752  1404               	andwf	(___flge@ff1+1)^0,w,c
  8856  004754  6E0C               	movwf	(??___flge+1)^0,c
  8857  004756  0E80               	movlw	128
  8858  004758  1405               	andwf	(___flge@ff1+2)^0,w,c
  8859  00475A  6E0D               	movwf	(??___flge+2)^0,c
  8860  00475C  0E7F               	movlw	127
  8861  00475E  1406               	andwf	(___flge@ff1+3)^0,w,c
  8862  004760  6E0E               	movwf	(??___flge+3)^0,c
  8863  004762  500B               	movf	??___flge^0,w,c
  8864  004764  100C               	iorwf	(??___flge+1)^0,w,c
  8865  004766  100D               	iorwf	(??___flge+2)^0,w,c
  8866  004768  100E               	iorwf	(??___flge+3)^0,w,c
  8867  00476A  A4D8               	btfss	status,2,c
  8868  00476C  EFBA  F023         	goto	u6881
  8869  004770  EFBC  F023         	goto	u6880
  8870  004774                     u6881:
  8871  004774  EFC4  F023         	goto	l6258
  8872  004778                     u6880:
  8873  004778  0E00               	movlw	0
  8874  00477A  6E03               	movwf	___flge@ff1^0,c
  8875  00477C  0E00               	movlw	0
  8876  00477E  6E04               	movwf	(___flge@ff1+1)^0,c
  8877  004780  0E00               	movlw	0
  8878  004782  6E05               	movwf	(___flge@ff1+2)^0,c
  8879  004784  0E00               	movlw	0
  8880  004786  6E06               	movwf	(___flge@ff1+3)^0,c
  8881  004788                     l6258:
  8882  004788  0E00               	movlw	0
  8883  00478A  1407               	andwf	___flge@ff2^0,w,c
  8884  00478C  6E0B               	movwf	??___flge^0,c
  8885  00478E  0E00               	movlw	0
  8886  004790  1408               	andwf	(___flge@ff2+1)^0,w,c
  8887  004792  6E0C               	movwf	(??___flge+1)^0,c
  8888  004794  0E80               	movlw	128
  8889  004796  1409               	andwf	(___flge@ff2+2)^0,w,c
  8890  004798  6E0D               	movwf	(??___flge+2)^0,c
  8891  00479A  0E7F               	movlw	127
  8892  00479C  140A               	andwf	(___flge@ff2+3)^0,w,c
  8893  00479E  6E0E               	movwf	(??___flge+3)^0,c
  8894  0047A0  500B               	movf	??___flge^0,w,c
  8895  0047A2  100C               	iorwf	(??___flge+1)^0,w,c
  8896  0047A4  100D               	iorwf	(??___flge+2)^0,w,c
  8897  0047A6  100E               	iorwf	(??___flge+3)^0,w,c
  8898  0047A8  A4D8               	btfss	status,2,c
  8899  0047AA  EFD9  F023         	goto	u6891
  8900  0047AE  EFDB  F023         	goto	u6890
  8901  0047B2                     u6891:
  8902  0047B2  EFE3  F023         	goto	l6262
  8903  0047B6                     u6890:
  8904  0047B6  0E00               	movlw	0
  8905  0047B8  6E07               	movwf	___flge@ff2^0,c
  8906  0047BA  0E00               	movlw	0
  8907  0047BC  6E08               	movwf	(___flge@ff2+1)^0,c
  8908  0047BE  0E00               	movlw	0
  8909  0047C0  6E09               	movwf	(___flge@ff2+2)^0,c
  8910  0047C2  0E00               	movlw	0
  8911  0047C4  6E0A               	movwf	(___flge@ff2+3)^0,c
  8912  0047C6                     l6262:
  8913  0047C6  AE06               	btfss	(___flge@ff1+3)^0,7,c
  8914  0047C8  EFE8  F023         	goto	u6901
  8915  0047CC  EFEA  F023         	goto	u6900
  8916  0047D0                     u6901:
  8917  0047D0  EFF3  F023         	goto	l6266
  8918  0047D4                     u6900:
  8919  0047D4  6C03               	negf	___flge@ff1^0,c
  8920  0047D6  1E04               	comf	(___flge@ff1+1)^0,f,c
  8921  0047D8  B0D8               	btfsc	status,0,c
  8922  0047DA  2A04               	incf	(___flge@ff1+1)^0,f,c
  8923  0047DC  1E05               	comf	(___flge@ff1+2)^0,f,c
  8924  0047DE  B0D8               	btfsc	status,0,c
  8925  0047E0  2A05               	incf	(___flge@ff1+2)^0,f,c
  8926  0047E2  0E80               	movlw	128
  8927  0047E4  5606               	subfwb	(___flge@ff1+3)^0,f,c
  8928  0047E6                     l6266:
  8929  0047E6  AE0A               	btfss	(___flge@ff2+3)^0,7,c
  8930  0047E8  EFF8  F023         	goto	u6911
  8931  0047EC  EFFA  F023         	goto	u6910
  8932  0047F0                     u6911:
  8933  0047F0  EF03  F024         	goto	l1023
  8934  0047F4                     u6910:
  8935  0047F4  6C07               	negf	___flge@ff2^0,c
  8936  0047F6  1E08               	comf	(___flge@ff2+1)^0,f,c
  8937  0047F8  B0D8               	btfsc	status,0,c
  8938  0047FA  2A08               	incf	(___flge@ff2+1)^0,f,c
  8939  0047FC  1E09               	comf	(___flge@ff2+2)^0,f,c
  8940  0047FE  B0D8               	btfsc	status,0,c
  8941  004800  2A09               	incf	(___flge@ff2+2)^0,f,c
  8942  004802  0E80               	movlw	128
  8943  004804  560A               	subfwb	(___flge@ff2+3)^0,f,c
  8944  004806                     l1023:
  8945  004806  0E00               	movlw	0
  8946  004808  1A03               	xorwf	___flge@ff1^0,f,c
  8947  00480A  0E00               	movlw	0
  8948  00480C  1A04               	xorwf	(___flge@ff1+1)^0,f,c
  8949  00480E  0E00               	movlw	0
  8950  004810  1A05               	xorwf	(___flge@ff1+2)^0,f,c
  8951  004812  0E80               	movlw	128
  8952  004814  1A06               	xorwf	(___flge@ff1+3)^0,f,c
  8953  004816  0E00               	movlw	0
  8954  004818  1A07               	xorwf	___flge@ff2^0,f,c
  8955  00481A  0E00               	movlw	0
  8956  00481C  1A08               	xorwf	(___flge@ff2+1)^0,f,c
  8957  00481E  0E00               	movlw	0
  8958  004820  1A09               	xorwf	(___flge@ff2+2)^0,f,c
  8959  004822  0E80               	movlw	128
  8960  004824  1A0A               	xorwf	(___flge@ff2+3)^0,f,c
  8961  004826  5007               	movf	___flge@ff2^0,w,c
  8962  004828  5C03               	subwf	___flge@ff1^0,w,c
  8963  00482A  5008               	movf	(___flge@ff2+1)^0,w,c
  8964  00482C  5804               	subwfb	(___flge@ff1+1)^0,w,c
  8965  00482E  5009               	movf	(___flge@ff2+2)^0,w,c
  8966  004830  5805               	subwfb	(___flge@ff1+2)^0,w,c
  8967  004832  500A               	movf	(___flge@ff2+3)^0,w,c
  8968  004834  5806               	subwfb	(___flge@ff1+3)^0,w,c
  8969  004836  B0D8               	btfsc	status,0,c
  8970  004838  EF20  F024         	goto	u6921
  8971  00483C  EF22  F024         	goto	u6920
  8972  004840                     u6921:
  8973  004840  EF25  F024         	goto	l6272
  8974  004844                     u6920:
  8975  004844  90D8               	bcf	status,0,c
  8976  004846  EF26  F024         	goto	l1028
  8977  00484A                     l6272:
  8978  00484A  80D8               	bsf	status,0,c
  8979  00484C                     l1028:
  8980  00484C  0012               	return		;funcret
  8981  00484E                     __end_of___flge:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function ___fltol *****************
  8985 ;; Defined at:
  8986 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  f1              4   18[BANK0 ] unsigned char 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  exp1            1   79[COMRAM] unsigned char 
  8991 ;;  sign1           1   78[COMRAM] unsigned char 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  4   18[BANK0 ] long 
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9004 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9005 ;;Total ram usage:       10 bytes
  9006 ;; Hardware stack levels used: 1
  9007 ;; Hardware stack levels required when called: 2
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_lroundf
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text41
  9016  004642                     __ptext41:
  9017                           	callstack 0
  9018  004642                     ___fltol:
  9019                           	callstack 25
  9020  004642  0100               	movlb	0	; () banked
  9021  004644  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9022  004646  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9023  004648  6E50               	movwf	___fltol@exp1^0,c
  9024  00464A  5050               	movf	___fltol@exp1^0,w,c
  9025  00464C  A4D8               	btfss	status,2,c
  9026  00464E  EF2B  F023         	goto	u6981
  9027  004652  EF2D  F023         	goto	u6980
  9028  004656                     u6981:
  9029  004656  EF37  F023         	goto	l6360
  9030  00465A                     u6980:
  9031  00465A                     l6356:
  9032                           
  9033                           ; BSR set to: 0
  9034  00465A  0E00               	movlw	0
  9035  00465C  6F72               	movwf	?___fltol& (0+255),b
  9036  00465E  0E00               	movlw	0
  9037  004660  6F73               	movwf	(?___fltol+1)& (0+255),b
  9038  004662  0E00               	movlw	0
  9039  004664  6F74               	movwf	(?___fltol+2)& (0+255),b
  9040  004666  0E00               	movlw	0
  9041  004668  6F75               	movwf	(?___fltol+3)& (0+255),b
  9042  00466A  EFA4  F023         	goto	l1055
  9043  00466E                     l6360:
  9044                           
  9045                           ; BSR set to: 0
  9046  00466E  C072  F04B         	movff	___fltol@f1,??___fltol
  9047  004672  C073  F04C         	movff	___fltol@f1+1,??___fltol+1
  9048  004676  C074  F04D         	movff	___fltol@f1+2,??___fltol+2
  9049  00467A  C075  F04E         	movff	___fltol@f1+3,??___fltol+3
  9050  00467E  0E20               	movlw	32
  9051  004680  EF47  F023         	goto	u6990
  9052  004684                     u6995:
  9053  004684  90D8               	bcf	status,0,c
  9054  004686  324E               	rrcf	(??___fltol+3)^0,f,c
  9055  004688  324D               	rrcf	(??___fltol+2)^0,f,c
  9056  00468A  324C               	rrcf	(??___fltol+1)^0,f,c
  9057  00468C  324B               	rrcf	??___fltol^0,f,c
  9058  00468E                     u6990:
  9059  00468E  2EE8               	decfsz	wreg,f,c
  9060  004690  EF42  F023         	goto	u6995
  9061  004694  504B               	movf	??___fltol^0,w,c
  9062  004696  6E4F               	movwf	___fltol@sign1^0,c
  9063  004698                     
  9064                           ; BSR set to: 0
  9065  004698  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
  9066  00469A                     
  9067                           ; BSR set to: 0
  9068  00469A  0EFF               	movlw	255
  9069  00469C  1772               	andwf	___fltol@f1& (0+255),f,b
  9070  00469E  0EFF               	movlw	255
  9071  0046A0  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
  9072  0046A2  0EFF               	movlw	255
  9073  0046A4  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
  9074  0046A6  0E00               	movlw	0
  9075  0046A8  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
  9076  0046AA                     
  9077                           ; BSR set to: 0
  9078  0046AA  0E96               	movlw	150
  9079  0046AC  5E50               	subwf	___fltol@exp1^0,f,c
  9080  0046AE                     
  9081                           ; BSR set to: 0
  9082  0046AE  BE50               	btfsc	___fltol@exp1^0,7,c
  9083  0046B0  EF5E  F023         	goto	u7000
  9084  0046B4  EF5C  F023         	goto	u7001
  9085  0046B8                     u7001:
  9086  0046B8  EF74  F023         	goto	l6380
  9087  0046BC                     u7000:
  9088  0046BC                     
  9089                           ; BSR set to: 0
  9090  0046BC  5050               	movf	___fltol@exp1^0,w,c
  9091  0046BE  0A80               	xorlw	128
  9092  0046C0  0F97               	addlw	151
  9093  0046C2  B0D8               	btfsc	status,0,c
  9094  0046C4  EF66  F023         	goto	u7011
  9095  0046C8  EF68  F023         	goto	u7010
  9096  0046CC                     u7011:
  9097  0046CC  EF6A  F023         	goto	l6376
  9098  0046D0                     u7010:
  9099  0046D0  EF2D  F023         	goto	l6356
  9100  0046D4                     l6376:
  9101                           
  9102                           ; BSR set to: 0
  9103  0046D4  90D8               	bcf	status,0,c
  9104  0046D6  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9105  0046D8  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9106  0046DA  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9107  0046DC  3372               	rrcf	___fltol@f1& (0+255),f,b
  9108  0046DE                     
  9109                           ; BSR set to: 0
  9110  0046DE  3E50               	incfsz	___fltol@exp1^0,f,c
  9111  0046E0  EF6A  F023         	goto	l6376
  9112  0046E4  EF8C  F023         	goto	l6390
  9113  0046E8                     l6380:
  9114                           
  9115                           ; BSR set to: 0
  9116  0046E8  0E1F               	movlw	31
  9117  0046EA  6450               	cpfsgt	___fltol@exp1^0,c
  9118  0046EC  EF7A  F023         	goto	u7021
  9119  0046F0  EF7C  F023         	goto	u7020
  9120  0046F4                     u7021:
  9121  0046F4  EF84  F023         	goto	l6388
  9122  0046F8                     u7020:
  9123  0046F8  EF2D  F023         	goto	l6356
  9124  0046FC                     l6386:
  9125                           
  9126                           ; BSR set to: 0
  9127  0046FC  90D8               	bcf	status,0,c
  9128  0046FE  3772               	rlcf	___fltol@f1& (0+255),f,b
  9129  004700  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9130  004702  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9131  004704  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9132  004706  0650               	decf	___fltol@exp1^0,f,c
  9133  004708                     l6388:
  9134                           
  9135                           ; BSR set to: 0
  9136  004708  5050               	movf	___fltol@exp1^0,w,c
  9137  00470A  A4D8               	btfss	status,2,c
  9138  00470C  EF8A  F023         	goto	u7031
  9139  004710  EF8C  F023         	goto	u7030
  9140  004714                     u7031:
  9141  004714  EF7E  F023         	goto	l6386
  9142  004718                     u7030:
  9143  004718                     l6390:
  9144                           
  9145                           ; BSR set to: 0
  9146  004718  504F               	movf	___fltol@sign1^0,w,c
  9147  00471A  B4D8               	btfsc	status,2,c
  9148  00471C  EF92  F023         	goto	u7041
  9149  004720  EF94  F023         	goto	u7040
  9150  004724                     u7041:
  9151  004724  EF9C  F023         	goto	l6394
  9152  004728                     u7040:
  9153  004728                     
  9154                           ; BSR set to: 0
  9155  004728  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
  9156  00472A  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
  9157  00472C  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
  9158  00472E  6D72               	negf	___fltol@f1& (0+255),b
  9159  004730  0E00               	movlw	0
  9160  004732  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9161  004734  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9162  004736  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9163  004738                     l6394:
  9164                           
  9165                           ; BSR set to: 0
  9166  004738  C072  F072         	movff	___fltol@f1,?___fltol
  9167  00473C  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  9168  004740  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  9169  004744  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  9170  004748                     l1055:
  9171                           
  9172                           ; BSR set to: 0
  9173  004748  0012               	return		;funcret
  9174  00474A                     __end_of___fltol:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _color_read_Clear *****************
  9178 ;; Defined at:
  9179 ;;		line 173 in file "color.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  tmp             2   11[COMRAM] unsigned int 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  2    6[COMRAM] unsigned int 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;Total ram usage:        7 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 4
  9200 ;; This function calls:
  9201 ;;		_I2C_2_Master_Read
  9202 ;;		_I2C_2_Master_RepStart
  9203 ;;		_I2C_2_Master_Start
  9204 ;;		_I2C_2_Master_Stop
  9205 ;;		_I2C_2_Master_Write
  9206 ;; This function is called by:
  9207 ;;		_read_color
  9208 ;;		_calibrate_white
  9209 ;;		_amb_light_measure
  9210 ;;		_distance_measure
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text42
  9215  00522E                     __ptext42:
  9216                           	callstack 0
  9217  00522E                     _color_read_Clear:
  9218                           	callstack 23
  9219  00522E                     
  9220                           ;color.c: 175:  unsigned int tmp;;color.c: 176:  I2C_2_Master_Start();
  9221  00522E  ECD9  F02B         	call	_I2C_2_Master_Start	;wreg free
  9222                           
  9223                           ;color.c: 177:  I2C_2_Master_Write(0x52 | 0x00);
  9224  005232  0E52               	movlw	82
  9225  005234  ECC3  F02B         	call	_I2C_2_Master_Write
  9226                           
  9227                           ;color.c: 178:  I2C_2_Master_Write(0xA0 | 0x14);
  9228  005238  0EB4               	movlw	180
  9229  00523A  ECC3  F02B         	call	_I2C_2_Master_Write
  9230                           
  9231                           ;color.c: 179:  I2C_2_Master_RepStart();
  9232  00523E  ECCF  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  9233                           
  9234                           ;color.c: 180:  I2C_2_Master_Write(0x52 | 0x01);
  9235  005242  0E53               	movlw	83
  9236  005244  ECC3  F02B         	call	_I2C_2_Master_Write
  9237                           
  9238                           ;color.c: 181:  tmp=I2C_2_Master_Read(1);
  9239  005248  0E01               	movlw	1
  9240  00524A  EC84  F029         	call	_I2C_2_Master_Read
  9241  00524E  6E09               	movwf	??_color_read_Clear^0,c
  9242  005250  5009               	movf	??_color_read_Clear^0,w,c
  9243  005252  6E0C               	movwf	color_read_Clear@tmp^0,c
  9244  005254  6A0D               	clrf	(color_read_Clear@tmp+1)^0,c
  9245                           
  9246                           ;color.c: 182:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9247  005256  0E00               	movlw	0
  9248  005258  EC84  F029         	call	_I2C_2_Master_Read
  9249  00525C  6E09               	movwf	??_color_read_Clear^0,c
  9250  00525E  5009               	movf	??_color_read_Clear^0,w,c
  9251  005260  6E0B               	movwf	(??_color_read_Clear+2)^0,c
  9252  005262  6A0A               	clrf	(??_color_read_Clear+1)^0,c
  9253  005264  500C               	movf	color_read_Clear@tmp^0,w,c
  9254  005266  100A               	iorwf	(??_color_read_Clear+1)^0,w,c
  9255  005268  6E0C               	movwf	color_read_Clear@tmp^0,c
  9256  00526A  500D               	movf	(color_read_Clear@tmp+1)^0,w,c
  9257  00526C  100B               	iorwf	(??_color_read_Clear+2)^0,w,c
  9258  00526E  6E0D               	movwf	(color_read_Clear@tmp+1)^0,c
  9259                           
  9260                           ;color.c: 183:  I2C_2_Master_Stop();
  9261  005270  ECD4  F02B         	call	_I2C_2_Master_Stop	;wreg free
  9262  005274                     
  9263                           ;color.c: 184:  return tmp;
  9264  005274  C00C  F007         	movff	color_read_Clear@tmp,?_color_read_Clear
  9265  005278  C00D  F008         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9266  00527C  0012               	return		;funcret
  9267  00527E                     __end_of_color_read_Clear:
  9268                           	callstack 0
  9269                           
  9270 ;; *************** function _I2C_2_Master_RepStart *****************
  9271 ;; Defined at:
  9272 ;;		line 33 in file "i2c.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; Hardware stack levels required when called: 3
  9293 ;; This function calls:
  9294 ;;		_I2C_2_Master_Idle
  9295 ;; This function is called by:
  9296 ;;		_color_read_Red
  9297 ;;		_color_read_Blue
  9298 ;;		_color_read_Green
  9299 ;;		_color_read_Clear
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text43
  9304  00579E                     __ptext43:
  9305                           	callstack 0
  9306  00579E                     _I2C_2_Master_RepStart:
  9307                           	callstack 23
  9308  00579E                     
  9309                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9310  00579E  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9311  0057A2                     
  9312                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9313  0057A2  010E               	movlb	14	; () banked
  9314  0057A4  83DA               	bsf	218,1,b	;volatile
  9315  0057A6                     
  9316                           ; BSR set to: 14
  9317  0057A6  0012               	return		;funcret
  9318  0057A8                     __end_of_I2C_2_Master_RepStart:
  9319                           	callstack 0
  9320                           
  9321 ;; *************** function _I2C_2_Master_Read *****************
  9322 ;; Defined at:
  9323 ;;		line 51 in file "i2c.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  ack             1    wreg     unsigned char 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  ack             1    4[COMRAM] unsigned char 
  9328 ;;  tmp             1    5[COMRAM] unsigned char 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      unsigned char 
  9331 ;; Registers used:
  9332 ;;		wreg, status,2, status,0, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;Total ram usage:        3 bytes
  9343 ;; Hardware stack levels used: 1
  9344 ;; Hardware stack levels required when called: 3
  9345 ;; This function calls:
  9346 ;;		_I2C_2_Master_Idle
  9347 ;; This function is called by:
  9348 ;;		_color_read_Red
  9349 ;;		_color_read_Blue
  9350 ;;		_color_read_Green
  9351 ;;		_color_read_Clear
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text44
  9356  005308                     __ptext44:
  9357                           	callstack 0
  9358  005308                     _I2C_2_Master_Read:
  9359                           	callstack 23
  9360                           
  9361                           ; BSR set to: 14
  9362                           ;incstack = 0
  9363                           ;I2C_2_Master_Read@ack stored from wreg
  9364  005308  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  9365  00530A                     
  9366                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9367  00530A  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9368  00530E                     
  9369                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9370  00530E  010E               	movlb	14	; () banked
  9371  005310  87DA               	bsf	218,3,b	;volatile
  9372                           
  9373                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9374  005312  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9375  005316                     
  9376                           ;i2c.c: 57:   tmp = SSP2BUF;
  9377  005316  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9378                           
  9379                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9380  00531A  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9381  00531E                     
  9382                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9383  00531E  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  9384  005320  B4D8               	btfsc	status,2,c
  9385  005322  EF95  F029         	goto	u6661
  9386  005326  EF99  F029         	goto	u6660
  9387  00532A                     u6661:
  9388  00532A  6A04               	clrf	??_I2C_2_Master_Read^0,c
  9389  00532C  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  9390  00532E  EF9A  F029         	goto	u6678
  9391  005332                     u6660:
  9392  005332  6A04               	clrf	??_I2C_2_Master_Read^0,c
  9393  005334                     u6678:
  9394  005334  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  9395  005336  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  9396  005338  010E               	movlb	14	; () banked
  9397  00533A  51DA               	movf	218,w,b	;volatile
  9398  00533C  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  9399  00533E  0BDF               	andlw	-33
  9400  005340  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  9401  005342  6FDA               	movwf	218,b	;volatile
  9402  005344                     
  9403                           ; BSR set to: 14
  9404                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9405  005344  89DA               	bsf	218,4,b	;volatile
  9406  005346                     
  9407                           ; BSR set to: 14
  9408                           ;i2c.c: 61:   return tmp;
  9409  005346  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  9410  005348                     
  9411                           ; BSR set to: 14
  9412  005348  0012               	return		;funcret
  9413  00534A                     __end_of_I2C_2_Master_Read:
  9414                           	callstack 0
  9415                           
  9416 ;; *************** function ___xxtofl *****************
  9417 ;; Defined at:
  9418 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  sign            1    wreg     unsigned char 
  9421 ;;  val             4    2[COMRAM] long 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  sign            1   10[COMRAM] unsigned char 
  9424 ;;  arg             4   12[COMRAM] unsigned long 
  9425 ;;  exp             1   11[COMRAM] unsigned char 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  4    2[COMRAM] unsigned char 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;Total ram usage:       14 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 2
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_detect_color
  9446 ;;		_amb_light_measure
  9447 ;;		_distance_measure
  9448 ;;		_check_color_reading
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text45
  9453  003BF0                     __ptext45:
  9454                           	callstack 0
  9455  003BF0                     ___xxtofl:
  9456                           	callstack 26
  9457                           
  9458                           ; BSR set to: 14
  9459                           ;incstack = 0
  9460                           ;___xxtofl@sign stored from wreg
  9461  003BF0  6E0B               	movwf	___xxtofl@sign^0,c
  9462  003BF2  500B               	movf	___xxtofl@sign^0,w,c
  9463  003BF4  B4D8               	btfsc	status,2,c
  9464  003BF6  EFFF  F01D         	goto	u7791
  9465  003BFA  EF01  F01E         	goto	u7790
  9466  003BFE                     u7791:
  9467  003BFE  EF23  F01E         	goto	l1413
  9468  003C02                     u7790:
  9469  003C02  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  9470  003C04  EF08  F01E         	goto	u7800
  9471  003C08  EF06  F01E         	goto	u7801
  9472  003C0C                     u7801:
  9473  003C0C  EF23  F01E         	goto	l1413
  9474  003C10                     u7800:
  9475  003C10  C003  F007         	movff	___xxtofl@val,??___xxtofl
  9476  003C14  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  9477  003C18  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  9478  003C1C  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  9479  003C20  1E07               	comf	??___xxtofl^0,f,c
  9480  003C22  1E08               	comf	(??___xxtofl+1)^0,f,c
  9481  003C24  1E09               	comf	(??___xxtofl+2)^0,f,c
  9482  003C26  1E0A               	comf	(??___xxtofl+3)^0,f,c
  9483  003C28  2A07               	incf	??___xxtofl^0,f,c
  9484  003C2A  0E00               	movlw	0
  9485  003C2C  2208               	addwfc	(??___xxtofl+1)^0,f,c
  9486  003C2E  2209               	addwfc	(??___xxtofl+2)^0,f,c
  9487  003C30  220A               	addwfc	(??___xxtofl+3)^0,f,c
  9488  003C32  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  9489  003C36  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  9490  003C3A  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  9491  003C3E  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  9492  003C42  EF2B  F01E         	goto	l6768
  9493  003C46                     l1413:
  9494  003C46  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  9495  003C4A  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9496  003C4E  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9497  003C52  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9498  003C56                     l6768:
  9499  003C56  5003               	movf	___xxtofl@val^0,w,c
  9500  003C58  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  9501  003C5A  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  9502  003C5C  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  9503  003C5E  A4D8               	btfss	status,2,c
  9504  003C60  EF34  F01E         	goto	u7811
  9505  003C64  EF36  F01E         	goto	u7810
  9506  003C68                     u7811:
  9507  003C68  EF40  F01E         	goto	l6774
  9508  003C6C                     u7810:
  9509  003C6C  0E00               	movlw	0
  9510  003C6E  6E03               	movwf	?___xxtofl^0,c
  9511  003C70  0E00               	movlw	0
  9512  003C72  6E04               	movwf	(?___xxtofl+1)^0,c
  9513  003C74  0E00               	movlw	0
  9514  003C76  6E05               	movwf	(?___xxtofl+2)^0,c
  9515  003C78  0E00               	movlw	0
  9516  003C7A  6E06               	movwf	(?___xxtofl+3)^0,c
  9517  003C7C  EFD1  F01E         	goto	l1416
  9518  003C80                     l6774:
  9519  003C80  0E96               	movlw	150
  9520  003C82  6E0C               	movwf	___xxtofl@exp^0,c
  9521  003C84  EF4A  F01E         	goto	l6778
  9522  003C88                     l6776:
  9523  003C88  2A0C               	incf	___xxtofl@exp^0,f,c
  9524  003C8A  90D8               	bcf	status,0,c
  9525  003C8C  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  9526  003C8E  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  9527  003C90  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  9528  003C92  320D               	rrcf	___xxtofl@arg^0,f,c
  9529  003C94                     l6778:
  9530  003C94  0E00               	movlw	0
  9531  003C96  140D               	andwf	___xxtofl@arg^0,w,c
  9532  003C98  6E07               	movwf	??___xxtofl^0,c
  9533  003C9A  0E00               	movlw	0
  9534  003C9C  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  9535  003C9E  6E08               	movwf	(??___xxtofl+1)^0,c
  9536  003CA0  0E00               	movlw	0
  9537  003CA2  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  9538  003CA4  6E09               	movwf	(??___xxtofl+2)^0,c
  9539  003CA6  0EFE               	movlw	254
  9540  003CA8  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  9541  003CAA  6E0A               	movwf	(??___xxtofl+3)^0,c
  9542  003CAC  5007               	movf	??___xxtofl^0,w,c
  9543  003CAE  1008               	iorwf	(??___xxtofl+1)^0,w,c
  9544  003CB0  1009               	iorwf	(??___xxtofl+2)^0,w,c
  9545  003CB2  100A               	iorwf	(??___xxtofl+3)^0,w,c
  9546  003CB4  A4D8               	btfss	status,2,c
  9547  003CB6  EF5F  F01E         	goto	u7821
  9548  003CBA  EF61  F01E         	goto	u7820
  9549  003CBE                     u7821:
  9550  003CBE  EF44  F01E         	goto	l6776
  9551  003CC2                     u7820:
  9552  003CC2  EF6F  F01E         	goto	l1420
  9553  003CC6                     l6780:
  9554  003CC6  2A0C               	incf	___xxtofl@exp^0,f,c
  9555  003CC8  0E01               	movlw	1
  9556  003CCA  260D               	addwf	___xxtofl@arg^0,f,c
  9557  003CCC  0E00               	movlw	0
  9558  003CCE  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  9559  003CD0  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  9560  003CD2  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  9561  003CD4  90D8               	bcf	status,0,c
  9562  003CD6  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  9563  003CD8  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  9564  003CDA  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  9565  003CDC  320D               	rrcf	___xxtofl@arg^0,f,c
  9566  003CDE                     l1420:
  9567  003CDE  0E00               	movlw	0
  9568  003CE0  140D               	andwf	___xxtofl@arg^0,w,c
  9569  003CE2  6E07               	movwf	??___xxtofl^0,c
  9570  003CE4  0E00               	movlw	0
  9571  003CE6  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  9572  003CE8  6E08               	movwf	(??___xxtofl+1)^0,c
  9573  003CEA  0E00               	movlw	0
  9574  003CEC  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  9575  003CEE  6E09               	movwf	(??___xxtofl+2)^0,c
  9576  003CF0  0EFF               	movlw	255
  9577  003CF2  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  9578  003CF4  6E0A               	movwf	(??___xxtofl+3)^0,c
  9579  003CF6  5007               	movf	??___xxtofl^0,w,c
  9580  003CF8  1008               	iorwf	(??___xxtofl+1)^0,w,c
  9581  003CFA  1009               	iorwf	(??___xxtofl+2)^0,w,c
  9582  003CFC  100A               	iorwf	(??___xxtofl+3)^0,w,c
  9583  003CFE  A4D8               	btfss	status,2,c
  9584  003D00  EF84  F01E         	goto	u7831
  9585  003D04  EF86  F01E         	goto	u7830
  9586  003D08                     u7831:
  9587  003D08  EF63  F01E         	goto	l6780
  9588  003D0C                     u7830:
  9589  003D0C  EF8E  F01E         	goto	l6788
  9590  003D10                     l6786:
  9591  003D10  060C               	decf	___xxtofl@exp^0,f,c
  9592  003D12  90D8               	bcf	status,0,c
  9593  003D14  360D               	rlcf	___xxtofl@arg^0,f,c
  9594  003D16  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  9595  003D18  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  9596  003D1A  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  9597  003D1C                     l6788:
  9598  003D1C  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  9599  003D1E  EF93  F01E         	goto	u7841
  9600  003D22  EF95  F01E         	goto	u7840
  9601  003D26                     u7841:
  9602  003D26  EF9D  F01E         	goto	l1427
  9603  003D2A                     u7840:
  9604  003D2A  0E02               	movlw	2
  9605  003D2C  600C               	cpfslt	___xxtofl@exp^0,c
  9606  003D2E  EF9B  F01E         	goto	u7851
  9607  003D32  EF9D  F01E         	goto	u7850
  9608  003D36                     u7851:
  9609  003D36  EF88  F01E         	goto	l6786
  9610  003D3A                     u7850:
  9611  003D3A                     l1427:
  9612  003D3A  B00C               	btfsc	___xxtofl@exp^0,0,c
  9613  003D3C  EFA2  F01E         	goto	u7861
  9614  003D40  EFA4  F01E         	goto	u7860
  9615  003D44                     u7861:
  9616  003D44  EFA5  F01E         	goto	l6794
  9617  003D48                     u7860:
  9618  003D48  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  9619  003D4A                     l6794:
  9620  003D4A  90D8               	bcf	status,0,c
  9621  003D4C  320C               	rrcf	___xxtofl@exp^0,f,c
  9622  003D4E  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  9623  003D52  6A08               	clrf	(??___xxtofl+1)^0,c
  9624  003D54  6A09               	clrf	(??___xxtofl+2)^0,c
  9625  003D56  6A0A               	clrf	(??___xxtofl+3)^0,c
  9626  003D58  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  9627  003D5C  6A09               	clrf	(??___xxtofl+2)^0,c
  9628  003D5E  6A08               	clrf	(??___xxtofl+1)^0,c
  9629  003D60  6A07               	clrf	??___xxtofl^0,c
  9630  003D62  5007               	movf	??___xxtofl^0,w,c
  9631  003D64  120D               	iorwf	___xxtofl@arg^0,f,c
  9632  003D66  5008               	movf	(??___xxtofl+1)^0,w,c
  9633  003D68  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  9634  003D6A  5009               	movf	(??___xxtofl+2)^0,w,c
  9635  003D6C  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  9636  003D6E  500A               	movf	(??___xxtofl+3)^0,w,c
  9637  003D70  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  9638  003D72  500B               	movf	___xxtofl@sign^0,w,c
  9639  003D74  B4D8               	btfsc	status,2,c
  9640  003D76  EFBF  F01E         	goto	u7871
  9641  003D7A  EFC1  F01E         	goto	u7870
  9642  003D7E                     u7871:
  9643  003D7E  EFC9  F01E         	goto	l6804
  9644  003D82                     u7870:
  9645  003D82  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  9646  003D84  EFC8  F01E         	goto	u7880
  9647  003D88  EFC6  F01E         	goto	u7881
  9648  003D8C                     u7881:
  9649  003D8C  EFC9  F01E         	goto	l6804
  9650  003D90                     u7880:
  9651  003D90  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  9652  003D92                     l6804:
  9653  003D92  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  9654  003D96  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  9655  003D9A  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  9656  003D9E  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  9657  003DA2                     l1416:
  9658  003DA2  0012               	return		;funcret
  9659  003DA4                     __end_of___xxtofl:
  9660                           	callstack 0
  9661                           
  9662 ;; *************** function ___fldiv *****************
  9663 ;; Defined at:
  9664 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;  b               4   16[COMRAM] unsigned char 
  9667 ;;  a               4   20[COMRAM] unsigned char 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  grs             4   35[COMRAM] unsigned long 
  9670 ;;  rem             4   28[COMRAM] unsigned long 
  9671 ;;  new_exp         2   33[COMRAM] short 
  9672 ;;  aexp            1   40[COMRAM] unsigned char 
  9673 ;;  bexp            1   39[COMRAM] unsigned char 
  9674 ;;  sign            1   32[COMRAM] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  4   16[COMRAM] unsigned char 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9684 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;Total ram usage:       25 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; Hardware stack levels required when called: 2
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		_detect_color
  9695 ;;		_amb_light_measure
  9696 ;;		_check_color_reading
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text46
  9701  0025F2                     __ptext46:
  9702                           	callstack 0
  9703  0025F2                     ___fldiv:
  9704                           	callstack 26
  9705  0025F2  5014               	movf	(___fldiv@b+3)^0,w,c
  9706  0025F4  0B80               	andlw	128
  9707  0025F6  6E21               	movwf	___fldiv@sign^0,c
  9708  0025F8  5014               	movf	(___fldiv@b+3)^0,w,c
  9709  0025FA  2414               	addwf	(___fldiv@b+3)^0,w,c
  9710  0025FC  6E28               	movwf	___fldiv@bexp^0,c
  9711  0025FE  AE13               	btfss	(___fldiv@b+2)^0,7,c
  9712  002600  EF04  F013         	goto	u7561
  9713  002604  EF06  F013         	goto	u7560
  9714  002608                     u7561:
  9715  002608  EF07  F013         	goto	l6630
  9716  00260C                     u7560:
  9717  00260C  8028               	bsf	___fldiv@bexp^0,0,c
  9718  00260E                     l6630:
  9719  00260E  5028               	movf	___fldiv@bexp^0,w,c
  9720  002610  B4D8               	btfsc	status,2,c
  9721  002612  EF0D  F013         	goto	u7571
  9722  002616  EF0F  F013         	goto	u7570
  9723  00261A                     u7571:
  9724  00261A  EF24  F013         	goto	l6640
  9725  00261E                     u7570:
  9726  00261E  2828               	incf	___fldiv@bexp^0,w,c
  9727  002620  A4D8               	btfss	status,2,c
  9728  002622  EF15  F013         	goto	u7581
  9729  002626  EF17  F013         	goto	u7580
  9730  00262A                     u7581:
  9731  00262A  EF1F  F013         	goto	l6636
  9732  00262E                     u7580:
  9733  00262E  0E00               	movlw	0
  9734  002630  6E11               	movwf	___fldiv@b^0,c
  9735  002632  0E00               	movlw	0
  9736  002634  6E12               	movwf	(___fldiv@b+1)^0,c
  9737  002636  0E00               	movlw	0
  9738  002638  6E13               	movwf	(___fldiv@b+2)^0,c
  9739  00263A  0E00               	movlw	0
  9740  00263C  6E14               	movwf	(___fldiv@b+3)^0,c
  9741  00263E                     l6636:
  9742  00263E  8E13               	bsf	(___fldiv@b+2)^0,7,c
  9743  002640  0E00               	movlw	0
  9744  002642  6E14               	movwf	(___fldiv@b+3)^0,c
  9745  002644  EF2C  F013         	goto	l6642
  9746  002648                     l6640:
  9747  002648  0E00               	movlw	0
  9748  00264A  6E11               	movwf	___fldiv@b^0,c
  9749  00264C  0E00               	movlw	0
  9750  00264E  6E12               	movwf	(___fldiv@b+1)^0,c
  9751  002650  0E00               	movlw	0
  9752  002652  6E13               	movwf	(___fldiv@b+2)^0,c
  9753  002654  0E00               	movlw	0
  9754  002656  6E14               	movwf	(___fldiv@b+3)^0,c
  9755  002658                     l6642:
  9756  002658  5018               	movf	(___fldiv@a+3)^0,w,c
  9757  00265A  0B80               	andlw	128
  9758  00265C  1A21               	xorwf	___fldiv@sign^0,f,c
  9759  00265E  5018               	movf	(___fldiv@a+3)^0,w,c
  9760  002660  2418               	addwf	(___fldiv@a+3)^0,w,c
  9761  002662  6E29               	movwf	___fldiv@aexp^0,c
  9762  002664  AE17               	btfss	(___fldiv@a+2)^0,7,c
  9763  002666  EF37  F013         	goto	u7591
  9764  00266A  EF39  F013         	goto	u7590
  9765  00266E                     u7591:
  9766  00266E  EF3A  F013         	goto	l6650
  9767  002672                     u7590:
  9768  002672  8029               	bsf	___fldiv@aexp^0,0,c
  9769  002674                     l6650:
  9770  002674  5029               	movf	___fldiv@aexp^0,w,c
  9771  002676  B4D8               	btfsc	status,2,c
  9772  002678  EF40  F013         	goto	u7601
  9773  00267C  EF42  F013         	goto	u7600
  9774  002680                     u7601:
  9775  002680  EF57  F013         	goto	l6660
  9776  002684                     u7600:
  9777  002684  2829               	incf	___fldiv@aexp^0,w,c
  9778  002686  A4D8               	btfss	status,2,c
  9779  002688  EF48  F013         	goto	u7611
  9780  00268C  EF4A  F013         	goto	u7610
  9781  002690                     u7611:
  9782  002690  EF52  F013         	goto	l6656
  9783  002694                     u7610:
  9784  002694  0E00               	movlw	0
  9785  002696  6E15               	movwf	___fldiv@a^0,c
  9786  002698  0E00               	movlw	0
  9787  00269A  6E16               	movwf	(___fldiv@a+1)^0,c
  9788  00269C  0E00               	movlw	0
  9789  00269E  6E17               	movwf	(___fldiv@a+2)^0,c
  9790  0026A0  0E00               	movlw	0
  9791  0026A2  6E18               	movwf	(___fldiv@a+3)^0,c
  9792  0026A4                     l6656:
  9793  0026A4  8E17               	bsf	(___fldiv@a+2)^0,7,c
  9794  0026A6  0E00               	movlw	0
  9795  0026A8  6E18               	movwf	(___fldiv@a+3)^0,c
  9796  0026AA  EF5F  F013         	goto	l6662
  9797  0026AE                     l6660:
  9798  0026AE  0E00               	movlw	0
  9799  0026B0  6E15               	movwf	___fldiv@a^0,c
  9800  0026B2  0E00               	movlw	0
  9801  0026B4  6E16               	movwf	(___fldiv@a+1)^0,c
  9802  0026B6  0E00               	movlw	0
  9803  0026B8  6E17               	movwf	(___fldiv@a+2)^0,c
  9804  0026BA  0E00               	movlw	0
  9805  0026BC  6E18               	movwf	(___fldiv@a+3)^0,c
  9806  0026BE                     l6662:
  9807  0026BE  5015               	movf	___fldiv@a^0,w,c
  9808  0026C0  1016               	iorwf	(___fldiv@a+1)^0,w,c
  9809  0026C2  1017               	iorwf	(___fldiv@a+2)^0,w,c
  9810  0026C4  1018               	iorwf	(___fldiv@a+3)^0,w,c
  9811  0026C6  A4D8               	btfss	status,2,c
  9812  0026C8  EF68  F013         	goto	u7621
  9813  0026CC  EF6A  F013         	goto	u7620
  9814  0026D0                     u7621:
  9815  0026D0  EF82  F013         	goto	l6674
  9816  0026D4                     u7620:
  9817  0026D4  0E00               	movlw	0
  9818  0026D6  6E11               	movwf	___fldiv@b^0,c
  9819  0026D8  0E00               	movlw	0
  9820  0026DA  6E12               	movwf	(___fldiv@b+1)^0,c
  9821  0026DC  0E00               	movlw	0
  9822  0026DE  6E13               	movwf	(___fldiv@b+2)^0,c
  9823  0026E0  0E00               	movlw	0
  9824  0026E2  6E14               	movwf	(___fldiv@b+3)^0,c
  9825  0026E4  0E80               	movlw	128
  9826  0026E6  1213               	iorwf	(___fldiv@b+2)^0,f,c
  9827  0026E8  0E7F               	movlw	127
  9828  0026EA  1214               	iorwf	(___fldiv@b+3)^0,f,c
  9829  0026EC                     l6668:
  9830  0026EC  5021               	movf	___fldiv@sign^0,w,c
  9831  0026EE  1214               	iorwf	(___fldiv@b+3)^0,f,c
  9832  0026F0  C011  F011         	movff	___fldiv@b,?___fldiv
  9833  0026F4  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  9834  0026F8  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  9835  0026FC  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  9836  002700  EFC5  F014         	goto	l1340
  9837  002704                     l6674:
  9838  002704  5028               	movf	___fldiv@bexp^0,w,c
  9839  002706  A4D8               	btfss	status,2,c
  9840  002708  EF88  F013         	goto	u7631
  9841  00270C  EF8A  F013         	goto	u7630
  9842  002710                     u7631:
  9843  002710  EF94  F013         	goto	l6682
  9844  002714                     u7630:
  9845  002714  0E00               	movlw	0
  9846  002716  6E11               	movwf	?___fldiv^0,c
  9847  002718  0E00               	movlw	0
  9848  00271A  6E12               	movwf	(?___fldiv+1)^0,c
  9849  00271C  0E00               	movlw	0
  9850  00271E  6E13               	movwf	(?___fldiv+2)^0,c
  9851  002720  0E00               	movlw	0
  9852  002722  6E14               	movwf	(?___fldiv+3)^0,c
  9853  002724  EFC5  F014         	goto	l1340
  9854  002728                     l6682:
  9855  002728  5029               	movf	___fldiv@aexp^0,w,c
  9856  00272A  C028  F019         	movff	___fldiv@bexp,??___fldiv
  9857  00272E  6A1A               	clrf	(??___fldiv+1)^0,c
  9858  002730  5E19               	subwf	??___fldiv^0,f,c
  9859  002732  0E00               	movlw	0
  9860  002734  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  9861  002736  0E7F               	movlw	127
  9862  002738  2419               	addwf	??___fldiv^0,w,c
  9863  00273A  6E22               	movwf	___fldiv@new_exp^0,c
  9864  00273C  0E00               	movlw	0
  9865  00273E  201A               	addwfc	(??___fldiv+1)^0,w,c
  9866  002740  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  9867  002742  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  9868  002746  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  9869  00274A  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  9870  00274E  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  9871  002752  0E00               	movlw	0
  9872  002754  6E11               	movwf	___fldiv@b^0,c
  9873  002756  0E00               	movlw	0
  9874  002758  6E12               	movwf	(___fldiv@b+1)^0,c
  9875  00275A  0E00               	movlw	0
  9876  00275C  6E13               	movwf	(___fldiv@b+2)^0,c
  9877  00275E  0E00               	movlw	0
  9878  002760  6E14               	movwf	(___fldiv@b+3)^0,c
  9879  002762  0E00               	movlw	0
  9880  002764  6E24               	movwf	___fldiv@grs^0,c
  9881  002766  0E00               	movlw	0
  9882  002768  6E25               	movwf	(___fldiv@grs+1)^0,c
  9883  00276A  0E00               	movlw	0
  9884  00276C  6E26               	movwf	(___fldiv@grs+2)^0,c
  9885  00276E  0E00               	movlw	0
  9886  002770  6E27               	movwf	(___fldiv@grs+3)^0,c
  9887  002772  0E00               	movlw	0
  9888  002774  6E29               	movwf	___fldiv@aexp^0,c
  9889  002776  EFF5  F013         	goto	l1342
  9890  00277A                     l6692:
  9891  00277A  5029               	movf	___fldiv@aexp^0,w,c
  9892  00277C  B4D8               	btfsc	status,2,c
  9893  00277E  EFC3  F013         	goto	u7641
  9894  002782  EFC5  F013         	goto	u7640
  9895  002786                     u7641:
  9896  002786  EFDC  F013         	goto	l6700
  9897  00278A                     u7640:
  9898  00278A  90D8               	bcf	status,0,c
  9899  00278C  361D               	rlcf	___fldiv@rem^0,f,c
  9900  00278E  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  9901  002790  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  9902  002792  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  9903  002794  90D8               	bcf	status,0,c
  9904  002796  3611               	rlcf	___fldiv@b^0,f,c
  9905  002798  3612               	rlcf	(___fldiv@b+1)^0,f,c
  9906  00279A  3613               	rlcf	(___fldiv@b+2)^0,f,c
  9907  00279C  3614               	rlcf	(___fldiv@b+3)^0,f,c
  9908  00279E  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  9909  0027A0  EFD4  F013         	goto	u7651
  9910  0027A4  EFD6  F013         	goto	u7650
  9911  0027A8                     u7651:
  9912  0027A8  EFD7  F013         	goto	l1345
  9913  0027AC                     u7650:
  9914  0027AC  8011               	bsf	___fldiv@b^0,0,c
  9915  0027AE                     l1345:
  9916  0027AE  90D8               	bcf	status,0,c
  9917  0027B0  3624               	rlcf	___fldiv@grs^0,f,c
  9918  0027B2  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  9919  0027B4  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  9920  0027B6  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  9921  0027B8                     l6700:
  9922  0027B8  5015               	movf	___fldiv@a^0,w,c
  9923  0027BA  5C1D               	subwf	___fldiv@rem^0,w,c
  9924  0027BC  5016               	movf	(___fldiv@a+1)^0,w,c
  9925  0027BE  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  9926  0027C0  5017               	movf	(___fldiv@a+2)^0,w,c
  9927  0027C2  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  9928  0027C4  5018               	movf	(___fldiv@a+3)^0,w,c
  9929  0027C6  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  9930  0027C8  A0D8               	btfss	status,0,c
  9931  0027CA  EFE9  F013         	goto	u7661
  9932  0027CE  EFEB  F013         	goto	u7660
  9933  0027D2                     u7661:
  9934  0027D2  EFF4  F013         	goto	l6706
  9935  0027D6                     u7660:
  9936  0027D6  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  9937  0027D8  5015               	movf	___fldiv@a^0,w,c
  9938  0027DA  5E1D               	subwf	___fldiv@rem^0,f,c
  9939  0027DC  5016               	movf	(___fldiv@a+1)^0,w,c
  9940  0027DE  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  9941  0027E0  5017               	movf	(___fldiv@a+2)^0,w,c
  9942  0027E2  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  9943  0027E4  5018               	movf	(___fldiv@a+3)^0,w,c
  9944  0027E6  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  9945  0027E8                     l6706:
  9946  0027E8  2A29               	incf	___fldiv@aexp^0,f,c
  9947  0027EA                     l1342:
  9948  0027EA  0E19               	movlw	25
  9949  0027EC  6429               	cpfsgt	___fldiv@aexp^0,c
  9950  0027EE  EFFB  F013         	goto	u7671
  9951  0027F2  EFFD  F013         	goto	u7670
  9952  0027F6                     u7671:
  9953  0027F6  EFBD  F013         	goto	l6692
  9954  0027FA                     u7670:
  9955  0027FA  501D               	movf	___fldiv@rem^0,w,c
  9956  0027FC  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  9957  0027FE  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  9958  002800  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  9959  002802  B4D8               	btfsc	status,2,c
  9960  002804  EF06  F014         	goto	u7681
  9961  002808  EF08  F014         	goto	u7680
  9962  00280C                     u7681:
  9963  00280C  EF20  F014         	goto	l6718
  9964  002810                     u7680:
  9965  002810  8024               	bsf	___fldiv@grs^0,0,c
  9966  002812  EF20  F014         	goto	l6718
  9967  002816                     l6712:
  9968  002816  90D8               	bcf	status,0,c
  9969  002818  3611               	rlcf	___fldiv@b^0,f,c
  9970  00281A  3612               	rlcf	(___fldiv@b+1)^0,f,c
  9971  00281C  3613               	rlcf	(___fldiv@b+2)^0,f,c
  9972  00281E  3614               	rlcf	(___fldiv@b+3)^0,f,c
  9973  002820  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  9974  002822  EF15  F014         	goto	u7691
  9975  002826  EF17  F014         	goto	u7690
  9976  00282A                     u7691:
  9977  00282A  EF18  F014         	goto	l1351
  9978  00282E                     u7690:
  9979  00282E  8011               	bsf	___fldiv@b^0,0,c
  9980  002830                     l1351:
  9981  002830  90D8               	bcf	status,0,c
  9982  002832  3624               	rlcf	___fldiv@grs^0,f,c
  9983  002834  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  9984  002836  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  9985  002838  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  9986  00283A  0622               	decf	___fldiv@new_exp^0,f,c
  9987  00283C  A0D8               	btfss	status,0,c
  9988  00283E  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  9989  002840                     l6718:
  9990  002840  AE13               	btfss	(___fldiv@b+2)^0,7,c
  9991  002842  EF25  F014         	goto	u7701
  9992  002846  EF27  F014         	goto	u7700
  9993  00284A                     u7701:
  9994  00284A  EF0B  F014         	goto	l6712
  9995  00284E                     u7700:
  9996  00284E  0E00               	movlw	0
  9997  002850  6E29               	movwf	___fldiv@aexp^0,c
  9998  002852  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  9999  002854  EF2E  F014         	goto	u7711
 10000  002858  EF30  F014         	goto	u7710
 10001  00285C                     u7711:
 10002  00285C  EF54  F014         	goto	l1353
 10003  002860                     u7710:
 10004  002860  0EFF               	movlw	255
 10005  002862  1424               	andwf	___fldiv@grs^0,w,c
 10006  002864  6E19               	movwf	??___fldiv^0,c
 10007  002866  0EFF               	movlw	255
 10008  002868  1425               	andwf	(___fldiv@grs+1)^0,w,c
 10009  00286A  6E1A               	movwf	(??___fldiv+1)^0,c
 10010  00286C  0EFF               	movlw	255
 10011  00286E  1426               	andwf	(___fldiv@grs+2)^0,w,c
 10012  002870  6E1B               	movwf	(??___fldiv+2)^0,c
 10013  002872  0E7F               	movlw	127
 10014  002874  1427               	andwf	(___fldiv@grs+3)^0,w,c
 10015  002876  6E1C               	movwf	(??___fldiv+3)^0,c
 10016  002878  5019               	movf	??___fldiv^0,w,c
 10017  00287A  101A               	iorwf	(??___fldiv+1)^0,w,c
 10018  00287C  101B               	iorwf	(??___fldiv+2)^0,w,c
 10019  00287E  101C               	iorwf	(??___fldiv+3)^0,w,c
 10020  002880  B4D8               	btfsc	status,2,c
 10021  002882  EF45  F014         	goto	u7721
 10022  002886  EF47  F014         	goto	u7720
 10023  00288A                     u7721:
 10024  00288A  EF4B  F014         	goto	l1354
 10025  00288E                     u7720:
 10026  00288E                     l6726:
 10027  00288E  0E01               	movlw	1
 10028  002890  6E29               	movwf	___fldiv@aexp^0,c
 10029  002892  EF54  F014         	goto	l1353
 10030  002896                     l1354:
 10031  002896  A011               	btfss	___fldiv@b^0,0,c
 10032  002898  EF50  F014         	goto	u7731
 10033  00289C  EF52  F014         	goto	u7730
 10034  0028A0                     u7731:
 10035  0028A0  EF54  F014         	goto	l1353
 10036  0028A4                     u7730:
 10037  0028A4  EF47  F014         	goto	l6726
 10038  0028A8                     l1353:
 10039  0028A8  5029               	movf	___fldiv@aexp^0,w,c
 10040  0028AA  B4D8               	btfsc	status,2,c
 10041  0028AC  EF5A  F014         	goto	u7741
 10042  0028B0  EF5C  F014         	goto	u7740
 10043  0028B4                     u7741:
 10044  0028B4  EF80  F014         	goto	l6738
 10045  0028B8                     u7740:
 10046  0028B8  0E01               	movlw	1
 10047  0028BA  2611               	addwf	___fldiv@b^0,f,c
 10048  0028BC  0E00               	movlw	0
 10049  0028BE  2212               	addwfc	(___fldiv@b+1)^0,f,c
 10050  0028C0  2213               	addwfc	(___fldiv@b+2)^0,f,c
 10051  0028C2  2214               	addwfc	(___fldiv@b+3)^0,f,c
 10052  0028C4  A014               	btfss	(___fldiv@b+3)^0,0,c
 10053  0028C6  EF67  F014         	goto	u7751
 10054  0028CA  EF69  F014         	goto	u7750
 10055  0028CE                     u7751:
 10056  0028CE  EF80  F014         	goto	l6738
 10057  0028D2                     u7750:
 10058  0028D2  C011  F019         	movff	___fldiv@b,??___fldiv
 10059  0028D6  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
 10060  0028DA  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
 10061  0028DE  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
 10062  0028E2  341C               	rlcf	(??___fldiv+3)^0,w,c
 10063  0028E4  321C               	rrcf	(??___fldiv+3)^0,f,c
 10064  0028E6  321B               	rrcf	(??___fldiv+2)^0,f,c
 10065  0028E8  321A               	rrcf	(??___fldiv+1)^0,f,c
 10066  0028EA  3219               	rrcf	??___fldiv^0,f,c
 10067  0028EC  C019  F011         	movff	??___fldiv,___fldiv@b
 10068  0028F0  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
 10069  0028F4  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
 10070  0028F8  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
 10071  0028FC  4A22               	infsnz	___fldiv@new_exp^0,f,c
 10072  0028FE  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
 10073  002900                     l6738:
 10074  002900  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10075  002902  EF8B  F014         	goto	u7761
 10076  002906  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10077  002908  E108               	bnz	u7760
 10078  00290A  2822               	incf	___fldiv@new_exp^0,w,c
 10079  00290C  A0D8               	btfss	status,0,c
 10080  00290E  EF8B  F014         	goto	u7761
 10081  002912  EF8D  F014         	goto	u7760
 10082  002916                     u7761:
 10083  002916  EF98  F014         	goto	l6742
 10084  00291A                     u7760:
 10085  00291A  0E00               	movlw	0
 10086  00291C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10087  00291E  6822               	setf	___fldiv@new_exp^0,c
 10088  002920  0E00               	movlw	0
 10089  002922  6E11               	movwf	___fldiv@b^0,c
 10090  002924  0E00               	movlw	0
 10091  002926  6E12               	movwf	(___fldiv@b+1)^0,c
 10092  002928  0E00               	movlw	0
 10093  00292A  6E13               	movwf	(___fldiv@b+2)^0,c
 10094  00292C  0E00               	movlw	0
 10095  00292E  6E14               	movwf	(___fldiv@b+3)^0,c
 10096  002930                     l6742:
 10097  002930  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10098  002932  EFA5  F014         	goto	u7770
 10099  002936  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10100  002938  E106               	bnz	u7771
 10101  00293A  0422               	decf	___fldiv@new_exp^0,w,c
 10102  00293C  B0D8               	btfsc	status,0,c
 10103  00293E  EFA3  F014         	goto	u7771
 10104  002942  EFA5  F014         	goto	u7770
 10105  002946                     u7771:
 10106  002946  EFB3  F014         	goto	l6746
 10107  00294A                     u7770:
 10108  00294A  0E00               	movlw	0
 10109  00294C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10110  00294E  0E00               	movlw	0
 10111  002950  6E22               	movwf	___fldiv@new_exp^0,c
 10112  002952  0E00               	movlw	0
 10113  002954  6E11               	movwf	___fldiv@b^0,c
 10114  002956  0E00               	movlw	0
 10115  002958  6E12               	movwf	(___fldiv@b+1)^0,c
 10116  00295A  0E00               	movlw	0
 10117  00295C  6E13               	movwf	(___fldiv@b+2)^0,c
 10118  00295E  0E00               	movlw	0
 10119  002960  6E14               	movwf	(___fldiv@b+3)^0,c
 10120  002962  0E00               	movlw	0
 10121  002964  6E21               	movwf	___fldiv@sign^0,c
 10122  002966                     l6746:
 10123  002966  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
 10124  00296A  A028               	btfss	___fldiv@bexp^0,0,c
 10125  00296C  EFBA  F014         	goto	u7781
 10126  002970  EFBC  F014         	goto	u7780
 10127  002974                     u7781:
 10128  002974  EFBF  F014         	goto	l6752
 10129  002978                     u7780:
 10130  002978  8E13               	bsf	(___fldiv@b+2)^0,7,c
 10131  00297A  EFC0  F014         	goto	l6754
 10132  00297E                     l6752:
 10133  00297E  9E13               	bcf	(___fldiv@b+2)^0,7,c
 10134  002980                     l6754:
 10135  002980  90D8               	bcf	status,0,c
 10136  002982  3028               	rrcf	___fldiv@bexp^0,w,c
 10137  002984  6E14               	movwf	(___fldiv@b+3)^0,c
 10138  002986  EF76  F013         	goto	l6668
 10139  00298A                     l1340:
 10140  00298A  0012               	return		;funcret
 10141  00298C                     __end_of___fldiv:
 10142                           	callstack 0
 10143                           
 10144 ;; *************** function _LED_C *****************
 10145 ;; Defined at:
 10146 ;;		line 213 in file "color.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;Total ram usage:        2 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; Hardware stack levels required when called: 2
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_test_function
 10171 ;;		_color_data_collection
 10172 ;;		_calibrate_white
 10173 ;;		_amb_light_measure
 10174 ;;		_distance_measure
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text47
 10179  0056BC                     __ptext47:
 10180                           	callstack 0
 10181  0056BC                     _LED_C:
 10182                           	callstack 26
 10183  0056BC                     
 10184                           ;color.c: 215:     LATGbits.LATG1 = 1;
 10185  0056BC  827F               	bsf	127,1,c	;volatile
 10186                           
 10187                           ;color.c: 216:     LATFbits.LATF7 = 1;
 10188  0056BE  8E7E               	bsf	126,7,c	;volatile
 10189                           
 10190                           ;color.c: 217:     LATAbits.LATA4 = 1;
 10191  0056C0  8879               	bsf	121,4,c	;volatile
 10192  0056C2                     
 10193                           ;color.c: 218:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10194  0056C2  0E05               	movlw	5
 10195  0056C4  6E04               	movwf	(??_LED_C+1)^0,c
 10196  0056C6  0E0F               	movlw	15
 10197  0056C8  6E03               	movwf	??_LED_C^0,c
 10198  0056CA  0EF1               	movlw	241
 10199  0056CC                     u8787:
 10200  0056CC  2EE8               	decfsz	wreg,f,c
 10201  0056CE  D7FE               	bra	u8787
 10202  0056D0  2E03               	decfsz	??_LED_C^0,f,c
 10203  0056D2  D7FC               	bra	u8787
 10204  0056D4  2E04               	decfsz	(??_LED_C+1)^0,f,c
 10205  0056D6  D7FA               	bra	u8787
 10206  0056D8  F000               	nop	
 10207  0056DA  0012               	return		;funcret
 10208  0056DC                     __end_of_LED_C:
 10209                           	callstack 0
 10210                           
 10211 ;; *************** function _pin_init *****************
 10212 ;; Defined at:
 10213 ;;		line 91 in file "movement.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  1    wreg      void 
 10220 ;; Registers used:
 10221 ;;		None
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10231 ;;Total ram usage:        0 bytes
 10232 ;; Hardware stack levels used: 1
 10233 ;; Hardware stack levels required when called: 2
 10234 ;; This function calls:
 10235 ;;		Nothing
 10236 ;; This function is called by:
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text48
 10242  0056DC                     __ptext48:
 10243                           	callstack 0
 10244  0056DC                     _pin_init:
 10245                           	callstack 28
 10246  0056DC  8486               	bsf	134,2,c	;volatile
 10247                           
 10248                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
 10249  0056DE  010E               	movlb	14	; () banked
 10250  0056E0  95B4               	bcf	180,2,b	;volatile
 10251                           
 10252                           ;movement.c: 94:     TRISFbits.TRISF3=1;
 10253  0056E2  8686               	bsf	134,3,c	;volatile
 10254                           
 10255                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
 10256  0056E4  97B4               	bcf	180,3,b	;volatile
 10257                           
 10258                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
 10259  0056E6  9287               	bcf	135,1,c	;volatile
 10260                           
 10261                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
 10262  0056E8  9E86               	bcf	134,7,c	;volatile
 10263                           
 10264                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
 10265  0056EA  9881               	bcf	129,4,c	;volatile
 10266                           
 10267                           ;movement.c: 103:     LATGbits.LATG1 = 1;
 10268  0056EC  827F               	bsf	127,1,c	;volatile
 10269                           
 10270                           ;movement.c: 104:     LATFbits.LATF7 = 1;
 10271  0056EE  8E7E               	bsf	126,7,c	;volatile
 10272                           
 10273                           ;movement.c: 105:     LATAbits.LATA4 = 1;
 10274  0056F0  8879               	bsf	121,4,c	;volatile
 10275                           
 10276                           ;movement.c: 108:     TRISDbits.TRISD7 = 0;
 10277  0056F2  9E84               	bcf	132,7,c	;volatile
 10278                           
 10279                           ;movement.c: 109:     LATDbits.LATD7 = 0;
 10280  0056F4  9E7C               	bcf	124,7,c	;volatile
 10281                           
 10282                           ;movement.c: 110:     TRISHbits.TRISH3 = 0;
 10283  0056F6  9688               	bcf	136,3,c	;volatile
 10284                           
 10285                           ;movement.c: 111:     LATHbits.LATH3 = 0;
 10286  0056F8  9680               	bcf	128,3,c	;volatile
 10287  0056FA                     
 10288                           ; BSR set to: 14
 10289  0056FA  0012               	return		;funcret
 10290  0056FC                     __end_of_pin_init:
 10291                           	callstack 0
 10292                           
 10293 ;; *************** function _initUSART4 *****************
 10294 ;; Defined at:
 10295 ;;		line 4 in file "serial.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;		None
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, status,2
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10313 ;;Total ram usage:        0 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 2
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		_main
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           	psect	text49
 10324  00571C                     __ptext49:
 10325                           	callstack 0
 10326  00571C                     _initUSART4:
 10327                           	callstack 28
 10328  00571C                     
 10329                           ;serial.c: 8:     RC0PPS = 0x12;
 10330  00571C  0E12               	movlw	18
 10331  00571E  010E               	movlb	14	; () banked
 10332  005720  6F62               	movwf	98,b	;volatile
 10333                           
 10334                           ;serial.c: 9:     RX4PPS = 0x11;
 10335  005722  0E11               	movlw	17
 10336  005724  6F15               	movwf	21,b	;volatile
 10337  005726                     
 10338                           ; BSR set to: 14
 10339                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 10340  005726  97E9               	bcf	233,3,b	;volatile
 10341  005728                     
 10342                           ; BSR set to: 14
 10343                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 10344  005728  95E8               	bcf	232,2,b	;volatile
 10345                           
 10346                           ;serial.c: 13:     SP4BRGL = 51;
 10347  00572A  0E33               	movlw	51
 10348  00572C  6FE5               	movwf	229,b	;volatile
 10349                           
 10350                           ;serial.c: 15:     SP4BRGH = 0;
 10351  00572E  0E00               	movlw	0
 10352  005730  6FE6               	movwf	230,b	;volatile
 10353  005732                     
 10354                           ; BSR set to: 14
 10355                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 10356  005732  89E7               	bsf	231,4,b	;volatile
 10357  005734                     
 10358                           ; BSR set to: 14
 10359                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 10360  005734  8BE8               	bsf	232,5,b	;volatile
 10361  005736                     
 10362                           ; BSR set to: 14
 10363                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 10364  005736  8FE7               	bsf	231,7,b	;volatile
 10365  005738                     
 10366                           ; BSR set to: 14
 10367  005738  0012               	return		;funcret
 10368  00573A                     __end_of_initUSART4:
 10369                           	callstack 0
 10370                           
 10371 ;; *************** function _initDCmotors_parameter *****************
 10372 ;; Defined at:
 10373 ;;		line 39 in file "dc_motor.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;  motorL          2    2[COMRAM] PTR struct DC_motor
 10376 ;;		 -> main@motorL(10), 
 10377 ;;  motorR          2    4[COMRAM] PTR struct DC_motor
 10378 ;;		 -> main@motorR(10), 
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;		None
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  1    wreg      void 
 10383 ;; Registers used:
 10384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;Total ram usage:        4 bytes
 10395 ;; Hardware stack levels used: 1
 10396 ;; Hardware stack levels required when called: 2
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_main
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text50
 10405  00484E                     __ptext50:
 10406                           	callstack 0
 10407  00484E                     _initDCmotors_parameter:
 10408                           	callstack 28
 10409  00484E                     
 10410                           ;dc_motor.c: 41:     motorL->power = 0;
 10411  00484E  C003  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 10412  004852  C004  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 10413  004856  0E00               	movlw	0
 10414  004858  6EDF               	movwf	indf2,c
 10415  00485A                     
 10416                           ;dc_motor.c: 42:     motorL->direction = 1;
 10417  00485A  EE20 F001          	lfsr	2,1
 10418  00485E  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10419  004860  26D9               	addwf	fsr2l,f,c
 10420  004862  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10421  004864  22DA               	addwfc	fsr2h,f,c
 10422  004866  0E01               	movlw	1
 10423  004868  6EDF               	movwf	indf2,c
 10424  00486A                     
 10425                           ;dc_motor.c: 43:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 10426  00486A  EE20 F002          	lfsr	2,2
 10427  00486E  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10428  004870  26D9               	addwf	fsr2l,f,c
 10429  004872  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10430  004874  22DA               	addwfc	fsr2h,f,c
 10431  004876  0EA3               	movlw	163
 10432  004878  6EDE               	movwf	postinc2,c
 10433  00487A  0E0F               	movlw	15
 10434  00487C  6EDD               	movwf	postdec2,c
 10435  00487E                     
 10436                           ;dc_motor.c: 44:     motorL->dir_LAT = (unsigned char *)(&LATE);
 10437  00487E  EE20 F004          	lfsr	2,4
 10438  004882  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10439  004884  26D9               	addwf	fsr2l,f,c
 10440  004886  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10441  004888  22DA               	addwfc	fsr2h,f,c
 10442  00488A  0E7D               	movlw	125
 10443  00488C  6EDE               	movwf	postinc2,c
 10444  00488E  0E0F               	movlw	15
 10445  004890  6EDD               	movwf	postdec2,c
 10446  004892                     
 10447                           ;dc_motor.c: 45:     motorL->dir_pin = 4;
 10448  004892  EE20 F006          	lfsr	2,6
 10449  004896  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10450  004898  26D9               	addwf	fsr2l,f,c
 10451  00489A  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10452  00489C  22DA               	addwfc	fsr2h,f,c
 10453  00489E  0E04               	movlw	4
 10454  0048A0  6EDF               	movwf	indf2,c
 10455  0048A2                     
 10456                           ;dc_motor.c: 46:     motorL->PWMperiod = 199;
 10457  0048A2  EE20 F007          	lfsr	2,7
 10458  0048A6  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10459  0048A8  26D9               	addwf	fsr2l,f,c
 10460  0048AA  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10461  0048AC  22DA               	addwfc	fsr2h,f,c
 10462  0048AE  0EC7               	movlw	199
 10463  0048B0  6EDE               	movwf	postinc2,c
 10464  0048B2  0E00               	movlw	0
 10465  0048B4  6EDD               	movwf	postdec2,c
 10466  0048B6                     
 10467                           ;dc_motor.c: 49:     motorR->power = 0;
 10468  0048B6  C005  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 10469  0048BA  C006  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 10470  0048BE  0E00               	movlw	0
 10471  0048C0  6EDF               	movwf	indf2,c
 10472                           
 10473                           ;dc_motor.c: 50:     motorR->direction = 1;
 10474  0048C2  EE20 F001          	lfsr	2,1
 10475  0048C6  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10476  0048C8  26D9               	addwf	fsr2l,f,c
 10477  0048CA  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10478  0048CC  22DA               	addwfc	fsr2h,f,c
 10479  0048CE  0E01               	movlw	1
 10480  0048D0  6EDF               	movwf	indf2,c
 10481                           
 10482                           ;dc_motor.c: 51:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 10483  0048D2  EE20 F002          	lfsr	2,2
 10484  0048D6  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10485  0048D8  26D9               	addwf	fsr2l,f,c
 10486  0048DA  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10487  0048DC  22DA               	addwfc	fsr2h,f,c
 10488  0048DE  0EA0               	movlw	160
 10489  0048E0  6EDE               	movwf	postinc2,c
 10490  0048E2  0E0F               	movlw	15
 10491  0048E4  6EDD               	movwf	postdec2,c
 10492                           
 10493                           ;dc_motor.c: 52:     motorR->dir_LAT = (unsigned char *)(&LATG);
 10494  0048E6  EE20 F004          	lfsr	2,4
 10495  0048EA  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10496  0048EC  26D9               	addwf	fsr2l,f,c
 10497  0048EE  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10498  0048F0  22DA               	addwfc	fsr2h,f,c
 10499  0048F2  0E7F               	movlw	127
 10500  0048F4  6EDE               	movwf	postinc2,c
 10501  0048F6  0E0F               	movlw	15
 10502  0048F8  6EDD               	movwf	postdec2,c
 10503                           
 10504                           ;dc_motor.c: 53:     motorR->dir_pin = 6;
 10505  0048FA  EE20 F006          	lfsr	2,6
 10506  0048FE  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10507  004900  26D9               	addwf	fsr2l,f,c
 10508  004902  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10509  004904  22DA               	addwfc	fsr2h,f,c
 10510  004906  0E06               	movlw	6
 10511  004908  6EDF               	movwf	indf2,c
 10512                           
 10513                           ;dc_motor.c: 54:     motorR->PWMperiod = 199;
 10514  00490A  EE20 F007          	lfsr	2,7
 10515  00490E  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10516  004910  26D9               	addwf	fsr2l,f,c
 10517  004912  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10518  004914  22DA               	addwfc	fsr2h,f,c
 10519  004916  0EC7               	movlw	199
 10520  004918  6EDE               	movwf	postinc2,c
 10521  00491A  0E00               	movlw	0
 10522  00491C  6EDD               	movwf	postdec2,c
 10523  00491E  0012               	return		;funcret
 10524  004920                     __end_of_initDCmotors_parameter:
 10525                           	callstack 0
 10526                           
 10527 ;; *************** function _initDCmotorsPWM *****************
 10528 ;; Defined at:
 10529 ;;		line 9 in file "dc_motor.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  PWMperiod       2    2[COMRAM] int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      void 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10547 ;;Total ram usage:        2 bytes
 10548 ;; Hardware stack levels used: 1
 10549 ;; Hardware stack levels required when called: 2
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_main
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text51
 10558  00534A                     __ptext51:
 10559                           	callstack 0
 10560  00534A                     _initDCmotorsPWM:
 10561                           	callstack 28
 10562  00534A                     
 10563                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
 10564  00534A  9485               	bcf	133,2,c	;volatile
 10565                           
 10566                           ;dc_motor.c: 13:     TRISCbits.TRISC7=0;
 10567  00534C  9E83               	bcf	131,7,c	;volatile
 10568                           
 10569                           ;dc_motor.c: 14:     TRISGbits.TRISG6=0;
 10570  00534E  9C87               	bcf	135,6,c	;volatile
 10571                           
 10572                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
 10573  005350  9885               	bcf	133,4,c	;volatile
 10574                           
 10575                           ;dc_motor.c: 16:     LATEbits.LATE2=0;
 10576  005352  947D               	bcf	125,2,c	;volatile
 10577                           
 10578                           ;dc_motor.c: 17:     LATCbits.LATC7=0;
 10579  005354  9E7B               	bcf	123,7,c	;volatile
 10580                           
 10581                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
 10582  005356  9C7F               	bcf	127,6,c	;volatile
 10583                           
 10584                           ;dc_motor.c: 19:     LATEbits.LATE4=0;
 10585  005358  987D               	bcf	125,4,c	;volatile
 10586  00535A                     
 10587                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
 10588  00535A  50BD               	movf	189,w,c	;volatile
 10589  00535C  0B8F               	andlw	-113
 10590  00535E  0930               	iorlw	48
 10591  005360  6EBD               	movwf	189,c	;volatile
 10592                           
 10593                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
 10594  005362  0EE0               	movlw	-32
 10595  005364  16BE               	andwf	190,f,c	;volatile
 10596                           
 10597                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
 10598  005366  50BF               	movf	191,w,c	;volatile
 10599  005368  0BF0               	andlw	-16
 10600  00536A  0901               	iorlw	1
 10601  00536C  6EBF               	movwf	191,c	;volatile
 10602                           
 10603                           ;dc_motor.c: 27:     T2PR=200-1;
 10604  00536E  0EC7               	movlw	199
 10605  005370  6EBC               	movwf	188,c	;volatile
 10606  005372                     
 10607                           ;dc_motor.c: 28:     T2CONbits.ON=1;
 10608  005372  8EBD               	bsf	189,7,c	;volatile
 10609                           
 10610                           ;dc_motor.c: 30:     RE2PPS=0x0A;
 10611  005374  0E0A               	movlw	10
 10612  005376  010E               	movlb	14	; () banked
 10613  005378  6F74               	movwf	116,b	;volatile
 10614                           
 10615                           ;dc_motor.c: 31:     RC7PPS=0x0B;
 10616  00537A  0E0B               	movlw	11
 10617  00537C  6F69               	movwf	105,b	;volatile
 10618                           
 10619                           ;dc_motor.c: 33:     PWM6DCH=0;
 10620  00537E  0E00               	movlw	0
 10621  005380  6EA3               	movwf	163,c	;volatile
 10622                           
 10623                           ;dc_motor.c: 34:     PWM7DCH=0;
 10624  005382  0E00               	movlw	0
 10625  005384  6EA0               	movwf	160,c	;volatile
 10626  005386                     
 10627                           ; BSR set to: 14
 10628                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
 10629  005386  8EA4               	bsf	164,7,c	;volatile
 10630  005388                     
 10631                           ; BSR set to: 14
 10632                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
 10633  005388  8EA1               	bsf	161,7,c	;volatile
 10634  00538A                     
 10635                           ; BSR set to: 14
 10636  00538A  0012               	return		;funcret
 10637  00538C                     __end_of_initDCmotorsPWM:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function _color_click_init *****************
 10641 ;; Defined at:
 10642 ;;		line 107 in file "color.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        1 bytes
 10661 ;; Hardware stack levels used: 1
 10662 ;; Hardware stack levels required when called: 5
 10663 ;; This function calls:
 10664 ;;		_I2C_2_Master_Init
 10665 ;;		_color_writetoaddr
 10666 ;; This function is called by:
 10667 ;;		_main
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text52
 10672  005532                     __ptext52:
 10673                           	callstack 0
 10674  005532                     _color_click_init:
 10675                           	callstack 25
 10676  005532                     
 10677                           ;color.c: 110:     I2C_2_Master_Init();
 10678  005532  ECE2  F02A         	call	_I2C_2_Master_Init	;wreg free
 10679  005536                     
 10680                           ;color.c: 113:  color_writetoaddr(0x00, 0x01);
 10681  005536  0E01               	movlw	1
 10682  005538  6E05               	movwf	color_writetoaddr@value^0,c
 10683  00553A  0E00               	movlw	0
 10684  00553C  EC7E  F02B         	call	_color_writetoaddr
 10685  005540                     
 10686                           ;color.c: 114:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10687  005540  0E3F               	movlw	63
 10688  005542  6E07               	movwf	??_color_click_init^0,c
 10689  005544  0E55               	movlw	85
 10690  005546                     u8797:
 10691  005546  2EE8               	decfsz	wreg,f,c
 10692  005548  D7FE               	bra	u8797
 10693  00554A  2E07               	decfsz	??_color_click_init^0,f,c
 10694  00554C  D7FC               	bra	u8797
 10695  00554E  F000               	nop	
 10696  005550                     
 10697                           ;color.c: 117:  color_writetoaddr(0x00, 0x03);
 10698  005550  0E03               	movlw	3
 10699  005552  6E05               	movwf	color_writetoaddr@value^0,c
 10700  005554  0E00               	movlw	0
 10701  005556  EC7E  F02B         	call	_color_writetoaddr
 10702  00555A                     
 10703                           ;color.c: 120:  color_writetoaddr(0x01, 0xD5);
 10704  00555A  0ED5               	movlw	213
 10705  00555C  6E05               	movwf	color_writetoaddr@value^0,c
 10706  00555E  0E01               	movlw	1
 10707  005560  EC7E  F02B         	call	_color_writetoaddr
 10708  005564  0012               	return		;funcret
 10709  005566                     __end_of_color_click_init:
 10710                           	callstack 0
 10711                           
 10712 ;; *************** function _color_writetoaddr *****************
 10713 ;; Defined at:
 10714 ;;		line 123 in file "color.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  address         1    wreg     unsigned char 
 10717 ;;  value           1    4[COMRAM] unsigned char 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  address         1    5[COMRAM] unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10729 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10733 ;;Total ram usage:        2 bytes
 10734 ;; Hardware stack levels used: 1
 10735 ;; Hardware stack levels required when called: 4
 10736 ;; This function calls:
 10737 ;;		_I2C_2_Master_Start
 10738 ;;		_I2C_2_Master_Stop
 10739 ;;		_I2C_2_Master_Write
 10740 ;; This function is called by:
 10741 ;;		_color_click_init
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text53
 10746  0056FC                     __ptext53:
 10747                           	callstack 0
 10748  0056FC                     _color_writetoaddr:
 10749                           	callstack 25
 10750                           
 10751                           ;incstack = 0
 10752                           ;color_writetoaddr@address stored from wreg
 10753  0056FC  6E06               	movwf	color_writetoaddr@address^0,c
 10754  0056FE                     
 10755                           ;color.c: 124:     I2C_2_Master_Start();
 10756  0056FE  ECD9  F02B         	call	_I2C_2_Master_Start	;wreg free
 10757                           
 10758                           ;color.c: 125:     I2C_2_Master_Write(0x52 | 0x00);
 10759  005702  0E52               	movlw	82
 10760  005704  ECC3  F02B         	call	_I2C_2_Master_Write
 10761                           
 10762                           ;color.c: 126:     I2C_2_Master_Write(0x80 | address);
 10763  005708  5006               	movf	color_writetoaddr@address^0,w,c
 10764  00570A  0980               	iorlw	128
 10765  00570C  ECC3  F02B         	call	_I2C_2_Master_Write
 10766                           
 10767                           ;color.c: 127:     I2C_2_Master_Write(value);
 10768  005710  5005               	movf	color_writetoaddr@value^0,w,c
 10769  005712  ECC3  F02B         	call	_I2C_2_Master_Write
 10770                           
 10771                           ;color.c: 128:     I2C_2_Master_Stop();
 10772  005716  ECD4  F02B         	call	_I2C_2_Master_Stop	;wreg free
 10773  00571A  0012               	return		;funcret
 10774  00571C                     __end_of_color_writetoaddr:
 10775                           	callstack 0
 10776                           
 10777 ;; *************** function _I2C_2_Master_Write *****************
 10778 ;; Defined at:
 10779 ;;		line 45 in file "i2c.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  data_byte       1    wreg     unsigned char 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  data_byte       1    3[COMRAM] unsigned char 
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  1    wreg      void 
 10786 ;; Registers used:
 10787 ;;		wreg, status,2, status,0, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;Total ram usage:        1 bytes
 10798 ;; Hardware stack levels used: 1
 10799 ;; Hardware stack levels required when called: 3
 10800 ;; This function calls:
 10801 ;;		_I2C_2_Master_Idle
 10802 ;; This function is called by:
 10803 ;;		_color_writetoaddr
 10804 ;;		_color_read_Red
 10805 ;;		_color_read_Blue
 10806 ;;		_color_read_Green
 10807 ;;		_color_read_Clear
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text54
 10812  005786                     __ptext54:
 10813                           	callstack 0
 10814  005786                     _I2C_2_Master_Write:
 10815                           	callstack 23
 10816                           
 10817                           ;incstack = 0
 10818                           ;I2C_2_Master_Write@data_byte stored from wreg
 10819  005786  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
 10820  005788                     
 10821                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10822  005788  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10823  00578C                     
 10824                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10825  00578C  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10826  005790  0012               	return		;funcret
 10827  005792                     __end_of_I2C_2_Master_Write:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function _I2C_2_Master_Stop *****************
 10831 ;; Defined at:
 10832 ;;		line 39 in file "i2c.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;		None
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0, cstack
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; Hardware stack levels required when called: 3
 10853 ;; This function calls:
 10854 ;;		_I2C_2_Master_Idle
 10855 ;; This function is called by:
 10856 ;;		_color_writetoaddr
 10857 ;;		_color_read_Red
 10858 ;;		_color_read_Blue
 10859 ;;		_color_read_Green
 10860 ;;		_color_read_Clear
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text55
 10865  0057A8                     __ptext55:
 10866                           	callstack 0
 10867  0057A8                     _I2C_2_Master_Stop:
 10868                           	callstack 23
 10869  0057A8                     
 10870                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10871  0057A8  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10872  0057AC                     
 10873                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10874  0057AC  010E               	movlb	14	; () banked
 10875  0057AE  85DA               	bsf	218,2,b	;volatile
 10876  0057B0                     
 10877                           ; BSR set to: 14
 10878  0057B0  0012               	return		;funcret
 10879  0057B2                     __end_of_I2C_2_Master_Stop:
 10880                           	callstack 0
 10881                           
 10882 ;; *************** function _I2C_2_Master_Start *****************
 10883 ;; Defined at:
 10884 ;;		line 27 in file "i2c.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, status,2, status,0, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used: 1
 10904 ;; Hardware stack levels required when called: 3
 10905 ;; This function calls:
 10906 ;;		_I2C_2_Master_Idle
 10907 ;; This function is called by:
 10908 ;;		_color_writetoaddr
 10909 ;;		_color_read_Red
 10910 ;;		_color_read_Blue
 10911 ;;		_color_read_Green
 10912 ;;		_color_read_Clear
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text56
 10917  0057B2                     __ptext56:
 10918                           	callstack 0
 10919  0057B2                     _I2C_2_Master_Start:
 10920                           	callstack 23
 10921  0057B2                     
 10922                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10923  0057B2  ECF7  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10924  0057B6                     
 10925                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10926  0057B6  010E               	movlb	14	; () banked
 10927  0057B8  81DA               	bsf	218,0,b	;volatile
 10928  0057BA                     
 10929                           ; BSR set to: 14
 10930  0057BA  0012               	return		;funcret
 10931  0057BC                     __end_of_I2C_2_Master_Start:
 10932                           	callstack 0
 10933                           
 10934 ;; *************** function _I2C_2_Master_Idle *****************
 10935 ;; Defined at:
 10936 ;;		line 22 in file "i2c.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;		None
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;		None
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		wreg, status,2, status,0
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;Total ram usage:        1 bytes
 10955 ;; Hardware stack levels used: 1
 10956 ;; Hardware stack levels required when called: 2
 10957 ;; This function calls:
 10958 ;;		Nothing
 10959 ;; This function is called by:
 10960 ;;		_I2C_2_Master_Start
 10961 ;;		_I2C_2_Master_RepStart
 10962 ;;		_I2C_2_Master_Stop
 10963 ;;		_I2C_2_Master_Write
 10964 ;;		_I2C_2_Master_Read
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text57
 10969  0055EE                     __ptext57:
 10970                           	callstack 0
 10971  0055EE                     _I2C_2_Master_Idle:
 10972                           	callstack 23
 10973  0055EE                     l250:
 10974  0055EE  010E               	movlb	14	; () banked
 10975  0055F0  B5D8               	btfsc	216,2,b	;volatile
 10976  0055F2  EFFD  F02A         	goto	u6131
 10977  0055F6  EFFF  F02A         	goto	u6130
 10978  0055FA                     u6131:
 10979  0055FA  EFF7  F02A         	goto	l250
 10980  0055FE                     u6130:
 10981  0055FE                     
 10982                           ; BSR set to: 14
 10983  0055FE  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10984  005602  0E1F               	movlw	31
 10985  005604  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
 10986  005606  A4D8               	btfss	status,2,c
 10987  005608  EF08  F02B         	goto	u6141
 10988  00560C  EF0A  F02B         	goto	u6140
 10989  005610                     u6141:
 10990  005610  EFF7  F02A         	goto	l250
 10991  005614                     u6140:
 10992  005614                     
 10993                           ; BSR set to: 14
 10994  005614  0012               	return		;funcret
 10995  005616                     __end_of_I2C_2_Master_Idle:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _I2C_2_Master_Init *****************
 10999 ;; Defined at:
 11000 ;;		line 4 in file "i2c.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; Hardware stack levels required when called: 2
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_color_click_init
 11025 ;;		_main
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text58
 11030  0055C4                     __ptext58:
 11031                           	callstack 0
 11032  0055C4                     _I2C_2_Master_Init:
 11033                           	callstack 27
 11034  0055C4                     
 11035                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11036  0055C4  010E               	movlb	14	; () banked
 11037  0055C6  51D9               	movf	217,w,b	;volatile
 11038  0055C8  0BF0               	andlw	-16
 11039  0055CA  0908               	iorlw	8
 11040  0055CC  6FD9               	movwf	217,b	;volatile
 11041  0055CE                     
 11042                           ; BSR set to: 14
 11043                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11044  0055CE  8BD9               	bsf	217,5,b	;volatile
 11045                           
 11046                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11047  0055D0  0E9F               	movlw	159
 11048  0055D2  6FD6               	movwf	214,b	;volatile
 11049  0055D4                     
 11050                           ; BSR set to: 14
 11051                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11052  0055D4  8A84               	bsf	132,5,c	;volatile
 11053  0055D6                     
 11054                           ; BSR set to: 14
 11055                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11056  0055D6  8C84               	bsf	132,6,c	;volatile
 11057  0055D8                     
 11058                           ; BSR set to: 14
 11059                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11060  0055D8  9BA7               	bcf	167,5,b	;volatile
 11061  0055DA                     
 11062                           ; BSR set to: 14
 11063                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11064  0055DA  9DA7               	bcf	167,6,b	;volatile
 11065                           
 11066                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11067  0055DC  0E1D               	movlw	29
 11068  0055DE  6F1D               	movwf	29,b	;volatile
 11069                           
 11070                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11071  0055E0  0E1E               	movlw	30
 11072  0055E2  6F1C               	movwf	28,b	;volatile
 11073                           
 11074                           ;i2c.c: 18:   RD5PPS=0x1C;
 11075  0055E4  0E1C               	movlw	28
 11076  0055E6  6F6F               	movwf	111,b	;volatile
 11077                           
 11078                           ;i2c.c: 19:   RD6PPS=0x1B;
 11079  0055E8  0E1B               	movlw	27
 11080  0055EA  6F70               	movwf	112,b	;volatile
 11081  0055EC                     
 11082                           ; BSR set to: 14
 11083  0055EC  0012               	return		;funcret
 11084  0055EE                     __end_of_I2C_2_Master_Init:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _buggylight_init *****************
 11088 ;; Defined at:
 11089 ;;		line 12 in file "color.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;		None
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;		None
 11094 ;; Return value:  Size  Location     Type
 11095 ;;                  1    wreg      void 
 11096 ;; Registers used:
 11097 ;;		None
 11098 ;; Tracked objects:
 11099 ;;		On entry : 0/0
 11100 ;;		On exit  : 0/0
 11101 ;;		Unchanged: 0/0
 11102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11107 ;;Total ram usage:        0 bytes
 11108 ;; Hardware stack levels used: 1
 11109 ;; Hardware stack levels required when called: 2
 11110 ;; This function calls:
 11111 ;;		Nothing
 11112 ;; This function is called by:
 11113 ;;		_main
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           	psect	text59
 11118  005770                     __ptext59:
 11119                           	callstack 0
 11120  005770                     _buggylight_init:
 11121                           	callstack 28
 11122  005770                     
 11123                           ;color.c: 14:     TRISHbits.TRISH1=0;
 11124  005770  9288               	bcf	136,1,c	;volatile
 11125                           
 11126                           ;color.c: 15:     TRISDbits.TRISD4=0;
 11127  005772  9884               	bcf	132,4,c	;volatile
 11128                           
 11129                           ;color.c: 16:     TRISDbits.TRISD3=0;
 11130  005774  9684               	bcf	132,3,c	;volatile
 11131                           
 11132                           ;color.c: 17:     TRISFbits.TRISF0=0;
 11133  005776  9086               	bcf	134,0,c	;volatile
 11134                           
 11135                           ;color.c: 18:     TRISHbits.TRISH0=0;
 11136  005778  9088               	bcf	136,0,c	;volatile
 11137                           
 11138                           ;color.c: 20:     LATHbits.LATH1 = 0;
 11139  00577A  9280               	bcf	128,1,c	;volatile
 11140                           
 11141                           ;color.c: 21:     LATDbits.LATD4 = 0;
 11142  00577C  987C               	bcf	124,4,c	;volatile
 11143                           
 11144                           ;color.c: 22:     LATDbits.LATD3 = 0;
 11145  00577E  967C               	bcf	124,3,c	;volatile
 11146                           
 11147                           ;color.c: 23:     LATFbits.LATF0 = 0;
 11148  005780  907E               	bcf	126,0,c	;volatile
 11149                           
 11150                           ;color.c: 24:     LATHbits.LATH0 = 0;
 11151  005782  9080               	bcf	128,0,c	;volatile
 11152  005784  0012               	return		;funcret
 11153  005786                     __end_of_buggylight_init:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function _action *****************
 11157 ;; Defined at:
 11158 ;;		line 19 in file "movement.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  color           1    wreg     unsigned char 
 11161 ;;  mL              2   59[COMRAM] PTR struct DC_motor
 11162 ;;		 -> main@motorL(10), 
 11163 ;;  mR              2   61[COMRAM] PTR struct DC_motor
 11164 ;;		 -> main@motorR(10), 
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  color           1   65[COMRAM] unsigned char 
 11167 ;; Return value:  Size  Location     Type
 11168 ;;                  1    wreg      void 
 11169 ;; Registers used:
 11170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11179 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;Total ram usage:        7 bytes
 11181 ;; Hardware stack levels used: 1
 11182 ;; Hardware stack levels required when called: 8
 11183 ;; This function calls:
 11184 ;;		_goback
 11185 ;;		_reverse_square
 11186 ;;		_short_reverse
 11187 ;;		_stop
 11188 ;;		_turnLeft
 11189 ;;		_turnRight
 11190 ;; This function is called by:
 11191 ;;		_main
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text60
 11196  00298C                     __ptext60:
 11197                           	callstack 0
 11198  00298C                     _action:
 11199                           	callstack 22
 11200                           
 11201                           ;incstack = 0
 11202                           ;action@color stored from wreg
 11203  00298C  6E42               	movwf	action@color^0,c
 11204  00298E                     
 11205                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: { T0CON0bits.T0EN=1;
 11206  00298E  8ED5               	bsf	213,7,c	;volatile
 11207                           
 11208                           ;movement.c: 21:     start_move = second;
 11209  002990  C19A  F198         	movff	_second,_start_move
 11210  002994  C19B  F199         	movff	_second+1,_start_move+1
 11211  002998                     
 11212                           ;movement.c: 23:     if (color != 0){
 11213  002998  5042               	movf	action@color^0,w,c
 11214  00299A  B4D8               	btfsc	status,2,c
 11215  00299C  EFD2  F014         	goto	u8281
 11216  0029A0  EFD4  F014         	goto	u8280
 11217  0029A4                     u8281:
 11218  0029A4  EF47  F016         	goto	l691
 11219  0029A8                     u8280:
 11220  0029A8                     
 11221                           ;movement.c: 24:         T0CON0bits.T0EN=0;
 11222  0029A8  9ED5               	bcf	213,7,c	;volatile
 11223                           
 11224                           ;movement.c: 25:         stop_move = second;
 11225  0029AA  C19A  F196         	movff	_second,_stop_move
 11226  0029AE  C19B  F197         	movff	_second+1,_stop_move+1
 11227  0029B2                     
 11228                           ;movement.c: 26:         memory[array_index] = (start_move-stop_move);
 11229  0029B2  0101               	movlb	1	; () banked
 11230  0029B4  5196               	movf	_stop_move& (0+255),w,b
 11231  0029B6  5D98               	subwf	_start_move& (0+255),w,b
 11232  0029B8  6E40               	movwf	??_action^0,c
 11233  0029BA  5197               	movf	(_stop_move+1)& (0+255),w,b
 11234  0029BC  5999               	subwfb	(_start_move+1)& (0+255),w,b
 11235  0029BE  6E41               	movwf	(??_action+1)^0,c
 11236  0029C0  505A               	movf	_array_index^0,w,c
 11237  0029C2  0D02               	mullw	2
 11238  0029C4  0E3C               	movlw	low _memory
 11239  0029C6  24F3               	addwf	243,w,c
 11240  0029C8  6ED9               	movwf	fsr2l,c
 11241  0029CA  0E01               	movlw	high _memory
 11242  0029CC  20F4               	addwfc	prodh,w,c
 11243  0029CE  6EDA               	movwf	fsr2h,c
 11244  0029D0  C040  FFDE         	movff	??_action,postinc2
 11245  0029D4  C041  FFDD         	movff	??_action+1,postdec2
 11246  0029D8                     
 11247                           ; BSR set to: 1
 11248                           ;movement.c: 27:         array_index++;
 11249  0029D8  2A5A               	incf	_array_index^0,f,c
 11250  0029DA                     
 11251                           ; BSR set to: 1
 11252                           ;movement.c: 28:         stop(mL,mR);
 11253  0029DA  C03C  F01C         	movff	action@mL,stop@mL
 11254  0029DE  C03D  F01D         	movff	action@mL+1,stop@mL+1
 11255  0029E2  C03E  F01E         	movff	action@mR,stop@mR
 11256  0029E6  C03F  F01F         	movff	action@mR+1,stop@mR+1
 11257  0029EA  EC7C  F026         	call	_stop	;wreg free
 11258  0029EE                     
 11259                           ;movement.c: 29:         if (color == 1){
 11260  0029EE  0442               	decf	action@color^0,w,c
 11261  0029F0  A4D8               	btfss	status,2,c
 11262  0029F2  EFFD  F014         	goto	u8291
 11263  0029F6  EFFF  F014         	goto	u8290
 11264  0029FA                     u8291:
 11265  0029FA  EF22  F015         	goto	l7282
 11266  0029FE                     u8290:
 11267  0029FE                     
 11268                           ;movement.c: 30:             short_reverse(mL,mR);
 11269  0029FE  C03C  F028         	movff	action@mL,short_reverse@mL
 11270  002A02  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11271  002A06  C03E  F02A         	movff	action@mR,short_reverse@mR
 11272  002A0A  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11273  002A0E  ECC6  F029         	call	_short_reverse	;wreg free
 11274                           
 11275                           ;movement.c: 31:             turnRight(mL,mR,90);
 11276  002A12  C03C  F022         	movff	action@mL,turnRight@mL
 11277  002A16  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11278  002A1A  C03E  F024         	movff	action@mR,turnRight@mR
 11279  002A1E  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11280  002A22  0E5A               	movlw	90
 11281  002A24  6E26               	movwf	turnRight@angle_right^0,c
 11282  002A26  EC5B  F020         	call	_turnRight	;wreg free
 11283  002A2A                     
 11284                           ;movement.c: 32:             memory[array_index] = 1;
 11285  002A2A  505A               	movf	_array_index^0,w,c
 11286  002A2C  0D02               	mullw	2
 11287  002A2E  0E3C               	movlw	low _memory
 11288  002A30  24F3               	addwf	243,w,c
 11289  002A32  6ED9               	movwf	fsr2l,c
 11290  002A34  0E01               	movlw	high _memory
 11291  002A36  20F4               	addwfc	prodh,w,c
 11292  002A38  6EDA               	movwf	fsr2h,c
 11293  002A3A  0E01               	movlw	1
 11294  002A3C  6EDE               	movwf	postinc2,c
 11295  002A3E  0E00               	movlw	0
 11296  002A40  6EDD               	movwf	postdec2,c
 11297  002A42                     
 11298                           ;movement.c: 33:             array_index++;
 11299  002A42  2A5A               	incf	_array_index^0,f,c
 11300  002A44                     l7282:
 11301                           
 11302                           ;movement.c: 35:         if (color == 2){
 11303  002A44  0E02               	movlw	2
 11304  002A46  1842               	xorwf	action@color^0,w,c
 11305  002A48  A4D8               	btfss	status,2,c
 11306  002A4A  EF29  F015         	goto	u8301
 11307  002A4E  EF2B  F015         	goto	u8300
 11308  002A52                     u8301:
 11309  002A52  EF4E  F015         	goto	l7290
 11310  002A56                     u8300:
 11311  002A56                     
 11312                           ;movement.c: 36:             short_reverse(mL,mR);
 11313  002A56  C03C  F028         	movff	action@mL,short_reverse@mL
 11314  002A5A  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11315  002A5E  C03E  F02A         	movff	action@mR,short_reverse@mR
 11316  002A62  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11317  002A66  ECC6  F029         	call	_short_reverse	;wreg free
 11318                           
 11319                           ;movement.c: 37:             turnLeft(mL,mR,90);
 11320  002A6A  C03C  F022         	movff	action@mL,turnLeft@mL
 11321  002A6E  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11322  002A72  C03E  F024         	movff	action@mR,turnLeft@mR
 11323  002A76  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11324  002A7A  0E5A               	movlw	90
 11325  002A7C  6E26               	movwf	turnLeft@angle_left^0,c
 11326  002A7E  EC1B  F021         	call	_turnLeft	;wreg free
 11327  002A82                     
 11328                           ;movement.c: 38:             memory[array_index] = 2;
 11329  002A82  505A               	movf	_array_index^0,w,c
 11330  002A84  0D02               	mullw	2
 11331  002A86  0E3C               	movlw	low _memory
 11332  002A88  24F3               	addwf	243,w,c
 11333  002A8A  6ED9               	movwf	fsr2l,c
 11334  002A8C  0E01               	movlw	high _memory
 11335  002A8E  20F4               	addwfc	prodh,w,c
 11336  002A90  6EDA               	movwf	fsr2h,c
 11337  002A92  0E02               	movlw	2
 11338  002A94  6EDE               	movwf	postinc2,c
 11339  002A96  0E00               	movlw	0
 11340  002A98  6EDD               	movwf	postdec2,c
 11341  002A9A                     
 11342                           ;movement.c: 39:             array_index++;
 11343  002A9A  2A5A               	incf	_array_index^0,f,c
 11344  002A9C                     l7290:
 11345                           
 11346                           ;movement.c: 41:         if (color == 3){
 11347  002A9C  0E03               	movlw	3
 11348  002A9E  1842               	xorwf	action@color^0,w,c
 11349  002AA0  A4D8               	btfss	status,2,c
 11350  002AA2  EF55  F015         	goto	u8311
 11351  002AA6  EF57  F015         	goto	u8310
 11352  002AAA                     u8311:
 11353  002AAA  EF7A  F015         	goto	l7298
 11354  002AAE                     u8310:
 11355  002AAE                     
 11356                           ;movement.c: 42:             short_reverse(mL,mR);
 11357  002AAE  C03C  F028         	movff	action@mL,short_reverse@mL
 11358  002AB2  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11359  002AB6  C03E  F02A         	movff	action@mR,short_reverse@mR
 11360  002ABA  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11361  002ABE  ECC6  F029         	call	_short_reverse	;wreg free
 11362                           
 11363                           ;movement.c: 43:             turnLeft(mL,mR,180);
 11364  002AC2  C03C  F022         	movff	action@mL,turnLeft@mL
 11365  002AC6  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11366  002ACA  C03E  F024         	movff	action@mR,turnLeft@mR
 11367  002ACE  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11368  002AD2  0EB4               	movlw	180
 11369  002AD4  6E26               	movwf	turnLeft@angle_left^0,c
 11370  002AD6  EC1B  F021         	call	_turnLeft	;wreg free
 11371  002ADA                     
 11372                           ;movement.c: 44:             memory[array_index] = 3;
 11373  002ADA  505A               	movf	_array_index^0,w,c
 11374  002ADC  0D02               	mullw	2
 11375  002ADE  0E3C               	movlw	low _memory
 11376  002AE0  24F3               	addwf	243,w,c
 11377  002AE2  6ED9               	movwf	fsr2l,c
 11378  002AE4  0E01               	movlw	high _memory
 11379  002AE6  20F4               	addwfc	prodh,w,c
 11380  002AE8  6EDA               	movwf	fsr2h,c
 11381  002AEA  0E03               	movlw	3
 11382  002AEC  6EDE               	movwf	postinc2,c
 11383  002AEE  0E00               	movlw	0
 11384  002AF0  6EDD               	movwf	postdec2,c
 11385  002AF2                     
 11386                           ;movement.c: 45:             array_index++;
 11387  002AF2  2A5A               	incf	_array_index^0,f,c
 11388  002AF4                     l7298:
 11389                           
 11390                           ;movement.c: 47:         if (color == 4){
 11391  002AF4  0E04               	movlw	4
 11392  002AF6  1842               	xorwf	action@color^0,w,c
 11393  002AF8  A4D8               	btfss	status,2,c
 11394  002AFA  EF81  F015         	goto	u8321
 11395  002AFE  EF83  F015         	goto	u8320
 11396  002B02                     u8321:
 11397  002B02  EFA6  F015         	goto	l7306
 11398  002B06                     u8320:
 11399  002B06                     
 11400                           ;movement.c: 48:             reverse_square(mL,mR);
 11401  002B06  C03C  F028         	movff	action@mL,reverse_square@mL
 11402  002B0A  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11403  002B0E  C03E  F02A         	movff	action@mR,reverse_square@mR
 11404  002B12  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11405  002B16  ECE7  F029         	call	_reverse_square	;wreg free
 11406                           
 11407                           ;movement.c: 49:             turnRight(mL,mR,90);
 11408  002B1A  C03C  F022         	movff	action@mL,turnRight@mL
 11409  002B1E  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11410  002B22  C03E  F024         	movff	action@mR,turnRight@mR
 11411  002B26  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11412  002B2A  0E5A               	movlw	90
 11413  002B2C  6E26               	movwf	turnRight@angle_right^0,c
 11414  002B2E  EC5B  F020         	call	_turnRight	;wreg free
 11415  002B32                     
 11416                           ;movement.c: 50:             memory[array_index] = 4;
 11417  002B32  505A               	movf	_array_index^0,w,c
 11418  002B34  0D02               	mullw	2
 11419  002B36  0E3C               	movlw	low _memory
 11420  002B38  24F3               	addwf	243,w,c
 11421  002B3A  6ED9               	movwf	fsr2l,c
 11422  002B3C  0E01               	movlw	high _memory
 11423  002B3E  20F4               	addwfc	prodh,w,c
 11424  002B40  6EDA               	movwf	fsr2h,c
 11425  002B42  0E04               	movlw	4
 11426  002B44  6EDE               	movwf	postinc2,c
 11427  002B46  0E00               	movlw	0
 11428  002B48  6EDD               	movwf	postdec2,c
 11429  002B4A                     
 11430                           ;movement.c: 51:             array_index++;
 11431  002B4A  2A5A               	incf	_array_index^0,f,c
 11432  002B4C                     l7306:
 11433                           
 11434                           ;movement.c: 53:         if (color == 5){
 11435  002B4C  0E05               	movlw	5
 11436  002B4E  1842               	xorwf	action@color^0,w,c
 11437  002B50  A4D8               	btfss	status,2,c
 11438  002B52  EFAD  F015         	goto	u8331
 11439  002B56  EFAF  F015         	goto	u8330
 11440  002B5A                     u8331:
 11441  002B5A  EFD2  F015         	goto	l7314
 11442  002B5E                     u8330:
 11443  002B5E                     
 11444                           ;movement.c: 54:             reverse_square(mL,mR);
 11445  002B5E  C03C  F028         	movff	action@mL,reverse_square@mL
 11446  002B62  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11447  002B66  C03E  F02A         	movff	action@mR,reverse_square@mR
 11448  002B6A  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11449  002B6E  ECE7  F029         	call	_reverse_square	;wreg free
 11450                           
 11451                           ;movement.c: 55:             turnLeft(mL,mR,90);
 11452  002B72  C03C  F022         	movff	action@mL,turnLeft@mL
 11453  002B76  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11454  002B7A  C03E  F024         	movff	action@mR,turnLeft@mR
 11455  002B7E  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11456  002B82  0E5A               	movlw	90
 11457  002B84  6E26               	movwf	turnLeft@angle_left^0,c
 11458  002B86  EC1B  F021         	call	_turnLeft	;wreg free
 11459  002B8A                     
 11460                           ;movement.c: 56:             memory[array_index] = 5;
 11461  002B8A  505A               	movf	_array_index^0,w,c
 11462  002B8C  0D02               	mullw	2
 11463  002B8E  0E3C               	movlw	low _memory
 11464  002B90  24F3               	addwf	243,w,c
 11465  002B92  6ED9               	movwf	fsr2l,c
 11466  002B94  0E01               	movlw	high _memory
 11467  002B96  20F4               	addwfc	prodh,w,c
 11468  002B98  6EDA               	movwf	fsr2h,c
 11469  002B9A  0E05               	movlw	5
 11470  002B9C  6EDE               	movwf	postinc2,c
 11471  002B9E  0E00               	movlw	0
 11472  002BA0  6EDD               	movwf	postdec2,c
 11473  002BA2                     
 11474                           ;movement.c: 57:             array_index++;
 11475  002BA2  2A5A               	incf	_array_index^0,f,c
 11476  002BA4                     l7314:
 11477                           
 11478                           ;movement.c: 59:         if (color == 6){
 11479  002BA4  0E06               	movlw	6
 11480  002BA6  1842               	xorwf	action@color^0,w,c
 11481  002BA8  A4D8               	btfss	status,2,c
 11482  002BAA  EFD9  F015         	goto	u8341
 11483  002BAE  EFDB  F015         	goto	u8340
 11484  002BB2                     u8341:
 11485  002BB2  EFFE  F015         	goto	l7322
 11486  002BB6                     u8340:
 11487  002BB6                     
 11488                           ;movement.c: 60:             short_reverse(mL,mR);
 11489  002BB6  C03C  F028         	movff	action@mL,short_reverse@mL
 11490  002BBA  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11491  002BBE  C03E  F02A         	movff	action@mR,short_reverse@mR
 11492  002BC2  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11493  002BC6  ECC6  F029         	call	_short_reverse	;wreg free
 11494                           
 11495                           ;movement.c: 61:             turnRight(mL,mR,135);
 11496  002BCA  C03C  F022         	movff	action@mL,turnRight@mL
 11497  002BCE  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11498  002BD2  C03E  F024         	movff	action@mR,turnRight@mR
 11499  002BD6  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11500  002BDA  0E87               	movlw	135
 11501  002BDC  6E26               	movwf	turnRight@angle_right^0,c
 11502  002BDE  EC5B  F020         	call	_turnRight	;wreg free
 11503  002BE2                     
 11504                           ;movement.c: 62:             memory[array_index] = 6;
 11505  002BE2  505A               	movf	_array_index^0,w,c
 11506  002BE4  0D02               	mullw	2
 11507  002BE6  0E3C               	movlw	low _memory
 11508  002BE8  24F3               	addwf	243,w,c
 11509  002BEA  6ED9               	movwf	fsr2l,c
 11510  002BEC  0E01               	movlw	high _memory
 11511  002BEE  20F4               	addwfc	prodh,w,c
 11512  002BF0  6EDA               	movwf	fsr2h,c
 11513  002BF2  0E06               	movlw	6
 11514  002BF4  6EDE               	movwf	postinc2,c
 11515  002BF6  0E00               	movlw	0
 11516  002BF8  6EDD               	movwf	postdec2,c
 11517  002BFA                     
 11518                           ;movement.c: 63:             array_index++;
 11519  002BFA  2A5A               	incf	_array_index^0,f,c
 11520  002BFC                     l7322:
 11521                           
 11522                           ;movement.c: 65:         if (color == 7){
 11523  002BFC  0E07               	movlw	7
 11524  002BFE  1842               	xorwf	action@color^0,w,c
 11525  002C00  A4D8               	btfss	status,2,c
 11526  002C02  EF05  F016         	goto	u8351
 11527  002C06  EF07  F016         	goto	u8350
 11528  002C0A                     u8351:
 11529  002C0A  EF2A  F016         	goto	l7330
 11530  002C0E                     u8350:
 11531  002C0E                     
 11532                           ;movement.c: 66:             short_reverse(mL,mR);
 11533  002C0E  C03C  F028         	movff	action@mL,short_reverse@mL
 11534  002C12  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11535  002C16  C03E  F02A         	movff	action@mR,short_reverse@mR
 11536  002C1A  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11537  002C1E  ECC6  F029         	call	_short_reverse	;wreg free
 11538                           
 11539                           ;movement.c: 67:             turnLeft(mL,mR,135);
 11540  002C22  C03C  F022         	movff	action@mL,turnLeft@mL
 11541  002C26  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11542  002C2A  C03E  F024         	movff	action@mR,turnLeft@mR
 11543  002C2E  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11544  002C32  0E87               	movlw	135
 11545  002C34  6E26               	movwf	turnLeft@angle_left^0,c
 11546  002C36  EC1B  F021         	call	_turnLeft	;wreg free
 11547  002C3A                     
 11548                           ;movement.c: 68:             memory[array_index] = 7;
 11549  002C3A  505A               	movf	_array_index^0,w,c
 11550  002C3C  0D02               	mullw	2
 11551  002C3E  0E3C               	movlw	low _memory
 11552  002C40  24F3               	addwf	243,w,c
 11553  002C42  6ED9               	movwf	fsr2l,c
 11554  002C44  0E01               	movlw	high _memory
 11555  002C46  20F4               	addwfc	prodh,w,c
 11556  002C48  6EDA               	movwf	fsr2h,c
 11557  002C4A  0E07               	movlw	7
 11558  002C4C  6EDE               	movwf	postinc2,c
 11559  002C4E  0E00               	movlw	0
 11560  002C50  6EDD               	movwf	postdec2,c
 11561  002C52                     
 11562                           ;movement.c: 69:             array_index++;
 11563  002C52  2A5A               	incf	_array_index^0,f,c
 11564  002C54                     l7330:
 11565                           
 11566                           ;movement.c: 71:         if (color == 8){
 11567  002C54  0E08               	movlw	8
 11568  002C56  1842               	xorwf	action@color^0,w,c
 11569  002C58  A4D8               	btfss	status,2,c
 11570  002C5A  EF31  F016         	goto	u8361
 11571  002C5E  EF33  F016         	goto	u8360
 11572  002C62                     u8361:
 11573  002C62  EF47  F016         	goto	l691
 11574  002C66                     u8360:
 11575  002C66                     
 11576                           ;movement.c: 72:             short_reverse(mL,mR);
 11577  002C66  C03C  F028         	movff	action@mL,short_reverse@mL
 11578  002C6A  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11579  002C6E  C03E  F02A         	movff	action@mR,short_reverse@mR
 11580  002C72  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11581  002C76  ECC6  F029         	call	_short_reverse	;wreg free
 11582                           
 11583                           ;movement.c: 73:             goback(mL,mR);
 11584  002C7A  C03C  F034         	movff	action@mL,goback@mL
 11585  002C7E  C03D  F035         	movff	action@mL+1,goback@mL+1
 11586  002C82  C03E  F036         	movff	action@mR,goback@mR
 11587  002C86  C03F  F037         	movff	action@mR+1,goback@mR+1
 11588  002C8A  EC13  F019         	call	_goback	;wreg free
 11589  002C8E                     l691:
 11590  002C8E  0012               	return		;funcret
 11591  002C90                     __end_of_action:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _short_reverse *****************
 11595 ;; Defined at:
 11596 ;;		line 182 in file "dc_motor.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 11599 ;;		 -> main@motorL(10), 
 11600 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 11601 ;;		 -> main@motorR(10), 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11617 ;;Total ram usage:        6 bytes
 11618 ;; Hardware stack levels used: 1
 11619 ;; Hardware stack levels required when called: 6
 11620 ;; This function calls:
 11621 ;;		_fullSpeedBack
 11622 ;;		_stop
 11623 ;; This function is called by:
 11624 ;;		_action
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text61
 11629  00538C                     __ptext61:
 11630                           	callstack 0
 11631  00538C                     _short_reverse:
 11632                           	callstack 23
 11633  00538C                     
 11634                           ;dc_motor.c: 182: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 183: { fullSpeedBack(mL, mR);
 11635  00538C  C028  F022         	movff	short_reverse@mL,fullSpeedBack@mL
 11636  005390  C029  F023         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 11637  005394  C02A  F024         	movff	short_reverse@mR,fullSpeedBack@mR
 11638  005398  C02B  F025         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 11639  00539C  EC1C  F026         	call	_fullSpeedBack	;wreg free
 11640  0053A0                     
 11641                           ;dc_motor.c: 184:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11642  0053A0  0E29               	movlw	41
 11643  0053A2  6E2D               	movwf	(??_short_reverse+1)^0,c
 11644  0053A4  0E96               	movlw	150
 11645  0053A6  6E2C               	movwf	??_short_reverse^0,c
 11646  0053A8  0E7F               	movlw	127
 11647  0053AA                     u8807:
 11648  0053AA  2EE8               	decfsz	wreg,f,c
 11649  0053AC  D7FE               	bra	u8807
 11650  0053AE  2E2C               	decfsz	??_short_reverse^0,f,c
 11651  0053B0  D7FC               	bra	u8807
 11652  0053B2  2E2D               	decfsz	(??_short_reverse+1)^0,f,c
 11653  0053B4  D7FA               	bra	u8807
 11654  0053B6  F000               	nop	
 11655  0053B8                     
 11656                           ;dc_motor.c: 185:     stop(mL,mR);
 11657  0053B8  C028  F01C         	movff	short_reverse@mL,stop@mL
 11658  0053BC  C029  F01D         	movff	short_reverse@mL+1,stop@mL+1
 11659  0053C0  C02A  F01E         	movff	short_reverse@mR,stop@mR
 11660  0053C4  C02B  F01F         	movff	short_reverse@mR+1,stop@mR+1
 11661  0053C8  EC7C  F026         	call	_stop	;wreg free
 11662  0053CC  0012               	return		;funcret
 11663  0053CE                     __end_of_short_reverse:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function _goback *****************
 11667 ;; Defined at:
 11668 ;;		line 114 in file "movement.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  mL              2   51[COMRAM] PTR struct DC_motor
 11671 ;;		 -> main@motorL(10), 
 11672 ;;  mR              2   53[COMRAM] PTR struct DC_motor
 11673 ;;		 -> main@motorR(10), 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  i               2   57[COMRAM] unsigned int 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      void 
 11678 ;; Registers used:
 11679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11688 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11689 ;;Total ram usage:        8 bytes
 11690 ;; Hardware stack levels used: 1
 11691 ;; Hardware stack levels required when called: 7
 11692 ;; This function calls:
 11693 ;;		_fullSpeedAhead
 11694 ;;		_reverse_square
 11695 ;;		_stop
 11696 ;;		_turnLeft
 11697 ;;		_turnRight
 11698 ;; This function is called by:
 11699 ;;		_action
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text62
 11704  003226                     __ptext62:
 11705                           	callstack 0
 11706  003226                     _goback:
 11707                           	callstack 22
 11708  003226                     
 11709                           ;movement.c: 114: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 115:
      +                           { turnLeft(mL,mR,180);
 11710  003226  C034  F022         	movff	goback@mL,turnLeft@mL
 11711  00322A  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11712  00322E  C036  F024         	movff	goback@mR,turnLeft@mR
 11713  003232  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11714  003236  0EB4               	movlw	180
 11715  003238  6E26               	movwf	turnLeft@angle_left^0,c
 11716  00323A  EC1B  F021         	call	_turnLeft	;wreg free
 11717                           
 11718                           ;movement.c: 116:     while(array_index > 0){
 11719  00323E  EF53  F01A         	goto	l7172
 11720  003242                     l7112:
 11721                           
 11722                           ;movement.c: 117:         fullSpeedAhead(mL,mR);
 11723  003242  C034  F01C         	movff	goback@mL,fullSpeedAhead@mL
 11724  003246  C035  F01D         	movff	goback@mL+1,fullSpeedAhead@mL+1
 11725  00324A  C036  F01E         	movff	goback@mR,fullSpeedAhead@mR
 11726  00324E  C037  F01F         	movff	goback@mR+1,fullSpeedAhead@mR+1
 11727  003252  EC32  F027         	call	_fullSpeedAhead	;wreg free
 11728  003256                     
 11729                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 11730  003256  0E00               	movlw	0
 11731  003258  6E3B               	movwf	(goback@i+1)^0,c
 11732  00325A  0E00               	movlw	0
 11733  00325C  6E3A               	movwf	goback@i^0,c
 11734  00325E  EF3F  F019         	goto	l7120
 11735  003262                     l7116:
 11736  003262  0E52               	movlw	82
 11737  003264  6E39               	movwf	(??_goback+1)^0,c
 11738  003266  0E2B               	movlw	43
 11739  003268  6E38               	movwf	??_goback^0,c
 11740  00326A  0E00               	movlw	0
 11741  00326C                     u8817:
 11742  00326C  2EE8               	decfsz	wreg,f,c
 11743  00326E  D7FE               	bra	u8817
 11744  003270  2E38               	decfsz	??_goback^0,f,c
 11745  003272  D7FC               	bra	u8817
 11746  003274  2E39               	decfsz	(??_goback+1)^0,f,c
 11747  003276  D7FA               	bra	u8817
 11748  003278  D000               	nop2	
 11749  00327A  4A3A               	infsnz	goback@i^0,f,c
 11750  00327C  2A3B               	incf	(goback@i+1)^0,f,c
 11751  00327E                     l7120:
 11752  00327E  505A               	movf	_array_index^0,w,c
 11753  003280  0D02               	mullw	2
 11754  003282  0E3C               	movlw	low _memory
 11755  003284  24F3               	addwf	243,w,c
 11756  003286  6ED9               	movwf	fsr2l,c
 11757  003288  0E01               	movlw	high _memory
 11758  00328A  20F4               	addwfc	prodh,w,c
 11759  00328C  6EDA               	movwf	fsr2h,c
 11760  00328E  50DE               	movf	postinc2,w,c
 11761  003290  5C3A               	subwf	goback@i^0,w,c
 11762  003292  50DE               	movf	postinc2,w,c
 11763  003294  583B               	subwfb	(goback@i+1)^0,w,c
 11764  003296  A0D8               	btfss	status,0,c
 11765  003298  EF50  F019         	goto	u8081
 11766  00329C  EF52  F019         	goto	u8080
 11767  0032A0                     u8081:
 11768  0032A0  EF31  F019         	goto	l7116
 11769  0032A4                     u8080:
 11770  0032A4                     
 11771                           ;movement.c: 119:         stop(mL,mR);
 11772  0032A4  C034  F01C         	movff	goback@mL,stop@mL
 11773  0032A8  C035  F01D         	movff	goback@mL+1,stop@mL+1
 11774  0032AC  C036  F01E         	movff	goback@mR,stop@mR
 11775  0032B0  C037  F01F         	movff	goback@mR+1,stop@mR+1
 11776  0032B4  EC7C  F026         	call	_stop	;wreg free
 11777  0032B8                     
 11778                           ;movement.c: 120:         if (array_index == 0){break;}
 11779  0032B8  505A               	movf	_array_index^0,w,c
 11780  0032BA  A4D8               	btfss	status,2,c
 11781  0032BC  EF62  F019         	goto	u8091
 11782  0032C0  EF64  F019         	goto	u8090
 11783  0032C4                     u8091:
 11784  0032C4  EF66  F019         	goto	l7128
 11785  0032C8                     u8090:
 11786  0032C8  EF5B  F01A         	goto	l714
 11787  0032CC                     l7128:
 11788                           
 11789                           ;movement.c: 121:         array_index--;
 11790  0032CC  065A               	decf	_array_index^0,f,c
 11791  0032CE                     
 11792                           ;movement.c: 123:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 11793  0032CE  505A               	movf	_array_index^0,w,c
 11794  0032D0  0D02               	mullw	2
 11795  0032D2  0E3C               	movlw	low _memory
 11796  0032D4  24F3               	addwf	243,w,c
 11797  0032D6  6ED9               	movwf	fsr2l,c
 11798  0032D8  0E01               	movlw	high _memory
 11799  0032DA  20F4               	addwfc	prodh,w,c
 11800  0032DC  6EDA               	movwf	fsr2h,c
 11801  0032DE  04DE               	decf	postinc2,w,c
 11802  0032E0  10DE               	iorwf	postinc2,w,c
 11803  0032E2  A4D8               	btfss	status,2,c
 11804  0032E4  EF76  F019         	goto	u8101
 11805  0032E8  EF78  F019         	goto	u8100
 11806  0032EC                     u8101:
 11807  0032EC  EF85  F019         	goto	l7136
 11808  0032F0                     u8100:
 11809  0032F0  C034  F022         	movff	goback@mL,turnLeft@mL
 11810  0032F4  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11811  0032F8  C036  F024         	movff	goback@mR,turnLeft@mR
 11812  0032FC  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11813  003300  0E5A               	movlw	90
 11814  003302  6E26               	movwf	turnLeft@angle_left^0,c
 11815  003304  EC1B  F021         	call	_turnLeft	;wreg free
 11816  003308  065A               	decf	_array_index^0,f,c
 11817  00330A                     l7136:
 11818                           
 11819                           ;movement.c: 124:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11820  00330A  505A               	movf	_array_index^0,w,c
 11821  00330C  0D02               	mullw	2
 11822  00330E  0E3C               	movlw	low _memory
 11823  003310  24F3               	addwf	243,w,c
 11824  003312  6ED9               	movwf	fsr2l,c
 11825  003314  0E01               	movlw	high _memory
 11826  003316  20F4               	addwfc	prodh,w,c
 11827  003318  6EDA               	movwf	fsr2h,c
 11828  00331A  0E02               	movlw	2
 11829  00331C  18DE               	xorwf	postinc2,w,c
 11830  00331E  10DE               	iorwf	postinc2,w,c
 11831  003320  A4D8               	btfss	status,2,c
 11832  003322  EF95  F019         	goto	u8111
 11833  003326  EF97  F019         	goto	u8110
 11834  00332A                     u8111:
 11835  00332A  EFA4  F019         	goto	l7142
 11836  00332E                     u8110:
 11837  00332E  C034  F022         	movff	goback@mL,turnRight@mL
 11838  003332  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11839  003336  C036  F024         	movff	goback@mR,turnRight@mR
 11840  00333A  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11841  00333E  0E5A               	movlw	90
 11842  003340  6E26               	movwf	turnRight@angle_right^0,c
 11843  003342  EC5B  F020         	call	_turnRight	;wreg free
 11844  003346  065A               	decf	_array_index^0,f,c
 11845  003348                     l7142:
 11846                           
 11847                           ;movement.c: 125:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 11848  003348  505A               	movf	_array_index^0,w,c
 11849  00334A  0D02               	mullw	2
 11850  00334C  0E3C               	movlw	low _memory
 11851  00334E  24F3               	addwf	243,w,c
 11852  003350  6ED9               	movwf	fsr2l,c
 11853  003352  0E01               	movlw	high _memory
 11854  003354  20F4               	addwfc	prodh,w,c
 11855  003356  6EDA               	movwf	fsr2h,c
 11856  003358  0E03               	movlw	3
 11857  00335A  18DE               	xorwf	postinc2,w,c
 11858  00335C  10DE               	iorwf	postinc2,w,c
 11859  00335E  A4D8               	btfss	status,2,c
 11860  003360  EFB4  F019         	goto	u8121
 11861  003364  EFB6  F019         	goto	u8120
 11862  003368                     u8121:
 11863  003368  EFC3  F019         	goto	l7148
 11864  00336C                     u8120:
 11865  00336C  C034  F022         	movff	goback@mL,turnLeft@mL
 11866  003370  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11867  003374  C036  F024         	movff	goback@mR,turnLeft@mR
 11868  003378  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11869  00337C  0EB4               	movlw	180
 11870  00337E  6E26               	movwf	turnLeft@angle_left^0,c
 11871  003380  EC1B  F021         	call	_turnLeft	;wreg free
 11872  003384  065A               	decf	_array_index^0,f,c
 11873  003386                     l7148:
 11874                           
 11875                           ;movement.c: 126:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 11876  003386  505A               	movf	_array_index^0,w,c
 11877  003388  0D02               	mullw	2
 11878  00338A  0E3C               	movlw	low _memory
 11879  00338C  24F3               	addwf	243,w,c
 11880  00338E  6ED9               	movwf	fsr2l,c
 11881  003390  0E01               	movlw	high _memory
 11882  003392  20F4               	addwfc	prodh,w,c
 11883  003394  6EDA               	movwf	fsr2h,c
 11884  003396  0E04               	movlw	4
 11885  003398  18DE               	xorwf	postinc2,w,c
 11886  00339A  10DE               	iorwf	postinc2,w,c
 11887  00339C  A4D8               	btfss	status,2,c
 11888  00339E  EFD3  F019         	goto	u8131
 11889  0033A2  EFD5  F019         	goto	u8130
 11890  0033A6                     u8131:
 11891  0033A6  EFEC  F019         	goto	l7154
 11892  0033AA                     u8130:
 11893  0033AA  C034  F028         	movff	goback@mL,reverse_square@mL
 11894  0033AE  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11895  0033B2  C036  F02A         	movff	goback@mR,reverse_square@mR
 11896  0033B6  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11897  0033BA  ECE7  F029         	call	_reverse_square	;wreg free
 11898  0033BE  C034  F022         	movff	goback@mL,turnLeft@mL
 11899  0033C2  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11900  0033C6  C036  F024         	movff	goback@mR,turnLeft@mR
 11901  0033CA  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11902  0033CE  0E5A               	movlw	90
 11903  0033D0  6E26               	movwf	turnLeft@angle_left^0,c
 11904  0033D2  EC1B  F021         	call	_turnLeft	;wreg free
 11905  0033D6  065A               	decf	_array_index^0,f,c
 11906  0033D8                     l7154:
 11907                           
 11908                           ;movement.c: 127:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 11909  0033D8  505A               	movf	_array_index^0,w,c
 11910  0033DA  0D02               	mullw	2
 11911  0033DC  0E3C               	movlw	low _memory
 11912  0033DE  24F3               	addwf	243,w,c
 11913  0033E0  6ED9               	movwf	fsr2l,c
 11914  0033E2  0E01               	movlw	high _memory
 11915  0033E4  20F4               	addwfc	prodh,w,c
 11916  0033E6  6EDA               	movwf	fsr2h,c
 11917  0033E8  0E05               	movlw	5
 11918  0033EA  18DE               	xorwf	postinc2,w,c
 11919  0033EC  10DE               	iorwf	postinc2,w,c
 11920  0033EE  A4D8               	btfss	status,2,c
 11921  0033F0  EFFC  F019         	goto	u8141
 11922  0033F4  EFFE  F019         	goto	u8140
 11923  0033F8                     u8141:
 11924  0033F8  EF15  F01A         	goto	l7160
 11925  0033FC                     u8140:
 11926  0033FC  C034  F028         	movff	goback@mL,reverse_square@mL
 11927  003400  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11928  003404  C036  F02A         	movff	goback@mR,reverse_square@mR
 11929  003408  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11930  00340C  ECE7  F029         	call	_reverse_square	;wreg free
 11931  003410  C034  F022         	movff	goback@mL,turnRight@mL
 11932  003414  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11933  003418  C036  F024         	movff	goback@mR,turnRight@mR
 11934  00341C  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11935  003420  0E5A               	movlw	90
 11936  003422  6E26               	movwf	turnRight@angle_right^0,c
 11937  003424  EC5B  F020         	call	_turnRight	;wreg free
 11938  003428  065A               	decf	_array_index^0,f,c
 11939  00342A                     l7160:
 11940                           
 11941                           ;movement.c: 128:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 11942  00342A  505A               	movf	_array_index^0,w,c
 11943  00342C  0D02               	mullw	2
 11944  00342E  0E3C               	movlw	low _memory
 11945  003430  24F3               	addwf	243,w,c
 11946  003432  6ED9               	movwf	fsr2l,c
 11947  003434  0E01               	movlw	high _memory
 11948  003436  20F4               	addwfc	prodh,w,c
 11949  003438  6EDA               	movwf	fsr2h,c
 11950  00343A  0E06               	movlw	6
 11951  00343C  18DE               	xorwf	postinc2,w,c
 11952  00343E  10DE               	iorwf	postinc2,w,c
 11953  003440  A4D8               	btfss	status,2,c
 11954  003442  EF25  F01A         	goto	u8151
 11955  003446  EF27  F01A         	goto	u8150
 11956  00344A                     u8151:
 11957  00344A  EF34  F01A         	goto	l7166
 11958  00344E                     u8150:
 11959  00344E  C034  F022         	movff	goback@mL,turnLeft@mL
 11960  003452  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11961  003456  C036  F024         	movff	goback@mR,turnLeft@mR
 11962  00345A  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11963  00345E  0E87               	movlw	135
 11964  003460  6E26               	movwf	turnLeft@angle_left^0,c
 11965  003462  EC1B  F021         	call	_turnLeft	;wreg free
 11966  003466  065A               	decf	_array_index^0,f,c
 11967  003468                     l7166:
 11968                           
 11969                           ;movement.c: 129:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 11970  003468  505A               	movf	_array_index^0,w,c
 11971  00346A  0D02               	mullw	2
 11972  00346C  0E3C               	movlw	low _memory
 11973  00346E  24F3               	addwf	243,w,c
 11974  003470  6ED9               	movwf	fsr2l,c
 11975  003472  0E01               	movlw	high _memory
 11976  003474  20F4               	addwfc	prodh,w,c
 11977  003476  6EDA               	movwf	fsr2h,c
 11978  003478  0E07               	movlw	7
 11979  00347A  18DE               	xorwf	postinc2,w,c
 11980  00347C  10DE               	iorwf	postinc2,w,c
 11981  00347E  A4D8               	btfss	status,2,c
 11982  003480  EF44  F01A         	goto	u8161
 11983  003484  EF46  F01A         	goto	u8160
 11984  003488                     u8161:
 11985  003488  EF53  F01A         	goto	l7172
 11986  00348C                     u8160:
 11987  00348C  C034  F022         	movff	goback@mL,turnRight@mL
 11988  003490  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11989  003494  C036  F024         	movff	goback@mR,turnRight@mR
 11990  003498  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11991  00349C  0E79               	movlw	121
 11992  00349E  6E26               	movwf	turnRight@angle_right^0,c
 11993  0034A0  EC5B  F020         	call	_turnRight	;wreg free
 11994  0034A4  065A               	decf	_array_index^0,f,c
 11995  0034A6                     l7172:
 11996                           
 11997                           ;movement.c: 116:     while(array_index > 0){
 11998  0034A6  505A               	movf	_array_index^0,w,c
 11999  0034A8  A4D8               	btfss	status,2,c
 12000  0034AA  EF59  F01A         	goto	u8171
 12001  0034AE  EF5B  F01A         	goto	u8170
 12002  0034B2                     u8171:
 12003  0034B2  EF21  F019         	goto	l7112
 12004  0034B6                     u8170:
 12005  0034B6                     l714:
 12006  0034B6  0012               	return		;funcret
 12007  0034B8                     __end_of_goback:
 12008                           	callstack 0
 12009                           
 12010 ;; *************** function _turnRight *****************
 12011 ;; Defined at:
 12012 ;;		line 121 in file "dc_motor.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12015 ;;		 -> main@motorL(10), 
 12016 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12017 ;;		 -> main@motorR(10), 
 12018 ;;  angle_right     1   37[COMRAM] unsigned char 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  i               2   47[COMRAM] unsigned int 
 12021 ;;  i               2   45[COMRAM] unsigned int 
 12022 ;;  i               2   43[COMRAM] unsigned int 
 12023 ;;  delay           2   49[COMRAM] unsigned int 
 12024 ;;  delay_180       2   41[COMRAM] unsigned int 
 12025 ;;  delay_135       2   39[COMRAM] unsigned int 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12035 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12036 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12038 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12039 ;;Total ram usage:       18 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 5
 12042 ;; This function calls:
 12043 ;;		_setMotorPWM
 12044 ;;		_stop
 12045 ;; This function is called by:
 12046 ;;		_action
 12047 ;;		_goback
 12048 ;;		_test_action
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text63
 12053  0040B6                     __ptext63:
 12054                           	callstack 0
 12055  0040B6                     _turnRight:
 12056                           	callstack 24
 12057  0040B6                     
 12058                           ;dc_motor.c: 121: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 122: {;dc_motor.c: 123:     mL->direction=1;
 12059  0040B6  EE20 F001          	lfsr	2,1
 12060  0040BA  5022               	movf	turnRight@mL^0,w,c
 12061  0040BC  26D9               	addwf	fsr2l,f,c
 12062  0040BE  5023               	movf	(turnRight@mL+1)^0,w,c
 12063  0040C0  22DA               	addwfc	fsr2h,f,c
 12064  0040C2  0E01               	movlw	1
 12065  0040C4  6EDF               	movwf	indf2,c
 12066                           
 12067                           ;dc_motor.c: 124:     mR->direction=1;
 12068  0040C6  EE20 F001          	lfsr	2,1
 12069  0040CA  5024               	movf	turnRight@mR^0,w,c
 12070  0040CC  26D9               	addwf	fsr2l,f,c
 12071  0040CE  5025               	movf	(turnRight@mR+1)^0,w,c
 12072  0040D0  22DA               	addwfc	fsr2h,f,c
 12073  0040D2  0E01               	movlw	1
 12074  0040D4  6EDF               	movwf	indf2,c
 12075                           
 12076                           ;dc_motor.c: 125:     while (mL->power <25){
 12077  0040D6  EF8C  F020         	goto	l6586
 12078  0040DA                     l6578:
 12079                           
 12080                           ;dc_motor.c: 126:         mL->power += 5;
 12081  0040DA  C022  FFD9         	movff	turnRight@mL,fsr2l
 12082  0040DE  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12083  0040E2  0E05               	movlw	5
 12084  0040E4  26DF               	addwf	indf2,f,c
 12085                           
 12086                           ;dc_motor.c: 127:         mR->power = 0;
 12087  0040E6  C024  FFD9         	movff	turnRight@mR,fsr2l
 12088  0040EA  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 12089  0040EE  0E00               	movlw	0
 12090  0040F0  6EDF               	movwf	indf2,c
 12091  0040F2                     
 12092                           ;dc_motor.c: 128:         setMotorPWM(mL);
 12093  0040F2  C022  F011         	movff	turnRight@mL,setMotorPWM@m
 12094  0040F6  C023  F012         	movff	turnRight@mL+1,setMotorPWM@m+1
 12095  0040FA  EC55  F01B         	call	_setMotorPWM	;wreg free
 12096  0040FE                     
 12097                           ;dc_motor.c: 129:         setMotorPWM(mR);
 12098  0040FE  C024  F011         	movff	turnRight@mR,setMotorPWM@m
 12099  004102  C025  F012         	movff	turnRight@mR+1,setMotorPWM@m+1
 12100  004106  EC55  F01B         	call	_setMotorPWM	;wreg free
 12101  00410A                     
 12102                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12103  00410A  0ED0               	movlw	208
 12104  00410C  6E27               	movwf	??_turnRight^0,c
 12105  00410E  0ECA               	movlw	202
 12106  004110                     u8827:
 12107  004110  2EE8               	decfsz	wreg,f,c
 12108  004112  D7FE               	bra	u8827
 12109  004114  2E27               	decfsz	??_turnRight^0,f,c
 12110  004116  D7FC               	bra	u8827
 12111  004118                     l6586:
 12112                           
 12113                           ;dc_motor.c: 125:     while (mL->power <25){
 12114  004118  C022  FFD9         	movff	turnRight@mL,fsr2l
 12115  00411C  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12116  004120  0E18               	movlw	24
 12117  004122  64DF               	cpfsgt	indf2,c
 12118  004124  EF96  F020         	goto	u7501
 12119  004128  EF98  F020         	goto	u7500
 12120  00412C                     u7501:
 12121  00412C  EF6D  F020         	goto	l6578
 12122  004130                     u7500:
 12123  004130                     
 12124                           ;dc_motor.c: 132:     unsigned int delay = angle_right * SENSITIVITY;
 12125  004130  5026               	movf	turnRight@angle_right^0,w,c
 12126  004132  0100               	movlb	0	; () banked
 12127  004134  03FA               	mulwf	_SENSITIVITY& (0+255),b
 12128  004136  CFF3 F032          	movff	prodl,turnRight@delay
 12129  00413A  CFF4 F033          	movff	prodh,turnRight@delay+1
 12130  00413E                     
 12131                           ; BSR set to: 0
 12132  00413E  0E0A               	movlw	10
 12133  004140  2432               	addwf	turnRight@delay^0,w,c
 12134  004142  6E28               	movwf	turnRight@delay_135^0,c
 12135  004144  0E00               	movlw	0
 12136  004146  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12137  004148  6E29               	movwf	(turnRight@delay_135+1)^0,c
 12138  00414A                     
 12139                           ; BSR set to: 0
 12140  00414A  0E14               	movlw	20
 12141  00414C  2432               	addwf	turnRight@delay^0,w,c
 12142  00414E  6E2A               	movwf	turnRight@delay_180^0,c
 12143  004150  0E00               	movlw	0
 12144  004152  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12145  004154  6E2B               	movwf	(turnRight@delay_180+1)^0,c
 12146  004156                     
 12147                           ; BSR set to: 0
 12148                           ;dc_motor.c: 135:     if (angle_right == 180){
 12149  004156  0EB4               	movlw	180
 12150  004158  1826               	xorwf	turnRight@angle_right^0,w,c
 12151  00415A  A4D8               	btfss	status,2,c
 12152  00415C  EFB2  F020         	goto	u7511
 12153  004160  EFB4  F020         	goto	u7510
 12154  004164                     u7511:
 12155  004164  EFCF  F020         	goto	l6602
 12156  004168                     u7510:
 12157  004168                     
 12158                           ; BSR set to: 0
 12159                           ;dc_motor.c: 136:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12160  004168  0E00               	movlw	0
 12161  00416A  6E2D               	movwf	(turnRight@i+1)^0,c
 12162  00416C  0E00               	movlw	0
 12163  00416E  6E2C               	movwf	turnRight@i^0,c
 12164  004170  EFC4  F020         	goto	l392
 12165  004174                     l6598:
 12166  004174  0E15               	movlw	21
 12167  004176  6E27               	movwf	??_turnRight^0,c
 12168  004178  0EC6               	movlw	198
 12169  00417A                     u8837:
 12170  00417A  2EE8               	decfsz	wreg,f,c
 12171  00417C  D7FE               	bra	u8837
 12172  00417E  2E27               	decfsz	??_turnRight^0,f,c
 12173  004180  D7FC               	bra	u8837
 12174  004182  D000               	nop2	
 12175  004184  4A2C               	infsnz	turnRight@i^0,f,c
 12176  004186  2A2D               	incf	(turnRight@i+1)^0,f,c
 12177  004188                     l392:
 12178  004188  502A               	movf	turnRight@delay_180^0,w,c
 12179  00418A  5C2C               	subwf	turnRight@i^0,w,c
 12180  00418C  502B               	movf	(turnRight@delay_180+1)^0,w,c
 12181  00418E  582D               	subwfb	(turnRight@i+1)^0,w,c
 12182  004190  A0D8               	btfss	status,0,c
 12183  004192  EFCD  F020         	goto	u7521
 12184  004196  EFCF  F020         	goto	u7520
 12185  00419A                     u7521:
 12186  00419A  EFBA  F020         	goto	l6598
 12187  00419E                     u7520:
 12188  00419E                     l6602:
 12189                           
 12190                           ;dc_motor.c: 138:     if (angle_right == 135){
 12191  00419E  0E87               	movlw	135
 12192  0041A0  1826               	xorwf	turnRight@angle_right^0,w,c
 12193  0041A2  A4D8               	btfss	status,2,c
 12194  0041A4  EFD6  F020         	goto	u7531
 12195  0041A8  EFD8  F020         	goto	u7530
 12196  0041AC                     u7531:
 12197  0041AC  EFF5  F020         	goto	l6610
 12198  0041B0                     u7530:
 12199  0041B0                     
 12200                           ;dc_motor.c: 139:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12201  0041B0  0E00               	movlw	0
 12202  0041B2  6E2F               	movwf	(turnRight@i_1500+1)^0,c
 12203  0041B4  0E00               	movlw	0
 12204  0041B6  6E2E               	movwf	turnRight@i_1500^0,c
 12205  0041B8  EFE8  F020         	goto	l396
 12206  0041BC                     l6606:
 12207  0041BC  0E15               	movlw	21
 12208  0041BE  6E27               	movwf	??_turnRight^0,c
 12209  0041C0  0EC6               	movlw	198
 12210  0041C2                     u8847:
 12211  0041C2  2EE8               	decfsz	wreg,f,c
 12212  0041C4  D7FE               	bra	u8847
 12213  0041C6  2E27               	decfsz	??_turnRight^0,f,c
 12214  0041C8  D7FC               	bra	u8847
 12215  0041CA  D000               	nop2	
 12216  0041CC  4A2E               	infsnz	turnRight@i_1500^0,f,c
 12217  0041CE  2A2F               	incf	(turnRight@i_1500+1)^0,f,c
 12218  0041D0                     l396:
 12219  0041D0  5028               	movf	turnRight@delay_135^0,w,c
 12220  0041D2  5C2E               	subwf	turnRight@i_1500^0,w,c
 12221  0041D4  5029               	movf	(turnRight@delay_135+1)^0,w,c
 12222  0041D6  582F               	subwfb	(turnRight@i_1500+1)^0,w,c
 12223  0041D8  A0D8               	btfss	status,0,c
 12224  0041DA  EFF1  F020         	goto	u7541
 12225  0041DE  EFF3  F020         	goto	u7540
 12226  0041E2                     u7541:
 12227  0041E2  EFDE  F020         	goto	l6606
 12228  0041E6                     u7540:
 12229  0041E6  EF10  F021         	goto	l6616
 12230  0041EA                     l6610:
 12231                           
 12232                           ;dc_motor.c: 142:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12233  0041EA  0E00               	movlw	0
 12234  0041EC  6E31               	movwf	(turnRight@i_1501+1)^0,c
 12235  0041EE  0E00               	movlw	0
 12236  0041F0  6E30               	movwf	turnRight@i_1501^0,c
 12237  0041F2  EF05  F021         	goto	l400
 12238  0041F6                     l6612:
 12239  0041F6  0E15               	movlw	21
 12240  0041F8  6E27               	movwf	??_turnRight^0,c
 12241  0041FA  0EC6               	movlw	198
 12242  0041FC                     u8857:
 12243  0041FC  2EE8               	decfsz	wreg,f,c
 12244  0041FE  D7FE               	bra	u8857
 12245  004200  2E27               	decfsz	??_turnRight^0,f,c
 12246  004202  D7FC               	bra	u8857
 12247  004204  D000               	nop2	
 12248  004206  4A30               	infsnz	turnRight@i_1501^0,f,c
 12249  004208  2A31               	incf	(turnRight@i_1501+1)^0,f,c
 12250  00420A                     l400:
 12251  00420A  5032               	movf	turnRight@delay^0,w,c
 12252  00420C  5C30               	subwf	turnRight@i_1501^0,w,c
 12253  00420E  5033               	movf	(turnRight@delay+1)^0,w,c
 12254  004210  5831               	subwfb	(turnRight@i_1501+1)^0,w,c
 12255  004212  A0D8               	btfss	status,0,c
 12256  004214  EF0E  F021         	goto	u7551
 12257  004218  EF10  F021         	goto	u7550
 12258  00421C                     u7551:
 12259  00421C  EFFB  F020         	goto	l6612
 12260  004220                     u7550:
 12261  004220                     l6616:
 12262                           
 12263                           ;dc_motor.c: 144:     stop(mL,mR);
 12264  004220  C022  F01C         	movff	turnRight@mL,stop@mL
 12265  004224  C023  F01D         	movff	turnRight@mL+1,stop@mL+1
 12266  004228  C024  F01E         	movff	turnRight@mR,stop@mR
 12267  00422C  C025  F01F         	movff	turnRight@mR+1,stop@mR+1
 12268  004230  EC7C  F026         	call	_stop	;wreg free
 12269  004234  0012               	return		;funcret
 12270  004236                     __end_of_turnRight:
 12271                           	callstack 0
 12272                           
 12273 ;; *************** function _turnLeft *****************
 12274 ;; Defined at:
 12275 ;;		line 94 in file "dc_motor.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12278 ;;		 -> main@motorL(10), 
 12279 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12280 ;;		 -> main@motorR(10), 
 12281 ;;  angle_left      1   37[COMRAM] unsigned char 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  i               2   47[COMRAM] unsigned int 
 12284 ;;  i               2   45[COMRAM] unsigned int 
 12285 ;;  i               2   43[COMRAM] unsigned int 
 12286 ;;  delay           2   49[COMRAM] unsigned int 
 12287 ;;  delay_180       2   41[COMRAM] unsigned int 
 12288 ;;  delay_135       2   39[COMRAM] unsigned int 
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1    wreg      void 
 12291 ;; Registers used:
 12292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12298 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12299 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12301 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12302 ;;Total ram usage:       18 bytes
 12303 ;; Hardware stack levels used: 1
 12304 ;; Hardware stack levels required when called: 5
 12305 ;; This function calls:
 12306 ;;		_setMotorPWM
 12307 ;;		_stop
 12308 ;; This function is called by:
 12309 ;;		_action
 12310 ;;		_goback
 12311 ;;		_test_action
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text64
 12316  004236                     __ptext64:
 12317                           	callstack 0
 12318  004236                     _turnLeft:
 12319                           	callstack 24
 12320  004236                     
 12321                           ;dc_motor.c: 94: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 95: {;dc_motor.c: 96:       mL->direction=1;
 12322  004236  EE20 F001          	lfsr	2,1
 12323  00423A  5022               	movf	turnLeft@mL^0,w,c
 12324  00423C  26D9               	addwf	fsr2l,f,c
 12325  00423E  5023               	movf	(turnLeft@mL+1)^0,w,c
 12326  004240  22DA               	addwfc	fsr2h,f,c
 12327  004242  0E01               	movlw	1
 12328  004244  6EDF               	movwf	indf2,c
 12329                           
 12330                           ;dc_motor.c: 97:       mR->direction=1;
 12331  004246  EE20 F001          	lfsr	2,1
 12332  00424A  5024               	movf	turnLeft@mR^0,w,c
 12333  00424C  26D9               	addwf	fsr2l,f,c
 12334  00424E  5025               	movf	(turnLeft@mR+1)^0,w,c
 12335  004250  22DA               	addwfc	fsr2h,f,c
 12336  004252  0E01               	movlw	1
 12337  004254  6EDF               	movwf	indf2,c
 12338                           
 12339                           ;dc_motor.c: 98:       while (mR->power <25){
 12340  004256  EF4C  F021         	goto	l6544
 12341  00425A                     l6536:
 12342                           
 12343                           ;dc_motor.c: 99:         mR->power += 5;
 12344  00425A  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12345  00425E  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12346  004262  0E05               	movlw	5
 12347  004264  26DF               	addwf	indf2,f,c
 12348                           
 12349                           ;dc_motor.c: 100:         mL->power = 0;
 12350  004266  C022  FFD9         	movff	turnLeft@mL,fsr2l
 12351  00426A  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 12352  00426E  0E00               	movlw	0
 12353  004270  6EDF               	movwf	indf2,c
 12354  004272                     
 12355                           ;dc_motor.c: 101:         setMotorPWM(mL);
 12356  004272  C022  F011         	movff	turnLeft@mL,setMotorPWM@m
 12357  004276  C023  F012         	movff	turnLeft@mL+1,setMotorPWM@m+1
 12358  00427A  EC55  F01B         	call	_setMotorPWM	;wreg free
 12359  00427E                     
 12360                           ;dc_motor.c: 102:         setMotorPWM(mR);
 12361  00427E  C024  F011         	movff	turnLeft@mR,setMotorPWM@m
 12362  004282  C025  F012         	movff	turnLeft@mR+1,setMotorPWM@m+1
 12363  004286  EC55  F01B         	call	_setMotorPWM	;wreg free
 12364  00428A                     
 12365                           ;dc_motor.c: 103:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12366  00428A  0ED0               	movlw	208
 12367  00428C  6E27               	movwf	??_turnLeft^0,c
 12368  00428E  0ECA               	movlw	202
 12369  004290                     u8867:
 12370  004290  2EE8               	decfsz	wreg,f,c
 12371  004292  D7FE               	bra	u8867
 12372  004294  2E27               	decfsz	??_turnLeft^0,f,c
 12373  004296  D7FC               	bra	u8867
 12374  004298                     l6544:
 12375                           
 12376                           ;dc_motor.c: 98:       while (mR->power <25){
 12377  004298  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12378  00429C  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12379  0042A0  0E18               	movlw	24
 12380  0042A2  64DF               	cpfsgt	indf2,c
 12381  0042A4  EF56  F021         	goto	u7441
 12382  0042A8  EF58  F021         	goto	u7440
 12383  0042AC                     u7441:
 12384  0042AC  EF2D  F021         	goto	l6536
 12385  0042B0                     u7440:
 12386  0042B0                     
 12387                           ;dc_motor.c: 105:     unsigned int delay = angle_left * SENSITIVITY;
 12388  0042B0  5026               	movf	turnLeft@angle_left^0,w,c
 12389  0042B2  0100               	movlb	0	; () banked
 12390  0042B4  03FA               	mulwf	_SENSITIVITY& (0+255),b
 12391  0042B6  CFF3 F032          	movff	prodl,turnLeft@delay
 12392  0042BA  CFF4 F033          	movff	prodh,turnLeft@delay+1
 12393  0042BE                     
 12394                           ; BSR set to: 0
 12395  0042BE  0E0A               	movlw	10
 12396  0042C0  2432               	addwf	turnLeft@delay^0,w,c
 12397  0042C2  6E28               	movwf	turnLeft@delay_135^0,c
 12398  0042C4  0E00               	movlw	0
 12399  0042C6  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12400  0042C8  6E29               	movwf	(turnLeft@delay_135+1)^0,c
 12401  0042CA                     
 12402                           ; BSR set to: 0
 12403  0042CA  0E14               	movlw	20
 12404  0042CC  2432               	addwf	turnLeft@delay^0,w,c
 12405  0042CE  6E2A               	movwf	turnLeft@delay_180^0,c
 12406  0042D0  0E00               	movlw	0
 12407  0042D2  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12408  0042D4  6E2B               	movwf	(turnLeft@delay_180+1)^0,c
 12409  0042D6                     
 12410                           ; BSR set to: 0
 12411                           ;dc_motor.c: 108:     if (angle_left == 180){
 12412  0042D6  0EB4               	movlw	180
 12413  0042D8  1826               	xorwf	turnLeft@angle_left^0,w,c
 12414  0042DA  A4D8               	btfss	status,2,c
 12415  0042DC  EF72  F021         	goto	u7451
 12416  0042E0  EF74  F021         	goto	u7450
 12417  0042E4                     u7451:
 12418  0042E4  EF8F  F021         	goto	l6560
 12419  0042E8                     u7450:
 12420  0042E8                     
 12421                           ; BSR set to: 0
 12422                           ;dc_motor.c: 109:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12423  0042E8  0E00               	movlw	0
 12424  0042EA  6E2D               	movwf	(turnLeft@i+1)^0,c
 12425  0042EC  0E00               	movlw	0
 12426  0042EE  6E2C               	movwf	turnLeft@i^0,c
 12427  0042F0  EF84  F021         	goto	l374
 12428  0042F4                     l6556:
 12429  0042F4  0E15               	movlw	21
 12430  0042F6  6E27               	movwf	??_turnLeft^0,c
 12431  0042F8  0EC6               	movlw	198
 12432  0042FA                     u8877:
 12433  0042FA  2EE8               	decfsz	wreg,f,c
 12434  0042FC  D7FE               	bra	u8877
 12435  0042FE  2E27               	decfsz	??_turnLeft^0,f,c
 12436  004300  D7FC               	bra	u8877
 12437  004302  D000               	nop2	
 12438  004304  4A2C               	infsnz	turnLeft@i^0,f,c
 12439  004306  2A2D               	incf	(turnLeft@i+1)^0,f,c
 12440  004308                     l374:
 12441  004308  502A               	movf	turnLeft@delay_180^0,w,c
 12442  00430A  5C2C               	subwf	turnLeft@i^0,w,c
 12443  00430C  502B               	movf	(turnLeft@delay_180+1)^0,w,c
 12444  00430E  582D               	subwfb	(turnLeft@i+1)^0,w,c
 12445  004310  A0D8               	btfss	status,0,c
 12446  004312  EF8D  F021         	goto	u7461
 12447  004316  EF8F  F021         	goto	u7460
 12448  00431A                     u7461:
 12449  00431A  EF7A  F021         	goto	l6556
 12450  00431E                     u7460:
 12451  00431E                     l6560:
 12452                           
 12453                           ;dc_motor.c: 111:     if (angle_left == 135){
 12454  00431E  0E87               	movlw	135
 12455  004320  1826               	xorwf	turnLeft@angle_left^0,w,c
 12456  004322  A4D8               	btfss	status,2,c
 12457  004324  EF96  F021         	goto	u7471
 12458  004328  EF98  F021         	goto	u7470
 12459  00432C                     u7471:
 12460  00432C  EFB5  F021         	goto	l6568
 12461  004330                     u7470:
 12462  004330                     
 12463                           ;dc_motor.c: 112:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12464  004330  0E00               	movlw	0
 12465  004332  6E2F               	movwf	(turnLeft@i_1476+1)^0,c
 12466  004334  0E00               	movlw	0
 12467  004336  6E2E               	movwf	turnLeft@i_1476^0,c
 12468  004338  EFA8  F021         	goto	l378
 12469  00433C                     l6564:
 12470  00433C  0E15               	movlw	21
 12471  00433E  6E27               	movwf	??_turnLeft^0,c
 12472  004340  0EC6               	movlw	198
 12473  004342                     u8887:
 12474  004342  2EE8               	decfsz	wreg,f,c
 12475  004344  D7FE               	bra	u8887
 12476  004346  2E27               	decfsz	??_turnLeft^0,f,c
 12477  004348  D7FC               	bra	u8887
 12478  00434A  D000               	nop2	
 12479  00434C  4A2E               	infsnz	turnLeft@i_1476^0,f,c
 12480  00434E  2A2F               	incf	(turnLeft@i_1476+1)^0,f,c
 12481  004350                     l378:
 12482  004350  5028               	movf	turnLeft@delay_135^0,w,c
 12483  004352  5C2E               	subwf	turnLeft@i_1476^0,w,c
 12484  004354  5029               	movf	(turnLeft@delay_135+1)^0,w,c
 12485  004356  582F               	subwfb	(turnLeft@i_1476+1)^0,w,c
 12486  004358  A0D8               	btfss	status,0,c
 12487  00435A  EFB1  F021         	goto	u7481
 12488  00435E  EFB3  F021         	goto	u7480
 12489  004362                     u7481:
 12490  004362  EF9E  F021         	goto	l6564
 12491  004366                     u7480:
 12492  004366  EFD0  F021         	goto	l6574
 12493  00436A                     l6568:
 12494                           
 12495                           ;dc_motor.c: 115:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12496  00436A  0E00               	movlw	0
 12497  00436C  6E31               	movwf	(turnLeft@i_1477+1)^0,c
 12498  00436E  0E00               	movlw	0
 12499  004370  6E30               	movwf	turnLeft@i_1477^0,c
 12500  004372  EFC5  F021         	goto	l382
 12501  004376                     l6570:
 12502  004376  0E15               	movlw	21
 12503  004378  6E27               	movwf	??_turnLeft^0,c
 12504  00437A  0EC6               	movlw	198
 12505  00437C                     u8897:
 12506  00437C  2EE8               	decfsz	wreg,f,c
 12507  00437E  D7FE               	bra	u8897
 12508  004380  2E27               	decfsz	??_turnLeft^0,f,c
 12509  004382  D7FC               	bra	u8897
 12510  004384  D000               	nop2	
 12511  004386  4A30               	infsnz	turnLeft@i_1477^0,f,c
 12512  004388  2A31               	incf	(turnLeft@i_1477+1)^0,f,c
 12513  00438A                     l382:
 12514  00438A  5032               	movf	turnLeft@delay^0,w,c
 12515  00438C  5C30               	subwf	turnLeft@i_1477^0,w,c
 12516  00438E  5033               	movf	(turnLeft@delay+1)^0,w,c
 12517  004390  5831               	subwfb	(turnLeft@i_1477+1)^0,w,c
 12518  004392  A0D8               	btfss	status,0,c
 12519  004394  EFCE  F021         	goto	u7491
 12520  004398  EFD0  F021         	goto	u7490
 12521  00439C                     u7491:
 12522  00439C  EFBB  F021         	goto	l6570
 12523  0043A0                     u7490:
 12524  0043A0                     l6574:
 12525                           
 12526                           ;dc_motor.c: 117:     stop(mL,mR);
 12527  0043A0  C022  F01C         	movff	turnLeft@mL,stop@mL
 12528  0043A4  C023  F01D         	movff	turnLeft@mL+1,stop@mL+1
 12529  0043A8  C024  F01E         	movff	turnLeft@mR,stop@mR
 12530  0043AC  C025  F01F         	movff	turnLeft@mR+1,stop@mR+1
 12531  0043B0  EC7C  F026         	call	_stop	;wreg free
 12532  0043B4  0012               	return		;funcret
 12533  0043B6                     __end_of_turnLeft:
 12534                           	callstack 0
 12535                           
 12536 ;; *************** function _reverse_square *****************
 12537 ;; Defined at:
 12538 ;;		line 188 in file "dc_motor.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 12541 ;;		 -> main@motorL(10), 
 12542 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 12543 ;;		 -> main@motorR(10), 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12558 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12559 ;;Total ram usage:        6 bytes
 12560 ;; Hardware stack levels used: 1
 12561 ;; Hardware stack levels required when called: 6
 12562 ;; This function calls:
 12563 ;;		_fullSpeedBack
 12564 ;;		_stop
 12565 ;; This function is called by:
 12566 ;;		_action
 12567 ;;		_goback
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text65
 12572  0053CE                     __ptext65:
 12573                           	callstack 0
 12574  0053CE                     _reverse_square:
 12575                           	callstack 23
 12576  0053CE                     
 12577                           ;dc_motor.c: 188: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 189: { fullSpeedBack(mL, mR);
 12578  0053CE  C028  F022         	movff	reverse_square@mL,fullSpeedBack@mL
 12579  0053D2  C029  F023         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12580  0053D6  C02A  F024         	movff	reverse_square@mR,fullSpeedBack@mR
 12581  0053DA  C02B  F025         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12582  0053DE  EC1C  F026         	call	_fullSpeedBack	;wreg free
 12583  0053E2                     
 12584                           ;dc_motor.c: 190:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12585  0053E2  0E52               	movlw	82
 12586  0053E4  6E2D               	movwf	(??_reverse_square+1)^0,c
 12587  0053E6  0E2B               	movlw	43
 12588  0053E8  6E2C               	movwf	??_reverse_square^0,c
 12589  0053EA  0E00               	movlw	0
 12590  0053EC                     u8907:
 12591  0053EC  2EE8               	decfsz	wreg,f,c
 12592  0053EE  D7FE               	bra	u8907
 12593  0053F0  2E2C               	decfsz	??_reverse_square^0,f,c
 12594  0053F2  D7FC               	bra	u8907
 12595  0053F4  2E2D               	decfsz	(??_reverse_square+1)^0,f,c
 12596  0053F6  D7FA               	bra	u8907
 12597  0053F8  D000               	nop2	
 12598  0053FA                     
 12599                           ;dc_motor.c: 191:     stop(mL,mR);
 12600  0053FA  C028  F01C         	movff	reverse_square@mL,stop@mL
 12601  0053FE  C029  F01D         	movff	reverse_square@mL+1,stop@mL+1
 12602  005402  C02A  F01E         	movff	reverse_square@mR,stop@mR
 12603  005406  C02B  F01F         	movff	reverse_square@mR+1,stop@mR+1
 12604  00540A  EC7C  F026         	call	_stop	;wreg free
 12605  00540E  0012               	return		;funcret
 12606  005410                     __end_of_reverse_square:
 12607                           	callstack 0
 12608                           
 12609 ;; *************** function _fullSpeedBack *****************
 12610 ;; Defined at:
 12611 ;;		line 167 in file "dc_motor.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12614 ;;		 -> main@motorL(10), 
 12615 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12616 ;;		 -> main@motorR(10), 
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;		None
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12632 ;;Total ram usage:        6 bytes
 12633 ;; Hardware stack levels used: 1
 12634 ;; Hardware stack levels required when called: 5
 12635 ;; This function calls:
 12636 ;;		_setMotorPWM
 12637 ;;		_stop
 12638 ;; This function is called by:
 12639 ;;		_short_reverse
 12640 ;;		_reverse_square
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text66
 12645  004C38                     __ptext66:
 12646                           	callstack 0
 12647  004C38                     _fullSpeedBack:
 12648                           	callstack 23
 12649  004C38                     
 12650                           ;dc_motor.c: 167: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 168: {;dc_motor.c: 169:     mL->direction=0;
 12651  004C38  EE20 F001          	lfsr	2,1
 12652  004C3C  5022               	movf	fullSpeedBack@mL^0,w,c
 12653  004C3E  26D9               	addwf	fsr2l,f,c
 12654  004C40  5023               	movf	(fullSpeedBack@mL+1)^0,w,c
 12655  004C42  22DA               	addwfc	fsr2h,f,c
 12656  004C44  0E00               	movlw	0
 12657  004C46  6EDF               	movwf	indf2,c
 12658                           
 12659                           ;dc_motor.c: 170:     mR->direction=0;
 12660  004C48  EE20 F001          	lfsr	2,1
 12661  004C4C  5024               	movf	fullSpeedBack@mR^0,w,c
 12662  004C4E  26D9               	addwf	fsr2l,f,c
 12663  004C50  5025               	movf	(fullSpeedBack@mR+1)^0,w,c
 12664  004C52  22DA               	addwfc	fsr2h,f,c
 12665  004C54  0E00               	movlw	0
 12666  004C56  6EDF               	movwf	indf2,c
 12667                           
 12668                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12669  004C58  EF4D  F026         	goto	l6346
 12670  004C5C                     l6338:
 12671                           
 12672                           ;dc_motor.c: 172:         mL->power += 10;
 12673  004C5C  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12674  004C60  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12675  004C64  0E0A               	movlw	10
 12676  004C66  26DF               	addwf	indf2,f,c
 12677                           
 12678                           ;dc_motor.c: 173:         mR->power += 10;
 12679  004C68  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12680  004C6C  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12681  004C70  0E0A               	movlw	10
 12682  004C72  26DF               	addwf	indf2,f,c
 12683  004C74                     
 12684                           ;dc_motor.c: 174:         setMotorPWM(mL);
 12685  004C74  C022  F011         	movff	fullSpeedBack@mL,setMotorPWM@m
 12686  004C78  C023  F012         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12687  004C7C  EC55  F01B         	call	_setMotorPWM	;wreg free
 12688  004C80                     
 12689                           ;dc_motor.c: 175:         setMotorPWM(mR);
 12690  004C80  C024  F011         	movff	fullSpeedBack@mR,setMotorPWM@m
 12691  004C84  C025  F012         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12692  004C88  EC55  F01B         	call	_setMotorPWM	;wreg free
 12693  004C8C                     
 12694                           ;dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12695  004C8C  0ED0               	movlw	208
 12696  004C8E  6E26               	movwf	??_fullSpeedBack^0,c
 12697  004C90  0ECA               	movlw	202
 12698  004C92                     u8917:
 12699  004C92  2EE8               	decfsz	wreg,f,c
 12700  004C94  D7FE               	bra	u8917
 12701  004C96  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12702  004C98  D7FC               	bra	u8917
 12703  004C9A                     l6346:
 12704                           
 12705                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12706  004C9A  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12707  004C9E  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12708  004CA2  0E32               	movlw	50
 12709  004CA4  60DF               	cpfslt	indf2,c
 12710  004CA6  EF57  F026         	goto	u6961
 12711  004CAA  EF59  F026         	goto	u6960
 12712  004CAE                     u6961:
 12713  004CAE  EF65  F026         	goto	l6350
 12714  004CB2                     u6960:
 12715  004CB2  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12716  004CB6  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12717  004CBA  0E31               	movlw	49
 12718  004CBC  64DF               	cpfsgt	indf2,c
 12719  004CBE  EF63  F026         	goto	u6971
 12720  004CC2  EF65  F026         	goto	u6970
 12721  004CC6                     u6971:
 12722  004CC6  EF2E  F026         	goto	l6338
 12723  004CCA                     u6970:
 12724  004CCA                     l6350:
 12725                           
 12726                           ;dc_motor.c: 178:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12727  004CCA  0E29               	movlw	41
 12728  004CCC  6E27               	movwf	(??_fullSpeedBack+1)^0,c
 12729  004CCE  0E96               	movlw	150
 12730  004CD0  6E26               	movwf	??_fullSpeedBack^0,c
 12731  004CD2  0E7F               	movlw	127
 12732  004CD4                     u8927:
 12733  004CD4  2EE8               	decfsz	wreg,f,c
 12734  004CD6  D7FE               	bra	u8927
 12735  004CD8  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12736  004CDA  D7FC               	bra	u8927
 12737  004CDC  2E27               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12738  004CDE  D7FA               	bra	u8927
 12739  004CE0  F000               	nop	
 12740  004CE2                     
 12741                           ;dc_motor.c: 179:     stop(mL,mR);
 12742  004CE2  C022  F01C         	movff	fullSpeedBack@mL,stop@mL
 12743  004CE6  C023  F01D         	movff	fullSpeedBack@mL+1,stop@mL+1
 12744  004CEA  C024  F01E         	movff	fullSpeedBack@mR,stop@mR
 12745  004CEE  C025  F01F         	movff	fullSpeedBack@mR+1,stop@mR+1
 12746  004CF2  EC7C  F026         	call	_stop	;wreg free
 12747  004CF6  0012               	return		;funcret
 12748  004CF8                     __end_of_fullSpeedBack:
 12749                           	callstack 0
 12750                           
 12751 ;; *************** function _stop *****************
 12752 ;; Defined at:
 12753 ;;		line 81 in file "dc_motor.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12756 ;;		 -> main@motorL(10), 
 12757 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12758 ;;		 -> main@motorR(10), 
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  1    wreg      void 
 12763 ;; Registers used:
 12764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;Total ram usage:        6 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; Hardware stack levels required when called: 4
 12777 ;; This function calls:
 12778 ;;		_setMotorPWM
 12779 ;; This function is called by:
 12780 ;;		_test_function
 12781 ;;		_turnLeft
 12782 ;;		_turnRight
 12783 ;;		_fullSpeedBack
 12784 ;;		_short_reverse
 12785 ;;		_reverse_square
 12786 ;;		_main
 12787 ;;		_action
 12788 ;;		_goback
 12789 ;;		_fullSpeedAhead_test
 12790 ;;		_short_burst
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           	psect	text67
 12795  004CF8                     __ptext67:
 12796                           	callstack 0
 12797  004CF8                     _stop:
 12798                           	callstack 25
 12799  004CF8                     
 12800                           ;dc_motor.c: 81: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 82: {;d
      +                          c_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12801  004CF8  EFB5  F026         	goto	l6078
 12802  004CFC                     l6064:
 12803                           
 12804                           ;dc_motor.c: 84:         if (mL->power !=0){mL->power -= 5;}
 12805  004CFC  C01C  FFD9         	movff	stop@mL,fsr2l
 12806  004D00  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12807  004D04  50DF               	movf	indf2,w,c
 12808  004D06  B4D8               	btfsc	status,2,c
 12809  004D08  EF88  F026         	goto	u6621
 12810  004D0C  EF8A  F026         	goto	u6620
 12811  004D10                     u6621:
 12812  004D10  EF90  F026         	goto	l6068
 12813  004D14                     u6620:
 12814  004D14  C01C  FFD9         	movff	stop@mL,fsr2l
 12815  004D18  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12816  004D1C  0E05               	movlw	5
 12817  004D1E  5EDF               	subwf	indf2,f,c
 12818  004D20                     l6068:
 12819                           
 12820                           ;dc_motor.c: 85:         if (mR->power !=0){mR->power -= 5;}
 12821  004D20  C01E  FFD9         	movff	stop@mR,fsr2l
 12822  004D24  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12823  004D28  50DF               	movf	indf2,w,c
 12824  004D2A  B4D8               	btfsc	status,2,c
 12825  004D2C  EF9A  F026         	goto	u6631
 12826  004D30  EF9C  F026         	goto	u6630
 12827  004D34                     u6631:
 12828  004D34  EFA2  F026         	goto	l6072
 12829  004D38                     u6630:
 12830  004D38  C01E  FFD9         	movff	stop@mR,fsr2l
 12831  004D3C  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12832  004D40  0E05               	movlw	5
 12833  004D42  5EDF               	subwf	indf2,f,c
 12834  004D44                     l6072:
 12835                           
 12836                           ;dc_motor.c: 86:         setMotorPWM(mL);
 12837  004D44  C01C  F011         	movff	stop@mL,setMotorPWM@m
 12838  004D48  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
 12839  004D4C  EC55  F01B         	call	_setMotorPWM	;wreg free
 12840  004D50                     
 12841                           ;dc_motor.c: 87:         setMotorPWM(mR);
 12842  004D50  C01E  F011         	movff	stop@mR,setMotorPWM@m
 12843  004D54  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
 12844  004D58  EC55  F01B         	call	_setMotorPWM	;wreg free
 12845  004D5C                     
 12846                           ;dc_motor.c: 88:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12847  004D5C  0ED0               	movlw	208
 12848  004D5E  6E20               	movwf	??_stop^0,c
 12849  004D60  0ECA               	movlw	202
 12850  004D62                     u8937:
 12851  004D62  2EE8               	decfsz	wreg,f,c
 12852  004D64  D7FE               	bra	u8937
 12853  004D66  2E20               	decfsz	??_stop^0,f,c
 12854  004D68  D7FC               	bra	u8937
 12855  004D6A                     l6078:
 12856                           
 12857                           ;dc_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12858  004D6A  C01C  FFD9         	movff	stop@mL,fsr2l
 12859  004D6E  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12860  004D72  50DF               	movf	indf2,w,c
 12861  004D74  A4D8               	btfss	status,2,c
 12862  004D76  EFBF  F026         	goto	u6641
 12863  004D7A  EFC1  F026         	goto	u6640
 12864  004D7E                     u6641:
 12865  004D7E  EF7E  F026         	goto	l6064
 12866  004D82                     u6640:
 12867  004D82  C01E  FFD9         	movff	stop@mR,fsr2l
 12868  004D86  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12869  004D8A  50DF               	movf	indf2,w,c
 12870  004D8C  A4D8               	btfss	status,2,c
 12871  004D8E  EFCB  F026         	goto	u6651
 12872  004D92  EFCD  F026         	goto	u6650
 12873  004D96                     u6651:
 12874  004D96  EF7E  F026         	goto	l6064
 12875  004D9A                     u6650:
 12876  004D9A                     
 12877                           ;dc_motor.c: 90:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12878  004D9A  0E09               	movlw	9
 12879  004D9C  6E21               	movwf	(??_stop+1)^0,c
 12880  004D9E  0E1E               	movlw	30
 12881  004DA0  6E20               	movwf	??_stop^0,c
 12882  004DA2  0EE4               	movlw	228
 12883  004DA4                     u8947:
 12884  004DA4  2EE8               	decfsz	wreg,f,c
 12885  004DA6  D7FE               	bra	u8947
 12886  004DA8  2E20               	decfsz	??_stop^0,f,c
 12887  004DAA  D7FC               	bra	u8947
 12888  004DAC  2E21               	decfsz	(??_stop+1)^0,f,c
 12889  004DAE  D7FA               	bra	u8947
 12890  004DB0  D000               	nop2	
 12891  004DB2  0012               	return		;funcret
 12892  004DB4                     __end_of_stop:
 12893                           	callstack 0
 12894                           
 12895 ;; *************** function _fullSpeedAhead *****************
 12896 ;; Defined at:
 12897 ;;		line 148 in file "dc_motor.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12900 ;;		 -> main@motorL(10), 
 12901 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12902 ;;		 -> main@motorR(10), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;		None
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      void 
 12907 ;; Registers used:
 12908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12918 ;;Total ram usage:        5 bytes
 12919 ;; Hardware stack levels used: 1
 12920 ;; Hardware stack levels required when called: 4
 12921 ;; This function calls:
 12922 ;;		_setMotorPWM
 12923 ;; This function is called by:
 12924 ;;		_test_function
 12925 ;;		_main
 12926 ;;		_goback
 12927 ;;		_fullSpeedAhead_test
 12928 ;;		_short_burst
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text68
 12933  004E64                     __ptext68:
 12934                           	callstack 0
 12935  004E64                     _fullSpeedAhead:
 12936                           	callstack 25
 12937  004E64                     
 12938                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 150:     mL->direction=1;
 12939  004E64  EE20 F001          	lfsr	2,1
 12940  004E68  501C               	movf	fullSpeedAhead@mL^0,w,c
 12941  004E6A  26D9               	addwf	fsr2l,f,c
 12942  004E6C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12943  004E6E  22DA               	addwfc	fsr2h,f,c
 12944  004E70  0E01               	movlw	1
 12945  004E72  6EDF               	movwf	indf2,c
 12946                           
 12947                           ;dc_motor.c: 151:     mR->direction=1;
 12948  004E74  EE20 F001          	lfsr	2,1
 12949  004E78  501E               	movf	fullSpeedAhead@mR^0,w,c
 12950  004E7A  26D9               	addwf	fsr2l,f,c
 12951  004E7C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12952  004E7E  22DA               	addwfc	fsr2h,f,c
 12953  004E80  0E01               	movlw	1
 12954  004E82  6EDF               	movwf	indf2,c
 12955                           
 12956                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 12957  004E84  EF63  F027         	goto	l6456
 12958  004E88                     l6448:
 12959                           
 12960                           ;dc_motor.c: 153:         mL->power += 10;
 12961  004E88  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12962  004E8C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12963  004E90  0E0A               	movlw	10
 12964  004E92  26DF               	addwf	indf2,f,c
 12965                           
 12966                           ;dc_motor.c: 154:         mR->power += 10;
 12967  004E94  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12968  004E98  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12969  004E9C  0E0A               	movlw	10
 12970  004E9E  26DF               	addwf	indf2,f,c
 12971  004EA0                     
 12972                           ;dc_motor.c: 155:         setMotorPWM(mL);
 12973  004EA0  C01C  F011         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12974  004EA4  C01D  F012         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12975  004EA8  EC55  F01B         	call	_setMotorPWM	;wreg free
 12976  004EAC                     
 12977                           ;dc_motor.c: 156:         setMotorPWM(mR);
 12978  004EAC  C01E  F011         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12979  004EB0  C01F  F012         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12980  004EB4  EC55  F01B         	call	_setMotorPWM	;wreg free
 12981  004EB8                     
 12982                           ;dc_motor.c: 157:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12983  004EB8  0ED0               	movlw	208
 12984  004EBA  6E20               	movwf	??_fullSpeedAhead^0,c
 12985  004EBC  0ECA               	movlw	202
 12986  004EBE                     u8957:
 12987  004EBE  2EE8               	decfsz	wreg,f,c
 12988  004EC0  D7FE               	bra	u8957
 12989  004EC2  2E20               	decfsz	??_fullSpeedAhead^0,f,c
 12990  004EC4  D7FC               	bra	u8957
 12991  004EC6                     l6456:
 12992                           
 12993                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 12994  004EC6  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12995  004ECA  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12996  004ECE  0E14               	movlw	20
 12997  004ED0  60DF               	cpfslt	indf2,c
 12998  004ED2  EF6D  F027         	goto	u7141
 12999  004ED6  EF6F  F027         	goto	u7140
 13000  004EDA                     u7141:
 13001  004EDA  EF7B  F027         	goto	l411
 13002  004EDE                     u7140:
 13003  004EDE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13004  004EE2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13005  004EE6  0E13               	movlw	19
 13006  004EE8  64DF               	cpfsgt	indf2,c
 13007  004EEA  EF79  F027         	goto	u7151
 13008  004EEE  EF7B  F027         	goto	u7150
 13009  004EF2                     u7151:
 13010  004EF2  EF44  F027         	goto	l6448
 13011  004EF6                     u7150:
 13012  004EF6                     l411:
 13013  004EF6  0012               	return		;funcret
 13014  004EF8                     __end_of_fullSpeedAhead:
 13015                           	callstack 0
 13016                           
 13017 ;; *************** function _setMotorPWM *****************
 13018 ;; Defined at:
 13019 ;;		line 58 in file "dc_motor.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  m               2   16[COMRAM] PTR struct DC_motor
 13022 ;;		 -> main@motorR(10), main@motorL(10), 
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;  PWMduty         2   25[COMRAM] int 
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13036 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13037 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13038 ;;Total ram usage:       11 bytes
 13039 ;; Hardware stack levels used: 1
 13040 ;; Hardware stack levels required when called: 3
 13041 ;; This function calls:
 13042 ;;		___awdiv
 13043 ;;		___wmul
 13044 ;; This function is called by:
 13045 ;;		_stop
 13046 ;;		_turnLeft
 13047 ;;		_turnRight
 13048 ;;		_fullSpeedAhead
 13049 ;;		_fullSpeedBack
 13050 ;; This function uses a non-reentrant model
 13051 ;;
 13052                           
 13053                           	psect	text69
 13054  0036AA                     __ptext69:
 13055                           	callstack 0
 13056  0036AA                     _setMotorPWM:
 13057                           	callstack 25
 13058  0036AA                     
 13059                           ;dc_motor.c: 58: void setMotorPWM(struct DC_motor *m);dc_motor.c: 59: {;dc_motor.c: 60: 
      +                           int PWMduty;;dc_motor.c: 62:  if (m->direction){
 13060  0036AA  EE20 F001          	lfsr	2,1
 13061  0036AE  5011               	movf	setMotorPWM@m^0,w,c
 13062  0036B0  26D9               	addwf	fsr2l,f,c
 13063  0036B2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13064  0036B4  22DA               	addwfc	fsr2h,f,c
 13065  0036B6  50DF               	movf	indf2,w,c
 13066  0036B8  B4D8               	btfsc	status,2,c
 13067  0036BA  EF61  F01B         	goto	u6151
 13068  0036BE  EF63  F01B         	goto	u6150
 13069  0036C2                     u6151:
 13070  0036C2  EF94  F01B         	goto	l5808
 13071  0036C6                     u6150:
 13072  0036C6                     
 13073                           ;dc_motor.c: 64:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 13074  0036C6  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13075  0036CA  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13076  0036CE  50DF               	movf	indf2,w,c
 13077  0036D0  6E13               	movwf	??_setMotorPWM^0,c
 13078  0036D2  5013               	movf	??_setMotorPWM^0,w,c
 13079  0036D4  6E03               	movwf	___wmul@multiplier^0,c
 13080  0036D6  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13081  0036D8  EE20 F007          	lfsr	2,7
 13082  0036DC  5011               	movf	setMotorPWM@m^0,w,c
 13083  0036DE  26D9               	addwf	fsr2l,f,c
 13084  0036E0  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13085  0036E2  22DA               	addwfc	fsr2h,f,c
 13086  0036E4  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13087  0036E8  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13088  0036EC  EC0B  F02B         	call	___wmul	;wreg free
 13089  0036F0  C003  F009         	movff	?___wmul,___awdiv@dividend
 13090  0036F4  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13091  0036F8  0E00               	movlw	0
 13092  0036FA  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13093  0036FC  0E64               	movlw	100
 13094  0036FE  6E0B               	movwf	___awdiv@divisor^0,c
 13095  003700  ECBA  F025         	call	___awdiv	;wreg free
 13096  003704  EE20 F007          	lfsr	2,7
 13097  003708  5011               	movf	setMotorPWM@m^0,w,c
 13098  00370A  26D9               	addwf	fsr2l,f,c
 13099  00370C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13100  00370E  22DA               	addwfc	fsr2h,f,c
 13101  003710  CFDE F014          	movff	postinc2,??_setMotorPWM+1
 13102  003714  CFDD F015          	movff	postdec2,??_setMotorPWM+2
 13103  003718  5009               	movf	?___awdiv^0,w,c
 13104  00371A  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
 13105  00371C  6E1A               	movwf	setMotorPWM@PWMduty^0,c
 13106  00371E  500A               	movf	(?___awdiv+1)^0,w,c
 13107  003720  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
 13108  003722  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
 13109                           
 13110                           ;dc_motor.c: 65:  }
 13111  003724  EFB7  F01B         	goto	l5810
 13112  003728                     l5808:
 13113                           
 13114                           ;dc_motor.c: 68:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13115  003728  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13116  00372C  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13117  003730  50DF               	movf	indf2,w,c
 13118  003732  6E13               	movwf	??_setMotorPWM^0,c
 13119  003734  5013               	movf	??_setMotorPWM^0,w,c
 13120  003736  6E03               	movwf	___wmul@multiplier^0,c
 13121  003738  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13122  00373A  EE20 F007          	lfsr	2,7
 13123  00373E  5011               	movf	setMotorPWM@m^0,w,c
 13124  003740  26D9               	addwf	fsr2l,f,c
 13125  003742  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13126  003744  22DA               	addwfc	fsr2h,f,c
 13127  003746  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13128  00374A  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13129  00374E  EC0B  F02B         	call	___wmul	;wreg free
 13130  003752  C003  F009         	movff	?___wmul,___awdiv@dividend
 13131  003756  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13132  00375A  0E00               	movlw	0
 13133  00375C  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13134  00375E  0E64               	movlw	100
 13135  003760  6E0B               	movwf	___awdiv@divisor^0,c
 13136  003762  ECBA  F025         	call	___awdiv	;wreg free
 13137  003766  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
 13138  00376A  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 13139  00376E                     l5810:
 13140                           
 13141                           ;dc_motor.c: 71:  *(m->dutyHighByte) = PWMduty;
 13142  00376E  EE20 F002          	lfsr	2,2
 13143  003772  5011               	movf	setMotorPWM@m^0,w,c
 13144  003774  26D9               	addwf	fsr2l,f,c
 13145  003776  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13146  003778  22DA               	addwfc	fsr2h,f,c
 13147  00377A  CFDE F013          	movff	postinc2,??_setMotorPWM
 13148  00377E  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13149  003782  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13150  003786  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13151  00378A  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
 13152  00378E                     
 13153                           ;dc_motor.c: 73:  if (m->direction){
 13154  00378E  EE20 F001          	lfsr	2,1
 13155  003792  5011               	movf	setMotorPWM@m^0,w,c
 13156  003794  26D9               	addwf	fsr2l,f,c
 13157  003796  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13158  003798  22DA               	addwfc	fsr2h,f,c
 13159  00379A  50DF               	movf	indf2,w,c
 13160  00379C  B4D8               	btfsc	status,2,c
 13161  00379E  EFD3  F01B         	goto	u6161
 13162  0037A2  EFD5  F01B         	goto	u6160
 13163  0037A6                     u6161:
 13164  0037A6  EF0A  F01C         	goto	l5816
 13165  0037AA                     u6160:
 13166  0037AA                     
 13167                           ;dc_motor.c: 74:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 13168  0037AA  EE20 F004          	lfsr	2,4
 13169  0037AE  5011               	movf	setMotorPWM@m^0,w,c
 13170  0037B0  26D9               	addwf	fsr2l,f,c
 13171  0037B2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13172  0037B4  22DA               	addwfc	fsr2h,f,c
 13173  0037B6  CFDE F013          	movff	postinc2,??_setMotorPWM
 13174  0037BA  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13175  0037BE  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13176  0037C2  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13177  0037C6  EE10 F004          	lfsr	1,4
 13178  0037CA  5011               	movf	setMotorPWM@m^0,w,c
 13179  0037CC  26E1               	addwf	fsr1l,f,c
 13180  0037CE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13181  0037D0  22E2               	addwfc	fsr1h,f,c
 13182  0037D2  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13183  0037D6  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13184  0037DA  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13185  0037DE  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13186  0037E2  50E7               	movf	indf1,w,c
 13187  0037E4  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13188  0037E6  EE10 F006          	lfsr	1,6
 13189  0037EA  5011               	movf	setMotorPWM@m^0,w,c
 13190  0037EC  26E1               	addwf	fsr1l,f,c
 13191  0037EE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13192  0037F0  22E2               	addwfc	fsr1h,f,c
 13193  0037F2  50E7               	movf	indf1,w,c
 13194  0037F4  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13195  0037F6  0E01               	movlw	1
 13196  0037F8  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13197  0037FA  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13198  0037FC  EF02  F01C         	goto	u6174
 13199  003800                     u6175:
 13200  003800  90D8               	bcf	status,0,c
 13201  003802  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13202  003804                     u6174:
 13203  003804  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13204  003806  EF00  F01C         	goto	u6175
 13205  00380A  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13206  00380C  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
 13207  00380E  6EDF               	movwf	indf2,c
 13208                           
 13209                           ;dc_motor.c: 75:  } else {
 13210  003810  EF3E  F01C         	goto	l359
 13211  003814                     l5816:
 13212                           
 13213                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13214  003814  EE20 F004          	lfsr	2,4
 13215  003818  5011               	movf	setMotorPWM@m^0,w,c
 13216  00381A  26D9               	addwf	fsr2l,f,c
 13217  00381C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13218  00381E  22DA               	addwfc	fsr2h,f,c
 13219  003820  CFDE F013          	movff	postinc2,??_setMotorPWM
 13220  003824  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13221  003828  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13222  00382C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13223  003830  EE10 F004          	lfsr	1,4
 13224  003834  5011               	movf	setMotorPWM@m^0,w,c
 13225  003836  26E1               	addwf	fsr1l,f,c
 13226  003838  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13227  00383A  22E2               	addwfc	fsr1h,f,c
 13228  00383C  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13229  003840  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13230  003844  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13231  003848  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13232  00384C  50E7               	movf	indf1,w,c
 13233  00384E  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13234  003850  EE10 F006          	lfsr	1,6
 13235  003854  5011               	movf	setMotorPWM@m^0,w,c
 13236  003856  26E1               	addwf	fsr1l,f,c
 13237  003858  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13238  00385A  22E2               	addwfc	fsr1h,f,c
 13239  00385C  50E7               	movf	indf1,w,c
 13240  00385E  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13241  003860  0E01               	movlw	1
 13242  003862  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13243  003864  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13244  003866  EF37  F01C         	goto	u6184
 13245  00386A                     u6185:
 13246  00386A  90D8               	bcf	status,0,c
 13247  00386C  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13248  00386E                     u6184:
 13249  00386E  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13250  003870  EF35  F01C         	goto	u6185
 13251  003874  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13252  003876  0AFF               	xorlw	255
 13253  003878  1417               	andwf	(??_setMotorPWM+4)^0,w,c
 13254  00387A  6EDF               	movwf	indf2,c
 13255  00387C                     l359:
 13256  00387C  0012               	return		;funcret
 13257  00387E                     __end_of_setMotorPWM:
 13258                           	callstack 0
 13259                           
 13260 ;; *************** function ___wmul *****************
 13261 ;; Defined at:
 13262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;  multiplier      2    2[COMRAM] unsigned int 
 13265 ;;  multiplicand    2    4[COMRAM] unsigned int 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;  product         2    6[COMRAM] unsigned int 
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  2    2[COMRAM] unsigned int 
 13270 ;; Registers used:
 13271 ;;		wreg, status,2, status,0, prodl, prodh
 13272 ;; Tracked objects:
 13273 ;;		On entry : 0/0
 13274 ;;		On exit  : 0/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13281 ;;Total ram usage:        6 bytes
 13282 ;; Hardware stack levels used: 1
 13283 ;; Hardware stack levels required when called: 2
 13284 ;; This function calls:
 13285 ;;		Nothing
 13286 ;; This function is called by:
 13287 ;;		_setMotorPWM
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text70
 13292  005616                     __ptext70:
 13293                           	callstack 0
 13294  005616                     ___wmul:
 13295                           	callstack 25
 13296  005616  5003               	movf	___wmul@multiplier^0,w,c
 13297  005618  0205               	mulwf	___wmul@multiplicand^0,c
 13298  00561A  CFF3 F007          	movff	prodl,___wmul@product
 13299  00561E  CFF4 F008          	movff	prodh,___wmul@product+1
 13300  005622  5003               	movf	___wmul@multiplier^0,w,c
 13301  005624  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 13302  005626  50F3               	movf	243,w,c
 13303  005628  2608               	addwf	(___wmul@product+1)^0,f,c
 13304  00562A  5004               	movf	(___wmul@multiplier+1)^0,w,c
 13305  00562C  0205               	mulwf	___wmul@multiplicand^0,c
 13306  00562E  50F3               	movf	243,w,c
 13307  005630  2608               	addwf	(___wmul@product+1)^0,f,c
 13308  005632  C007  F003         	movff	___wmul@product,?___wmul
 13309  005636  C008  F004         	movff	___wmul@product+1,?___wmul+1
 13310  00563A  0012               	return		;funcret
 13311  00563C                     __end_of___wmul:
 13312                           	callstack 0
 13313                           
 13314 ;; *************** function ___awdiv *****************
 13315 ;; Defined at:
 13316 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  dividend        2    8[COMRAM] int 
 13319 ;;  divisor         2   10[COMRAM] int 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;  quotient        2   14[COMRAM] int 
 13322 ;;  sign            1   13[COMRAM] unsigned char 
 13323 ;;  counter         1   12[COMRAM] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  2    8[COMRAM] int 
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13334 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13336 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;Total ram usage:        8 bytes
 13338 ;; Hardware stack levels used: 1
 13339 ;; Hardware stack levels required when called: 2
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_setMotorPWM
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           	psect	text71
 13348  004B74                     __ptext71:
 13349                           	callstack 0
 13350  004B74                     ___awdiv:
 13351                           	callstack 25
 13352  004B74  0E00               	movlw	0
 13353  004B76  6E0E               	movwf	___awdiv@sign^0,c
 13354  004B78  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 13355  004B7A  EFC3  F025         	goto	u5920
 13356  004B7E  EFC1  F025         	goto	u5921
 13357  004B82                     u5921:
 13358  004B82  EFC9  F025         	goto	l5702
 13359  004B86                     u5920:
 13360  004B86  6C0B               	negf	___awdiv@divisor^0,c
 13361  004B88  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 13362  004B8A  B0D8               	btfsc	status,0,c
 13363  004B8C  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 13364  004B8E  0E01               	movlw	1
 13365  004B90  6E0E               	movwf	___awdiv@sign^0,c
 13366  004B92                     l5702:
 13367  004B92  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 13368  004B94  EFD0  F025         	goto	u5930
 13369  004B98  EFCE  F025         	goto	u5931
 13370  004B9C                     u5931:
 13371  004B9C  EFD6  F025         	goto	l5708
 13372  004BA0                     u5930:
 13373  004BA0  6C09               	negf	___awdiv@dividend^0,c
 13374  004BA2  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 13375  004BA4  B0D8               	btfsc	status,0,c
 13376  004BA6  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 13377  004BA8  0E01               	movlw	1
 13378  004BAA  1A0E               	xorwf	___awdiv@sign^0,f,c
 13379  004BAC                     l5708:
 13380  004BAC  0E00               	movlw	0
 13381  004BAE  6E10               	movwf	(___awdiv@quotient+1)^0,c
 13382  004BB0  0E00               	movlw	0
 13383  004BB2  6E0F               	movwf	___awdiv@quotient^0,c
 13384  004BB4  500B               	movf	___awdiv@divisor^0,w,c
 13385  004BB6  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 13386  004BB8  B4D8               	btfsc	status,2,c
 13387  004BBA  EFE1  F025         	goto	u5941
 13388  004BBE  EFE3  F025         	goto	u5940
 13389  004BC2                     u5941:
 13390  004BC2  EF0B  F026         	goto	l5730
 13391  004BC6                     u5940:
 13392  004BC6  0E01               	movlw	1
 13393  004BC8  6E0D               	movwf	___awdiv@counter^0,c
 13394  004BCA  EFEB  F025         	goto	l5716
 13395  004BCE                     l5714:
 13396  004BCE  90D8               	bcf	status,0,c
 13397  004BD0  360B               	rlcf	___awdiv@divisor^0,f,c
 13398  004BD2  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 13399  004BD4  2A0D               	incf	___awdiv@counter^0,f,c
 13400  004BD6                     l5716:
 13401  004BD6  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 13402  004BD8  EFF0  F025         	goto	u5951
 13403  004BDC  EFF2  F025         	goto	u5950
 13404  004BE0                     u5951:
 13405  004BE0  EFE7  F025         	goto	l5714
 13406  004BE4                     u5950:
 13407  004BE4                     l5718:
 13408  004BE4  90D8               	bcf	status,0,c
 13409  004BE6  360F               	rlcf	___awdiv@quotient^0,f,c
 13410  004BE8  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 13411  004BEA  500B               	movf	___awdiv@divisor^0,w,c
 13412  004BEC  5C09               	subwf	___awdiv@dividend^0,w,c
 13413  004BEE  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13414  004BF0  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 13415  004BF2  A0D8               	btfss	status,0,c
 13416  004BF4  EFFE  F025         	goto	u5961
 13417  004BF8  EF00  F026         	goto	u5960
 13418  004BFC                     u5961:
 13419  004BFC  EF05  F026         	goto	l5726
 13420  004C00                     u5960:
 13421  004C00  500B               	movf	___awdiv@divisor^0,w,c
 13422  004C02  5E09               	subwf	___awdiv@dividend^0,f,c
 13423  004C04  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13424  004C06  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 13425  004C08  800F               	bsf	___awdiv@quotient^0,0,c
 13426  004C0A                     l5726:
 13427  004C0A  90D8               	bcf	status,0,c
 13428  004C0C  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 13429  004C0E  320B               	rrcf	___awdiv@divisor^0,f,c
 13430  004C10  2E0D               	decfsz	___awdiv@counter^0,f,c
 13431  004C12  EFF2  F025         	goto	l5718
 13432  004C16                     l5730:
 13433  004C16  500E               	movf	___awdiv@sign^0,w,c
 13434  004C18  B4D8               	btfsc	status,2,c
 13435  004C1A  EF11  F026         	goto	u5971
 13436  004C1E  EF13  F026         	goto	u5970
 13437  004C22                     u5971:
 13438  004C22  EF17  F026         	goto	l5734
 13439  004C26                     u5970:
 13440  004C26  6C0F               	negf	___awdiv@quotient^0,c
 13441  004C28  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 13442  004C2A  B0D8               	btfsc	status,0,c
 13443  004C2C  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 13444  004C2E                     l5734:
 13445  004C2E  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 13446  004C32  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 13447  004C36  0012               	return		;funcret
 13448  004C38                     __end_of___awdiv:
 13449                           	callstack 0
 13450                           
 13451 ;; *************** function _Timer0_init *****************
 13452 ;; Defined at:
 13453 ;;		line 7 in file "timers.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 2
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_main
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text72
 13482  00573A                     __ptext72:
 13483                           	callstack 0
 13484  00573A                     _Timer0_init:
 13485                           	callstack 28
 13486  00573A                     
 13487                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13488  00573A  50D6               	movf	214,w,c	;volatile
 13489  00573C  0B1F               	andlw	-225
 13490  00573E  0940               	iorlw	64
 13491  005740  6ED6               	movwf	214,c	;volatile
 13492  005742                     
 13493                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13494  005742  88D6               	bsf	214,4,c	;volatile
 13495                           
 13496                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13497  005744  50D6               	movf	214,w,c	;volatile
 13498  005746  0BF0               	andlw	-16
 13499  005748  0908               	iorlw	8
 13500  00574A  6ED6               	movwf	214,c	;volatile
 13501  00574C                     
 13502                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13503  00574C  88D5               	bsf	213,4,c	;volatile
 13504                           
 13505                           ;timers.c: 16:     TMR0H=0b00001011;
 13506  00574E  0E0B               	movlw	11
 13507  005750  6ED4               	movwf	212,c	;volatile
 13508                           
 13509                           ;timers.c: 17:     TMR0L=0b11011011;
 13510  005752  0EDB               	movlw	219
 13511  005754  6ED3               	movwf	211,c	;volatile
 13512  005756  0012               	return		;funcret
 13513  005758                     __end_of_Timer0_init:
 13514                           	callstack 0
 13515                           
 13516 ;; *************** function _Interrupts_init *****************
 13517 ;; Defined at:
 13518 ;;		line 9 in file "interrupts.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		None
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;Total ram usage:        0 bytes
 13537 ;; Hardware stack levels used: 1
 13538 ;; Hardware stack levels required when called: 2
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_main
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text73
 13547  005792                     __ptext73:
 13548                           	callstack 0
 13549  005792                     _Interrupts_init:
 13550                           	callstack 28
 13551  005792  8EF2               	bsf	242,7,c	;volatile
 13552                           
 13553                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13554  005794  8AF2               	bsf	242,5,c	;volatile
 13555                           
 13556                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13557  005796  8CF2               	bsf	242,6,c	;volatile
 13558                           
 13559                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13560  005798  010E               	movlb	14	; () banked
 13561  00579A  8B29               	bsf	41,5,b	;volatile
 13562  00579C                     
 13563                           ; BSR set to: 14
 13564  00579C  0012               	return		;funcret
 13565  00579E                     __end_of_Interrupts_init:
 13566                           	callstack 0
 13567                           
 13568 ;; *************** function _LowISR *****************
 13569 ;; Defined at:
 13570 ;;		line 25 in file "interrupts.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;		None
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;		None
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1    wreg      void 
 13577 ;; Registers used:
 13578 ;;		status,2, status,0
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13588 ;;Total ram usage:        2 bytes
 13589 ;; Hardware stack levels used: 1
 13590 ;; Hardware stack levels required when called: 1
 13591 ;; This function calls:
 13592 ;;		Nothing
 13593 ;; This function is called by:
 13594 ;;		Interrupt level 1
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	intcodelo
 13599  000018                     __pintcodelo:
 13600                           	callstack 0
 13601  000018                     _LowISR:
 13602                           	callstack 18
 13603                           
 13604                           ; BSR set to: 14
 13605                           ;incstack = 0
 13606  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13607  00001A  CFD8 F001          	movff	status,??_LowISR
 13608  00001E  CFE0 F002          	movff	bsr,??_LowISR+1
 13609  000022                     
 13610                           ;interrupts.c: 27:     if(PIR0bits.TMR0IF){
 13611  000022  010E               	movlb	14	; () banked
 13612  000024  AB33               	btfss	51,5,b	;volatile
 13613  000026  EF17  F000         	goto	i1u567_21
 13614  00002A  EF19  F000         	goto	i1u567_20
 13615  00002E                     i1u567_21:
 13616  00002E  EF1E  F000         	goto	i1l744
 13617  000032                     i1u567_20:
 13618  000032                     
 13619                           ; BSR set to: 14
 13620                           ;interrupts.c: 28:         second ++;
 13621  000032  0101               	movlb	1	; () banked
 13622  000034  4B9A               	infsnz	_second& (0+255),f,b
 13623  000036  2B9B               	incf	(_second+1)& (0+255),f,b
 13624  000038                     
 13625                           ; BSR set to: 1
 13626                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
 13627  000038  010E               	movlb	14	; () banked
 13628  00003A  9B33               	bcf	51,5,b	;volatile
 13629  00003C                     i1l744:
 13630                           
 13631                           ; BSR set to: 14
 13632  00003C  C002  FFE0         	movff	??_LowISR+1,bsr
 13633  000040  C001  FFD8         	movff	??_LowISR,status
 13634  000044  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13635  000046  0010               	retfie	
 13636  000048                     __end_of_LowISR:
 13637                           	callstack 0
 13638                           
 13639 ;; *************** function _HighISR *****************
 13640 ;; Defined at:
 13641 ;;		line 21 in file "interrupts.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;		None
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;		None
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		None
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13659 ;;Total ram usage:        0 bytes
 13660 ;; Hardware stack levels used: 1
 13661 ;; This function calls:
 13662 ;;		Nothing
 13663 ;; This function is called by:
 13664 ;;		Interrupt level 2
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668                           	psect	intcode
 13669  000008                     __pintcode:
 13670                           	callstack 0
 13671  000008                     _HighISR:
 13672                           	callstack 18
 13673                           
 13674                           ; BSR set to: 14
 13675                           ;incstack = 0
 13676  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13677  00000A  EFDE  F02B         	goto	int_func
 13678                           
 13679                           	psect	intcode_body
 13680  0057BC                     __pintcode_body:
 13681                           	callstack 18
 13682  0057BC                     int_func:
 13683                           	callstack 18
 13684  0057BC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13685  0057BE  0011               	retfie		f
 13686  0057C0                     __end_of_HighISR:
 13687                           	callstack 0
 13688                           
 13689                           	psect	rparam
 13690  0000                     
 13691                           	psect	temp
 13692  00005C                     btemp:
 13693                           	callstack 0
 13694  00005C                     	ds	1
 13695  0000                     int$flags	set	btemp
 13696  0000                     wtemp8	set	btemp+1
 13697  0000                     ttemp5	set	btemp+1
 13698  0000                     ttemp6	set	btemp+4
 13699  0000                     ttemp7	set	btemp+8
 13700                           
 13701                           	psect	idloc
 13702                           
 13703                           ;Config register IDLOC0 @ 0x200000
 13704                           ;	unspecified, using default values
 13705  200000                     	org	2097152
 13706  200000  0FFF               	dw	4095
 13707                           
 13708                           ;Config register IDLOC1 @ 0x200002
 13709                           ;	unspecified, using default values
 13710  200002                     	org	2097154
 13711  200002  0FFF               	dw	4095
 13712                           
 13713                           ;Config register IDLOC2 @ 0x200004
 13714                           ;	unspecified, using default values
 13715  200004                     	org	2097156
 13716  200004  0FFF               	dw	4095
 13717                           
 13718                           ;Config register IDLOC3 @ 0x200006
 13719                           ;	unspecified, using default values
 13720  200006                     	org	2097158
 13721  200006  0FFF               	dw	4095
 13722                           
 13723                           ;Config register IDLOC4 @ 0x200008
 13724                           ;	unspecified, using default values
 13725  200008                     	org	2097160
 13726  200008  0FFF               	dw	4095
 13727                           
 13728                           ;Config register IDLOC5 @ 0x20000A
 13729                           ;	unspecified, using default values
 13730  20000A                     	org	2097162
 13731  20000A  0FFF               	dw	4095
 13732                           
 13733                           ;Config register IDLOC6 @ 0x20000C
 13734                           ;	unspecified, using default values
 13735  20000C                     	org	2097164
 13736  20000C  0FFF               	dw	4095
 13737                           
 13738                           ;Config register IDLOC7 @ 0x20000E
 13739                           ;	unspecified, using default values
 13740  20000E                     	org	2097166
 13741  20000E  0FFF               	dw	4095
 13742                           
 13743                           	psect	config
 13744                           
 13745                           ;Config register CONFIG1L @ 0x300000
 13746                           ;	External Oscillator mode Selection bits
 13747                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13748                           ;	Power-up default value for COSC bits
 13749                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13750  300000                     	org	3145728
 13751  300000  AA                 	db	170
 13752                           
 13753                           ;Config register CONFIG1H @ 0x300001
 13754                           ;	unspecified, using default values
 13755                           ;	Clock Out Enable bit
 13756                           ;	CLKOUTEN = 0x1, unprogrammed default
 13757                           ;	Clock Switch Enable bit
 13758                           ;	CSWEN = 0x1, unprogrammed default
 13759                           ;	Fail-Safe Clock Monitor Enable bit
 13760                           ;	FCMEN = 0x1, unprogrammed default
 13761  300001                     	org	3145729
 13762  300001  FF                 	db	255
 13763                           
 13764                           ;Config register CONFIG2L @ 0x300002
 13765                           ;	unspecified, using default values
 13766                           ;	Master Clear Enable bit
 13767                           ;	MCLRE = 0x1, unprogrammed default
 13768                           ;	Power-up Timer Enable bit
 13769                           ;	PWRTE = 0x1, unprogrammed default
 13770                           ;	Low-power BOR enable bit
 13771                           ;	LPBOREN = 0x1, unprogrammed default
 13772                           ;	Brown-out Reset Enable bits
 13773                           ;	BOREN = 0x3, unprogrammed default
 13774  300002                     	org	3145730
 13775  300002  FF                 	db	255
 13776                           
 13777                           ;Config register CONFIG2H @ 0x300003
 13778                           ;	unspecified, using default values
 13779                           ;	Brown Out Reset Voltage selection bits
 13780                           ;	BORV = 0x3, unprogrammed default
 13781                           ;	ZCD Disable bit
 13782                           ;	ZCD = 0x1, unprogrammed default
 13783                           ;	PPSLOCK bit One-Way Set Enable bit
 13784                           ;	PPS1WAY = 0x1, unprogrammed default
 13785                           ;	Stack Full/Underflow Reset Enable bit
 13786                           ;	STVREN = 0x1, unprogrammed default
 13787                           ;	Debugger Enable bit
 13788                           ;	DEBUG = 0x1, unprogrammed default
 13789                           ;	Extended Instruction Set Enable bit
 13790                           ;	XINST = 0x1, unprogrammed default
 13791  300003                     	org	3145731
 13792  300003  FF                 	db	255
 13793                           
 13794                           ;Config register CONFIG3L @ 0x300004
 13795                           ;	WDT Period Select bits
 13796                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13797                           ;	WDT operating mode
 13798                           ;	WDTE = OFF, WDT Disabled
 13799  300004                     	org	3145732
 13800  300004  9F                 	db	159
 13801                           
 13802                           ;Config register CONFIG3H @ 0x300005
 13803                           ;	unspecified, using default values
 13804                           ;	WDT Window Select bits
 13805                           ;	WDTCWS = 0x7, unprogrammed default
 13806                           ;	WDT input clock selector
 13807                           ;	WDTCCS = 0x7, unprogrammed default
 13808  300005                     	org	3145733
 13809  300005  FF                 	db	255
 13810                           
 13811                           ;Config register CONFIG4L @ 0x300006
 13812                           ;	unspecified, using default values
 13813                           ;	Write Protection Block 0
 13814                           ;	WRT0 = 0x1, unprogrammed default
 13815                           ;	Write Protection Block 1
 13816                           ;	WRT1 = 0x1, unprogrammed default
 13817                           ;	Write Protection Block 2
 13818                           ;	WRT2 = 0x1, unprogrammed default
 13819                           ;	Write Protection Block 3
 13820                           ;	WRT3 = 0x1, unprogrammed default
 13821                           ;	Write Protection Block 3
 13822                           ;	WRT4 = 0x1, unprogrammed default
 13823                           ;	Write Protection Block 3
 13824                           ;	WRT5 = 0x1, unprogrammed default
 13825                           ;	Write Protection Block 3
 13826                           ;	WRT6 = 0x1, unprogrammed default
 13827                           ;	Write Protection Block 3
 13828                           ;	WRT7 = 0x1, unprogrammed default
 13829  300006                     	org	3145734
 13830  300006  FF                 	db	255
 13831                           
 13832                           ;Config register CONFIG4H @ 0x300007
 13833                           ;	unspecified, using default values
 13834                           ;	Configuration Register Write Protection bit
 13835                           ;	WRTC = 0x1, unprogrammed default
 13836                           ;	Boot Block Write Protection bit
 13837                           ;	WRTB = 0x1, unprogrammed default
 13838                           ;	Data EEPROM Write Protection bit
 13839                           ;	WRTD = 0x1, unprogrammed default
 13840                           ;	Scanner Enable bit
 13841                           ;	SCANE = 0x1, unprogrammed default
 13842                           ;	Low Voltage Programming Enable bit
 13843                           ;	LVP = 0x1, unprogrammed default
 13844  300007                     	org	3145735
 13845  300007  FF                 	db	255
 13846                           
 13847                           ;Config register CONFIG5L @ 0x300008
 13848                           ;	unspecified, using default values
 13849                           ;	UserNVM Program Memory Code Protection bit
 13850                           ;	CP = 0x1, unprogrammed default
 13851                           ;	DataNVM Memory Code Protection bit
 13852                           ;	CPD = 0x1, unprogrammed default
 13853  300008                     	org	3145736
 13854  300008  FF                 	db	255
 13855                           
 13856                           ;Config register CONFIG5H @ 0x300009
 13857                           ;	unspecified, using default values
 13858  300009                     	org	3145737
 13859  300009  FF                 	db	255
 13860                           
 13861                           ;Config register CONFIG6L @ 0x30000A
 13862                           ;	unspecified, using default values
 13863                           ;	Table Read Protection Block 0
 13864                           ;	EBTR0 = 0x1, unprogrammed default
 13865                           ;	Table Read Protection Block 1
 13866                           ;	EBTR1 = 0x1, unprogrammed default
 13867                           ;	Table Read Protection Block 2
 13868                           ;	EBTR2 = 0x1, unprogrammed default
 13869                           ;	Table Read Protection Block 3
 13870                           ;	EBTR3 = 0x1, unprogrammed default
 13871                           ;	Table Read Protection Block 4
 13872                           ;	EBTR4 = 0x1, unprogrammed default
 13873                           ;	Table Read Protection Block 5
 13874                           ;	EBTR5 = 0x1, unprogrammed default
 13875                           ;	Table Read Protection Block 6
 13876                           ;	EBTR6 = 0x1, unprogrammed default
 13877                           ;	Table Read Protection Block 7
 13878                           ;	EBTR7 = 0x1, unprogrammed default
 13879  30000A                     	org	3145738
 13880  30000A  FF                 	db	255
 13881                           
 13882                           ;Config register CONFIG6H @ 0x30000B
 13883                           ;	unspecified, using default values
 13884                           ;	Boot Block Table Read Protection bit
 13885                           ;	EBTRB = 0x1, unprogrammed default
 13886  30000B                     	org	3145739
 13887  30000B  FF                 	db	255
 13888                           tosu	equ	0xFFF
 13889                           tosh	equ	0xFFE
 13890                           tosl	equ	0xFFD
 13891                           stkptr	equ	0xFFC
 13892                           pclatu	equ	0xFFB
 13893                           pclath	equ	0xFFA
 13894                           pcl	equ	0xFF9
 13895                           tblptru	equ	0xFF8
 13896                           tblptrh	equ	0xFF7
 13897                           tblptrl	equ	0xFF6
 13898                           tablat	equ	0xFF5
 13899                           prodh	equ	0xFF4
 13900                           prodl	equ	0xFF3
 13901                           indf0	equ	0xFEF
 13902                           postinc0	equ	0xFEE
 13903                           postdec0	equ	0xFED
 13904                           preinc0	equ	0xFEC
 13905                           plusw0	equ	0xFEB
 13906                           fsr0h	equ	0xFEA
 13907                           fsr0l	equ	0xFE9
 13908                           wreg	equ	0xFE8
 13909                           indf1	equ	0xFE7
 13910                           postinc1	equ	0xFE6
 13911                           postdec1	equ	0xFE5
 13912                           preinc1	equ	0xFE4
 13913                           plusw1	equ	0xFE3
 13914                           fsr1h	equ	0xFE2
 13915                           fsr1l	equ	0xFE1
 13916                           bsr	equ	0xFE0
 13917                           indf2	equ	0xFDF
 13918                           postinc2	equ	0xFDE
 13919                           postdec2	equ	0xFDD
 13920                           preinc2	equ	0xFDC
 13921                           plusw2	equ	0xFDB
 13922                           fsr2h	equ	0xFDA
 13923                           fsr2l	equ	0xFD9
 13924                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    149     155
    BANK1           256     60     251
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2783$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2783$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S230DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S230DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 


Critical Paths under _main in COMRAM

    _verify_color->_detect_color
    _detect_color->_compare
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_display
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    ___fltol->_roundf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0  369146
                                              6 BANK1     54    54      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   35004
                                             85 COMRAM     2     2      0
                                             59 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  136872
                                            139 BANK0     10     2      8
                                              0 BANK1      6     6      0
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   24874
                                             80 COMRAM     2     2      0
                                             26 BANK0     17    11      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        31    27      4   34505
                                             81 COMRAM     4     4      0
                                             32 BANK0     27    23      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    3131
                                             80 COMRAM     1     1      0
                                             26 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   21173
                                            127 BANK0     12    10      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1500
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    9254
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    9797
                                             25 BANK0    102   100      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    8777
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     366
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1825
                                             13 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     164
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     164
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     164
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   24212
                                             80 COMRAM     2     2      0
                                             26 BANK0     12    10      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     586
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   17235
                                             22 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   15517
                                             66 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             18 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4522
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             74 COMRAM     6     6      0
                                             18 BANK0      4     0      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     164
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      65
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2276
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3623
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      31
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4  101208
                                             59 COMRAM     7     3      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   14214
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   45109
                                             51 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5   10291
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   11371
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   13854
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    8154
                                             33 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4856
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3776
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2628
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     572
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     685
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FB       7       98.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     95      9B       5       96.9%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F1      57        0.0%
DATA                 0      0     1F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Mar 12 10:53:35 2022

                ?_short_reverse 0028                  _color_read_Red 513E                    ___fldiv@aexp 0029  
                  ___fldiv@bexp 0028                    ___fldiv@sign 0021                 _color_read_Blue 51DE  
                 _color_predict 5596                              l93 5784                    ___awdiv@sign 000E  
                            bsr 000FE0             ___wmul@multiplicand 0005                _color_read_Clear 522E  
              _color_read_Green 518E               ??_Interrupts_init 0003                             l122 3224  
                           l114 3212                             l131 518C                             l203 1950  
                           l140 527C                             l204 1954                             l220 4B72  
                           l212 4E62                             l125 5564                             l134 522C  
                           l143 5092                             l207 5486                             l400 420A  
                           l128 571A                             l152 56DA                             l216 4640  
                           l208 5488                             l137 51DC                             l250 55EE  
                           l146 567A                             l411 4EF6                             l403 4234  
                           l155 56BA                             l219 4B70                             l172 4F66  
                           l253 5614                             l149 565A                             l181 36A8  
                           l422 4CF6                             l262 57B0                             l158 569A  
                           l247 55EC                             l256 57BA                             l352 491E  
                           l425 53CC                             l265 5790                             l169 3A3A  
                           l178 55C2                             l259 57A6                             l428 540E  
                           l268 5348                             l349 538A                             l382 438A  
                           l374 4308                             l359 387C                             l367 4DB2  
                           l392 4188                             l385 43B4                             l378 4350  
                           l714 34B6                             l396 41D0                             l733 579C  
                           l477 5738                             l486 575A                             l495 5594  
                           l489 576E                             l755 5756                             l691 2C8E  
                           l758 563A                             l872 40B4                             l697 56FA  
                           l885 4518                             l989 4C36               verify_color@color 00A3  
              ?_calibrate_white 000E        __end_of_distance_measure 4B74                             _abs 5410  
                           _pad 49EA                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0037                    ___flmul@bexp 003C                    ___flmul@sign 0036  
                  ___flmul@temp 0041                    ___flmul@prod 003D                 __end_of_LED_OFF 567C  
                  ___fltol@exp1 0050                            l1023 4806                            l1032 54FA  
                          ?_abs 0015                            l1028 484C                            l1055 4748  
                          l1303 1C5E                            l1312 1D2E                            l1313 1D1C  
                          l1340 298A                            l1420 3CDE                            l1413 3C46  
                          l1342 27EA                            l1351 2830                            l1416 3DA2  
                          l1328 52C2                            l1520 544E                            l1512 502C  
                          l1353 28A8                            l1345 27AE                            l1513 5034  
                          l1441 513C                            l1354 2896                            l1434 54C2  
                          l1506 3BEE                            l1427 3D3A                            l1372 1EDA  
                          l1532 49E8                            l1540 5306                            l1381 2148  
                          l1517 5446                            l1382 2136                            l1286 1B44  
                          l1295 1E14                            l1287 1B32                            l1551 25F0  
                          l1543 57C2                            l1471 4A72                            l1376 223E  
                          l1288 1AF8                            l1473 4AAE                            l1481 2D3C  
                          l1379 20D0                            l1564 5530                            l1468 4A30  
                          l1389 2200                            l1479 2D34                            l5120 55D6  
                          l6000 1DB4                            l5122 55D8                            l5114 55C4  
                          l6010 1DEE                            l6002 1DD4                            l1499 2F78  
                          l5124 55DA                            l5116 55CE                            l5300 4892  
                          l6100 530A                            l6012 1DF4                            l6004 1DD8  
                          l6020 3A3C                            l5118 55D4                            l5302 48A2  
                          l6110 5346                            l6102 530E                            l6014 1E02  
                          l6006 1DE6                            l6030 3AA8                            l6022 3A60  
                          l5304 48B6                            l5320 5734                            l5312 571C  
                          l6104 5316                            l6200 20B6                            l6120 1E22  
                          l6016 1E04                            l6008 1DEC                            l6040 3B70  
                          l6032 3ACC                            l6024 3A6E                            l7000 387E  
                          l5330 573A                            l5322 5736                            l5314 5726  
                          l6106 531E                            l6210 20F2                            l6202 20C0  
                          l6130 1E62                            l6122 1E30                            l6114 575A  
                          l6050 3BAC                            l6042 3B7E                            l6034 3B14  
                          l6026 3A80                            l7010 38B0                            l5332 5742  
                          l5316 5728                            l6108 5344                            l6220 2164  
                          l6212 2100                            l6204 20CE                            l6140 1E92  
                          l6132 1E68                            l6124 1E32                            l6300 5224  
                          l6116 576A                            l6044 3B92                            l6028 3A84  
                          l7020 38FE                            l7012 38BC                            l5334 574C  
                          l6070 4D38                            l6062 4CF8                            l7110 3226  
                          l7102 56FE                            l5318 5732                            l6310 522E  
                          l6230 21CE                            l6222 2172                            l6214 212E  
                          l6206 20E0                            l6150 1ECA                            l6142 1E94  
                          l6134 1E78                            l6126 1E42                            l6118 1E16  
                          l6038 3B4C                            l6054 3BB8                            l7030 3918  
                          l7014 38D6                            l7006 38A0                            ?_pad 0013  
                          l5328 5792                            l6080 4D82                            l6072 4D44  
                          l6064 4CFC                            l7120 327E                            l7112 3242  
                          l7104 538C                            l5336 56DC                            l6312 5274  
                          l6240 2224                            l6232 21E8                            l6224 219C  
                          l6208 20EE                            l6160 1F1A                            l6152 1EEA  
                          l6144 1EA4                            l6136 1E7E                            l6128 1E52  
                          l6400 2260                            l6304 518E                            l5600 3FC0  
                          l6056 3BDC                            l6048 3B9E                            l6320 5106  
                          l7040 3966                            l7032 3924                            l7016 38DC  
                          l7008 38A4                            l6082 4D9A                            l6074 4D50  
                          l6066 4D14                            l7130 32CE                            l7122 32A4  
                          l7114 3256                            l7106 53A0                            l6090 578C  
                          l5290 5388                            l5282 534A                            l6234 2204  
                          l6242 222A                            l6218 2158                            l6226 21A0  
                          l6170 1F6A                            l6162 1F24                            l6154 1EFA  
                          l6146 1EB4                            l6138 1E84                            l6250 528E  
                          l6410 233C                            l6402 22AA                            l6306 51D4  
                          l6330 556A                            l5610 402A                            l5602 3FC8  
                          l6322 510E                            l7050 3980                            l7034 393E  
                          l7026 3908                            l7018 38F8                            l7202 3E78  
                          l5700 4B8E                            l6076 4D5C                            l6068 4D20  
                          l6340 4C74                            l7140 3346                            l7132 32F0  
                          l7124 32B8                            l7116 3262                            l7108 53B8  
                          l7300 2B06                            l6084 57B2                            l6092 57A8  
                          l5284 535A                            l5292 484E                            l6260 47B6  
                          l6244 222E                            l6236 2214                            l6228 21BA  
                          l6180 1FAC                            l6172 1F76                            l6164 1F3A  
                          l6148 1EC4                            l6420 24E0                            l6404 22BE  
                          l6500 31DA                            l6332 5578                            l5620 4074  
                          l5612 404A                            l5604 3FDC                            l6324 512A  
                          l6316 50EC                            l7060 39CE                            l7052 398C  
                          l7036 3944                            l7028 390C                            l7220 3F08  
                          l7212 3EB0                            l7204 3E84                            l5710 4BB4  
                          l5702 4B92                            l6078 4D6A                            l6350 4CCA  
                          l6342 4C80                            l7150 33AA                            l7142 3348  
                          l7134 3308                            l7118 327A                            l7310 2B8A  
                          l7302 2B32                            l5198 5770                            l6086 57B6  
                          l6094 57AC                            l7230 5550                            l5286 5372  
                          l5294 485A                            l6270 4844                            l6262 47C6  
                          l6254 474A                            l6238 2222                            l6190 200E  
                          l6182 1FBC                            l6174 1F84                            l6166 1F46  
                          l6158 1F0E                            l6422 254C                            l6414 2374  
                          l6406 22FA                            l6502 3210                            l6510 5642  
                          l6334 557C                            l5622 4094                            l5614 404C  
                          l5606 3FEA                            l5630 43C8                            l5550 4920  
                          l6318 50FE                            l7070 39E8                            l7054 39A6  
                          l7046 3970                            l7038 3960                            l7222 3F22  
                          l7214 3EC4                            l7206 3E8A                            l5720 4BEA  
                          l5712 4BC6                            l5704 4BA0                            l6352 4CE2  
                          l6344 4C8C                            l6336 4C38                            l6600 4184  
                          l7160 342A                            l7152 33D6                            l7144 336C  
                          l7136 330A                            l7128 32CC                            l7320 2BFA  
                          l7312 2BA2                            l7304 2B4A                            l5800 55EE  
                          l6088 5788                            l7232 555A                            l7224 5532  
                          l5288 5386                            l5296 486A                            l6432 56BC  
                          l6096 579E                            l6360 466E                            l6272 484A  
                          l6264 47D4                            l6256 4778                            l6192 202A  
                          l6184 1FD6                            l6176 1F90                            l6168 1F5E  
                          l6280 54EA                            l6248 527E                            l6424 2580  
                          l6416 2442                            l6408 231E                            l6520 548A  
                          l6512 569C                            l6504 565C                            l6328 5566  
                          l5616 405E                            l5608 3FFC                            l5640 4438  
                          l5632 43E8                            l5560 49A2                            l5552 4932  
                          l6440 4F5A                            l7080 3A36                            l7072 39F4  
                          l7056 39AC                            l7048 3974                            l7216 3EE4  
                          l7208 3E9A                            l7240 4E06                            l5722 4C00  
                          l5714 4BCE                            l5730 4C16                            l5706 4BA8  
                          l5810 376E                            l6450 4EA0                            l6338 4C5C  
                          l6346 4C9A                            l6610 41EA                            l6602 419E  
                          l7170 34A4                            l7162 344E                            l7154 33D8  
                          l7146 3384                            l7138 332E                            l7330 2C54  
                          l7322 2BFC                            l7314 2BA4                            l7306 2B4C  
                          l5802 55FE                            l7226 5536                            l5298 487E  
                          l6434 56C2                            l6098 57A2                            l6370 46BC  
                          l6362 4698                            l6354 4642                            l6266 47E6  
                          l6258 4788                            l6194 2054                            l6186 1FE6  
                          l6178 1FA0                            l6426 25BC                            l6418 24AE  
                          l6514 56A2                            l6506 5662                            l5618 4064  
                          l5650 44B0                            l5642 4440                            l5634 43EC  
                          l5626 43B6                            l5554 4944                            l5570 52E6  
                          l6290 5010                            l6442 559A                            l7074 3A0E  
                          l7066 39D8                            l7058 39C8                            l6530 5482  
                          l7090 4AEE                            l7082 4AB0                            l7218 3EF4  
                          l7242 4E24                            l7234 4DB8                            l5732 4C26  
                          l5724 4C08                            l5716 4BD6                            l5708 4BAC  
                          l5812 378E                            l5804 36AA                            l6452 4EAC  
                          l6348 4CB2                            l6620 53E2                            l6540 427E  
                          l6612 41F6                            l6604 41B0                            l7164 3466  
                          l7156 33FC                            l7148 3386                            l7172 34A6  
                          l7332 2C66                            l7324 2C0E                            l7316 2BB6  
                          l7308 2B5E                            l7228 5540                            l6700 27B8  
                          l6380 46E8                            l6364 469A                            l6356 465A  
                          l6268 47F4                            l6196 208A                            l6188 2002  
                          l6276 54C4                            l5900 1AC4                            l5820 1962  
                          l6428 25E0                            l6460 2F7C                            l6516 567C  
                          l6508 563C                            l6292 513E                            l5652 44C2  
                          l5644 4454                            l5636 43FA                            l5628 43BA  
                          l5556 494E                            l5564 52C4                            l5572 54FC  
                          l5740 2CB0                            l6284 4FD4                            l6444 55B6  
                          l6436 5036                            l7076 3A14                            l7068 39DC  
                          l6524 5450                            l7092 4AF2                            l7084 4AC6  
                          l7180 3DD8                            l7244 4E42                            l7252 4E60  
                          l7236 4DD0                            l5734 4C2E                            l5726 4C0A  
                          l5718 4BE4                            l5814 37AA                            l5806 36C6  
                          l6454 4EB8                            l6446 4E64                            l6622 53FA  
                          l6550 42CA                            l6542 428A                            l6534 4236  
                          l6614 4206                            l6606 41BC                            l7166 3468  
                          l7158 3428                            l7326 2C3A                            l7318 2BE2  
                          l7270 29D8                            l7262 298E                            l6710 2810  
                          l6702 27D6                            l6630 260E                            l6390 4718  
                          l6366 46AA                            l6198 2098                            l6278 54DA  
                          l5910 1B16                            l5902 1AE0                            l5830 19A2  
                          l5822 1970                            l6470 3008                            l6462 2F88  
                          l6518 5682                            l6294 5184                            l5590 3F64  
                          l5582 3F2E                            l5646 4462                            l5654 44C8  
                          l5638 441A                            l5558 496C                            l5566 52D0  
                          l5574 5508                            l5670 4A28                            l5662 49EA  
                          l5750 2D28                            l5742 2CD8                            l6286 4FDC  
                          l6438 4EF8                            l7078 3A30                            l6526 5454  
                          l7094 4B38                            l7086 4ACA                            l7190 3E22  
                          l7182 3DEC                            l7174 3DA8                            l7246 4E5A  
                          l7238 4DEE                            l5728 4C10                            l5816 3814  
                          l5808 3728                            l6448 4E88                            l6456 4EC6  
                          l6560 431E                            l6552 42D6                            l6536 425A  
                          l6544 4298                            l6616 4220                            l6608 41CC  
                          l7168 348C                            l7328 2C52                            l7280 2A42  
                          l7272 29DA                            l7264 2998                            l6720 284E  
                          l6712 2816                            l6704 27D8                            l6632 261E  
                          l6640 2648                            l6624 25F2                            l6800 3D82  
                          l6392 4728                            l6376 46D4                            l6368 46AE  
                          l5920 1B62                            l5912 1B24                            l5904 1AF0  
                          l5840 19D4                            l5832 19A4                            l5824 1972  
                          l6480 309C                            l6472 301A                            l6464 2F98  
                          l5592 3F72                            l5584 3F32                            l5656 44D8  
                          l5648 4490                            l5568 52E2                            l5576 550C  
                          l5680 4A96                            l5672 4A3C                            l5664 49FA  
                          l5760 2D74                            l5752 2D44                            l5744 2CF8  
                          l6288 4FEA                            l6528 546C                            l7096 4B54  
                          l7088 4AE2                            l7192 3E2E                            l7184 3E00  
                          l7176 3DBA                            l5690 5632                            l6458 4EDE  
                          l6618 53CE                            l6570 4376                            l6562 4330  
                          l6554 42E8                            l6546 42B0                            l6538 4272  
                          l7290 2A9C                            l7282 2A44                            l7274 29EE  
                          l7266 29A8                            l6730 28B8                            l6722 2852  
                          l6714 2820                            l6706 27E8                            l6650 2674  
                          l6642 2658                            l6634 262E                            l6626 25FE  
                          l6802 3D90                            l6394 4738                            l6386 46FC  
                          l6378 46DE                            l5930 1BA2                            l5914 1B26  
                          l5906 1B06                            l5850 19FC                            l5842 19D6  
                          l5826 1982                            l5834 19AC                            l5818 1956  
                          l6490 3144                            l6482 30C0                            l6474 303A  
                          l6466 2FB8                            l6298 51DE                            l6810 34BC  
                          l5594 3F92                            l5586 3F40                            l5658 44F8  
                          l5578 5524                            l5674 4A50                            l5666 4A0E  
                          l5770 2E12                            l5762 2D7E                            l5754 2D56  
                          l5746 2D08                            l5738 2C90                            l7098 4B6C  
                          l7194 3E42                            l7186 3E12                            l7178 3DCC  
                          l6572 4386                            l6564 433C                            l6556 42F4  
                          l6548 42BE                            l6580 40F2                            l7292 2AAE  
                          l7284 2A56                            l7276 29FE                            l7268 29B2  
                          l6740 291A                            l6732 28C4                            l6724 2860  
                          l6716 282E                            l6708 27FA                            l6652 2684  
                          l6660 26AE                            l6644 265E                            l6636 263E  
                          l6628 260C                            l6804 3D92                            l6388 4708  
                          l5940 1BCC                            l5932 1BAE                            l5924 1B76  
                          l5916 1B30                            l5908 1B12                            l5860 1A36  
                          l5852 1A0C                            l5844 19DC                            l5836 19BC  
                          l5828 1992                            l6492 315C                            l6484 30D8  
                          l6476 3052                            l6468 2FD0                            l6820 350E  
                          l6812 34C6                            l5596 3F96                            l5588 3F60  
                          l5684 5410                            l5676 4A54                            l5668 4A1C  
                          l5780 2EE2                            l5764 2D84                            l5772 2E76  
                          l5756 2D66                            l5748 2D0C                            l6900 0F22  
                          l7196 3E5A                            l7188 3E16                            l7380 4F78  
                          l7372 4F68                            l5694 4B74                            l6574 43A0  
                          l6566 434C                            l6558 4304                            l6590 413E  
                          l6582 40FE                            l7294 2ADA                            l7286 2A82  
                          l7278 2A2A                            l6750 2978                            l6742 2930  
                          l6734 28D2                            l6726 288E                            l6718 2840  
                          l6670 26F0                            l6662 26BE                            l6654 2694  
                          l6646 2664                            l6638 2640                            l5950 1C3E  
                          l5934 1BB2                            l5926 1B86                            l5918 1B52  
                          l5942 1BD2                            l5870 1A62                            l5862 1A48  
                          l5854 1A1C                            l5846 19EA                            l5838 19C2  
                          l6398 2240                            l6494 3192                            l6486 3114  
                          l6478 308A                            l6830 3572                            l6822 3526  
                          l6814 34DE                            l5598 3FA2                            l5686 542A  
                          l5678 4A82                            l5790 2F2C                            l5774 2E90  
                          l5782 2EF2                            l5766 2E06                            l5758 2D6C  
                          l6910 10BA                            l6902 0FCA                            l7198 3E60  
                          l7390 4FA4                            l7382 4F84                            l7374 4F6C  
                          l5696 4B78                            l5688 5616                            l6568 436A  
                          l6592 414A                            l6584 410A                            l6576 40B6  
                          l7296 2AF2                            l7288 2A9A                            l6752 297E  
                          l6744 294A                            l6736 28FC                            l6664 26D4  
                          l6656 26A4                            l6648 2672                            l5960 1C98  
                          l5944 1BF8                            l5952 1C4E                            l5936 1BC0  
                          l5928 1B94                            l5880 1A76                            l5872 1A66  
                          l5864 1A56                            l5856 1A1E                            l5848 19EC  
                          l6496 31A4                            l6488 3126                            l6840 35D6  
                          l6832 358A                            l6824 353E                            l6816 34E2  
                          l6808 34B8                            l5792 2F38                            l5784 2F04  
                          l5776 2EAE                            l5768 2E0C                            l6920 1230  
                          l6912 10BE                            l6904 0FE6                            l7392 4FA4  
                          l7384 4F88                            l7376 4F70                            l5698 4B86  
                          l6594 4156                            l6578 40DA                            l6586 4118  
                          l7298 2AF4                            l6754 2980                            l6746 2966  
                          l6738 2900                            l6690 2772                            l6682 2728  
                          l6666 26E4                            l6674 2704                            l6658 26A6  
                          l6770 3C6C                            l6762 3BF2                            l5970 1CC8  
                          l5962 1CA2                            l5954 1C74                            l5946 1C2C  
                          l5938 1BC2                            l5890 1A8A                            l5882 1A7A  
                          l5874 1A6A                            l5866 1A5A                            l5858 1A26  
                          l6498 31C2                            l6850 363A                            l6842 35EE  
                          l6834 35A2                            l6826 3542                            l6818 34F6  
                          l5794 2F40                            l5786 2F14                            l5778 2EC8  
                          l6930 1324                            l6922 124C                            l6914 10CA  
                          l6906 108E                            l7386 4F8C                            l7378 4F74  
                          l6596 4168                            l6588 4130                            l6748 296A  
                          l6692 277A                            l6684 2742                            l6676 2714  
                          l6668 26EC                            l6780 3CC6                            l6764 3C02  
                          l5980 1CF0                            l5972 1CCC                            l5964 1CB0  
                          l5956 1C84                            l5948 1C2E                            l5892 1A8E  
                          l5884 1A7E                            l5876 1A6E                            l5868 1A5E  
                          l6860 369E                            l6852 3652                            l6844 3606  
                          l6836 35A6                            l6828 355A                            l5788 2F1A  
                          l5796 2F50                            l6940 14B2                            l6932 1330  
                          l6924 12F4                            l6916 116C                            l6908 10A2  
                          l7388 4F90                            l6598 4174                            l6694 278A  
                          l6686 2752                            l6678 2714                            l6790 3D2A  
                          l6782 3CC8                            l6774 3C80                            l6766 3C10  
                          l5990 1D4A                            l5982 1CFE                            l5974 1CDC  
                          l5966 1CB2                            l5894 1A92                            l5886 1A82  
                          l5878 1A72                            l6870 455A                            l6862 451A  
                          l6854 366A                            l6846 360A                            l6838 35BE  
                          l6950 168A                            l6942 155A                            l6934 13D2  
                          l6926 1308                            l6918 1188                            l7398 4FA4  
                          l6696 279E                            l6688 2762                            l6792 3D48  
                          l6784 3CD4                            l6776 3C88                            l6768 3C56  
                          l5992 1D58                            l5984 1D14                            l5968 1CC0  
                          l5976 1CDE                            l5888 1A86                            l5896 1A96  
                          l6880 45AE                            l6872 4566                            l6864 4534  
                          l6856 3682                            l6848 3622                            l6960 17A4  
                          l6952 1694                            l6944 1576                            l6936 13EE  
                          l6928 1320                            l6698 27AC                            l6794 3D4A  
                          l6786 3D10                            l6778 3C94                            l5994 1D92  
                          l5978 1CEC                            l5898 1A9A                            l6882 45C6  
                          l6874 457E                            l6866 453E                            l6858 3686  
                          l6970 1806                            l6962 17AC                            l6954 169E  
                          l6946 158E                            l6938 1496                            l6890 0E14  
                          l6796 3D4E                            l6788 3D1C                            l5988 1D3E  
                          l5996 1D94                            l6884 462E                            l6876 458A  
                          l6868 4542                            l6980 185A                            l6964 17B6  
                          l6956 16CC                            l6948 15BC                            l6892 0E5A  
                          l6798 3D72                            l5998 1DA4                            l6886 4638  
                          l6878 45A2                            l6990 18E8                            l6974 180E  
                          l6958 178C                            l6966 17C0                            l6894 0E5E  
                          l6992 18EE                            l6976 1826                            l6968 17EE  
                          l6984 1860                            l6896 0E6A                            l6994 191C  
                          l6986 188C                            l6978 182E                            l6898 0F06  
                          l6996 194A                            l6988 18BA                            STR_1 0E05  
                          STR_3 0E0D                    _BAUD4CONbits 000EE9                            _LATE 000F7D  
                          _LATG 000F7F                            _T2PR 000FBC                            u6000 2CD8  
                          u6001 2CD4                            u6010 2D08                            u6011 2D04  
                          u6100 2F04                            u6020 2D28                            u6101 2F00  
                          u6021 2D24                            u6110 2F14                            u6030 2D56  
                          u6111 2F10                            u6031 2D52                            u7000 46BC  
                          u6200 1982                            u6120 2F2C                            u6040 2D66  
                          u7001 46B8                            u6201 197E                            u6121 2F28  
                          u6041 2D62                            u6130 55FE                            u7010 46D0  
                          u6210 1992                            u6050 2E90              verify_color@color2 00A1  
                          u6131 55FA                            u7011 46CC                            u6211 198E  
                          u6051 2E8C              verify_color@color3 009F                            u6140 5614  
                          u7020 46F8                            u6300 1ADE                            u6220 19D4  
                          u7100 2442                            u6060 2EAE                            u6141 5610  
                          u7021 46F4                            u6221 19D0                            u7101 243E  
                          u6061 2EAA                            u6150 36C6                            u7030 4718  
                          u6310 1B06                            u6230 19EA                            u7110 24E0  
                          u6070 2EC8                            u6151 36C2                            u7031 4714  
                          u6311 1B02                            u6231 19E6                            u7111 24DC  
                          u6071 2EC4                            u6160 37AA                            u7040 4728  
                          u6400 1C3E                            u6320 1B24                            u6240 19FC  
                          u7120 25A0                            u6080 2EE2                            u8000 18E8  
                          u6161 37A6                            u7041 4724                            u6401 1C3A  
                          u6321 1B20                            u6241 19F8                            u6081 2EDE  
                          u8001 18E4                            u6410 1C74                            u6330 1B44  
                          u6250 1A0C                            u7130 25BC                            u7050 2280  
                          u7210 301A                            u6090 2EF2                            u8010 191C  
                          u6411 1C70                            u6331 1B40                            u6251 1A08  
                          u7131 25B8                            u7211 3016                            u6091 2EEE  
                          u8011 1918                            u7140 4EDE                            u8100 32F0  
                          u6500 1D3E                            u6420 1C84                            u6340 1B52  
                          u6260 1A48                            u7060 22AA                            u7220 302C  
                          u5700 496C                            u8020 194A                            u7141 4EDA  
                          u8101 32EC                            u6501 1D3A                            u6421 1C80  
                          u6341 1B4E                            u6261 1A44                            u7125 2596  
                          u7061 22A6                            u7221 3024                            u5701 4968  
                          u8021 1946                            u6174 3804                            u7150 4EF6  
                          u8110 332E                            u6510 1D58                            u6430 1CB0  
                          u6350 1B62                            u6270 1A56                            u6190 1970  
                          u7070 22DE                            u7310 3126                            u5710 49A2  
                          u8030 38F8                            u6175 3800                            u7151 4EF2  
                          u8111 332A                            u6511 1D54                            u6431 1CAC  
                          u6351 1B5E                            u6271 1A52                            u6191 196C  
                          u7055 2276                            u7311 3122                            u5711 499E  
                          u8031 38F4                            u6184 386E                            u8120 336C  
                          u6520 1D92                            u6440 1CC0                            u6360 1B94  
                          u6280 1AC4                            u7080 22FA                            u7320 3138  
                          u7240 3064                            u7208 2FE4                            u7160 2F98  
                          u5800 4074                            u5720 5306                            u6600 3ACC  
                          u8040 3960                            u8200 3E12                            u6185 386A  
                          u8121 3368                            u6521 1D8E                            u6441 1CBC  
                          u6361 1B90                            u6281 1AC0                            u7081 22F6  
                          u7321 3130                            u7241 305C                            u7161 2F94  
                          u5801 4070                            u5721 5302                            u6601 3AC8  
                          u8041 395C                            u8201 3E0E                            u8130 33AA  
                          u6530 1DA4                            u6450 1CDC                            u6370 1BA2  
                          u6290 1ADC                            u7090 233C                            u7410 3224  
                          u7170 2FAA                            u5810 43C8                            u5730 5524  
                          u6610 3B70                            u8050 39C8                            u8210 3E42  
                          u8131 33A6                            u6531 1DA0                            u6451 1CD8  
                          u6371 1B9E                            u6291 1AD6                            u7091 2338  
                          u7075 22D4                            u7411 3220                            u7171 2FA2  
                          u5811 43C4                            u5731 5520                            u6611 3B6C  
                          u8051 39C4                            u8211 3E3E                            u6620 4D14  
                          u7500 4130                            u8140 33FC                            u8300 2A56  
                          u6700 1E42                            u6540 1DB4                            u6460 1CEC  
                          u6380 1BC0                            u7340 316E                            u7308 30EC  
                          u7260 309C                            u5740 3F40                            u5820 43FA  
                          u5900 4A82                            u8060 3A30                            u7420 546C  
                          u8220 3E74                            u6621 4D10                            u7501 412C  
                          u8141 33F8                            u8301 2A52                            u6701 1E3E  
                          u6541 1DB0                            u6461 1CE8                            u6381 1BBC  
                          u7341 3166                            u7261 3098                            u5741 3F3C  
                          u5821 43F6                            u5901 4A7E                            u8061 3A2C  
                          u7421 5468                            u8221 3E70                            u6630 4D38  
                          u7510 4168                            u8150 344E                            u8310 2AAE  
                          u6710 1E52                            u6550 1DD4                            u6470 1CFE  
                          u6390 1BF8                            u7270 30AE                            u7238 302E  
                          u7190 2FE2                            u5750 3F72                            u5830 4438  
                          u5910 542A                            u7430 5482                            u8070 4B6C  
                          u8230 3E9A                            u6631 4D34                            u7511 4164  
                          u8151 344A                            u8311 2AAA                            u6711 1E4E  
                          u6551 1DD0                            u6471 1CFA                            u6391 1BF4  
                          u7271 30A6                            u7191 2FDA                            u5751 3F6E  
                          u5831 4434                            u5911 5426                            u7431 547E  
                          u8071 4B68                            u8231 3E96                            u5920 4B86  
                          u6640 4D82                            u7440 42B0                            u7520 419E  
                          u8160 348C                            u8080 32A4                            u8320 2B06  
                          u7600 2684                            u6800 2100                            u6720 1E92  
                          u6560 1DE6                            u6480 1D14                            u7408 31EE  
                          u7360 31A4                            u5840 4462                            u5680 4932  
                          u8240 3EAC                            u5921 4B82                            u6641 4D7E  
                          u7441 42AC                            u7521 419A                            u8161 3488  
                          u8081 32A0                            u8321 2B02                            u7601 2680  
                          u6801 20FC                            u6721 1E8E                            u6561 1DE2  
                          u6481 1D10                            u7361 31A0                            u5761 3F9C  
                          u5841 445E                            u5681 492E                            u8241 3EA8  
                          u5930 4BA0                            u6650 4D9A                            u7450 42E8  
                          u7530 41B0                            u8170 34B6                            u8090 32C8  
                          u8330 2B5E                            u7610 2694                            u6810 212E  
                          u6730 1EA4                            u6570 1E02                            u6490 1D2A  
                          u7370 31B6                            u7338 313A                            u7290 30EA  
                          u7258 3066                            u5770 3FC0                            u5850 4490  
                          u5690 4944                            u8250 3EF4                            u5931 4B9C  
                          u6651 4D96                            u7451 42E4                            u7531 41AC  
                          u8171 34B2                            u8091 32C4                            u8331 2B5A  
                          u7611 2690                            u6811 212A                            u6731 1EA0  
                          u6571 1DFE                            u6491 1D26                            u7371 31AE  
                          u7291 30E2                            u5771 3FBC                            u5851 448C  
                          u5691 4940                            u8251 3EF0                            u5940 4BC6  
                          u7460 431E                            u7540 41E6                            u8340 2BB6  
                          u7700 284E                            u7620 26D4                            u6660 5332  
                          u6900 47D4                            u6820 2144                            u6740 1EB4  
                          u7188 2FAC                            u5780 3FEA                            u5860 44D8  
                          u6580 3A60                            u8180 3DCC                            u8260 4E42  
                          u5941 4BC2                            u7461 431A                            u7541 41E2  
                          u8341 2BB2                            u7701 284A                            u7621 26D0  
                          u6661 532A                            u6901 47D0                            u6821 2140  
                          u6741 1EB0                            u5781 3FE6                            u5861 44D4  
                          u6581 3A5C                            u8181 3DC8                            u8261 4E3E  
                          u5950 4BE4                            u7470 4330                            u7550 4220  
                          u8350 2C0E                            u7710 2860                            u7630 2714  
                          u6910 47F4                            u6830 2158                            u6750 1EEA  
                          u7390 31EC                            u7358 3170                            u5790 402A  
                          u5870 49FA                            u6590 3AA8                            u8190 3DEC  
                          u8270 4E5A                            u5951 4BE0                            u7471 432C  
                          u7551 421C                            u8351 2C0A                            u7711 285C  
                          u7631 2710                            u6911 47F0                            u6831 2154  
                          u6751 1EE6                            u7391 31E4                            u5791 4026  
                          u5871 49F6                            u6591 3AA4                            u8191 3DE8  
                          u8271 4E56                            u5960 4C00                            u7480 4366  
                          u8360 2C66                            u8280 29A8                            u7720 288E  
                          u7640 278A                            u7560 260C                            u7800 3C10  
                          u6920 4844                            u6840 2172                            u6760 1EFA  
                          u7288 30B0                            u6680 576A                            u5880 4A1C  
                          u5961 4BFC                            u7481 4362                            u8361 2C62  
                          u8281 29A4                            u7721 288A                            u7641 2786  
                          u7561 2608                            u7801 3C0C                            u6921 4840  
                          u6841 216E                            u6761 1EF6                            u6681 5766  
                          u5881 4A18                            u5970 4C26                            u7490 43A0  
                          u8290 29FE                            u7730 28A4                            u7650 27AC  
                          u7570 261E                            u7810 3C6C                            u6850 21BA  
                          u6770 2074                            u6690 1E30                            u6930 54DA  
                          u5890 4A72                            u5971 4C22                            u7491 439C  
                          u8291 29FA                            u7731 28A0                            u7651 27A8  
                          u7571 261A                            u7811 3C68                            u6851 21B6  
                          u6691 1E2C                            u6931 54D6                            u5891 4A6E  
                          u8507 38C8                            u7740 28B8                            u7660 27D6  
                          u7580 262E                            u7820 3CC2                            u6860 21E8  
                          u6780 20CE                            u7388 31B8                            u5980 2CC0  
                          u6940 502C                            u7900 168A                            u7741 28B4  
                          u7661 27D2                            u7581 262A                            u7821 3CBE  
                          u6861 21E4                            u6781 20CA                            u5981 2CBA  
                          u6941 5028                            u8517 3930                            u7901 1686  
                          u8437 4DC2                            u7750 28D2                            u7670 27FA  
                          u7590 2672                            u7830 3D0C                            u6678 5334  
                          u6870 2222                            u6790 20EE                            u6950 5594  
                          u5990 2CC2                            u7910 16CC                            u7751 28CE  
                          u7671 27F6                            u7591 266E                            u7831 3D08  
                          u6871 221E                            u6791 20EA                            u6775 206A  
                          u8607 564C                            u6951 5590                            u8527 3998  
                          u7911 16C8                            u8447 4DF8                            u6960 4CB2  
                          u7760 291A                            u7680 2810                            u7840 3D2A  
                          u6880 4778                            u7920 178C                            u6961 4CAE  
                          u7761 2916                            u7681 280C                            u7841 3D26  
                          u6881 4774                            u8617 566C                            u8537 3A00  
                          u7921 1788                            u8457 3F14                            u6970 4CCA  
                          u7770 294A                            u7690 282E                            u7850 3D3A  
                          u6890 47B6                            u7930 17A4                            u6971 4CC6  
                          u7771 2946                            u7691 282A                            u7851 3D36  
                          u6891 47B2                            u8707 3044                            u8627 568C  
                          u8547 34D0                            u7931 17A0                            u8467 4AD4  
                          u7780 2978                            u7860 3D48                            u6980 465A  
                          u7940 17EE                            u7781 2974                            u7861 3D44  
                          u6981 4656                            u8717 307C                            u8637 56AC  
                          u8557 3530                            u7941 17EA                            u8477 10AC  
                          u7870 3D82                            u7790 3C02                            u6990 468E  
                          u7950 1806                            u8807 53AA                            u7871 3D7E  
                          u7791 3BFE                            u8727 30CA                            u8647 454C  
                          u8567 3594                            u7951 1802                            u8487 1312  
                          u7880 3D90                            u7960 1826                            u8817 326C  
                          u7881 3D8C                            u8737 3106                            u8657 4570  
                          u8577 35F8                            u7961 1822                            u8497 1580  
                          u7970 185A                            u7890 15BC                            u8907 53EC  
                          u8827 4110                            u6995 4684                            u8747 314E  
                          u8667 4594                            u8587 3674                            u7971 1856  
                          u7891 15B8                            u7980 188C                            u8917 4C92  
                          u8837 417A                            u8757 3184                            u8677 45B8  
                          u8597 3690                            u7981 1888                            u7990 18BA  
                          u8927 4CD4                            u8847 41C2                            u8767 31CC  
                          u8687 2FC2                            u7991 18B6                            u8937 4D62  
                          u8857 41FC                            u8777 3202                            u8697 2FFA  
                          u8947 4DA4                            u8867 4290                            u8787 56CC  
                          u8957 4EBE                            u8877 42FA                            u8797 5546  
                          u8887 4342                            u8897 437C                            abs@a 0015  
                          _dbuf 019D                            _main 4F68                            _dtoa 2C90  
                          _prec 0194                            _nout 0190                            pad@i 001A  
                          pad@p 0017                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001C                            fsr2l 000FD9                            btemp 005C  
                          _stop 4CF8                            prodh 000FF4                            prodl 000FF3  
                          start 0048                  ?_color_display 0079                 ___fldiv@new_exp 0022  
        __end_of_color_read_Red 518E                 __end_of_HighISR 57C0                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0017                           ??_pad 0019  
                 ___fltol@sign1 004F                 __end_of___aodiv 40B6       amb_light_measure@CC_amb_1 0080  
     amb_light_measure@CC_amb_2 0082       amb_light_measure@CC_amb_3 0084                 __end_of___fladd 1E16  
                         ?_main 0001                           ?_dtoa 001E                 __end_of___aomod 451A  
               __end_of___fldiv 298C                 __end_of___awdiv 4C38                 __end_of___flneg 54FC  
               __end_of___flmul 2240                 __end_of___flsub 52C4                 __end_of___fltol 474A  
                         ?_stop 001C                 ___awdiv@divisor 000B                           _LED_B 569C  
                         _LED_C 56BC                           _LED_G 567C                           _LED_R 563C  
                         i1l744 003C                           i2l738 57BC                 ___awdiv@counter 000D  
                  vfpfcnvrt@fmt 0044                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5770      __end_of_I2C_2_Master_Start 57BC         ??_color_data_collection 00E1  
    __end_of_I2C_2_Master_Write 5792                 __end_of_compare 548A                    compare@lower 007A  
                         _flags 00F5                           _color 019C                    compare@upper 007E  
                         _fputc 4920                           _fputs 52C4                           pad@fp 0013  
                         _width 0192                           _putch 57C2                           _toint 0E01  
                         dtoa@d 0020                           dtoa@i 0040                           dtoa@n 0038  
                         dtoa@p 0032                           dtoa@s 0036                           dtoa@w 0034  
               ??_test_function 00F3            amb_light_measure@amb 007A                           tablat 000FF5  
               __end_of_lroundf 54C4                           ttemp5 005D                           ttemp6 0060  
                         ttemp7 0064                           status 000FD8                           wtemp8 005D  
               __end_of_sprintf 513E                color_display@buf 007B         __end_of_color_read_Blue 522E  
         _I2C_2_Master_RepStart 579E                 ??_short_reverse 002C                 ?_color_read_Red 0007  
               __initialization 5094                    __end_of_main 4FD4                    __end_of_dtoa 2F7A  
          __end_of_detect_color 1956                    __end_of_stop 4DB4          color_data_collection@i 00E3  
        color_data_collection@j 00E5          color_data_collection@k 00E7          color_data_collection@m 00DF  
        color_data_collection@x 00E9                          ??_main 005A                          ??_dtoa 0028  
                        ??_stop 0020                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
               _buggylight_init 5770                       ??_LED_OFF 0003          _initDCmotors_parameter 484E  
                  ?_setMotorPWM 0011                          ?_fputc 0003                          ?_fputs 000C  
              ___awdiv@dividend 0009                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i1l5544 0022  
                        i1l5546 0032                          i1l5548 0038              turnLeft@angle_left 0026  
                     ??_HighISR 0001        __end_of_color_click_init 5566                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 3DA4  
                        _LowISR 0018                   ??_Timer0_init 0003                 ??_color_predict 005A  
                  vfprintf@cfmt 0058                          ___flge 474A                       ??___aodiv 0013  
                     ??___fladd 000B                       ??___aomod 0013                          ___wmul 5616  
                     ??___fldiv 0019                       ??___awdiv 000D                       ??___flneg 0007  
                     ??___flmul 0032                          _action 298C                       ??___flsub 001B  
                     ??___fltol 004B                          _goback 3226                   compare@result 0051  
                        _memory 013C                          clear_0 50C4                ___awdiv@quotient 000F  
                        _second 019A                          _motorL 0182                          _motorR 0178  
                        isa$std 000001                          pad@buf 0015                          _roundf 2240  
                        dtoa@fp 001E                          _strlen 54FC                       ??_compare 0051  
                 toggle_light@i 0006                __end_of_pin_init 56FC                          fputc@c 0003  
       toggle_light@lightnumber 0007                          fputs@c 0010                          fputs@i 0011  
                        fputs@s 000C                  test_function@m 00EB                  test_function@w 00ED  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 0051  
                   read_color@m 000E                          putch@c 0001                __end_of_vfprintf 5036  
                        stop@mL 001C                          stop@mR 001E               ??_initDCmotorsPWM 0005  
                     ??_sprintf 005A                __end_of_turnLeft 43B6                      ___flge@ff1 0003  
                    ___flge@ff2 0007                    ___xxtofl@arg 000D                    ___xxtofl@exp 000C  
                  ___xxtofl@val 0003                calibrate_white@w 000E                 fullSpeedBack@mL 0022  
               fullSpeedBack@mR 0024                      __accesstop 0060         __end_of__initialization 50DA  
                 verify_color@m 009B                   verify_color@w 009D        __end_of_color_read_Clear 527E  
                    ___flneg@f1 0003        __end_of_color_read_Green 51DE          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0003    initDCmotors_parameter@motorR 0005  
                 ___rparam_used 000001                      ___fltol@f1 0072                   __end_of_LED_B 56BC  
                 __end_of_LED_C 56DC                   __end_of_LED_G 569C                   __end_of_LED_R 565C  
              ?_color_read_Blue 0007                 _Interrupts_init 5792                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 4C38                    __pidataBANK0 57C4                    __pidataBANK1 57C0  
       __end_of_buggylight_init 5786            turnRight@angle_right 0026           _distance_measure$3216 0082  
                 __end_of_fputc 49EA               detect_color@color 0094                   __end_of_fputs 5308  
                 __end_of_putch 57C4                   __end_of_toint 0E05             __end_of_Timer0_init 5758  
                       ??_LED_B 0003                         ??_LED_C 0003                         ??_LED_G 0003  
                       ??_LED_R 0003               ?_distance_measure 007A              ??_distance_measure 0051  
                       ??_fputc 0007                         ??_fputs 0010                         ??_putch 0003  
                    __pbssBANK0 00F5                      __pbssBANK1 0100                color_predict@buf 0079  
     distance_measure@amb_light 007E                         ?_LowISR 0001               _color_writetoaddr 56FC  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0022                         ?___flge 0003  
            ?_color_writetoaddr 0005                         ?___wmul 0003                         ?_action 003C  
                       ?_goback 0034                         ?_roundf 0043             ??_color_writetoaddr 0006  
                       ?_strlen 0003                         _LED_OFF 565C                       ?___xxtofl 0003  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 007C                    _detect_color 0E14   __end_of_color_data_collection 3A3C  
       __end_of_Interrupts_init 579E          color_writetoaddr@value 0005                ??_color_read_Red 0009  
                       _HighISR 0008       __end_of_color_writetoaddr 571C              _I2C_2_Master_Start 57B2  
                    _initUSART4 571C              _I2C_2_Master_Write 5786                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 01BF                         __Lparam 0000  
             color_read_Red@tmp 000C                     _Timer0_init 573A         sendStringSerial4@string 0004  
                       ___aodiv 3F2E                         ___fladd 1956                         ___aomod 43B6  
                       ___fldiv 25F2                         ___awdiv 4B74                         ___flneg 54C4  
                       ___flmul 1E16                         ___flsub 527E                         ___fltol 4642  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0052                    __psmallconst 0E00       distance_measure@threshold 0088  
                       __pcinit 5094                         __ramtop 0E00                      _read_color 5036  
                     ?_turnLeft 0022                         __ptext0 4F68                         __ptext1 4DB4  
                       __ptext2 3DA4                         __ptext3 4AB0                         __ptext4 0E14  
                       __ptext5 5450                         __ptext6 387E                         __ptext7 5036  
                       __ptext8 5596                         __ptext9 4EF8                         _compare 5450  
       ?_initDCmotors_parameter 0003                       _T2CONbits 000FBD                      ??___xxtofl 0007  
                     _T2HLTbits 000FBE                         _lroundf 548A                   _RxBufWriteCnt 00F9  
                       goback@i 003A          distance_measure@CC_amb 0086          distance_measure@CG_amb 0080  
                       _sprintf 50EC                         main@rgb 01C3            ??_I2C_2_Master_Start 0004  
          ??_I2C_2_Master_Write 0004                  __pintcode_body 57BC            end_of_initialization 50DA  
            setMotorPWM@PWMduty 001A                 _CALIBRATION_135 01FA                 _CALIBRATION_180 01F9  
                       fputc@fp 0005           __end_of_test_function 3F2E                         int_func 57BC  
                       fputs@fp 000E               ?_color_click_init 0001                 test_function@mL 00EF  
               test_function@mR 00F1                 ??_fullSpeedBack 0026                      ??_pin_init 0003  
            ??_color_click_init 0007               __end_of_vfpfcnvrt 3BF0           __end_of_short_reverse 53CE  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 0064  
                       roundf@u 006A                         roundf@x 0043                         roundf@y 006E  
                    ??_vfprintf 0058                         strlen@a 0005                         strlen@s 0003  
               _initDCmotorsPWM 534A                      ??_turnLeft 0027  __end_of_initDCmotors_parameter 4920  
                     _PORTFbits 000F8E        test_function@stop_signal 01C1               __end_of_turnRight 4236  
                   ___fladd@grs 0012                   ___xxtofl@sign 000B                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0024                     ___fldiv@rem 001D                fullSpeedAhead@mL 001C  
              fullSpeedAhead@mR 001E        color_writetoaddr@address 0006         ??_I2C_2_Master_RepStart 0004  
                    _start_move 0198                ?_Interrupts_init 0001                     ___flmul@grs 0038  
                 ?_toggle_light 0003               ?_color_read_Clear 0007                    _EUSART4RXbuf 0164  
                  _EUSART4TXbuf 0100               ?_color_read_Green 0007                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0003                   ?_verify_color 009B           __end_of_color_display 4F68  
                    main@motorL 01E5                      main@motorR 01EF     amb_light_measure@CC_amb_ave 007E  
             ??_calibrate_white 0010              ??_color_read_Clear 0009                  color_display@m 0079  
            ??_color_read_Green 0009                  detect_color@BB 0092                  detect_color@BG 0095  
                detect_color@GB 0086                  detect_color@GG 008C                  detect_color@BR 0090  
                detect_color@GR 008A                  detect_color@RB 0084                  detect_color@RG 0088  
                detect_color@RR 008E                  __end_of_LowISR 0048           __end_of_color_predict 55C4  
                __end_of___flge 484E                  _fullSpeedAhead 4E64                     vfpfcnvrt@ap 0046  
                   vfpfcnvrt@fp 0042                     vfpfcnvrt@ll 004A                  __end_of___wmul 563C  
                __end_of_action 2C90                     ?_read_color 000E                  __end_of_goback 34B8  
                __end_of_roundf 25F2              turnRight@delay_135 0028              turnRight@delay_180 002A  
                __end_of_strlen 5532             color_read_Clear@tmp 000C             start_initialization 5094  
                   __end_of_abs 5450                     __end_of_pad 4AB0                   _TxBufWriteCnt 005B  
             turnLeft@delay_135 0028               turnLeft@delay_180 002A                  ??_toggle_light 0004  
                ??_verify_color 0056             color_read_Green@tmp 000C                        ??_LowISR 0001  
                _reverse_square 53CE         __end_of_initDCmotorsPWM 538C                     vfprintf@fmt 0054  
        __end_of_fullSpeedAhead 4EF8                        ??___flge 000B                        ??___wmul 0007  
                      ??_action 0040                        ??_goback 0038                 short_reverse@mL 0028  
               short_reverse@mR 002A                     __pdataBANK0 00FA                     __pdataBANK1 01F9  
                      ??_roundf 0047                        ??_strlen 0005                       ___fladd@a 0007  
                     ___fladd@b 0003                        ?_LED_OFF 0001                       ___fldiv@a 0015  
                     ___fldiv@b 0011                       ___flmul@a 002E                       ___flmul@b 002A  
                   __pbssCOMRAM 005A                       ___flsub@a 0017                       ___flsub@b 0013  
                 __pcstackBANK0 0060                   __pcstackBANK1 01BD                ___aodiv@dividend 0003  
                      ?_HighISR 0001          __end_of_reverse_square 5410                       _dtoa$2865 0030  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001C                       __pintcode 0008  
                      ?___aodiv 0003                        ?___fladd 0003                        ?___aomod 0003  
                      ?___fldiv 0011                        ?___awdiv 0009                ___aodiv@quotient 0015  
                      ?___flneg 0003                        ?___flmul 002A                        ?___flsub 0013  
                      ?___fltol 0072              test_function@color 01C0                     __pintcodelo 0018  
               turnRight@i_1500 002E                 turnRight@i_1501 0030                  turnLeft@i_1476 002E  
                turnLeft@i_1477 0030            I2C_2_Master_Read@ack 0005            I2C_2_Master_Read@tmp 0006  
                      ?_compare 007A                     __smallconst 0E00               _I2C_2_Master_Idle 55EE  
             _I2C_2_Master_Init 55C4               _I2C_2_Master_Read 5308               _I2C_2_Master_Stop 57A8  
        toggle_light@toggletime 0003                    _RxBufReadCnt 00F8                        ?_lroundf 0076  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0013              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0003  
                      ?_sprintf 0060               _sendStringSerial4 5566           _color_data_collection 387E  
           ??_I2C_2_Master_Idle 0003             ??_I2C_2_Master_Init 0003             ??_I2C_2_Master_Read 0004  
                ___wmul@product 0007                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0004  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0028                        _PIE0bits 000E29              ?_sendStringSerial4 0004  
                      _PIE4bits 000E2D                     turnRight@mL 0022                     turnRight@mR 0024  
                      i1u567_20 0032                        i1u567_21 002E                        _PIR0bits 000E33  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0003               ??_sendCharSerial4 0003  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0006                        _SSP2STAT 000ED8  
                   _array_index 005A                       _vfpfcnvrt 3A3C       __end_of_I2C_2_Master_Idle 5616  
          __end_of_toggle_light 3226       __end_of_I2C_2_Master_Init 55EE       __end_of_I2C_2_Master_Read 534A  
             ___wmul@multiplier 0003       __end_of_I2C_2_Master_Stop 57B2                    setMotorPWM@m 0011  
   I2C_2_Master_Write@data_byte 0004            __end_of_verify_color 4E64          test_function@amb_light 01BD  
                     main@white 01CB               ??_color_read_Blue 0009                       _stop_move 0196  
                 detect_color@m 0080                   detect_color@w 0082                    _TxBufReadCnt 00F7  
                     _turnRight 40B6                 _calibrate_white 34B8       __end_of_sendStringSerial4 5596  
             _amb_light_measure 451A   __end_of_I2C_2_Master_RepStart 57A8              color_read_Blue@tmp 000C  
           __end_of_setMotorPWM 387E                      roundf@F527 018C                _distance_measure 4AB0  
                  ??_initUSART4 0003              ?_amb_light_measure 007A                        __Hrparam 0000  
                    vfprintf@ap 0056                        __Lrparam 0000                      vfprintf@fp 0052  
         __end_of_fullSpeedBack 4CF8                    __Lsmallconst 0E00            compare@value2compare 007C  
           ??_amb_light_measure 0051                      ?_vfpfcnvrt 0042                    ??_read_color 0010  
               ___aodiv@divisor 000B                 ___aodiv@counter 0013                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 0042                      sprintf@fmt 0062  
                      ___xxtofl 3BF0                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 573A                      ?_turnRight 0022                        __ptext10 50EC  
                      __ptext11 4FD4                        __ptext20 43B6                        __ptext12 3A3C  
                      __ptext21 3F2E                        __ptext13 2C90                        __ptext30 567C  
                      __ptext22 5566                        __ptext14 49EA                        __ptext31 569C  
                      __ptext23 5758                        __ptext15 54FC                        __ptext40 474A  
                      __ptext32 451A                        __ptext24 34B8                        __ptext16 52C4  
                      __ptext41 4642                        __ptext33 2F7A                        __ptext25 513E  
                      __ptext17 4920                        __ptext50 484E                        __ptext42 522E  
                      __ptext34 548A                        __ptext26 518E                        __ptext18 57C2  
                      __ptext51 534A                        __ptext43 579E                        __ptext35 2240  
                      __ptext27 51DE                        __ptext19 5410                        __ptext60 298C  
                      __ptext52 5532                        __ptext44 5308                        __ptext36 527E  
                      __ptext28 563C                        __ptext61 538C                        __ptext53 56FC  
                      __ptext45 3BF0                        __ptext37 1956                        __ptext29 565C  
                      __ptext70 5616                        __ptext62 3226                        __ptext54 5786  
                      __ptext46 25F2                        __ptext38 54C4                        __ptext71 4B74  
                      __ptext63 40B6                        __ptext55 57A8                        __ptext47 56BC  
                      __ptext39 1E16                        __ptext72 573A                        __ptext64 4236  
                      __ptext56 57B2                        __ptext48 56DC                        __ptext73 5792  
                      __ptext65 53CE                        __ptext57 55EE                        __ptext49 571C  
                      __ptext66 4C38                        __ptext58 55C4                        __ptext67 4CF8  
                      __ptext59 5770                        __ptext68 4E64                        __ptext69 36AA  
     __end_of_amb_light_measure 4642                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 00DF                  turnRight@delay 0032          test_function@test_code 01C2  
                 turnLeft@delay 0032                        action@mL 003C                        action@mR 003E  
                    turnLeft@mL 0022                      turnLeft@mR 0024              __end_of_read_color 5094  
                      _pin_init 56DC                      turnRight@i 002C                        isa$xinst 000000  
          distance_measure@stop 008A                      _RC4STAbits 000EE7                        int$flags 005C  
                   _SENSITIVITY 00FA                        goback@mL 0034                        goback@mR 0036  
                      _vfprintf 4FD4                        _turnLeft 4236                ___aomod@dividend 0003  
       __end_of_calibrate_white 36AA                      _INTCONbits 000FF2                     _setMotorPWM 36AA  
                 ?_detect_color 0080                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0003                ??_fullSpeedAhead 0020                   _test_function 3DA4  
                     turnLeft@i 002C                reverse_square@mL 0028                reverse_square@mR 002A  
                      lroundf@x 0076        ??_initDCmotors_parameter 0007                   _short_reverse 538C  
               ___aomod@divisor 000B                     ??_vfpfcnvrt 0048                 ___aomod@counter 0013  
              _color_click_init 5532                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$3215 0097                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@mL 007A              distance_measure@mR 007C                  ??_detect_color 0052  
                   ??_turnRight 0027                   ___fladd@signs 000F                ??_reverse_square 002C  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0014                 _sendCharSerial4 5758  
                  ___fladd@aexp 0010                    ___fladd@bexp 0011                  ?_test_function 00EB  
                  _toggle_light 2F7A                    ___aomod@sign 0014                    _verify_color 4DB4  
                   _roundf$3217 0066                     _roundf$3218 0060                   _color_display 4EF8  
