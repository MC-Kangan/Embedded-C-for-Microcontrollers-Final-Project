

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Mar 11 17:08:58 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.35
    98                           ; Generated 05/05/2021 GMT
    99                           ; 
   100                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution. Publication is not required when
   114                           ;        this file is used in an embedded application.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F67K40 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK0
   134  0055F8                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _CALIBRATION_180
   138  0055F8  14                 	db	20
   139                           
   140                           ;initializer for _SENSITIVITY
   141  0055F9  0A                 	db	10
   142                           
   143                           	psect	smallconst
   144  000E00                     __psmallconst:
   145                           	callstack 0
   146  000E00  00                 	db	0
   147  000E01  0000               	dw	0
   148  000E03  4B00               	dw	19200
   149  000E05                     __end_of_toint:
   150                           	callstack 0
   151  0000                     _TX4REG	set	3812
   152  0000                     _RC4STAbits	set	3815
   153  0000                     _SP4BRGH	set	3814
   154  0000                     _LATEbits	set	3965
   155  0000                     _TRISGbits	set	3975
   156  0000                     _TRISEbits	set	3973
   157  0000                     _LATGbits	set	3967
   158  0000                     _LATFbits	set	3966
   159  0000                     _TRISFbits	set	3974
   160  0000                     _SSP2CON2bits	set	3802
   161  0000                     _LATG	set	3967
   162  0000                     _LATE	set	3965
   163  0000                     _RX4PPS	set	3605
   164  0000                     _SSP2CLKPPS	set	3612
   165  0000                     _SSP2DATPPS	set	3613
   166  0000                     _ANSELDbits	set	3751
   167  0000                     _SSP2ADD	set	3798
   168  0000                     _SSP2CON1bits	set	3801
   169  0000                     _LATAbits	set	3961
   170  0000                     _LATDbits	set	3964
   171  0000                     _LATHbits	set	3968
   172  0000                     _TRISDbits	set	3972
   173  0000                     _TRISHbits	set	3976
   174  0000                     _PORTFbits	set	3982
   175  0000                     _T2PR	set	4028
   176  0000                     _T2CONbits	set	4029
   177  0000                     _PWM7DCH	set	4000
   178  0000                     _PWM6DCH	set	4003
   179  0000                     _TRISAbits	set	3969
   180  0000                     _TRISCbits	set	3971
   181  0000                     _LATCbits	set	3963
   182  0000                     _RC4REG	set	3811
   183  0000                     _SP4BRGL	set	3813
   184  0000                     _TX4STAbits	set	3816
   185  0000                     _BAUD4CONbits	set	3817
   186  0000                     _SSP2CON2	set	3802
   187  0000                     _SSP2STAT	set	3800
   188  0000                     _ANSELFbits	set	3764
   189  0000                     _SSP2BUF	set	3797
   190  0000                     _PIE0bits	set	3625
   191  0000                     _PIE4bits	set	3629
   192  0000                     _PIR4bits	set	3639
   193  0000                     _RC0PPS	set	3682
   194  0000                     _RC7PPS	set	3689
   195  0000                     _RD5PPS	set	3695
   196  0000                     _RE2PPS	set	3700
   197  0000                     _RD6PPS	set	3696
   198  0000                     _TMR0L	set	4051
   199  0000                     _TMR0H	set	4052
   200  0000                     _T0CON0bits	set	4053
   201  0000                     _T2CLKCONbits	set	4031
   202  0000                     _T2HLTbits	set	4030
   203  0000                     _PWM6CONbits	set	4004
   204  0000                     _PWM7CONbits	set	4001
   205  0000                     _PIR0bits	set	3635
   206  0000                     _T0CON1bits	set	4054
   207  0000                     _INTCONbits	set	4082
   208  000E05                     STR_1:
   209  000E05  25                 	db	37
   210  000E06  64                 	db	100	;'d'
   211  000E07  09                 	db	9
   212  000E08  25                 	db	37
   213  000E09  64                 	db	100	;'d'
   214  000E0A  09                 	db	9
   215  000E0B  25                 	db	37
   216  000E0C  64                 	db	100	;'d'
   217  000E0D  09                 	db	9
   218  000E0E  25                 	db	37
   219  000E0F  64                 	db	100	;'d'
   220  000E10  0D                 	db	13
   221  000E11  0A                 	db	10
   222  000E12  00                 	db	0
   223  000E13  00                 	db	0	; dummy byte at the end
   224  0000                     
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228  005074                     __pcinit:
   229                           	callstack 0
   230  005074                     start_initialization:
   231                           	callstack 0
   232  005074                     __initialization:
   233                           	callstack 0
   234                           
   235                           ; Initialize objects allocated to BANK0 (2 bytes)
   236                           ; load TBLPTR registers with __pidataBANK0
   237  005074  0EF8               	movlw	low __pidataBANK0
   238  005076  6EF6               	movwf	tblptrl,c
   239  005078  0E55               	movlw	high __pidataBANK0
   240  00507A  6EF7               	movwf	tblptrh,c
   241  00507C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   242  00507E  6EF8               	movwf	tblptru,c
   243  005080  0009               	tblrd		*+	;fetch initializer
   244  005082  CFF5 F0FE          	movff	tablat,__pdataBANK0
   245  005086  0009               	tblrd		*+	;fetch initializer
   246  005088  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   247                           
   248                           ; Clear objects allocated to BANK1 (177 bytes)
   249  00508C  EE01  F000         	lfsr	0,__pbssBANK1
   250  005090  0EB1               	movlw	177
   251  005092                     clear_0:
   252  005092  6AEE               	clrf	postinc0,c
   253  005094  06E8               	decf	wreg,f,c
   254  005096  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK0 (17 bytes)
   257  005098  EE00  F0ED         	lfsr	0,__pbssBANK0
   258  00509C  0E11               	movlw	17
   259  00509E                     clear_1:
   260  00509E  6AEE               	clrf	postinc0,c
   261  0050A0  06E8               	decf	wreg,f,c
   262  0050A2  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to COMRAM (2 bytes)
   265  0050A4  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   266  0050A6  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   267  0050A8                     end_of_initialization:
   268                           	callstack 0
   269  0050A8                     __end_of__initialization:
   270                           	callstack 0
   271  0050A8  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272  0050AA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  0050AC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   274  0050AE  6EF8               	movwf	tblptru,c
   275  0050B0  0E0E               	movlw	high __Lsmallconst
   276  0050B2  6EF7               	movwf	tblptrh,c
   277  0050B4  0100               	movlb	0
   278  0050B6  EF7E  F020         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  00005A                     __pbssCOMRAM:
   282                           	callstack 0
   283  00005A                     _array_index:
   284                           	callstack 0
   285  00005A                     	ds	1
   286  00005B                     _TxBufWriteCnt:
   287                           	callstack 0
   288  00005B                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291  0000ED                     __pbssBANK0:
   292                           	callstack 0
   293  0000ED                     _nout:
   294                           	callstack 0
   295  0000ED                     	ds	2
   296  0000EF                     _width:
   297                           	callstack 0
   298  0000EF                     	ds	2
   299  0000F1                     _prec:
   300                           	callstack 0
   301  0000F1                     	ds	2
   302  0000F3                     _flags:
   303                           	callstack 0
   304  0000F3                     	ds	2
   305  0000F5                     _stop_move:
   306                           	callstack 0
   307  0000F5                     	ds	2
   308  0000F7                     _start_move:
   309                           	callstack 0
   310  0000F7                     	ds	2
   311  0000F9                     _second:
   312                           	callstack 0
   313  0000F9                     	ds	2
   314  0000FB                     _TxBufReadCnt:
   315                           	callstack 0
   316  0000FB                     	ds	1
   317  0000FC                     _RxBufReadCnt:
   318                           	callstack 0
   319  0000FC                     	ds	1
   320  0000FD                     _RxBufWriteCnt:
   321                           	callstack 0
   322  0000FD                     	ds	1
   323                           
   324                           	psect	dataBANK0
   325  0000FE                     __pdataBANK0:
   326                           	callstack 0
   327  0000FE                     _CALIBRATION_180:
   328                           	callstack 0
   329  0000FE                     	ds	1
   330  0000FF                     _SENSITIVITY:
   331                           	callstack 0
   332  0000FF                     	ds	1
   333                           
   334                           	psect	bssBANK1
   335  000100                     __pbssBANK1:
   336                           	callstack 0
   337  000100                     _EUSART4TXbuf:
   338                           	callstack 0
   339  000100                     	ds	60
   340  00013C                     _memory:
   341                           	callstack 0
   342  00013C                     	ds	40
   343  000164                     _EUSART4RXbuf:
   344                           	callstack 0
   345  000164                     	ds	20
   346  000178                     _motorR:
   347                           	callstack 0
   348  000178                     	ds	10
   349  000182                     _motorL:
   350                           	callstack 0
   351  000182                     	ds	10
   352  00018C                     roundf@F527:
   353                           	callstack 0
   354  00018C                     	ds	4
   355  000190                     _color:
   356                           	callstack 0
   357  000190                     	ds	1
   358  000191                     _dbuf:
   359                           	callstack 0
   360  000191                     	ds	32
   361                           
   362                           	psect	cstackBANK1
   363  0001B1                     __pcstackBANK1:
   364                           	callstack 0
   365  0001B1                     main@stop_signal:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x0
   369  0001B1                     	ds	1
   370  0001B2                     main@white:
   371                           	callstack 0
   372                           
   373                           ; 26 bytes @ 0x1
   374  0001B2                     	ds	26
   375  0001CC                     main@rgb:
   376                           	callstack 0
   377                           
   378                           ; 8 bytes @ 0x1B
   379  0001CC                     	ds	8
   380  0001D4                     main@motorL:
   381                           	callstack 0
   382                           
   383                           ; 10 bytes @ 0x23
   384  0001D4                     	ds	10
   385  0001DE                     main@motorR:
   386                           	callstack 0
   387                           
   388                           ; 10 bytes @ 0x2D
   389  0001DE                     	ds	10
   390                           
   391                           	psect	cstackBANK0
   392  000060                     __pcstackBANK0:
   393                           	callstack 0
   394  000060                     ?_sprintf:
   395                           	callstack 0
   396  000060                     sprintf@s:
   397                           	callstack 0
   398  000060                     _roundf$3062:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402  000060                     	ds	2
   403  000062                     sprintf@fmt:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x2
   407  000062                     	ds	2
   408  000064                     roundf@e:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x4
   412  000064                     	ds	2
   413  000066                     _roundf$3061:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x6
   417  000066                     	ds	4
   418  00006A                     roundf@u:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0xA
   422  00006A                     	ds	2
   423  00006C                     sprintf@ap:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xC
   427  00006C                     	ds	2
   428  00006E                     roundf@y:
   429                           	callstack 0
   430  00006E                     sprintf@f:
   431                           	callstack 0
   432                           
   433                           ; 11 bytes @ 0xE
   434  00006E                     	ds	4
   435  000072                     ?___fltol:
   436                           	callstack 0
   437  000072                     ___fltol@f1:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x12
   441  000072                     	ds	4
   442  000076                     ?_lroundf:
   443                           	callstack 0
   444  000076                     lroundf@x:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x16
   448  000076                     	ds	3
   449  000079                     color_display@m:
   450                           	callstack 0
   451  000079                     color_predict@buf:
   452                           	callstack 0
   453                           
   454                           ; 100 bytes @ 0x19
   455  000079                     	ds	1
   456  00007A                     compare@lower:
   457                           	callstack 0
   458  00007A                     distance_measure@mL:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x1A
   462  00007A                     	ds	1
   463  00007B                     color_display@buf:
   464                           	callstack 0
   465                           
   466                           ; 100 bytes @ 0x1B
   467  00007B                     	ds	1
   468  00007C                     compare@value2compare:
   469                           	callstack 0
   470  00007C                     distance_measure@mR:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1C
   474  00007C                     	ds	2
   475  00007E                     compare@upper:
   476                           	callstack 0
   477  00007E                     distance_measure@w:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1E
   481  00007E                     	ds	2
   482  000080                     detect_color@m:
   483                           	callstack 0
   484  000080                     distance_measure@CG_amb:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x20
   488  000080                     	ds	2
   489  000082                     detect_color@w:
   490                           	callstack 0
   491  000082                     distance_measure@threshold:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x22
   495  000082                     	ds	2
   496  000084                     detect_color@RB:
   497                           	callstack 0
   498  000084                     _distance_measure$3060:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x24
   502  000084                     	ds	2
   503  000086                     detect_color@GB:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x26
   507  000086                     	ds	2
   508  000088                     detect_color@GC:
   509                           	callstack 0
   510  000088                     distance_measure@CC_amb:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x28
   514  000088                     	ds	2
   515  00008A                     distance_measure@stop:
   516                           	callstack 0
   517  00008A                     detect_color@RG:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x2A
   521  00008A                     	ds	2
   522  00008C                     detect_color@GR:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2C
   526  00008C                     	ds	2
   527  00008E                     detect_color@GG:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x2E
   531  00008E                     	ds	2
   532  000090                     detect_color@RR:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x30
   536  000090                     	ds	2
   537  000092                     detect_color@BR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x32
   541  000092                     	ds	2
   542  000094                     detect_color@BB:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x34
   546  000094                     	ds	2
   547  000096                     detect_color@color:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x36
   551  000096                     	ds	1
   552  000097                     detect_color@BG:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x37
   556  000097                     	ds	2
   557  000099                     _detect_color$3059:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x39
   561  000099                     	ds	4
   562  00009D                     verify_color@m:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x3D
   566  00009D                     	ds	2
   567  00009F                     verify_color@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x3F
   571  00009F                     	ds	2
   572  0000A1                     verify_color@color3:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x41
   576  0000A1                     	ds	2
   577  0000A3                     verify_color@color:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x43
   581  0000A3                     	ds	1
   582  0000A4                     verify_color@color2:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x44
   586  0000A4                     	ds	57
   587  0000DD                     color_predict@color:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x7D
   591  0000DD                     	ds	2
   592  0000DF                     color_data_collection@m:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x7F
   596  0000DF                     	ds	2
   597  0000E1                     ??_color_data_collection:
   598                           
   599                           ; 1 bytes @ 0x81
   600  0000E1                     	ds	2
   601  0000E3                     color_data_collection@i:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x83
   605  0000E3                     	ds	2
   606  0000E5                     color_data_collection@j:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x85
   610  0000E5                     	ds	2
   611  0000E7                     color_data_collection@k:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x87
   615  0000E7                     	ds	2
   616  0000E9                     color_data_collection@x:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x89
   620  0000E9                     	ds	2
   621  0000EB                     ??_main:
   622                           
   623                           ; 1 bytes @ 0x8B
   624  0000EB                     	ds	2
   625                           
   626                           	psect	cstackCOMRAM
   627  000001                     __pcstackCOMRAM:
   628                           	callstack 0
   629  000001                     ??_LowISR:
   630  000001                     
   631                           ; 1 bytes @ 0x0
   632  000001                     	ds	2
   633  000003                     ??_LED_OFF:
   634  000003                     ??_LED_R:
   635  000003                     ??_LED_C:
   636  000003                     ??_LED_B:
   637  000003                     ??_LED_G:
   638  000003                     ??_I2C_2_Master_Idle:
   639  000003                     ?_strlen:
   640                           	callstack 0
   641  000003                     ?___wmul:
   642                           	callstack 0
   643  000003                     ?___fladd:
   644                           	callstack 0
   645  000003                     ?___flneg:
   646                           	callstack 0
   647  000003                     ?___xxtofl:
   648                           	callstack 0
   649  000003                     ?___aodiv:
   650                           	callstack 0
   651  000003                     ?___aomod:
   652                           	callstack 0
   653  000003                     toggle_light@toggletime:
   654                           	callstack 0
   655  000003                     sendCharSerial4@charToSend:
   656                           	callstack 0
   657  000003                     initDCmotorsPWM@PWMperiod:
   658                           	callstack 0
   659  000003                     initDCmotors_parameter@motorL:
   660                           	callstack 0
   661  000003                     ___wmul@multiplier:
   662                           	callstack 0
   663  000003                     fputc@c:
   664                           	callstack 0
   665  000003                     strlen@s:
   666                           	callstack 0
   667  000003                     ___flge@ff1:
   668                           	callstack 0
   669  000003                     ___flneg@f1:
   670                           	callstack 0
   671  000003                     ___fladd@b:
   672                           	callstack 0
   673  000003                     ___xxtofl@val:
   674                           	callstack 0
   675  000003                     ___aodiv@dividend:
   676                           	callstack 0
   677  000003                     ___aomod@dividend:
   678                           	callstack 0
   679                           
   680                           ; 8 bytes @ 0x2
   681  000003                     	ds	1
   682  000004                     ??_I2C_2_Master_Read:
   683  000004                     ??_toggle_light:
   684  000004                     I2C_2_Master_Write@data_byte:
   685                           	callstack 0
   686  000004                     sendStringSerial4@string:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x3
   690  000004                     	ds	1
   691  000005                     color_writetoaddr@value:
   692                           	callstack 0
   693  000005                     I2C_2_Master_Read@ack:
   694                           	callstack 0
   695  000005                     initDCmotors_parameter@motorR:
   696                           	callstack 0
   697  000005                     ___wmul@multiplicand:
   698                           	callstack 0
   699  000005                     fputc@fp:
   700                           	callstack 0
   701  000005                     strlen@a:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4
   705  000005                     	ds	1
   706  000006                     toggle_light@i:
   707                           	callstack 0
   708  000006                     color_writetoaddr@address:
   709                           	callstack 0
   710  000006                     I2C_2_Master_Read@tmp:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x5
   714  000006                     	ds	1
   715  000007                     ??_fputc:
   716  000007                     ??_color_click_init:
   717  000007                     ??___xxtofl:
   718  000007                     ?_color_read_Red:
   719                           	callstack 0
   720  000007                     ?_color_read_Blue:
   721                           	callstack 0
   722  000007                     ?_color_read_Green:
   723                           	callstack 0
   724  000007                     ?_color_read_Clear:
   725                           	callstack 0
   726  000007                     toggle_light@lightnumber:
   727                           	callstack 0
   728  000007                     ___wmul@product:
   729                           	callstack 0
   730  000007                     ___flge@ff2:
   731                           	callstack 0
   732  000007                     ___fladd@a:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x6
   736  000007                     	ds	2
   737  000009                     ??_color_read_Red:
   738  000009                     ??_color_read_Blue:
   739  000009                     ??_color_read_Green:
   740  000009                     ??_color_read_Clear:
   741  000009                     ?___awdiv:
   742                           	callstack 0
   743  000009                     ___awdiv@dividend:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x8
   747  000009                     	ds	2
   748  00000B                     ??___fladd:
   749  00000B                     ??___flge:
   750  00000B                     ___xxtofl@sign:
   751                           	callstack 0
   752  00000B                     ___awdiv@divisor:
   753                           	callstack 0
   754  00000B                     ___aodiv@divisor:
   755                           	callstack 0
   756  00000B                     ___aomod@divisor:
   757                           	callstack 0
   758                           
   759                           ; 8 bytes @ 0xA
   760  00000B                     	ds	1
   761  00000C                     ___xxtofl@exp:
   762                           	callstack 0
   763  00000C                     color_read_Red@tmp:
   764                           	callstack 0
   765  00000C                     color_read_Blue@tmp:
   766                           	callstack 0
   767  00000C                     color_read_Green@tmp:
   768                           	callstack 0
   769  00000C                     color_read_Clear@tmp:
   770                           	callstack 0
   771  00000C                     fputs@s:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xB
   775  00000C                     	ds	1
   776  00000D                     ___awdiv@counter:
   777                           	callstack 0
   778  00000D                     ___xxtofl@arg:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0xC
   782  00000D                     	ds	1
   783  00000E                     ___awdiv@sign:
   784                           	callstack 0
   785  00000E                     read_color@m:
   786                           	callstack 0
   787  00000E                     calibrate_white@w:
   788                           	callstack 0
   789  00000E                     fputs@fp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0xD
   793  00000E                     	ds	1
   794  00000F                     ___fladd@signs:
   795                           	callstack 0
   796  00000F                     ___awdiv@quotient:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0xE
   800  00000F                     	ds	1
   801  000010                     ??_calibrate_white:
   802  000010                     ___fladd@aexp:
   803                           	callstack 0
   804  000010                     fputs@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0xF
   808  000010                     	ds	1
   809  000011                     ?___fldiv:
   810                           	callstack 0
   811  000011                     ___fladd@bexp:
   812                           	callstack 0
   813  000011                     setMotorPWM@m:
   814                           	callstack 0
   815  000011                     fputs@i:
   816                           	callstack 0
   817  000011                     ___fldiv@b:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x10
   821  000011                     	ds	1
   822  000012                     ___fladd@grs:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x11
   826  000012                     	ds	1
   827  000013                     ??_setMotorPWM:
   828  000013                     ?_pad:
   829                           	callstack 0
   830  000013                     ?___flsub:
   831                           	callstack 0
   832  000013                     ___aodiv@counter:
   833                           	callstack 0
   834  000013                     ___aomod@counter:
   835                           	callstack 0
   836  000013                     pad@fp:
   837                           	callstack 0
   838  000013                     ___flsub@b:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x12
   842  000013                     	ds	1
   843  000014                     ___aodiv@sign:
   844                           	callstack 0
   845  000014                     ___aomod@sign:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x13
   849  000014                     	ds	1
   850  000015                     ?_abs:
   851                           	callstack 0
   852  000015                     pad@buf:
   853                           	callstack 0
   854  000015                     abs@a:
   855                           	callstack 0
   856  000015                     ___fldiv@a:
   857                           	callstack 0
   858  000015                     ___aodiv@quotient:
   859                           	callstack 0
   860                           
   861                           ; 8 bytes @ 0x14
   862  000015                     	ds	2
   863  000017                     ??_abs:
   864  000017                     pad@p:
   865                           	callstack 0
   866  000017                     ___flsub@a:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x16
   870  000017                     	ds	2
   871  000019                     ??___fldiv:
   872  000019                     ??_pad:
   873                           
   874                           ; 1 bytes @ 0x18
   875  000019                     	ds	1
   876  00001A                     setMotorPWM@PWMduty:
   877                           	callstack 0
   878  00001A                     pad@i:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x19
   882  00001A                     	ds	1
   883  00001B                     
   884                           ; 1 bytes @ 0x1A
   885  00001B                     	ds	1
   886  00001C                     stop@mL:
   887                           	callstack 0
   888  00001C                     fullSpeedAhead@mL:
   889                           	callstack 0
   890  00001C                     pad@w:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1B
   894  00001C                     	ds	1
   895  00001D                     ___fldiv@rem:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x1C
   899  00001D                     	ds	1
   900  00001E                     ?_dtoa:
   901                           	callstack 0
   902  00001E                     stop@mR:
   903                           	callstack 0
   904  00001E                     fullSpeedAhead@mR:
   905                           	callstack 0
   906  00001E                     dtoa@fp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x1D
   910  00001E                     	ds	2
   911  000020                     ??_stop:
   912  000020                     ??_fullSpeedAhead:
   913  000020                     dtoa@d:
   914                           	callstack 0
   915                           
   916                           ; 8 bytes @ 0x1F
   917  000020                     	ds	1
   918  000021                     ___fldiv@sign:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x20
   922  000021                     	ds	1
   923  000022                     turnLeft@mL:
   924                           	callstack 0
   925  000022                     turnRight@mL:
   926                           	callstack 0
   927  000022                     fullSpeedBack@mL:
   928                           	callstack 0
   929  000022                     short_burst@mL:
   930                           	callstack 0
   931  000022                     ___fldiv@new_exp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x21
   935  000022                     	ds	2
   936  000024                     turnLeft@mR:
   937                           	callstack 0
   938  000024                     turnRight@mR:
   939                           	callstack 0
   940  000024                     fullSpeedBack@mR:
   941                           	callstack 0
   942  000024                     short_burst@mR:
   943                           	callstack 0
   944  000024                     ___fldiv@grs:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x23
   948  000024                     	ds	2
   949  000026                     ??_short_burst:
   950  000026                     ??_fullSpeedBack:
   951  000026                     turnLeft@angle_left:
   952                           	callstack 0
   953  000026                     turnRight@angle_right:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x25
   957  000026                     	ds	1
   958  000027                     ??_turnRight:
   959  000027                     ??_turnLeft:
   960                           
   961                           ; 1 bytes @ 0x26
   962  000027                     	ds	1
   963  000028                     ??_dtoa:
   964  000028                     ___fldiv@bexp:
   965                           	callstack 0
   966  000028                     turnLeft@delay_180:
   967                           	callstack 0
   968  000028                     turnRight@delay_180:
   969                           	callstack 0
   970  000028                     short_reverse@mL:
   971                           	callstack 0
   972  000028                     reverse_square@mL:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x27
   976  000028                     	ds	1
   977  000029                     ___fldiv@aexp:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x28
   981  000029                     	ds	1
   982  00002A                     ?___flmul:
   983                           	callstack 0
   984  00002A                     turnLeft@i:
   985                           	callstack 0
   986  00002A                     turnRight@i:
   987                           	callstack 0
   988  00002A                     short_reverse@mR:
   989                           	callstack 0
   990  00002A                     reverse_square@mR:
   991                           	callstack 0
   992  00002A                     ___flmul@b:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x29
   996  00002A                     	ds	2
   997  00002C                     ??_short_reverse:
   998  00002C                     ??_reverse_square:
   999  00002C                     turnLeft@i_1379:
  1000                           	callstack 0
  1001  00002C                     turnRight@i_1402:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x2B
  1005  00002C                     	ds	2
  1006  00002E                     turnLeft@delay:
  1007                           	callstack 0
  1008  00002E                     turnRight@delay:
  1009                           	callstack 0
  1010  00002E                     ___flmul@a:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x2D
  1014  00002E                     	ds	2
  1015  000030                     goback@mL:
  1016                           	callstack 0
  1017  000030                     _dtoa$2697:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2F
  1021  000030                     	ds	2
  1022  000032                     ??___flmul:
  1023  000032                     goback@mR:
  1024                           	callstack 0
  1025  000032                     dtoa@p:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x31
  1029  000032                     	ds	2
  1030  000034                     ??_goback:
  1031  000034                     dtoa@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x33
  1035  000034                     	ds	2
  1036  000036                     ___flmul@sign:
  1037                           	callstack 0
  1038  000036                     goback@i:
  1039                           	callstack 0
  1040  000036                     dtoa@s:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x35
  1044  000036                     	ds	1
  1045  000037                     ___flmul@aexp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x36
  1049  000037                     	ds	1
  1050  000038                     action@mL:
  1051                           	callstack 0
  1052  000038                     ___flmul@grs:
  1053                           	callstack 0
  1054  000038                     dtoa@n:
  1055                           	callstack 0
  1056                           
  1057                           ; 8 bytes @ 0x37
  1058  000038                     	ds	2
  1059  00003A                     action@mR:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x39
  1063  00003A                     	ds	2
  1064  00003C                     ??_action:
  1065  00003C                     ___flmul@bexp:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x3B
  1069  00003C                     	ds	1
  1070  00003D                     ___flmul@prod:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x3C
  1074  00003D                     	ds	1
  1075  00003E                     action@color:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x3D
  1079  00003E                     	ds	2
  1080  000040                     dtoa@i:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x3F
  1084  000040                     	ds	1
  1085  000041                     ___flmul@temp:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x40
  1089  000041                     	ds	1
  1090  000042                     ?_vfpfcnvrt:
  1091                           	callstack 0
  1092  000042                     vfpfcnvrt@fp:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x41
  1096  000042                     	ds	1
  1097  000043                     ?_roundf:
  1098                           	callstack 0
  1099  000043                     roundf@x:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x42
  1103  000043                     	ds	1
  1104  000044                     vfpfcnvrt@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x43
  1108  000044                     	ds	2
  1109  000046                     vfpfcnvrt@ap:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x45
  1113  000046                     	ds	1
  1114  000047                     ??_roundf:
  1115                           
  1116                           ; 1 bytes @ 0x46
  1117  000047                     	ds	1
  1118  000048                     ??_vfpfcnvrt:
  1119                           
  1120                           ; 1 bytes @ 0x47
  1121  000048                     	ds	2
  1122  00004A                     vfpfcnvrt@ll:
  1123                           	callstack 0
  1124                           
  1125                           ; 8 bytes @ 0x49
  1126  00004A                     	ds	1
  1127  00004B                     ??___fltol:
  1128                           
  1129                           ; 1 bytes @ 0x4A
  1130  00004B                     	ds	4
  1131  00004F                     ___fltol@sign1:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x4E
  1135  00004F                     	ds	1
  1136  000050                     ___fltol@exp1:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x4F
  1140  000050                     	ds	1
  1141  000051                     ??_distance_measure:
  1142  000051                     compare@result:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x50
  1146  000051                     	ds	1
  1147  000052                     ??_detect_color:
  1148  000052                     ?_vfprintf:
  1149                           	callstack 0
  1150  000052                     vfprintf@fp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x51
  1154  000052                     	ds	2
  1155  000054                     vfprintf@fmt:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x53
  1159  000054                     	ds	2
  1160  000056                     ??_verify_color:
  1161  000056                     vfprintf@ap:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x55
  1165  000056                     	ds	2
  1166  000058                     vfprintf@cfmt:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x57
  1170  000058                     	ds	2
  1171  00005A                     
  1172                           ; 1 bytes @ 0x59
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1175 ;;
  1176 ;; *************** function _main *****************
  1177 ;; Defined at:
  1178 ;;		line 26 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  white          26    1[BANK1 ] struct white_card
  1183 ;;  motorR         10   45[BANK1 ] struct DC_motor
  1184 ;;  motorL         10   35[BANK1 ] struct DC_motor
  1185 ;;  rgb             8   27[BANK1 ] struct color_rgb
  1186 ;;  stop_signal     1    0[BANK1 ] unsigned char 
  1187 ;;  complete        1    0        unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Locals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Totals:         0       2      55       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;Total ram usage:       57 bytes
  1202 ;; Hardware stack levels required when called: 12
  1203 ;; This function calls:
  1204 ;;		_I2C_2_Master_Init
  1205 ;;		_Interrupts_init
  1206 ;;		_LED_C
  1207 ;;		_LED_OFF
  1208 ;;		_Timer0_init
  1209 ;;		_action
  1210 ;;		_buggylight_init
  1211 ;;		_calibrate_white
  1212 ;;		_color_click_init
  1213 ;;		_color_data_collection
  1214 ;;		_color_display
  1215 ;;		_detect_color
  1216 ;;		_distance_measure
  1217 ;;		_fullSpeedAhead
  1218 ;;		_initDCmotorsPWM
  1219 ;;		_initDCmotors_parameter
  1220 ;;		_initUSART4
  1221 ;;		_pin_init
  1222 ;;		_read_color
  1223 ;;		_short_burst
  1224 ;;		_stop
  1225 ;;		_toggle_light
  1226 ;;		_verify_color
  1227 ;; This function is called by:
  1228 ;;		Startup code after reset
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text0
  1233  0040FC                     __ptext0:
  1234                           	callstack 0
  1235  0040FC                     _main:
  1236                           	callstack 19
  1237  0040FC                     
  1238                           ;main.c: 27:     Interrupts_init();
  1239  0040FC  ECE5  F02A         	call	_Interrupts_init	;wreg free
  1240  004100                     
  1241                           ;main.c: 28:     Timer0_init();
  1242  004100  ECAB  F02A         	call	_Timer0_init	;wreg free
  1243  004104                     
  1244                           ;main.c: 29:     I2C_2_Master_Init();
  1245  004104  EC00  F02A         	call	_I2C_2_Master_Init	;wreg free
  1246  004108                     
  1247                           ;main.c: 30:     color_click_init();
  1248  004108  ECB7  F029         	call	_color_click_init	;wreg free
  1249  00410C                     
  1250                           ;main.c: 31:     initDCmotorsPWM(199);
  1251  00410C  0E00               	movlw	0
  1252  00410E  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1253  004110  0EC7               	movlw	199
  1254  004112  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1255  004114  ECA2  F028         	call	_initDCmotorsPWM	;wreg free
  1256  004118                     
  1257                           ;main.c: 32:     buggylight_init();
  1258  004118  ECD4  F02A         	call	_buggylight_init	;wreg free
  1259  00411C                     
  1260                           ;main.c: 33:     initUSART4();
  1261  00411C  EC9C  F02A         	call	_initUSART4	;wreg free
  1262  004120                     
  1263                           ;main.c: 35:     struct color_rgb rgb;;main.c: 36:     struct white_card white;;main.c: 
      +                          40:     struct DC_motor motorL, motorR;;main.c: 42:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1264  004120  0ED4               	movlw	low main@motorL
  1265  004122  6E03               	movwf	initDCmotors_parameter@motorL^0,c
  1266  004124  0E01               	movlw	high main@motorL
  1267  004126  6E04               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1268  004128  0EDE               	movlw	low main@motorR
  1269  00412A  6E05               	movwf	initDCmotors_parameter@motorR^0,c
  1270  00412C  0E01               	movlw	high main@motorR
  1271  00412E  6E06               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1272  004130  ECBC  F023         	call	_initDCmotors_parameter	;wreg free
  1273  004134                     
  1274                           ;main.c: 46:     if (4 == 1 || 4 == 3 || 4 == 4){
  1275  004134  ECBA  F02A         	call	_pin_init	;wreg free
  1276  004138                     
  1277                           ;main.c: 47:         LED_OFF();
  1278  004138  EC8C  F02A         	call	_LED_OFF	;wreg free
  1279  00413C                     
  1280                           ;main.c: 48:         toggle_light(1,2);
  1281  00413C  0E02               	movlw	2
  1282  00413E  6E03               	movwf	toggle_light@toggletime^0,c
  1283  004140  0E01               	movlw	1
  1284  004142  EC19  F018         	call	_toggle_light
  1285  004146                     
  1286                           ;main.c: 49:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1287  004146  0E52               	movlw	82
  1288  004148  0100               	movlb	0	; () banked
  1289  00414A  6FEC               	movwf	(??_main+1)& (0+255),b
  1290  00414C  0E2B               	movlw	43
  1291  00414E  6FEB               	movwf	??_main& (0+255),b
  1292  004150  0E00               	movlw	0
  1293  004152                     u6487:
  1294  004152  2EE8               	decfsz	wreg,f,c
  1295  004154  D7FE               	bra	u6487
  1296  004156  2FEB               	decfsz	??_main& (0+255),f,b
  1297  004158  D7FC               	bra	u6487
  1298  00415A  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1299  00415C  D7FA               	bra	u6487
  1300  00415E  F000               	nop	
  1301                           
  1302                           ;main.c: 50:         calibrate_white(&white);
  1303  004160  0EB2               	movlw	low main@white
  1304  004162  6E0E               	movwf	calibrate_white@w^0,c
  1305  004164  0E01               	movlw	high main@white
  1306  004166  6E0F               	movwf	(calibrate_white@w+1)^0,c
  1307  004168  EC35  F01E         	call	_calibrate_white	;wreg free
  1308  00416C                     
  1309                           ;main.c: 51:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1310  00416C  0E52               	movlw	82
  1311  00416E  0100               	movlb	0	; () banked
  1312  004170  6FEC               	movwf	(??_main+1)& (0+255),b
  1313  004172  0E2B               	movlw	43
  1314  004174  6FEB               	movwf	??_main& (0+255),b
  1315  004176  0E00               	movlw	0
  1316  004178                     u6497:
  1317  004178  2EE8               	decfsz	wreg,f,c
  1318  00417A  D7FE               	bra	u6497
  1319  00417C  2FEB               	decfsz	??_main& (0+255),f,b
  1320  00417E  D7FC               	bra	u6497
  1321  004180  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1322  004182  D7FA               	bra	u6497
  1323  004184  F000               	nop	
  1324  004186                     
  1325                           ;main.c: 52:         LED_OFF();
  1326  004186  EC8C  F02A         	call	_LED_OFF	;wreg free
  1327  00418A                     
  1328                           ;main.c: 53:         toggle_light(1,2);
  1329  00418A  0E02               	movlw	2
  1330  00418C  6E03               	movwf	toggle_light@toggletime^0,c
  1331  00418E  0E01               	movlw	1
  1332  004190  EC19  F018         	call	_toggle_light
  1333  004194                     l6040:
  1334                           
  1335                           ;main.c: 57:     unsigned char stop_signal = 0;
  1336  004194  0E00               	movlw	0
  1337  004196  0101               	movlb	1	; () banked
  1338  004198  6FB1               	movwf	main@stop_signal& (0+255),b
  1339  00419A                     
  1340                           ; BSR set to: 1
  1341                           ;main.c: 91:             read_color(&rgb);
  1342  00419A  0ECC               	movlw	low main@rgb
  1343  00419C  6E0E               	movwf	read_color@m^0,c
  1344  00419E  0E01               	movlw	high main@rgb
  1345  0041A0  6E0F               	movwf	(read_color@m+1)^0,c
  1346  0041A2  EC16  F027         	call	_read_color	;wreg free
  1347  0041A6                     
  1348                           ;main.c: 92:             color_display(&rgb);
  1349  0041A6  0ECC               	movlw	low main@rgb
  1350  0041A8  0100               	movlb	0	; () banked
  1351  0041AA  6F79               	movwf	color_display@m& (0+255),b
  1352  0041AC  0E01               	movlw	high main@rgb
  1353  0041AE  6F7A               	movwf	(color_display@m+1)& (0+255),b
  1354  0041B0  ECAD  F026         	call	_color_display	;wreg free
  1355                           
  1356                           ;main.c: 93:             while (stop_signal == 0){
  1357  0041B4  EFF7  F020         	goto	l6078
  1358  0041B8                     l6074:
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 94:                 fullSpeedAhead(&motorL, &motorR);
  1362  0041B8  0ED4               	movlw	low main@motorL
  1363  0041BA  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1364  0041BC  0E01               	movlw	high main@motorL
  1365  0041BE  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1366  0041C0  0EDE               	movlw	low main@motorR
  1367  0041C2  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1368  0041C4  0E01               	movlw	high main@motorR
  1369  0041C6  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1370  0041C8  EC63  F026         	call	_fullSpeedAhead	;wreg free
  1371  0041CC                     
  1372                           ;main.c: 95:                 stop_signal = distance_measure(&motorL, &motorR, &white);
  1373  0041CC  0ED4               	movlw	low main@motorL
  1374  0041CE  0100               	movlb	0	; () banked
  1375  0041D0  6F7A               	movwf	distance_measure@mL& (0+255),b
  1376  0041D2  0E01               	movlw	high main@motorL
  1377  0041D4  6F7B               	movwf	(distance_measure@mL+1)& (0+255),b
  1378  0041D6  0EDE               	movlw	low main@motorR
  1379  0041D8  6F7C               	movwf	distance_measure@mR& (0+255),b
  1380  0041DA  0E01               	movlw	high main@motorR
  1381  0041DC  6F7D               	movwf	(distance_measure@mR+1)& (0+255),b
  1382  0041DE  0EB2               	movlw	low main@white
  1383  0041E0  6F7E               	movwf	distance_measure@w& (0+255),b
  1384  0041E2  0E01               	movlw	high main@white
  1385  0041E4  6F7F               	movwf	(distance_measure@w+1)& (0+255),b
  1386  0041E6  EC4D  F023         	call	_distance_measure	;wreg free
  1387  0041EA  0101               	movlb	1	; () banked
  1388  0041EC  6FB1               	movwf	main@stop_signal& (0+255),b
  1389  0041EE                     l6078:
  1390                           
  1391                           ;main.c: 93:             while (stop_signal == 0){
  1392  0041EE  0101               	movlb	1	; () banked
  1393  0041F0  51B1               	movf	main@stop_signal& (0+255),w,b
  1394  0041F2  B4D8               	btfsc	status,2,c
  1395  0041F4  EFFE  F020         	goto	u6471
  1396  0041F8  EF00  F021         	goto	u6470
  1397  0041FC                     u6471:
  1398  0041FC  EFDC  F020         	goto	l6074
  1399  004200                     u6470:
  1400  004200                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 98:             stop(&motorL, &motorR);
  1403  004200  0ED4               	movlw	low main@motorL
  1404  004202  6E1C               	movwf	stop@mL^0,c
  1405  004204  0E01               	movlw	high main@motorL
  1406  004206  6E1D               	movwf	(stop@mL+1)^0,c
  1407  004208  0EDE               	movlw	low main@motorR
  1408  00420A  6E1E               	movwf	stop@mR^0,c
  1409  00420C  0E01               	movlw	high main@motorR
  1410  00420E  6E1F               	movwf	(stop@mR+1)^0,c
  1411  004210  ECAF  F025         	call	_stop	;wreg free
  1412  004214                     
  1413                           ;main.c: 99:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1414  004214  0E52               	movlw	82
  1415  004216  0100               	movlb	0	; () banked
  1416  004218  6FEC               	movwf	(??_main+1)& (0+255),b
  1417  00421A  0E2B               	movlw	43
  1418  00421C  6FEB               	movwf	??_main& (0+255),b
  1419  00421E  0E00               	movlw	0
  1420  004220                     u6507:
  1421  004220  2EE8               	decfsz	wreg,f,c
  1422  004222  D7FE               	bra	u6507
  1423  004224  2FEB               	decfsz	??_main& (0+255),f,b
  1424  004226  D7FC               	bra	u6507
  1425  004228  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1426  00422A  D7FA               	bra	u6507
  1427  00422C  F000               	nop	
  1428  00422E  EFCA  F020         	goto	l6040
  1429  004232  EF24  F000         	goto	start
  1430  004236                     __end_of_main:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _verify_color *****************
  1434 ;; Defined at:
  1435 ;;		line 366 in file "color.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  color           1    wreg     unsigned char 
  1438 ;;  m               2   61[BANK0 ] PTR struct color_rgb
  1439 ;;		 -> main@rgb(8), 
  1440 ;;  w               2   63[BANK0 ] PTR struct white_card
  1441 ;;		 -> main@white(26), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  color           1   67[BANK0 ] unsigned char 
  1444 ;;  color2          2   68[BANK0 ] unsigned int 
  1445 ;;  color3          2   65[BANK0 ] unsigned int 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;Total ram usage:       11 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 7
  1462 ;; This function calls:
  1463 ;;		_detect_color
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text1
  1470  004C1A                     __ptext1:
  1471                           	callstack 0
  1472  004C1A                     _verify_color:
  1473                           	callstack 23
  1474                           
  1475                           ;incstack = 0
  1476                           ;verify_color@color stored from wreg
  1477  004C1A  0100               	movlb	0	; () banked
  1478  004C1C  6FA3               	movwf	verify_color@color& (0+255),b
  1479  004C1E                     
  1480                           ;color.c: 366: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 367: {;color.c: 368:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1481  004C1E  0E05               	movlw	5
  1482  004C20  6E57               	movwf	(??_verify_color+1)^0,c
  1483  004C22  0E0F               	movlw	15
  1484  004C24  6E56               	movwf	??_verify_color^0,c
  1485  004C26  0EF1               	movlw	241
  1486  004C28                     u6517:
  1487  004C28  2EE8               	decfsz	wreg,f,c
  1488  004C2A  D7FE               	bra	u6517
  1489  004C2C  2E56               	decfsz	??_verify_color^0,f,c
  1490  004C2E  D7FC               	bra	u6517
  1491  004C30  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1492  004C32  D7FA               	bra	u6517
  1493  004C34  F000               	nop	
  1494  004C36                     
  1495                           ;color.c: 369:     unsigned int color2, color3;;color.c: 370:     color2 = detect_color(
      +                          m,w);
  1496  004C36  C09D  F080         	movff	verify_color@m,detect_color@m
  1497  004C3A  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1498  004C3E  C09F  F082         	movff	verify_color@w,detect_color@w
  1499  004C42  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1500  004C46  EC0A  F007         	call	_detect_color	;wreg free
  1501  004C4A  6E56               	movwf	??_verify_color^0,c
  1502  004C4C  5056               	movf	??_verify_color^0,w,c
  1503  004C4E  0100               	movlb	0	; () banked
  1504  004C50  6FA4               	movwf	verify_color@color2& (0+255),b
  1505  004C52  6BA5               	clrf	(verify_color@color2+1)& (0+255),b
  1506  004C54                     
  1507                           ; BSR set to: 0
  1508                           ;color.c: 371:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1509  004C54  0E05               	movlw	5
  1510  004C56  6E57               	movwf	(??_verify_color+1)^0,c
  1511  004C58  0E0F               	movlw	15
  1512  004C5A  6E56               	movwf	??_verify_color^0,c
  1513  004C5C  0EF1               	movlw	241
  1514  004C5E                     u6527:
  1515  004C5E  2EE8               	decfsz	wreg,f,c
  1516  004C60  D7FE               	bra	u6527
  1517  004C62  2E56               	decfsz	??_verify_color^0,f,c
  1518  004C64  D7FC               	bra	u6527
  1519  004C66  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1520  004C68  D7FA               	bra	u6527
  1521  004C6A  F000               	nop	
  1522  004C6C                     
  1523                           ;color.c: 372:     color3 = detect_color(m,w);
  1524  004C6C  C09D  F080         	movff	verify_color@m,detect_color@m
  1525  004C70  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1526  004C74  C09F  F082         	movff	verify_color@w,detect_color@w
  1527  004C78  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1528  004C7C  EC0A  F007         	call	_detect_color	;wreg free
  1529  004C80  6E56               	movwf	??_verify_color^0,c
  1530  004C82  5056               	movf	??_verify_color^0,w,c
  1531  004C84  0100               	movlb	0	; () banked
  1532  004C86  6FA1               	movwf	verify_color@color3& (0+255),b
  1533  004C88  6BA2               	clrf	(verify_color@color3+1)& (0+255),b
  1534  004C8A                     
  1535                           ; BSR set to: 0
  1536                           ;color.c: 373:     if (color == color2 && color2 == color3){return color;}
  1537  004C8A  51A3               	movf	verify_color@color& (0+255),w,b
  1538  004C8C  6E56               	movwf	??_verify_color^0,c
  1539  004C8E  6A57               	clrf	(??_verify_color+1)^0,c
  1540  004C90  51A4               	movf	verify_color@color2& (0+255),w,b
  1541  004C92  1856               	xorwf	??_verify_color^0,w,c
  1542  004C94  E107               	bnz	u6441
  1543  004C96  51A5               	movf	(verify_color@color2+1)& (0+255),w,b
  1544  004C98  1857               	xorwf	(??_verify_color+1)^0,w,c
  1545  004C9A  A4D8               	btfss	status,2,c
  1546  004C9C  EF52  F026         	goto	u6441
  1547  004CA0  EF54  F026         	goto	u6440
  1548  004CA4                     u6441:
  1549  004CA4  EF62  F026         	goto	l5978
  1550  004CA8                     u6440:
  1551  004CA8                     
  1552                           ; BSR set to: 0
  1553  004CA8  51A1               	movf	verify_color@color3& (0+255),w,b
  1554  004CAA  19A4               	xorwf	verify_color@color2& (0+255),w,b
  1555  004CAC  E107               	bnz	u6451
  1556  004CAE  51A2               	movf	(verify_color@color3+1)& (0+255),w,b
  1557  004CB0  19A5               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1558  004CB2  A4D8               	btfss	status,2,c
  1559  004CB4  EF5E  F026         	goto	u6451
  1560  004CB8  EF60  F026         	goto	u6450
  1561  004CBC                     u6451:
  1562  004CBC  EF62  F026         	goto	l5978
  1563  004CC0                     u6450:
  1564  004CC0  EF62  F026         	goto	l172
  1565  004CC4                     l5978:
  1566  004CC4                     l172:
  1567                           
  1568                           ; BSR set to: 0
  1569  004CC4  0012               	return		;funcret
  1570  004CC6                     __end_of_verify_color:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _detect_color *****************
  1574 ;; Defined at:
  1575 ;;		line 280 in file "color.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  m               2   32[BANK0 ] PTR struct color_rgb
  1578 ;;		 -> main@rgb(8), 
  1579 ;;  w               2   34[BANK0 ] PTR struct white_card
  1580 ;;		 -> main@white(26), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  BG              2   55[BANK0 ] unsigned int 
  1583 ;;  BB              2   52[BANK0 ] unsigned int 
  1584 ;;  BR              2   50[BANK0 ] unsigned int 
  1585 ;;  RR              2   48[BANK0 ] unsigned int 
  1586 ;;  GG              2   46[BANK0 ] unsigned int 
  1587 ;;  GR              2   44[BANK0 ] unsigned int 
  1588 ;;  RG              2   42[BANK0 ] unsigned int 
  1589 ;;  GC              2   40[BANK0 ] unsigned int 
  1590 ;;  GB              2   38[BANK0 ] unsigned int 
  1591 ;;  RB              2   36[BANK0 ] unsigned int 
  1592 ;;  color           1   54[BANK0 ] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      unsigned char 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1602 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Totals:         4      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;Total ram usage:       33 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 6
  1609 ;; This function calls:
  1610 ;;		_LED_B
  1611 ;;		_LED_G
  1612 ;;		_LED_R
  1613 ;;		___fldiv
  1614 ;;		___flmul
  1615 ;;		___xxtofl
  1616 ;;		_compare
  1617 ;;		_lroundf
  1618 ;;		_read_color
  1619 ;; This function is called by:
  1620 ;;		_verify_color
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626  000E14                     __ptext2:
  1627                           	callstack 0
  1628  000E14                     _detect_color:
  1629                           	callstack 23
  1630  000E14  0E00               	movlw	0
  1631  000E16  0100               	movlb	0	; () banked
  1632  000E18  6F8B               	movwf	(detect_color@RG+1)& (0+255),b
  1633  000E1A  0E00               	movlw	0
  1634  000E1C  6F8A               	movwf	detect_color@RG& (0+255),b
  1635  000E1E  0E00               	movlw	0
  1636  000E20  6F85               	movwf	(detect_color@RB+1)& (0+255),b
  1637  000E22  0E00               	movlw	0
  1638  000E24  6F84               	movwf	detect_color@RB& (0+255),b
  1639  000E26  0E00               	movlw	0
  1640  000E28  6F8D               	movwf	(detect_color@GR+1)& (0+255),b
  1641  000E2A  0E00               	movlw	0
  1642  000E2C  6F8C               	movwf	detect_color@GR& (0+255),b
  1643  000E2E  0E00               	movlw	0
  1644  000E30  6F8F               	movwf	(detect_color@GG+1)& (0+255),b
  1645  000E32  0E00               	movlw	0
  1646  000E34  6F8E               	movwf	detect_color@GG& (0+255),b
  1647  000E36  0E00               	movlw	0
  1648  000E38  6F87               	movwf	(detect_color@GB+1)& (0+255),b
  1649  000E3A  0E00               	movlw	0
  1650  000E3C  6F86               	movwf	detect_color@GB& (0+255),b
  1651  000E3E  0E00               	movlw	0
  1652  000E40  6F93               	movwf	(detect_color@BR+1)& (0+255),b
  1653  000E42  0E00               	movlw	0
  1654  000E44  6F92               	movwf	detect_color@BR& (0+255),b
  1655  000E46  0E00               	movlw	0
  1656  000E48  6F98               	movwf	(detect_color@BG+1)& (0+255),b
  1657  000E4A  0E00               	movlw	0
  1658  000E4C  6F97               	movwf	detect_color@BG& (0+255),b
  1659  000E4E  0E00               	movlw	0
  1660  000E50  6F95               	movwf	(detect_color@BB+1)& (0+255),b
  1661  000E52  0E00               	movlw	0
  1662  000E54  6F94               	movwf	detect_color@BB& (0+255),b
  1663                           
  1664                           ;color.c: 285:     unsigned int GC = 0;
  1665  000E56  0E00               	movlw	0
  1666  000E58  6F89               	movwf	(detect_color@GC+1)& (0+255),b
  1667  000E5A  0E00               	movlw	0
  1668  000E5C  6F88               	movwf	detect_color@GC& (0+255),b
  1669                           
  1670                           ;color.c: 286:     unsigned char color = 0;
  1671  000E5E  0E00               	movlw	0
  1672  000E60  6F96               	movwf	detect_color@color& (0+255),b
  1673  000E62                     
  1674                           ; BSR set to: 0
  1675                           ;color.c: 288:     LED_R();
  1676  000E62  EC4C  F02A         	call	_LED_R	;wreg free
  1677  000E66                     
  1678                           ;color.c: 289:     read_color(m);
  1679  000E66  C080  F00E         	movff	detect_color@m,read_color@m
  1680  000E6A  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1681  000E6E  EC16  F027         	call	_read_color	;wreg free
  1682  000E72                     
  1683                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1684  000E72  C082  FFD9         	movff	detect_color@w,fsr2l
  1685  000E76  C083  FFDA         	movff	detect_color@w+1,fsr2h
  1686  000E7A  CFDE F052          	movff	postinc2,??_detect_color
  1687  000E7E  CFDD F053          	movff	postdec2,??_detect_color+1
  1688  000E82  C052  F003         	movff	??_detect_color,___xxtofl@val
  1689  000E86  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1690  000E8A  6A05               	clrf	(___xxtofl@val+2)^0,c
  1691  000E8C  6A06               	clrf	(___xxtofl@val+3)^0,c
  1692  000E8E  0E00               	movlw	0
  1693  000E90  EC81  F01C         	call	___xxtofl
  1694  000E94  C003  F015         	movff	?___xxtofl,___fldiv@a
  1695  000E98  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1696  000E9C  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1697  000EA0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1698  000EA4  C080  FFD9         	movff	detect_color@m,fsr2l
  1699  000EA8  C081  FFDA         	movff	detect_color@m+1,fsr2h
  1700  000EAC  CFDE F054          	movff	postinc2,??_detect_color+2
  1701  000EB0  CFDD F055          	movff	postdec2,??_detect_color+3
  1702  000EB4  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1703  000EB8  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1704  000EBC  6A05               	clrf	(___xxtofl@val+2)^0,c
  1705  000EBE  6A06               	clrf	(___xxtofl@val+3)^0,c
  1706  000EC0  0E00               	movlw	0
  1707  000EC2  EC81  F01C         	call	___xxtofl
  1708  000EC6  C003  F011         	movff	?___xxtofl,___fldiv@b
  1709  000ECA  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1710  000ECE  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1711  000ED2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1712  000ED6  EC58  F013         	call	___fldiv	;wreg free
  1713  000EDA  C011  F02A         	movff	?___fldiv,___flmul@b
  1714  000EDE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1715  000EE2  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1716  000EE6  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1717  000EEA  0E00               	movlw	0
  1718  000EEC  6E2E               	movwf	___flmul@a^0,c
  1719  000EEE  0E00               	movlw	0
  1720  000EF0  6E2F               	movwf	(___flmul@a+1)^0,c
  1721  000EF2  0EC8               	movlw	200
  1722  000EF4  6E30               	movwf	(___flmul@a+2)^0,c
  1723  000EF6  0E42               	movlw	66
  1724  000EF8  6E31               	movwf	(___flmul@a+3)^0,c
  1725  000EFA  EC6A  F00F         	call	___flmul	;wreg free
  1726  000EFE  C02A  F099         	movff	?___flmul,_detect_color$3059
  1727  000F02  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  1728  000F06  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  1729  000F0A  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  1730  000F0E                     
  1731                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1732  000F0E  C099  F076         	movff	_detect_color$3059,lroundf@x
  1733  000F12  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  1734  000F16  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  1735  000F1A  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  1736  000F1E  EC63  F029         	call	_lroundf	;wreg free
  1737  000F22  C076  F090         	movff	?_lroundf,detect_color@RR
  1738  000F26  C077  F091         	movff	?_lroundf+1,detect_color@RR+1
  1739  000F2A  0100               	movlb	0	; () banked
  1740  000F2C  EE20 F002          	lfsr	2,2
  1741  000F30  5182               	movf	detect_color@w& (0+255),w,b
  1742  000F32  26D9               	addwf	fsr2l,f,c
  1743  000F34  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1744  000F36  22DA               	addwfc	fsr2h,f,c
  1745  000F38  CFDE F052          	movff	postinc2,??_detect_color
  1746  000F3C  CFDD F053          	movff	postdec2,??_detect_color+1
  1747  000F40  C052  F003         	movff	??_detect_color,___xxtofl@val
  1748  000F44  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1749  000F48  6A05               	clrf	(___xxtofl@val+2)^0,c
  1750  000F4A  6A06               	clrf	(___xxtofl@val+3)^0,c
  1751  000F4C  0E00               	movlw	0
  1752  000F4E  EC81  F01C         	call	___xxtofl
  1753  000F52  C003  F015         	movff	?___xxtofl,___fldiv@a
  1754  000F56  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1755  000F5A  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1756  000F5E  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1757  000F62  0100               	movlb	0	; () banked
  1758  000F64  EE20 F002          	lfsr	2,2
  1759  000F68  5180               	movf	detect_color@m& (0+255),w,b
  1760  000F6A  26D9               	addwf	fsr2l,f,c
  1761  000F6C  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1762  000F6E  22DA               	addwfc	fsr2h,f,c
  1763  000F70  CFDE F054          	movff	postinc2,??_detect_color+2
  1764  000F74  CFDD F055          	movff	postdec2,??_detect_color+3
  1765  000F78  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1766  000F7C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1767  000F80  6A05               	clrf	(___xxtofl@val+2)^0,c
  1768  000F82  6A06               	clrf	(___xxtofl@val+3)^0,c
  1769  000F84  0E00               	movlw	0
  1770  000F86  EC81  F01C         	call	___xxtofl
  1771  000F8A  C003  F011         	movff	?___xxtofl,___fldiv@b
  1772  000F8E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1773  000F92  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1774  000F96  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1775  000F9A  EC58  F013         	call	___fldiv	;wreg free
  1776  000F9E  C011  F02A         	movff	?___fldiv,___flmul@b
  1777  000FA2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1778  000FA6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1779  000FAA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1780  000FAE  0E00               	movlw	0
  1781  000FB0  6E2E               	movwf	___flmul@a^0,c
  1782  000FB2  0E00               	movlw	0
  1783  000FB4  6E2F               	movwf	(___flmul@a+1)^0,c
  1784  000FB6  0EC8               	movlw	200
  1785  000FB8  6E30               	movwf	(___flmul@a+2)^0,c
  1786  000FBA  0E42               	movlw	66
  1787  000FBC  6E31               	movwf	(___flmul@a+3)^0,c
  1788  000FBE  EC6A  F00F         	call	___flmul	;wreg free
  1789  000FC2  C02A  F099         	movff	?___flmul,_detect_color$3059
  1790  000FC6  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  1791  000FCA  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  1792  000FCE  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  1793  000FD2  C099  F076         	movff	_detect_color$3059,lroundf@x
  1794  000FD6  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  1795  000FDA  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  1796  000FDE  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  1797  000FE2  EC63  F029         	call	_lroundf	;wreg free
  1798  000FE6  C076  F08A         	movff	?_lroundf,detect_color@RG
  1799  000FEA  C077  F08B         	movff	?_lroundf+1,detect_color@RG+1
  1800  000FEE  0100               	movlb	0	; () banked
  1801  000FF0  EE20 F004          	lfsr	2,4
  1802  000FF4  5182               	movf	detect_color@w& (0+255),w,b
  1803  000FF6  26D9               	addwf	fsr2l,f,c
  1804  000FF8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1805  000FFA  22DA               	addwfc	fsr2h,f,c
  1806  000FFC  CFDE F052          	movff	postinc2,??_detect_color
  1807  001000  CFDD F053          	movff	postdec2,??_detect_color+1
  1808  001004  C052  F003         	movff	??_detect_color,___xxtofl@val
  1809  001008  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1810  00100C  6A05               	clrf	(___xxtofl@val+2)^0,c
  1811  00100E  6A06               	clrf	(___xxtofl@val+3)^0,c
  1812  001010  0E00               	movlw	0
  1813  001012  EC81  F01C         	call	___xxtofl
  1814  001016  C003  F015         	movff	?___xxtofl,___fldiv@a
  1815  00101A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1816  00101E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1817  001022  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1818  001026  0100               	movlb	0	; () banked
  1819  001028  EE20 F004          	lfsr	2,4
  1820  00102C  5180               	movf	detect_color@m& (0+255),w,b
  1821  00102E  26D9               	addwf	fsr2l,f,c
  1822  001030  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1823  001032  22DA               	addwfc	fsr2h,f,c
  1824  001034  CFDE F054          	movff	postinc2,??_detect_color+2
  1825  001038  CFDD F055          	movff	postdec2,??_detect_color+3
  1826  00103C  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1827  001040  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1828  001044  6A05               	clrf	(___xxtofl@val+2)^0,c
  1829  001046  6A06               	clrf	(___xxtofl@val+3)^0,c
  1830  001048  0E00               	movlw	0
  1831  00104A  EC81  F01C         	call	___xxtofl
  1832  00104E  C003  F011         	movff	?___xxtofl,___fldiv@b
  1833  001052  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1834  001056  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1835  00105A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1836  00105E  EC58  F013         	call	___fldiv	;wreg free
  1837  001062  C011  F02A         	movff	?___fldiv,___flmul@b
  1838  001066  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1839  00106A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1840  00106E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1841  001072  0E00               	movlw	0
  1842  001074  6E2E               	movwf	___flmul@a^0,c
  1843  001076  0E00               	movlw	0
  1844  001078  6E2F               	movwf	(___flmul@a+1)^0,c
  1845  00107A  0EC8               	movlw	200
  1846  00107C  6E30               	movwf	(___flmul@a+2)^0,c
  1847  00107E  0E42               	movlw	66
  1848  001080  6E31               	movwf	(___flmul@a+3)^0,c
  1849  001082  EC6A  F00F         	call	___flmul	;wreg free
  1850  001086  C02A  F099         	movff	?___flmul,_detect_color$3059
  1851  00108A  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  1852  00108E  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  1853  001092  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  1854  001096  C099  F076         	movff	_detect_color$3059,lroundf@x
  1855  00109A  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  1856  00109E  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  1857  0010A2  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  1858  0010A6  EC63  F029         	call	_lroundf	;wreg free
  1859  0010AA                     
  1860                           ;color.c: 292:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1861  0010AA  0E05               	movlw	5
  1862  0010AC  6E53               	movwf	(??_detect_color+1)^0,c
  1863  0010AE  0E0F               	movlw	15
  1864  0010B0  6E52               	movwf	??_detect_color^0,c
  1865  0010B2  0EF1               	movlw	241
  1866  0010B4                     u6537:
  1867  0010B4  2EE8               	decfsz	wreg,f,c
  1868  0010B6  D7FE               	bra	u6537
  1869  0010B8  2E52               	decfsz	??_detect_color^0,f,c
  1870  0010BA  D7FC               	bra	u6537
  1871  0010BC  2E53               	decfsz	(??_detect_color+1)^0,f,c
  1872  0010BE  D7FA               	bra	u6537
  1873  0010C0  F000               	nop	
  1874  0010C2                     
  1875                           ;color.c: 294:     LED_G();
  1876  0010C2  EC5C  F02A         	call	_LED_G	;wreg free
  1877  0010C6                     
  1878                           ;color.c: 295:     read_color(m);
  1879  0010C6  C080  F00E         	movff	detect_color@m,read_color@m
  1880  0010CA  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1881  0010CE  EC16  F027         	call	_read_color	;wreg free
  1882  0010D2                     
  1883                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1884  0010D2  0100               	movlb	0	; () banked
  1885  0010D4  EE20 F006          	lfsr	2,6
  1886  0010D8  5182               	movf	detect_color@w& (0+255),w,b
  1887  0010DA  26D9               	addwf	fsr2l,f,c
  1888  0010DC  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1889  0010DE  22DA               	addwfc	fsr2h,f,c
  1890  0010E0  CFDE F052          	movff	postinc2,??_detect_color
  1891  0010E4  CFDD F053          	movff	postdec2,??_detect_color+1
  1892  0010E8  C052  F003         	movff	??_detect_color,___xxtofl@val
  1893  0010EC  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1894  0010F0  6A05               	clrf	(___xxtofl@val+2)^0,c
  1895  0010F2  6A06               	clrf	(___xxtofl@val+3)^0,c
  1896  0010F4  0E00               	movlw	0
  1897  0010F6  EC81  F01C         	call	___xxtofl
  1898  0010FA  C003  F015         	movff	?___xxtofl,___fldiv@a
  1899  0010FE  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1900  001102  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1901  001106  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1902  00110A  C080  FFD9         	movff	detect_color@m,fsr2l
  1903  00110E  C081  FFDA         	movff	detect_color@m+1,fsr2h
  1904  001112  CFDE F054          	movff	postinc2,??_detect_color+2
  1905  001116  CFDD F055          	movff	postdec2,??_detect_color+3
  1906  00111A  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1907  00111E  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1908  001122  6A05               	clrf	(___xxtofl@val+2)^0,c
  1909  001124  6A06               	clrf	(___xxtofl@val+3)^0,c
  1910  001126  0E00               	movlw	0
  1911  001128  EC81  F01C         	call	___xxtofl
  1912  00112C  C003  F011         	movff	?___xxtofl,___fldiv@b
  1913  001130  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1914  001134  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1915  001138  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1916  00113C  EC58  F013         	call	___fldiv	;wreg free
  1917  001140  C011  F02A         	movff	?___fldiv,___flmul@b
  1918  001144  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1919  001148  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1920  00114C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1921  001150  0E00               	movlw	0
  1922  001152  6E2E               	movwf	___flmul@a^0,c
  1923  001154  0E00               	movlw	0
  1924  001156  6E2F               	movwf	(___flmul@a+1)^0,c
  1925  001158  0EC8               	movlw	200
  1926  00115A  6E30               	movwf	(___flmul@a+2)^0,c
  1927  00115C  0E42               	movlw	66
  1928  00115E  6E31               	movwf	(___flmul@a+3)^0,c
  1929  001160  EC6A  F00F         	call	___flmul	;wreg free
  1930  001164  C02A  F099         	movff	?___flmul,_detect_color$3059
  1931  001168  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  1932  00116C  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  1933  001170  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  1934  001174                     
  1935                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1936  001174  C099  F076         	movff	_detect_color$3059,lroundf@x
  1937  001178  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  1938  00117C  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  1939  001180  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  1940  001184  EC63  F029         	call	_lroundf	;wreg free
  1941  001188  C076  F08C         	movff	?_lroundf,detect_color@GR
  1942  00118C  C077  F08D         	movff	?_lroundf+1,detect_color@GR+1
  1943  001190  0100               	movlb	0	; () banked
  1944  001192  EE20 F008          	lfsr	2,8
  1945  001196  5182               	movf	detect_color@w& (0+255),w,b
  1946  001198  26D9               	addwf	fsr2l,f,c
  1947  00119A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1948  00119C  22DA               	addwfc	fsr2h,f,c
  1949  00119E  CFDE F052          	movff	postinc2,??_detect_color
  1950  0011A2  CFDD F053          	movff	postdec2,??_detect_color+1
  1951  0011A6  C052  F003         	movff	??_detect_color,___xxtofl@val
  1952  0011AA  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1953  0011AE  6A05               	clrf	(___xxtofl@val+2)^0,c
  1954  0011B0  6A06               	clrf	(___xxtofl@val+3)^0,c
  1955  0011B2  0E00               	movlw	0
  1956  0011B4  EC81  F01C         	call	___xxtofl
  1957  0011B8  C003  F015         	movff	?___xxtofl,___fldiv@a
  1958  0011BC  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1959  0011C0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1960  0011C4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1961  0011C8  0100               	movlb	0	; () banked
  1962  0011CA  EE20 F002          	lfsr	2,2
  1963  0011CE  5180               	movf	detect_color@m& (0+255),w,b
  1964  0011D0  26D9               	addwf	fsr2l,f,c
  1965  0011D2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1966  0011D4  22DA               	addwfc	fsr2h,f,c
  1967  0011D6  CFDE F054          	movff	postinc2,??_detect_color+2
  1968  0011DA  CFDD F055          	movff	postdec2,??_detect_color+3
  1969  0011DE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1970  0011E2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1971  0011E6  6A05               	clrf	(___xxtofl@val+2)^0,c
  1972  0011E8  6A06               	clrf	(___xxtofl@val+3)^0,c
  1973  0011EA  0E00               	movlw	0
  1974  0011EC  EC81  F01C         	call	___xxtofl
  1975  0011F0  C003  F011         	movff	?___xxtofl,___fldiv@b
  1976  0011F4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1977  0011F8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1978  0011FC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1979  001200  EC58  F013         	call	___fldiv	;wreg free
  1980  001204  C011  F02A         	movff	?___fldiv,___flmul@b
  1981  001208  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1982  00120C  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1983  001210  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1984  001214  0E00               	movlw	0
  1985  001216  6E2E               	movwf	___flmul@a^0,c
  1986  001218  0E00               	movlw	0
  1987  00121A  6E2F               	movwf	(___flmul@a+1)^0,c
  1988  00121C  0EC8               	movlw	200
  1989  00121E  6E30               	movwf	(___flmul@a+2)^0,c
  1990  001220  0E42               	movlw	66
  1991  001222  6E31               	movwf	(___flmul@a+3)^0,c
  1992  001224  EC6A  F00F         	call	___flmul	;wreg free
  1993  001228  C02A  F099         	movff	?___flmul,_detect_color$3059
  1994  00122C  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  1995  001230  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  1996  001234  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  1997  001238  C099  F076         	movff	_detect_color$3059,lroundf@x
  1998  00123C  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  1999  001240  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2000  001244  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2001  001248  EC63  F029         	call	_lroundf	;wreg free
  2002  00124C  C076  F08E         	movff	?_lroundf,detect_color@GG
  2003  001250  C077  F08F         	movff	?_lroundf+1,detect_color@GG+1
  2004  001254  0100               	movlb	0	; () banked
  2005  001256  EE20 F00A          	lfsr	2,10
  2006  00125A  5182               	movf	detect_color@w& (0+255),w,b
  2007  00125C  26D9               	addwf	fsr2l,f,c
  2008  00125E  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2009  001260  22DA               	addwfc	fsr2h,f,c
  2010  001262  CFDE F052          	movff	postinc2,??_detect_color
  2011  001266  CFDD F053          	movff	postdec2,??_detect_color+1
  2012  00126A  C052  F003         	movff	??_detect_color,___xxtofl@val
  2013  00126E  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2014  001272  6A05               	clrf	(___xxtofl@val+2)^0,c
  2015  001274  6A06               	clrf	(___xxtofl@val+3)^0,c
  2016  001276  0E00               	movlw	0
  2017  001278  EC81  F01C         	call	___xxtofl
  2018  00127C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2019  001280  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2020  001284  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2021  001288  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2022  00128C  0100               	movlb	0	; () banked
  2023  00128E  EE20 F004          	lfsr	2,4
  2024  001292  5180               	movf	detect_color@m& (0+255),w,b
  2025  001294  26D9               	addwf	fsr2l,f,c
  2026  001296  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2027  001298  22DA               	addwfc	fsr2h,f,c
  2028  00129A  CFDE F054          	movff	postinc2,??_detect_color+2
  2029  00129E  CFDD F055          	movff	postdec2,??_detect_color+3
  2030  0012A2  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2031  0012A6  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2032  0012AA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2033  0012AC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2034  0012AE  0E00               	movlw	0
  2035  0012B0  EC81  F01C         	call	___xxtofl
  2036  0012B4  C003  F011         	movff	?___xxtofl,___fldiv@b
  2037  0012B8  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2038  0012BC  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2039  0012C0  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2040  0012C4  EC58  F013         	call	___fldiv	;wreg free
  2041  0012C8  C011  F02A         	movff	?___fldiv,___flmul@b
  2042  0012CC  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2043  0012D0  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2044  0012D4  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2045  0012D8  0E00               	movlw	0
  2046  0012DA  6E2E               	movwf	___flmul@a^0,c
  2047  0012DC  0E00               	movlw	0
  2048  0012DE  6E2F               	movwf	(___flmul@a+1)^0,c
  2049  0012E0  0EC8               	movlw	200
  2050  0012E2  6E30               	movwf	(___flmul@a+2)^0,c
  2051  0012E4  0E42               	movlw	66
  2052  0012E6  6E31               	movwf	(___flmul@a+3)^0,c
  2053  0012E8  EC6A  F00F         	call	___flmul	;wreg free
  2054  0012EC  C02A  F099         	movff	?___flmul,_detect_color$3059
  2055  0012F0  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2056  0012F4  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2057  0012F8  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2058  0012FC  C099  F076         	movff	_detect_color$3059,lroundf@x
  2059  001300  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2060  001304  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2061  001308  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2062  00130C  EC63  F029         	call	_lroundf	;wreg free
  2063  001310                     
  2064                           ;color.c: 299:     GC = lroundf((float)(m->R)/(w->GR)*100);
  2065  001310  0100               	movlb	0	; () banked
  2066  001312  EE20 F006          	lfsr	2,6
  2067  001316  5182               	movf	detect_color@w& (0+255),w,b
  2068  001318  26D9               	addwf	fsr2l,f,c
  2069  00131A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2070  00131C  22DA               	addwfc	fsr2h,f,c
  2071  00131E  CFDE F052          	movff	postinc2,??_detect_color
  2072  001322  CFDD F053          	movff	postdec2,??_detect_color+1
  2073  001326  C052  F003         	movff	??_detect_color,___xxtofl@val
  2074  00132A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2075  00132E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2076  001330  6A06               	clrf	(___xxtofl@val+3)^0,c
  2077  001332  0E00               	movlw	0
  2078  001334  EC81  F01C         	call	___xxtofl
  2079  001338  C003  F015         	movff	?___xxtofl,___fldiv@a
  2080  00133C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2081  001340  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2082  001344  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2083  001348  C080  FFD9         	movff	detect_color@m,fsr2l
  2084  00134C  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2085  001350  CFDE F054          	movff	postinc2,??_detect_color+2
  2086  001354  CFDD F055          	movff	postdec2,??_detect_color+3
  2087  001358  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2088  00135C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2089  001360  6A05               	clrf	(___xxtofl@val+2)^0,c
  2090  001362  6A06               	clrf	(___xxtofl@val+3)^0,c
  2091  001364  0E00               	movlw	0
  2092  001366  EC81  F01C         	call	___xxtofl
  2093  00136A  C003  F011         	movff	?___xxtofl,___fldiv@b
  2094  00136E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2095  001372  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2096  001376  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2097  00137A  EC58  F013         	call	___fldiv	;wreg free
  2098  00137E  C011  F02A         	movff	?___fldiv,___flmul@b
  2099  001382  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2100  001386  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2101  00138A  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2102  00138E  0E00               	movlw	0
  2103  001390  6E2E               	movwf	___flmul@a^0,c
  2104  001392  0E00               	movlw	0
  2105  001394  6E2F               	movwf	(___flmul@a+1)^0,c
  2106  001396  0EC8               	movlw	200
  2107  001398  6E30               	movwf	(___flmul@a+2)^0,c
  2108  00139A  0E42               	movlw	66
  2109  00139C  6E31               	movwf	(___flmul@a+3)^0,c
  2110  00139E  EC6A  F00F         	call	___flmul	;wreg free
  2111  0013A2  C02A  F099         	movff	?___flmul,_detect_color$3059
  2112  0013A6  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2113  0013AA  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2114  0013AE  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2115  0013B2  C099  F076         	movff	_detect_color$3059,lroundf@x
  2116  0013B6  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2117  0013BA  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2118  0013BE  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2119  0013C2  EC63  F029         	call	_lroundf	;wreg free
  2120  0013C6                     
  2121                           ;color.c: 301:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2122  0013C6  0E05               	movlw	5
  2123  0013C8  6E53               	movwf	(??_detect_color+1)^0,c
  2124  0013CA  0E0F               	movlw	15
  2125  0013CC  6E52               	movwf	??_detect_color^0,c
  2126  0013CE  0EF1               	movlw	241
  2127  0013D0                     u6547:
  2128  0013D0  2EE8               	decfsz	wreg,f,c
  2129  0013D2  D7FE               	bra	u6547
  2130  0013D4  2E52               	decfsz	??_detect_color^0,f,c
  2131  0013D6  D7FC               	bra	u6547
  2132  0013D8  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2133  0013DA  D7FA               	bra	u6547
  2134  0013DC  F000               	nop	
  2135  0013DE                     
  2136                           ;color.c: 303:     LED_B();
  2137  0013DE  EC7C  F02A         	call	_LED_B	;wreg free
  2138  0013E2                     
  2139                           ;color.c: 304:     read_color(m);
  2140  0013E2  C080  F00E         	movff	detect_color@m,read_color@m
  2141  0013E6  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2142  0013EA  EC16  F027         	call	_read_color	;wreg free
  2143  0013EE                     
  2144                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2145  0013EE  0100               	movlb	0	; () banked
  2146  0013F0  EE20 F00C          	lfsr	2,12
  2147  0013F4  5182               	movf	detect_color@w& (0+255),w,b
  2148  0013F6  26D9               	addwf	fsr2l,f,c
  2149  0013F8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2150  0013FA  22DA               	addwfc	fsr2h,f,c
  2151  0013FC  CFDE F052          	movff	postinc2,??_detect_color
  2152  001400  CFDD F053          	movff	postdec2,??_detect_color+1
  2153  001404  C052  F003         	movff	??_detect_color,___xxtofl@val
  2154  001408  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2155  00140C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2156  00140E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2157  001410  0E00               	movlw	0
  2158  001412  EC81  F01C         	call	___xxtofl
  2159  001416  C003  F015         	movff	?___xxtofl,___fldiv@a
  2160  00141A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2161  00141E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2162  001422  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2163  001426  C080  FFD9         	movff	detect_color@m,fsr2l
  2164  00142A  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2165  00142E  CFDE F054          	movff	postinc2,??_detect_color+2
  2166  001432  CFDD F055          	movff	postdec2,??_detect_color+3
  2167  001436  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2168  00143A  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2169  00143E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2170  001440  6A06               	clrf	(___xxtofl@val+3)^0,c
  2171  001442  0E00               	movlw	0
  2172  001444  EC81  F01C         	call	___xxtofl
  2173  001448  C003  F011         	movff	?___xxtofl,___fldiv@b
  2174  00144C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2175  001450  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2176  001454  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2177  001458  EC58  F013         	call	___fldiv	;wreg free
  2178  00145C  C011  F02A         	movff	?___fldiv,___flmul@b
  2179  001460  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2180  001464  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2181  001468  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2182  00146C  0E00               	movlw	0
  2183  00146E  6E2E               	movwf	___flmul@a^0,c
  2184  001470  0E00               	movlw	0
  2185  001472  6E2F               	movwf	(___flmul@a+1)^0,c
  2186  001474  0EC8               	movlw	200
  2187  001476  6E30               	movwf	(___flmul@a+2)^0,c
  2188  001478  0E42               	movlw	66
  2189  00147A  6E31               	movwf	(___flmul@a+3)^0,c
  2190  00147C  EC6A  F00F         	call	___flmul	;wreg free
  2191  001480  C02A  F099         	movff	?___flmul,_detect_color$3059
  2192  001484  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2193  001488  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2194  00148C  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2195  001490                     
  2196                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2197  001490  C099  F076         	movff	_detect_color$3059,lroundf@x
  2198  001494  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2199  001498  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2200  00149C  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2201  0014A0  EC63  F029         	call	_lroundf	;wreg free
  2202  0014A4  C076  F092         	movff	?_lroundf,detect_color@BR
  2203  0014A8  C077  F093         	movff	?_lroundf+1,detect_color@BR+1
  2204  0014AC  0100               	movlb	0	; () banked
  2205  0014AE  EE20 F00E          	lfsr	2,14
  2206  0014B2  5182               	movf	detect_color@w& (0+255),w,b
  2207  0014B4  26D9               	addwf	fsr2l,f,c
  2208  0014B6  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2209  0014B8  22DA               	addwfc	fsr2h,f,c
  2210  0014BA  CFDE F052          	movff	postinc2,??_detect_color
  2211  0014BE  CFDD F053          	movff	postdec2,??_detect_color+1
  2212  0014C2  C052  F003         	movff	??_detect_color,___xxtofl@val
  2213  0014C6  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2214  0014CA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2215  0014CC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2216  0014CE  0E00               	movlw	0
  2217  0014D0  EC81  F01C         	call	___xxtofl
  2218  0014D4  C003  F015         	movff	?___xxtofl,___fldiv@a
  2219  0014D8  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2220  0014DC  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2221  0014E0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2222  0014E4  0100               	movlb	0	; () banked
  2223  0014E6  EE20 F002          	lfsr	2,2
  2224  0014EA  5180               	movf	detect_color@m& (0+255),w,b
  2225  0014EC  26D9               	addwf	fsr2l,f,c
  2226  0014EE  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2227  0014F0  22DA               	addwfc	fsr2h,f,c
  2228  0014F2  CFDE F054          	movff	postinc2,??_detect_color+2
  2229  0014F6  CFDD F055          	movff	postdec2,??_detect_color+3
  2230  0014FA  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2231  0014FE  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2232  001502  6A05               	clrf	(___xxtofl@val+2)^0,c
  2233  001504  6A06               	clrf	(___xxtofl@val+3)^0,c
  2234  001506  0E00               	movlw	0
  2235  001508  EC81  F01C         	call	___xxtofl
  2236  00150C  C003  F011         	movff	?___xxtofl,___fldiv@b
  2237  001510  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2238  001514  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2239  001518  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2240  00151C  EC58  F013         	call	___fldiv	;wreg free
  2241  001520  C011  F02A         	movff	?___fldiv,___flmul@b
  2242  001524  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2243  001528  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2244  00152C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2245  001530  0E00               	movlw	0
  2246  001532  6E2E               	movwf	___flmul@a^0,c
  2247  001534  0E00               	movlw	0
  2248  001536  6E2F               	movwf	(___flmul@a+1)^0,c
  2249  001538  0EC8               	movlw	200
  2250  00153A  6E30               	movwf	(___flmul@a+2)^0,c
  2251  00153C  0E42               	movlw	66
  2252  00153E  6E31               	movwf	(___flmul@a+3)^0,c
  2253  001540  EC6A  F00F         	call	___flmul	;wreg free
  2254  001544  C02A  F099         	movff	?___flmul,_detect_color$3059
  2255  001548  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2256  00154C  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2257  001550  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2258  001554  C099  F076         	movff	_detect_color$3059,lroundf@x
  2259  001558  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2260  00155C  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2261  001560  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2262  001564  EC63  F029         	call	_lroundf	;wreg free
  2263  001568  C076  F097         	movff	?_lroundf,detect_color@BG
  2264  00156C  C077  F098         	movff	?_lroundf+1,detect_color@BG+1
  2265  001570  0100               	movlb	0	; () banked
  2266  001572  EE20 F010          	lfsr	2,16
  2267  001576  5182               	movf	detect_color@w& (0+255),w,b
  2268  001578  26D9               	addwf	fsr2l,f,c
  2269  00157A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2270  00157C  22DA               	addwfc	fsr2h,f,c
  2271  00157E  CFDE F052          	movff	postinc2,??_detect_color
  2272  001582  CFDD F053          	movff	postdec2,??_detect_color+1
  2273  001586  C052  F003         	movff	??_detect_color,___xxtofl@val
  2274  00158A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2275  00158E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2276  001590  6A06               	clrf	(___xxtofl@val+3)^0,c
  2277  001592  0E00               	movlw	0
  2278  001594  EC81  F01C         	call	___xxtofl
  2279  001598  C003  F015         	movff	?___xxtofl,___fldiv@a
  2280  00159C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2281  0015A0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2282  0015A4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2283  0015A8  0100               	movlb	0	; () banked
  2284  0015AA  EE20 F004          	lfsr	2,4
  2285  0015AE  5180               	movf	detect_color@m& (0+255),w,b
  2286  0015B0  26D9               	addwf	fsr2l,f,c
  2287  0015B2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2288  0015B4  22DA               	addwfc	fsr2h,f,c
  2289  0015B6  CFDE F054          	movff	postinc2,??_detect_color+2
  2290  0015BA  CFDD F055          	movff	postdec2,??_detect_color+3
  2291  0015BE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2292  0015C2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2293  0015C6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2294  0015C8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2295  0015CA  0E00               	movlw	0
  2296  0015CC  EC81  F01C         	call	___xxtofl
  2297  0015D0  C003  F011         	movff	?___xxtofl,___fldiv@b
  2298  0015D4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2299  0015D8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2300  0015DC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2301  0015E0  EC58  F013         	call	___fldiv	;wreg free
  2302  0015E4  C011  F02A         	movff	?___fldiv,___flmul@b
  2303  0015E8  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2304  0015EC  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2305  0015F0  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2306  0015F4  0E00               	movlw	0
  2307  0015F6  6E2E               	movwf	___flmul@a^0,c
  2308  0015F8  0E00               	movlw	0
  2309  0015FA  6E2F               	movwf	(___flmul@a+1)^0,c
  2310  0015FC  0EC8               	movlw	200
  2311  0015FE  6E30               	movwf	(___flmul@a+2)^0,c
  2312  001600  0E42               	movlw	66
  2313  001602  6E31               	movwf	(___flmul@a+3)^0,c
  2314  001604  EC6A  F00F         	call	___flmul	;wreg free
  2315  001608  C02A  F099         	movff	?___flmul,_detect_color$3059
  2316  00160C  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2317  001610  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2318  001614  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2319  001618  C099  F076         	movff	_detect_color$3059,lroundf@x
  2320  00161C  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2321  001620  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2322  001624  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2323  001628  EC63  F029         	call	_lroundf	;wreg free
  2324  00162C  C076  F094         	movff	?_lroundf,detect_color@BB
  2325  001630  C077  F095         	movff	?_lroundf+1,detect_color@BB+1
  2326  001634                     
  2327                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2328  001634  0E05               	movlw	5
  2329  001636  6E53               	movwf	(??_detect_color+1)^0,c
  2330  001638  0E0F               	movlw	15
  2331  00163A  6E52               	movwf	??_detect_color^0,c
  2332  00163C  0EF1               	movlw	241
  2333  00163E                     u6557:
  2334  00163E  2EE8               	decfsz	wreg,f,c
  2335  001640  D7FE               	bra	u6557
  2336  001642  2E52               	decfsz	??_detect_color^0,f,c
  2337  001644  D7FC               	bra	u6557
  2338  001646  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2339  001648  D7FA               	bra	u6557
  2340  00164A  F000               	nop	
  2341  00164C                     
  2342                           ;color.c: 309:     if (compare(0, BR, 70)){
  2343  00164C  0E00               	movlw	0
  2344  00164E  0100               	movlb	0	; () banked
  2345  001650  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2346  001652  0E00               	movlw	0
  2347  001654  6F7A               	movwf	compare@lower& (0+255),b
  2348  001656  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2349  00165A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2350  00165E  0E00               	movlw	0
  2351  001660  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2352  001662  0E46               	movlw	70
  2353  001664  6F7E               	movwf	compare@upper& (0+255),b
  2354  001666  EC46  F029         	call	_compare	;wreg free
  2355  00166A  0900               	iorlw	0
  2356  00166C  B4D8               	btfsc	status,2,c
  2357  00166E  EF3B  F00B         	goto	u6261
  2358  001672  EF3D  F00B         	goto	u6260
  2359  001676                     u6261:
  2360  001676  EFAE  F00B         	goto	l5834
  2361  00167A                     u6260:
  2362  00167A                     
  2363                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2364  00167A  C094  F003         	movff	detect_color@BB,___xxtofl@val
  2365  00167E  C095  F004         	movff	detect_color@BB+1,___xxtofl@val+1
  2366  001682  6A05               	clrf	(___xxtofl@val+2)^0,c
  2367  001684  6A06               	clrf	(___xxtofl@val+3)^0,c
  2368  001686  0E00               	movlw	0
  2369  001688  EC81  F01C         	call	___xxtofl
  2370  00168C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2371  001690  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2372  001694  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2373  001698  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2374  00169C  0100               	movlb	0	; () banked
  2375  00169E  5197               	movf	detect_color@BG& (0+255),w,b
  2376  0016A0  258E               	addwf	detect_color@GG& (0+255),w,b
  2377  0016A2  6E52               	movwf	??_detect_color^0,c
  2378  0016A4  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2379  0016A6  218F               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2380  0016A8  6E53               	movwf	(??_detect_color+1)^0,c
  2381  0016AA  C052  F003         	movff	??_detect_color,___xxtofl@val
  2382  0016AE  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2383  0016B2  6A05               	clrf	(___xxtofl@val+2)^0,c
  2384  0016B4  6A06               	clrf	(___xxtofl@val+3)^0,c
  2385  0016B6  0E00               	movlw	0
  2386  0016B8  EC81  F01C         	call	___xxtofl
  2387  0016BC  C003  F011         	movff	?___xxtofl,___fldiv@b
  2388  0016C0  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2389  0016C4  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2390  0016C8  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2391  0016CC  EC58  F013         	call	___fldiv	;wreg free
  2392  0016D0  C011  F02A         	movff	?___fldiv,___flmul@b
  2393  0016D4  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2394  0016D8  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2395  0016DC  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2396  0016E0  0E00               	movlw	0
  2397  0016E2  6E2E               	movwf	___flmul@a^0,c
  2398  0016E4  0E00               	movlw	0
  2399  0016E6  6E2F               	movwf	(___flmul@a+1)^0,c
  2400  0016E8  0E48               	movlw	72
  2401  0016EA  6E30               	movwf	(___flmul@a+2)^0,c
  2402  0016EC  0E43               	movlw	67
  2403  0016EE  6E31               	movwf	(___flmul@a+3)^0,c
  2404  0016F0  EC6A  F00F         	call	___flmul	;wreg free
  2405  0016F4  C02A  F099         	movff	?___flmul,_detect_color$3059
  2406  0016F8  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2407  0016FC  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2408  001700  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2409                           
  2410                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2411  001704  0E00               	movlw	0
  2412  001706  0100               	movlb	0	; () banked
  2413  001708  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2414  00170A  0E00               	movlw	0
  2415  00170C  6F7A               	movwf	compare@lower& (0+255),b
  2416  00170E  C099  F076         	movff	_detect_color$3059,lroundf@x
  2417  001712  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2418  001716  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2419  00171A  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2420  00171E  EC63  F029         	call	_lroundf	;wreg free
  2421  001722  C076  F07C         	movff	?_lroundf,compare@value2compare
  2422  001726  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2423  00172A  0E01               	movlw	1
  2424  00172C  0100               	movlb	0	; () banked
  2425  00172E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2426  001730  0E9E               	movlw	158
  2427  001732  6F7E               	movwf	compare@upper& (0+255),b
  2428  001734  EC46  F029         	call	_compare	;wreg free
  2429  001738  0900               	iorlw	0
  2430  00173A  B4D8               	btfsc	status,2,c
  2431  00173C  EFA2  F00B         	goto	u6271
  2432  001740  EFA4  F00B         	goto	u6270
  2433  001744                     u6271:
  2434  001744  EFA9  F00B         	goto	l5832
  2435  001748                     u6270:
  2436  001748  0E03               	movlw	3
  2437  00174A  0100               	movlb	0	; () banked
  2438  00174C  6F96               	movwf	detect_color@color& (0+255),b
  2439  00174E  EF8F  F00C         	goto	l5864
  2440  001752                     l5832:
  2441  001752  0E02               	movlw	2
  2442  001754  0100               	movlb	0	; () banked
  2443  001756  6F96               	movwf	detect_color@color& (0+255),b
  2444  001758  EF8F  F00C         	goto	l5864
  2445  00175C                     l5834:
  2446                           
  2447                           ;color.c: 315:         if (compare(0, BG, 75)){
  2448  00175C  0E00               	movlw	0
  2449  00175E  0100               	movlb	0	; () banked
  2450  001760  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2451  001762  0E00               	movlw	0
  2452  001764  6F7A               	movwf	compare@lower& (0+255),b
  2453  001766  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2454  00176A  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2455  00176E  0E00               	movlw	0
  2456  001770  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2457  001772  0E4B               	movlw	75
  2458  001774  6F7E               	movwf	compare@upper& (0+255),b
  2459  001776  EC46  F029         	call	_compare	;wreg free
  2460  00177A  0900               	iorlw	0
  2461  00177C  B4D8               	btfsc	status,2,c
  2462  00177E  EFC3  F00B         	goto	u6281
  2463  001782  EFC5  F00B         	goto	u6280
  2464  001786                     u6281:
  2465  001786  EF3F  F00C         	goto	l5846
  2466  00178A                     u6280:
  2467  00178A                     
  2468                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2469  00178A  C08A  F003         	movff	detect_color@RG,___xxtofl@val
  2470  00178E  C08B  F004         	movff	detect_color@RG+1,___xxtofl@val+1
  2471  001792  6A05               	clrf	(___xxtofl@val+2)^0,c
  2472  001794  6A06               	clrf	(___xxtofl@val+3)^0,c
  2473  001796  0E00               	movlw	0
  2474  001798  EC81  F01C         	call	___xxtofl
  2475  00179C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2476  0017A0  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2477  0017A4  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2478  0017A8  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2479  0017AC  C090  F003         	movff	detect_color@RR,___xxtofl@val
  2480  0017B0  C091  F004         	movff	detect_color@RR+1,___xxtofl@val+1
  2481  0017B4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2482  0017B6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2483  0017B8  0E00               	movlw	0
  2484  0017BA  EC81  F01C         	call	___xxtofl
  2485  0017BE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2486  0017C2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2487  0017C6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2488  0017CA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2489  0017CE  EC58  F013         	call	___fldiv	;wreg free
  2490  0017D2  C011  F02A         	movff	?___fldiv,___flmul@b
  2491  0017D6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2492  0017DA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2493  0017DE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2494  0017E2  0E00               	movlw	0
  2495  0017E4  6E2E               	movwf	___flmul@a^0,c
  2496  0017E6  0E00               	movlw	0
  2497  0017E8  6E2F               	movwf	(___flmul@a+1)^0,c
  2498  0017EA  0EFA               	movlw	250
  2499  0017EC  6E30               	movwf	(___flmul@a+2)^0,c
  2500  0017EE  0E43               	movlw	67
  2501  0017F0  6E31               	movwf	(___flmul@a+3)^0,c
  2502  0017F2  EC6A  F00F         	call	___flmul	;wreg free
  2503  0017F6  C02A  F099         	movff	?___flmul,_detect_color$3059
  2504  0017FA  C02B  F09A         	movff	?___flmul+1,_detect_color$3059+1
  2505  0017FE  C02C  F09B         	movff	?___flmul+2,_detect_color$3059+2
  2506  001802  C02D  F09C         	movff	?___flmul+3,_detect_color$3059+3
  2507                           
  2508                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2509  001806  0E00               	movlw	0
  2510  001808  0100               	movlb	0	; () banked
  2511  00180A  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2512  00180C  0E00               	movlw	0
  2513  00180E  6F7A               	movwf	compare@lower& (0+255),b
  2514  001810  C099  F076         	movff	_detect_color$3059,lroundf@x
  2515  001814  C09A  F077         	movff	_detect_color$3059+1,lroundf@x+1
  2516  001818  C09B  F078         	movff	_detect_color$3059+2,lroundf@x+2
  2517  00181C  C09C  F079         	movff	_detect_color$3059+3,lroundf@x+3
  2518  001820  EC63  F029         	call	_lroundf	;wreg free
  2519  001824  C076  F07C         	movff	?_lroundf,compare@value2compare
  2520  001828  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2521  00182C  0E02               	movlw	2
  2522  00182E  0100               	movlb	0	; () banked
  2523  001830  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2524  001832  0E9E               	movlw	158
  2525  001834  6F7E               	movwf	compare@upper& (0+255),b
  2526  001836  EC46  F029         	call	_compare	;wreg free
  2527  00183A  0900               	iorlw	0
  2528  00183C  B4D8               	btfsc	status,2,c
  2529  00183E  EF23  F00C         	goto	u6291
  2530  001842  EF25  F00C         	goto	u6290
  2531  001846                     u6291:
  2532  001846  EF3A  F00C         	goto	l5844
  2533  00184A                     u6290:
  2534  00184A                     
  2535                           ;color.c: 318:                 if (GR > 90){color = 6;}
  2536  00184A  0100               	movlb	0	; () banked
  2537  00184C  518D               	movf	(detect_color@GR+1)& (0+255),w,b
  2538  00184E  E109               	bnz	u6300
  2539  001850  0E5B               	movlw	91
  2540  001852  5D8C               	subwf	detect_color@GR& (0+255),w,b
  2541  001854  A0D8               	btfss	status,0,c
  2542  001856  EF2F  F00C         	goto	u6301
  2543  00185A  EF31  F00C         	goto	u6300
  2544  00185E                     u6301:
  2545  00185E  EF35  F00C         	goto	l5842
  2546  001862                     u6300:
  2547  001862                     
  2548                           ; BSR set to: 0
  2549  001862  0E06               	movlw	6
  2550  001864  6F96               	movwf	detect_color@color& (0+255),b
  2551  001866  EF8F  F00C         	goto	l5864
  2552  00186A                     l5842:
  2553  00186A  0E00               	movlw	0
  2554  00186C  0100               	movlb	0	; () banked
  2555  00186E  6F96               	movwf	detect_color@color& (0+255),b
  2556  001870  EF8F  F00C         	goto	l5864
  2557  001874                     l5844:
  2558  001874  0E01               	movlw	1
  2559  001876  0100               	movlb	0	; () banked
  2560  001878  6F96               	movwf	detect_color@color& (0+255),b
  2561  00187A  EF8F  F00C         	goto	l5864
  2562  00187E                     l5846:
  2563                           
  2564                           ;color.c: 324:             if (compare(0, BR, 90)){
  2565  00187E  0E00               	movlw	0
  2566  001880  0100               	movlb	0	; () banked
  2567  001882  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2568  001884  0E00               	movlw	0
  2569  001886  6F7A               	movwf	compare@lower& (0+255),b
  2570  001888  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2571  00188C  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2572  001890  0E00               	movlw	0
  2573  001892  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2574  001894  0E5A               	movlw	90
  2575  001896  6F7E               	movwf	compare@upper& (0+255),b
  2576  001898  EC46  F029         	call	_compare	;wreg free
  2577  00189C  0900               	iorlw	0
  2578  00189E  B4D8               	btfsc	status,2,c
  2579  0018A0  EF54  F00C         	goto	u6311
  2580  0018A4  EF56  F00C         	goto	u6310
  2581  0018A8                     u6311:
  2582  0018A8  EF66  F00C         	goto	l5854
  2583  0018AC                     u6310:
  2584  0018AC                     
  2585                           ;color.c: 325:                 if (BG > 90){color = 7;}
  2586  0018AC  0100               	movlb	0	; () banked
  2587  0018AE  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2588  0018B0  E109               	bnz	u6320
  2589  0018B2  0E5B               	movlw	91
  2590  0018B4  5D97               	subwf	detect_color@BG& (0+255),w,b
  2591  0018B6  A0D8               	btfss	status,0,c
  2592  0018B8  EF60  F00C         	goto	u6321
  2593  0018BC  EF62  F00C         	goto	u6320
  2594  0018C0                     u6321:
  2595  0018C0  EF35  F00C         	goto	l5842
  2596  0018C4                     u6320:
  2597  0018C4                     
  2598                           ; BSR set to: 0
  2599  0018C4  0E07               	movlw	7
  2600  0018C6  6F96               	movwf	detect_color@color& (0+255),b
  2601  0018C8  EF8F  F00C         	goto	l5864
  2602  0018CC                     l5854:
  2603                           
  2604                           ;color.c: 329:                 if (BG < BB){color = 5;}
  2605  0018CC  0100               	movlb	0	; () banked
  2606  0018CE  5194               	movf	detect_color@BB& (0+255),w,b
  2607  0018D0  5D97               	subwf	detect_color@BG& (0+255),w,b
  2608  0018D2  5195               	movf	(detect_color@BB+1)& (0+255),w,b
  2609  0018D4  5998               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2610  0018D6  B0D8               	btfsc	status,0,c
  2611  0018D8  EF70  F00C         	goto	u6331
  2612  0018DC  EF72  F00C         	goto	u6330
  2613  0018E0                     u6331:
  2614  0018E0  EF76  F00C         	goto	l5858
  2615  0018E4                     u6330:
  2616  0018E4                     
  2617                           ; BSR set to: 0
  2618  0018E4  0E05               	movlw	5
  2619  0018E6  6F96               	movwf	detect_color@color& (0+255),b
  2620  0018E8  EF8F  F00C         	goto	l5864
  2621  0018EC                     l5858:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;color.c: 331:                     if (compare(0, BB, 90)){color = 4;}
  2625  0018EC  0E00               	movlw	0
  2626  0018EE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2627  0018F0  0E00               	movlw	0
  2628  0018F2  6F7A               	movwf	compare@lower& (0+255),b
  2629  0018F4  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2630  0018F8  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2631  0018FC  0E00               	movlw	0
  2632  0018FE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2633  001900  0E5A               	movlw	90
  2634  001902  6F7E               	movwf	compare@upper& (0+255),b
  2635  001904  EC46  F029         	call	_compare	;wreg free
  2636  001908  0900               	iorlw	0
  2637  00190A  B4D8               	btfsc	status,2,c
  2638  00190C  EF8A  F00C         	goto	u6341
  2639  001910  EF8C  F00C         	goto	u6340
  2640  001914                     u6341:
  2641  001914  EF35  F00C         	goto	l5842
  2642  001918                     u6340:
  2643  001918  0E04               	movlw	4
  2644  00191A  0100               	movlb	0	; () banked
  2645  00191C  6F96               	movwf	detect_color@color& (0+255),b
  2646  00191E                     l5864:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;color.c: 338:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  2650  00191E  0E00               	movlw	0
  2651  001920  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2652  001922  0E5F               	movlw	95
  2653  001924  6F7A               	movwf	compare@lower& (0+255),b
  2654  001926  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2655  00192A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2656  00192E  0E00               	movlw	0
  2657  001930  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2658  001932  0E69               	movlw	105
  2659  001934  6F7E               	movwf	compare@upper& (0+255),b
  2660  001936  EC46  F029         	call	_compare	;wreg free
  2661  00193A  0900               	iorlw	0
  2662  00193C  B4D8               	btfsc	status,2,c
  2663  00193E  EFA3  F00C         	goto	u6351
  2664  001942  EFA5  F00C         	goto	u6350
  2665  001946                     u6351:
  2666  001946  EFD6  F00C         	goto	l5872
  2667  00194A                     u6350:
  2668  00194A  0E00               	movlw	0
  2669  00194C  0100               	movlb	0	; () banked
  2670  00194E  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2671  001950  0E5F               	movlw	95
  2672  001952  6F7A               	movwf	compare@lower& (0+255),b
  2673  001954  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2674  001958  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2675  00195C  0E00               	movlw	0
  2676  00195E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2677  001960  0E69               	movlw	105
  2678  001962  6F7E               	movwf	compare@upper& (0+255),b
  2679  001964  EC46  F029         	call	_compare	;wreg free
  2680  001968  0900               	iorlw	0
  2681  00196A  B4D8               	btfsc	status,2,c
  2682  00196C  EFBA  F00C         	goto	u6361
  2683  001970  EFBC  F00C         	goto	u6360
  2684  001974                     u6361:
  2685  001974  EFD6  F00C         	goto	l5872
  2686  001978                     u6360:
  2687  001978  0E00               	movlw	0
  2688  00197A  0100               	movlb	0	; () banked
  2689  00197C  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2690  00197E  0E5F               	movlw	95
  2691  001980  6F7A               	movwf	compare@lower& (0+255),b
  2692  001982  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2693  001986  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2694  00198A  0E00               	movlw	0
  2695  00198C  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2696  00198E  0E69               	movlw	105
  2697  001990  6F7E               	movwf	compare@upper& (0+255),b
  2698  001992  EC46  F029         	call	_compare	;wreg free
  2699  001996  0900               	iorlw	0
  2700  001998  B4D8               	btfsc	status,2,c
  2701  00199A  EFD1  F00C         	goto	u6371
  2702  00199E  EFD3  F00C         	goto	u6370
  2703  0019A2                     u6371:
  2704  0019A2  EFD6  F00C         	goto	l5872
  2705  0019A6                     u6370:
  2706  0019A6  0E08               	movlw	8
  2707  0019A8  0100               	movlb	0	; () banked
  2708  0019AA  6F96               	movwf	detect_color@color& (0+255),b
  2709  0019AC                     l5872:
  2710                           
  2711                           ;color.c: 339:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2712  0019AC  0E00               	movlw	0
  2713  0019AE  0100               	movlb	0	; () banked
  2714  0019B0  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2715  0019B2  0E00               	movlw	0
  2716  0019B4  6F7A               	movwf	compare@lower& (0+255),b
  2717  0019B6  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2718  0019BA  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2719  0019BE  0E00               	movlw	0
  2720  0019C0  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2721  0019C2  0E19               	movlw	25
  2722  0019C4  6F7E               	movwf	compare@upper& (0+255),b
  2723  0019C6  EC46  F029         	call	_compare	;wreg free
  2724  0019CA  0900               	iorlw	0
  2725  0019CC  B4D8               	btfsc	status,2,c
  2726  0019CE  EFEB  F00C         	goto	u6381
  2727  0019D2  EFED  F00C         	goto	u6380
  2728  0019D6                     u6381:
  2729  0019D6  EF07  F00D         	goto	l163
  2730  0019DA                     u6380:
  2731  0019DA  0E00               	movlw	0
  2732  0019DC  0100               	movlb	0	; () banked
  2733  0019DE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2734  0019E0  0E00               	movlw	0
  2735  0019E2  6F7A               	movwf	compare@lower& (0+255),b
  2736  0019E4  C090  F07C         	movff	detect_color@RR,compare@value2compare
  2737  0019E8  C091  F07D         	movff	detect_color@RR+1,compare@value2compare+1
  2738  0019EC  0E00               	movlw	0
  2739  0019EE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2740  0019F0  0E5A               	movlw	90
  2741  0019F2  6F7E               	movwf	compare@upper& (0+255),b
  2742  0019F4  EC46  F029         	call	_compare	;wreg free
  2743  0019F8  0900               	iorlw	0
  2744  0019FA  B4D8               	btfsc	status,2,c
  2745  0019FC  EF02  F00D         	goto	u6391
  2746  001A00  EF04  F00D         	goto	u6390
  2747  001A04                     u6391:
  2748  001A04  EF07  F00D         	goto	l163
  2749  001A08                     u6390:
  2750  001A08  0E00               	movlw	0
  2751  001A0A  0100               	movlb	0	; () banked
  2752  001A0C  6F96               	movwf	detect_color@color& (0+255),b
  2753  001A0E                     l163:
  2754                           
  2755                           ;color.c: 355:     return color;
  2756  001A0E  0100               	movlb	0	; () banked
  2757  001A10  5196               	movf	detect_color@color& (0+255),w,b
  2758  001A12                     
  2759                           ; BSR set to: 0
  2760  001A12  0012               	return		;funcret
  2761  001A14                     __end_of_detect_color:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _compare *****************
  2765 ;; Defined at:
  2766 ;;		line 358 in file "color.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  lower           2   26[BANK0 ] unsigned int 
  2769 ;;  value2compar    2   28[BANK0 ] unsigned int 
  2770 ;;  upper           2   30[BANK0 ] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  result          1   80[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;Total ram usage:        7 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; Hardware stack levels required when called: 2
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_detect_color
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text3
  2797  00528C                     __ptext3:
  2798                           	callstack 0
  2799  00528C                     _compare:
  2800                           	callstack 26
  2801  00528C                     
  2802                           ;color.c: 358: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 359: {;color.c: 360:     unsigned char result = 0;
  2803  00528C  0E00               	movlw	0
  2804  00528E  6E51               	movwf	compare@result^0,c
  2805  005290                     
  2806                           ;color.c: 361:     if (lower < value2compare && value2compare <= upper){result = 1;}
  2807  005290  0100               	movlb	0	; () banked
  2808  005292  517C               	movf	compare@value2compare& (0+255),w,b
  2809  005294  5D7A               	subwf	compare@lower& (0+255),w,b
  2810  005296  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2811  005298  597B               	subwfb	(compare@lower+1)& (0+255),w,b
  2812  00529A  B0D8               	btfsc	status,0,c
  2813  00529C  EF52  F029         	goto	u6241
  2814  0052A0  EF54  F029         	goto	u6240
  2815  0052A4                     u6241:
  2816  0052A4  EF61  F029         	goto	l167
  2817  0052A8                     u6240:
  2818  0052A8                     
  2819                           ; BSR set to: 0
  2820  0052A8  517C               	movf	compare@value2compare& (0+255),w,b
  2821  0052AA  5D7E               	subwf	compare@upper& (0+255),w,b
  2822  0052AC  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2823  0052AE  597F               	subwfb	(compare@upper+1)& (0+255),w,b
  2824  0052B0  A0D8               	btfss	status,0,c
  2825  0052B2  EF5D  F029         	goto	u6251
  2826  0052B6  EF5F  F029         	goto	u6250
  2827  0052BA                     u6251:
  2828  0052BA  EF61  F029         	goto	l167
  2829  0052BE                     u6250:
  2830  0052BE                     
  2831                           ; BSR set to: 0
  2832  0052BE  0E01               	movlw	1
  2833  0052C0  6E51               	movwf	compare@result^0,c
  2834  0052C2                     l167:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;color.c: 362:     return result;
  2838  0052C2  5051               	movf	compare@result^0,w,c
  2839  0052C4                     
  2840                           ; BSR set to: 0
  2841  0052C4  0012               	return		;funcret
  2842  0052C6                     __end_of_compare:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _toggle_light *****************
  2846 ;; Defined at:
  2847 ;;		line 27 in file "color.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  lightnumber     1    wreg     unsigned char 
  2850 ;;  toggletime      1    2[COMRAM] unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  lightnumber     1    6[COMRAM] unsigned char 
  2853 ;;  i               1    5[COMRAM] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        5 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 2
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text4
  2878  003032                     __ptext4:
  2879                           	callstack 0
  2880  003032                     _toggle_light:
  2881                           	callstack 28
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;incstack = 0
  2885                           ;toggle_light@lightnumber stored from wreg
  2886  003032  6E07               	movwf	toggle_light@lightnumber^0,c
  2887  003034                     
  2888                           ;color.c: 27: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 28: {;color.c: 29:     unsigned char i = 0;
  2889  003034  0E00               	movlw	0
  2890  003036  6E06               	movwf	toggle_light@i^0,c
  2891                           
  2892                           ;color.c: 31:     for (i = 0; i < toggletime; i++){
  2893  003038  0E00               	movlw	0
  2894  00303A  6E06               	movwf	toggle_light@i^0,c
  2895  00303C  EF65  F019         	goto	l74
  2896  003040                     l4802:
  2897                           
  2898                           ;color.c: 32:         if (lightnumber == 1){
  2899  003040  0407               	decf	toggle_light@lightnumber^0,w,c
  2900  003042  A4D8               	btfss	status,2,c
  2901  003044  EF26  F018         	goto	u4881
  2902  003048  EF28  F018         	goto	u4880
  2903  00304C                     u4881:
  2904  00304C  EF60  F018         	goto	l4810
  2905  003050                     u4880:
  2906  003050                     
  2907                           ;color.c: 33:             LATHbits.LATH1 = !LATHbits.LATH1;
  2908  003050  A280               	btfss	128,1,c	;volatile
  2909  003052  EF2D  F018         	goto	u4891
  2910  003056  EF31  F018         	goto	u4890
  2911  00305A                     u4891:
  2912  00305A  6A04               	clrf	??_toggle_light^0,c
  2913  00305C  2A04               	incf	??_toggle_light^0,f,c
  2914  00305E  EF32  F018         	goto	u4908
  2915  003062                     u4890:
  2916  003062  6A04               	clrf	??_toggle_light^0,c
  2917  003064                     u4908:
  2918  003064  4604               	rlncf	??_toggle_light^0,f,c
  2919  003066  5080               	movf	128,w,c	;volatile
  2920  003068  1804               	xorwf	??_toggle_light^0,w,c
  2921  00306A  0BFD               	andlw	-3
  2922  00306C  1804               	xorwf	??_toggle_light^0,w,c
  2923  00306E  6E80               	movwf	128,c	;volatile
  2924  003070                     
  2925                           ;color.c: 34:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2926  003070  0E29               	movlw	41
  2927  003072  6E05               	movwf	(??_toggle_light+1)^0,c
  2928  003074  0E96               	movlw	150
  2929  003076  6E04               	movwf	??_toggle_light^0,c
  2930  003078  0E7F               	movlw	127
  2931  00307A                     u6567:
  2932  00307A  2EE8               	decfsz	wreg,f,c
  2933  00307C  D7FE               	bra	u6567
  2934  00307E  2E04               	decfsz	??_toggle_light^0,f,c
  2935  003080  D7FC               	bra	u6567
  2936  003082  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  2937  003084  D7FA               	bra	u6567
  2938  003086  F000               	nop	
  2939  003088                     
  2940                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  2941  003088  A280               	btfss	128,1,c	;volatile
  2942  00308A  EF49  F018         	goto	u4911
  2943  00308E  EF4D  F018         	goto	u4910
  2944  003092                     u4911:
  2945  003092  6A04               	clrf	??_toggle_light^0,c
  2946  003094  2A04               	incf	??_toggle_light^0,f,c
  2947  003096  EF4E  F018         	goto	u4928
  2948  00309A                     u4910:
  2949  00309A  6A04               	clrf	??_toggle_light^0,c
  2950  00309C                     u4928:
  2951  00309C  4604               	rlncf	??_toggle_light^0,f,c
  2952  00309E  5080               	movf	128,w,c	;volatile
  2953  0030A0  1804               	xorwf	??_toggle_light^0,w,c
  2954  0030A2  0BFD               	andlw	-3
  2955  0030A4  1804               	xorwf	??_toggle_light^0,w,c
  2956  0030A6  6E80               	movwf	128,c	;volatile
  2957                           
  2958                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2959  0030A8  0E29               	movlw	41
  2960  0030AA  6E05               	movwf	(??_toggle_light+1)^0,c
  2961  0030AC  0E96               	movlw	150
  2962  0030AE  6E04               	movwf	??_toggle_light^0,c
  2963  0030B0  0E7F               	movlw	127
  2964  0030B2                     u6577:
  2965  0030B2  2EE8               	decfsz	wreg,f,c
  2966  0030B4  D7FE               	bra	u6577
  2967  0030B6  2E04               	decfsz	??_toggle_light^0,f,c
  2968  0030B8  D7FC               	bra	u6577
  2969  0030BA  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  2970  0030BC  D7FA               	bra	u6577
  2971  0030BE  F000               	nop	
  2972  0030C0                     l4810:
  2973                           
  2974                           ;color.c: 38:         if (lightnumber == 2){
  2975  0030C0  0E02               	movlw	2
  2976  0030C2  1807               	xorwf	toggle_light@lightnumber^0,w,c
  2977  0030C4  A4D8               	btfss	status,2,c
  2978  0030C6  EF67  F018         	goto	u4931
  2979  0030CA  EF69  F018         	goto	u4930
  2980  0030CE                     u4931:
  2981  0030CE  EFA1  F018         	goto	l4818
  2982  0030D2                     u4930:
  2983  0030D2                     
  2984                           ;color.c: 39:             LATDbits.LATD4 = !LATDbits.LATD4;
  2985  0030D2  A87C               	btfss	124,4,c	;volatile
  2986  0030D4  EF6E  F018         	goto	u4941
  2987  0030D8  EF72  F018         	goto	u4940
  2988  0030DC                     u4941:
  2989  0030DC  6A04               	clrf	??_toggle_light^0,c
  2990  0030DE  2A04               	incf	??_toggle_light^0,f,c
  2991  0030E0  EF73  F018         	goto	u4958
  2992  0030E4                     u4940:
  2993  0030E4  6A04               	clrf	??_toggle_light^0,c
  2994  0030E6                     u4958:
  2995  0030E6  3A04               	swapf	??_toggle_light^0,f,c
  2996  0030E8  507C               	movf	124,w,c	;volatile
  2997  0030EA  1804               	xorwf	??_toggle_light^0,w,c
  2998  0030EC  0BEF               	andlw	-17
  2999  0030EE  1804               	xorwf	??_toggle_light^0,w,c
  3000  0030F0  6E7C               	movwf	124,c	;volatile
  3001  0030F2                     
  3002                           ;color.c: 40:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3003  0030F2  0E29               	movlw	41
  3004  0030F4  6E05               	movwf	(??_toggle_light+1)^0,c
  3005  0030F6  0E96               	movlw	150
  3006  0030F8  6E04               	movwf	??_toggle_light^0,c
  3007  0030FA  0E7F               	movlw	127
  3008  0030FC                     u6587:
  3009  0030FC  2EE8               	decfsz	wreg,f,c
  3010  0030FE  D7FE               	bra	u6587
  3011  003100  2E04               	decfsz	??_toggle_light^0,f,c
  3012  003102  D7FC               	bra	u6587
  3013  003104  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3014  003106  D7FA               	bra	u6587
  3015  003108  F000               	nop	
  3016  00310A                     
  3017                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  3018  00310A  A87C               	btfss	124,4,c	;volatile
  3019  00310C  EF8A  F018         	goto	u4961
  3020  003110  EF8E  F018         	goto	u4960
  3021  003114                     u4961:
  3022  003114  6A04               	clrf	??_toggle_light^0,c
  3023  003116  2A04               	incf	??_toggle_light^0,f,c
  3024  003118  EF8F  F018         	goto	u4978
  3025  00311C                     u4960:
  3026  00311C  6A04               	clrf	??_toggle_light^0,c
  3027  00311E                     u4978:
  3028  00311E  3A04               	swapf	??_toggle_light^0,f,c
  3029  003120  507C               	movf	124,w,c	;volatile
  3030  003122  1804               	xorwf	??_toggle_light^0,w,c
  3031  003124  0BEF               	andlw	-17
  3032  003126  1804               	xorwf	??_toggle_light^0,w,c
  3033  003128  6E7C               	movwf	124,c	;volatile
  3034                           
  3035                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3036  00312A  0E29               	movlw	41
  3037  00312C  6E05               	movwf	(??_toggle_light+1)^0,c
  3038  00312E  0E96               	movlw	150
  3039  003130  6E04               	movwf	??_toggle_light^0,c
  3040  003132  0E7F               	movlw	127
  3041  003134                     u6597:
  3042  003134  2EE8               	decfsz	wreg,f,c
  3043  003136  D7FE               	bra	u6597
  3044  003138  2E04               	decfsz	??_toggle_light^0,f,c
  3045  00313A  D7FC               	bra	u6597
  3046  00313C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3047  00313E  D7FA               	bra	u6597
  3048  003140  F000               	nop	
  3049  003142                     l4818:
  3050                           
  3051                           ;color.c: 44:         if (lightnumber == 3){
  3052  003142  0E03               	movlw	3
  3053  003144  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3054  003146  A4D8               	btfss	status,2,c
  3055  003148  EFA8  F018         	goto	u4981
  3056  00314C  EFAA  F018         	goto	u4980
  3057  003150                     u4981:
  3058  003150  EFE6  F018         	goto	l4826
  3059  003154                     u4980:
  3060  003154                     
  3061                           ;color.c: 45:             LATDbits.LATD3 = !LATDbits.LATD3;
  3062  003154  A67C               	btfss	124,3,c	;volatile
  3063  003156  EFAF  F018         	goto	u4991
  3064  00315A  EFB3  F018         	goto	u4990
  3065  00315E                     u4991:
  3066  00315E  6A04               	clrf	??_toggle_light^0,c
  3067  003160  2A04               	incf	??_toggle_light^0,f,c
  3068  003162  EFB4  F018         	goto	u5008
  3069  003166                     u4990:
  3070  003166  6A04               	clrf	??_toggle_light^0,c
  3071  003168                     u5008:
  3072  003168  4604               	rlncf	??_toggle_light^0,f,c
  3073  00316A  4604               	rlncf	??_toggle_light^0,f,c
  3074  00316C  4604               	rlncf	??_toggle_light^0,f,c
  3075  00316E  507C               	movf	124,w,c	;volatile
  3076  003170  1804               	xorwf	??_toggle_light^0,w,c
  3077  003172  0BF7               	andlw	-9
  3078  003174  1804               	xorwf	??_toggle_light^0,w,c
  3079  003176  6E7C               	movwf	124,c	;volatile
  3080  003178                     
  3081                           ;color.c: 46:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3082  003178  0E29               	movlw	41
  3083  00317A  6E05               	movwf	(??_toggle_light+1)^0,c
  3084  00317C  0E96               	movlw	150
  3085  00317E  6E04               	movwf	??_toggle_light^0,c
  3086  003180  0E7F               	movlw	127
  3087  003182                     u6607:
  3088  003182  2EE8               	decfsz	wreg,f,c
  3089  003184  D7FE               	bra	u6607
  3090  003186  2E04               	decfsz	??_toggle_light^0,f,c
  3091  003188  D7FC               	bra	u6607
  3092  00318A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3093  00318C  D7FA               	bra	u6607
  3094  00318E  F000               	nop	
  3095  003190                     
  3096                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  3097  003190  A67C               	btfss	124,3,c	;volatile
  3098  003192  EFCD  F018         	goto	u5011
  3099  003196  EFD1  F018         	goto	u5010
  3100  00319A                     u5011:
  3101  00319A  6A04               	clrf	??_toggle_light^0,c
  3102  00319C  2A04               	incf	??_toggle_light^0,f,c
  3103  00319E  EFD2  F018         	goto	u5028
  3104  0031A2                     u5010:
  3105  0031A2  6A04               	clrf	??_toggle_light^0,c
  3106  0031A4                     u5028:
  3107  0031A4  4604               	rlncf	??_toggle_light^0,f,c
  3108  0031A6  4604               	rlncf	??_toggle_light^0,f,c
  3109  0031A8  4604               	rlncf	??_toggle_light^0,f,c
  3110  0031AA  507C               	movf	124,w,c	;volatile
  3111  0031AC  1804               	xorwf	??_toggle_light^0,w,c
  3112  0031AE  0BF7               	andlw	-9
  3113  0031B0  1804               	xorwf	??_toggle_light^0,w,c
  3114  0031B2  6E7C               	movwf	124,c	;volatile
  3115                           
  3116                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3117  0031B4  0E29               	movlw	41
  3118  0031B6  6E05               	movwf	(??_toggle_light+1)^0,c
  3119  0031B8  0E96               	movlw	150
  3120  0031BA  6E04               	movwf	??_toggle_light^0,c
  3121  0031BC  0E7F               	movlw	127
  3122  0031BE                     u6617:
  3123  0031BE  2EE8               	decfsz	wreg,f,c
  3124  0031C0  D7FE               	bra	u6617
  3125  0031C2  2E04               	decfsz	??_toggle_light^0,f,c
  3126  0031C4  D7FC               	bra	u6617
  3127  0031C6  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3128  0031C8  D7FA               	bra	u6617
  3129  0031CA  F000               	nop	
  3130  0031CC                     l4826:
  3131                           
  3132                           ;color.c: 50:         if (lightnumber == 4){
  3133  0031CC  0E04               	movlw	4
  3134  0031CE  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3135  0031D0  A4D8               	btfss	status,2,c
  3136  0031D2  EFED  F018         	goto	u5031
  3137  0031D6  EFEF  F018         	goto	u5030
  3138  0031DA                     u5031:
  3139  0031DA  EF25  F019         	goto	l4834
  3140  0031DE                     u5030:
  3141  0031DE                     
  3142                           ;color.c: 51:             LATFbits.LATF0 = !LATFbits.LATF0;
  3143  0031DE  A07E               	btfss	126,0,c	;volatile
  3144  0031E0  EFF4  F018         	goto	u5041
  3145  0031E4  EFF8  F018         	goto	u5040
  3146  0031E8                     u5041:
  3147  0031E8  6A04               	clrf	??_toggle_light^0,c
  3148  0031EA  2A04               	incf	??_toggle_light^0,f,c
  3149  0031EC  EFF9  F018         	goto	u5058
  3150  0031F0                     u5040:
  3151  0031F0  6A04               	clrf	??_toggle_light^0,c
  3152  0031F2                     u5058:
  3153  0031F2  507E               	movf	126,w,c	;volatile
  3154  0031F4  1804               	xorwf	??_toggle_light^0,w,c
  3155  0031F6  0BFE               	andlw	-2
  3156  0031F8  1804               	xorwf	??_toggle_light^0,w,c
  3157  0031FA  6E7E               	movwf	126,c	;volatile
  3158  0031FC                     
  3159                           ;color.c: 52:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3160  0031FC  0E29               	movlw	41
  3161  0031FE  6E05               	movwf	(??_toggle_light+1)^0,c
  3162  003200  0E96               	movlw	150
  3163  003202  6E04               	movwf	??_toggle_light^0,c
  3164  003204  0E7F               	movlw	127
  3165  003206                     u6627:
  3166  003206  2EE8               	decfsz	wreg,f,c
  3167  003208  D7FE               	bra	u6627
  3168  00320A  2E04               	decfsz	??_toggle_light^0,f,c
  3169  00320C  D7FC               	bra	u6627
  3170  00320E  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3171  003210  D7FA               	bra	u6627
  3172  003212  F000               	nop	
  3173  003214                     
  3174                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  3175  003214  A07E               	btfss	126,0,c	;volatile
  3176  003216  EF0F  F019         	goto	u5061
  3177  00321A  EF13  F019         	goto	u5060
  3178  00321E                     u5061:
  3179  00321E  6A04               	clrf	??_toggle_light^0,c
  3180  003220  2A04               	incf	??_toggle_light^0,f,c
  3181  003222  EF14  F019         	goto	u5078
  3182  003226                     u5060:
  3183  003226  6A04               	clrf	??_toggle_light^0,c
  3184  003228                     u5078:
  3185  003228  507E               	movf	126,w,c	;volatile
  3186  00322A  1804               	xorwf	??_toggle_light^0,w,c
  3187  00322C  0BFE               	andlw	-2
  3188  00322E  1804               	xorwf	??_toggle_light^0,w,c
  3189  003230  6E7E               	movwf	126,c	;volatile
  3190                           
  3191                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3192  003232  0E29               	movlw	41
  3193  003234  6E05               	movwf	(??_toggle_light+1)^0,c
  3194  003236  0E96               	movlw	150
  3195  003238  6E04               	movwf	??_toggle_light^0,c
  3196  00323A  0E7F               	movlw	127
  3197  00323C                     u6637:
  3198  00323C  2EE8               	decfsz	wreg,f,c
  3199  00323E  D7FE               	bra	u6637
  3200  003240  2E04               	decfsz	??_toggle_light^0,f,c
  3201  003242  D7FC               	bra	u6637
  3202  003244  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3203  003246  D7FA               	bra	u6637
  3204  003248  F000               	nop	
  3205  00324A                     l4834:
  3206                           
  3207                           ;color.c: 56:         if (lightnumber == 3){
  3208  00324A  0E03               	movlw	3
  3209  00324C  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3210  00324E  A4D8               	btfss	status,2,c
  3211  003250  EF2C  F019         	goto	u5081
  3212  003254  EF2E  F019         	goto	u5080
  3213  003258                     u5081:
  3214  003258  EF64  F019         	goto	l4842
  3215  00325C                     u5080:
  3216  00325C                     
  3217                           ;color.c: 57:             LATHbits.LATH0 = !LATHbits.LATH0;
  3218  00325C  A080               	btfss	128,0,c	;volatile
  3219  00325E  EF33  F019         	goto	u5091
  3220  003262  EF37  F019         	goto	u5090
  3221  003266                     u5091:
  3222  003266  6A04               	clrf	??_toggle_light^0,c
  3223  003268  2A04               	incf	??_toggle_light^0,f,c
  3224  00326A  EF38  F019         	goto	u5108
  3225  00326E                     u5090:
  3226  00326E  6A04               	clrf	??_toggle_light^0,c
  3227  003270                     u5108:
  3228  003270  5080               	movf	128,w,c	;volatile
  3229  003272  1804               	xorwf	??_toggle_light^0,w,c
  3230  003274  0BFE               	andlw	-2
  3231  003276  1804               	xorwf	??_toggle_light^0,w,c
  3232  003278  6E80               	movwf	128,c	;volatile
  3233  00327A                     
  3234                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3235  00327A  0E29               	movlw	41
  3236  00327C  6E05               	movwf	(??_toggle_light+1)^0,c
  3237  00327E  0E96               	movlw	150
  3238  003280  6E04               	movwf	??_toggle_light^0,c
  3239  003282  0E7F               	movlw	127
  3240  003284                     u6647:
  3241  003284  2EE8               	decfsz	wreg,f,c
  3242  003286  D7FE               	bra	u6647
  3243  003288  2E04               	decfsz	??_toggle_light^0,f,c
  3244  00328A  D7FC               	bra	u6647
  3245  00328C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3246  00328E  D7FA               	bra	u6647
  3247  003290  F000               	nop	
  3248  003292                     
  3249                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  3250  003292  A080               	btfss	128,0,c	;volatile
  3251  003294  EF4E  F019         	goto	u5111
  3252  003298  EF52  F019         	goto	u5110
  3253  00329C                     u5111:
  3254  00329C  6A04               	clrf	??_toggle_light^0,c
  3255  00329E  2A04               	incf	??_toggle_light^0,f,c
  3256  0032A0  EF53  F019         	goto	u5128
  3257  0032A4                     u5110:
  3258  0032A4  6A04               	clrf	??_toggle_light^0,c
  3259  0032A6                     u5128:
  3260  0032A6  5080               	movf	128,w,c	;volatile
  3261  0032A8  1804               	xorwf	??_toggle_light^0,w,c
  3262  0032AA  0BFE               	andlw	-2
  3263  0032AC  1804               	xorwf	??_toggle_light^0,w,c
  3264  0032AE  6E80               	movwf	128,c	;volatile
  3265                           
  3266                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3267  0032B0  0E29               	movlw	41
  3268  0032B2  6E05               	movwf	(??_toggle_light+1)^0,c
  3269  0032B4  0E96               	movlw	150
  3270  0032B6  6E04               	movwf	??_toggle_light^0,c
  3271  0032B8  0E7F               	movlw	127
  3272  0032BA                     u6657:
  3273  0032BA  2EE8               	decfsz	wreg,f,c
  3274  0032BC  D7FE               	bra	u6657
  3275  0032BE  2E04               	decfsz	??_toggle_light^0,f,c
  3276  0032C0  D7FC               	bra	u6657
  3277  0032C2  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3278  0032C4  D7FA               	bra	u6657
  3279  0032C6  F000               	nop	
  3280  0032C8                     l4842:
  3281                           
  3282                           ;color.c: 62:     }
  3283  0032C8  2A06               	incf	toggle_light@i^0,f,c
  3284  0032CA                     l74:
  3285  0032CA  5003               	movf	toggle_light@toggletime^0,w,c
  3286  0032CC  5C06               	subwf	toggle_light@i^0,w,c
  3287  0032CE  A0D8               	btfss	status,0,c
  3288  0032D0  EF6C  F019         	goto	u5131
  3289  0032D4  EF6E  F019         	goto	u5130
  3290  0032D8                     u5131:
  3291  0032D8  EF20  F018         	goto	l4802
  3292  0032DC                     u5130:
  3293  0032DC  0012               	return		;funcret
  3294  0032DE                     __end_of_toggle_light:
  3295                           	callstack 0
  3296                           
  3297 ;; *************** function _short_burst *****************
  3298 ;; Defined at:
  3299 ;;		line 11 in file "movement.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  3302 ;;		 -> main@motorL(10), 
  3303 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  3304 ;;		 -> main@motorR(10), 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 5
  3323 ;; This function calls:
  3324 ;;		_fullSpeedAhead
  3325 ;;		_stop
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text5
  3332  004E8A                     __ptext5:
  3333                           	callstack 0
  3334  004E8A                     _short_burst:
  3335                           	callstack 25
  3336  004E8A                     
  3337                           ;movement.c: 11: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          12: {;movement.c: 13:     fullSpeedAhead(mL,mR);
  3338  004E8A  C022  F01C         	movff	short_burst@mL,fullSpeedAhead@mL
  3339  004E8E  C023  F01D         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  3340  004E92  C024  F01E         	movff	short_burst@mR,fullSpeedAhead@mR
  3341  004E96  C025  F01F         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  3342  004E9A  EC63  F026         	call	_fullSpeedAhead	;wreg free
  3343  004E9E                     
  3344                           ;movement.c: 14:     _delay((unsigned long)((300)*(64000000/4000.0)));
  3345  004E9E  0E19               	movlw	25
  3346  004EA0  6E27               	movwf	(??_short_burst+1)^0,c
  3347  004EA2  0E5A               	movlw	90
  3348  004EA4  6E26               	movwf	??_short_burst^0,c
  3349  004EA6  0EB2               	movlw	178
  3350  004EA8                     u6667:
  3351  004EA8  2EE8               	decfsz	wreg,f,c
  3352  004EAA  D7FE               	bra	u6667
  3353  004EAC  2E26               	decfsz	??_short_burst^0,f,c
  3354  004EAE  D7FC               	bra	u6667
  3355  004EB0  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3356  004EB2  D7FA               	bra	u6667
  3357  004EB4                     
  3358                           ;movement.c: 15:     stop(mL,mR);
  3359  004EB4  C022  F01C         	movff	short_burst@mL,stop@mL
  3360  004EB8  C023  F01D         	movff	short_burst@mL+1,stop@mL+1
  3361  004EBC  C024  F01E         	movff	short_burst@mR,stop@mR
  3362  004EC0  C025  F01F         	movff	short_burst@mR+1,stop@mR+1
  3363  004EC4  ECAF  F025         	call	_stop	;wreg free
  3364                           
  3365                           ;movement.c: 16:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3366  004EC8  0E29               	movlw	41
  3367  004ECA  6E27               	movwf	(??_short_burst+1)^0,c
  3368  004ECC  0E96               	movlw	150
  3369  004ECE  6E26               	movwf	??_short_burst^0,c
  3370  004ED0  0E7F               	movlw	127
  3371  004ED2                     u6677:
  3372  004ED2  2EE8               	decfsz	wreg,f,c
  3373  004ED4  D7FE               	bra	u6677
  3374  004ED6  2E26               	decfsz	??_short_burst^0,f,c
  3375  004ED8  D7FC               	bra	u6677
  3376  004EDA  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3377  004EDC  D7FA               	bra	u6677
  3378  004EDE  F000               	nop	
  3379  004EE0  0012               	return		;funcret
  3380  004EE2                     __end_of_short_burst:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _pin_init *****************
  3384 ;; Defined at:
  3385 ;;		line 91 in file "movement.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		None
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 2
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text6
  3414  005574                     __ptext6:
  3415                           	callstack 0
  3416  005574                     _pin_init:
  3417                           	callstack 28
  3418  005574  8486               	bsf	134,2,c	;volatile
  3419                           
  3420                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
  3421  005576  010E               	movlb	14	; () banked
  3422  005578  95B4               	bcf	180,2,b	;volatile
  3423                           
  3424                           ;movement.c: 94:     TRISFbits.TRISF3=1;
  3425  00557A  8686               	bsf	134,3,c	;volatile
  3426                           
  3427                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
  3428  00557C  97B4               	bcf	180,3,b	;volatile
  3429                           
  3430                           ;movement.c: 97:     TRISFbits.TRISF6 = 0;
  3431  00557E  9C86               	bcf	134,6,c	;volatile
  3432                           
  3433                           ;movement.c: 98:     LATFbits.LATF6 = 0;
  3434  005580  9C7E               	bcf	126,6,c	;volatile
  3435                           
  3436                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
  3437  005582  9287               	bcf	135,1,c	;volatile
  3438                           
  3439                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
  3440  005584  9E86               	bcf	134,7,c	;volatile
  3441                           
  3442                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
  3443  005586  9881               	bcf	129,4,c	;volatile
  3444                           
  3445                           ;movement.c: 103:     LATGbits.LATG1 = 1;
  3446  005588  827F               	bsf	127,1,c	;volatile
  3447                           
  3448                           ;movement.c: 104:     LATFbits.LATF7 = 1;
  3449  00558A  8E7E               	bsf	126,7,c	;volatile
  3450                           
  3451                           ;movement.c: 105:     LATAbits.LATA4 = 1;
  3452  00558C  8879               	bsf	121,4,c	;volatile
  3453  00558E                     
  3454                           ; BSR set to: 14
  3455  00558E  0012               	return		;funcret
  3456  005590                     __end_of_pin_init:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _initUSART4 *****************
  3460 ;; Defined at:
  3461 ;;		line 4 in file "serial.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 2
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text7
  3490  005538                     __ptext7:
  3491                           	callstack 0
  3492  005538                     _initUSART4:
  3493                           	callstack 28
  3494  005538                     
  3495                           ;serial.c: 8:     RC0PPS = 0x12;
  3496  005538  0E12               	movlw	18
  3497  00553A  010E               	movlb	14	; () banked
  3498  00553C  6F62               	movwf	98,b	;volatile
  3499                           
  3500                           ;serial.c: 9:     RX4PPS = 0x11;
  3501  00553E  0E11               	movlw	17
  3502  005540  6F15               	movwf	21,b	;volatile
  3503  005542                     
  3504                           ; BSR set to: 14
  3505                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3506  005542  97E9               	bcf	233,3,b	;volatile
  3507  005544                     
  3508                           ; BSR set to: 14
  3509                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3510  005544  95E8               	bcf	232,2,b	;volatile
  3511                           
  3512                           ;serial.c: 13:     SP4BRGL = 51;
  3513  005546  0E33               	movlw	51
  3514  005548  6FE5               	movwf	229,b	;volatile
  3515                           
  3516                           ;serial.c: 15:     SP4BRGH = 0;
  3517  00554A  0E00               	movlw	0
  3518  00554C  6FE6               	movwf	230,b	;volatile
  3519  00554E                     
  3520                           ; BSR set to: 14
  3521                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3522  00554E  89E7               	bsf	231,4,b	;volatile
  3523  005550                     
  3524                           ; BSR set to: 14
  3525                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3526  005550  8BE8               	bsf	232,5,b	;volatile
  3527  005552                     
  3528                           ; BSR set to: 14
  3529                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3530  005552  8FE7               	bsf	231,7,b	;volatile
  3531  005554                     
  3532                           ; BSR set to: 14
  3533  005554  0012               	return		;funcret
  3534  005556                     __end_of_initUSART4:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _initDCmotors_parameter *****************
  3538 ;; Defined at:
  3539 ;;		line 41 in file "dc_motor.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  motorL          2    2[COMRAM] PTR struct DC_motor
  3542 ;;		 -> main@motorL(10), 
  3543 ;;  motorR          2    4[COMRAM] PTR struct DC_motor
  3544 ;;		 -> main@motorR(10), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;Total ram usage:        4 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text8
  3571  004778                     __ptext8:
  3572                           	callstack 0
  3573  004778                     _initDCmotors_parameter:
  3574                           	callstack 28
  3575  004778                     
  3576                           ;dc_motor.c: 43:     motorL->power = 0;
  3577  004778  C003  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  3578  00477C  C004  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  3579  004780  0E00               	movlw	0
  3580  004782  6EDF               	movwf	indf2,c
  3581  004784                     
  3582                           ;dc_motor.c: 44:     motorL->direction = 1;
  3583  004784  EE20 F001          	lfsr	2,1
  3584  004788  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3585  00478A  26D9               	addwf	fsr2l,f,c
  3586  00478C  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3587  00478E  22DA               	addwfc	fsr2h,f,c
  3588  004790  0E01               	movlw	1
  3589  004792  6EDF               	movwf	indf2,c
  3590  004794                     
  3591                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  3592  004794  EE20 F002          	lfsr	2,2
  3593  004798  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3594  00479A  26D9               	addwf	fsr2l,f,c
  3595  00479C  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3596  00479E  22DA               	addwfc	fsr2h,f,c
  3597  0047A0  0EA3               	movlw	163
  3598  0047A2  6EDE               	movwf	postinc2,c
  3599  0047A4  0E0F               	movlw	15
  3600  0047A6  6EDD               	movwf	postdec2,c
  3601  0047A8                     
  3602                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  3603  0047A8  EE20 F004          	lfsr	2,4
  3604  0047AC  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3605  0047AE  26D9               	addwf	fsr2l,f,c
  3606  0047B0  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3607  0047B2  22DA               	addwfc	fsr2h,f,c
  3608  0047B4  0E7D               	movlw	125
  3609  0047B6  6EDE               	movwf	postinc2,c
  3610  0047B8  0E0F               	movlw	15
  3611  0047BA  6EDD               	movwf	postdec2,c
  3612  0047BC                     
  3613                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  3614  0047BC  EE20 F006          	lfsr	2,6
  3615  0047C0  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3616  0047C2  26D9               	addwf	fsr2l,f,c
  3617  0047C4  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3618  0047C6  22DA               	addwfc	fsr2h,f,c
  3619  0047C8  0E04               	movlw	4
  3620  0047CA  6EDF               	movwf	indf2,c
  3621  0047CC                     
  3622                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  3623  0047CC  EE20 F007          	lfsr	2,7
  3624  0047D0  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3625  0047D2  26D9               	addwf	fsr2l,f,c
  3626  0047D4  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3627  0047D6  22DA               	addwfc	fsr2h,f,c
  3628  0047D8  0EC7               	movlw	199
  3629  0047DA  6EDE               	movwf	postinc2,c
  3630  0047DC  0E00               	movlw	0
  3631  0047DE  6EDD               	movwf	postdec2,c
  3632  0047E0                     
  3633                           ;dc_motor.c: 51:     motorR->power = 0;
  3634  0047E0  C005  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  3635  0047E4  C006  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  3636  0047E8  0E00               	movlw	0
  3637  0047EA  6EDF               	movwf	indf2,c
  3638                           
  3639                           ;dc_motor.c: 52:     motorR->direction = 1;
  3640  0047EC  EE20 F001          	lfsr	2,1
  3641  0047F0  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3642  0047F2  26D9               	addwf	fsr2l,f,c
  3643  0047F4  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3644  0047F6  22DA               	addwfc	fsr2h,f,c
  3645  0047F8  0E01               	movlw	1
  3646  0047FA  6EDF               	movwf	indf2,c
  3647                           
  3648                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  3649  0047FC  EE20 F002          	lfsr	2,2
  3650  004800  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3651  004802  26D9               	addwf	fsr2l,f,c
  3652  004804  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3653  004806  22DA               	addwfc	fsr2h,f,c
  3654  004808  0EA0               	movlw	160
  3655  00480A  6EDE               	movwf	postinc2,c
  3656  00480C  0E0F               	movlw	15
  3657  00480E  6EDD               	movwf	postdec2,c
  3658                           
  3659                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  3660  004810  EE20 F004          	lfsr	2,4
  3661  004814  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3662  004816  26D9               	addwf	fsr2l,f,c
  3663  004818  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3664  00481A  22DA               	addwfc	fsr2h,f,c
  3665  00481C  0E7F               	movlw	127
  3666  00481E  6EDE               	movwf	postinc2,c
  3667  004820  0E0F               	movlw	15
  3668  004822  6EDD               	movwf	postdec2,c
  3669                           
  3670                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  3671  004824  EE20 F006          	lfsr	2,6
  3672  004828  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3673  00482A  26D9               	addwf	fsr2l,f,c
  3674  00482C  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3675  00482E  22DA               	addwfc	fsr2h,f,c
  3676  004830  0E06               	movlw	6
  3677  004832  6EDF               	movwf	indf2,c
  3678                           
  3679                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  3680  004834  EE20 F007          	lfsr	2,7
  3681  004838  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3682  00483A  26D9               	addwf	fsr2l,f,c
  3683  00483C  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3684  00483E  22DA               	addwfc	fsr2h,f,c
  3685  004840  0EC7               	movlw	199
  3686  004842  6EDE               	movwf	postinc2,c
  3687  004844  0E00               	movlw	0
  3688  004846  6EDD               	movwf	postdec2,c
  3689  004848  0012               	return		;funcret
  3690  00484A                     __end_of_initDCmotors_parameter:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _initDCmotorsPWM *****************
  3694 ;; Defined at:
  3695 ;;		line 11 in file "dc_motor.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  PWMperiod       2    2[COMRAM] int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 2
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text9
  3724  005144                     __ptext9:
  3725                           	callstack 0
  3726  005144                     _initDCmotorsPWM:
  3727                           	callstack 28
  3728  005144                     
  3729                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  3730  005144  9485               	bcf	133,2,c	;volatile
  3731                           
  3732                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  3733  005146  9E83               	bcf	131,7,c	;volatile
  3734                           
  3735                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  3736  005148  9C87               	bcf	135,6,c	;volatile
  3737                           
  3738                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  3739  00514A  9885               	bcf	133,4,c	;volatile
  3740                           
  3741                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  3742  00514C  947D               	bcf	125,2,c	;volatile
  3743                           
  3744                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  3745  00514E  9E7B               	bcf	123,7,c	;volatile
  3746                           
  3747                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  3748  005150  9C7F               	bcf	127,6,c	;volatile
  3749                           
  3750                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  3751  005152  987D               	bcf	125,4,c	;volatile
  3752  005154                     
  3753                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  3754  005154  50BD               	movf	189,w,c	;volatile
  3755  005156  0B8F               	andlw	-113
  3756  005158  0930               	iorlw	48
  3757  00515A  6EBD               	movwf	189,c	;volatile
  3758                           
  3759                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  3760  00515C  0EE0               	movlw	-32
  3761  00515E  16BE               	andwf	190,f,c	;volatile
  3762                           
  3763                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  3764  005160  50BF               	movf	191,w,c	;volatile
  3765  005162  0BF0               	andlw	-16
  3766  005164  0901               	iorlw	1
  3767  005166  6EBF               	movwf	191,c	;volatile
  3768                           
  3769                           ;dc_motor.c: 29:     T2PR=200-1;
  3770  005168  0EC7               	movlw	199
  3771  00516A  6EBC               	movwf	188,c	;volatile
  3772  00516C                     
  3773                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  3774  00516C  8EBD               	bsf	189,7,c	;volatile
  3775                           
  3776                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  3777  00516E  0E0A               	movlw	10
  3778  005170  010E               	movlb	14	; () banked
  3779  005172  6F74               	movwf	116,b	;volatile
  3780                           
  3781                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  3782  005174  0E0B               	movlw	11
  3783  005176  6F69               	movwf	105,b	;volatile
  3784                           
  3785                           ;dc_motor.c: 35:     PWM6DCH=0;
  3786  005178  0E00               	movlw	0
  3787  00517A  6EA3               	movwf	163,c	;volatile
  3788                           
  3789                           ;dc_motor.c: 36:     PWM7DCH=0;
  3790  00517C  0E00               	movlw	0
  3791  00517E  6EA0               	movwf	160,c	;volatile
  3792  005180                     
  3793                           ; BSR set to: 14
  3794                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  3795  005180  8EA4               	bsf	164,7,c	;volatile
  3796  005182                     
  3797                           ; BSR set to: 14
  3798                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  3799  005182  8EA1               	bsf	161,7,c	;volatile
  3800  005184                     
  3801                           ; BSR set to: 14
  3802  005184  0012               	return		;funcret
  3803  005186                     __end_of_initDCmotorsPWM:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _distance_measure *****************
  3807 ;; Defined at:
  3808 ;;		line 384 in file "color.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  3811 ;;		 -> main@motorL(10), 
  3812 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  3813 ;;		 -> main@motorR(10), 
  3814 ;;  w               2   30[BANK0 ] PTR struct white_card
  3815 ;;		 -> main@white(26), 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  CC_amb          2   40[BANK0 ] unsigned int 
  3818 ;;  threshold       2   34[BANK0 ] unsigned int 
  3819 ;;  CG_amb          2   32[BANK0 ] unsigned int 
  3820 ;;  stop            1   42[BANK0 ] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      unsigned char 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3830 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;Total ram usage:       19 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 6
  3837 ;; This function calls:
  3838 ;;		_LED_C
  3839 ;;		___fldiv
  3840 ;;		___flmul
  3841 ;;		___xxtofl
  3842 ;;		_color_read_Clear
  3843 ;;		_color_read_Green
  3844 ;;		_lroundf
  3845 ;; This function is called by:
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text10
  3851  00469A                     __ptext10:
  3852                           	callstack 0
  3853  00469A                     _distance_measure:
  3854                           	callstack 24
  3855  00469A  0E00               	movlw	0
  3856  00469C  0100               	movlb	0	; () banked
  3857  00469E  6F81               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  3858  0046A0  0E00               	movlw	0
  3859  0046A2  6F80               	movwf	distance_measure@CG_amb& (0+255),b
  3860                           
  3861                           ;color.c: 387:     unsigned char stop = 0;
  3862  0046A4  0E00               	movlw	0
  3863  0046A6  6F8A               	movwf	distance_measure@stop& (0+255),b
  3864                           
  3865                           ;color.c: 388:     unsigned int threshold = 0;
  3866  0046A8  0E00               	movlw	0
  3867  0046AA  6F83               	movwf	(distance_measure@threshold+1)& (0+255),b
  3868  0046AC  0E00               	movlw	0
  3869  0046AE  6F82               	movwf	distance_measure@threshold& (0+255),b
  3870  0046B0                     
  3871                           ; BSR set to: 0
  3872                           ;color.c: 389:     LED_C();
  3873  0046B0  EC6C  F02A         	call	_LED_C	;wreg free
  3874  0046B4                     
  3875                           ;color.c: 390:     CC_amb = color_read_Clear();
  3876  0046B4  ECEA  F027         	call	_color_read_Clear	;wreg free
  3877  0046B8  C007  F088         	movff	?_color_read_Clear,distance_measure@CC_amb
  3878  0046BC  C008  F089         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  3879  0046C0  ECC2  F027         	call	_color_read_Green	;wreg free
  3880  0046C4                     
  3881                           ;color.c: 392:     threshold = lroundf((float)(w->CC)/ 105 * 100);
  3882  0046C4  0E00               	movlw	0
  3883  0046C6  6E15               	movwf	___fldiv@a^0,c
  3884  0046C8  0E00               	movlw	0
  3885  0046CA  6E16               	movwf	(___fldiv@a+1)^0,c
  3886  0046CC  0ED2               	movlw	210
  3887  0046CE  6E17               	movwf	(___fldiv@a+2)^0,c
  3888  0046D0  0E42               	movlw	66
  3889  0046D2  6E18               	movwf	(___fldiv@a+3)^0,c
  3890  0046D4  0100               	movlb	0	; () banked
  3891  0046D6  EE20 F018          	lfsr	2,24
  3892  0046DA  517E               	movf	distance_measure@w& (0+255),w,b
  3893  0046DC  26D9               	addwf	fsr2l,f,c
  3894  0046DE  517F               	movf	(distance_measure@w+1)& (0+255),w,b
  3895  0046E0  22DA               	addwfc	fsr2h,f,c
  3896  0046E2  CFDE F051          	movff	postinc2,??_distance_measure
  3897  0046E6  CFDD F052          	movff	postdec2,??_distance_measure+1
  3898  0046EA  C051  F003         	movff	??_distance_measure,___xxtofl@val
  3899  0046EE  C052  F004         	movff	??_distance_measure+1,___xxtofl@val+1
  3900  0046F2  6A05               	clrf	(___xxtofl@val+2)^0,c
  3901  0046F4  6A06               	clrf	(___xxtofl@val+3)^0,c
  3902  0046F6  0E00               	movlw	0
  3903  0046F8  EC81  F01C         	call	___xxtofl
  3904  0046FC  C003  F011         	movff	?___xxtofl,___fldiv@b
  3905  004700  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  3906  004704  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  3907  004708  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  3908  00470C  EC58  F013         	call	___fldiv	;wreg free
  3909  004710  C011  F02A         	movff	?___fldiv,___flmul@b
  3910  004714  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  3911  004718  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  3912  00471C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  3913  004720  0E00               	movlw	0
  3914  004722  6E2E               	movwf	___flmul@a^0,c
  3915  004724  0E00               	movlw	0
  3916  004726  6E2F               	movwf	(___flmul@a+1)^0,c
  3917  004728  0EC8               	movlw	200
  3918  00472A  6E30               	movwf	(___flmul@a+2)^0,c
  3919  00472C  0E42               	movlw	66
  3920  00472E  6E31               	movwf	(___flmul@a+3)^0,c
  3921  004730  EC6A  F00F         	call	___flmul	;wreg free
  3922  004734  C02A  F084         	movff	?___flmul,_distance_measure$3060
  3923  004738  C02B  F085         	movff	?___flmul+1,_distance_measure$3060+1
  3924  00473C  C02C  F086         	movff	?___flmul+2,_distance_measure$3060+2
  3925  004740  C02D  F087         	movff	?___flmul+3,_distance_measure$3060+3
  3926  004744  C084  F076         	movff	_distance_measure$3060,lroundf@x
  3927  004748  C085  F077         	movff	_distance_measure$3060+1,lroundf@x+1
  3928  00474C  C086  F078         	movff	_distance_measure$3060+2,lroundf@x+2
  3929  004750  C087  F079         	movff	_distance_measure$3060+3,lroundf@x+3
  3930  004754  EC63  F029         	call	_lroundf	;wreg free
  3931  004758                     
  3932                           ;color.c: 393:     if (CC_amb >= 2500 ){stop = 1;}
  3933  004758  0EC4               	movlw	196
  3934  00475A  0100               	movlb	0	; () banked
  3935  00475C  5D88               	subwf	distance_measure@CC_amb& (0+255),w,b
  3936  00475E  0E09               	movlw	9
  3937  004760  5989               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  3938  004762  A0D8               	btfss	status,0,c
  3939  004764  EFB6  F023         	goto	u6461
  3940  004768  EFB8  F023         	goto	u6460
  3941  00476C                     u6461:
  3942  00476C  EFBA  F023         	goto	l180
  3943  004770                     u6460:
  3944  004770                     
  3945                           ; BSR set to: 0
  3946  004770  0E01               	movlw	1
  3947  004772  6F8A               	movwf	distance_measure@stop& (0+255),b
  3948  004774                     l180:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;color.c: 394:     return stop;
  3952  004774  518A               	movf	distance_measure@stop& (0+255),w,b
  3953  004776                     
  3954                           ; BSR set to: 0
  3955  004776  0012               	return		;funcret
  3956  004778                     __end_of_distance_measure:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _lroundf *****************
  3960 ;; Defined at:
  3961 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  x               4   22[BANK0 ] float 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  4   22[BANK0 ] long 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 5
  3982 ;; This function calls:
  3983 ;;		___fltol
  3984 ;;		_roundf
  3985 ;; This function is called by:
  3986 ;;		_detect_color
  3987 ;;		_distance_measure
  3988 ;;		_check_color_reading
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text11
  3993  0052C6                     __ptext11:
  3994                           	callstack 0
  3995  0052C6                     _lroundf:
  3996                           	callstack 23
  3997  0052C6  C076  F043         	movff	lroundf@x,roundf@x
  3998  0052CA  C077  F044         	movff	lroundf@x+1,roundf@x+1
  3999  0052CE  C078  F045         	movff	lroundf@x+2,roundf@x+2
  4000  0052D2  C079  F046         	movff	lroundf@x+3,roundf@x+3
  4001  0052D6  EC7F  F011         	call	_roundf	;wreg free
  4002  0052DA  C043  F072         	movff	?_roundf,___fltol@f1
  4003  0052DE  C044  F073         	movff	?_roundf+1,___fltol@f1+1
  4004  0052E2  C045  F074         	movff	?_roundf+2,___fltol@f1+2
  4005  0052E6  C046  F075         	movff	?_roundf+3,___fltol@f1+3
  4006  0052EA  EC47  F022         	call	___fltol	;wreg free
  4007  0052EE  C072  F076         	movff	?___fltol,?_lroundf
  4008  0052F2  C073  F077         	movff	?___fltol+1,?_lroundf+1
  4009  0052F6  C074  F078         	movff	?___fltol+2,?_lroundf+2
  4010  0052FA  C075  F079         	movff	?___fltol+3,?_lroundf+3
  4011  0052FE  0012               	return		;funcret
  4012  005300                     __end_of_lroundf:
  4013                           	callstack 0
  4014                           
  4015 ;; *************** function _roundf *****************
  4016 ;; Defined at:
  4017 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  x               4   66[COMRAM] float 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  y               4   14[BANK0 ] float 
  4022 ;;  u               4   10[BANK0 ] struct .
  4023 ;;  e               2    4[BANK0 ] int 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  4   66[COMRAM] float 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;Total ram usage:       26 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 4
  4040 ;; This function calls:
  4041 ;;		___fladd
  4042 ;;		___flge
  4043 ;;		___flmul
  4044 ;;		___flneg
  4045 ;;		___flsub
  4046 ;; This function is called by:
  4047 ;;		_lroundf
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text12
  4052  0022FE                     __ptext12:
  4053                           	callstack 0
  4054  0022FE                     _roundf:
  4055                           	callstack 23
  4056  0022FE  C18C  F06A         	movff	roundf@F527,roundf@u
  4057  002302  C18D  F06B         	movff	roundf@F527+1,roundf@u+1
  4058  002306  C18E  F06C         	movff	roundf@F527+2,roundf@u+2
  4059  00230A  C18F  F06D         	movff	roundf@F527+3,roundf@u+3
  4060  00230E  C043  F06A         	movff	roundf@x,roundf@u
  4061  002312  C044  F06B         	movff	roundf@x+1,roundf@u+1
  4062  002316  C045  F06C         	movff	roundf@x+2,roundf@u+2
  4063  00231A  C046  F06D         	movff	roundf@x+3,roundf@u+3
  4064  00231E  C06A  F047         	movff	roundf@u,??_roundf
  4065  002322  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4066  002326  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4067  00232A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4068  00232E  0E18               	movlw	24
  4069  002330  EF9F  F011         	goto	u6150
  4070  002334                     u6155:
  4071  002334  90D8               	bcf	status,0,c
  4072  002336  324A               	rrcf	(??_roundf+3)^0,f,c
  4073  002338  3249               	rrcf	(??_roundf+2)^0,f,c
  4074  00233A  3248               	rrcf	(??_roundf+1)^0,f,c
  4075  00233C  3247               	rrcf	??_roundf^0,f,c
  4076  00233E                     u6150:
  4077  00233E  2EE8               	decfsz	wreg,f,c
  4078  002340  EF9A  F011         	goto	u6155
  4079  002344  5047               	movf	??_roundf^0,w,c
  4080  002346  0100               	movlb	0	; () banked
  4081  002348  6F64               	movwf	roundf@e& (0+255),b
  4082  00234A  6B65               	clrf	(roundf@e+1)& (0+255),b
  4083  00234C  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4084  00234E  EFB2  F011         	goto	u6161
  4085  002352  5165               	movf	(roundf@e+1)& (0+255),w,b
  4086  002354  E109               	bnz	u6160
  4087  002356  0E96               	movlw	150
  4088  002358  5D64               	subwf	roundf@e& (0+255),w,b
  4089  00235A  A0D8               	btfss	status,0,c
  4090  00235C  EFB2  F011         	goto	u6161
  4091  002360  EFB4  F011         	goto	u6160
  4092  002364                     u6161:
  4093  002364  EFBE  F011         	goto	l5720
  4094  002368                     u6160:
  4095  002368                     
  4096                           ; BSR set to: 0
  4097  002368  C043  F043         	movff	roundf@x,?_roundf
  4098  00236C  C044  F044         	movff	roundf@x+1,?_roundf+1
  4099  002370  C045  F045         	movff	roundf@x+2,?_roundf+2
  4100  002374  C046  F046         	movff	roundf@x+3,?_roundf+3
  4101  002378  EF57  F013         	goto	l1495
  4102  00237C                     l5720:
  4103                           
  4104                           ; BSR set to: 0
  4105  00237C  C06A  F047         	movff	roundf@u,??_roundf
  4106  002380  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4107  002384  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4108  002388  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4109  00238C  0E20               	movlw	32
  4110  00238E  EFCE  F011         	goto	u6170
  4111  002392                     u6175:
  4112  002392  90D8               	bcf	status,0,c
  4113  002394  324A               	rrcf	(??_roundf+3)^0,f,c
  4114  002396  3249               	rrcf	(??_roundf+2)^0,f,c
  4115  002398  3248               	rrcf	(??_roundf+1)^0,f,c
  4116  00239A  3247               	rrcf	??_roundf^0,f,c
  4117  00239C                     u6170:
  4118  00239C  2EE8               	decfsz	wreg,f,c
  4119  00239E  EFC9  F011         	goto	u6175
  4120  0023A2  5047               	movf	??_roundf^0,w,c
  4121  0023A4  1048               	iorwf	(??_roundf+1)^0,w,c
  4122  0023A6  1049               	iorwf	(??_roundf+2)^0,w,c
  4123  0023A8  104A               	iorwf	(??_roundf+3)^0,w,c
  4124  0023AA  B4D8               	btfsc	status,2,c
  4125  0023AC  EFDA  F011         	goto	u6181
  4126  0023B0  EFDC  F011         	goto	u6180
  4127  0023B4                     u6181:
  4128  0023B4  EFEE  F011         	goto	l5724
  4129  0023B8                     u6180:
  4130  0023B8                     
  4131                           ; BSR set to: 0
  4132  0023B8  C043  F003         	movff	roundf@x,___flneg@f1
  4133  0023BC  C044  F004         	movff	roundf@x+1,___flneg@f1+1
  4134  0023C0  C045  F005         	movff	roundf@x+2,___flneg@f1+2
  4135  0023C4  C046  F006         	movff	roundf@x+3,___flneg@f1+3
  4136  0023C8  EC80  F029         	call	___flneg	;wreg free
  4137  0023CC  C003  F043         	movff	?___flneg,roundf@x
  4138  0023D0  C004  F044         	movff	?___flneg+1,roundf@x+1
  4139  0023D4  C005  F045         	movff	?___flneg+2,roundf@x+2
  4140  0023D8  C006  F046         	movff	?___flneg+3,roundf@x+3
  4141  0023DC                     l5724:
  4142  0023DC  0100               	movlb	0	; () banked
  4143  0023DE  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4144  0023E0  EFFD  F011         	goto	u6190
  4145  0023E4  5165               	movf	(roundf@e+1)& (0+255),w,b
  4146  0023E6  E107               	bnz	u6191
  4147  0023E8  0E7E               	movlw	126
  4148  0023EA  5D64               	subwf	roundf@e& (0+255),w,b
  4149  0023EC  B0D8               	btfsc	status,0,c
  4150  0023EE  EFFB  F011         	goto	u6191
  4151  0023F2  EFFD  F011         	goto	u6190
  4152  0023F6                     u6191:
  4153  0023F6  EF19  F012         	goto	l5730
  4154  0023FA                     u6190:
  4155  0023FA                     
  4156                           ; BSR set to: 0
  4157  0023FA  C06A  F02A         	movff	roundf@u,___flmul@b
  4158  0023FE  C06B  F02B         	movff	roundf@u+1,___flmul@b+1
  4159  002402  C06C  F02C         	movff	roundf@u+2,___flmul@b+2
  4160  002406  C06D  F02D         	movff	roundf@u+3,___flmul@b+3
  4161  00240A  0E00               	movlw	0
  4162  00240C  6E2E               	movwf	___flmul@a^0,c
  4163  00240E  0E00               	movlw	0
  4164  002410  6E2F               	movwf	(___flmul@a+1)^0,c
  4165  002412  0E00               	movlw	0
  4166  002414  6E30               	movwf	(___flmul@a+2)^0,c
  4167  002416  0E00               	movlw	0
  4168  002418  6E31               	movwf	(___flmul@a+3)^0,c
  4169  00241A  EC6A  F00F         	call	___flmul	;wreg free
  4170  00241E  C02A  F043         	movff	?___flmul,?_roundf
  4171  002422  C02B  F044         	movff	?___flmul+1,?_roundf+1
  4172  002426  C02C  F045         	movff	?___flmul+2,?_roundf+2
  4173  00242A  C02D  F046         	movff	?___flmul+3,?_roundf+3
  4174  00242E  EF57  F013         	goto	l1495
  4175  002432                     l5730:
  4176                           
  4177                           ; BSR set to: 0
  4178  002432  0E00               	movlw	0
  4179  002434  6E07               	movwf	___fladd@a^0,c
  4180  002436  0E00               	movlw	0
  4181  002438  6E08               	movwf	(___fladd@a+1)^0,c
  4182  00243A  0E00               	movlw	0
  4183  00243C  6E09               	movwf	(___fladd@a+2)^0,c
  4184  00243E  0E4B               	movlw	75
  4185  002440  6E0A               	movwf	(___fladd@a+3)^0,c
  4186  002442  C043  F003         	movff	roundf@x,___fladd@b
  4187  002446  C044  F004         	movff	roundf@x+1,___fladd@b+1
  4188  00244A  C045  F005         	movff	roundf@x+2,___fladd@b+2
  4189  00244E  C046  F006         	movff	roundf@x+3,___fladd@b+3
  4190  002452  EC0A  F00D         	call	___fladd	;wreg free
  4191  002456  C003  F066         	movff	?___fladd,_roundf$3061
  4192  00245A  C004  F067         	movff	?___fladd+1,_roundf$3061+1
  4193  00245E  C005  F068         	movff	?___fladd+2,_roundf$3061+2
  4194  002462  C006  F069         	movff	?___fladd+3,_roundf$3061+3
  4195  002466  0E00               	movlw	0
  4196  002468  6E07               	movwf	___fladd@a^0,c
  4197  00246A  0E00               	movlw	0
  4198  00246C  6E08               	movwf	(___fladd@a+1)^0,c
  4199  00246E  0E00               	movlw	0
  4200  002470  6E09               	movwf	(___fladd@a+2)^0,c
  4201  002472  0ECB               	movlw	203
  4202  002474  6E0A               	movwf	(___fladd@a+3)^0,c
  4203  002476  C066  F003         	movff	_roundf$3061,___fladd@b
  4204  00247A  C067  F004         	movff	_roundf$3061+1,___fladd@b+1
  4205  00247E  C068  F005         	movff	_roundf$3061+2,___fladd@b+2
  4206  002482  C069  F006         	movff	_roundf$3061+3,___fladd@b+3
  4207  002486  EC0A  F00D         	call	___fladd	;wreg free
  4208  00248A  C003  F060         	movff	?___fladd,_roundf$3062
  4209  00248E  C004  F061         	movff	?___fladd+1,_roundf$3062+1
  4210  002492  C005  F062         	movff	?___fladd+2,_roundf$3062+2
  4211  002496  C006  F063         	movff	?___fladd+3,_roundf$3062+3
  4212  00249A  C060  F013         	movff	_roundf$3062,___flsub@b
  4213  00249E  C061  F014         	movff	_roundf$3062+1,___flsub@b+1
  4214  0024A2  C062  F015         	movff	_roundf$3062+2,___flsub@b+2
  4215  0024A6  C063  F016         	movff	_roundf$3062+3,___flsub@b+3
  4216  0024AA  C043  F017         	movff	roundf@x,___flsub@a
  4217  0024AE  C044  F018         	movff	roundf@x+1,___flsub@a+1
  4218  0024B2  C045  F019         	movff	roundf@x+2,___flsub@a+2
  4219  0024B6  C046  F01A         	movff	roundf@x+3,___flsub@a+3
  4220  0024BA  EC5D  F028         	call	___flsub	;wreg free
  4221  0024BE  C013  F06E         	movff	?___flsub,roundf@y
  4222  0024C2  C014  F06F         	movff	?___flsub+1,roundf@y+1
  4223  0024C6  C015  F070         	movff	?___flsub+2,roundf@y+2
  4224  0024CA  C016  F071         	movff	?___flsub+3,roundf@y+3
  4225  0024CE  0E00               	movlw	0
  4226  0024D0  6E03               	movwf	___flge@ff1^0,c
  4227  0024D2  0E00               	movlw	0
  4228  0024D4  6E04               	movwf	(___flge@ff1+1)^0,c
  4229  0024D6  0E00               	movlw	0
  4230  0024D8  6E05               	movwf	(___flge@ff1+2)^0,c
  4231  0024DA  0E3F               	movlw	63
  4232  0024DC  6E06               	movwf	(___flge@ff1+3)^0,c
  4233  0024DE  C06E  F007         	movff	roundf@y,___flge@ff2
  4234  0024E2  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  4235  0024E6  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  4236  0024EA  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  4237  0024EE  ECCB  F022         	call	___flge	;wreg free
  4238  0024F2  B0D8               	btfsc	status,0,c
  4239  0024F4  EF7E  F012         	goto	u6201
  4240  0024F8  EF80  F012         	goto	u6200
  4241  0024FC                     u6201:
  4242  0024FC  EFB6  F012         	goto	l5734
  4243  002500                     u6200:
  4244  002500  C043  F007         	movff	roundf@x,___fladd@a
  4245  002504  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4246  002508  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4247  00250C  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4248  002510  C06E  F003         	movff	roundf@y,___fladd@b
  4249  002514  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4250  002518  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4251  00251C  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4252  002520  EC0A  F00D         	call	___fladd	;wreg free
  4253  002524  C003  F066         	movff	?___fladd,_roundf$3061
  4254  002528  C004  F067         	movff	?___fladd+1,_roundf$3061+1
  4255  00252C  C005  F068         	movff	?___fladd+2,_roundf$3061+2
  4256  002530  C006  F069         	movff	?___fladd+3,_roundf$3061+3
  4257  002534  C066  F003         	movff	_roundf$3061,___fladd@b
  4258  002538  C067  F004         	movff	_roundf$3061+1,___fladd@b+1
  4259  00253C  C068  F005         	movff	_roundf$3061+2,___fladd@b+2
  4260  002540  C069  F006         	movff	_roundf$3061+3,___fladd@b+3
  4261  002544  0E00               	movlw	0
  4262  002546  6E07               	movwf	___fladd@a^0,c
  4263  002548  0E00               	movlw	0
  4264  00254A  6E08               	movwf	(___fladd@a+1)^0,c
  4265  00254C  0E80               	movlw	128
  4266  00254E  6E09               	movwf	(___fladd@a+2)^0,c
  4267  002550  0EBF               	movlw	191
  4268  002552  6E0A               	movwf	(___fladd@a+3)^0,c
  4269  002554  EC0A  F00D         	call	___fladd	;wreg free
  4270  002558  C003  F06E         	movff	?___fladd,roundf@y
  4271  00255C  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4272  002560  C005  F070         	movff	?___fladd+2,roundf@y+2
  4273  002564  C006  F071         	movff	?___fladd+3,roundf@y+3
  4274  002568  EF1F  F013         	goto	l5740
  4275  00256C                     l5734:
  4276  00256C  0E00               	movlw	0
  4277  00256E  6E03               	movwf	___flge@ff1^0,c
  4278  002570  0E00               	movlw	0
  4279  002572  6E04               	movwf	(___flge@ff1+1)^0,c
  4280  002574  0E00               	movlw	0
  4281  002576  6E05               	movwf	(___flge@ff1+2)^0,c
  4282  002578  0EBF               	movlw	191
  4283  00257A  6E06               	movwf	(___flge@ff1+3)^0,c
  4284  00257C  C06E  F007         	movff	roundf@y,___flge@ff2
  4285  002580  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  4286  002584  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  4287  002588  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  4288  00258C  ECCB  F022         	call	___flge	;wreg free
  4289  002590  A0D8               	btfss	status,0,c
  4290  002592  EFCD  F012         	goto	u6211
  4291  002596  EFCF  F012         	goto	u6210
  4292  00259A                     u6211:
  4293  00259A  EF05  F013         	goto	l5738
  4294  00259E                     u6210:
  4295  00259E  C043  F007         	movff	roundf@x,___fladd@a
  4296  0025A2  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4297  0025A6  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4298  0025AA  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4299  0025AE  C06E  F003         	movff	roundf@y,___fladd@b
  4300  0025B2  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4301  0025B6  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4302  0025BA  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4303  0025BE  EC0A  F00D         	call	___fladd	;wreg free
  4304  0025C2  C003  F066         	movff	?___fladd,_roundf$3061
  4305  0025C6  C004  F067         	movff	?___fladd+1,_roundf$3061+1
  4306  0025CA  C005  F068         	movff	?___fladd+2,_roundf$3061+2
  4307  0025CE  C006  F069         	movff	?___fladd+3,_roundf$3061+3
  4308  0025D2  C066  F003         	movff	_roundf$3061,___fladd@b
  4309  0025D6  C067  F004         	movff	_roundf$3061+1,___fladd@b+1
  4310  0025DA  C068  F005         	movff	_roundf$3061+2,___fladd@b+2
  4311  0025DE  C069  F006         	movff	_roundf$3061+3,___fladd@b+3
  4312  0025E2  0E00               	movlw	0
  4313  0025E4  6E07               	movwf	___fladd@a^0,c
  4314  0025E6  0E00               	movlw	0
  4315  0025E8  6E08               	movwf	(___fladd@a+1)^0,c
  4316  0025EA  0E80               	movlw	128
  4317  0025EC  6E09               	movwf	(___fladd@a+2)^0,c
  4318  0025EE  0E3F               	movlw	63
  4319  0025F0  6E0A               	movwf	(___fladd@a+3)^0,c
  4320  0025F2  EC0A  F00D         	call	___fladd	;wreg free
  4321  0025F6  C003  F06E         	movff	?___fladd,roundf@y
  4322  0025FA  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4323  0025FE  C005  F070         	movff	?___fladd+2,roundf@y+2
  4324  002602  C006  F071         	movff	?___fladd+3,roundf@y+3
  4325  002606  EF1F  F013         	goto	l5740
  4326  00260A                     l5738:
  4327  00260A  C06E  F003         	movff	roundf@y,___fladd@b
  4328  00260E  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4329  002612  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4330  002616  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4331  00261A  C043  F007         	movff	roundf@x,___fladd@a
  4332  00261E  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4333  002622  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4334  002626  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4335  00262A  EC0A  F00D         	call	___fladd	;wreg free
  4336  00262E  C003  F06E         	movff	?___fladd,roundf@y
  4337  002632  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4338  002636  C005  F070         	movff	?___fladd+2,roundf@y+2
  4339  00263A  C006  F071         	movff	?___fladd+3,roundf@y+3
  4340  00263E                     l5740:
  4341  00263E  C06A  F047         	movff	roundf@u,??_roundf
  4342  002642  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4343  002646  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4344  00264A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4345  00264E  0E20               	movlw	32
  4346  002650  EF2F  F013         	goto	u6220
  4347  002654                     u6225:
  4348  002654  90D8               	bcf	status,0,c
  4349  002656  324A               	rrcf	(??_roundf+3)^0,f,c
  4350  002658  3249               	rrcf	(??_roundf+2)^0,f,c
  4351  00265A  3248               	rrcf	(??_roundf+1)^0,f,c
  4352  00265C  3247               	rrcf	??_roundf^0,f,c
  4353  00265E                     u6220:
  4354  00265E  2EE8               	decfsz	wreg,f,c
  4355  002660  EF2A  F013         	goto	u6225
  4356  002664  5047               	movf	??_roundf^0,w,c
  4357  002666  1048               	iorwf	(??_roundf+1)^0,w,c
  4358  002668  1049               	iorwf	(??_roundf+2)^0,w,c
  4359  00266A  104A               	iorwf	(??_roundf+3)^0,w,c
  4360  00266C  B4D8               	btfsc	status,2,c
  4361  00266E  EF3B  F013         	goto	u6231
  4362  002672  EF3D  F013         	goto	u6230
  4363  002676                     u6231:
  4364  002676  EF4F  F013         	goto	l5744
  4365  00267A                     u6230:
  4366  00267A  C06E  F003         	movff	roundf@y,___flneg@f1
  4367  00267E  C06F  F004         	movff	roundf@y+1,___flneg@f1+1
  4368  002682  C070  F005         	movff	roundf@y+2,___flneg@f1+2
  4369  002686  C071  F006         	movff	roundf@y+3,___flneg@f1+3
  4370  00268A  EC80  F029         	call	___flneg	;wreg free
  4371  00268E  C003  F06E         	movff	?___flneg,roundf@y
  4372  002692  C004  F06F         	movff	?___flneg+1,roundf@y+1
  4373  002696  C005  F070         	movff	?___flneg+2,roundf@y+2
  4374  00269A  C006  F071         	movff	?___flneg+3,roundf@y+3
  4375  00269E                     l5744:
  4376  00269E  C06E  F043         	movff	roundf@y,?_roundf
  4377  0026A2  C06F  F044         	movff	roundf@y+1,?_roundf+1
  4378  0026A6  C070  F045         	movff	roundf@y+2,?_roundf+2
  4379  0026AA  C071  F046         	movff	roundf@y+3,?_roundf+3
  4380  0026AE                     l1495:
  4381  0026AE  0012               	return		;funcret
  4382  0026B0                     __end_of_roundf:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function ___flsub *****************
  4386 ;; Defined at:
  4387 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  b               4   18[COMRAM] float 
  4390 ;;  a               4   22[COMRAM] float 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4   18[COMRAM] float 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;Total ram usage:        8 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 3
  4409 ;; This function calls:
  4410 ;;		___fladd
  4411 ;; This function is called by:
  4412 ;;		_roundf
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text13
  4417  0050BA                     __ptext13:
  4418                           	callstack 0
  4419  0050BA                     ___flsub:
  4420                           	callstack 23
  4421  0050BA  0E00               	movlw	0
  4422  0050BC  1A17               	xorwf	___flsub@a^0,f,c
  4423  0050BE  0E00               	movlw	0
  4424  0050C0  1A18               	xorwf	(___flsub@a+1)^0,f,c
  4425  0050C2  0E00               	movlw	0
  4426  0050C4  1A19               	xorwf	(___flsub@a+2)^0,f,c
  4427  0050C6  0E80               	movlw	128
  4428  0050C8  1A1A               	xorwf	(___flsub@a+3)^0,f,c
  4429  0050CA  C013  F003         	movff	___flsub@b,___fladd@b
  4430  0050CE  C014  F004         	movff	___flsub@b+1,___fladd@b+1
  4431  0050D2  C015  F005         	movff	___flsub@b+2,___fladd@b+2
  4432  0050D6  C016  F006         	movff	___flsub@b+3,___fladd@b+3
  4433  0050DA  C017  F007         	movff	___flsub@a,___fladd@a
  4434  0050DE  C018  F008         	movff	___flsub@a+1,___fladd@a+1
  4435  0050E2  C019  F009         	movff	___flsub@a+2,___fladd@a+2
  4436  0050E6  C01A  F00A         	movff	___flsub@a+3,___fladd@a+3
  4437  0050EA  EC0A  F00D         	call	___fladd	;wreg free
  4438  0050EE  C003  F013         	movff	?___fladd,?___flsub
  4439  0050F2  C004  F014         	movff	?___fladd+1,?___flsub+1
  4440  0050F6  C005  F015         	movff	?___fladd+2,?___flsub+2
  4441  0050FA  C006  F016         	movff	?___fladd+3,?___flsub+3
  4442  0050FE  0012               	return		;funcret
  4443  005100                     __end_of___flsub:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function ___fladd *****************
  4447 ;; Defined at:
  4448 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  b               4    2[COMRAM] float 
  4451 ;;  a               4    6[COMRAM] float 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  grs             1   17[COMRAM] unsigned char 
  4454 ;;  bexp            1   16[COMRAM] unsigned char 
  4455 ;;  aexp            1   15[COMRAM] unsigned char 
  4456 ;;  signs           1   14[COMRAM] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  4    2[COMRAM] unsigned char 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;Total ram usage:       16 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 2
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		___flsub
  4477 ;;		_roundf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text14
  4482  001A14                     __ptext14:
  4483                           	callstack 0
  4484  001A14                     ___fladd:
  4485                           	callstack 23
  4486  001A14  5006               	movf	(___fladd@b+3)^0,w,c
  4487  001A16  0B80               	andlw	128
  4488  001A18  6E0F               	movwf	___fladd@signs^0,c
  4489  001A1A  5006               	movf	(___fladd@b+3)^0,w,c
  4490  001A1C  2406               	addwf	(___fladd@b+3)^0,w,c
  4491  001A1E  6E11               	movwf	___fladd@bexp^0,c
  4492  001A20  AE05               	btfss	(___fladd@b+2)^0,7,c
  4493  001A22  EF15  F00D         	goto	u5441
  4494  001A26  EF17  F00D         	goto	u5440
  4495  001A2A                     u5441:
  4496  001A2A  EF18  F00D         	goto	l5308
  4497  001A2E                     u5440:
  4498  001A2E  8011               	bsf	___fladd@bexp^0,0,c
  4499  001A30                     l5308:
  4500  001A30  5011               	movf	___fladd@bexp^0,w,c
  4501  001A32  B4D8               	btfsc	status,2,c
  4502  001A34  EF1E  F00D         	goto	u5451
  4503  001A38  EF20  F00D         	goto	u5450
  4504  001A3C                     u5451:
  4505  001A3C  EF35  F00D         	goto	l5318
  4506  001A40                     u5450:
  4507  001A40  2811               	incf	___fladd@bexp^0,w,c
  4508  001A42  A4D8               	btfss	status,2,c
  4509  001A44  EF26  F00D         	goto	u5461
  4510  001A48  EF28  F00D         	goto	u5460
  4511  001A4C                     u5461:
  4512  001A4C  EF30  F00D         	goto	l5314
  4513  001A50                     u5460:
  4514  001A50  0E00               	movlw	0
  4515  001A52  6E03               	movwf	___fladd@b^0,c
  4516  001A54  0E00               	movlw	0
  4517  001A56  6E04               	movwf	(___fladd@b+1)^0,c
  4518  001A58  0E00               	movlw	0
  4519  001A5A  6E05               	movwf	(___fladd@b+2)^0,c
  4520  001A5C  0E00               	movlw	0
  4521  001A5E  6E06               	movwf	(___fladd@b+3)^0,c
  4522  001A60                     l5314:
  4523  001A60  8E05               	bsf	(___fladd@b+2)^0,7,c
  4524  001A62  0E00               	movlw	0
  4525  001A64  6E06               	movwf	(___fladd@b+3)^0,c
  4526  001A66  EF3D  F00D         	goto	l5320
  4527  001A6A                     l5318:
  4528  001A6A  0E00               	movlw	0
  4529  001A6C  6E03               	movwf	___fladd@b^0,c
  4530  001A6E  0E00               	movlw	0
  4531  001A70  6E04               	movwf	(___fladd@b+1)^0,c
  4532  001A72  0E00               	movlw	0
  4533  001A74  6E05               	movwf	(___fladd@b+2)^0,c
  4534  001A76  0E00               	movlw	0
  4535  001A78  6E06               	movwf	(___fladd@b+3)^0,c
  4536  001A7A                     l5320:
  4537  001A7A  500A               	movf	(___fladd@a+3)^0,w,c
  4538  001A7C  0B80               	andlw	128
  4539  001A7E  6E10               	movwf	___fladd@aexp^0,c
  4540  001A80  500F               	movf	___fladd@signs^0,w,c
  4541  001A82  1810               	xorwf	___fladd@aexp^0,w,c
  4542  001A84  B4D8               	btfsc	status,2,c
  4543  001A86  EF47  F00D         	goto	u5471
  4544  001A8A  EF49  F00D         	goto	u5470
  4545  001A8E                     u5471:
  4546  001A8E  EF4A  F00D         	goto	l5326
  4547  001A92                     u5470:
  4548  001A92  8C0F               	bsf	___fladd@signs^0,6,c
  4549  001A94                     l5326:
  4550  001A94  500A               	movf	(___fladd@a+3)^0,w,c
  4551  001A96  240A               	addwf	(___fladd@a+3)^0,w,c
  4552  001A98  6E10               	movwf	___fladd@aexp^0,c
  4553  001A9A  AE09               	btfss	(___fladd@a+2)^0,7,c
  4554  001A9C  EF52  F00D         	goto	u5481
  4555  001AA0  EF54  F00D         	goto	u5480
  4556  001AA4                     u5481:
  4557  001AA4  EF55  F00D         	goto	l5332
  4558  001AA8                     u5480:
  4559  001AA8  8010               	bsf	___fladd@aexp^0,0,c
  4560  001AAA                     l5332:
  4561  001AAA  5010               	movf	___fladd@aexp^0,w,c
  4562  001AAC  B4D8               	btfsc	status,2,c
  4563  001AAE  EF5B  F00D         	goto	u5491
  4564  001AB2  EF5D  F00D         	goto	u5490
  4565  001AB6                     u5491:
  4566  001AB6  EF72  F00D         	goto	l5342
  4567  001ABA                     u5490:
  4568  001ABA  2810               	incf	___fladd@aexp^0,w,c
  4569  001ABC  A4D8               	btfss	status,2,c
  4570  001ABE  EF63  F00D         	goto	u5501
  4571  001AC2  EF65  F00D         	goto	u5500
  4572  001AC6                     u5501:
  4573  001AC6  EF6D  F00D         	goto	l5338
  4574  001ACA                     u5500:
  4575  001ACA  0E00               	movlw	0
  4576  001ACC  6E07               	movwf	___fladd@a^0,c
  4577  001ACE  0E00               	movlw	0
  4578  001AD0  6E08               	movwf	(___fladd@a+1)^0,c
  4579  001AD2  0E00               	movlw	0
  4580  001AD4  6E09               	movwf	(___fladd@a+2)^0,c
  4581  001AD6  0E00               	movlw	0
  4582  001AD8  6E0A               	movwf	(___fladd@a+3)^0,c
  4583  001ADA                     l5338:
  4584  001ADA  8E09               	bsf	(___fladd@a+2)^0,7,c
  4585  001ADC  0E00               	movlw	0
  4586  001ADE  6E0A               	movwf	(___fladd@a+3)^0,c
  4587  001AE0  EF7A  F00D         	goto	l5344
  4588  001AE4                     l5342:
  4589  001AE4  0E00               	movlw	0
  4590  001AE6  6E07               	movwf	___fladd@a^0,c
  4591  001AE8  0E00               	movlw	0
  4592  001AEA  6E08               	movwf	(___fladd@a+1)^0,c
  4593  001AEC  0E00               	movlw	0
  4594  001AEE  6E09               	movwf	(___fladd@a+2)^0,c
  4595  001AF0  0E00               	movlw	0
  4596  001AF2  6E0A               	movwf	(___fladd@a+3)^0,c
  4597  001AF4                     l5344:
  4598  001AF4  5011               	movf	___fladd@bexp^0,w,c
  4599  001AF6  5C10               	subwf	___fladd@aexp^0,w,c
  4600  001AF8  B0D8               	btfsc	status,0,c
  4601  001AFA  EF81  F00D         	goto	u5511
  4602  001AFE  EF83  F00D         	goto	u5510
  4603  001B02                     u5511:
  4604  001B02  EFAA  F00D         	goto	l5380
  4605  001B06                     u5510:
  4606  001B06  AC0F               	btfss	___fladd@signs^0,6,c
  4607  001B08  EF88  F00D         	goto	u5521
  4608  001B0C  EF8A  F00D         	goto	u5520
  4609  001B10                     u5521:
  4610  001B10  EF8C  F00D         	goto	l5350
  4611  001B14                     u5520:
  4612  001B14  0E80               	movlw	128
  4613  001B16  1A0F               	xorwf	___fladd@signs^0,f,c
  4614  001B18                     l5350:
  4615  001B18  C011  F012         	movff	___fladd@bexp,___fladd@grs
  4616  001B1C  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4617  001B20  C012  F010         	movff	___fladd@grs,___fladd@aexp
  4618  001B24  C003  F012         	movff	___fladd@b,___fladd@grs
  4619  001B28  C007  F003         	movff	___fladd@a,___fladd@b
  4620  001B2C  C012  F007         	movff	___fladd@grs,___fladd@a
  4621  001B30  C004  F012         	movff	___fladd@b+1,___fladd@grs
  4622  001B34  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  4623  001B38  C012  F008         	movff	___fladd@grs,___fladd@a+1
  4624  001B3C  C005  F012         	movff	___fladd@b+2,___fladd@grs
  4625  001B40  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  4626  001B44  C012  F009         	movff	___fladd@grs,___fladd@a+2
  4627  001B48  C006  F012         	movff	___fladd@b+3,___fladd@grs
  4628  001B4C  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  4629  001B50  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  4630  001B54                     l5380:
  4631  001B54  0E00               	movlw	0
  4632  001B56  6E12               	movwf	___fladd@grs^0,c
  4633  001B58  5011               	movf	___fladd@bexp^0,w,c
  4634  001B5A  C010  F00B         	movff	___fladd@aexp,??___fladd
  4635  001B5E  6A0C               	clrf	(??___fladd+1)^0,c
  4636  001B60  5E0B               	subwf	??___fladd^0,f,c
  4637  001B62  0E00               	movlw	0
  4638  001B64  5A0C               	subwfb	(??___fladd+1)^0,f,c
  4639  001B66  BE0C               	btfsc	(??___fladd+1)^0,7,c
  4640  001B68  EFBF  F00D         	goto	u5531
  4641  001B6C  500C               	movf	(??___fladd+1)^0,w,c
  4642  001B6E  E109               	bnz	u5530
  4643  001B70  0E1A               	movlw	26
  4644  001B72  5C0B               	subwf	??___fladd^0,w,c
  4645  001B74  A0D8               	btfss	status,0,c
  4646  001B76  EFBF  F00D         	goto	u5531
  4647  001B7A  EFC1  F00D         	goto	u5530
  4648  001B7E                     u5531:
  4649  001B7E  EFF8  F00D         	goto	l1231
  4650  001B82                     u5530:
  4651  001B82  5003               	movf	___fladd@b^0,w,c
  4652  001B84  1004               	iorwf	(___fladd@b+1)^0,w,c
  4653  001B86  1005               	iorwf	(___fladd@b+2)^0,w,c
  4654  001B88  1006               	iorwf	(___fladd@b+3)^0,w,c
  4655  001B8A  A4D8               	btfss	status,2,c
  4656  001B8C  EFCA  F00D         	goto	u5541
  4657  001B90  EFCD  F00D         	goto	u5540
  4658  001B94                     u5541:
  4659  001B94  0E01               	movlw	1
  4660  001B96  EFCE  F00D         	goto	u5550
  4661  001B9A                     u5540:
  4662  001B9A  0E00               	movlw	0
  4663  001B9C                     u5550:
  4664  001B9C  6E12               	movwf	___fladd@grs^0,c
  4665  001B9E  0E00               	movlw	0
  4666  001BA0  6E03               	movwf	___fladd@b^0,c
  4667  001BA2  0E00               	movlw	0
  4668  001BA4  6E04               	movwf	(___fladd@b+1)^0,c
  4669  001BA6  0E00               	movlw	0
  4670  001BA8  6E05               	movwf	(___fladd@b+2)^0,c
  4671  001BAA  0E00               	movlw	0
  4672  001BAC  6E06               	movwf	(___fladd@b+3)^0,c
  4673  001BAE  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4674  001BB2  EF01  F00E         	goto	l1230
  4675  001BB6                     l1232:
  4676  001BB6  A012               	btfss	___fladd@grs^0,0,c
  4677  001BB8  EFE0  F00D         	goto	u5561
  4678  001BBC  EFE2  F00D         	goto	u5560
  4679  001BC0                     u5561:
  4680  001BC0  EFE8  F00D         	goto	l5392
  4681  001BC4                     u5560:
  4682  001BC4  90D8               	bcf	status,0,c
  4683  001BC6  3012               	rrcf	___fladd@grs^0,w,c
  4684  001BC8  0901               	iorlw	1
  4685  001BCA  6E12               	movwf	___fladd@grs^0,c
  4686  001BCC  EFEA  F00D         	goto	l5394
  4687  001BD0                     l5392:
  4688  001BD0  90D8               	bcf	status,0,c
  4689  001BD2  3212               	rrcf	___fladd@grs^0,f,c
  4690  001BD4                     l5394:
  4691  001BD4  A003               	btfss	___fladd@b^0,0,c
  4692  001BD6  EFEF  F00D         	goto	u5571
  4693  001BDA  EFF1  F00D         	goto	u5570
  4694  001BDE                     u5571:
  4695  001BDE  EFF2  F00D         	goto	l5398
  4696  001BE2                     u5570:
  4697  001BE2  8E12               	bsf	___fladd@grs^0,7,c
  4698  001BE4                     l5398:
  4699  001BE4  3406               	rlcf	(___fladd@b+3)^0,w,c
  4700  001BE6  3206               	rrcf	(___fladd@b+3)^0,f,c
  4701  001BE8  3205               	rrcf	(___fladd@b+2)^0,f,c
  4702  001BEA  3204               	rrcf	(___fladd@b+1)^0,f,c
  4703  001BEC  3203               	rrcf	___fladd@b^0,f,c
  4704  001BEE  2A11               	incf	___fladd@bexp^0,f,c
  4705  001BF0                     l1231:
  4706  001BF0  5010               	movf	___fladd@aexp^0,w,c
  4707  001BF2  5C11               	subwf	___fladd@bexp^0,w,c
  4708  001BF4  A0D8               	btfss	status,0,c
  4709  001BF6  EFFF  F00D         	goto	u5581
  4710  001BFA  EF01  F00E         	goto	u5580
  4711  001BFE                     u5581:
  4712  001BFE  EFDB  F00D         	goto	l1232
  4713  001C02                     u5580:
  4714  001C02                     l1230:
  4715  001C02  BC0F               	btfsc	___fladd@signs^0,6,c
  4716  001C04  EF06  F00E         	goto	u5591
  4717  001C08  EF08  F00E         	goto	u5590
  4718  001C0C                     u5591:
  4719  001C0C  EF48  F00E         	goto	l5426
  4720  001C10                     u5590:
  4721  001C10  5011               	movf	___fladd@bexp^0,w,c
  4722  001C12  A4D8               	btfss	status,2,c
  4723  001C14  EF0E  F00E         	goto	u5601
  4724  001C18  EF10  F00E         	goto	u5600
  4725  001C1C                     u5601:
  4726  001C1C  EF1A  F00E         	goto	l5408
  4727  001C20                     u5600:
  4728  001C20  0E00               	movlw	0
  4729  001C22  6E03               	movwf	?___fladd^0,c
  4730  001C24  0E00               	movlw	0
  4731  001C26  6E04               	movwf	(?___fladd+1)^0,c
  4732  001C28  0E00               	movlw	0
  4733  001C2A  6E05               	movwf	(?___fladd+2)^0,c
  4734  001C2C  0E00               	movlw	0
  4735  001C2E  6E06               	movwf	(?___fladd+3)^0,c
  4736  001C30  EF69  F00F         	goto	l1239
  4737  001C34                     l5408:
  4738  001C34  5007               	movf	___fladd@a^0,w,c
  4739  001C36  2603               	addwf	___fladd@b^0,f,c
  4740  001C38  5008               	movf	(___fladd@a+1)^0,w,c
  4741  001C3A  2204               	addwfc	(___fladd@b+1)^0,f,c
  4742  001C3C  5009               	movf	(___fladd@a+2)^0,w,c
  4743  001C3E  2205               	addwfc	(___fladd@b+2)^0,f,c
  4744  001C40  500A               	movf	(___fladd@a+3)^0,w,c
  4745  001C42  2206               	addwfc	(___fladd@b+3)^0,f,c
  4746  001C44  A006               	btfss	(___fladd@b+3)^0,0,c
  4747  001C46  EF27  F00E         	goto	u5611
  4748  001C4A  EF29  F00E         	goto	u5610
  4749  001C4E                     u5611:
  4750  001C4E  EFD5  F00E         	goto	l5462
  4751  001C52                     u5610:
  4752  001C52  A012               	btfss	___fladd@grs^0,0,c
  4753  001C54  EF2E  F00E         	goto	u5621
  4754  001C58  EF30  F00E         	goto	u5620
  4755  001C5C                     u5621:
  4756  001C5C  EF36  F00E         	goto	l5416
  4757  001C60                     u5620:
  4758  001C60  90D8               	bcf	status,0,c
  4759  001C62  3012               	rrcf	___fladd@grs^0,w,c
  4760  001C64  0901               	iorlw	1
  4761  001C66  6E12               	movwf	___fladd@grs^0,c
  4762  001C68  EF38  F00E         	goto	l5418
  4763  001C6C                     l5416:
  4764  001C6C  90D8               	bcf	status,0,c
  4765  001C6E  3212               	rrcf	___fladd@grs^0,f,c
  4766  001C70                     l5418:
  4767  001C70  A003               	btfss	___fladd@b^0,0,c
  4768  001C72  EF3D  F00E         	goto	u5631
  4769  001C76  EF3F  F00E         	goto	u5630
  4770  001C7A                     u5631:
  4771  001C7A  EF40  F00E         	goto	l5422
  4772  001C7E                     u5630:
  4773  001C7E  8E12               	bsf	___fladd@grs^0,7,c
  4774  001C80                     l5422:
  4775  001C80  3406               	rlcf	(___fladd@b+3)^0,w,c
  4776  001C82  3206               	rrcf	(___fladd@b+3)^0,f,c
  4777  001C84  3205               	rrcf	(___fladd@b+2)^0,f,c
  4778  001C86  3204               	rrcf	(___fladd@b+1)^0,f,c
  4779  001C88  3203               	rrcf	___fladd@b^0,f,c
  4780  001C8A  2A11               	incf	___fladd@bexp^0,f,c
  4781  001C8C  EFD5  F00E         	goto	l5462
  4782  001C90                     l5426:
  4783  001C90  5007               	movf	___fladd@a^0,w,c
  4784  001C92  5C03               	subwf	___fladd@b^0,w,c
  4785  001C94  5008               	movf	(___fladd@a+1)^0,w,c
  4786  001C96  5804               	subwfb	(___fladd@b+1)^0,w,c
  4787  001C98  5009               	movf	(___fladd@a+2)^0,w,c
  4788  001C9A  5805               	subwfb	(___fladd@b+2)^0,w,c
  4789  001C9C  5006               	movf	(___fladd@b+3)^0,w,c
  4790  001C9E  0A80               	xorlw	128
  4791  001CA0  6E0B               	movwf	??___fladd^0,c
  4792  001CA2  500A               	movf	(___fladd@a+3)^0,w,c
  4793  001CA4  0A80               	xorlw	128
  4794  001CA6  580B               	subwfb	??___fladd^0,w,c
  4795  001CA8  B0D8               	btfsc	status,0,c
  4796  001CAA  EF59  F00E         	goto	u5641
  4797  001CAE  EF5B  F00E         	goto	u5640
  4798  001CB2                     u5641:
  4799  001CB2  EF86  F00E         	goto	l5436
  4800  001CB6                     u5640:
  4801  001CB6  5003               	movf	___fladd@b^0,w,c
  4802  001CB8  5C07               	subwf	___fladd@a^0,w,c
  4803  001CBA  6E0B               	movwf	??___fladd^0,c
  4804  001CBC  5004               	movf	(___fladd@b+1)^0,w,c
  4805  001CBE  5808               	subwfb	(___fladd@a+1)^0,w,c
  4806  001CC0  6E0C               	movwf	(??___fladd+1)^0,c
  4807  001CC2  5005               	movf	(___fladd@b+2)^0,w,c
  4808  001CC4  5809               	subwfb	(___fladd@a+2)^0,w,c
  4809  001CC6  6E0D               	movwf	(??___fladd+2)^0,c
  4810  001CC8  5006               	movf	(___fladd@b+3)^0,w,c
  4811  001CCA  580A               	subwfb	(___fladd@a+3)^0,w,c
  4812  001CCC  6E0E               	movwf	(??___fladd+3)^0,c
  4813  001CCE  0EFF               	movlw	255
  4814  001CD0  240B               	addwf	??___fladd^0,w,c
  4815  001CD2  6E03               	movwf	___fladd@b^0,c
  4816  001CD4  0EFF               	movlw	255
  4817  001CD6  200C               	addwfc	(??___fladd+1)^0,w,c
  4818  001CD8  6E04               	movwf	(___fladd@b+1)^0,c
  4819  001CDA  0EFF               	movlw	255
  4820  001CDC  200D               	addwfc	(??___fladd+2)^0,w,c
  4821  001CDE  6E05               	movwf	(___fladd@b+2)^0,c
  4822  001CE0  0EFF               	movlw	255
  4823  001CE2  200E               	addwfc	(??___fladd+3)^0,w,c
  4824  001CE4  6E06               	movwf	(___fladd@b+3)^0,c
  4825  001CE6  0E80               	movlw	128
  4826  001CE8  1A0F               	xorwf	___fladd@signs^0,f,c
  4827  001CEA  6C12               	negf	___fladd@grs^0,c
  4828  001CEC  5012               	movf	___fladd@grs^0,w,c
  4829  001CEE  A4D8               	btfss	status,2,c
  4830  001CF0  EF7C  F00E         	goto	u5651
  4831  001CF4  EF7E  F00E         	goto	u5650
  4832  001CF8                     u5651:
  4833  001CF8  EF8E  F00E         	goto	l1247
  4834  001CFC                     u5650:
  4835  001CFC  0E01               	movlw	1
  4836  001CFE  2603               	addwf	___fladd@b^0,f,c
  4837  001D00  0E00               	movlw	0
  4838  001D02  2204               	addwfc	(___fladd@b+1)^0,f,c
  4839  001D04  2205               	addwfc	(___fladd@b+2)^0,f,c
  4840  001D06  2206               	addwfc	(___fladd@b+3)^0,f,c
  4841  001D08  EF8E  F00E         	goto	l1247
  4842  001D0C                     l5436:
  4843  001D0C  5007               	movf	___fladd@a^0,w,c
  4844  001D0E  5E03               	subwf	___fladd@b^0,f,c
  4845  001D10  5008               	movf	(___fladd@a+1)^0,w,c
  4846  001D12  5A04               	subwfb	(___fladd@b+1)^0,f,c
  4847  001D14  5009               	movf	(___fladd@a+2)^0,w,c
  4848  001D16  5A05               	subwfb	(___fladd@b+2)^0,f,c
  4849  001D18  500A               	movf	(___fladd@a+3)^0,w,c
  4850  001D1A  5A06               	subwfb	(___fladd@b+3)^0,f,c
  4851  001D1C                     l1247:
  4852  001D1C  5003               	movf	___fladd@b^0,w,c
  4853  001D1E  1004               	iorwf	(___fladd@b+1)^0,w,c
  4854  001D20  1005               	iorwf	(___fladd@b+2)^0,w,c
  4855  001D22  1006               	iorwf	(___fladd@b+3)^0,w,c
  4856  001D24  A4D8               	btfss	status,2,c
  4857  001D26  EF97  F00E         	goto	u5661
  4858  001D2A  EF99  F00E         	goto	u5660
  4859  001D2E                     u5661:
  4860  001D2E  EFCE  F00E         	goto	l5460
  4861  001D32                     u5660:
  4862  001D32  5012               	movf	___fladd@grs^0,w,c
  4863  001D34  A4D8               	btfss	status,2,c
  4864  001D36  EF9F  F00E         	goto	u5671
  4865  001D3A  EFA1  F00E         	goto	u5670
  4866  001D3E                     u5671:
  4867  001D3E  EFCE  F00E         	goto	l5460
  4868  001D42                     u5670:
  4869  001D42  0E00               	movlw	0
  4870  001D44  6E03               	movwf	?___fladd^0,c
  4871  001D46  0E00               	movlw	0
  4872  001D48  6E04               	movwf	(?___fladd+1)^0,c
  4873  001D4A  0E00               	movlw	0
  4874  001D4C  6E05               	movwf	(?___fladd+2)^0,c
  4875  001D4E  0E00               	movlw	0
  4876  001D50  6E06               	movwf	(?___fladd+3)^0,c
  4877  001D52  EF69  F00F         	goto	l1239
  4878  001D56                     l5444:
  4879  001D56  90D8               	bcf	status,0,c
  4880  001D58  3603               	rlcf	___fladd@b^0,f,c
  4881  001D5A  3604               	rlcf	(___fladd@b+1)^0,f,c
  4882  001D5C  3605               	rlcf	(___fladd@b+2)^0,f,c
  4883  001D5E  3606               	rlcf	(___fladd@b+3)^0,f,c
  4884  001D60  AE12               	btfss	___fladd@grs^0,7,c
  4885  001D62  EFB5  F00E         	goto	u5681
  4886  001D66  EFB7  F00E         	goto	u5680
  4887  001D6A                     u5681:
  4888  001D6A  EFB8  F00E         	goto	l5450
  4889  001D6E                     u5680:
  4890  001D6E  8003               	bsf	___fladd@b^0,0,c
  4891  001D70                     l5450:
  4892  001D70  A012               	btfss	___fladd@grs^0,0,c
  4893  001D72  EFBD  F00E         	goto	u5691
  4894  001D76  EFBF  F00E         	goto	u5690
  4895  001D7A                     u5691:
  4896  001D7A  EFC3  F00E         	goto	l5454
  4897  001D7E                     u5690:
  4898  001D7E  80D8               	bsf	status,0,c
  4899  001D80  3612               	rlcf	___fladd@grs^0,f,c
  4900  001D82  EFC5  F00E         	goto	l5456
  4901  001D86                     l5454:
  4902  001D86  90D8               	bcf	status,0,c
  4903  001D88  3612               	rlcf	___fladd@grs^0,f,c
  4904  001D8A                     l5456:
  4905  001D8A  5011               	movf	___fladd@bexp^0,w,c
  4906  001D8C  B4D8               	btfsc	status,2,c
  4907  001D8E  EFCB  F00E         	goto	u5701
  4908  001D92  EFCD  F00E         	goto	u5700
  4909  001D96                     u5701:
  4910  001D96  EFCE  F00E         	goto	l5460
  4911  001D9A                     u5700:
  4912  001D9A  0611               	decf	___fladd@bexp^0,f,c
  4913  001D9C                     l5460:
  4914  001D9C  AE05               	btfss	(___fladd@b+2)^0,7,c
  4915  001D9E  EFD3  F00E         	goto	u5711
  4916  001DA2  EFD5  F00E         	goto	u5710
  4917  001DA6                     u5711:
  4918  001DA6  EFAB  F00E         	goto	l5444
  4919  001DAA                     u5710:
  4920  001DAA                     l5462:
  4921  001DAA  0E00               	movlw	0
  4922  001DAC  6E10               	movwf	___fladd@aexp^0,c
  4923  001DAE  AE12               	btfss	___fladd@grs^0,7,c
  4924  001DB0  EFDC  F00E         	goto	u5721
  4925  001DB4  EFDE  F00E         	goto	u5720
  4926  001DB8                     u5721:
  4927  001DB8  EFF6  F00E         	goto	l1256
  4928  001DBC                     u5720:
  4929  001DBC  C012  F00B         	movff	___fladd@grs,??___fladd
  4930  001DC0  0E7F               	movlw	127
  4931  001DC2  160B               	andwf	??___fladd^0,f,c
  4932  001DC4  B4D8               	btfsc	status,2,c
  4933  001DC6  EFE7  F00E         	goto	u5731
  4934  001DCA  EFE9  F00E         	goto	u5730
  4935  001DCE                     u5731:
  4936  001DCE  EFED  F00E         	goto	l1257
  4937  001DD2                     u5730:
  4938  001DD2                     l5468:
  4939  001DD2  0E01               	movlw	1
  4940  001DD4  6E10               	movwf	___fladd@aexp^0,c
  4941  001DD6  EFF6  F00E         	goto	l1256
  4942  001DDA                     l1257:
  4943  001DDA  A003               	btfss	___fladd@b^0,0,c
  4944  001DDC  EFF2  F00E         	goto	u5741
  4945  001DE0  EFF4  F00E         	goto	u5740
  4946  001DE4                     u5741:
  4947  001DE4  EFF6  F00E         	goto	l1256
  4948  001DE8                     u5740:
  4949  001DE8  EFE9  F00E         	goto	l5468
  4950  001DEC                     l1256:
  4951  001DEC  5010               	movf	___fladd@aexp^0,w,c
  4952  001DEE  B4D8               	btfsc	status,2,c
  4953  001DF0  EFFC  F00E         	goto	u5751
  4954  001DF4  EFFE  F00E         	goto	u5750
  4955  001DF8                     u5751:
  4956  001DF8  EF29  F00F         	goto	l5480
  4957  001DFC                     u5750:
  4958  001DFC  0E01               	movlw	1
  4959  001DFE  2603               	addwf	___fladd@b^0,f,c
  4960  001E00  0E00               	movlw	0
  4961  001E02  2204               	addwfc	(___fladd@b+1)^0,f,c
  4962  001E04  2205               	addwfc	(___fladd@b+2)^0,f,c
  4963  001E06  2206               	addwfc	(___fladd@b+3)^0,f,c
  4964  001E08  A006               	btfss	(___fladd@b+3)^0,0,c
  4965  001E0A  EF09  F00F         	goto	u5761
  4966  001E0E  EF0B  F00F         	goto	u5760
  4967  001E12                     u5761:
  4968  001E12  EF29  F00F         	goto	l5480
  4969  001E16                     u5760:
  4970  001E16  C003  F00B         	movff	___fladd@b,??___fladd
  4971  001E1A  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  4972  001E1E  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  4973  001E22  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  4974  001E26  340E               	rlcf	(??___fladd+3)^0,w,c
  4975  001E28  320E               	rrcf	(??___fladd+3)^0,f,c
  4976  001E2A  320D               	rrcf	(??___fladd+2)^0,f,c
  4977  001E2C  320C               	rrcf	(??___fladd+1)^0,f,c
  4978  001E2E  320B               	rrcf	??___fladd^0,f,c
  4979  001E30  C00B  F003         	movff	??___fladd,___fladd@b
  4980  001E34  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  4981  001E38  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  4982  001E3C  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  4983  001E40  2811               	incf	___fladd@bexp^0,w,c
  4984  001E42  B4D8               	btfsc	status,2,c
  4985  001E44  EF26  F00F         	goto	u5771
  4986  001E48  EF28  F00F         	goto	u5770
  4987  001E4C                     u5771:
  4988  001E4C  EF29  F00F         	goto	l5480
  4989  001E50                     u5770:
  4990  001E50  2A11               	incf	___fladd@bexp^0,f,c
  4991  001E52                     l5480:
  4992  001E52  2811               	incf	___fladd@bexp^0,w,c
  4993  001E54  B4D8               	btfsc	status,2,c
  4994  001E56  EF2F  F00F         	goto	u5781
  4995  001E5A  EF31  F00F         	goto	u5780
  4996  001E5E                     u5781:
  4997  001E5E  EF39  F00F         	goto	l5484
  4998  001E62                     u5780:
  4999  001E62  5011               	movf	___fladd@bexp^0,w,c
  5000  001E64  A4D8               	btfss	status,2,c
  5001  001E66  EF37  F00F         	goto	u5791
  5002  001E6A  EF39  F00F         	goto	u5790
  5003  001E6E                     u5791:
  5004  001E6E  EF4B  F00F         	goto	l5488
  5005  001E72                     u5790:
  5006  001E72                     l5484:
  5007  001E72  0E00               	movlw	0
  5008  001E74  6E03               	movwf	___fladd@b^0,c
  5009  001E76  0E00               	movlw	0
  5010  001E78  6E04               	movwf	(___fladd@b+1)^0,c
  5011  001E7A  0E00               	movlw	0
  5012  001E7C  6E05               	movwf	(___fladd@b+2)^0,c
  5013  001E7E  0E00               	movlw	0
  5014  001E80  6E06               	movwf	(___fladd@b+3)^0,c
  5015  001E82  5011               	movf	___fladd@bexp^0,w,c
  5016  001E84  A4D8               	btfss	status,2,c
  5017  001E86  EF47  F00F         	goto	u5801
  5018  001E8A  EF49  F00F         	goto	u5800
  5019  001E8E                     u5801:
  5020  001E8E  EF4B  F00F         	goto	l5488
  5021  001E92                     u5800:
  5022  001E92  0E00               	movlw	0
  5023  001E94  6E0F               	movwf	___fladd@signs^0,c
  5024  001E96                     l5488:
  5025  001E96  A011               	btfss	___fladd@bexp^0,0,c
  5026  001E98  EF50  F00F         	goto	u5811
  5027  001E9C  EF52  F00F         	goto	u5810
  5028  001EA0                     u5811:
  5029  001EA0  EF55  F00F         	goto	l5492
  5030  001EA4                     u5810:
  5031  001EA4  8E05               	bsf	(___fladd@b+2)^0,7,c
  5032  001EA6  EF56  F00F         	goto	l5494
  5033  001EAA                     l5492:
  5034  001EAA  9E05               	bcf	(___fladd@b+2)^0,7,c
  5035  001EAC                     l5494:
  5036  001EAC  90D8               	bcf	status,0,c
  5037  001EAE  3011               	rrcf	___fladd@bexp^0,w,c
  5038  001EB0  6E06               	movwf	(___fladd@b+3)^0,c
  5039  001EB2  AE0F               	btfss	___fladd@signs^0,7,c
  5040  001EB4  EF5E  F00F         	goto	u5821
  5041  001EB8  EF60  F00F         	goto	u5820
  5042  001EBC                     u5821:
  5043  001EBC  EF61  F00F         	goto	l5500
  5044  001EC0                     u5820:
  5045  001EC0  8E06               	bsf	(___fladd@b+3)^0,7,c
  5046  001EC2                     l5500:
  5047  001EC2  C003  F003         	movff	___fladd@b,?___fladd
  5048  001EC6  C004  F004         	movff	___fladd@b+1,?___fladd+1
  5049  001ECA  C005  F005         	movff	___fladd@b+2,?___fladd+2
  5050  001ECE  C006  F006         	movff	___fladd@b+3,?___fladd+3
  5051  001ED2                     l1239:
  5052  001ED2  0012               	return		;funcret
  5053  001ED4                     __end_of___fladd:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function ___flneg *****************
  5057 ;; Defined at:
  5058 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  f1              4    2[COMRAM] unsigned char 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  4    2[COMRAM] unsigned char 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;Total ram usage:        4 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 2
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_roundf
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text15
  5087  005300                     __ptext15:
  5088                           	callstack 0
  5089  005300                     ___flneg:
  5090                           	callstack 24
  5091  005300  5003               	movf	___flneg@f1^0,w,c
  5092  005302  1004               	iorwf	(___flneg@f1+1)^0,w,c
  5093  005304  1005               	iorwf	(___flneg@f1+2)^0,w,c
  5094  005306  1006               	iorwf	(___flneg@f1+3)^0,w,c
  5095  005308  B4D8               	btfsc	status,2,c
  5096  00530A  EF89  F029         	goto	u6071
  5097  00530E  EF8B  F029         	goto	u6070
  5098  005312                     u6071:
  5099  005312  EF93  F029         	goto	l5666
  5100  005316                     u6070:
  5101  005316  0E00               	movlw	0
  5102  005318  1A03               	xorwf	___flneg@f1^0,f,c
  5103  00531A  0E00               	movlw	0
  5104  00531C  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  5105  00531E  0E00               	movlw	0
  5106  005320  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  5107  005322  0E80               	movlw	128
  5108  005324  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  5109  005326                     l5666:
  5110  005326  C003  F003         	movff	___flneg@f1,?___flneg
  5111  00532A  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  5112  00532E  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  5113  005332  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  5114  005336  0012               	return		;funcret
  5115  005338                     __end_of___flneg:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function ___flmul *****************
  5119 ;; Defined at:
  5120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  b               4   41[COMRAM] unsigned char 
  5123 ;;  a               4   45[COMRAM] unsigned char 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  prod            4   60[COMRAM] struct .
  5126 ;;  grs             4   55[COMRAM] unsigned long 
  5127 ;;  temp            2   64[COMRAM] struct .
  5128 ;;  bexp            1   59[COMRAM] unsigned char 
  5129 ;;  aexp            1   54[COMRAM] unsigned char 
  5130 ;;  sign            1   53[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  4   41[COMRAM] unsigned char 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, prodl, prodh
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5140 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5143 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;Total ram usage:       25 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 2
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_detect_color
  5151 ;;		_distance_measure
  5152 ;;		_roundf
  5153 ;;		_check_color_reading
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text16
  5158  001ED4                     __ptext16:
  5159                           	callstack 0
  5160  001ED4                     ___flmul:
  5161                           	callstack 24
  5162  001ED4  502D               	movf	(___flmul@b+3)^0,w,c
  5163  001ED6  0B80               	andlw	128
  5164  001ED8  6E36               	movwf	___flmul@sign^0,c
  5165  001EDA  502D               	movf	(___flmul@b+3)^0,w,c
  5166  001EDC  242D               	addwf	(___flmul@b+3)^0,w,c
  5167  001EDE  6E3C               	movwf	___flmul@bexp^0,c
  5168  001EE0  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5169  001EE2  EF75  F00F         	goto	u5831
  5170  001EE6  EF77  F00F         	goto	u5830
  5171  001EEA                     u5831:
  5172  001EEA  EF78  F00F         	goto	l5510
  5173  001EEE                     u5830:
  5174  001EEE  803C               	bsf	___flmul@bexp^0,0,c
  5175  001EF0                     l5510:
  5176  001EF0  503C               	movf	___flmul@bexp^0,w,c
  5177  001EF2  B4D8               	btfsc	status,2,c
  5178  001EF4  EF7E  F00F         	goto	u5841
  5179  001EF8  EF80  F00F         	goto	u5840
  5180  001EFC                     u5841:
  5181  001EFC  EF93  F00F         	goto	l5518
  5182  001F00                     u5840:
  5183  001F00  283C               	incf	___flmul@bexp^0,w,c
  5184  001F02  A4D8               	btfss	status,2,c
  5185  001F04  EF86  F00F         	goto	u5851
  5186  001F08  EF88  F00F         	goto	u5850
  5187  001F0C                     u5851:
  5188  001F0C  EF90  F00F         	goto	l5516
  5189  001F10                     u5850:
  5190  001F10  0E00               	movlw	0
  5191  001F12  6E2A               	movwf	___flmul@b^0,c
  5192  001F14  0E00               	movlw	0
  5193  001F16  6E2B               	movwf	(___flmul@b+1)^0,c
  5194  001F18  0E00               	movlw	0
  5195  001F1A  6E2C               	movwf	(___flmul@b+2)^0,c
  5196  001F1C  0E00               	movlw	0
  5197  001F1E  6E2D               	movwf	(___flmul@b+3)^0,c
  5198  001F20                     l5516:
  5199  001F20  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5200  001F22  EF9B  F00F         	goto	l5520
  5201  001F26                     l5518:
  5202  001F26  0E00               	movlw	0
  5203  001F28  6E2A               	movwf	___flmul@b^0,c
  5204  001F2A  0E00               	movlw	0
  5205  001F2C  6E2B               	movwf	(___flmul@b+1)^0,c
  5206  001F2E  0E00               	movlw	0
  5207  001F30  6E2C               	movwf	(___flmul@b+2)^0,c
  5208  001F32  0E00               	movlw	0
  5209  001F34  6E2D               	movwf	(___flmul@b+3)^0,c
  5210  001F36                     l5520:
  5211  001F36  5031               	movf	(___flmul@a+3)^0,w,c
  5212  001F38  0B80               	andlw	128
  5213  001F3A  1A36               	xorwf	___flmul@sign^0,f,c
  5214  001F3C  5031               	movf	(___flmul@a+3)^0,w,c
  5215  001F3E  2431               	addwf	(___flmul@a+3)^0,w,c
  5216  001F40  6E37               	movwf	___flmul@aexp^0,c
  5217  001F42  AE30               	btfss	(___flmul@a+2)^0,7,c
  5218  001F44  EFA6  F00F         	goto	u5861
  5219  001F48  EFA8  F00F         	goto	u5860
  5220  001F4C                     u5861:
  5221  001F4C  EFA9  F00F         	goto	l5528
  5222  001F50                     u5860:
  5223  001F50  8037               	bsf	___flmul@aexp^0,0,c
  5224  001F52                     l5528:
  5225  001F52  5037               	movf	___flmul@aexp^0,w,c
  5226  001F54  B4D8               	btfsc	status,2,c
  5227  001F56  EFAF  F00F         	goto	u5871
  5228  001F5A  EFB1  F00F         	goto	u5870
  5229  001F5E                     u5871:
  5230  001F5E  EFC4  F00F         	goto	l5536
  5231  001F62                     u5870:
  5232  001F62  2837               	incf	___flmul@aexp^0,w,c
  5233  001F64  A4D8               	btfss	status,2,c
  5234  001F66  EFB7  F00F         	goto	u5881
  5235  001F6A  EFB9  F00F         	goto	u5880
  5236  001F6E                     u5881:
  5237  001F6E  EFC1  F00F         	goto	l5534
  5238  001F72                     u5880:
  5239  001F72  0E00               	movlw	0
  5240  001F74  6E2E               	movwf	___flmul@a^0,c
  5241  001F76  0E00               	movlw	0
  5242  001F78  6E2F               	movwf	(___flmul@a+1)^0,c
  5243  001F7A  0E00               	movlw	0
  5244  001F7C  6E30               	movwf	(___flmul@a+2)^0,c
  5245  001F7E  0E00               	movlw	0
  5246  001F80  6E31               	movwf	(___flmul@a+3)^0,c
  5247  001F82                     l5534:
  5248  001F82  8E30               	bsf	(___flmul@a+2)^0,7,c
  5249  001F84  EFCC  F00F         	goto	l1316
  5250  001F88                     l5536:
  5251  001F88  0E00               	movlw	0
  5252  001F8A  6E2E               	movwf	___flmul@a^0,c
  5253  001F8C  0E00               	movlw	0
  5254  001F8E  6E2F               	movwf	(___flmul@a+1)^0,c
  5255  001F90  0E00               	movlw	0
  5256  001F92  6E30               	movwf	(___flmul@a+2)^0,c
  5257  001F94  0E00               	movlw	0
  5258  001F96  6E31               	movwf	(___flmul@a+3)^0,c
  5259  001F98                     l1316:
  5260  001F98  5037               	movf	___flmul@aexp^0,w,c
  5261  001F9A  B4D8               	btfsc	status,2,c
  5262  001F9C  EFD2  F00F         	goto	u5891
  5263  001FA0  EFD4  F00F         	goto	u5890
  5264  001FA4                     u5891:
  5265  001FA4  EFDC  F00F         	goto	l5540
  5266  001FA8                     u5890:
  5267  001FA8  503C               	movf	___flmul@bexp^0,w,c
  5268  001FAA  A4D8               	btfss	status,2,c
  5269  001FAC  EFDA  F00F         	goto	u5901
  5270  001FB0  EFDC  F00F         	goto	u5900
  5271  001FB4                     u5901:
  5272  001FB4  EFE6  F00F         	goto	l5544
  5273  001FB8                     u5900:
  5274  001FB8                     l5540:
  5275  001FB8  0E00               	movlw	0
  5276  001FBA  6E2A               	movwf	?___flmul^0,c
  5277  001FBC  0E00               	movlw	0
  5278  001FBE  6E2B               	movwf	(?___flmul+1)^0,c
  5279  001FC0  0E00               	movlw	0
  5280  001FC2  6E2C               	movwf	(?___flmul+2)^0,c
  5281  001FC4  0E00               	movlw	0
  5282  001FC6  6E2D               	movwf	(?___flmul+3)^0,c
  5283  001FC8  EF7E  F011         	goto	l1320
  5284  001FCC                     l5544:
  5285  001FCC  5030               	movf	(___flmul@a+2)^0,w,c
  5286  001FCE  022A               	mulwf	___flmul@b^0,c
  5287  001FD0  CFF3 F041          	movff	prodl,___flmul@temp
  5288  001FD4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5289  001FD8  5041               	movf	___flmul@temp^0,w,c
  5290  001FDA  6E38               	movwf	___flmul@grs^0,c
  5291  001FDC  6A39               	clrf	(___flmul@grs+1)^0,c
  5292  001FDE  6A3A               	clrf	(___flmul@grs+2)^0,c
  5293  001FE0  6A3B               	clrf	(___flmul@grs+3)^0,c
  5294  001FE2  5042               	movf	(___flmul@temp+1)^0,w,c
  5295  001FE4  6E3D               	movwf	___flmul@prod^0,c
  5296  001FE6  6A3E               	clrf	(___flmul@prod+1)^0,c
  5297  001FE8  6A3F               	clrf	(___flmul@prod+2)^0,c
  5298  001FEA  6A40               	clrf	(___flmul@prod+3)^0,c
  5299  001FEC  502F               	movf	(___flmul@a+1)^0,w,c
  5300  001FEE  022B               	mulwf	(___flmul@b+1)^0,c
  5301  001FF0  CFF3 F041          	movff	prodl,___flmul@temp
  5302  001FF4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5303  001FF8  5041               	movf	___flmul@temp^0,w,c
  5304  001FFA  2638               	addwf	___flmul@grs^0,f,c
  5305  001FFC  0E00               	movlw	0
  5306  001FFE  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5307  002000  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5308  002002  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5309  002004  5042               	movf	(___flmul@temp+1)^0,w,c
  5310  002006  263D               	addwf	___flmul@prod^0,f,c
  5311  002008  0E00               	movlw	0
  5312  00200A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5313  00200C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5314  00200E  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5315  002010  502E               	movf	___flmul@a^0,w,c
  5316  002012  022C               	mulwf	(___flmul@b+2)^0,c
  5317  002014  CFF3 F041          	movff	prodl,___flmul@temp
  5318  002018  CFF4 F042          	movff	prodh,___flmul@temp+1
  5319  00201C  5041               	movf	___flmul@temp^0,w,c
  5320  00201E  2638               	addwf	___flmul@grs^0,f,c
  5321  002020  0E00               	movlw	0
  5322  002022  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5323  002024  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5324  002026  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5325  002028  5042               	movf	(___flmul@temp+1)^0,w,c
  5326  00202A  263D               	addwf	___flmul@prod^0,f,c
  5327  00202C  0E00               	movlw	0
  5328  00202E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5329  002030  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5330  002032  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5331  002034  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5332  002038  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5333  00203C  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5334  002040  6A38               	clrf	___flmul@grs^0,c
  5335  002042  502E               	movf	___flmul@a^0,w,c
  5336  002044  022B               	mulwf	(___flmul@b+1)^0,c
  5337  002046  CFF3 F041          	movff	prodl,___flmul@temp
  5338  00204A  CFF4 F042          	movff	prodh,___flmul@temp+1
  5339  00204E  5041               	movf	___flmul@temp^0,w,c
  5340  002050  2638               	addwf	___flmul@grs^0,f,c
  5341  002052  5042               	movf	(___flmul@temp+1)^0,w,c
  5342  002054  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5343  002056  0E00               	movlw	0
  5344  002058  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5345  00205A  0E00               	movlw	0
  5346  00205C  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5347  00205E  502F               	movf	(___flmul@a+1)^0,w,c
  5348  002060  022A               	mulwf	___flmul@b^0,c
  5349  002062  CFF3 F041          	movff	prodl,___flmul@temp
  5350  002066  CFF4 F042          	movff	prodh,___flmul@temp+1
  5351  00206A  5041               	movf	___flmul@temp^0,w,c
  5352  00206C  2638               	addwf	___flmul@grs^0,f,c
  5353  00206E  5042               	movf	(___flmul@temp+1)^0,w,c
  5354  002070  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5355  002072  0E00               	movlw	0
  5356  002074  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5357  002076  0E00               	movlw	0
  5358  002078  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5359  00207A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5360  00207E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5361  002082  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5362  002086  6A38               	clrf	___flmul@grs^0,c
  5363  002088  502E               	movf	___flmul@a^0,w,c
  5364  00208A  022A               	mulwf	___flmul@b^0,c
  5365  00208C  CFF3 F041          	movff	prodl,___flmul@temp
  5366  002090  CFF4 F042          	movff	prodh,___flmul@temp+1
  5367  002094  5041               	movf	___flmul@temp^0,w,c
  5368  002096  2638               	addwf	___flmul@grs^0,f,c
  5369  002098  5042               	movf	(___flmul@temp+1)^0,w,c
  5370  00209A  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5371  00209C  0E00               	movlw	0
  5372  00209E  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5373  0020A0  0E00               	movlw	0
  5374  0020A2  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5375  0020A4  5030               	movf	(___flmul@a+2)^0,w,c
  5376  0020A6  022B               	mulwf	(___flmul@b+1)^0,c
  5377  0020A8  CFF3 F041          	movff	prodl,___flmul@temp
  5378  0020AC  CFF4 F042          	movff	prodh,___flmul@temp+1
  5379  0020B0  5041               	movf	___flmul@temp^0,w,c
  5380  0020B2  263D               	addwf	___flmul@prod^0,f,c
  5381  0020B4  5042               	movf	(___flmul@temp+1)^0,w,c
  5382  0020B6  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5383  0020B8  0E00               	movlw	0
  5384  0020BA  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5385  0020BC  0E00               	movlw	0
  5386  0020BE  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5387  0020C0  502F               	movf	(___flmul@a+1)^0,w,c
  5388  0020C2  022C               	mulwf	(___flmul@b+2)^0,c
  5389  0020C4  CFF3 F041          	movff	prodl,___flmul@temp
  5390  0020C8  CFF4 F042          	movff	prodh,___flmul@temp+1
  5391  0020CC  5041               	movf	___flmul@temp^0,w,c
  5392  0020CE  263D               	addwf	___flmul@prod^0,f,c
  5393  0020D0  5042               	movf	(___flmul@temp+1)^0,w,c
  5394  0020D2  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5395  0020D4  0E00               	movlw	0
  5396  0020D6  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5397  0020D8  0E00               	movlw	0
  5398  0020DA  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5399  0020DC  5030               	movf	(___flmul@a+2)^0,w,c
  5400  0020DE  022C               	mulwf	(___flmul@b+2)^0,c
  5401  0020E0  CFF3 F041          	movff	prodl,___flmul@temp
  5402  0020E4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5403  0020E8  5041               	movf	___flmul@temp^0,w,c
  5404  0020EA  6E32               	movwf	??___flmul^0,c
  5405  0020EC  5042               	movf	(___flmul@temp+1)^0,w,c
  5406  0020EE  6E33               	movwf	(??___flmul+1)^0,c
  5407  0020F0  6A34               	clrf	(??___flmul+2)^0,c
  5408  0020F2  6A35               	clrf	(??___flmul+3)^0,c
  5409  0020F4  C034  F035         	movff	??___flmul+2,??___flmul+3
  5410  0020F8  C033  F034         	movff	??___flmul+1,??___flmul+2
  5411  0020FC  C032  F033         	movff	??___flmul,??___flmul+1
  5412  002100  6A32               	clrf	??___flmul^0,c
  5413  002102  5032               	movf	??___flmul^0,w,c
  5414  002104  263D               	addwf	___flmul@prod^0,f,c
  5415  002106  5033               	movf	(??___flmul+1)^0,w,c
  5416  002108  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5417  00210A  5034               	movf	(??___flmul+2)^0,w,c
  5418  00210C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5419  00210E  5035               	movf	(??___flmul+3)^0,w,c
  5420  002110  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5421  002112  C038  F032         	movff	___flmul@grs,??___flmul
  5422  002116  C039  F033         	movff	___flmul@grs+1,??___flmul+1
  5423  00211A  C03A  F034         	movff	___flmul@grs+2,??___flmul+2
  5424  00211E  C03B  F035         	movff	___flmul@grs+3,??___flmul+3
  5425  002122  0E19               	movlw	25
  5426  002124  EF99  F010         	goto	u5910
  5427  002128                     u5915:
  5428  002128  90D8               	bcf	status,0,c
  5429  00212A  3235               	rrcf	(??___flmul+3)^0,f,c
  5430  00212C  3234               	rrcf	(??___flmul+2)^0,f,c
  5431  00212E  3233               	rrcf	(??___flmul+1)^0,f,c
  5432  002130  3232               	rrcf	??___flmul^0,f,c
  5433  002132                     u5910:
  5434  002132  2EE8               	decfsz	wreg,f,c
  5435  002134  EF94  F010         	goto	u5915
  5436  002138  5032               	movf	??___flmul^0,w,c
  5437  00213A  263D               	addwf	___flmul@prod^0,f,c
  5438  00213C  5033               	movf	(??___flmul+1)^0,w,c
  5439  00213E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5440  002140  5034               	movf	(??___flmul+2)^0,w,c
  5441  002142  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5442  002144  5035               	movf	(??___flmul+3)^0,w,c
  5443  002146  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5444  002148  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5445  00214C  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5446  002150  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5447  002154  6A38               	clrf	___flmul@grs^0,c
  5448  002156  5037               	movf	___flmul@aexp^0,w,c
  5449  002158  C03C  F032         	movff	___flmul@bexp,??___flmul
  5450  00215C  6A33               	clrf	(??___flmul+1)^0,c
  5451  00215E  2632               	addwf	??___flmul^0,f,c
  5452  002160  0E00               	movlw	0
  5453  002162  2233               	addwfc	(??___flmul+1)^0,f,c
  5454  002164  0E82               	movlw	130
  5455  002166  2432               	addwf	??___flmul^0,w,c
  5456  002168  6E41               	movwf	___flmul@temp^0,c
  5457  00216A  0EFF               	movlw	255
  5458  00216C  2033               	addwfc	(??___flmul+1)^0,w,c
  5459  00216E  6E42               	movwf	(___flmul@temp+1)^0,c
  5460  002170  EFCF  F010         	goto	l5592
  5461  002174                     l5586:
  5462  002174  90D8               	bcf	status,0,c
  5463  002176  363D               	rlcf	___flmul@prod^0,f,c
  5464  002178  363E               	rlcf	(___flmul@prod+1)^0,f,c
  5465  00217A  363F               	rlcf	(___flmul@prod+2)^0,f,c
  5466  00217C  3640               	rlcf	(___flmul@prod+3)^0,f,c
  5467  00217E  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  5468  002180  EFC4  F010         	goto	u5921
  5469  002184  EFC6  F010         	goto	u5920
  5470  002188                     u5921:
  5471  002188  EFC7  F010         	goto	l1323
  5472  00218C                     u5920:
  5473  00218C  803D               	bsf	___flmul@prod^0,0,c
  5474  00218E                     l1323:
  5475  00218E  90D8               	bcf	status,0,c
  5476  002190  3638               	rlcf	___flmul@grs^0,f,c
  5477  002192  3639               	rlcf	(___flmul@grs+1)^0,f,c
  5478  002194  363A               	rlcf	(___flmul@grs+2)^0,f,c
  5479  002196  363B               	rlcf	(___flmul@grs+3)^0,f,c
  5480  002198  0641               	decf	___flmul@temp^0,f,c
  5481  00219A  A0D8               	btfss	status,0,c
  5482  00219C  0642               	decf	(___flmul@temp+1)^0,f,c
  5483  00219E                     l5592:
  5484  00219E  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  5485  0021A0  EFD4  F010         	goto	u5931
  5486  0021A4  EFD6  F010         	goto	u5930
  5487  0021A8                     u5931:
  5488  0021A8  EFBA  F010         	goto	l5586
  5489  0021AC                     u5930:
  5490  0021AC  0E00               	movlw	0
  5491  0021AE  6E37               	movwf	___flmul@aexp^0,c
  5492  0021B0  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  5493  0021B2  EFDD  F010         	goto	u5941
  5494  0021B6  EFDF  F010         	goto	u5940
  5495  0021BA                     u5941:
  5496  0021BA  EF03  F011         	goto	l1325
  5497  0021BE                     u5940:
  5498  0021BE  0EFF               	movlw	255
  5499  0021C0  1438               	andwf	___flmul@grs^0,w,c
  5500  0021C2  6E32               	movwf	??___flmul^0,c
  5501  0021C4  0EFF               	movlw	255
  5502  0021C6  1439               	andwf	(___flmul@grs+1)^0,w,c
  5503  0021C8  6E33               	movwf	(??___flmul+1)^0,c
  5504  0021CA  0EFF               	movlw	255
  5505  0021CC  143A               	andwf	(___flmul@grs+2)^0,w,c
  5506  0021CE  6E34               	movwf	(??___flmul+2)^0,c
  5507  0021D0  0E7F               	movlw	127
  5508  0021D2  143B               	andwf	(___flmul@grs+3)^0,w,c
  5509  0021D4  6E35               	movwf	(??___flmul+3)^0,c
  5510  0021D6  5032               	movf	??___flmul^0,w,c
  5511  0021D8  1033               	iorwf	(??___flmul+1)^0,w,c
  5512  0021DA  1034               	iorwf	(??___flmul+2)^0,w,c
  5513  0021DC  1035               	iorwf	(??___flmul+3)^0,w,c
  5514  0021DE  B4D8               	btfsc	status,2,c
  5515  0021E0  EFF4  F010         	goto	u5951
  5516  0021E4  EFF6  F010         	goto	u5950
  5517  0021E8                     u5951:
  5518  0021E8  EFFA  F010         	goto	l1326
  5519  0021EC                     u5950:
  5520  0021EC                     l5600:
  5521  0021EC  0E01               	movlw	1
  5522  0021EE  6E37               	movwf	___flmul@aexp^0,c
  5523  0021F0  EF03  F011         	goto	l1325
  5524  0021F4                     l1326:
  5525  0021F4  A03D               	btfss	___flmul@prod^0,0,c
  5526  0021F6  EFFF  F010         	goto	u5961
  5527  0021FA  EF01  F011         	goto	u5960
  5528  0021FE                     u5961:
  5529  0021FE  EF03  F011         	goto	l1325
  5530  002202                     u5960:
  5531  002202  EFF6  F010         	goto	l5600
  5532  002206                     l1325:
  5533  002206  5037               	movf	___flmul@aexp^0,w,c
  5534  002208  B4D8               	btfsc	status,2,c
  5535  00220A  EF09  F011         	goto	u5971
  5536  00220E  EF0B  F011         	goto	u5970
  5537  002212                     u5971:
  5538  002212  EF2F  F011         	goto	l5612
  5539  002216                     u5970:
  5540  002216  0E01               	movlw	1
  5541  002218  263D               	addwf	___flmul@prod^0,f,c
  5542  00221A  0E00               	movlw	0
  5543  00221C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5544  00221E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5545  002220  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5546  002222  A040               	btfss	(___flmul@prod+3)^0,0,c
  5547  002224  EF16  F011         	goto	u5981
  5548  002228  EF18  F011         	goto	u5980
  5549  00222C                     u5981:
  5550  00222C  EF2F  F011         	goto	l5612
  5551  002230                     u5980:
  5552  002230  C03D  F032         	movff	___flmul@prod,??___flmul
  5553  002234  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  5554  002238  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  5555  00223C  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  5556  002240  3435               	rlcf	(??___flmul+3)^0,w,c
  5557  002242  3235               	rrcf	(??___flmul+3)^0,f,c
  5558  002244  3234               	rrcf	(??___flmul+2)^0,f,c
  5559  002246  3233               	rrcf	(??___flmul+1)^0,f,c
  5560  002248  3232               	rrcf	??___flmul^0,f,c
  5561  00224A  C032  F03D         	movff	??___flmul,___flmul@prod
  5562  00224E  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  5563  002252  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  5564  002256  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  5565  00225A  4A41               	infsnz	___flmul@temp^0,f,c
  5566  00225C  2A42               	incf	(___flmul@temp+1)^0,f,c
  5567  00225E                     l5612:
  5568  00225E  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  5569  002260  EF3A  F011         	goto	u5991
  5570  002264  5042               	movf	(___flmul@temp+1)^0,w,c
  5571  002266  E108               	bnz	u5990
  5572  002268  2841               	incf	___flmul@temp^0,w,c
  5573  00226A  A0D8               	btfss	status,0,c
  5574  00226C  EF3A  F011         	goto	u5991
  5575  002270  EF3C  F011         	goto	u5990
  5576  002274                     u5991:
  5577  002274  EF46  F011         	goto	l5616
  5578  002278                     u5990:
  5579  002278  0E00               	movlw	0
  5580  00227A  6E3D               	movwf	___flmul@prod^0,c
  5581  00227C  0E00               	movlw	0
  5582  00227E  6E3E               	movwf	(___flmul@prod+1)^0,c
  5583  002280  0E80               	movlw	128
  5584  002282  6E3F               	movwf	(___flmul@prod+2)^0,c
  5585  002284  0E7F               	movlw	127
  5586  002286  6E40               	movwf	(___flmul@prod+3)^0,c
  5587  002288  EF74  F011         	goto	l5628
  5588  00228C                     l5616:
  5589  00228C  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  5590  00228E  EF53  F011         	goto	u6000
  5591  002292  5042               	movf	(___flmul@temp+1)^0,w,c
  5592  002294  E106               	bnz	u6001
  5593  002296  0441               	decf	___flmul@temp^0,w,c
  5594  002298  B0D8               	btfsc	status,0,c
  5595  00229A  EF51  F011         	goto	u6001
  5596  00229E  EF53  F011         	goto	u6000
  5597  0022A2                     u6001:
  5598  0022A2  EF5F  F011         	goto	l1333
  5599  0022A6                     u6000:
  5600  0022A6  0E00               	movlw	0
  5601  0022A8  6E3D               	movwf	___flmul@prod^0,c
  5602  0022AA  0E00               	movlw	0
  5603  0022AC  6E3E               	movwf	(___flmul@prod+1)^0,c
  5604  0022AE  0E00               	movlw	0
  5605  0022B0  6E3F               	movwf	(___flmul@prod+2)^0,c
  5606  0022B2  0E00               	movlw	0
  5607  0022B4  6E40               	movwf	(___flmul@prod+3)^0,c
  5608  0022B6  0E00               	movlw	0
  5609  0022B8  6E36               	movwf	___flmul@sign^0,c
  5610  0022BA  EF74  F011         	goto	l5628
  5611  0022BE                     l1333:
  5612  0022BE  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  5613  0022C2  0EFF               	movlw	255
  5614  0022C4  163D               	andwf	___flmul@prod^0,f,c
  5615  0022C6  0EFF               	movlw	255
  5616  0022C8  163E               	andwf	(___flmul@prod+1)^0,f,c
  5617  0022CA  0E7F               	movlw	127
  5618  0022CC  163F               	andwf	(___flmul@prod+2)^0,f,c
  5619  0022CE  0E00               	movlw	0
  5620  0022D0  1640               	andwf	(___flmul@prod+3)^0,f,c
  5621  0022D2  A03C               	btfss	___flmul@bexp^0,0,c
  5622  0022D4  EF6E  F011         	goto	u6011
  5623  0022D8  EF70  F011         	goto	u6010
  5624  0022DC                     u6011:
  5625  0022DC  EF71  F011         	goto	l5626
  5626  0022E0                     u6010:
  5627  0022E0  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  5628  0022E2                     l5626:
  5629  0022E2  90D8               	bcf	status,0,c
  5630  0022E4  303C               	rrcf	___flmul@bexp^0,w,c
  5631  0022E6  6E40               	movwf	(___flmul@prod+3)^0,c
  5632  0022E8                     l5628:
  5633  0022E8  5036               	movf	___flmul@sign^0,w,c
  5634  0022EA  1240               	iorwf	(___flmul@prod+3)^0,f,c
  5635  0022EC  C03D  F02A         	movff	___flmul@prod,?___flmul
  5636  0022F0  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  5637  0022F4  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  5638  0022F8  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  5639  0022FC                     l1320:
  5640  0022FC  0012               	return		;funcret
  5641  0022FE                     __end_of___flmul:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function ___flge *****************
  5645 ;; Defined at:
  5646 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  ff1             4    2[COMRAM] unsigned char 
  5649 ;;  ff2             4    6[COMRAM] unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;		None               void
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;Total ram usage:       12 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 2
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_roundf
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text17
  5676  004596                     __ptext17:
  5677                           	callstack 0
  5678  004596                     ___flge:
  5679                           	callstack 24
  5680  004596  0E00               	movlw	0
  5681  004598  1403               	andwf	___flge@ff1^0,w,c
  5682  00459A  6E0B               	movwf	??___flge^0,c
  5683  00459C  0E00               	movlw	0
  5684  00459E  1404               	andwf	(___flge@ff1+1)^0,w,c
  5685  0045A0  6E0C               	movwf	(??___flge+1)^0,c
  5686  0045A2  0E80               	movlw	128
  5687  0045A4  1405               	andwf	(___flge@ff1+2)^0,w,c
  5688  0045A6  6E0D               	movwf	(??___flge+2)^0,c
  5689  0045A8  0E7F               	movlw	127
  5690  0045AA  1406               	andwf	(___flge@ff1+3)^0,w,c
  5691  0045AC  6E0E               	movwf	(??___flge+3)^0,c
  5692  0045AE  500B               	movf	??___flge^0,w,c
  5693  0045B0  100C               	iorwf	(??___flge+1)^0,w,c
  5694  0045B2  100D               	iorwf	(??___flge+2)^0,w,c
  5695  0045B4  100E               	iorwf	(??___flge+3)^0,w,c
  5696  0045B6  A4D8               	btfss	status,2,c
  5697  0045B8  EFE0  F022         	goto	u6021
  5698  0045BC  EFE2  F022         	goto	u6020
  5699  0045C0                     u6021:
  5700  0045C0  EFEA  F022         	goto	l5644
  5701  0045C4                     u6020:
  5702  0045C4  0E00               	movlw	0
  5703  0045C6  6E03               	movwf	___flge@ff1^0,c
  5704  0045C8  0E00               	movlw	0
  5705  0045CA  6E04               	movwf	(___flge@ff1+1)^0,c
  5706  0045CC  0E00               	movlw	0
  5707  0045CE  6E05               	movwf	(___flge@ff1+2)^0,c
  5708  0045D0  0E00               	movlw	0
  5709  0045D2  6E06               	movwf	(___flge@ff1+3)^0,c
  5710  0045D4                     l5644:
  5711  0045D4  0E00               	movlw	0
  5712  0045D6  1407               	andwf	___flge@ff2^0,w,c
  5713  0045D8  6E0B               	movwf	??___flge^0,c
  5714  0045DA  0E00               	movlw	0
  5715  0045DC  1408               	andwf	(___flge@ff2+1)^0,w,c
  5716  0045DE  6E0C               	movwf	(??___flge+1)^0,c
  5717  0045E0  0E80               	movlw	128
  5718  0045E2  1409               	andwf	(___flge@ff2+2)^0,w,c
  5719  0045E4  6E0D               	movwf	(??___flge+2)^0,c
  5720  0045E6  0E7F               	movlw	127
  5721  0045E8  140A               	andwf	(___flge@ff2+3)^0,w,c
  5722  0045EA  6E0E               	movwf	(??___flge+3)^0,c
  5723  0045EC  500B               	movf	??___flge^0,w,c
  5724  0045EE  100C               	iorwf	(??___flge+1)^0,w,c
  5725  0045F0  100D               	iorwf	(??___flge+2)^0,w,c
  5726  0045F2  100E               	iorwf	(??___flge+3)^0,w,c
  5727  0045F4  A4D8               	btfss	status,2,c
  5728  0045F6  EFFF  F022         	goto	u6031
  5729  0045FA  EF01  F023         	goto	u6030
  5730  0045FE                     u6031:
  5731  0045FE  EF09  F023         	goto	l5648
  5732  004602                     u6030:
  5733  004602  0E00               	movlw	0
  5734  004604  6E07               	movwf	___flge@ff2^0,c
  5735  004606  0E00               	movlw	0
  5736  004608  6E08               	movwf	(___flge@ff2+1)^0,c
  5737  00460A  0E00               	movlw	0
  5738  00460C  6E09               	movwf	(___flge@ff2+2)^0,c
  5739  00460E  0E00               	movlw	0
  5740  004610  6E0A               	movwf	(___flge@ff2+3)^0,c
  5741  004612                     l5648:
  5742  004612  AE06               	btfss	(___flge@ff1+3)^0,7,c
  5743  004614  EF0E  F023         	goto	u6041
  5744  004618  EF10  F023         	goto	u6040
  5745  00461C                     u6041:
  5746  00461C  EF19  F023         	goto	l5652
  5747  004620                     u6040:
  5748  004620  6C03               	negf	___flge@ff1^0,c
  5749  004622  1E04               	comf	(___flge@ff1+1)^0,f,c
  5750  004624  B0D8               	btfsc	status,0,c
  5751  004626  2A04               	incf	(___flge@ff1+1)^0,f,c
  5752  004628  1E05               	comf	(___flge@ff1+2)^0,f,c
  5753  00462A  B0D8               	btfsc	status,0,c
  5754  00462C  2A05               	incf	(___flge@ff1+2)^0,f,c
  5755  00462E  0E80               	movlw	128
  5756  004630  5606               	subfwb	(___flge@ff1+3)^0,f,c
  5757  004632                     l5652:
  5758  004632  AE0A               	btfss	(___flge@ff2+3)^0,7,c
  5759  004634  EF1E  F023         	goto	u6051
  5760  004638  EF20  F023         	goto	u6050
  5761  00463C                     u6051:
  5762  00463C  EF29  F023         	goto	l967
  5763  004640                     u6050:
  5764  004640  6C07               	negf	___flge@ff2^0,c
  5765  004642  1E08               	comf	(___flge@ff2+1)^0,f,c
  5766  004644  B0D8               	btfsc	status,0,c
  5767  004646  2A08               	incf	(___flge@ff2+1)^0,f,c
  5768  004648  1E09               	comf	(___flge@ff2+2)^0,f,c
  5769  00464A  B0D8               	btfsc	status,0,c
  5770  00464C  2A09               	incf	(___flge@ff2+2)^0,f,c
  5771  00464E  0E80               	movlw	128
  5772  004650  560A               	subfwb	(___flge@ff2+3)^0,f,c
  5773  004652                     l967:
  5774  004652  0E00               	movlw	0
  5775  004654  1A03               	xorwf	___flge@ff1^0,f,c
  5776  004656  0E00               	movlw	0
  5777  004658  1A04               	xorwf	(___flge@ff1+1)^0,f,c
  5778  00465A  0E00               	movlw	0
  5779  00465C  1A05               	xorwf	(___flge@ff1+2)^0,f,c
  5780  00465E  0E80               	movlw	128
  5781  004660  1A06               	xorwf	(___flge@ff1+3)^0,f,c
  5782  004662  0E00               	movlw	0
  5783  004664  1A07               	xorwf	___flge@ff2^0,f,c
  5784  004666  0E00               	movlw	0
  5785  004668  1A08               	xorwf	(___flge@ff2+1)^0,f,c
  5786  00466A  0E00               	movlw	0
  5787  00466C  1A09               	xorwf	(___flge@ff2+2)^0,f,c
  5788  00466E  0E80               	movlw	128
  5789  004670  1A0A               	xorwf	(___flge@ff2+3)^0,f,c
  5790  004672  5007               	movf	___flge@ff2^0,w,c
  5791  004674  5C03               	subwf	___flge@ff1^0,w,c
  5792  004676  5008               	movf	(___flge@ff2+1)^0,w,c
  5793  004678  5804               	subwfb	(___flge@ff1+1)^0,w,c
  5794  00467A  5009               	movf	(___flge@ff2+2)^0,w,c
  5795  00467C  5805               	subwfb	(___flge@ff1+2)^0,w,c
  5796  00467E  500A               	movf	(___flge@ff2+3)^0,w,c
  5797  004680  5806               	subwfb	(___flge@ff1+3)^0,w,c
  5798  004682  B0D8               	btfsc	status,0,c
  5799  004684  EF46  F023         	goto	u6061
  5800  004688  EF48  F023         	goto	u6060
  5801  00468C                     u6061:
  5802  00468C  EF4B  F023         	goto	l5658
  5803  004690                     u6060:
  5804  004690  90D8               	bcf	status,0,c
  5805  004692  EF4C  F023         	goto	l972
  5806  004696                     l5658:
  5807  004696  80D8               	bsf	status,0,c
  5808  004698                     l972:
  5809  004698  0012               	return		;funcret
  5810  00469A                     __end_of___flge:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function ___fltol *****************
  5814 ;; Defined at:
  5815 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  f1              4   18[BANK0 ] unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  exp1            1   79[COMRAM] unsigned char 
  5820 ;;  sign1           1   78[COMRAM] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  4   18[BANK0 ] long 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;Total ram usage:       10 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 2
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_lroundf
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text18
  5845  00448E                     __ptext18:
  5846                           	callstack 0
  5847  00448E                     ___fltol:
  5848                           	callstack 25
  5849  00448E  0100               	movlb	0	; () banked
  5850  004490  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5851  004492  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5852  004494  6E50               	movwf	___fltol@exp1^0,c
  5853  004496  5050               	movf	___fltol@exp1^0,w,c
  5854  004498  A4D8               	btfss	status,2,c
  5855  00449A  EF51  F022         	goto	u6081
  5856  00449E  EF53  F022         	goto	u6080
  5857  0044A2                     u6081:
  5858  0044A2  EF5D  F022         	goto	l5676
  5859  0044A6                     u6080:
  5860  0044A6                     l5672:
  5861                           
  5862                           ; BSR set to: 0
  5863  0044A6  0E00               	movlw	0
  5864  0044A8  6F72               	movwf	?___fltol& (0+255),b
  5865  0044AA  0E00               	movlw	0
  5866  0044AC  6F73               	movwf	(?___fltol+1)& (0+255),b
  5867  0044AE  0E00               	movlw	0
  5868  0044B0  6F74               	movwf	(?___fltol+2)& (0+255),b
  5869  0044B2  0E00               	movlw	0
  5870  0044B4  6F75               	movwf	(?___fltol+3)& (0+255),b
  5871  0044B6  EFCA  F022         	goto	l999
  5872  0044BA                     l5676:
  5873                           
  5874                           ; BSR set to: 0
  5875  0044BA  C072  F04B         	movff	___fltol@f1,??___fltol
  5876  0044BE  C073  F04C         	movff	___fltol@f1+1,??___fltol+1
  5877  0044C2  C074  F04D         	movff	___fltol@f1+2,??___fltol+2
  5878  0044C6  C075  F04E         	movff	___fltol@f1+3,??___fltol+3
  5879  0044CA  0E20               	movlw	32
  5880  0044CC  EF6D  F022         	goto	u6090
  5881  0044D0                     u6095:
  5882  0044D0  90D8               	bcf	status,0,c
  5883  0044D2  324E               	rrcf	(??___fltol+3)^0,f,c
  5884  0044D4  324D               	rrcf	(??___fltol+2)^0,f,c
  5885  0044D6  324C               	rrcf	(??___fltol+1)^0,f,c
  5886  0044D8  324B               	rrcf	??___fltol^0,f,c
  5887  0044DA                     u6090:
  5888  0044DA  2EE8               	decfsz	wreg,f,c
  5889  0044DC  EF68  F022         	goto	u6095
  5890  0044E0  504B               	movf	??___fltol^0,w,c
  5891  0044E2  6E4F               	movwf	___fltol@sign1^0,c
  5892  0044E4                     
  5893                           ; BSR set to: 0
  5894  0044E4  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
  5895  0044E6                     
  5896                           ; BSR set to: 0
  5897  0044E6  0EFF               	movlw	255
  5898  0044E8  1772               	andwf	___fltol@f1& (0+255),f,b
  5899  0044EA  0EFF               	movlw	255
  5900  0044EC  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
  5901  0044EE  0EFF               	movlw	255
  5902  0044F0  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
  5903  0044F2  0E00               	movlw	0
  5904  0044F4  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
  5905  0044F6                     
  5906                           ; BSR set to: 0
  5907  0044F6  0E96               	movlw	150
  5908  0044F8  5E50               	subwf	___fltol@exp1^0,f,c
  5909  0044FA                     
  5910                           ; BSR set to: 0
  5911  0044FA  BE50               	btfsc	___fltol@exp1^0,7,c
  5912  0044FC  EF84  F022         	goto	u6100
  5913  004500  EF82  F022         	goto	u6101
  5914  004504                     u6101:
  5915  004504  EF9A  F022         	goto	l5696
  5916  004508                     u6100:
  5917  004508                     
  5918                           ; BSR set to: 0
  5919  004508  5050               	movf	___fltol@exp1^0,w,c
  5920  00450A  0A80               	xorlw	128
  5921  00450C  0F97               	addlw	151
  5922  00450E  B0D8               	btfsc	status,0,c
  5923  004510  EF8C  F022         	goto	u6111
  5924  004514  EF8E  F022         	goto	u6110
  5925  004518                     u6111:
  5926  004518  EF90  F022         	goto	l5692
  5927  00451C                     u6110:
  5928  00451C  EF53  F022         	goto	l5672
  5929  004520                     l5692:
  5930                           
  5931                           ; BSR set to: 0
  5932  004520  90D8               	bcf	status,0,c
  5933  004522  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5934  004524  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5935  004526  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5936  004528  3372               	rrcf	___fltol@f1& (0+255),f,b
  5937  00452A                     
  5938                           ; BSR set to: 0
  5939  00452A  3E50               	incfsz	___fltol@exp1^0,f,c
  5940  00452C  EF90  F022         	goto	l5692
  5941  004530  EFB2  F022         	goto	l5706
  5942  004534                     l5696:
  5943                           
  5944                           ; BSR set to: 0
  5945  004534  0E1F               	movlw	31
  5946  004536  6450               	cpfsgt	___fltol@exp1^0,c
  5947  004538  EFA0  F022         	goto	u6121
  5948  00453C  EFA2  F022         	goto	u6120
  5949  004540                     u6121:
  5950  004540  EFAA  F022         	goto	l5704
  5951  004544                     u6120:
  5952  004544  EF53  F022         	goto	l5672
  5953  004548                     l5702:
  5954                           
  5955                           ; BSR set to: 0
  5956  004548  90D8               	bcf	status,0,c
  5957  00454A  3772               	rlcf	___fltol@f1& (0+255),f,b
  5958  00454C  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5959  00454E  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5960  004550  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5961  004552  0650               	decf	___fltol@exp1^0,f,c
  5962  004554                     l5704:
  5963                           
  5964                           ; BSR set to: 0
  5965  004554  5050               	movf	___fltol@exp1^0,w,c
  5966  004556  A4D8               	btfss	status,2,c
  5967  004558  EFB0  F022         	goto	u6131
  5968  00455C  EFB2  F022         	goto	u6130
  5969  004560                     u6131:
  5970  004560  EFA4  F022         	goto	l5702
  5971  004564                     u6130:
  5972  004564                     l5706:
  5973                           
  5974                           ; BSR set to: 0
  5975  004564  504F               	movf	___fltol@sign1^0,w,c
  5976  004566  B4D8               	btfsc	status,2,c
  5977  004568  EFB8  F022         	goto	u6141
  5978  00456C  EFBA  F022         	goto	u6140
  5979  004570                     u6141:
  5980  004570  EFC2  F022         	goto	l5710
  5981  004574                     u6140:
  5982  004574                     
  5983                           ; BSR set to: 0
  5984  004574  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
  5985  004576  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
  5986  004578  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
  5987  00457A  6D72               	negf	___fltol@f1& (0+255),b
  5988  00457C  0E00               	movlw	0
  5989  00457E  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5990  004580  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5991  004582  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5992  004584                     l5710:
  5993                           
  5994                           ; BSR set to: 0
  5995  004584  C072  F072         	movff	___fltol@f1,?___fltol
  5996  004588  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  5997  00458C  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  5998  004590  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  5999  004594                     l999:
  6000                           
  6001                           ; BSR set to: 0
  6002  004594  0012               	return		;funcret
  6003  004596                     __end_of___fltol:
  6004                           	callstack 0
  6005                           
  6006 ;; *************** function ___xxtofl *****************
  6007 ;; Defined at:
  6008 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  sign            1    wreg     unsigned char 
  6011 ;;  val             4    2[COMRAM] long 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  sign            1   10[COMRAM] unsigned char 
  6014 ;;  arg             4   12[COMRAM] unsigned long 
  6015 ;;  exp             1   11[COMRAM] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  4    2[COMRAM] unsigned char 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;Total ram usage:       14 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 2
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_detect_color
  6036 ;;		_distance_measure
  6037 ;;		_check_color_reading
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text19
  6042  003902                     __ptext19:
  6043                           	callstack 0
  6044  003902                     ___xxtofl:
  6045                           	callstack 26
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;incstack = 0
  6049                           ;___xxtofl@sign stored from wreg
  6050  003902  6E0B               	movwf	___xxtofl@sign^0,c
  6051  003904  500B               	movf	___xxtofl@sign^0,w,c
  6052  003906  B4D8               	btfsc	status,2,c
  6053  003908  EF88  F01C         	goto	u4541
  6054  00390C  EF8A  F01C         	goto	u4540
  6055  003910                     u4541:
  6056  003910  EFAC  F01C         	goto	l1357
  6057  003914                     u4540:
  6058  003914  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  6059  003916  EF91  F01C         	goto	u4550
  6060  00391A  EF8F  F01C         	goto	u4551
  6061  00391E                     u4551:
  6062  00391E  EFAC  F01C         	goto	l1357
  6063  003922                     u4550:
  6064  003922  C003  F007         	movff	___xxtofl@val,??___xxtofl
  6065  003926  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  6066  00392A  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  6067  00392E  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  6068  003932  1E07               	comf	??___xxtofl^0,f,c
  6069  003934  1E08               	comf	(??___xxtofl+1)^0,f,c
  6070  003936  1E09               	comf	(??___xxtofl+2)^0,f,c
  6071  003938  1E0A               	comf	(??___xxtofl+3)^0,f,c
  6072  00393A  2A07               	incf	??___xxtofl^0,f,c
  6073  00393C  0E00               	movlw	0
  6074  00393E  2208               	addwfc	(??___xxtofl+1)^0,f,c
  6075  003940  2209               	addwfc	(??___xxtofl+2)^0,f,c
  6076  003942  220A               	addwfc	(??___xxtofl+3)^0,f,c
  6077  003944  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  6078  003948  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6079  00394C  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6080  003950  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  6081  003954  EFB4  F01C         	goto	l4548
  6082  003958                     l1357:
  6083  003958  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  6084  00395C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6085  003960  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6086  003964  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6087  003968                     l4548:
  6088  003968  5003               	movf	___xxtofl@val^0,w,c
  6089  00396A  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  6090  00396C  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  6091  00396E  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  6092  003970  A4D8               	btfss	status,2,c
  6093  003972  EFBD  F01C         	goto	u4561
  6094  003976  EFBF  F01C         	goto	u4560
  6095  00397A                     u4561:
  6096  00397A  EFC9  F01C         	goto	l4554
  6097  00397E                     u4560:
  6098  00397E  0E00               	movlw	0
  6099  003980  6E03               	movwf	?___xxtofl^0,c
  6100  003982  0E00               	movlw	0
  6101  003984  6E04               	movwf	(?___xxtofl+1)^0,c
  6102  003986  0E00               	movlw	0
  6103  003988  6E05               	movwf	(?___xxtofl+2)^0,c
  6104  00398A  0E00               	movlw	0
  6105  00398C  6E06               	movwf	(?___xxtofl+3)^0,c
  6106  00398E  EF5A  F01D         	goto	l1360
  6107  003992                     l4554:
  6108  003992  0E96               	movlw	150
  6109  003994  6E0C               	movwf	___xxtofl@exp^0,c
  6110  003996  EFD3  F01C         	goto	l4558
  6111  00399A                     l4556:
  6112  00399A  2A0C               	incf	___xxtofl@exp^0,f,c
  6113  00399C  90D8               	bcf	status,0,c
  6114  00399E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6115  0039A0  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6116  0039A2  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6117  0039A4  320D               	rrcf	___xxtofl@arg^0,f,c
  6118  0039A6                     l4558:
  6119  0039A6  0E00               	movlw	0
  6120  0039A8  140D               	andwf	___xxtofl@arg^0,w,c
  6121  0039AA  6E07               	movwf	??___xxtofl^0,c
  6122  0039AC  0E00               	movlw	0
  6123  0039AE  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6124  0039B0  6E08               	movwf	(??___xxtofl+1)^0,c
  6125  0039B2  0E00               	movlw	0
  6126  0039B4  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6127  0039B6  6E09               	movwf	(??___xxtofl+2)^0,c
  6128  0039B8  0EFE               	movlw	254
  6129  0039BA  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6130  0039BC  6E0A               	movwf	(??___xxtofl+3)^0,c
  6131  0039BE  5007               	movf	??___xxtofl^0,w,c
  6132  0039C0  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6133  0039C2  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6134  0039C4  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6135  0039C6  A4D8               	btfss	status,2,c
  6136  0039C8  EFE8  F01C         	goto	u4571
  6137  0039CC  EFEA  F01C         	goto	u4570
  6138  0039D0                     u4571:
  6139  0039D0  EFCD  F01C         	goto	l4556
  6140  0039D4                     u4570:
  6141  0039D4  EFF8  F01C         	goto	l1364
  6142  0039D8                     l4560:
  6143  0039D8  2A0C               	incf	___xxtofl@exp^0,f,c
  6144  0039DA  0E01               	movlw	1
  6145  0039DC  260D               	addwf	___xxtofl@arg^0,f,c
  6146  0039DE  0E00               	movlw	0
  6147  0039E0  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6148  0039E2  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  6149  0039E4  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  6150  0039E6  90D8               	bcf	status,0,c
  6151  0039E8  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6152  0039EA  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6153  0039EC  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6154  0039EE  320D               	rrcf	___xxtofl@arg^0,f,c
  6155  0039F0                     l1364:
  6156  0039F0  0E00               	movlw	0
  6157  0039F2  140D               	andwf	___xxtofl@arg^0,w,c
  6158  0039F4  6E07               	movwf	??___xxtofl^0,c
  6159  0039F6  0E00               	movlw	0
  6160  0039F8  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6161  0039FA  6E08               	movwf	(??___xxtofl+1)^0,c
  6162  0039FC  0E00               	movlw	0
  6163  0039FE  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6164  003A00  6E09               	movwf	(??___xxtofl+2)^0,c
  6165  003A02  0EFF               	movlw	255
  6166  003A04  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6167  003A06  6E0A               	movwf	(??___xxtofl+3)^0,c
  6168  003A08  5007               	movf	??___xxtofl^0,w,c
  6169  003A0A  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6170  003A0C  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6171  003A0E  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6172  003A10  A4D8               	btfss	status,2,c
  6173  003A12  EF0D  F01D         	goto	u4581
  6174  003A16  EF0F  F01D         	goto	u4580
  6175  003A1A                     u4581:
  6176  003A1A  EFEC  F01C         	goto	l4560
  6177  003A1E                     u4580:
  6178  003A1E  EF17  F01D         	goto	l4568
  6179  003A22                     l4566:
  6180  003A22  060C               	decf	___xxtofl@exp^0,f,c
  6181  003A24  90D8               	bcf	status,0,c
  6182  003A26  360D               	rlcf	___xxtofl@arg^0,f,c
  6183  003A28  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  6184  003A2A  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  6185  003A2C  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  6186  003A2E                     l4568:
  6187  003A2E  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  6188  003A30  EF1C  F01D         	goto	u4591
  6189  003A34  EF1E  F01D         	goto	u4590
  6190  003A38                     u4591:
  6191  003A38  EF26  F01D         	goto	l1371
  6192  003A3C                     u4590:
  6193  003A3C  0E02               	movlw	2
  6194  003A3E  600C               	cpfslt	___xxtofl@exp^0,c
  6195  003A40  EF24  F01D         	goto	u4601
  6196  003A44  EF26  F01D         	goto	u4600
  6197  003A48                     u4601:
  6198  003A48  EF11  F01D         	goto	l4566
  6199  003A4C                     u4600:
  6200  003A4C                     l1371:
  6201  003A4C  B00C               	btfsc	___xxtofl@exp^0,0,c
  6202  003A4E  EF2B  F01D         	goto	u4611
  6203  003A52  EF2D  F01D         	goto	u4610
  6204  003A56                     u4611:
  6205  003A56  EF2E  F01D         	goto	l4574
  6206  003A5A                     u4610:
  6207  003A5A  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  6208  003A5C                     l4574:
  6209  003A5C  90D8               	bcf	status,0,c
  6210  003A5E  320C               	rrcf	___xxtofl@exp^0,f,c
  6211  003A60  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  6212  003A64  6A08               	clrf	(??___xxtofl+1)^0,c
  6213  003A66  6A09               	clrf	(??___xxtofl+2)^0,c
  6214  003A68  6A0A               	clrf	(??___xxtofl+3)^0,c
  6215  003A6A  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  6216  003A6E  6A09               	clrf	(??___xxtofl+2)^0,c
  6217  003A70  6A08               	clrf	(??___xxtofl+1)^0,c
  6218  003A72  6A07               	clrf	??___xxtofl^0,c
  6219  003A74  5007               	movf	??___xxtofl^0,w,c
  6220  003A76  120D               	iorwf	___xxtofl@arg^0,f,c
  6221  003A78  5008               	movf	(??___xxtofl+1)^0,w,c
  6222  003A7A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  6223  003A7C  5009               	movf	(??___xxtofl+2)^0,w,c
  6224  003A7E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  6225  003A80  500A               	movf	(??___xxtofl+3)^0,w,c
  6226  003A82  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  6227  003A84  500B               	movf	___xxtofl@sign^0,w,c
  6228  003A86  B4D8               	btfsc	status,2,c
  6229  003A88  EF48  F01D         	goto	u4621
  6230  003A8C  EF4A  F01D         	goto	u4620
  6231  003A90                     u4621:
  6232  003A90  EF52  F01D         	goto	l4584
  6233  003A94                     u4620:
  6234  003A94  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  6235  003A96  EF51  F01D         	goto	u4630
  6236  003A9A  EF4F  F01D         	goto	u4631
  6237  003A9E                     u4631:
  6238  003A9E  EF52  F01D         	goto	l4584
  6239  003AA2                     u4630:
  6240  003AA2  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  6241  003AA4                     l4584:
  6242  003AA4  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  6243  003AA8  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  6244  003AAC  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  6245  003AB0  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  6246  003AB4                     l1360:
  6247  003AB4  0012               	return		;funcret
  6248  003AB6                     __end_of___xxtofl:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function ___fldiv *****************
  6252 ;; Defined at:
  6253 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  b               4   16[COMRAM] unsigned char 
  6256 ;;  a               4   20[COMRAM] unsigned char 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  grs             4   35[COMRAM] unsigned long 
  6259 ;;  rem             4   28[COMRAM] unsigned long 
  6260 ;;  new_exp         2   33[COMRAM] short 
  6261 ;;  aexp            1   40[COMRAM] unsigned char 
  6262 ;;  bexp            1   39[COMRAM] unsigned char 
  6263 ;;  sign            1   32[COMRAM] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  4   16[COMRAM] unsigned char 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:       25 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 2
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_detect_color
  6284 ;;		_distance_measure
  6285 ;;		_check_color_reading
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text20
  6290  0026B0                     __ptext20:
  6291                           	callstack 0
  6292  0026B0                     ___fldiv:
  6293                           	callstack 26
  6294  0026B0  5014               	movf	(___fldiv@b+3)^0,w,c
  6295  0026B2  0B80               	andlw	128
  6296  0026B4  6E21               	movwf	___fldiv@sign^0,c
  6297  0026B6  5014               	movf	(___fldiv@b+3)^0,w,c
  6298  0026B8  2414               	addwf	(___fldiv@b+3)^0,w,c
  6299  0026BA  6E28               	movwf	___fldiv@bexp^0,c
  6300  0026BC  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6301  0026BE  EF63  F013         	goto	u4311
  6302  0026C2  EF65  F013         	goto	u4310
  6303  0026C6                     u4311:
  6304  0026C6  EF66  F013         	goto	l4410
  6305  0026CA                     u4310:
  6306  0026CA  8028               	bsf	___fldiv@bexp^0,0,c
  6307  0026CC                     l4410:
  6308  0026CC  5028               	movf	___fldiv@bexp^0,w,c
  6309  0026CE  B4D8               	btfsc	status,2,c
  6310  0026D0  EF6C  F013         	goto	u4321
  6311  0026D4  EF6E  F013         	goto	u4320
  6312  0026D8                     u4321:
  6313  0026D8  EF83  F013         	goto	l4420
  6314  0026DC                     u4320:
  6315  0026DC  2828               	incf	___fldiv@bexp^0,w,c
  6316  0026DE  A4D8               	btfss	status,2,c
  6317  0026E0  EF74  F013         	goto	u4331
  6318  0026E4  EF76  F013         	goto	u4330
  6319  0026E8                     u4331:
  6320  0026E8  EF7E  F013         	goto	l4416
  6321  0026EC                     u4330:
  6322  0026EC  0E00               	movlw	0
  6323  0026EE  6E11               	movwf	___fldiv@b^0,c
  6324  0026F0  0E00               	movlw	0
  6325  0026F2  6E12               	movwf	(___fldiv@b+1)^0,c
  6326  0026F4  0E00               	movlw	0
  6327  0026F6  6E13               	movwf	(___fldiv@b+2)^0,c
  6328  0026F8  0E00               	movlw	0
  6329  0026FA  6E14               	movwf	(___fldiv@b+3)^0,c
  6330  0026FC                     l4416:
  6331  0026FC  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6332  0026FE  0E00               	movlw	0
  6333  002700  6E14               	movwf	(___fldiv@b+3)^0,c
  6334  002702  EF8B  F013         	goto	l4422
  6335  002706                     l4420:
  6336  002706  0E00               	movlw	0
  6337  002708  6E11               	movwf	___fldiv@b^0,c
  6338  00270A  0E00               	movlw	0
  6339  00270C  6E12               	movwf	(___fldiv@b+1)^0,c
  6340  00270E  0E00               	movlw	0
  6341  002710  6E13               	movwf	(___fldiv@b+2)^0,c
  6342  002712  0E00               	movlw	0
  6343  002714  6E14               	movwf	(___fldiv@b+3)^0,c
  6344  002716                     l4422:
  6345  002716  5018               	movf	(___fldiv@a+3)^0,w,c
  6346  002718  0B80               	andlw	128
  6347  00271A  1A21               	xorwf	___fldiv@sign^0,f,c
  6348  00271C  5018               	movf	(___fldiv@a+3)^0,w,c
  6349  00271E  2418               	addwf	(___fldiv@a+3)^0,w,c
  6350  002720  6E29               	movwf	___fldiv@aexp^0,c
  6351  002722  AE17               	btfss	(___fldiv@a+2)^0,7,c
  6352  002724  EF96  F013         	goto	u4341
  6353  002728  EF98  F013         	goto	u4340
  6354  00272C                     u4341:
  6355  00272C  EF99  F013         	goto	l4430
  6356  002730                     u4340:
  6357  002730  8029               	bsf	___fldiv@aexp^0,0,c
  6358  002732                     l4430:
  6359  002732  5029               	movf	___fldiv@aexp^0,w,c
  6360  002734  B4D8               	btfsc	status,2,c
  6361  002736  EF9F  F013         	goto	u4351
  6362  00273A  EFA1  F013         	goto	u4350
  6363  00273E                     u4351:
  6364  00273E  EFB6  F013         	goto	l4440
  6365  002742                     u4350:
  6366  002742  2829               	incf	___fldiv@aexp^0,w,c
  6367  002744  A4D8               	btfss	status,2,c
  6368  002746  EFA7  F013         	goto	u4361
  6369  00274A  EFA9  F013         	goto	u4360
  6370  00274E                     u4361:
  6371  00274E  EFB1  F013         	goto	l4436
  6372  002752                     u4360:
  6373  002752  0E00               	movlw	0
  6374  002754  6E15               	movwf	___fldiv@a^0,c
  6375  002756  0E00               	movlw	0
  6376  002758  6E16               	movwf	(___fldiv@a+1)^0,c
  6377  00275A  0E00               	movlw	0
  6378  00275C  6E17               	movwf	(___fldiv@a+2)^0,c
  6379  00275E  0E00               	movlw	0
  6380  002760  6E18               	movwf	(___fldiv@a+3)^0,c
  6381  002762                     l4436:
  6382  002762  8E17               	bsf	(___fldiv@a+2)^0,7,c
  6383  002764  0E00               	movlw	0
  6384  002766  6E18               	movwf	(___fldiv@a+3)^0,c
  6385  002768  EFBE  F013         	goto	l4442
  6386  00276C                     l4440:
  6387  00276C  0E00               	movlw	0
  6388  00276E  6E15               	movwf	___fldiv@a^0,c
  6389  002770  0E00               	movlw	0
  6390  002772  6E16               	movwf	(___fldiv@a+1)^0,c
  6391  002774  0E00               	movlw	0
  6392  002776  6E17               	movwf	(___fldiv@a+2)^0,c
  6393  002778  0E00               	movlw	0
  6394  00277A  6E18               	movwf	(___fldiv@a+3)^0,c
  6395  00277C                     l4442:
  6396  00277C  5015               	movf	___fldiv@a^0,w,c
  6397  00277E  1016               	iorwf	(___fldiv@a+1)^0,w,c
  6398  002780  1017               	iorwf	(___fldiv@a+2)^0,w,c
  6399  002782  1018               	iorwf	(___fldiv@a+3)^0,w,c
  6400  002784  A4D8               	btfss	status,2,c
  6401  002786  EFC7  F013         	goto	u4371
  6402  00278A  EFC9  F013         	goto	u4370
  6403  00278E                     u4371:
  6404  00278E  EFE1  F013         	goto	l4454
  6405  002792                     u4370:
  6406  002792  0E00               	movlw	0
  6407  002794  6E11               	movwf	___fldiv@b^0,c
  6408  002796  0E00               	movlw	0
  6409  002798  6E12               	movwf	(___fldiv@b+1)^0,c
  6410  00279A  0E00               	movlw	0
  6411  00279C  6E13               	movwf	(___fldiv@b+2)^0,c
  6412  00279E  0E00               	movlw	0
  6413  0027A0  6E14               	movwf	(___fldiv@b+3)^0,c
  6414  0027A2  0E80               	movlw	128
  6415  0027A4  1213               	iorwf	(___fldiv@b+2)^0,f,c
  6416  0027A6  0E7F               	movlw	127
  6417  0027A8  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6418  0027AA                     l4448:
  6419  0027AA  5021               	movf	___fldiv@sign^0,w,c
  6420  0027AC  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6421  0027AE  C011  F011         	movff	___fldiv@b,?___fldiv
  6422  0027B2  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  6423  0027B6  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  6424  0027BA  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  6425  0027BE  EF24  F015         	goto	l1284
  6426  0027C2                     l4454:
  6427  0027C2  5028               	movf	___fldiv@bexp^0,w,c
  6428  0027C4  A4D8               	btfss	status,2,c
  6429  0027C6  EFE7  F013         	goto	u4381
  6430  0027CA  EFE9  F013         	goto	u4380
  6431  0027CE                     u4381:
  6432  0027CE  EFF3  F013         	goto	l4462
  6433  0027D2                     u4380:
  6434  0027D2  0E00               	movlw	0
  6435  0027D4  6E11               	movwf	?___fldiv^0,c
  6436  0027D6  0E00               	movlw	0
  6437  0027D8  6E12               	movwf	(?___fldiv+1)^0,c
  6438  0027DA  0E00               	movlw	0
  6439  0027DC  6E13               	movwf	(?___fldiv+2)^0,c
  6440  0027DE  0E00               	movlw	0
  6441  0027E0  6E14               	movwf	(?___fldiv+3)^0,c
  6442  0027E2  EF24  F015         	goto	l1284
  6443  0027E6                     l4462:
  6444  0027E6  5029               	movf	___fldiv@aexp^0,w,c
  6445  0027E8  C028  F019         	movff	___fldiv@bexp,??___fldiv
  6446  0027EC  6A1A               	clrf	(??___fldiv+1)^0,c
  6447  0027EE  5E19               	subwf	??___fldiv^0,f,c
  6448  0027F0  0E00               	movlw	0
  6449  0027F2  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  6450  0027F4  0E7F               	movlw	127
  6451  0027F6  2419               	addwf	??___fldiv^0,w,c
  6452  0027F8  6E22               	movwf	___fldiv@new_exp^0,c
  6453  0027FA  0E00               	movlw	0
  6454  0027FC  201A               	addwfc	(??___fldiv+1)^0,w,c
  6455  0027FE  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6456  002800  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  6457  002804  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  6458  002808  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  6459  00280C  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  6460  002810  0E00               	movlw	0
  6461  002812  6E11               	movwf	___fldiv@b^0,c
  6462  002814  0E00               	movlw	0
  6463  002816  6E12               	movwf	(___fldiv@b+1)^0,c
  6464  002818  0E00               	movlw	0
  6465  00281A  6E13               	movwf	(___fldiv@b+2)^0,c
  6466  00281C  0E00               	movlw	0
  6467  00281E  6E14               	movwf	(___fldiv@b+3)^0,c
  6468  002820  0E00               	movlw	0
  6469  002822  6E24               	movwf	___fldiv@grs^0,c
  6470  002824  0E00               	movlw	0
  6471  002826  6E25               	movwf	(___fldiv@grs+1)^0,c
  6472  002828  0E00               	movlw	0
  6473  00282A  6E26               	movwf	(___fldiv@grs+2)^0,c
  6474  00282C  0E00               	movlw	0
  6475  00282E  6E27               	movwf	(___fldiv@grs+3)^0,c
  6476  002830  0E00               	movlw	0
  6477  002832  6E29               	movwf	___fldiv@aexp^0,c
  6478  002834  EF54  F014         	goto	l1286
  6479  002838                     l4472:
  6480  002838  5029               	movf	___fldiv@aexp^0,w,c
  6481  00283A  B4D8               	btfsc	status,2,c
  6482  00283C  EF22  F014         	goto	u4391
  6483  002840  EF24  F014         	goto	u4390
  6484  002844                     u4391:
  6485  002844  EF3B  F014         	goto	l4480
  6486  002848                     u4390:
  6487  002848  90D8               	bcf	status,0,c
  6488  00284A  361D               	rlcf	___fldiv@rem^0,f,c
  6489  00284C  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  6490  00284E  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  6491  002850  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  6492  002852  90D8               	bcf	status,0,c
  6493  002854  3611               	rlcf	___fldiv@b^0,f,c
  6494  002856  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6495  002858  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6496  00285A  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6497  00285C  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6498  00285E  EF33  F014         	goto	u4401
  6499  002862  EF35  F014         	goto	u4400
  6500  002866                     u4401:
  6501  002866  EF36  F014         	goto	l1289
  6502  00286A                     u4400:
  6503  00286A  8011               	bsf	___fldiv@b^0,0,c
  6504  00286C                     l1289:
  6505  00286C  90D8               	bcf	status,0,c
  6506  00286E  3624               	rlcf	___fldiv@grs^0,f,c
  6507  002870  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6508  002872  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6509  002874  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6510  002876                     l4480:
  6511  002876  5015               	movf	___fldiv@a^0,w,c
  6512  002878  5C1D               	subwf	___fldiv@rem^0,w,c
  6513  00287A  5016               	movf	(___fldiv@a+1)^0,w,c
  6514  00287C  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  6515  00287E  5017               	movf	(___fldiv@a+2)^0,w,c
  6516  002880  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  6517  002882  5018               	movf	(___fldiv@a+3)^0,w,c
  6518  002884  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  6519  002886  A0D8               	btfss	status,0,c
  6520  002888  EF48  F014         	goto	u4411
  6521  00288C  EF4A  F014         	goto	u4410
  6522  002890                     u4411:
  6523  002890  EF53  F014         	goto	l4486
  6524  002894                     u4410:
  6525  002894  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  6526  002896  5015               	movf	___fldiv@a^0,w,c
  6527  002898  5E1D               	subwf	___fldiv@rem^0,f,c
  6528  00289A  5016               	movf	(___fldiv@a+1)^0,w,c
  6529  00289C  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  6530  00289E  5017               	movf	(___fldiv@a+2)^0,w,c
  6531  0028A0  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  6532  0028A2  5018               	movf	(___fldiv@a+3)^0,w,c
  6533  0028A4  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  6534  0028A6                     l4486:
  6535  0028A6  2A29               	incf	___fldiv@aexp^0,f,c
  6536  0028A8                     l1286:
  6537  0028A8  0E19               	movlw	25
  6538  0028AA  6429               	cpfsgt	___fldiv@aexp^0,c
  6539  0028AC  EF5A  F014         	goto	u4421
  6540  0028B0  EF5C  F014         	goto	u4420
  6541  0028B4                     u4421:
  6542  0028B4  EF1C  F014         	goto	l4472
  6543  0028B8                     u4420:
  6544  0028B8  501D               	movf	___fldiv@rem^0,w,c
  6545  0028BA  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  6546  0028BC  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  6547  0028BE  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  6548  0028C0  B4D8               	btfsc	status,2,c
  6549  0028C2  EF65  F014         	goto	u4431
  6550  0028C6  EF67  F014         	goto	u4430
  6551  0028CA                     u4431:
  6552  0028CA  EF7F  F014         	goto	l4498
  6553  0028CE                     u4430:
  6554  0028CE  8024               	bsf	___fldiv@grs^0,0,c
  6555  0028D0  EF7F  F014         	goto	l4498
  6556  0028D4                     l4492:
  6557  0028D4  90D8               	bcf	status,0,c
  6558  0028D6  3611               	rlcf	___fldiv@b^0,f,c
  6559  0028D8  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6560  0028DA  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6561  0028DC  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6562  0028DE  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6563  0028E0  EF74  F014         	goto	u4441
  6564  0028E4  EF76  F014         	goto	u4440
  6565  0028E8                     u4441:
  6566  0028E8  EF77  F014         	goto	l1295
  6567  0028EC                     u4440:
  6568  0028EC  8011               	bsf	___fldiv@b^0,0,c
  6569  0028EE                     l1295:
  6570  0028EE  90D8               	bcf	status,0,c
  6571  0028F0  3624               	rlcf	___fldiv@grs^0,f,c
  6572  0028F2  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6573  0028F4  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6574  0028F6  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6575  0028F8  0622               	decf	___fldiv@new_exp^0,f,c
  6576  0028FA  A0D8               	btfss	status,0,c
  6577  0028FC  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  6578  0028FE                     l4498:
  6579  0028FE  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6580  002900  EF84  F014         	goto	u4451
  6581  002904  EF86  F014         	goto	u4450
  6582  002908                     u4451:
  6583  002908  EF6A  F014         	goto	l4492
  6584  00290C                     u4450:
  6585  00290C  0E00               	movlw	0
  6586  00290E  6E29               	movwf	___fldiv@aexp^0,c
  6587  002910  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6588  002912  EF8D  F014         	goto	u4461
  6589  002916  EF8F  F014         	goto	u4460
  6590  00291A                     u4461:
  6591  00291A  EFB3  F014         	goto	l1297
  6592  00291E                     u4460:
  6593  00291E  0EFF               	movlw	255
  6594  002920  1424               	andwf	___fldiv@grs^0,w,c
  6595  002922  6E19               	movwf	??___fldiv^0,c
  6596  002924  0EFF               	movlw	255
  6597  002926  1425               	andwf	(___fldiv@grs+1)^0,w,c
  6598  002928  6E1A               	movwf	(??___fldiv+1)^0,c
  6599  00292A  0EFF               	movlw	255
  6600  00292C  1426               	andwf	(___fldiv@grs+2)^0,w,c
  6601  00292E  6E1B               	movwf	(??___fldiv+2)^0,c
  6602  002930  0E7F               	movlw	127
  6603  002932  1427               	andwf	(___fldiv@grs+3)^0,w,c
  6604  002934  6E1C               	movwf	(??___fldiv+3)^0,c
  6605  002936  5019               	movf	??___fldiv^0,w,c
  6606  002938  101A               	iorwf	(??___fldiv+1)^0,w,c
  6607  00293A  101B               	iorwf	(??___fldiv+2)^0,w,c
  6608  00293C  101C               	iorwf	(??___fldiv+3)^0,w,c
  6609  00293E  B4D8               	btfsc	status,2,c
  6610  002940  EFA4  F014         	goto	u4471
  6611  002944  EFA6  F014         	goto	u4470
  6612  002948                     u4471:
  6613  002948  EFAA  F014         	goto	l1298
  6614  00294C                     u4470:
  6615  00294C                     l4506:
  6616  00294C  0E01               	movlw	1
  6617  00294E  6E29               	movwf	___fldiv@aexp^0,c
  6618  002950  EFB3  F014         	goto	l1297
  6619  002954                     l1298:
  6620  002954  A011               	btfss	___fldiv@b^0,0,c
  6621  002956  EFAF  F014         	goto	u4481
  6622  00295A  EFB1  F014         	goto	u4480
  6623  00295E                     u4481:
  6624  00295E  EFB3  F014         	goto	l1297
  6625  002962                     u4480:
  6626  002962  EFA6  F014         	goto	l4506
  6627  002966                     l1297:
  6628  002966  5029               	movf	___fldiv@aexp^0,w,c
  6629  002968  B4D8               	btfsc	status,2,c
  6630  00296A  EFB9  F014         	goto	u4491
  6631  00296E  EFBB  F014         	goto	u4490
  6632  002972                     u4491:
  6633  002972  EFDF  F014         	goto	l4518
  6634  002976                     u4490:
  6635  002976  0E01               	movlw	1
  6636  002978  2611               	addwf	___fldiv@b^0,f,c
  6637  00297A  0E00               	movlw	0
  6638  00297C  2212               	addwfc	(___fldiv@b+1)^0,f,c
  6639  00297E  2213               	addwfc	(___fldiv@b+2)^0,f,c
  6640  002980  2214               	addwfc	(___fldiv@b+3)^0,f,c
  6641  002982  A014               	btfss	(___fldiv@b+3)^0,0,c
  6642  002984  EFC6  F014         	goto	u4501
  6643  002988  EFC8  F014         	goto	u4500
  6644  00298C                     u4501:
  6645  00298C  EFDF  F014         	goto	l4518
  6646  002990                     u4500:
  6647  002990  C011  F019         	movff	___fldiv@b,??___fldiv
  6648  002994  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  6649  002998  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  6650  00299C  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  6651  0029A0  341C               	rlcf	(??___fldiv+3)^0,w,c
  6652  0029A2  321C               	rrcf	(??___fldiv+3)^0,f,c
  6653  0029A4  321B               	rrcf	(??___fldiv+2)^0,f,c
  6654  0029A6  321A               	rrcf	(??___fldiv+1)^0,f,c
  6655  0029A8  3219               	rrcf	??___fldiv^0,f,c
  6656  0029AA  C019  F011         	movff	??___fldiv,___fldiv@b
  6657  0029AE  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  6658  0029B2  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  6659  0029B6  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  6660  0029BA  4A22               	infsnz	___fldiv@new_exp^0,f,c
  6661  0029BC  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  6662  0029BE                     l4518:
  6663  0029BE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6664  0029C0  EFEA  F014         	goto	u4511
  6665  0029C4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6666  0029C6  E108               	bnz	u4510
  6667  0029C8  2822               	incf	___fldiv@new_exp^0,w,c
  6668  0029CA  A0D8               	btfss	status,0,c
  6669  0029CC  EFEA  F014         	goto	u4511
  6670  0029D0  EFEC  F014         	goto	u4510
  6671  0029D4                     u4511:
  6672  0029D4  EFF7  F014         	goto	l4522
  6673  0029D8                     u4510:
  6674  0029D8  0E00               	movlw	0
  6675  0029DA  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6676  0029DC  6822               	setf	___fldiv@new_exp^0,c
  6677  0029DE  0E00               	movlw	0
  6678  0029E0  6E11               	movwf	___fldiv@b^0,c
  6679  0029E2  0E00               	movlw	0
  6680  0029E4  6E12               	movwf	(___fldiv@b+1)^0,c
  6681  0029E6  0E00               	movlw	0
  6682  0029E8  6E13               	movwf	(___fldiv@b+2)^0,c
  6683  0029EA  0E00               	movlw	0
  6684  0029EC  6E14               	movwf	(___fldiv@b+3)^0,c
  6685  0029EE                     l4522:
  6686  0029EE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6687  0029F0  EF04  F015         	goto	u4520
  6688  0029F4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6689  0029F6  E106               	bnz	u4521
  6690  0029F8  0422               	decf	___fldiv@new_exp^0,w,c
  6691  0029FA  B0D8               	btfsc	status,0,c
  6692  0029FC  EF02  F015         	goto	u4521
  6693  002A00  EF04  F015         	goto	u4520
  6694  002A04                     u4521:
  6695  002A04  EF12  F015         	goto	l4526
  6696  002A08                     u4520:
  6697  002A08  0E00               	movlw	0
  6698  002A0A  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6699  002A0C  0E00               	movlw	0
  6700  002A0E  6E22               	movwf	___fldiv@new_exp^0,c
  6701  002A10  0E00               	movlw	0
  6702  002A12  6E11               	movwf	___fldiv@b^0,c
  6703  002A14  0E00               	movlw	0
  6704  002A16  6E12               	movwf	(___fldiv@b+1)^0,c
  6705  002A18  0E00               	movlw	0
  6706  002A1A  6E13               	movwf	(___fldiv@b+2)^0,c
  6707  002A1C  0E00               	movlw	0
  6708  002A1E  6E14               	movwf	(___fldiv@b+3)^0,c
  6709  002A20  0E00               	movlw	0
  6710  002A22  6E21               	movwf	___fldiv@sign^0,c
  6711  002A24                     l4526:
  6712  002A24  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  6713  002A28  A028               	btfss	___fldiv@bexp^0,0,c
  6714  002A2A  EF19  F015         	goto	u4531
  6715  002A2E  EF1B  F015         	goto	u4530
  6716  002A32                     u4531:
  6717  002A32  EF1E  F015         	goto	l4532
  6718  002A36                     u4530:
  6719  002A36  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6720  002A38  EF1F  F015         	goto	l4534
  6721  002A3C                     l4532:
  6722  002A3C  9E13               	bcf	(___fldiv@b+2)^0,7,c
  6723  002A3E                     l4534:
  6724  002A3E  90D8               	bcf	status,0,c
  6725  002A40  3028               	rrcf	___fldiv@bexp^0,w,c
  6726  002A42  6E14               	movwf	(___fldiv@b+3)^0,c
  6727  002A44  EFD5  F013         	goto	l4448
  6728  002A48                     l1284:
  6729  002A48  0012               	return		;funcret
  6730  002A4A                     __end_of___fldiv:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function _color_data_collection *****************
  6734 ;; Defined at:
  6735 ;;		line 198 in file "color.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  m               2  127[BANK0 ] PTR struct color_rgb
  6738 ;;		 -> main@rgb(8), 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  x               2  137[BANK0 ] int 
  6741 ;;  k               2  135[BANK0 ] int 
  6742 ;;  j               2  133[BANK0 ] int 
  6743 ;;  i               2  131[BANK0 ] int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;Total ram usage:       12 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 11
  6760 ;; This function calls:
  6761 ;;		_LED_B
  6762 ;;		_LED_C
  6763 ;;		_LED_G
  6764 ;;		_LED_R
  6765 ;;		_color_display
  6766 ;;		_color_predict
  6767 ;;		_read_color
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text21
  6774  003744                     __ptext21:
  6775                           	callstack 0
  6776  003744                     _color_data_collection:
  6777                           	callstack 19
  6778  003744                     
  6779                           ;color.c: 200:     int i = 0; int j = 0; int k = 0; int x = 0;
  6780  003744  0E00               	movlw	0
  6781  003746  0100               	movlb	0	; () banked
  6782  003748  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  6783  00374A  0E00               	movlw	0
  6784  00374C  6FE3               	movwf	color_data_collection@i& (0+255),b
  6785  00374E  0E00               	movlw	0
  6786  003750  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  6787  003752  0E00               	movlw	0
  6788  003754  6FE7               	movwf	color_data_collection@k& (0+255),b
  6789  003756  0E00               	movlw	0
  6790  003758  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  6791  00375A  0E00               	movlw	0
  6792  00375C  6FE9               	movwf	color_data_collection@x& (0+255),b
  6793                           
  6794                           ;color.c: 201:     for (i = 0; i <5; ++i){
  6795  00375E  0E00               	movlw	0
  6796  003760  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  6797  003762  0E00               	movlw	0
  6798  003764  6FE3               	movwf	color_data_collection@i& (0+255),b
  6799  003766                     l5886:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;color.c: 202:         LED_C();
  6803  003766  EC6C  F02A         	call	_LED_C	;wreg free
  6804  00376A                     
  6805                           ;color.c: 203:         read_color(m);
  6806  00376A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6807  00376E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6808  003772  EC16  F027         	call	_read_color	;wreg free
  6809  003776                     
  6810                           ;color.c: 204:         color_display(m);
  6811  003776  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6812  00377A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6813  00377E  ECAD  F026         	call	_color_display	;wreg free
  6814  003782                     
  6815                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6816  003782  0E09               	movlw	9
  6817  003784  0100               	movlb	0	; () banked
  6818  003786  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  6819  003788  0E1E               	movlw	30
  6820  00378A  6FE1               	movwf	??_color_data_collection& (0+255),b
  6821  00378C  0EE4               	movlw	228
  6822  00378E                     u6687:
  6823  00378E  2EE8               	decfsz	wreg,f,c
  6824  003790  D7FE               	bra	u6687
  6825  003792  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  6826  003794  D7FC               	bra	u6687
  6827  003796  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  6828  003798  D7FA               	bra	u6687
  6829  00379A  F000               	nop	
  6830  00379C                     
  6831                           ;color.c: 206:     }
  6832  00379C  0100               	movlb	0	; () banked
  6833  00379E  4BE3               	infsnz	color_data_collection@i& (0+255),f,b
  6834  0037A0  2BE4               	incf	(color_data_collection@i+1)& (0+255),f,b
  6835  0037A2                     
  6836                           ; BSR set to: 0
  6837  0037A2  BFE4               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  6838  0037A4  EFDD  F01B         	goto	u6401
  6839  0037A8  51E4               	movf	(color_data_collection@i+1)& (0+255),w,b
  6840  0037AA  E109               	bnz	u6400
  6841  0037AC  0E05               	movlw	5
  6842  0037AE  5DE3               	subwf	color_data_collection@i& (0+255),w,b
  6843  0037B0  A0D8               	btfss	status,0,c
  6844  0037B2  EFDD  F01B         	goto	u6401
  6845  0037B6  EFDF  F01B         	goto	u6400
  6846  0037BA                     u6401:
  6847  0037BA  EFB3  F01B         	goto	l5886
  6848  0037BE                     u6400:
  6849  0037BE                     
  6850                           ; BSR set to: 0
  6851                           ;color.c: 207:     color_predict(00000);
  6852  0037BE  0E00               	movlw	0
  6853  0037C0  ECE9  F029         	call	_color_predict
  6854  0037C4                     
  6855                           ;color.c: 208:     for (j = 0; j < 5; ++j){
  6856  0037C4  0E00               	movlw	0
  6857  0037C6  0100               	movlb	0	; () banked
  6858  0037C8  6FE6               	movwf	(color_data_collection@j+1)& (0+255),b
  6859  0037CA  0E00               	movlw	0
  6860  0037CC  6FE5               	movwf	color_data_collection@j& (0+255),b
  6861  0037CE                     l5906:
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;color.c: 209:         LED_R();
  6865  0037CE  EC4C  F02A         	call	_LED_R	;wreg free
  6866  0037D2                     
  6867                           ;color.c: 210:         read_color(m);
  6868  0037D2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6869  0037D6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6870  0037DA  EC16  F027         	call	_read_color	;wreg free
  6871  0037DE                     
  6872                           ;color.c: 211:         color_display(m);
  6873  0037DE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6874  0037E2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6875  0037E6  ECAD  F026         	call	_color_display	;wreg free
  6876  0037EA                     
  6877                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6878  0037EA  0E09               	movlw	9
  6879  0037EC  0100               	movlb	0	; () banked
  6880  0037EE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  6881  0037F0  0E1E               	movlw	30
  6882  0037F2  6FE1               	movwf	??_color_data_collection& (0+255),b
  6883  0037F4  0EE4               	movlw	228
  6884  0037F6                     u6697:
  6885  0037F6  2EE8               	decfsz	wreg,f,c
  6886  0037F8  D7FE               	bra	u6697
  6887  0037FA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  6888  0037FC  D7FC               	bra	u6697
  6889  0037FE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  6890  003800  D7FA               	bra	u6697
  6891  003802  F000               	nop	
  6892  003804                     
  6893                           ;color.c: 213:     }
  6894  003804  0100               	movlb	0	; () banked
  6895  003806  4BE5               	infsnz	color_data_collection@j& (0+255),f,b
  6896  003808  2BE6               	incf	(color_data_collection@j+1)& (0+255),f,b
  6897  00380A                     
  6898                           ; BSR set to: 0
  6899  00380A  BFE6               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  6900  00380C  EF11  F01C         	goto	u6411
  6901  003810  51E6               	movf	(color_data_collection@j+1)& (0+255),w,b
  6902  003812  E109               	bnz	u6410
  6903  003814  0E05               	movlw	5
  6904  003816  5DE5               	subwf	color_data_collection@j& (0+255),w,b
  6905  003818  A0D8               	btfss	status,0,c
  6906  00381A  EF11  F01C         	goto	u6411
  6907  00381E  EF13  F01C         	goto	u6410
  6908  003822                     u6411:
  6909  003822  EFE7  F01B         	goto	l5906
  6910  003826                     u6410:
  6911  003826                     
  6912                           ; BSR set to: 0
  6913                           ;color.c: 214:     color_predict(00000);
  6914  003826  0E00               	movlw	0
  6915  003828  ECE9  F029         	call	_color_predict
  6916  00382C                     
  6917                           ;color.c: 215:     for (k = 0; k < 5; ++k){
  6918  00382C  0E00               	movlw	0
  6919  00382E  0100               	movlb	0	; () banked
  6920  003830  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  6921  003832  0E00               	movlw	0
  6922  003834  6FE7               	movwf	color_data_collection@k& (0+255),b
  6923  003836                     l5926:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;color.c: 216:         LED_G();
  6927  003836  EC5C  F02A         	call	_LED_G	;wreg free
  6928  00383A                     
  6929                           ;color.c: 217:         read_color(m);
  6930  00383A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6931  00383E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6932  003842  EC16  F027         	call	_read_color	;wreg free
  6933  003846                     
  6934                           ;color.c: 218:         color_display(m);
  6935  003846  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6936  00384A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6937  00384E  ECAD  F026         	call	_color_display	;wreg free
  6938  003852                     
  6939                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6940  003852  0E09               	movlw	9
  6941  003854  0100               	movlb	0	; () banked
  6942  003856  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  6943  003858  0E1E               	movlw	30
  6944  00385A  6FE1               	movwf	??_color_data_collection& (0+255),b
  6945  00385C  0EE4               	movlw	228
  6946  00385E                     u6707:
  6947  00385E  2EE8               	decfsz	wreg,f,c
  6948  003860  D7FE               	bra	u6707
  6949  003862  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  6950  003864  D7FC               	bra	u6707
  6951  003866  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  6952  003868  D7FA               	bra	u6707
  6953  00386A  F000               	nop	
  6954  00386C                     
  6955                           ;color.c: 220:     }
  6956  00386C  0100               	movlb	0	; () banked
  6957  00386E  4BE7               	infsnz	color_data_collection@k& (0+255),f,b
  6958  003870  2BE8               	incf	(color_data_collection@k+1)& (0+255),f,b
  6959  003872                     
  6960                           ; BSR set to: 0
  6961  003872  BFE8               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  6962  003874  EF45  F01C         	goto	u6421
  6963  003878  51E8               	movf	(color_data_collection@k+1)& (0+255),w,b
  6964  00387A  E109               	bnz	u6420
  6965  00387C  0E05               	movlw	5
  6966  00387E  5DE7               	subwf	color_data_collection@k& (0+255),w,b
  6967  003880  A0D8               	btfss	status,0,c
  6968  003882  EF45  F01C         	goto	u6421
  6969  003886  EF47  F01C         	goto	u6420
  6970  00388A                     u6421:
  6971  00388A  EF1B  F01C         	goto	l5926
  6972  00388E                     u6420:
  6973  00388E                     
  6974                           ; BSR set to: 0
  6975                           ;color.c: 221:     color_predict(00000);
  6976  00388E  0E00               	movlw	0
  6977  003890  ECE9  F029         	call	_color_predict
  6978  003894                     
  6979                           ;color.c: 222:     for (x = 0; x < 5; ++x){
  6980  003894  0E00               	movlw	0
  6981  003896  0100               	movlb	0	; () banked
  6982  003898  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  6983  00389A  0E00               	movlw	0
  6984  00389C  6FE9               	movwf	color_data_collection@x& (0+255),b
  6985  00389E                     l5946:
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;color.c: 223:         LED_B();
  6989  00389E  EC7C  F02A         	call	_LED_B	;wreg free
  6990  0038A2                     
  6991                           ;color.c: 224:         read_color(m);
  6992  0038A2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6993  0038A6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6994  0038AA  EC16  F027         	call	_read_color	;wreg free
  6995  0038AE                     
  6996                           ;color.c: 225:         color_display(m);
  6997  0038AE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6998  0038B2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6999  0038B6  ECAD  F026         	call	_color_display	;wreg free
  7000  0038BA                     
  7001                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  7002  0038BA  0E09               	movlw	9
  7003  0038BC  0100               	movlb	0	; () banked
  7004  0038BE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  7005  0038C0  0E1E               	movlw	30
  7006  0038C2  6FE1               	movwf	??_color_data_collection& (0+255),b
  7007  0038C4  0EE4               	movlw	228
  7008  0038C6                     u6717:
  7009  0038C6  2EE8               	decfsz	wreg,f,c
  7010  0038C8  D7FE               	bra	u6717
  7011  0038CA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  7012  0038CC  D7FC               	bra	u6717
  7013  0038CE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  7014  0038D0  D7FA               	bra	u6717
  7015  0038D2  F000               	nop	
  7016  0038D4                     
  7017                           ;color.c: 227:     }
  7018  0038D4  0100               	movlb	0	; () banked
  7019  0038D6  4BE9               	infsnz	color_data_collection@x& (0+255),f,b
  7020  0038D8  2BEA               	incf	(color_data_collection@x+1)& (0+255),f,b
  7021  0038DA                     
  7022                           ; BSR set to: 0
  7023  0038DA  BFEA               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  7024  0038DC  EF79  F01C         	goto	u6431
  7025  0038E0  51EA               	movf	(color_data_collection@x+1)& (0+255),w,b
  7026  0038E2  E109               	bnz	u6430
  7027  0038E4  0E05               	movlw	5
  7028  0038E6  5DE9               	subwf	color_data_collection@x& (0+255),w,b
  7029  0038E8  A0D8               	btfss	status,0,c
  7030  0038EA  EF79  F01C         	goto	u6431
  7031  0038EE  EF7B  F01C         	goto	u6430
  7032  0038F2                     u6431:
  7033  0038F2  EF4F  F01C         	goto	l5946
  7034  0038F6                     u6430:
  7035  0038F6                     
  7036                           ; BSR set to: 0
  7037                           ;color.c: 228:     color_predict(1);
  7038  0038F6  0E01               	movlw	1
  7039  0038F8  ECE9  F029         	call	_color_predict
  7040  0038FC                     
  7041                           ;color.c: 229:     LED_C();
  7042  0038FC  EC6C  F02A         	call	_LED_C	;wreg free
  7043  003900  0012               	return		;funcret
  7044  003902                     __end_of_color_data_collection:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function _read_color *****************
  7048 ;; Defined at:
  7049 ;;		line 145 in file "color.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  m               2   13[COMRAM] PTR struct color_rgb
  7052 ;;		 -> main@rgb(8), 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        2 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 5
  7071 ;; This function calls:
  7072 ;;		_color_read_Blue
  7073 ;;		_color_read_Clear
  7074 ;;		_color_read_Green
  7075 ;;		_color_read_Red
  7076 ;; This function is called by:
  7077 ;;		_color_data_collection
  7078 ;;		_detect_color
  7079 ;;		_main
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text22
  7084  004E2C                     __ptext22:
  7085                           	callstack 0
  7086  004E2C                     _read_color:
  7087                           	callstack 23
  7088  004E2C                     
  7089                           ;color.c: 145: void read_color (struct color_rgb *m);color.c: 146: {;color.c: 147:     m
      +                          ->R = color_read_Red();
  7090  004E2C  EC9A  F027         	call	_color_read_Red	;wreg free
  7091  004E30  C00E  FFD9         	movff	read_color@m,fsr2l
  7092  004E34  C00F  FFDA         	movff	read_color@m+1,fsr2h
  7093  004E38  C007  FFDE         	movff	?_color_read_Red,postinc2
  7094  004E3C  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  7095                           
  7096                           ;color.c: 148:     m->B = color_read_Blue();
  7097  004E40  EC12  F028         	call	_color_read_Blue	;wreg free
  7098  004E44  EE20 F004          	lfsr	2,4
  7099  004E48  500E               	movf	read_color@m^0,w,c
  7100  004E4A  26D9               	addwf	fsr2l,f,c
  7101  004E4C  500F               	movf	(read_color@m+1)^0,w,c
  7102  004E4E  22DA               	addwfc	fsr2h,f,c
  7103  004E50  C007  FFDE         	movff	?_color_read_Blue,postinc2
  7104  004E54  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  7105                           
  7106                           ;color.c: 149:     m->G = color_read_Green();
  7107  004E58  ECC2  F027         	call	_color_read_Green	;wreg free
  7108  004E5C  EE20 F002          	lfsr	2,2
  7109  004E60  500E               	movf	read_color@m^0,w,c
  7110  004E62  26D9               	addwf	fsr2l,f,c
  7111  004E64  500F               	movf	(read_color@m+1)^0,w,c
  7112  004E66  22DA               	addwfc	fsr2h,f,c
  7113  004E68  C007  FFDE         	movff	?_color_read_Green,postinc2
  7114  004E6C  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  7115                           
  7116                           ;color.c: 150:     m->C = color_read_Clear();
  7117  004E70  ECEA  F027         	call	_color_read_Clear	;wreg free
  7118  004E74  EE20 F006          	lfsr	2,6
  7119  004E78  500E               	movf	read_color@m^0,w,c
  7120  004E7A  26D9               	addwf	fsr2l,f,c
  7121  004E7C  500F               	movf	(read_color@m+1)^0,w,c
  7122  004E7E  22DA               	addwfc	fsr2h,f,c
  7123  004E80  C007  FFDE         	movff	?_color_read_Clear,postinc2
  7124  004E84  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  7125  004E88  0012               	return		;funcret
  7126  004E8A                     __end_of_read_color:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _color_predict *****************
  7130 ;; Defined at:
  7131 ;;		line 248 in file "color.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  color           1    wreg     unsigned char 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  color           1  125[BANK0 ] unsigned char 
  7136 ;;  buf           100   25[BANK0 ] unsigned char [100]
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:      101 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 10
  7153 ;; This function calls:
  7154 ;;		_sendStringSerial4
  7155 ;;		_sprintf
  7156 ;; This function is called by:
  7157 ;;		_color_data_collection
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text23
  7162  0053D2                     __ptext23:
  7163                           	callstack 0
  7164  0053D2                     _color_predict:
  7165                           	callstack 19
  7166                           
  7167                           ;incstack = 0
  7168                           ;color_predict@color stored from wreg
  7169  0053D2  0100               	movlb	0	; () banked
  7170  0053D4  6FDD               	movwf	color_predict@color& (0+255),b
  7171  0053D6                     
  7172                           ;color.c: 248: void color_predict(unsigned char color);color.c: 249: {;color.c: 250:    
      +                           char buf[100];;color.c: 251:     sprintf(buf,"\t%d\r\n", color);
  7173  0053D6  0E79               	movlw	low color_predict@buf
  7174  0053D8  0100               	movlb	0	; () banked
  7175  0053DA  6F60               	movwf	sprintf@s& (0+255),b
  7176  0053DC  0E00               	movlw	high color_predict@buf
  7177  0053DE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7178  0053E0  0E0D               	movlw	low (STR_1+8)
  7179  0053E2  6F62               	movwf	sprintf@fmt& (0+255),b
  7180  0053E4  0E0E               	movlw	high (STR_1+8)
  7181  0053E6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7182  0053E8  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  7183  0053EC  6B65               	clrf	(?_sprintf+5)& (0+255),b
  7184  0053EE  EC71  F027         	call	_sprintf	;wreg free
  7185  0053F2                     
  7186                           ;color.c: 252:     sendStringSerial4(buf);
  7187  0053F2  0E79               	movlw	low color_predict@buf
  7188  0053F4  6E04               	movwf	sendStringSerial4@string^0,c
  7189  0053F6  0E00               	movlw	high color_predict@buf
  7190  0053F8  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  7191  0053FA  ECD1  F029         	call	_sendStringSerial4	;wreg free
  7192  0053FE  0012               	return		;funcret
  7193  005400                     __end_of_color_predict:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _color_display *****************
  7197 ;; Defined at:
  7198 ;;		line 232 in file "color.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  7201 ;;		 -> main@rgb(8), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  buf           100   27[BANK0 ] unsigned char [100]
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Totals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;Total ram usage:      102 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; Hardware stack levels required when called: 10
  7220 ;; This function calls:
  7221 ;;		_sendStringSerial4
  7222 ;;		_sprintf
  7223 ;; This function is called by:
  7224 ;;		_color_data_collection
  7225 ;;		_main
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text24
  7230  004D5A                     __ptext24:
  7231                           	callstack 0
  7232  004D5A                     _color_display:
  7233                           	callstack 20
  7234  004D5A                     
  7235                           ;color.c: 232: void color_display(struct color_rgb *m);color.c: 233: {;color.c: 234:    
      +                           char buf[100];;color.c: 235:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  7236  004D5A  0E7B               	movlw	low color_display@buf
  7237  004D5C  0100               	movlb	0	; () banked
  7238  004D5E  6F60               	movwf	sprintf@s& (0+255),b
  7239  004D60  0E00               	movlw	high color_display@buf
  7240  004D62  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7241  004D64  0E05               	movlw	low STR_1
  7242  004D66  6F62               	movwf	sprintf@fmt& (0+255),b
  7243  004D68  0E0E               	movlw	high STR_1
  7244  004D6A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7245  004D6C  C079  FFD9         	movff	color_display@m,fsr2l
  7246  004D70  C07A  FFDA         	movff	color_display@m+1,fsr2h
  7247  004D74  CFDE F064          	movff	postinc2,?_sprintf+4
  7248  004D78  CFDD F065          	movff	postdec2,?_sprintf+5
  7249  004D7C  EE20 F002          	lfsr	2,2
  7250  004D80  5179               	movf	color_display@m& (0+255),w,b
  7251  004D82  26D9               	addwf	fsr2l,f,c
  7252  004D84  517A               	movf	(color_display@m+1)& (0+255),w,b
  7253  004D86  22DA               	addwfc	fsr2h,f,c
  7254  004D88  CFDE F066          	movff	postinc2,?_sprintf+6
  7255  004D8C  CFDD F067          	movff	postdec2,?_sprintf+7
  7256  004D90  EE20 F004          	lfsr	2,4
  7257  004D94  5179               	movf	color_display@m& (0+255),w,b
  7258  004D96  26D9               	addwf	fsr2l,f,c
  7259  004D98  517A               	movf	(color_display@m+1)& (0+255),w,b
  7260  004D9A  22DA               	addwfc	fsr2h,f,c
  7261  004D9C  CFDE F068          	movff	postinc2,?_sprintf+8
  7262  004DA0  CFDD F069          	movff	postdec2,?_sprintf+9
  7263  004DA4  EE20 F006          	lfsr	2,6
  7264  004DA8  5179               	movf	color_display@m& (0+255),w,b
  7265  004DAA  26D9               	addwf	fsr2l,f,c
  7266  004DAC  517A               	movf	(color_display@m+1)& (0+255),w,b
  7267  004DAE  22DA               	addwfc	fsr2h,f,c
  7268  004DB0  CFDE F06A          	movff	postinc2,?_sprintf+10
  7269  004DB4  CFDD F06B          	movff	postdec2,?_sprintf+11
  7270  004DB8  EC71  F027         	call	_sprintf	;wreg free
  7271  004DBC                     
  7272                           ;color.c: 236:     sendStringSerial4(buf);
  7273  004DBC  0E7B               	movlw	low color_display@buf
  7274  004DBE  6E04               	movwf	sendStringSerial4@string^0,c
  7275  004DC0  0E00               	movlw	high color_display@buf
  7276  004DC2  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  7277  004DC4  ECD1  F029         	call	_sendStringSerial4	;wreg free
  7278  004DC8  0012               	return		;funcret
  7279  004DCA                     __end_of_color_display:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _sprintf *****************
  7283 ;; Defined at:
  7284 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7287 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  7288 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7289 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  f              11   14[BANK0 ] struct _IO_FILE
  7292 ;;  ap              2   12[BANK0 ] PTR void [1]
  7293 ;;		 -> ?_sprintf(2), 
  7294 ;;  ret             2    0        int 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  2    0[BANK0 ] int 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7304 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7305 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7308 ;;Total ram usage:       25 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; Hardware stack levels required when called: 9
  7311 ;; This function calls:
  7312 ;;		_vfprintf
  7313 ;; This function is called by:
  7314 ;;		_color_display
  7315 ;;		_color_predict
  7316 ;;		_check_color_reading
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text25
  7321  004EE2                     __ptext25:
  7322                           	callstack 0
  7323  004EE2                     _sprintf:
  7324                           	callstack 20
  7325  004EE2  0E64               	movlw	low (?_sprintf+4)
  7326  004EE4  0100               	movlb	0	; () banked
  7327  004EE6  6F6C               	movwf	sprintf@ap& (0+255),b
  7328  004EE8  0E00               	movlw	high (?_sprintf+4)
  7329  004EEA  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  7330  004EEC  C060  F06E         	movff	sprintf@s,sprintf@f
  7331  004EF0  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  7332  004EF4                     
  7333                           ; BSR set to: 0
  7334  004EF4  0E00               	movlw	0
  7335  004EF6  6F72               	movwf	(sprintf@f+4)& (0+255),b
  7336  004EF8  0E00               	movlw	0
  7337  004EFA  6F71               	movwf	(sprintf@f+3)& (0+255),b
  7338  004EFC                     
  7339                           ; BSR set to: 0
  7340  004EFC  0E00               	movlw	0
  7341  004EFE  6F78               	movwf	(sprintf@f+10)& (0+255),b
  7342  004F00  0E00               	movlw	0
  7343  004F02  6F77               	movwf	(sprintf@f+9)& (0+255),b
  7344  004F04                     
  7345                           ; BSR set to: 0
  7346  004F04  0E6E               	movlw	low sprintf@f
  7347  004F06  6E52               	movwf	vfprintf@fp^0,c
  7348  004F08  0E00               	movlw	high sprintf@f
  7349  004F0A  6E53               	movwf	(vfprintf@fp+1)^0,c
  7350  004F0C  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  7351  004F10  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7352  004F14  0E6C               	movlw	low sprintf@ap
  7353  004F16  6E56               	movwf	vfprintf@ap^0,c
  7354  004F18  0E00               	movlw	high sprintf@ap
  7355  004F1A  6E57               	movwf	(vfprintf@ap+1)^0,c
  7356  004F1C  ECE5  F026         	call	_vfprintf	;wreg free
  7357  004F20  0100               	movlb	0	; () banked
  7358  004F22  5171               	movf	(sprintf@f+3)& (0+255),w,b
  7359  004F24  2560               	addwf	sprintf@s& (0+255),w,b
  7360  004F26  6ED9               	movwf	fsr2l,c
  7361  004F28  5172               	movf	(sprintf@f+4)& (0+255),w,b
  7362  004F2A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7363  004F2C  6EDA               	movwf	fsr2h,c
  7364  004F2E  0E00               	movlw	0
  7365  004F30  6EDF               	movwf	indf2,c
  7366  004F32                     
  7367                           ; BSR set to: 0
  7368  004F32  0012               	return		;funcret
  7369  004F34                     __end_of_sprintf:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _vfprintf *****************
  7373 ;; Defined at:
  7374 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  7377 ;;		 -> sprintf@f(11), 
  7378 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  7379 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7380 ;;  ap              2   85[COMRAM] PTR PTR void 
  7381 ;;		 -> sprintf@ap(2), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  7384 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2   81[COMRAM] int 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7394 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;Total ram usage:        8 bytes
  7399 ;; Hardware stack levels used: 1
  7400 ;; Hardware stack levels required when called: 8
  7401 ;; This function calls:
  7402 ;;		_vfpfcnvrt
  7403 ;; This function is called by:
  7404 ;;		_sprintf
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text26
  7409  004DCA                     __ptext26:
  7410                           	callstack 0
  7411  004DCA                     _vfprintf:
  7412                           	callstack 20
  7413  004DCA                     
  7414                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7415  004DCA  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  7416  004DCE  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7417  004DD2                     
  7418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7419  004DD2  0E00               	movlw	0
  7420  004DD4  0100               	movlb	0	; () banked
  7421  004DD6  6FEE               	movwf	(_nout+1)& (0+255),b
  7422  004DD8  0E00               	movlw	0
  7423  004DDA  6FED               	movwf	_nout& (0+255),b
  7424                           
  7425                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7426  004DDC  EF03  F027         	goto	l4270
  7427  004DE0                     l4268:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7431  004DE0  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  7432  004DE4  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7433  004DE8  0E58               	movlw	low vfprintf@cfmt
  7434  004DEA  6E44               	movwf	vfpfcnvrt@fmt^0,c
  7435  004DEC  0E00               	movlw	high vfprintf@cfmt
  7436  004DEE  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7437  004DF0  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  7438  004DF4  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7439  004DF8  EC5B  F01D         	call	_vfpfcnvrt	;wreg free
  7440  004DFC  5042               	movf	?_vfpfcnvrt^0,w,c
  7441  004DFE  0100               	movlb	0	; () banked
  7442  004E00  27ED               	addwf	_nout& (0+255),f,b
  7443  004E02  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  7444  004E04  23EE               	addwfc	(_nout+1)& (0+255),f,b
  7445  004E06                     l4270:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7449  004E06  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  7450  004E0A  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7451  004E0E                     	if	0	;tblptru may be non-zero
  7452  004E0E                     	endif
  7453  004E0E                     	if	0	;tblptru may be non-zero
  7454  004E0E                     	endif
  7455  004E0E  0008               	tblrd		*
  7456  004E10  50F5               	movf	tablat,w,c
  7457  004E12  0900               	iorlw	0
  7458  004E14  A4D8               	btfss	status,2,c
  7459  004E16  EF0F  F027         	goto	u4171
  7460  004E1A  EF11  F027         	goto	u4170
  7461  004E1E                     u4171:
  7462  004E1E  EFF0  F026         	goto	l4268
  7463  004E22                     u4170:
  7464  004E22                     
  7465                           ; BSR set to: 0
  7466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7467  004E22  C0ED  F052         	movff	_nout,?_vfprintf
  7468  004E26  C0EE  F053         	movff	_nout+1,?_vfprintf+1
  7469  004E2A                     
  7470                           ; BSR set to: 0
  7471  004E2A  0012               	return		;funcret
  7472  004E2C                     __end_of_vfprintf:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _vfpfcnvrt *****************
  7476 ;; Defined at:
  7477 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  7480 ;;		 -> sprintf@f(11), 
  7481 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  7482 ;;		 -> vfprintf@cfmt(2), 
  7483 ;;  ap              2   69[COMRAM] PTR PTR void 
  7484 ;;		 -> sprintf@ap(2), 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  ll              8   73[COMRAM] long long 
  7487 ;;  llu             8    0        unsigned long long 
  7488 ;;  f               4    0        unsigned long long 
  7489 ;;  vp              3    0        PTR void 
  7490 ;;  ct              3    0        unsigned char [3]
  7491 ;;  cp              3    0        PTR unsigned char 
  7492 ;;  i               2    0        int 
  7493 ;;  done            2    0        int 
  7494 ;;  c               1    0        unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2   65[COMRAM] int 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;Total ram usage:       16 bytes
  7509 ;; Hardware stack levels used: 1
  7510 ;; Hardware stack levels required when called: 7
  7511 ;; This function calls:
  7512 ;;		_dtoa
  7513 ;;		_fputc
  7514 ;; This function is called by:
  7515 ;;		_vfprintf
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text27
  7520  003AB6                     __ptext27:
  7521                           	callstack 0
  7522  003AB6                     _vfpfcnvrt:
  7523                           	callstack 20
  7524  003AB6                     
  7525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7526  003AB6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7527  003ABA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7528  003ABE  CFDE FFF6          	movff	postinc2,tblptrl
  7529  003AC2  CFDD FFF7          	movff	postdec2,tblptrh
  7530  003AC6                     	if	0	;tblptru may be non-zero
  7531  003AC6                     	endif
  7532  003AC6                     	if	0	;tblptru may be non-zero
  7533  003AC6                     	endif
  7534  003AC6  0008               	tblrd		*
  7535  003AC8  50F5               	movf	tablat,w,c
  7536  003ACA  0A25               	xorlw	37
  7537  003ACC  A4D8               	btfss	status,2,c
  7538  003ACE  EF6B  F01D         	goto	u3941
  7539  003AD2  EF6D  F01D         	goto	u3940
  7540  003AD6                     u3941:
  7541  003AD6  EF19  F01E         	goto	l4132
  7542  003ADA                     u3940:
  7543  003ADA                     
  7544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7545  003ADA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7546  003ADE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7547  003AE2  2ADE               	incf	postinc2,f,c
  7548  003AE4  0E00               	movlw	0
  7549  003AE6  22DD               	addwfc	postdec2,f,c
  7550  003AE8                     
  7551                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7552  003AE8  0E00               	movlw	0
  7553  003AEA  0100               	movlb	0	; () banked
  7554  003AEC  6FF0               	movwf	(_width+1)& (0+255),b
  7555  003AEE  0E00               	movlw	0
  7556  003AF0  6FEF               	movwf	_width& (0+255),b
  7557  003AF2  C0EF  F0F3         	movff	_width,_flags
  7558  003AF6  C0F0  F0F4         	movff	_width+1,_flags+1
  7559  003AFA                     
  7560                           ; BSR set to: 0
  7561                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7562  003AFA  69F1               	setf	_prec& (0+255),b
  7563  003AFC  69F2               	setf	(_prec+1)& (0+255),b
  7564  003AFE                     
  7565                           ; BSR set to: 0
  7566                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7567  003AFE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7568  003B02  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7569  003B06  CFDE FFF6          	movff	postinc2,tblptrl
  7570  003B0A  CFDD FFF7          	movff	postdec2,tblptrh
  7571  003B0E                     	if	0	;tblptru may be non-zero
  7572  003B0E                     	endif
  7573  003B0E                     	if	0	;tblptru may be non-zero
  7574  003B0E                     	endif
  7575  003B0E  0008               	tblrd		*
  7576  003B10  50F5               	movf	tablat,w,c
  7577  003B12  0A64               	xorlw	100
  7578  003B14  B4D8               	btfsc	status,2,c
  7579  003B16  EF8F  F01D         	goto	u3951
  7580  003B1A  EF91  F01D         	goto	u3950
  7581  003B1E                     u3951:
  7582  003B1E  EFA3  F01D         	goto	l4110
  7583  003B22                     u3950:
  7584  003B22                     
  7585                           ; BSR set to: 0
  7586  003B22  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7587  003B26  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7588  003B2A  CFDE FFF6          	movff	postinc2,tblptrl
  7589  003B2E  CFDD FFF7          	movff	postdec2,tblptrh
  7590  003B32                     	if	0	;tblptru may be non-zero
  7591  003B32                     	endif
  7592  003B32                     	if	0	;tblptru may be non-zero
  7593  003B32                     	endif
  7594  003B32  0008               	tblrd		*
  7595  003B34  50F5               	movf	tablat,w,c
  7596  003B36  0A69               	xorlw	105
  7597  003B38  A4D8               	btfss	status,2,c
  7598  003B3A  EFA1  F01D         	goto	u3961
  7599  003B3E  EFA3  F01D         	goto	u3960
  7600  003B42                     u3961:
  7601  003B42  EFE3  F01D         	goto	l4116
  7602  003B46                     u3960:
  7603  003B46                     l4110:
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7607  003B46  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7608  003B4A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7609  003B4E  2ADE               	incf	postinc2,f,c
  7610  003B50  0E00               	movlw	0
  7611  003B52  22DD               	addwfc	postdec2,f,c
  7612                           
  7613                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7614  003B54  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7615  003B58  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7616  003B5C  CFDF F048          	movff	indf2,??_vfpfcnvrt
  7617  003B60  0E02               	movlw	2
  7618  003B62  26DE               	addwf	postinc2,f,c
  7619  003B64  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  7620  003B68  0E00               	movlw	0
  7621  003B6A  22DD               	addwfc	postdec2,f,c
  7622  003B6C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7623  003B70  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7624  003B74  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7625  003B78  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7626  003B7C  0E00               	movlw	0
  7627  003B7E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7628  003B80  0EFF               	movlw	-1
  7629  003B82  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7630  003B84  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7631  003B86  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7632  003B88  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7633  003B8A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7634  003B8C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7635  003B8E                     
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7638  003B8E  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  7639  003B92  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7640  003B96  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  7641  003B9A  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7642  003B9E  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7643  003BA2  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7644  003BA6  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7645  003BAA  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7646  003BAE  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7647  003BB2  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7648  003BB6  ECA7  F016         	call	_dtoa	;wreg free
  7649  003BBA  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  7650  003BBE  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7651  003BC2  EF34  F01E         	goto	l1450
  7652  003BC6                     l4116:
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7656  003BC6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7657  003BCA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7658  003BCE  CFDE FFF6          	movff	postinc2,tblptrl
  7659  003BD2  CFDD FFF7          	movff	postdec2,tblptrh
  7660  003BD6                     	if	0	;tblptru may be non-zero
  7661  003BD6                     	endif
  7662  003BD6                     	if	0	;tblptru may be non-zero
  7663  003BD6                     	endif
  7664  003BD6  0008               	tblrd		*
  7665  003BD8  50F5               	movf	tablat,w,c
  7666  003BDA  0A25               	xorlw	37
  7667  003BDC  A4D8               	btfss	status,2,c
  7668  003BDE  EFF3  F01D         	goto	u3971
  7669  003BE2  EFF5  F01D         	goto	u3970
  7670  003BE6                     u3971:
  7671  003BE6  EF0C  F01E         	goto	l4126
  7672  003BEA                     u3970:
  7673  003BEA                     
  7674                           ; BSR set to: 0
  7675                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7676  003BEA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7677  003BEE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7678  003BF2  2ADE               	incf	postinc2,f,c
  7679  003BF4  0E00               	movlw	0
  7680  003BF6  22DD               	addwfc	postdec2,f,c
  7681  003BF8                     
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7684  003BF8  0E00               	movlw	0
  7685  003BFA  6E04               	movwf	(fputc@c+1)^0,c
  7686  003BFC  0E25               	movlw	37
  7687  003BFE  6E03               	movwf	fputc@c^0,c
  7688  003C00  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7689  003C04  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7690  003C08  EC25  F024         	call	_fputc	;wreg free
  7691  003C0C                     l4122:
  7692                           
  7693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7694  003C0C  0E00               	movlw	0
  7695  003C0E  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  7696  003C10  0E01               	movlw	1
  7697  003C12  6E42               	movwf	?_vfpfcnvrt^0,c
  7698  003C14  EF34  F01E         	goto	l1450
  7699  003C18                     l4126:
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7703  003C18  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7704  003C1C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7705  003C20  2ADE               	incf	postinc2,f,c
  7706  003C22  0E00               	movlw	0
  7707  003C24  22DD               	addwfc	postdec2,f,c
  7708  003C26                     
  7709                           ; BSR set to: 0
  7710                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7711  003C26  0E00               	movlw	0
  7712  003C28  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  7713  003C2A  0E00               	movlw	0
  7714  003C2C  6E42               	movwf	?_vfpfcnvrt^0,c
  7715  003C2E  EF34  F01E         	goto	l1450
  7716  003C32                     l4132:
  7717                           
  7718                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7719  003C32  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7720  003C36  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7721  003C3A  CFDE FFF6          	movff	postinc2,tblptrl
  7722  003C3E  CFDD FFF7          	movff	postdec2,tblptrh
  7723  003C42                     	if	0	;tblptru may be non-zero
  7724  003C42                     	endif
  7725  003C42                     	if	0	;tblptru may be non-zero
  7726  003C42                     	endif
  7727  003C42  0008               	tblrd		*
  7728  003C44  50F5               	movf	tablat,w,c
  7729  003C46  6E03               	movwf	fputc@c^0,c
  7730  003C48  6A04               	clrf	(fputc@c+1)^0,c
  7731  003C4A  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7732  003C4E  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7733  003C52  EC25  F024         	call	_fputc	;wreg free
  7734  003C56                     
  7735                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7736  003C56  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7737  003C5A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7738  003C5E  2ADE               	incf	postinc2,f,c
  7739  003C60  0E00               	movlw	0
  7740  003C62  22DD               	addwfc	postdec2,f,c
  7741  003C64  EF06  F01E         	goto	l4122
  7742  003C68                     l1450:
  7743  003C68  0012               	return		;funcret
  7744  003C6A                     __end_of_vfpfcnvrt:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _dtoa *****************
  7748 ;; Defined at:
  7749 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7752 ;;		 -> sprintf@f(11), 
  7753 ;;  d               8   31[COMRAM] long long 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  n               8   55[COMRAM] long long 
  7756 ;;  i               2   63[COMRAM] int 
  7757 ;;  s               2   53[COMRAM] int 
  7758 ;;  w               2   51[COMRAM] int 
  7759 ;;  p               2   49[COMRAM] int 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  2   29[COMRAM] int 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7769 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;Total ram usage:       36 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 6
  7776 ;; This function calls:
  7777 ;;		___aodiv
  7778 ;;		___aomod
  7779 ;;		_abs
  7780 ;;		_pad
  7781 ;; This function is called by:
  7782 ;;		_vfpfcnvrt
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text28
  7787  002D4E                     __ptext28:
  7788                           	callstack 0
  7789  002D4E                     _dtoa:
  7790                           	callstack 20
  7791  002D4E                     
  7792                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7793  002D4E  C020  F038         	movff	dtoa@d,dtoa@n
  7794  002D52  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  7795  002D56  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  7796  002D5A  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  7797  002D5E  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  7798  002D62  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  7799  002D66  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  7800  002D6A  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  7801  002D6E                     
  7802                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7803  002D6E  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  7804  002D70  EFBC  F016         	goto	u3481
  7805  002D74  EFBF  F016         	goto	u3480
  7806  002D78                     u3481:
  7807  002D78  0E01               	movlw	1
  7808  002D7A  EFC0  F016         	goto	u3490
  7809  002D7E                     u3480:
  7810  002D7E  0E00               	movlw	0
  7811  002D80                     u3490:
  7812  002D80  6E36               	movwf	dtoa@s^0,c
  7813  002D82  6A37               	clrf	(dtoa@s+1)^0,c
  7814                           
  7815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7816  002D84  5036               	movf	dtoa@s^0,w,c
  7817  002D86  1037               	iorwf	(dtoa@s+1)^0,w,c
  7818  002D88  B4D8               	btfsc	status,2,c
  7819  002D8A  EFC9  F016         	goto	u3501
  7820  002D8E  EFCB  F016         	goto	u3500
  7821  002D92                     u3501:
  7822  002D92  EFDB  F016         	goto	l3824
  7823  002D96                     u3500:
  7824  002D96                     
  7825                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7826  002D96  1E3F               	comf	(dtoa@n+7)^0,f,c
  7827  002D98  1E3E               	comf	(dtoa@n+6)^0,f,c
  7828  002D9A  1E3D               	comf	(dtoa@n+5)^0,f,c
  7829  002D9C  1E3C               	comf	(dtoa@n+4)^0,f,c
  7830  002D9E  1E3B               	comf	(dtoa@n+3)^0,f,c
  7831  002DA0  1E3A               	comf	(dtoa@n+2)^0,f,c
  7832  002DA2  1E39               	comf	(dtoa@n+1)^0,f,c
  7833  002DA4  6C38               	negf	dtoa@n^0,c
  7834  002DA6  0E00               	movlw	0
  7835  002DA8  2239               	addwfc	(dtoa@n+1)^0,f,c
  7836  002DAA  223A               	addwfc	(dtoa@n+2)^0,f,c
  7837  002DAC  223B               	addwfc	(dtoa@n+3)^0,f,c
  7838  002DAE  223C               	addwfc	(dtoa@n+4)^0,f,c
  7839  002DB0  223D               	addwfc	(dtoa@n+5)^0,f,c
  7840  002DB2  223E               	addwfc	(dtoa@n+6)^0,f,c
  7841  002DB4  223F               	addwfc	(dtoa@n+7)^0,f,c
  7842  002DB6                     l3824:
  7843                           
  7844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7845  002DB6  0100               	movlb	0	; () banked
  7846  002DB8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  7847  002DBA  EFE1  F016         	goto	u3511
  7848  002DBE  EFE3  F016         	goto	u3510
  7849  002DC2                     u3511:
  7850  002DC2  EFE4  F016         	goto	l3828
  7851  002DC6                     u3510:
  7852  002DC6                     
  7853                           ; BSR set to: 0
  7854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7855  002DC6  93F3               	bcf	_flags& (0+255),1,b
  7856  002DC8                     l3828:
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7860  002DC8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  7861  002DCA  EFF1  F016         	goto	u3520
  7862  002DCE  51F2               	movf	(_prec+1)& (0+255),w,b
  7863  002DD0  E106               	bnz	u3521
  7864  002DD2  05F1               	decf	_prec& (0+255),w,b
  7865  002DD4  B0D8               	btfsc	status,0,c
  7866  002DD6  EFEF  F016         	goto	u3521
  7867  002DDA  EFF1  F016         	goto	u3520
  7868  002DDE                     u3521:
  7869  002DDE  EFF7  F016         	goto	l1423
  7870  002DE2                     u3520:
  7871  002DE2                     
  7872                           ; BSR set to: 0
  7873  002DE2  0E00               	movlw	0
  7874  002DE4  6E33               	movwf	(dtoa@p+1)^0,c
  7875  002DE6  0E01               	movlw	1
  7876  002DE8  6E32               	movwf	dtoa@p^0,c
  7877  002DEA  EFFB  F016         	goto	l1425
  7878  002DEE                     l1423:
  7879                           
  7880                           ; BSR set to: 0
  7881  002DEE  C0F1  F032         	movff	_prec,dtoa@p
  7882  002DF2  C0F2  F033         	movff	_prec+1,dtoa@p+1
  7883  002DF6                     l1425:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7887  002DF6  C0EF  F034         	movff	_width,dtoa@w
  7888  002DFA  C0F0  F035         	movff	_width+1,dtoa@w+1
  7889  002DFE                     
  7890                           ; BSR set to: 0
  7891                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7892  002DFE  5036               	movf	dtoa@s^0,w,c
  7893  002E00  1037               	iorwf	(dtoa@s+1)^0,w,c
  7894  002E02  A4D8               	btfss	status,2,c
  7895  002E04  EF06  F017         	goto	u3531
  7896  002E08  EF08  F017         	goto	u3530
  7897  002E0C                     u3531:
  7898  002E0C  EF0F  F017         	goto	l3836
  7899  002E10                     u3530:
  7900  002E10                     
  7901                           ; BSR set to: 0
  7902  002E10  A5F3               	btfss	_flags& (0+255),2,b
  7903  002E12  EF0D  F017         	goto	u3541
  7904  002E16  EF0F  F017         	goto	u3540
  7905  002E1A                     u3541:
  7906  002E1A  EF12  F017         	goto	l3838
  7907  002E1E                     u3540:
  7908  002E1E                     l3836:
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7912  002E1E  0634               	decf	dtoa@w^0,f,c
  7913  002E20  A0D8               	btfss	status,0,c
  7914  002E22  0635               	decf	(dtoa@w+1)^0,f,c
  7915  002E24                     l3838:
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7919  002E24  0E00               	movlw	0
  7920  002E26  6E41               	movwf	(dtoa@i+1)^0,c
  7921  002E28  0E1F               	movlw	31
  7922  002E2A  6E40               	movwf	dtoa@i^0,c
  7923  002E2C                     
  7924                           ; BSR set to: 0
  7925                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7926  002E2C  0E00               	movlw	0
  7927  002E2E  0101               	movlb	1	; () banked
  7928  002E30  6FB0               	movwf	(_dbuf+31)& (0+255),b
  7929                           
  7930                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7931  002E32  EF97  F017         	goto	l3852
  7932  002E36                     l3842:
  7933                           
  7934                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7935  002E36  0640               	decf	dtoa@i^0,f,c
  7936  002E38  A0D8               	btfss	status,0,c
  7937  002E3A  0641               	decf	(dtoa@i+1)^0,f,c
  7938  002E3C                     
  7939                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7940  002E3C  0E91               	movlw	low _dbuf
  7941  002E3E  2440               	addwf	dtoa@i^0,w,c
  7942  002E40  6ED9               	movwf	fsr2l,c
  7943  002E42  0E01               	movlw	high _dbuf
  7944  002E44  2041               	addwfc	(dtoa@i+1)^0,w,c
  7945  002E46  6EDA               	movwf	fsr2h,c
  7946  002E48  C038  F003         	movff	dtoa@n,___aomod@dividend
  7947  002E4C  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  7948  002E50  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  7949  002E54  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  7950  002E58  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  7951  002E5C  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  7952  002E60  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  7953  002E64  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  7954  002E68  0E0A               	movlw	10
  7955  002E6A  6E0B               	movwf	___aomod@divisor^0,c
  7956  002E6C  0E00               	movlw	0
  7957  002E6E  6E0C               	movwf	(___aomod@divisor+1)^0,c
  7958  002E70  0E00               	movlw	0
  7959  002E72  6E0D               	movwf	(___aomod@divisor+2)^0,c
  7960  002E74  0E00               	movlw	0
  7961  002E76  6E0E               	movwf	(___aomod@divisor+3)^0,c
  7962  002E78  0E00               	movlw	0
  7963  002E7A  6E0F               	movwf	(___aomod@divisor+4)^0,c
  7964  002E7C  0E00               	movlw	0
  7965  002E7E  6E10               	movwf	(___aomod@divisor+5)^0,c
  7966  002E80  0E00               	movlw	0
  7967  002E82  6E11               	movwf	(___aomod@divisor+6)^0,c
  7968  002E84  0E00               	movlw	0
  7969  002E86  6E12               	movwf	(___aomod@divisor+7)^0,c
  7970  002E88  ECCC  F01F         	call	___aomod	;wreg free
  7971  002E8C  C003  F028         	movff	?___aomod,??_dtoa
  7972  002E90  C004  F029         	movff	?___aomod+1,??_dtoa+1
  7973  002E94  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  7974  002E98  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  7975  002E9C  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  7976  002EA0  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  7977  002EA4  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  7978  002EA8  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  7979  002EAC  C028  F015         	movff	??_dtoa,abs@a
  7980  002EB0  C02A  F016         	movff	??_dtoa+2,abs@a+1
  7981  002EB4  EC26  F029         	call	_abs	;wreg free
  7982  002EB8  5015               	movf	?_abs^0,w,c
  7983  002EBA  0F30               	addlw	48
  7984  002EBC  6EDF               	movwf	indf2,c
  7985  002EBE                     
  7986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7987  002EBE  0632               	decf	dtoa@p^0,f,c
  7988  002EC0  A0D8               	btfss	status,0,c
  7989  002EC2  0633               	decf	(dtoa@p+1)^0,f,c
  7990  002EC4                     
  7991                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7992  002EC4  0634               	decf	dtoa@w^0,f,c
  7993  002EC6  A0D8               	btfss	status,0,c
  7994  002EC8  0635               	decf	(dtoa@w+1)^0,f,c
  7995  002ECA                     
  7996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7997  002ECA  C038  F003         	movff	dtoa@n,___aodiv@dividend
  7998  002ECE  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  7999  002ED2  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  8000  002ED6  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  8001  002EDA  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  8002  002EDE  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  8003  002EE2  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  8004  002EE6  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  8005  002EEA  0E0A               	movlw	10
  8006  002EEC  6E0B               	movwf	___aodiv@divisor^0,c
  8007  002EEE  0E00               	movlw	0
  8008  002EF0  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  8009  002EF2  0E00               	movlw	0
  8010  002EF4  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  8011  002EF6  0E00               	movlw	0
  8012  002EF8  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  8013  002EFA  0E00               	movlw	0
  8014  002EFC  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  8015  002EFE  0E00               	movlw	0
  8016  002F00  6E10               	movwf	(___aodiv@divisor+5)^0,c
  8017  002F02  0E00               	movlw	0
  8018  002F04  6E11               	movwf	(___aodiv@divisor+6)^0,c
  8019  002F06  0E00               	movlw	0
  8020  002F08  6E12               	movwf	(___aodiv@divisor+7)^0,c
  8021  002F0A  EC08  F01F         	call	___aodiv	;wreg free
  8022  002F0E  C003  F038         	movff	?___aodiv,dtoa@n
  8023  002F12  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  8024  002F16  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  8025  002F1A  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  8026  002F1E  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  8027  002F22  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  8028  002F26  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  8029  002F2A  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  8030  002F2E                     l3852:
  8031                           
  8032                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8033  002F2E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  8034  002F30  EFA2  F017         	goto	u3551
  8035  002F34  5041               	movf	(dtoa@i+1)^0,w,c
  8036  002F36  E108               	bnz	u3550
  8037  002F38  0440               	decf	dtoa@i^0,w,c
  8038  002F3A  A0D8               	btfss	status,0,c
  8039  002F3C  EFA2  F017         	goto	u3551
  8040  002F40  EFA4  F017         	goto	u3550
  8041  002F44                     u3551:
  8042  002F44  EFD5  F017         	goto	l3862
  8043  002F48                     u3550:
  8044  002F48  5038               	movf	dtoa@n^0,w,c
  8045  002F4A  1039               	iorwf	(dtoa@n+1)^0,w,c
  8046  002F4C  103A               	iorwf	(dtoa@n+2)^0,w,c
  8047  002F4E  103B               	iorwf	(dtoa@n+3)^0,w,c
  8048  002F50  103C               	iorwf	(dtoa@n+4)^0,w,c
  8049  002F52  103D               	iorwf	(dtoa@n+5)^0,w,c
  8050  002F54  103E               	iorwf	(dtoa@n+6)^0,w,c
  8051  002F56  103F               	iorwf	(dtoa@n+7)^0,w,c
  8052  002F58  A4D8               	btfss	status,2,c
  8053  002F5A  EFB1  F017         	goto	u3561
  8054  002F5E  EFB3  F017         	goto	u3560
  8055  002F62                     u3561:
  8056  002F62  EF1B  F017         	goto	l3842
  8057  002F66                     u3560:
  8058  002F66  BE33               	btfsc	(dtoa@p+1)^0,7,c
  8059  002F68  EFC0  F017         	goto	u3570
  8060  002F6C  5033               	movf	(dtoa@p+1)^0,w,c
  8061  002F6E  E106               	bnz	u3571
  8062  002F70  0432               	decf	dtoa@p^0,w,c
  8063  002F72  B0D8               	btfsc	status,0,c
  8064  002F74  EFBE  F017         	goto	u3571
  8065  002F78  EFC0  F017         	goto	u3570
  8066  002F7C                     u3571:
  8067  002F7C  EF1B  F017         	goto	l3842
  8068  002F80                     u3570:
  8069  002F80  BE35               	btfsc	(dtoa@w+1)^0,7,c
  8070  002F82  EFCB  F017         	goto	u3581
  8071  002F86  5035               	movf	(dtoa@w+1)^0,w,c
  8072  002F88  E108               	bnz	u3580
  8073  002F8A  0434               	decf	dtoa@w^0,w,c
  8074  002F8C  A0D8               	btfss	status,0,c
  8075  002F8E  EFCB  F017         	goto	u3581
  8076  002F92  EFCD  F017         	goto	u3580
  8077  002F96                     u3581:
  8078  002F96  EFD5  F017         	goto	l3862
  8079  002F9A                     u3580:
  8080  002F9A  0100               	movlb	0	; () banked
  8081  002F9C  B3F3               	btfsc	_flags& (0+255),1,b
  8082  002F9E  EFD3  F017         	goto	u3591
  8083  002FA2  EFD5  F017         	goto	u3590
  8084  002FA6                     u3591:
  8085  002FA6  EF1B  F017         	goto	l3842
  8086  002FAA                     u3590:
  8087  002FAA                     l3862:
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8090  002FAA  5036               	movf	dtoa@s^0,w,c
  8091  002FAC  1037               	iorwf	(dtoa@s+1)^0,w,c
  8092  002FAE  A4D8               	btfss	status,2,c
  8093  002FB0  EFDC  F017         	goto	u3601
  8094  002FB4  EFDE  F017         	goto	u3600
  8095  002FB8                     u3601:
  8096  002FB8  EFE6  F017         	goto	l3866
  8097  002FBC                     u3600:
  8098  002FBC  0100               	movlb	0	; () banked
  8099  002FBE  A5F3               	btfss	_flags& (0+255),2,b
  8100  002FC0  EFE4  F017         	goto	u3611
  8101  002FC4  EFE6  F017         	goto	u3610
  8102  002FC8                     u3611:
  8103  002FC8  EF04  F018         	goto	l3876
  8104  002FCC                     u3610:
  8105  002FCC                     l3866:
  8106                           
  8107                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  8108  002FCC  0640               	decf	dtoa@i^0,f,c
  8109  002FCE  A0D8               	btfss	status,0,c
  8110  002FD0  0641               	decf	(dtoa@i+1)^0,f,c
  8111  002FD2                     
  8112                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8113  002FD2  5036               	movf	dtoa@s^0,w,c
  8114  002FD4  1037               	iorwf	(dtoa@s+1)^0,w,c
  8115  002FD6  A4D8               	btfss	status,2,c
  8116  002FD8  EFF0  F017         	goto	u3621
  8117  002FDC  EFF2  F017         	goto	u3620
  8118  002FE0                     u3621:
  8119  002FE0  EFF8  F017         	goto	l3872
  8120  002FE4                     u3620:
  8121  002FE4  0E00               	movlw	0
  8122  002FE6  6E31               	movwf	(_dtoa$2697+1)^0,c
  8123  002FE8  0E2B               	movlw	43
  8124  002FEA  6E30               	movwf	_dtoa$2697^0,c
  8125  002FEC  EFFC  F017         	goto	l3874
  8126  002FF0                     l3872:
  8127  002FF0  0E00               	movlw	0
  8128  002FF2  6E31               	movwf	(_dtoa$2697+1)^0,c
  8129  002FF4  0E2D               	movlw	45
  8130  002FF6  6E30               	movwf	_dtoa$2697^0,c
  8131  002FF8                     l3874:
  8132  002FF8  0E91               	movlw	low _dbuf
  8133  002FFA  2440               	addwf	dtoa@i^0,w,c
  8134  002FFC  6ED9               	movwf	fsr2l,c
  8135  002FFE  0E01               	movlw	high _dbuf
  8136  003000  2041               	addwfc	(dtoa@i+1)^0,w,c
  8137  003002  6EDA               	movwf	fsr2h,c
  8138  003004  C030  FFDF         	movff	_dtoa$2697,indf2
  8139  003008                     l3876:
  8140                           
  8141                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8142  003008  C01E  F013         	movff	dtoa@fp,pad@fp
  8143  00300C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  8144  003010  0E91               	movlw	low _dbuf
  8145  003012  2440               	addwf	dtoa@i^0,w,c
  8146  003014  6E15               	movwf	pad@buf^0,c
  8147  003016  0E01               	movlw	high _dbuf
  8148  003018  2041               	addwfc	(dtoa@i+1)^0,w,c
  8149  00301A  6E16               	movwf	(pad@buf+1)^0,c
  8150  00301C  C034  F017         	movff	dtoa@w,pad@p
  8151  003020  C035  F018         	movff	dtoa@w+1,pad@p+1
  8152  003024  EC8A  F024         	call	_pad	;wreg free
  8153  003028  C013  F01E         	movff	?_pad,?_dtoa
  8154  00302C  C014  F01F         	movff	?_pad+1,?_dtoa+1
  8155  003030  0012               	return		;funcret
  8156  003032                     __end_of_dtoa:
  8157                           	callstack 0
  8158                           
  8159 ;; *************** function _pad *****************
  8160 ;; Defined at:
  8161 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8164 ;;		 -> sprintf@f(11), 
  8165 ;;  buf             2   20[COMRAM] PTR unsigned char 
  8166 ;;		 -> dbuf(32), 
  8167 ;;  p               2   22[COMRAM] int 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  w               2   27[COMRAM] int 
  8170 ;;  i               2   25[COMRAM] int 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2   18[COMRAM] int 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8180 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;Total ram usage:       11 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 5
  8187 ;; This function calls:
  8188 ;;		_fputc
  8189 ;;		_fputs
  8190 ;;		_strlen
  8191 ;; This function is called by:
  8192 ;;		_dtoa
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text29
  8197  004914                     __ptext29:
  8198                           	callstack 0
  8199  004914                     _pad:
  8200                           	callstack 20
  8201  004914                     
  8202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8203  004914  0100               	movlb	0	; () banked
  8204  004916  A1F3               	btfss	_flags& (0+255),0,b
  8205  004918  EF90  F024         	goto	u2981
  8206  00491C  EF92  F024         	goto	u2980
  8207  004920                     u2981:
  8208  004920  EF9C  F024         	goto	l3576
  8209  004924                     u2980:
  8210  004924                     
  8211                           ; BSR set to: 0
  8212                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8213  004924  C015  F00C         	movff	pad@buf,fputs@s
  8214  004928  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8215  00492C  C013  F00E         	movff	pad@fp,fputs@fp
  8216  004930  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8217  004934  EC80  F028         	call	_fputs	;wreg free
  8218  004938                     l3576:
  8219                           
  8220                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8221  004938  BE18               	btfsc	(pad@p+1)^0,7,c
  8222  00493A  EFA1  F024         	goto	u2991
  8223  00493E  EFA3  F024         	goto	u2990
  8224  004942                     u2991:
  8225  004942  EFA9  F024         	goto	l3580
  8226  004946                     u2990:
  8227  004946  C017  F01C         	movff	pad@p,pad@w
  8228  00494A  C018  F01D         	movff	pad@p+1,pad@w+1
  8229  00494E  EFAD  F024         	goto	l1412
  8230  004952                     l3580:
  8231  004952  0E00               	movlw	0
  8232  004954  6E1D               	movwf	(pad@w+1)^0,c
  8233  004956  0E00               	movlw	0
  8234  004958  6E1C               	movwf	pad@w^0,c
  8235  00495A                     l1412:
  8236                           
  8237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8238  00495A  0E00               	movlw	0
  8239  00495C  6E1B               	movwf	(pad@i+1)^0,c
  8240  00495E  0E00               	movlw	0
  8241  004960  6E1A               	movwf	pad@i^0,c
  8242                           
  8243                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8244  004962  EFBF  F024         	goto	l3586
  8245  004966                     l3582:
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8248  004966  0E00               	movlw	0
  8249  004968  6E04               	movwf	(fputc@c+1)^0,c
  8250  00496A  0E20               	movlw	32
  8251  00496C  6E03               	movwf	fputc@c^0,c
  8252  00496E  C013  F005         	movff	pad@fp,fputc@fp
  8253  004972  C014  F006         	movff	pad@fp+1,fputc@fp+1
  8254  004976  EC25  F024         	call	_fputc	;wreg free
  8255  00497A                     
  8256                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8257  00497A  4A1A               	infsnz	pad@i^0,f,c
  8258  00497C  2A1B               	incf	(pad@i+1)^0,f,c
  8259  00497E                     l3586:
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8262  00497E  501C               	movf	pad@w^0,w,c
  8263  004980  5C1A               	subwf	pad@i^0,w,c
  8264  004982  501B               	movf	(pad@i+1)^0,w,c
  8265  004984  0A80               	xorlw	128
  8266  004986  6E19               	movwf	??_pad^0,c
  8267  004988  501D               	movf	(pad@w+1)^0,w,c
  8268  00498A  0A80               	xorlw	128
  8269  00498C  5819               	subwfb	??_pad^0,w,c
  8270  00498E  A0D8               	btfss	status,0,c
  8271  004990  EFCC  F024         	goto	u3001
  8272  004994  EFCE  F024         	goto	u3000
  8273  004998                     u3001:
  8274  004998  EFB3  F024         	goto	l3582
  8275  00499C                     u3000:
  8276  00499C                     
  8277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8278  00499C  0100               	movlb	0	; () banked
  8279  00499E  B1F3               	btfsc	_flags& (0+255),0,b
  8280  0049A0  EFD4  F024         	goto	u3011
  8281  0049A4  EFD6  F024         	goto	u3010
  8282  0049A8                     u3011:
  8283  0049A8  EFE0  F024         	goto	l3590
  8284  0049AC                     u3010:
  8285  0049AC                     
  8286                           ; BSR set to: 0
  8287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8288  0049AC  C015  F00C         	movff	pad@buf,fputs@s
  8289  0049B0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8290  0049B4  C013  F00E         	movff	pad@fp,fputs@fp
  8291  0049B8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8292  0049BC  EC80  F028         	call	_fputs	;wreg free
  8293  0049C0                     l3590:
  8294                           
  8295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8296  0049C0  C015  F003         	movff	pad@buf,strlen@s
  8297  0049C4  C016  F004         	movff	pad@buf+1,strlen@s+1
  8298  0049C8  EC9C  F029         	call	_strlen	;wreg free
  8299  0049CC  501C               	movf	pad@w^0,w,c
  8300  0049CE  2403               	addwf	?_strlen^0,w,c
  8301  0049D0  6E13               	movwf	?_pad^0,c
  8302  0049D2  501D               	movf	(pad@w+1)^0,w,c
  8303  0049D4  2004               	addwfc	(?_strlen+1)^0,w,c
  8304  0049D6  6E14               	movwf	(?_pad+1)^0,c
  8305  0049D8  0012               	return		;funcret
  8306  0049DA                     __end_of_pad:
  8307                           	callstack 0
  8308                           
  8309 ;; *************** function _strlen *****************
  8310 ;; Defined at:
  8311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  s               2    2[COMRAM] PTR const unsigned char 
  8314 ;;		 -> dbuf(32), 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  a               2    4[COMRAM] PTR const unsigned char 
  8317 ;;		 -> dbuf(32), 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    2[COMRAM] unsigned int 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;Total ram usage:        4 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; Hardware stack levels required when called: 2
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_pad
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text30
  8342  005338                     __ptext30:
  8343                           	callstack 0
  8344  005338                     _strlen:
  8345                           	callstack 22
  8346  005338  C003  F005         	movff	strlen@s,strlen@a
  8347  00533C  C004  F006         	movff	strlen@s+1,strlen@a+1
  8348  005340  EFA4  F029         	goto	l3436
  8349  005344                     l3434:
  8350  005344  4A03               	infsnz	strlen@s^0,f,c
  8351  005346  2A04               	incf	(strlen@s+1)^0,f,c
  8352  005348                     l3436:
  8353  005348  C003  FFD9         	movff	strlen@s,fsr2l
  8354  00534C  C004  FFDA         	movff	strlen@s+1,fsr2h
  8355  005350  50DF               	movf	indf2,w,c
  8356  005352  A4D8               	btfss	status,2,c
  8357  005354  EFAE  F029         	goto	u2781
  8358  005358  EFB0  F029         	goto	u2780
  8359  00535C                     u2781:
  8360  00535C  EFA2  F029         	goto	l3434
  8361  005360                     u2780:
  8362  005360  5005               	movf	strlen@a^0,w,c
  8363  005362  5C03               	subwf	strlen@s^0,w,c
  8364  005364  6E03               	movwf	?_strlen^0,c
  8365  005366  5006               	movf	(strlen@a+1)^0,w,c
  8366  005368  5804               	subwfb	(strlen@s+1)^0,w,c
  8367  00536A  6E04               	movwf	(?_strlen+1)^0,c
  8368  00536C  0012               	return		;funcret
  8369  00536E                     __end_of_strlen:
  8370                           	callstack 0
  8371                           
  8372 ;; *************** function _fputs *****************
  8373 ;; Defined at:
  8374 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8377 ;;		 -> dbuf(32), 
  8378 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  8379 ;;		 -> sprintf@f(11), 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  i               2   16[COMRAM] int 
  8382 ;;  c               1   15[COMRAM] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  2   11[COMRAM] int 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;Total ram usage:        7 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 4
  8399 ;; This function calls:
  8400 ;;		_fputc
  8401 ;; This function is called by:
  8402 ;;		_pad
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text31
  8407  005100                     __ptext31:
  8408                           	callstack 0
  8409  005100                     _fputs:
  8410                           	callstack 20
  8411  005100  0E00               	movlw	0
  8412  005102  6E12               	movwf	(fputs@i+1)^0,c
  8413  005104  0E00               	movlw	0
  8414  005106  6E11               	movwf	fputs@i^0,c
  8415  005108  EF91  F028         	goto	l3430
  8416  00510C                     l3426:
  8417  00510C  C010  F003         	movff	fputs@c,fputc@c
  8418  005110  6A04               	clrf	(fputc@c+1)^0,c
  8419  005112  C00E  F005         	movff	fputs@fp,fputc@fp
  8420  005116  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  8421  00511A  EC25  F024         	call	_fputc	;wreg free
  8422  00511E  4A11               	infsnz	fputs@i^0,f,c
  8423  005120  2A12               	incf	(fputs@i+1)^0,f,c
  8424  005122                     l3430:
  8425  005122  5011               	movf	fputs@i^0,w,c
  8426  005124  240C               	addwf	fputs@s^0,w,c
  8427  005126  6ED9               	movwf	fsr2l,c
  8428  005128  5012               	movf	(fputs@i+1)^0,w,c
  8429  00512A  200D               	addwfc	(fputs@s+1)^0,w,c
  8430  00512C  6EDA               	movwf	fsr2h,c
  8431  00512E  50DF               	movf	indf2,w,c
  8432  005130  6E10               	movwf	fputs@c^0,c
  8433  005132  5010               	movf	fputs@c^0,w,c
  8434  005134  A4D8               	btfss	status,2,c
  8435  005136  EF9F  F028         	goto	u2771
  8436  00513A  EFA1  F028         	goto	u2770
  8437  00513E                     u2771:
  8438  00513E  EF86  F028         	goto	l3426
  8439  005142                     u2770:
  8440  005142  0012               	return		;funcret
  8441  005144                     __end_of_fputs:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _fputc *****************
  8445 ;; Defined at:
  8446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  c               2    2[COMRAM] int 
  8449 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  8450 ;;		 -> sprintf@f(11), 
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  2    2[COMRAM] int 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8464 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;Total ram usage:        9 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 3
  8469 ;; This function calls:
  8470 ;;		_putch
  8471 ;; This function is called by:
  8472 ;;		_pad
  8473 ;;		_vfpfcnvrt
  8474 ;;		_fputs
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text32
  8479  00484A                     __ptext32:
  8480                           	callstack 0
  8481  00484A                     _fputc:
  8482                           	callstack 23
  8483  00484A  5005               	movf	fputc@fp^0,w,c
  8484  00484C  1006               	iorwf	(fputc@fp+1)^0,w,c
  8485  00484E  B4D8               	btfsc	status,2,c
  8486  004850  EF2C  F024         	goto	u2731
  8487  004854  EF2E  F024         	goto	u2730
  8488  004858                     u2731:
  8489  004858  EF37  F024         	goto	l3414
  8490  00485C                     u2730:
  8491  00485C  5005               	movf	fputc@fp^0,w,c
  8492  00485E  1006               	iorwf	(fputc@fp+1)^0,w,c
  8493  004860  A4D8               	btfss	status,2,c
  8494  004862  EF35  F024         	goto	u2741
  8495  004866  EF37  F024         	goto	u2740
  8496  00486A                     u2741:
  8497  00486A  EF3C  F024         	goto	l3416
  8498  00486E                     u2740:
  8499  00486E                     l3414:
  8500  00486E  5003               	movf	fputc@c^0,w,c
  8501  004870  ECFD  F02A         	call	_putch
  8502  004874  EF89  F024         	goto	l1476
  8503  004878                     l3416:
  8504  004878  EE20 F009          	lfsr	2,9
  8505  00487C  5005               	movf	fputc@fp^0,w,c
  8506  00487E  26D9               	addwf	fsr2l,f,c
  8507  004880  5006               	movf	(fputc@fp+1)^0,w,c
  8508  004882  22DA               	addwfc	fsr2h,f,c
  8509  004884  50DE               	movf	postinc2,w,c
  8510  004886  10DE               	iorwf	postinc2,w,c
  8511  004888  B4D8               	btfsc	status,2,c
  8512  00488A  EF49  F024         	goto	u2751
  8513  00488E  EF4B  F024         	goto	u2750
  8514  004892                     u2751:
  8515  004892  EF66  F024         	goto	l3420
  8516  004896                     u2750:
  8517  004896  EE20 F009          	lfsr	2,9
  8518  00489A  5005               	movf	fputc@fp^0,w,c
  8519  00489C  26D9               	addwf	fsr2l,f,c
  8520  00489E  5006               	movf	(fputc@fp+1)^0,w,c
  8521  0048A0  22DA               	addwfc	fsr2h,f,c
  8522  0048A2  EE10 F003          	lfsr	1,3
  8523  0048A6  5005               	movf	fputc@fp^0,w,c
  8524  0048A8  26E1               	addwf	fsr1l,f,c
  8525  0048AA  5006               	movf	(fputc@fp+1)^0,w,c
  8526  0048AC  22E2               	addwfc	fsr1h,f,c
  8527  0048AE  50DE               	movf	postinc2,w,c
  8528  0048B0  5CE6               	subwf	postinc1,w,c
  8529  0048B2  50E6               	movf	postinc1,w,c
  8530  0048B4  0A80               	xorlw	128
  8531  0048B6  6E0B               	movwf	(??_fputc+4)^0,c
  8532  0048B8  50DE               	movf	postinc2,w,c
  8533  0048BA  0A80               	xorlw	128
  8534  0048BC  580B               	subwfb	(??_fputc+4)^0,w,c
  8535  0048BE  B0D8               	btfsc	status,0,c
  8536  0048C0  EF64  F024         	goto	u2761
  8537  0048C4  EF66  F024         	goto	u2760
  8538  0048C8                     u2761:
  8539  0048C8  EF89  F024         	goto	l1476
  8540  0048CC                     u2760:
  8541  0048CC                     l3420:
  8542  0048CC  EE20 F003          	lfsr	2,3
  8543  0048D0  5005               	movf	fputc@fp^0,w,c
  8544  0048D2  26D9               	addwf	fsr2l,f,c
  8545  0048D4  5006               	movf	(fputc@fp+1)^0,w,c
  8546  0048D6  22DA               	addwfc	fsr2h,f,c
  8547  0048D8  CFDE F007          	movff	postinc2,??_fputc
  8548  0048DC  CFDD F008          	movff	postdec2,??_fputc+1
  8549  0048E0  C005  FFD9         	movff	fputc@fp,fsr2l
  8550  0048E4  C006  FFDA         	movff	fputc@fp+1,fsr2h
  8551  0048E8  CFDE F009          	movff	postinc2,??_fputc+2
  8552  0048EC  CFDD F00A          	movff	postdec2,??_fputc+3
  8553  0048F0  5007               	movf	??_fputc^0,w,c
  8554  0048F2  2409               	addwf	(??_fputc+2)^0,w,c
  8555  0048F4  6ED9               	movwf	fsr2l,c
  8556  0048F6  5008               	movf	(??_fputc+1)^0,w,c
  8557  0048F8  200A               	addwfc	(??_fputc+3)^0,w,c
  8558  0048FA  6EDA               	movwf	fsr2h,c
  8559  0048FC  C003  FFDF         	movff	fputc@c,indf2
  8560  004900  EE20 F003          	lfsr	2,3
  8561  004904  5005               	movf	fputc@fp^0,w,c
  8562  004906  26D9               	addwf	fsr2l,f,c
  8563  004908  5006               	movf	(fputc@fp+1)^0,w,c
  8564  00490A  22DA               	addwfc	fsr2h,f,c
  8565  00490C  2ADE               	incf	postinc2,f,c
  8566  00490E  0E00               	movlw	0
  8567  004910  22DD               	addwfc	postdec2,f,c
  8568  004912                     l1476:
  8569  004912  0012               	return		;funcret
  8570  004914                     __end_of_fputc:
  8571                           	callstack 0
  8572                           
  8573 ;; *************** function _putch *****************
  8574 ;; Defined at:
  8575 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  c               1    wreg     unsigned char 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  c               1    0[COMRAM] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;Total ram usage:        0 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 2
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_fputc
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text33
  8604  0055FA                     __ptext33:
  8605                           	callstack 0
  8606  0055FA                     _putch:
  8607                           	callstack 23
  8608  0055FA  0012               	return		;funcret
  8609  0055FC                     __end_of_putch:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _abs *****************
  8613 ;; Defined at:
  8614 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  a               2   20[COMRAM] int 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  2   20[COMRAM] int 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;Total ram usage:        4 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; Hardware stack levels required when called: 2
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_dtoa
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text34
  8643  00524C                     __ptext34:
  8644                           	callstack 0
  8645  00524C                     _abs:
  8646                           	callstack 23
  8647  00524C  BE16               	btfsc	(abs@a+1)^0,7,c
  8648  00524E  EF33  F029         	goto	u3020
  8649  005252  5016               	movf	(abs@a+1)^0,w,c
  8650  005254  E106               	bnz	u3021
  8651  005256  0415               	decf	abs@a^0,w,c
  8652  005258  B0D8               	btfsc	status,0,c
  8653  00525A  EF31  F029         	goto	u3021
  8654  00525E  EF33  F029         	goto	u3020
  8655  005262                     u3021:
  8656  005262  EF41  F029         	goto	l1461
  8657  005266                     u3020:
  8658  005266  C015  F017         	movff	abs@a,??_abs
  8659  00526A  C016  F018         	movff	abs@a+1,??_abs+1
  8660  00526E  1E17               	comf	??_abs^0,f,c
  8661  005270  1E18               	comf	(??_abs+1)^0,f,c
  8662  005272  4A17               	infsnz	??_abs^0,f,c
  8663  005274  2A18               	incf	(??_abs+1)^0,f,c
  8664  005276  C017  F015         	movff	??_abs,?_abs
  8665  00527A  C018  F016         	movff	??_abs+1,?_abs+1
  8666  00527E  EF45  F029         	goto	l1464
  8667  005282                     l1461:
  8668  005282  C015  F015         	movff	abs@a,?_abs
  8669  005286  C016  F016         	movff	abs@a+1,?_abs+1
  8670  00528A                     l1464:
  8671  00528A  0012               	return		;funcret
  8672  00528C                     __end_of_abs:
  8673                           	callstack 0
  8674                           
  8675 ;; *************** function ___aomod *****************
  8676 ;; Defined at:
  8677 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  dividend        8    2[COMRAM] long long 
  8680 ;;  divisor         8   10[COMRAM] long long 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;  sign            1   19[COMRAM] unsigned char 
  8683 ;;  counter         1   18[COMRAM] unsigned char 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  8    2[COMRAM] long long 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2, status,0
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8693 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;Total ram usage:       18 bytes
  8698 ;; Hardware stack levels used: 1
  8699 ;; Hardware stack levels required when called: 2
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_dtoa
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text35
  8708  003F98                     __ptext35:
  8709                           	callstack 0
  8710  003F98                     ___aomod:
  8711                           	callstack 23
  8712  003F98  0E00               	movlw	0
  8713  003F9A  6E14               	movwf	___aomod@sign^0,c
  8714  003F9C  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  8715  003F9E  EFD5  F01F         	goto	u2860
  8716  003FA2  EFD3  F01F         	goto	u2861
  8717  003FA6                     u2861:
  8718  003FA6  EFE7  F01F         	goto	l3500
  8719  003FAA                     u2860:
  8720  003FAA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8721  003FAC  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8722  003FAE  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8723  003FB0  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8724  003FB2  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8725  003FB4  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8726  003FB6  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8727  003FB8  6C03               	negf	___aomod@dividend^0,c
  8728  003FBA  0E00               	movlw	0
  8729  003FBC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8730  003FBE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8731  003FC0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8732  003FC2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8733  003FC4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8734  003FC6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8735  003FC8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8736  003FCA  0E01               	movlw	1
  8737  003FCC  6E14               	movwf	___aomod@sign^0,c
  8738  003FCE                     l3500:
  8739  003FCE  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  8740  003FD0  EFEE  F01F         	goto	u2870
  8741  003FD4  EFEC  F01F         	goto	u2871
  8742  003FD8                     u2871:
  8743  003FD8  EFFE  F01F         	goto	l3504
  8744  003FDC                     u2870:
  8745  003FDC  1E12               	comf	(___aomod@divisor+7)^0,f,c
  8746  003FDE  1E11               	comf	(___aomod@divisor+6)^0,f,c
  8747  003FE0  1E10               	comf	(___aomod@divisor+5)^0,f,c
  8748  003FE2  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  8749  003FE4  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  8750  003FE6  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  8751  003FE8  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  8752  003FEA  6C0B               	negf	___aomod@divisor^0,c
  8753  003FEC  0E00               	movlw	0
  8754  003FEE  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  8755  003FF0  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  8756  003FF2  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  8757  003FF4  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  8758  003FF6  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  8759  003FF8  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  8760  003FFA  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  8761  003FFC                     l3504:
  8762  003FFC  500B               	movf	___aomod@divisor^0,w,c
  8763  003FFE  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  8764  004000  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  8765  004002  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  8766  004004  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  8767  004006  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  8768  004008  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  8769  00400A  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  8770  00400C  B4D8               	btfsc	status,2,c
  8771  00400E  EF0B  F020         	goto	u2881
  8772  004012  EF0D  F020         	goto	u2880
  8773  004016                     u2881:
  8774  004016  EF55  F020         	goto	l3520
  8775  00401A                     u2880:
  8776  00401A  0E01               	movlw	1
  8777  00401C  6E13               	movwf	___aomod@counter^0,c
  8778  00401E  EF1B  F020         	goto	l3510
  8779  004022                     l3508:
  8780  004022  90D8               	bcf	status,0,c
  8781  004024  360B               	rlcf	___aomod@divisor^0,f,c
  8782  004026  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  8783  004028  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  8784  00402A  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  8785  00402C  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  8786  00402E  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  8787  004030  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  8788  004032  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  8789  004034  2A13               	incf	___aomod@counter^0,f,c
  8790  004036                     l3510:
  8791  004036  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  8792  004038  EF20  F020         	goto	u2891
  8793  00403C  EF22  F020         	goto	u2890
  8794  004040                     u2891:
  8795  004040  EF11  F020         	goto	l3508
  8796  004044                     u2890:
  8797  004044                     l3512:
  8798  004044  500B               	movf	___aomod@divisor^0,w,c
  8799  004046  5C03               	subwf	___aomod@dividend^0,w,c
  8800  004048  500C               	movf	(___aomod@divisor+1)^0,w,c
  8801  00404A  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  8802  00404C  500D               	movf	(___aomod@divisor+2)^0,w,c
  8803  00404E  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  8804  004050  500E               	movf	(___aomod@divisor+3)^0,w,c
  8805  004052  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  8806  004054  500F               	movf	(___aomod@divisor+4)^0,w,c
  8807  004056  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  8808  004058  5010               	movf	(___aomod@divisor+5)^0,w,c
  8809  00405A  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  8810  00405C  5011               	movf	(___aomod@divisor+6)^0,w,c
  8811  00405E  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  8812  004060  5012               	movf	(___aomod@divisor+7)^0,w,c
  8813  004062  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  8814  004064  A0D8               	btfss	status,0,c
  8815  004066  EF37  F020         	goto	u2901
  8816  00406A  EF39  F020         	goto	u2900
  8817  00406E                     u2901:
  8818  00406E  EF49  F020         	goto	l3516
  8819  004072                     u2900:
  8820  004072  500B               	movf	___aomod@divisor^0,w,c
  8821  004074  5E03               	subwf	___aomod@dividend^0,f,c
  8822  004076  500C               	movf	(___aomod@divisor+1)^0,w,c
  8823  004078  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  8824  00407A  500D               	movf	(___aomod@divisor+2)^0,w,c
  8825  00407C  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  8826  00407E  500E               	movf	(___aomod@divisor+3)^0,w,c
  8827  004080  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  8828  004082  500F               	movf	(___aomod@divisor+4)^0,w,c
  8829  004084  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  8830  004086  5010               	movf	(___aomod@divisor+5)^0,w,c
  8831  004088  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  8832  00408A  5011               	movf	(___aomod@divisor+6)^0,w,c
  8833  00408C  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  8834  00408E  5012               	movf	(___aomod@divisor+7)^0,w,c
  8835  004090  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  8836  004092                     l3516:
  8837  004092  90D8               	bcf	status,0,c
  8838  004094  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  8839  004096  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  8840  004098  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  8841  00409A  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  8842  00409C  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  8843  00409E  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  8844  0040A0  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  8845  0040A2  320B               	rrcf	___aomod@divisor^0,f,c
  8846  0040A4  2E13               	decfsz	___aomod@counter^0,f,c
  8847  0040A6  EF22  F020         	goto	l3512
  8848  0040AA                     l3520:
  8849  0040AA  5014               	movf	___aomod@sign^0,w,c
  8850  0040AC  B4D8               	btfsc	status,2,c
  8851  0040AE  EF5B  F020         	goto	u2911
  8852  0040B2  EF5D  F020         	goto	u2910
  8853  0040B6                     u2911:
  8854  0040B6  EF6D  F020         	goto	l3524
  8855  0040BA                     u2910:
  8856  0040BA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8857  0040BC  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8858  0040BE  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8859  0040C0  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8860  0040C2  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8861  0040C4  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8862  0040C6  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8863  0040C8  6C03               	negf	___aomod@dividend^0,c
  8864  0040CA  0E00               	movlw	0
  8865  0040CC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8866  0040CE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8867  0040D0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8868  0040D2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8869  0040D4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8870  0040D6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8871  0040D8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8872  0040DA                     l3524:
  8873  0040DA  C003  F003         	movff	___aomod@dividend,?___aomod
  8874  0040DE  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  8875  0040E2  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  8876  0040E6  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  8877  0040EA  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  8878  0040EE  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  8879  0040F2  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  8880  0040F6  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  8881  0040FA  0012               	return		;funcret
  8882  0040FC                     __end_of___aomod:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function ___aodiv *****************
  8886 ;; Defined at:
  8887 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  dividend        8    2[COMRAM] long long 
  8890 ;;  divisor         8   10[COMRAM] long long 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  quotient        8   20[COMRAM] long long 
  8893 ;;  sign            1   19[COMRAM] unsigned char 
  8894 ;;  counter         1   18[COMRAM] unsigned char 
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  8    2[COMRAM] long long 
  8897 ;; Registers used:
  8898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8904 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;Total ram usage:       26 bytes
  8909 ;; Hardware stack levels used: 1
  8910 ;; Hardware stack levels required when called: 2
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_dtoa
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text36
  8919  003E10                     __ptext36:
  8920                           	callstack 0
  8921  003E10                     ___aodiv:
  8922                           	callstack 23
  8923  003E10  0E00               	movlw	0
  8924  003E12  6E14               	movwf	___aodiv@sign^0,c
  8925  003E14  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  8926  003E16  EF11  F01F         	goto	u2790
  8927  003E1A  EF0F  F01F         	goto	u2791
  8928  003E1E                     u2791:
  8929  003E1E  EF23  F01F         	goto	l3456
  8930  003E22                     u2790:
  8931  003E22  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  8932  003E24  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  8933  003E26  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  8934  003E28  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  8935  003E2A  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  8936  003E2C  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  8937  003E2E  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  8938  003E30  6C0B               	negf	___aodiv@divisor^0,c
  8939  003E32  0E00               	movlw	0
  8940  003E34  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  8941  003E36  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  8942  003E38  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  8943  003E3A  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  8944  003E3C  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  8945  003E3E  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  8946  003E40  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  8947  003E42  0E01               	movlw	1
  8948  003E44  6E14               	movwf	___aodiv@sign^0,c
  8949  003E46                     l3456:
  8950  003E46  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  8951  003E48  EF2A  F01F         	goto	u2800
  8952  003E4C  EF28  F01F         	goto	u2801
  8953  003E50                     u2801:
  8954  003E50  EF3C  F01F         	goto	l3462
  8955  003E54                     u2800:
  8956  003E54  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  8957  003E56  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  8958  003E58  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  8959  003E5A  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  8960  003E5C  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  8961  003E5E  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  8962  003E60  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  8963  003E62  6C03               	negf	___aodiv@dividend^0,c
  8964  003E64  0E00               	movlw	0
  8965  003E66  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  8966  003E68  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  8967  003E6A  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  8968  003E6C  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  8969  003E6E  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  8970  003E70  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  8971  003E72  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  8972  003E74  0E01               	movlw	1
  8973  003E76  1A14               	xorwf	___aodiv@sign^0,f,c
  8974  003E78                     l3462:
  8975  003E78  EE20  F015         	lfsr	2,___aodiv@quotient
  8976  003E7C  0E07               	movlw	7
  8977  003E7E                     u2811:
  8978  003E7E  6ADE               	clrf	postinc2,c
  8979  003E80  06E8               	decf	wreg,f,c
  8980  003E82  E2FD               	bc	u2811
  8981  003E84  500B               	movf	___aodiv@divisor^0,w,c
  8982  003E86  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  8983  003E88  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  8984  003E8A  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  8985  003E8C  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  8986  003E8E  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  8987  003E90  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  8988  003E92  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  8989  003E94  B4D8               	btfsc	status,2,c
  8990  003E96  EF4F  F01F         	goto	u2821
  8991  003E9A  EF51  F01F         	goto	u2820
  8992  003E9E                     u2821:
  8993  003E9E  EFA3  F01F         	goto	l3484
  8994  003EA2                     u2820:
  8995  003EA2  0E01               	movlw	1
  8996  003EA4  6E13               	movwf	___aodiv@counter^0,c
  8997  003EA6  EF5F  F01F         	goto	l3470
  8998  003EAA                     l3468:
  8999  003EAA  90D8               	bcf	status,0,c
  9000  003EAC  360B               	rlcf	___aodiv@divisor^0,f,c
  9001  003EAE  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  9002  003EB0  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  9003  003EB2  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  9004  003EB4  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  9005  003EB6  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  9006  003EB8  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  9007  003EBA  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  9008  003EBC  2A13               	incf	___aodiv@counter^0,f,c
  9009  003EBE                     l3470:
  9010  003EBE  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  9011  003EC0  EF64  F01F         	goto	u2831
  9012  003EC4  EF66  F01F         	goto	u2830
  9013  003EC8                     u2831:
  9014  003EC8  EF55  F01F         	goto	l3468
  9015  003ECC                     u2830:
  9016  003ECC                     l3472:
  9017  003ECC  90D8               	bcf	status,0,c
  9018  003ECE  3615               	rlcf	___aodiv@quotient^0,f,c
  9019  003ED0  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  9020  003ED2  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  9021  003ED4  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  9022  003ED6  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  9023  003ED8  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  9024  003EDA  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  9025  003EDC  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  9026  003EDE  500B               	movf	___aodiv@divisor^0,w,c
  9027  003EE0  5C03               	subwf	___aodiv@dividend^0,w,c
  9028  003EE2  500C               	movf	(___aodiv@divisor+1)^0,w,c
  9029  003EE4  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  9030  003EE6  500D               	movf	(___aodiv@divisor+2)^0,w,c
  9031  003EE8  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  9032  003EEA  500E               	movf	(___aodiv@divisor+3)^0,w,c
  9033  003EEC  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  9034  003EEE  500F               	movf	(___aodiv@divisor+4)^0,w,c
  9035  003EF0  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  9036  003EF2  5010               	movf	(___aodiv@divisor+5)^0,w,c
  9037  003EF4  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  9038  003EF6  5011               	movf	(___aodiv@divisor+6)^0,w,c
  9039  003EF8  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  9040  003EFA  5012               	movf	(___aodiv@divisor+7)^0,w,c
  9041  003EFC  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  9042  003EFE  A0D8               	btfss	status,0,c
  9043  003F00  EF84  F01F         	goto	u2841
  9044  003F04  EF86  F01F         	goto	u2840
  9045  003F08                     u2841:
  9046  003F08  EF97  F01F         	goto	l3480
  9047  003F0C                     u2840:
  9048  003F0C  500B               	movf	___aodiv@divisor^0,w,c
  9049  003F0E  5E03               	subwf	___aodiv@dividend^0,f,c
  9050  003F10  500C               	movf	(___aodiv@divisor+1)^0,w,c
  9051  003F12  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  9052  003F14  500D               	movf	(___aodiv@divisor+2)^0,w,c
  9053  003F16  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  9054  003F18  500E               	movf	(___aodiv@divisor+3)^0,w,c
  9055  003F1A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  9056  003F1C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  9057  003F1E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  9058  003F20  5010               	movf	(___aodiv@divisor+5)^0,w,c
  9059  003F22  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  9060  003F24  5011               	movf	(___aodiv@divisor+6)^0,w,c
  9061  003F26  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  9062  003F28  5012               	movf	(___aodiv@divisor+7)^0,w,c
  9063  003F2A  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  9064  003F2C  8015               	bsf	___aodiv@quotient^0,0,c
  9065  003F2E                     l3480:
  9066  003F2E  90D8               	bcf	status,0,c
  9067  003F30  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  9068  003F32  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  9069  003F34  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  9070  003F36  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  9071  003F38  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  9072  003F3A  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  9073  003F3C  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  9074  003F3E  320B               	rrcf	___aodiv@divisor^0,f,c
  9075  003F40  2E13               	decfsz	___aodiv@counter^0,f,c
  9076  003F42  EF66  F01F         	goto	l3472
  9077  003F46                     l3484:
  9078  003F46  5014               	movf	___aodiv@sign^0,w,c
  9079  003F48  B4D8               	btfsc	status,2,c
  9080  003F4A  EFA9  F01F         	goto	u2851
  9081  003F4E  EFAB  F01F         	goto	u2850
  9082  003F52                     u2851:
  9083  003F52  EFBB  F01F         	goto	l3488
  9084  003F56                     u2850:
  9085  003F56  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  9086  003F58  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  9087  003F5A  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  9088  003F5C  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  9089  003F5E  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  9090  003F60  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  9091  003F62  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  9092  003F64  6C15               	negf	___aodiv@quotient^0,c
  9093  003F66  0E00               	movlw	0
  9094  003F68  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  9095  003F6A  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  9096  003F6C  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  9097  003F6E  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  9098  003F70  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  9099  003F72  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  9100  003F74  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  9101  003F76                     l3488:
  9102  003F76  C015  F003         	movff	___aodiv@quotient,?___aodiv
  9103  003F7A  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  9104  003F7E  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  9105  003F82  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  9106  003F86  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  9107  003F8A  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  9108  003F8E  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  9109  003F92  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  9110  003F96  0012               	return		;funcret
  9111  003F98                     __end_of___aodiv:
  9112                           	callstack 0
  9113                           
  9114 ;; *************** function _sendStringSerial4 *****************
  9115 ;; Defined at:
  9116 ;;		line 36 in file "serial.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  string          2    3[COMRAM] PTR unsigned char 
  9119 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;Total ram usage:        2 bytes
  9136 ;; Hardware stack levels used: 1
  9137 ;; Hardware stack levels required when called: 3
  9138 ;; This function calls:
  9139 ;;		_sendCharSerial4
  9140 ;; This function is called by:
  9141 ;;		_color_display
  9142 ;;		_color_predict
  9143 ;;		_check_color_reading
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text37
  9148  0053A2                     __ptext37:
  9149                           	callstack 0
  9150  0053A2                     _sendStringSerial4:
  9151                           	callstack 26
  9152  0053A2                     
  9153                           ;serial.c: 38:     while(*string != 0){
  9154  0053A2  EFDC  F029         	goto	l4304
  9155  0053A6                     l4300:
  9156                           
  9157                           ;serial.c: 39:   sendCharSerial4(*string++);}
  9158  0053A6  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  9159  0053AA  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9160  0053AE  50DF               	movf	indf2,w,c
  9161  0053B0  ECC8  F02A         	call	_sendCharSerial4
  9162  0053B4  4A04               	infsnz	sendStringSerial4@string^0,f,c
  9163  0053B6  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  9164  0053B8                     l4304:
  9165                           
  9166                           ;serial.c: 38:     while(*string != 0){
  9167  0053B8  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  9168  0053BC  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9169  0053C0  50DF               	movf	indf2,w,c
  9170  0053C2  A4D8               	btfss	status,2,c
  9171  0053C4  EFE6  F029         	goto	u4181
  9172  0053C8  EFE8  F029         	goto	u4180
  9173  0053CC                     u4181:
  9174  0053CC  EFD3  F029         	goto	l4300
  9175  0053D0                     u4180:
  9176  0053D0  0012               	return		;funcret
  9177  0053D2                     __end_of_sendStringSerial4:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _sendCharSerial4 *****************
  9181 ;; Defined at:
  9182 ;;		line 29 in file "serial.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  charToSend      1    wreg     unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  charToSend      1    2[COMRAM] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:        1 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 2
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_sendStringSerial4
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text38
  9211  005590                     __ptext38:
  9212                           	callstack 0
  9213  005590                     _sendCharSerial4:
  9214                           	callstack 26
  9215                           
  9216                           ;incstack = 0
  9217                           ;sendCharSerial4@charToSend stored from wreg
  9218  005590  6E03               	movwf	sendCharSerial4@charToSend^0,c
  9219  005592                     l430:
  9220  005592  010E               	movlb	14	; () banked
  9221  005594  A537               	btfss	55,2,b	;volatile
  9222  005596  EFCF  F02A         	goto	u4001
  9223  00559A  EFD1  F02A         	goto	u4000
  9224  00559E                     u4001:
  9225  00559E  EFC9  F02A         	goto	l430
  9226  0055A2                     u4000:
  9227  0055A2                     
  9228                           ; BSR set to: 14
  9229                           ;serial.c: 31:     TX4REG = charToSend;
  9230  0055A2  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9231  0055A6                     
  9232                           ; BSR set to: 14
  9233  0055A6  0012               	return		;funcret
  9234  0055A8                     __end_of_sendCharSerial4:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _color_click_init *****************
  9238 ;; Defined at:
  9239 ;;		line 65 in file "color.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        1 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 5
  9260 ;; This function calls:
  9261 ;;		_I2C_2_Master_Init
  9262 ;;		_color_writetoaddr
  9263 ;; This function is called by:
  9264 ;;		_main
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text39
  9269  00536E                     __ptext39:
  9270                           	callstack 0
  9271  00536E                     _color_click_init:
  9272                           	callstack 25
  9273  00536E                     
  9274                           ;color.c: 68:     I2C_2_Master_Init();
  9275  00536E  EC00  F02A         	call	_I2C_2_Master_Init	;wreg free
  9276  005372                     
  9277                           ;color.c: 71:  color_writetoaddr(0x00, 0x01);
  9278  005372  0E01               	movlw	1
  9279  005374  6E05               	movwf	color_writetoaddr@value^0,c
  9280  005376  0E00               	movlw	0
  9281  005378  EC3C  F02A         	call	_color_writetoaddr
  9282  00537C                     
  9283                           ;color.c: 72:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9284  00537C  0E3F               	movlw	63
  9285  00537E  6E07               	movwf	??_color_click_init^0,c
  9286  005380  0E55               	movlw	85
  9287  005382                     u6727:
  9288  005382  2EE8               	decfsz	wreg,f,c
  9289  005384  D7FE               	bra	u6727
  9290  005386  2E07               	decfsz	??_color_click_init^0,f,c
  9291  005388  D7FC               	bra	u6727
  9292  00538A  F000               	nop	
  9293  00538C                     
  9294                           ;color.c: 75:  color_writetoaddr(0x00, 0x03);
  9295  00538C  0E03               	movlw	3
  9296  00538E  6E05               	movwf	color_writetoaddr@value^0,c
  9297  005390  0E00               	movlw	0
  9298  005392  EC3C  F02A         	call	_color_writetoaddr
  9299  005396                     
  9300                           ;color.c: 78:  color_writetoaddr(0x01, 0xD5);
  9301  005396  0ED5               	movlw	213
  9302  005398  6E05               	movwf	color_writetoaddr@value^0,c
  9303  00539A  0E01               	movlw	1
  9304  00539C  EC3C  F02A         	call	_color_writetoaddr
  9305  0053A0  0012               	return		;funcret
  9306  0053A2                     __end_of_color_click_init:
  9307                           	callstack 0
  9308                           
  9309 ;; *************** function _color_writetoaddr *****************
  9310 ;; Defined at:
  9311 ;;		line 81 in file "color.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  address         1    wreg     unsigned char 
  9314 ;;  value           1    4[COMRAM] unsigned char 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  address         1    5[COMRAM] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, status,2, status,0, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9326 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;Total ram usage:        2 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 4
  9333 ;; This function calls:
  9334 ;;		_I2C_2_Master_Start
  9335 ;;		_I2C_2_Master_Stop
  9336 ;;		_I2C_2_Master_Write
  9337 ;; This function is called by:
  9338 ;;		_color_click_init
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text40
  9343  005478                     __ptext40:
  9344                           	callstack 0
  9345  005478                     _color_writetoaddr:
  9346                           	callstack 25
  9347                           
  9348                           ;incstack = 0
  9349                           ;color_writetoaddr@address stored from wreg
  9350  005478  6E06               	movwf	color_writetoaddr@address^0,c
  9351  00547A                     
  9352                           ;color.c: 82:     I2C_2_Master_Start();
  9353  00547A  ECF0  F02A         	call	_I2C_2_Master_Start	;wreg free
  9354                           
  9355                           ;color.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  9356  00547E  0E52               	movlw	82
  9357  005480  ECDF  F02A         	call	_I2C_2_Master_Write
  9358                           
  9359                           ;color.c: 84:     I2C_2_Master_Write(0x80 | address);
  9360  005484  5006               	movf	color_writetoaddr@address^0,w,c
  9361  005486  0980               	iorlw	128
  9362  005488  ECDF  F02A         	call	_I2C_2_Master_Write
  9363                           
  9364                           ;color.c: 85:     I2C_2_Master_Write(value);
  9365  00548C  5005               	movf	color_writetoaddr@value^0,w,c
  9366  00548E  ECDF  F02A         	call	_I2C_2_Master_Write
  9367                           
  9368                           ;color.c: 86:     I2C_2_Master_Stop();
  9369  005492  ECEB  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9370  005496  0012               	return		;funcret
  9371  005498                     __end_of_color_writetoaddr:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _I2C_2_Master_Init *****************
  9375 ;; Defined at:
  9376 ;;		line 4 in file "i2c.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; Hardware stack levels required when called: 2
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_color_click_init
  9401 ;;		_main
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text41
  9406  005400                     __ptext41:
  9407                           	callstack 0
  9408  005400                     _I2C_2_Master_Init:
  9409                           	callstack 27
  9410  005400                     
  9411                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9412  005400  010E               	movlb	14	; () banked
  9413  005402  51D9               	movf	217,w,b	;volatile
  9414  005404  0BF0               	andlw	-16
  9415  005406  0908               	iorlw	8
  9416  005408  6FD9               	movwf	217,b	;volatile
  9417  00540A                     
  9418                           ; BSR set to: 14
  9419                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9420  00540A  8BD9               	bsf	217,5,b	;volatile
  9421                           
  9422                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9423  00540C  0E9F               	movlw	159
  9424  00540E  6FD6               	movwf	214,b	;volatile
  9425  005410                     
  9426                           ; BSR set to: 14
  9427                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9428  005410  8A84               	bsf	132,5,c	;volatile
  9429  005412                     
  9430                           ; BSR set to: 14
  9431                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9432  005412  8C84               	bsf	132,6,c	;volatile
  9433  005414                     
  9434                           ; BSR set to: 14
  9435                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9436  005414  9BA7               	bcf	167,5,b	;volatile
  9437  005416                     
  9438                           ; BSR set to: 14
  9439                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9440  005416  9DA7               	bcf	167,6,b	;volatile
  9441                           
  9442                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9443  005418  0E1D               	movlw	29
  9444  00541A  6F1D               	movwf	29,b	;volatile
  9445                           
  9446                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9447  00541C  0E1E               	movlw	30
  9448  00541E  6F1C               	movwf	28,b	;volatile
  9449                           
  9450                           ;i2c.c: 18:   RD5PPS=0x1C;
  9451  005420  0E1C               	movlw	28
  9452  005422  6F6F               	movwf	111,b	;volatile
  9453                           
  9454                           ;i2c.c: 19:   RD6PPS=0x1B;
  9455  005424  0E1B               	movlw	27
  9456  005426  6F70               	movwf	112,b	;volatile
  9457  005428                     
  9458                           ; BSR set to: 14
  9459  005428  0012               	return		;funcret
  9460  00542A                     __end_of_I2C_2_Master_Init:
  9461                           	callstack 0
  9462                           
  9463 ;; *************** function _calibrate_white *****************
  9464 ;; Defined at:
  9465 ;;		line 256 in file "color.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  w               2   13[COMRAM] PTR struct white_card
  9468 ;;		 -> main@white(26), 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;Total ram usage:        4 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 5
  9487 ;; This function calls:
  9488 ;;		_LED_B
  9489 ;;		_LED_C
  9490 ;;		_LED_G
  9491 ;;		_LED_R
  9492 ;;		_color_read_Blue
  9493 ;;		_color_read_Clear
  9494 ;;		_color_read_Green
  9495 ;;		_color_read_Red
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text42
  9502  003C6A                     __ptext42:
  9503                           	callstack 0
  9504  003C6A                     _calibrate_white:
  9505                           	callstack 25
  9506  003C6A                     
  9507                           ;color.c: 256: void calibrate_white(struct white_card *w);color.c: 257: {;color.c: 258: 
      +                              LED_R();
  9508  003C6A  EC4C  F02A         	call	_LED_R	;wreg free
  9509  003C6E                     
  9510                           ;color.c: 260:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9511  003C6E  EC9A  F027         	call	_color_read_Red	;wreg free
  9512  003C72  C00E  FFD9         	movff	calibrate_white@w,fsr2l
  9513  003C76  C00F  FFDA         	movff	calibrate_white@w+1,fsr2h
  9514  003C7A  C007  FFDE         	movff	?_color_read_Red,postinc2
  9515  003C7E  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9516  003C82  ECC2  F027         	call	_color_read_Green	;wreg free
  9517  003C86  EE20 F002          	lfsr	2,2
  9518  003C8A  500E               	movf	calibrate_white@w^0,w,c
  9519  003C8C  26D9               	addwf	fsr2l,f,c
  9520  003C8E  500F               	movf	(calibrate_white@w+1)^0,w,c
  9521  003C90  22DA               	addwfc	fsr2h,f,c
  9522  003C92  C007  FFDE         	movff	?_color_read_Green,postinc2
  9523  003C96  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  9524  003C9A  EC12  F028         	call	_color_read_Blue	;wreg free
  9525  003C9E  EE20 F004          	lfsr	2,4
  9526  003CA2  500E               	movf	calibrate_white@w^0,w,c
  9527  003CA4  26D9               	addwf	fsr2l,f,c
  9528  003CA6  500F               	movf	(calibrate_white@w+1)^0,w,c
  9529  003CA8  22DA               	addwfc	fsr2h,f,c
  9530  003CAA  C007  FFDE         	movff	?_color_read_Blue,postinc2
  9531  003CAE  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  9532  003CB2                     
  9533                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9534  003CB2  0E09               	movlw	9
  9535  003CB4  6E11               	movwf	(??_calibrate_white+1)^0,c
  9536  003CB6  0E1E               	movlw	30
  9537  003CB8  6E10               	movwf	??_calibrate_white^0,c
  9538  003CBA  0EE4               	movlw	228
  9539  003CBC                     u6737:
  9540  003CBC  2EE8               	decfsz	wreg,f,c
  9541  003CBE  D7FE               	bra	u6737
  9542  003CC0  2E10               	decfsz	??_calibrate_white^0,f,c
  9543  003CC2  D7FC               	bra	u6737
  9544  003CC4  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  9545  003CC6  D7FA               	bra	u6737
  9546  003CC8  D000               	nop2	
  9547  003CCA                     
  9548                           ;color.c: 263:     LED_G();
  9549  003CCA  EC5C  F02A         	call	_LED_G	;wreg free
  9550  003CCE                     
  9551                           ;color.c: 265:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9552  003CCE  EC9A  F027         	call	_color_read_Red	;wreg free
  9553  003CD2  EE20 F006          	lfsr	2,6
  9554  003CD6  500E               	movf	calibrate_white@w^0,w,c
  9555  003CD8  26D9               	addwf	fsr2l,f,c
  9556  003CDA  500F               	movf	(calibrate_white@w+1)^0,w,c
  9557  003CDC  22DA               	addwfc	fsr2h,f,c
  9558  003CDE  C007  FFDE         	movff	?_color_read_Red,postinc2
  9559  003CE2  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9560  003CE6  ECC2  F027         	call	_color_read_Green	;wreg free
  9561  003CEA  EE20 F008          	lfsr	2,8
  9562  003CEE  500E               	movf	calibrate_white@w^0,w,c
  9563  003CF0  26D9               	addwf	fsr2l,f,c
  9564  003CF2  500F               	movf	(calibrate_white@w+1)^0,w,c
  9565  003CF4  22DA               	addwfc	fsr2h,f,c
  9566  003CF6  C007  FFDE         	movff	?_color_read_Green,postinc2
  9567  003CFA  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  9568  003CFE  EC12  F028         	call	_color_read_Blue	;wreg free
  9569  003D02  EE20 F00A          	lfsr	2,10
  9570  003D06  500E               	movf	calibrate_white@w^0,w,c
  9571  003D08  26D9               	addwf	fsr2l,f,c
  9572  003D0A  500F               	movf	(calibrate_white@w+1)^0,w,c
  9573  003D0C  22DA               	addwfc	fsr2h,f,c
  9574  003D0E  C007  FFDE         	movff	?_color_read_Blue,postinc2
  9575  003D12  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  9576                           
  9577                           ;color.c: 267:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9578  003D16  0E09               	movlw	9
  9579  003D18  6E11               	movwf	(??_calibrate_white+1)^0,c
  9580  003D1A  0E1E               	movlw	30
  9581  003D1C  6E10               	movwf	??_calibrate_white^0,c
  9582  003D1E  0EE4               	movlw	228
  9583  003D20                     u6747:
  9584  003D20  2EE8               	decfsz	wreg,f,c
  9585  003D22  D7FE               	bra	u6747
  9586  003D24  2E10               	decfsz	??_calibrate_white^0,f,c
  9587  003D26  D7FC               	bra	u6747
  9588  003D28  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  9589  003D2A  D7FA               	bra	u6747
  9590  003D2C  D000               	nop2	
  9591  003D2E                     
  9592                           ;color.c: 269:     LED_B();
  9593  003D2E  EC7C  F02A         	call	_LED_B	;wreg free
  9594  003D32                     
  9595                           ;color.c: 271:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  9596  003D32  EC9A  F027         	call	_color_read_Red	;wreg free
  9597  003D36  EE20 F00C          	lfsr	2,12
  9598  003D3A  500E               	movf	calibrate_white@w^0,w,c
  9599  003D3C  26D9               	addwf	fsr2l,f,c
  9600  003D3E  500F               	movf	(calibrate_white@w+1)^0,w,c
  9601  003D40  22DA               	addwfc	fsr2h,f,c
  9602  003D42  C007  FFDE         	movff	?_color_read_Red,postinc2
  9603  003D46  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9604  003D4A  ECC2  F027         	call	_color_read_Green	;wreg free
  9605  003D4E  EE20 F00E          	lfsr	2,14
  9606  003D52  500E               	movf	calibrate_white@w^0,w,c
  9607  003D54  26D9               	addwf	fsr2l,f,c
  9608  003D56  500F               	movf	(calibrate_white@w+1)^0,w,c
  9609  003D58  22DA               	addwfc	fsr2h,f,c
  9610  003D5A  C007  FFDE         	movff	?_color_read_Green,postinc2
  9611  003D5E  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  9612  003D62  EC12  F028         	call	_color_read_Blue	;wreg free
  9613  003D66  EE20 F010          	lfsr	2,16
  9614  003D6A  500E               	movf	calibrate_white@w^0,w,c
  9615  003D6C  26D9               	addwf	fsr2l,f,c
  9616  003D6E  500F               	movf	(calibrate_white@w+1)^0,w,c
  9617  003D70  22DA               	addwfc	fsr2h,f,c
  9618  003D72  C007  FFDE         	movff	?_color_read_Blue,postinc2
  9619  003D76  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  9620  003D7A                     
  9621                           ;color.c: 272:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9622  003D7A  0E09               	movlw	9
  9623  003D7C  6E11               	movwf	(??_calibrate_white+1)^0,c
  9624  003D7E  0E1E               	movlw	30
  9625  003D80  6E10               	movwf	??_calibrate_white^0,c
  9626  003D82  0EE4               	movlw	228
  9627  003D84                     u6757:
  9628  003D84  2EE8               	decfsz	wreg,f,c
  9629  003D86  D7FE               	bra	u6757
  9630  003D88  2E10               	decfsz	??_calibrate_white^0,f,c
  9631  003D8A  D7FC               	bra	u6757
  9632  003D8C  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  9633  003D8E  D7FA               	bra	u6757
  9634  003D90  D000               	nop2	
  9635  003D92                     
  9636                           ;color.c: 274:     LED_C();
  9637  003D92  EC6C  F02A         	call	_LED_C	;wreg free
  9638                           
  9639                           ;color.c: 275:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  9640  003D96  EC9A  F027         	call	_color_read_Red	;wreg free
  9641  003D9A  EE20 F012          	lfsr	2,18
  9642  003D9E  500E               	movf	calibrate_white@w^0,w,c
  9643  003DA0  26D9               	addwf	fsr2l,f,c
  9644  003DA2  500F               	movf	(calibrate_white@w+1)^0,w,c
  9645  003DA4  22DA               	addwfc	fsr2h,f,c
  9646  003DA6  C007  FFDE         	movff	?_color_read_Red,postinc2
  9647  003DAA  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9648  003DAE  ECC2  F027         	call	_color_read_Green	;wreg free
  9649  003DB2  EE20 F014          	lfsr	2,20
  9650  003DB6  500E               	movf	calibrate_white@w^0,w,c
  9651  003DB8  26D9               	addwf	fsr2l,f,c
  9652  003DBA  500F               	movf	(calibrate_white@w+1)^0,w,c
  9653  003DBC  22DA               	addwfc	fsr2h,f,c
  9654  003DBE  C007  FFDE         	movff	?_color_read_Green,postinc2
  9655  003DC2  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  9656  003DC6  EC12  F028         	call	_color_read_Blue	;wreg free
  9657  003DCA  EE20 F016          	lfsr	2,22
  9658  003DCE  500E               	movf	calibrate_white@w^0,w,c
  9659  003DD0  26D9               	addwf	fsr2l,f,c
  9660  003DD2  500F               	movf	(calibrate_white@w+1)^0,w,c
  9661  003DD4  22DA               	addwfc	fsr2h,f,c
  9662  003DD6  C007  FFDE         	movff	?_color_read_Blue,postinc2
  9663  003DDA  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  9664  003DDE  ECEA  F027         	call	_color_read_Clear	;wreg free
  9665  003DE2  EE20 F018          	lfsr	2,24
  9666  003DE6  500E               	movf	calibrate_white@w^0,w,c
  9667  003DE8  26D9               	addwf	fsr2l,f,c
  9668  003DEA  500F               	movf	(calibrate_white@w+1)^0,w,c
  9669  003DEC  22DA               	addwfc	fsr2h,f,c
  9670  003DEE  C007  FFDE         	movff	?_color_read_Clear,postinc2
  9671  003DF2  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  9672  003DF6                     
  9673                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9674  003DF6  0E09               	movlw	9
  9675  003DF8  6E11               	movwf	(??_calibrate_white+1)^0,c
  9676  003DFA  0E1E               	movlw	30
  9677  003DFC  6E10               	movwf	??_calibrate_white^0,c
  9678  003DFE  0EE4               	movlw	228
  9679  003E00                     u6767:
  9680  003E00  2EE8               	decfsz	wreg,f,c
  9681  003E02  D7FE               	bra	u6767
  9682  003E04  2E10               	decfsz	??_calibrate_white^0,f,c
  9683  003E06  D7FC               	bra	u6767
  9684  003E08  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  9685  003E0A  D7FA               	bra	u6767
  9686  003E0C  D000               	nop2	
  9687  003E0E  0012               	return		;funcret
  9688  003E10                     __end_of_calibrate_white:
  9689                           	callstack 0
  9690                           
  9691 ;; *************** function _color_read_Red *****************
  9692 ;; Defined at:
  9693 ;;		line 89 in file "color.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  tmp             2   11[COMRAM] unsigned int 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2    6[COMRAM] unsigned int 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9710 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;Total ram usage:        7 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 4
  9714 ;; This function calls:
  9715 ;;		_I2C_2_Master_Read
  9716 ;;		_I2C_2_Master_RepStart
  9717 ;;		_I2C_2_Master_Start
  9718 ;;		_I2C_2_Master_Stop
  9719 ;;		_I2C_2_Master_Write
  9720 ;; This function is called by:
  9721 ;;		_read_color
  9722 ;;		_calibrate_white
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text43
  9727  004F34                     __ptext43:
  9728                           	callstack 0
  9729  004F34                     _color_read_Red:
  9730                           	callstack 23
  9731  004F34                     
  9732                           ;color.c: 91:  unsigned int tmp;;color.c: 92:  I2C_2_Master_Start();
  9733  004F34  ECF0  F02A         	call	_I2C_2_Master_Start	;wreg free
  9734                           
  9735                           ;color.c: 93:  I2C_2_Master_Write(0x52 | 0x00);
  9736  004F38  0E52               	movlw	82
  9737  004F3A  ECDF  F02A         	call	_I2C_2_Master_Write
  9738                           
  9739                           ;color.c: 94:  I2C_2_Master_Write(0xA0 | 0x16);
  9740  004F3E  0EB6               	movlw	182
  9741  004F40  ECDF  F02A         	call	_I2C_2_Master_Write
  9742                           
  9743                           ;color.c: 95:  I2C_2_Master_RepStart();
  9744  004F44  ECF5  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9745                           
  9746                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x01);
  9747  004F48  0E53               	movlw	83
  9748  004F4A  ECDF  F02A         	call	_I2C_2_Master_Write
  9749                           
  9750                           ;color.c: 97:  tmp=I2C_2_Master_Read(1);
  9751  004F4E  0E01               	movlw	1
  9752  004F50  ECC3  F028         	call	_I2C_2_Master_Read
  9753  004F54  6E09               	movwf	??_color_read_Red^0,c
  9754  004F56  5009               	movf	??_color_read_Red^0,w,c
  9755  004F58  6E0C               	movwf	color_read_Red@tmp^0,c
  9756  004F5A  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  9757                           
  9758                           ;color.c: 98:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9759  004F5C  0E00               	movlw	0
  9760  004F5E  ECC3  F028         	call	_I2C_2_Master_Read
  9761  004F62  6E09               	movwf	??_color_read_Red^0,c
  9762  004F64  5009               	movf	??_color_read_Red^0,w,c
  9763  004F66  6E0B               	movwf	(??_color_read_Red+2)^0,c
  9764  004F68  6A0A               	clrf	(??_color_read_Red+1)^0,c
  9765  004F6A  500C               	movf	color_read_Red@tmp^0,w,c
  9766  004F6C  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  9767  004F6E  6E0C               	movwf	color_read_Red@tmp^0,c
  9768  004F70  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  9769  004F72  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  9770  004F74  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  9771                           
  9772                           ;color.c: 99:  I2C_2_Master_Stop();
  9773  004F76  ECEB  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9774  004F7A                     
  9775                           ;color.c: 100:  return tmp;
  9776  004F7A  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  9777  004F7E  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9778  004F82  0012               	return		;funcret
  9779  004F84                     __end_of_color_read_Red:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _color_read_Green *****************
  9783 ;; Defined at:
  9784 ;;		line 117 in file "color.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  tmp             2   11[COMRAM] unsigned int 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  2    6[COMRAM] unsigned int 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;Total ram usage:        7 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 4
  9805 ;; This function calls:
  9806 ;;		_I2C_2_Master_Read
  9807 ;;		_I2C_2_Master_RepStart
  9808 ;;		_I2C_2_Master_Start
  9809 ;;		_I2C_2_Master_Stop
  9810 ;;		_I2C_2_Master_Write
  9811 ;; This function is called by:
  9812 ;;		_read_color
  9813 ;;		_calibrate_white
  9814 ;;		_distance_measure
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text44
  9819  004F84                     __ptext44:
  9820                           	callstack 0
  9821  004F84                     _color_read_Green:
  9822                           	callstack 23
  9823  004F84                     
  9824                           ;color.c: 119:  unsigned int tmp;;color.c: 120:  I2C_2_Master_Start();
  9825  004F84  ECF0  F02A         	call	_I2C_2_Master_Start	;wreg free
  9826                           
  9827                           ;color.c: 121:  I2C_2_Master_Write(0x52 | 0x00);
  9828  004F88  0E52               	movlw	82
  9829  004F8A  ECDF  F02A         	call	_I2C_2_Master_Write
  9830                           
  9831                           ;color.c: 122:  I2C_2_Master_Write(0xA0 | 0x18);
  9832  004F8E  0EB8               	movlw	184
  9833  004F90  ECDF  F02A         	call	_I2C_2_Master_Write
  9834                           
  9835                           ;color.c: 123:  I2C_2_Master_RepStart();
  9836  004F94  ECF5  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9837                           
  9838                           ;color.c: 124:  I2C_2_Master_Write(0x52 | 0x01);
  9839  004F98  0E53               	movlw	83
  9840  004F9A  ECDF  F02A         	call	_I2C_2_Master_Write
  9841                           
  9842                           ;color.c: 125:  tmp=I2C_2_Master_Read(1);
  9843  004F9E  0E01               	movlw	1
  9844  004FA0  ECC3  F028         	call	_I2C_2_Master_Read
  9845  004FA4  6E09               	movwf	??_color_read_Green^0,c
  9846  004FA6  5009               	movf	??_color_read_Green^0,w,c
  9847  004FA8  6E0C               	movwf	color_read_Green@tmp^0,c
  9848  004FAA  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  9849                           
  9850                           ;color.c: 126:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9851  004FAC  0E00               	movlw	0
  9852  004FAE  ECC3  F028         	call	_I2C_2_Master_Read
  9853  004FB2  6E09               	movwf	??_color_read_Green^0,c
  9854  004FB4  5009               	movf	??_color_read_Green^0,w,c
  9855  004FB6  6E0B               	movwf	(??_color_read_Green+2)^0,c
  9856  004FB8  6A0A               	clrf	(??_color_read_Green+1)^0,c
  9857  004FBA  500C               	movf	color_read_Green@tmp^0,w,c
  9858  004FBC  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  9859  004FBE  6E0C               	movwf	color_read_Green@tmp^0,c
  9860  004FC0  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  9861  004FC2  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  9862  004FC4  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  9863                           
  9864                           ;color.c: 127:  I2C_2_Master_Stop();
  9865  004FC6  ECEB  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9866  004FCA                     
  9867                           ;color.c: 128:  return tmp;
  9868  004FCA  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  9869  004FCE  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9870  004FD2  0012               	return		;funcret
  9871  004FD4                     __end_of_color_read_Green:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function _color_read_Clear *****************
  9875 ;; Defined at:
  9876 ;;		line 131 in file "color.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  tmp             2   11[COMRAM] unsigned int 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  2    6[COMRAM] unsigned int 
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, status,0, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9894 ;;Total ram usage:        7 bytes
  9895 ;; Hardware stack levels used: 1
  9896 ;; Hardware stack levels required when called: 4
  9897 ;; This function calls:
  9898 ;;		_I2C_2_Master_Read
  9899 ;;		_I2C_2_Master_RepStart
  9900 ;;		_I2C_2_Master_Start
  9901 ;;		_I2C_2_Master_Stop
  9902 ;;		_I2C_2_Master_Write
  9903 ;; This function is called by:
  9904 ;;		_read_color
  9905 ;;		_calibrate_white
  9906 ;;		_distance_measure
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text45
  9911  004FD4                     __ptext45:
  9912                           	callstack 0
  9913  004FD4                     _color_read_Clear:
  9914                           	callstack 23
  9915  004FD4                     
  9916                           ;color.c: 133:  unsigned int tmp;;color.c: 134:  I2C_2_Master_Start();
  9917  004FD4  ECF0  F02A         	call	_I2C_2_Master_Start	;wreg free
  9918                           
  9919                           ;color.c: 135:  I2C_2_Master_Write(0x52 | 0x00);
  9920  004FD8  0E52               	movlw	82
  9921  004FDA  ECDF  F02A         	call	_I2C_2_Master_Write
  9922                           
  9923                           ;color.c: 136:  I2C_2_Master_Write(0xA0 | 0x14);
  9924  004FDE  0EB4               	movlw	180
  9925  004FE0  ECDF  F02A         	call	_I2C_2_Master_Write
  9926                           
  9927                           ;color.c: 137:  I2C_2_Master_RepStart();
  9928  004FE4  ECF5  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9929                           
  9930                           ;color.c: 138:  I2C_2_Master_Write(0x52 | 0x01);
  9931  004FE8  0E53               	movlw	83
  9932  004FEA  ECDF  F02A         	call	_I2C_2_Master_Write
  9933                           
  9934                           ;color.c: 139:  tmp=I2C_2_Master_Read(1);
  9935  004FEE  0E01               	movlw	1
  9936  004FF0  ECC3  F028         	call	_I2C_2_Master_Read
  9937  004FF4  6E09               	movwf	??_color_read_Clear^0,c
  9938  004FF6  5009               	movf	??_color_read_Clear^0,w,c
  9939  004FF8  6E0C               	movwf	color_read_Clear@tmp^0,c
  9940  004FFA  6A0D               	clrf	(color_read_Clear@tmp+1)^0,c
  9941                           
  9942                           ;color.c: 140:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9943  004FFC  0E00               	movlw	0
  9944  004FFE  ECC3  F028         	call	_I2C_2_Master_Read
  9945  005002  6E09               	movwf	??_color_read_Clear^0,c
  9946  005004  5009               	movf	??_color_read_Clear^0,w,c
  9947  005006  6E0B               	movwf	(??_color_read_Clear+2)^0,c
  9948  005008  6A0A               	clrf	(??_color_read_Clear+1)^0,c
  9949  00500A  500C               	movf	color_read_Clear@tmp^0,w,c
  9950  00500C  100A               	iorwf	(??_color_read_Clear+1)^0,w,c
  9951  00500E  6E0C               	movwf	color_read_Clear@tmp^0,c
  9952  005010  500D               	movf	(color_read_Clear@tmp+1)^0,w,c
  9953  005012  100B               	iorwf	(??_color_read_Clear+2)^0,w,c
  9954  005014  6E0D               	movwf	(color_read_Clear@tmp+1)^0,c
  9955                           
  9956                           ;color.c: 141:  I2C_2_Master_Stop();
  9957  005016  ECEB  F02A         	call	_I2C_2_Master_Stop	;wreg free
  9958  00501A                     
  9959                           ;color.c: 142:  return tmp;
  9960  00501A  C00C  F007         	movff	color_read_Clear@tmp,?_color_read_Clear
  9961  00501E  C00D  F008         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9962  005022  0012               	return		;funcret
  9963  005024                     __end_of_color_read_Clear:
  9964                           	callstack 0
  9965                           
  9966 ;; *************** function _color_read_Blue *****************
  9967 ;; Defined at:
  9968 ;;		line 103 in file "color.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;		None
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  tmp             2   11[COMRAM] unsigned int 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  2    6[COMRAM] unsigned int 
  9975 ;; Registers used:
  9976 ;;		wreg, status,2, status,0, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;Total ram usage:        7 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 4
  9989 ;; This function calls:
  9990 ;;		_I2C_2_Master_Read
  9991 ;;		_I2C_2_Master_RepStart
  9992 ;;		_I2C_2_Master_Start
  9993 ;;		_I2C_2_Master_Stop
  9994 ;;		_I2C_2_Master_Write
  9995 ;; This function is called by:
  9996 ;;		_read_color
  9997 ;;		_calibrate_white
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text46
 10002  005024                     __ptext46:
 10003                           	callstack 0
 10004  005024                     _color_read_Blue:
 10005                           	callstack 23
 10006  005024                     
 10007                           ;color.c: 105:  unsigned int tmp;;color.c: 106:  I2C_2_Master_Start();
 10008  005024  ECF0  F02A         	call	_I2C_2_Master_Start	;wreg free
 10009                           
 10010                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
 10011  005028  0E52               	movlw	82
 10012  00502A  ECDF  F02A         	call	_I2C_2_Master_Write
 10013                           
 10014                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x1A);
 10015  00502E  0EBA               	movlw	186
 10016  005030  ECDF  F02A         	call	_I2C_2_Master_Write
 10017                           
 10018                           ;color.c: 109:  I2C_2_Master_RepStart();
 10019  005034  ECF5  F02A         	call	_I2C_2_Master_RepStart	;wreg free
 10020                           
 10021                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
 10022  005038  0E53               	movlw	83
 10023  00503A  ECDF  F02A         	call	_I2C_2_Master_Write
 10024                           
 10025                           ;color.c: 111:  tmp=I2C_2_Master_Read(1);
 10026  00503E  0E01               	movlw	1
 10027  005040  ECC3  F028         	call	_I2C_2_Master_Read
 10028  005044  6E09               	movwf	??_color_read_Blue^0,c
 10029  005046  5009               	movf	??_color_read_Blue^0,w,c
 10030  005048  6E0C               	movwf	color_read_Blue@tmp^0,c
 10031  00504A  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
 10032                           
 10033                           ;color.c: 112:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10034  00504C  0E00               	movlw	0
 10035  00504E  ECC3  F028         	call	_I2C_2_Master_Read
 10036  005052  6E09               	movwf	??_color_read_Blue^0,c
 10037  005054  5009               	movf	??_color_read_Blue^0,w,c
 10038  005056  6E0B               	movwf	(??_color_read_Blue+2)^0,c
 10039  005058  6A0A               	clrf	(??_color_read_Blue+1)^0,c
 10040  00505A  500C               	movf	color_read_Blue@tmp^0,w,c
 10041  00505C  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
 10042  00505E  6E0C               	movwf	color_read_Blue@tmp^0,c
 10043  005060  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
 10044  005062  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
 10045  005064  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
 10046                           
 10047                           ;color.c: 113:  I2C_2_Master_Stop();
 10048  005066  ECEB  F02A         	call	_I2C_2_Master_Stop	;wreg free
 10049  00506A                     
 10050                           ;color.c: 114:  return tmp;
 10051  00506A  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
 10052  00506E  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 10053  005072  0012               	return		;funcret
 10054  005074                     __end_of_color_read_Blue:
 10055                           	callstack 0
 10056                           
 10057 ;; *************** function _I2C_2_Master_Write *****************
 10058 ;; Defined at:
 10059 ;;		line 45 in file "i2c.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  data_byte       1    wreg     unsigned char 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  data_byte       1    3[COMRAM] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      void 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2, status,0, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10077 ;;Total ram usage:        1 bytes
 10078 ;; Hardware stack levels used: 1
 10079 ;; Hardware stack levels required when called: 3
 10080 ;; This function calls:
 10081 ;;		_I2C_2_Master_Idle
 10082 ;; This function is called by:
 10083 ;;		_color_writetoaddr
 10084 ;;		_color_read_Red
 10085 ;;		_color_read_Blue
 10086 ;;		_color_read_Green
 10087 ;;		_color_read_Clear
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text47
 10092  0055BE                     __ptext47:
 10093                           	callstack 0
 10094  0055BE                     _I2C_2_Master_Write:
 10095                           	callstack 23
 10096                           
 10097                           ;incstack = 0
 10098                           ;I2C_2_Master_Write@data_byte stored from wreg
 10099  0055BE  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
 10100  0055C0                     
 10101                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10102  0055C0  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10103  0055C4                     
 10104                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10105  0055C4  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10106  0055C8  0012               	return		;funcret
 10107  0055CA                     __end_of_I2C_2_Master_Write:
 10108                           	callstack 0
 10109                           
 10110 ;; *************** function _I2C_2_Master_Stop *****************
 10111 ;; Defined at:
 10112 ;;		line 39 in file "i2c.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used: 1
 10132 ;; Hardware stack levels required when called: 3
 10133 ;; This function calls:
 10134 ;;		_I2C_2_Master_Idle
 10135 ;; This function is called by:
 10136 ;;		_color_writetoaddr
 10137 ;;		_color_read_Red
 10138 ;;		_color_read_Blue
 10139 ;;		_color_read_Green
 10140 ;;		_color_read_Clear
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text48
 10145  0055D6                     __ptext48:
 10146                           	callstack 0
 10147  0055D6                     _I2C_2_Master_Stop:
 10148                           	callstack 23
 10149  0055D6                     
 10150                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10151  0055D6  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10152  0055DA                     
 10153                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10154  0055DA  010E               	movlb	14	; () banked
 10155  0055DC  85DA               	bsf	218,2,b	;volatile
 10156  0055DE                     
 10157                           ; BSR set to: 14
 10158  0055DE  0012               	return		;funcret
 10159  0055E0                     __end_of_I2C_2_Master_Stop:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _I2C_2_Master_Start *****************
 10163 ;; Defined at:
 10164 ;;		line 27 in file "i2c.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 3
 10185 ;; This function calls:
 10186 ;;		_I2C_2_Master_Idle
 10187 ;; This function is called by:
 10188 ;;		_color_writetoaddr
 10189 ;;		_color_read_Red
 10190 ;;		_color_read_Blue
 10191 ;;		_color_read_Green
 10192 ;;		_color_read_Clear
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text49
 10197  0055E0                     __ptext49:
 10198                           	callstack 0
 10199  0055E0                     _I2C_2_Master_Start:
 10200                           	callstack 23
 10201  0055E0                     
 10202                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10203  0055E0  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10204  0055E4                     
 10205                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10206  0055E4  010E               	movlb	14	; () banked
 10207  0055E6  81DA               	bsf	218,0,b	;volatile
 10208  0055E8                     
 10209                           ; BSR set to: 14
 10210  0055E8  0012               	return		;funcret
 10211  0055EA                     __end_of_I2C_2_Master_Start:
 10212                           	callstack 0
 10213                           
 10214 ;; *************** function _I2C_2_Master_RepStart *****************
 10215 ;; Defined at:
 10216 ;;		line 33 in file "i2c.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;Total ram usage:        0 bytes
 10235 ;; Hardware stack levels used: 1
 10236 ;; Hardware stack levels required when called: 3
 10237 ;; This function calls:
 10238 ;;		_I2C_2_Master_Idle
 10239 ;; This function is called by:
 10240 ;;		_color_read_Red
 10241 ;;		_color_read_Blue
 10242 ;;		_color_read_Green
 10243 ;;		_color_read_Clear
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text50
 10248  0055EA                     __ptext50:
 10249                           	callstack 0
 10250  0055EA                     _I2C_2_Master_RepStart:
 10251                           	callstack 23
 10252  0055EA                     
 10253                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10254  0055EA  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10255  0055EE                     
 10256                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10257  0055EE  010E               	movlb	14	; () banked
 10258  0055F0  83DA               	bsf	218,1,b	;volatile
 10259  0055F2                     
 10260                           ; BSR set to: 14
 10261  0055F2  0012               	return		;funcret
 10262  0055F4                     __end_of_I2C_2_Master_RepStart:
 10263                           	callstack 0
 10264                           
 10265 ;; *************** function _I2C_2_Master_Read *****************
 10266 ;; Defined at:
 10267 ;;		line 51 in file "i2c.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  ack             1    wreg     unsigned char 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  ack             1    4[COMRAM] unsigned char 
 10272 ;;  tmp             1    5[COMRAM] unsigned char 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      unsigned char 
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10286 ;;Total ram usage:        3 bytes
 10287 ;; Hardware stack levels used: 1
 10288 ;; Hardware stack levels required when called: 3
 10289 ;; This function calls:
 10290 ;;		_I2C_2_Master_Idle
 10291 ;; This function is called by:
 10292 ;;		_color_read_Red
 10293 ;;		_color_read_Blue
 10294 ;;		_color_read_Green
 10295 ;;		_color_read_Clear
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text51
 10300  005186                     __ptext51:
 10301                           	callstack 0
 10302  005186                     _I2C_2_Master_Read:
 10303                           	callstack 23
 10304                           
 10305                           ; BSR set to: 14
 10306                           ;incstack = 0
 10307                           ;I2C_2_Master_Read@ack stored from wreg
 10308  005186  6E05               	movwf	I2C_2_Master_Read@ack^0,c
 10309  005188                     
 10310                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10311  005188  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10312  00518C                     
 10313                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10314  00518C  010E               	movlb	14	; () banked
 10315  00518E  87DA               	bsf	218,3,b	;volatile
 10316                           
 10317                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10318  005190  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10319  005194                     
 10320                           ;i2c.c: 57:   tmp = SSP2BUF;
 10321  005194  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10322                           
 10323                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10324  005198  EC15  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10325  00519C                     
 10326                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10327  00519C  5005               	movf	I2C_2_Master_Read@ack^0,w,c
 10328  00519E  B4D8               	btfsc	status,2,c
 10329  0051A0  EFD4  F028         	goto	u3631
 10330  0051A4  EFD8  F028         	goto	u3630
 10331  0051A8                     u3631:
 10332  0051A8  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10333  0051AA  2A04               	incf	??_I2C_2_Master_Read^0,f,c
 10334  0051AC  EFD9  F028         	goto	u3648
 10335  0051B0                     u3630:
 10336  0051B0  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10337  0051B2                     u3648:
 10338  0051B2  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
 10339  0051B4  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
 10340  0051B6  010E               	movlb	14	; () banked
 10341  0051B8  51DA               	movf	218,w,b	;volatile
 10342  0051BA  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10343  0051BC  0BDF               	andlw	-33
 10344  0051BE  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10345  0051C0  6FDA               	movwf	218,b	;volatile
 10346  0051C2                     
 10347                           ; BSR set to: 14
 10348                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10349  0051C2  89DA               	bsf	218,4,b	;volatile
 10350  0051C4                     
 10351                           ; BSR set to: 14
 10352                           ;i2c.c: 61:   return tmp;
 10353  0051C4  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
 10354  0051C6                     
 10355                           ; BSR set to: 14
 10356  0051C6  0012               	return		;funcret
 10357  0051C8                     __end_of_I2C_2_Master_Read:
 10358                           	callstack 0
 10359                           
 10360 ;; *************** function _I2C_2_Master_Idle *****************
 10361 ;; Defined at:
 10362 ;;		line 22 in file "i2c.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;		None
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;Total ram usage:        1 bytes
 10381 ;; Hardware stack levels used: 1
 10382 ;; Hardware stack levels required when called: 2
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_I2C_2_Master_Start
 10387 ;;		_I2C_2_Master_RepStart
 10388 ;;		_I2C_2_Master_Stop
 10389 ;;		_I2C_2_Master_Write
 10390 ;;		_I2C_2_Master_Read
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           	psect	text52
 10395  00542A                     __ptext52:
 10396                           	callstack 0
 10397  00542A                     _I2C_2_Master_Idle:
 10398                           	callstack 23
 10399  00542A                     l211:
 10400  00542A  010E               	movlb	14	; () banked
 10401  00542C  B5D8               	btfsc	216,2,b	;volatile
 10402  00542E  EF1B  F02A         	goto	u3031
 10403  005432  EF1D  F02A         	goto	u3030
 10404  005436                     u3031:
 10405  005436  EF15  F02A         	goto	l211
 10406  00543A                     u3030:
 10407  00543A                     
 10408                           ; BSR set to: 14
 10409  00543A  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10410  00543E  0E1F               	movlw	31
 10411  005440  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
 10412  005442  A4D8               	btfss	status,2,c
 10413  005444  EF26  F02A         	goto	u3041
 10414  005448  EF28  F02A         	goto	u3040
 10415  00544C                     u3041:
 10416  00544C  EF15  F02A         	goto	l211
 10417  005450                     u3040:
 10418  005450                     
 10419                           ; BSR set to: 14
 10420  005450  0012               	return		;funcret
 10421  005452                     __end_of_I2C_2_Master_Idle:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function _LED_R *****************
 10425 ;; Defined at:
 10426 ;;		line 162 in file "color.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;Total ram usage:        2 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; Hardware stack levels required when called: 2
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_color_data_collection
 10451 ;;		_calibrate_white
 10452 ;;		_detect_color
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text53
 10457  005498                     __ptext53:
 10458                           	callstack 0
 10459  005498                     _LED_R:
 10460                           	callstack 26
 10461  005498                     
 10462                           ;color.c: 164:     LATGbits.LATG1 = 1;
 10463  005498  827F               	bsf	127,1,c	;volatile
 10464                           
 10465                           ;color.c: 165:     LATFbits.LATF7 = 0;
 10466  00549A  9E7E               	bcf	126,7,c	;volatile
 10467                           
 10468                           ;color.c: 166:     LATAbits.LATA4 = 0;
 10469  00549C  9879               	bcf	121,4,c	;volatile
 10470  00549E                     
 10471                           ;color.c: 167:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10472  00549E  0E11               	movlw	17
 10473  0054A0  6E04               	movwf	(??_LED_R+1)^0,c
 10474  0054A2  0E3C               	movlw	60
 10475  0054A4  6E03               	movwf	??_LED_R^0,c
 10476  0054A6  0ECB               	movlw	203
 10477  0054A8                     u6777:
 10478  0054A8  2EE8               	decfsz	wreg,f,c
 10479  0054AA  D7FE               	bra	u6777
 10480  0054AC  2E03               	decfsz	??_LED_R^0,f,c
 10481  0054AE  D7FC               	bra	u6777
 10482  0054B0  2E04               	decfsz	(??_LED_R+1)^0,f,c
 10483  0054B2  D7FA               	bra	u6777
 10484  0054B4  F000               	nop	
 10485  0054B6  0012               	return		;funcret
 10486  0054B8                     __end_of_LED_R:
 10487                           	callstack 0
 10488                           
 10489 ;; *************** function _LED_G *****************
 10490 ;; Defined at:
 10491 ;;		line 189 in file "color.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;		None
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10509 ;;Total ram usage:        2 bytes
 10510 ;; Hardware stack levels used: 1
 10511 ;; Hardware stack levels required when called: 2
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_color_data_collection
 10516 ;;		_calibrate_white
 10517 ;;		_detect_color
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text54
 10522  0054B8                     __ptext54:
 10523                           	callstack 0
 10524  0054B8                     _LED_G:
 10525                           	callstack 26
 10526  0054B8                     
 10527                           ;color.c: 191:     LATGbits.LATG1 = 0;
 10528  0054B8  927F               	bcf	127,1,c	;volatile
 10529                           
 10530                           ;color.c: 192:     LATFbits.LATF7 = 0;
 10531  0054BA  9E7E               	bcf	126,7,c	;volatile
 10532                           
 10533                           ;color.c: 193:     LATAbits.LATA4 = 1;
 10534  0054BC  8879               	bsf	121,4,c	;volatile
 10535  0054BE                     
 10536                           ;color.c: 194:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10537  0054BE  0E11               	movlw	17
 10538  0054C0  6E04               	movwf	(??_LED_G+1)^0,c
 10539  0054C2  0E3C               	movlw	60
 10540  0054C4  6E03               	movwf	??_LED_G^0,c
 10541  0054C6  0ECB               	movlw	203
 10542  0054C8                     u6787:
 10543  0054C8  2EE8               	decfsz	wreg,f,c
 10544  0054CA  D7FE               	bra	u6787
 10545  0054CC  2E03               	decfsz	??_LED_G^0,f,c
 10546  0054CE  D7FC               	bra	u6787
 10547  0054D0  2E04               	decfsz	(??_LED_G+1)^0,f,c
 10548  0054D2  D7FA               	bra	u6787
 10549  0054D4  F000               	nop	
 10550  0054D6  0012               	return		;funcret
 10551  0054D8                     __end_of_LED_G:
 10552                           	callstack 0
 10553                           
 10554 ;; *************** function _LED_C *****************
 10555 ;; Defined at:
 10556 ;;		line 171 in file "color.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;		None
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;		None
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  1    wreg      void 
 10563 ;; Registers used:
 10564 ;;		wreg
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10574 ;;Total ram usage:        2 bytes
 10575 ;; Hardware stack levels used: 1
 10576 ;; Hardware stack levels required when called: 2
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_color_data_collection
 10581 ;;		_calibrate_white
 10582 ;;		_distance_measure
 10583 ;;		_main
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text55
 10588  0054D8                     __ptext55:
 10589                           	callstack 0
 10590  0054D8                     _LED_C:
 10591                           	callstack 27
 10592  0054D8                     
 10593                           ;color.c: 173:     LATGbits.LATG1 = 1;
 10594  0054D8  827F               	bsf	127,1,c	;volatile
 10595                           
 10596                           ;color.c: 174:     LATFbits.LATF7 = 1;
 10597  0054DA  8E7E               	bsf	126,7,c	;volatile
 10598                           
 10599                           ;color.c: 175:     LATAbits.LATA4 = 1;
 10600  0054DC  8879               	bsf	121,4,c	;volatile
 10601  0054DE                     
 10602                           ;color.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10603  0054DE  0E05               	movlw	5
 10604  0054E0  6E04               	movwf	(??_LED_C+1)^0,c
 10605  0054E2  0E0F               	movlw	15
 10606  0054E4  6E03               	movwf	??_LED_C^0,c
 10607  0054E6  0EF1               	movlw	241
 10608  0054E8                     u6797:
 10609  0054E8  2EE8               	decfsz	wreg,f,c
 10610  0054EA  D7FE               	bra	u6797
 10611  0054EC  2E03               	decfsz	??_LED_C^0,f,c
 10612  0054EE  D7FC               	bra	u6797
 10613  0054F0  2E04               	decfsz	(??_LED_C+1)^0,f,c
 10614  0054F2  D7FA               	bra	u6797
 10615  0054F4  F000               	nop	
 10616  0054F6  0012               	return		;funcret
 10617  0054F8                     __end_of_LED_C:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _LED_B *****************
 10621 ;; Defined at:
 10622 ;;		line 180 in file "color.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;Total ram usage:        2 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 2
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_color_data_collection
 10647 ;;		_calibrate_white
 10648 ;;		_detect_color
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text56
 10653  0054F8                     __ptext56:
 10654                           	callstack 0
 10655  0054F8                     _LED_B:
 10656                           	callstack 26
 10657  0054F8                     
 10658                           ;color.c: 182:     LATGbits.LATG1 = 0;
 10659  0054F8  927F               	bcf	127,1,c	;volatile
 10660                           
 10661                           ;color.c: 183:     LATFbits.LATF7 = 1;
 10662  0054FA  8E7E               	bsf	126,7,c	;volatile
 10663                           
 10664                           ;color.c: 184:     LATAbits.LATA4 = 0;
 10665  0054FC  9879               	bcf	121,4,c	;volatile
 10666  0054FE                     
 10667                           ;color.c: 185:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10668  0054FE  0E11               	movlw	17
 10669  005500  6E04               	movwf	(??_LED_B+1)^0,c
 10670  005502  0E3C               	movlw	60
 10671  005504  6E03               	movwf	??_LED_B^0,c
 10672  005506  0ECB               	movlw	203
 10673  005508                     u6807:
 10674  005508  2EE8               	decfsz	wreg,f,c
 10675  00550A  D7FE               	bra	u6807
 10676  00550C  2E03               	decfsz	??_LED_B^0,f,c
 10677  00550E  D7FC               	bra	u6807
 10678  005510  2E04               	decfsz	(??_LED_B+1)^0,f,c
 10679  005512  D7FA               	bra	u6807
 10680  005514  F000               	nop	
 10681  005516  0012               	return		;funcret
 10682  005518                     __end_of_LED_B:
 10683                           	callstack 0
 10684                           
 10685 ;; *************** function _buggylight_init *****************
 10686 ;; Defined at:
 10687 ;;		line 12 in file "color.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		None
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10705 ;;Total ram usage:        0 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; Hardware stack levels required when called: 2
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_main
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text57
 10716  0055A8                     __ptext57:
 10717                           	callstack 0
 10718  0055A8                     _buggylight_init:
 10719                           	callstack 28
 10720  0055A8                     
 10721                           ;color.c: 14:     TRISHbits.TRISH1=0;
 10722  0055A8  9288               	bcf	136,1,c	;volatile
 10723                           
 10724                           ;color.c: 15:     TRISDbits.TRISD4=0;
 10725  0055AA  9884               	bcf	132,4,c	;volatile
 10726                           
 10727                           ;color.c: 16:     TRISDbits.TRISD3=0;
 10728  0055AC  9684               	bcf	132,3,c	;volatile
 10729                           
 10730                           ;color.c: 17:     TRISFbits.TRISF0=0;
 10731  0055AE  9086               	bcf	134,0,c	;volatile
 10732                           
 10733                           ;color.c: 18:     TRISHbits.TRISH0=0;
 10734  0055B0  9088               	bcf	136,0,c	;volatile
 10735                           
 10736                           ;color.c: 20:     LATHbits.LATH1 = 0;
 10737  0055B2  9280               	bcf	128,1,c	;volatile
 10738                           
 10739                           ;color.c: 21:     LATDbits.LATD4 = 0;
 10740  0055B4  987C               	bcf	124,4,c	;volatile
 10741                           
 10742                           ;color.c: 22:     LATDbits.LATD3 = 0;
 10743  0055B6  967C               	bcf	124,3,c	;volatile
 10744                           
 10745                           ;color.c: 23:     LATFbits.LATF0 = 0;
 10746  0055B8  907E               	bcf	126,0,c	;volatile
 10747                           
 10748                           ;color.c: 24:     LATHbits.LATH0 = 0;
 10749  0055BA  9080               	bcf	128,0,c	;volatile
 10750  0055BC  0012               	return		;funcret
 10751  0055BE                     __end_of_buggylight_init:
 10752                           	callstack 0
 10753                           
 10754 ;; *************** function _action *****************
 10755 ;; Defined at:
 10756 ;;		line 19 in file "movement.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  color           1    wreg     unsigned char 
 10759 ;;  mL              2   55[COMRAM] PTR struct DC_motor
 10760 ;;		 -> main@motorL(10), 
 10761 ;;  mR              2   57[COMRAM] PTR struct DC_motor
 10762 ;;		 -> main@motorR(10), 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  color           1   61[COMRAM] unsigned char 
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  1    wreg      void 
 10767 ;; Registers used:
 10768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10777 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10778 ;;Total ram usage:        7 bytes
 10779 ;; Hardware stack levels used: 1
 10780 ;; Hardware stack levels required when called: 8
 10781 ;; This function calls:
 10782 ;;		_goback
 10783 ;;		_reverse_square
 10784 ;;		_short_reverse
 10785 ;;		_stop
 10786 ;;		_turnLeft
 10787 ;;		_turnRight
 10788 ;; This function is called by:
 10789 ;;		_main
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text58
 10794  002A4A                     __ptext58:
 10795                           	callstack 0
 10796  002A4A                     _action:
 10797                           	callstack 22
 10798                           
 10799                           ;incstack = 0
 10800                           ;action@color stored from wreg
 10801  002A4A  6E3E               	movwf	action@color^0,c
 10802  002A4C                     
 10803                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: { T0CON0bits.T0EN=1;
 10804  002A4C  8ED5               	bsf	213,7,c	;volatile
 10805                           
 10806                           ;movement.c: 21:     start_move = second;
 10807  002A4E  C0F9  F0F7         	movff	_second,_start_move
 10808  002A52  C0FA  F0F8         	movff	_second+1,_start_move+1
 10809  002A56                     
 10810                           ;movement.c: 23:     if (color != 0){
 10811  002A56  503E               	movf	action@color^0,w,c
 10812  002A58  B4D8               	btfsc	status,2,c
 10813  002A5A  EF31  F015         	goto	u5231
 10814  002A5E  EF33  F015         	goto	u5230
 10815  002A62                     u5231:
 10816  002A62  EFA6  F016         	goto	l635
 10817  002A66                     u5230:
 10818  002A66                     
 10819                           ;movement.c: 24:         T0CON0bits.T0EN=0;
 10820  002A66  9ED5               	bcf	213,7,c	;volatile
 10821                           
 10822                           ;movement.c: 25:         stop_move = second;
 10823  002A68  C0F9  F0F5         	movff	_second,_stop_move
 10824  002A6C  C0FA  F0F6         	movff	_second+1,_stop_move+1
 10825  002A70                     
 10826                           ;movement.c: 26:         memory[array_index] = (start_move-stop_move);
 10827  002A70  0100               	movlb	0	; () banked
 10828  002A72  51F5               	movf	_stop_move& (0+255),w,b
 10829  002A74  5DF7               	subwf	_start_move& (0+255),w,b
 10830  002A76  6E3C               	movwf	??_action^0,c
 10831  002A78  51F6               	movf	(_stop_move+1)& (0+255),w,b
 10832  002A7A  59F8               	subwfb	(_start_move+1)& (0+255),w,b
 10833  002A7C  6E3D               	movwf	(??_action+1)^0,c
 10834  002A7E  505A               	movf	_array_index^0,w,c
 10835  002A80  0D02               	mullw	2
 10836  002A82  0E3C               	movlw	low _memory
 10837  002A84  24F3               	addwf	243,w,c
 10838  002A86  6ED9               	movwf	fsr2l,c
 10839  002A88  0E01               	movlw	high _memory
 10840  002A8A  20F4               	addwfc	prodh,w,c
 10841  002A8C  6EDA               	movwf	fsr2h,c
 10842  002A8E  C03C  FFDE         	movff	??_action,postinc2
 10843  002A92  C03D  FFDD         	movff	??_action+1,postdec2
 10844  002A96                     
 10845                           ; BSR set to: 0
 10846                           ;movement.c: 27:         array_index++;
 10847  002A96  2A5A               	incf	_array_index^0,f,c
 10848  002A98                     
 10849                           ; BSR set to: 0
 10850                           ;movement.c: 28:         stop(mL,mR);
 10851  002A98  C038  F01C         	movff	action@mL,stop@mL
 10852  002A9C  C039  F01D         	movff	action@mL+1,stop@mL+1
 10853  002AA0  C03A  F01E         	movff	action@mR,stop@mR
 10854  002AA4  C03B  F01F         	movff	action@mR+1,stop@mR+1
 10855  002AA8  ECAF  F025         	call	_stop	;wreg free
 10856  002AAC                     
 10857                           ;movement.c: 29:         if (color == 1){
 10858  002AAC  043E               	decf	action@color^0,w,c
 10859  002AAE  A4D8               	btfss	status,2,c
 10860  002AB0  EF5C  F015         	goto	u5241
 10861  002AB4  EF5E  F015         	goto	u5240
 10862  002AB8                     u5241:
 10863  002AB8  EF81  F015         	goto	l5092
 10864  002ABC                     u5240:
 10865  002ABC                     
 10866                           ;movement.c: 30:             short_reverse(mL,mR);
 10867  002ABC  C038  F028         	movff	action@mL,short_reverse@mL
 10868  002AC0  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 10869  002AC4  C03A  F02A         	movff	action@mR,short_reverse@mR
 10870  002AC8  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 10871  002ACC  ECE4  F028         	call	_short_reverse	;wreg free
 10872                           
 10873                           ;movement.c: 31:             turnRight(mL,mR,90);
 10874  002AD0  C038  F022         	movff	action@mL,turnRight@mL
 10875  002AD4  C039  F023         	movff	action@mL+1,turnRight@mL+1
 10876  002AD8  C03A  F024         	movff	action@mR,turnRight@mR
 10877  002ADC  C03B  F025         	movff	action@mR+1,turnRight@mR+1
 10878  002AE0  0E5A               	movlw	90
 10879  002AE2  6E26               	movwf	turnRight@angle_right^0,c
 10880  002AE4  EC1B  F021         	call	_turnRight	;wreg free
 10881  002AE8                     
 10882                           ;movement.c: 32:             memory[array_index] = 1;
 10883  002AE8  505A               	movf	_array_index^0,w,c
 10884  002AEA  0D02               	mullw	2
 10885  002AEC  0E3C               	movlw	low _memory
 10886  002AEE  24F3               	addwf	243,w,c
 10887  002AF0  6ED9               	movwf	fsr2l,c
 10888  002AF2  0E01               	movlw	high _memory
 10889  002AF4  20F4               	addwfc	prodh,w,c
 10890  002AF6  6EDA               	movwf	fsr2h,c
 10891  002AF8  0E01               	movlw	1
 10892  002AFA  6EDE               	movwf	postinc2,c
 10893  002AFC  0E00               	movlw	0
 10894  002AFE  6EDD               	movwf	postdec2,c
 10895  002B00                     
 10896                           ;movement.c: 33:             array_index++;
 10897  002B00  2A5A               	incf	_array_index^0,f,c
 10898  002B02                     l5092:
 10899                           
 10900                           ;movement.c: 35:         if (color == 2){
 10901  002B02  0E02               	movlw	2
 10902  002B04  183E               	xorwf	action@color^0,w,c
 10903  002B06  A4D8               	btfss	status,2,c
 10904  002B08  EF88  F015         	goto	u5251
 10905  002B0C  EF8A  F015         	goto	u5250
 10906  002B10                     u5251:
 10907  002B10  EFAD  F015         	goto	l5100
 10908  002B14                     u5250:
 10909  002B14                     
 10910                           ;movement.c: 36:             short_reverse(mL,mR);
 10911  002B14  C038  F028         	movff	action@mL,short_reverse@mL
 10912  002B18  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 10913  002B1C  C03A  F02A         	movff	action@mR,short_reverse@mR
 10914  002B20  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 10915  002B24  ECE4  F028         	call	_short_reverse	;wreg free
 10916                           
 10917                           ;movement.c: 37:             turnLeft(mL,mR,90);
 10918  002B28  C038  F022         	movff	action@mL,turnLeft@mL
 10919  002B2C  C039  F023         	movff	action@mL+1,turnLeft@mL+1
 10920  002B30  C03A  F024         	movff	action@mR,turnLeft@mR
 10921  002B34  C03B  F025         	movff	action@mR+1,turnLeft@mR+1
 10922  002B38  0E5A               	movlw	90
 10923  002B3A  6E26               	movwf	turnLeft@angle_left^0,c
 10924  002B3C  ECB1  F021         	call	_turnLeft	;wreg free
 10925  002B40                     
 10926                           ;movement.c: 38:             memory[array_index] = 2;
 10927  002B40  505A               	movf	_array_index^0,w,c
 10928  002B42  0D02               	mullw	2
 10929  002B44  0E3C               	movlw	low _memory
 10930  002B46  24F3               	addwf	243,w,c
 10931  002B48  6ED9               	movwf	fsr2l,c
 10932  002B4A  0E01               	movlw	high _memory
 10933  002B4C  20F4               	addwfc	prodh,w,c
 10934  002B4E  6EDA               	movwf	fsr2h,c
 10935  002B50  0E02               	movlw	2
 10936  002B52  6EDE               	movwf	postinc2,c
 10937  002B54  0E00               	movlw	0
 10938  002B56  6EDD               	movwf	postdec2,c
 10939  002B58                     
 10940                           ;movement.c: 39:             array_index++;
 10941  002B58  2A5A               	incf	_array_index^0,f,c
 10942  002B5A                     l5100:
 10943                           
 10944                           ;movement.c: 41:         if (color == 3){
 10945  002B5A  0E03               	movlw	3
 10946  002B5C  183E               	xorwf	action@color^0,w,c
 10947  002B5E  A4D8               	btfss	status,2,c
 10948  002B60  EFB4  F015         	goto	u5261
 10949  002B64  EFB6  F015         	goto	u5260
 10950  002B68                     u5261:
 10951  002B68  EFD9  F015         	goto	l5108
 10952  002B6C                     u5260:
 10953  002B6C                     
 10954                           ;movement.c: 42:             short_reverse(mL,mR);
 10955  002B6C  C038  F028         	movff	action@mL,short_reverse@mL
 10956  002B70  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 10957  002B74  C03A  F02A         	movff	action@mR,short_reverse@mR
 10958  002B78  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 10959  002B7C  ECE4  F028         	call	_short_reverse	;wreg free
 10960                           
 10961                           ;movement.c: 43:             turnLeft(mL,mR,180);
 10962  002B80  C038  F022         	movff	action@mL,turnLeft@mL
 10963  002B84  C039  F023         	movff	action@mL+1,turnLeft@mL+1
 10964  002B88  C03A  F024         	movff	action@mR,turnLeft@mR
 10965  002B8C  C03B  F025         	movff	action@mR+1,turnLeft@mR+1
 10966  002B90  0EB4               	movlw	180
 10967  002B92  6E26               	movwf	turnLeft@angle_left^0,c
 10968  002B94  ECB1  F021         	call	_turnLeft	;wreg free
 10969  002B98                     
 10970                           ;movement.c: 44:             memory[array_index] = 3;
 10971  002B98  505A               	movf	_array_index^0,w,c
 10972  002B9A  0D02               	mullw	2
 10973  002B9C  0E3C               	movlw	low _memory
 10974  002B9E  24F3               	addwf	243,w,c
 10975  002BA0  6ED9               	movwf	fsr2l,c
 10976  002BA2  0E01               	movlw	high _memory
 10977  002BA4  20F4               	addwfc	prodh,w,c
 10978  002BA6  6EDA               	movwf	fsr2h,c
 10979  002BA8  0E03               	movlw	3
 10980  002BAA  6EDE               	movwf	postinc2,c
 10981  002BAC  0E00               	movlw	0
 10982  002BAE  6EDD               	movwf	postdec2,c
 10983  002BB0                     
 10984                           ;movement.c: 45:             array_index++;
 10985  002BB0  2A5A               	incf	_array_index^0,f,c
 10986  002BB2                     l5108:
 10987                           
 10988                           ;movement.c: 47:         if (color == 4){
 10989  002BB2  0E04               	movlw	4
 10990  002BB4  183E               	xorwf	action@color^0,w,c
 10991  002BB6  A4D8               	btfss	status,2,c
 10992  002BB8  EFE0  F015         	goto	u5271
 10993  002BBC  EFE2  F015         	goto	u5270
 10994  002BC0                     u5271:
 10995  002BC0  EF05  F016         	goto	l5116
 10996  002BC4                     u5270:
 10997  002BC4                     
 10998                           ;movement.c: 48:             reverse_square(mL,mR);
 10999  002BC4  C038  F028         	movff	action@mL,reverse_square@mL
 11000  002BC8  C039  F029         	movff	action@mL+1,reverse_square@mL+1
 11001  002BCC  C03A  F02A         	movff	action@mR,reverse_square@mR
 11002  002BD0  C03B  F02B         	movff	action@mR+1,reverse_square@mR+1
 11003  002BD4  EC05  F029         	call	_reverse_square	;wreg free
 11004                           
 11005                           ;movement.c: 49:             turnRight(mL,mR,90);
 11006  002BD8  C038  F022         	movff	action@mL,turnRight@mL
 11007  002BDC  C039  F023         	movff	action@mL+1,turnRight@mL+1
 11008  002BE0  C03A  F024         	movff	action@mR,turnRight@mR
 11009  002BE4  C03B  F025         	movff	action@mR+1,turnRight@mR+1
 11010  002BE8  0E5A               	movlw	90
 11011  002BEA  6E26               	movwf	turnRight@angle_right^0,c
 11012  002BEC  EC1B  F021         	call	_turnRight	;wreg free
 11013  002BF0                     
 11014                           ;movement.c: 50:             memory[array_index] = 4;
 11015  002BF0  505A               	movf	_array_index^0,w,c
 11016  002BF2  0D02               	mullw	2
 11017  002BF4  0E3C               	movlw	low _memory
 11018  002BF6  24F3               	addwf	243,w,c
 11019  002BF8  6ED9               	movwf	fsr2l,c
 11020  002BFA  0E01               	movlw	high _memory
 11021  002BFC  20F4               	addwfc	prodh,w,c
 11022  002BFE  6EDA               	movwf	fsr2h,c
 11023  002C00  0E04               	movlw	4
 11024  002C02  6EDE               	movwf	postinc2,c
 11025  002C04  0E00               	movlw	0
 11026  002C06  6EDD               	movwf	postdec2,c
 11027  002C08                     
 11028                           ;movement.c: 51:             array_index++;
 11029  002C08  2A5A               	incf	_array_index^0,f,c
 11030  002C0A                     l5116:
 11031                           
 11032                           ;movement.c: 53:         if (color == 5){
 11033  002C0A  0E05               	movlw	5
 11034  002C0C  183E               	xorwf	action@color^0,w,c
 11035  002C0E  A4D8               	btfss	status,2,c
 11036  002C10  EF0C  F016         	goto	u5281
 11037  002C14  EF0E  F016         	goto	u5280
 11038  002C18                     u5281:
 11039  002C18  EF31  F016         	goto	l5124
 11040  002C1C                     u5280:
 11041  002C1C                     
 11042                           ;movement.c: 54:             reverse_square(mL,mR);
 11043  002C1C  C038  F028         	movff	action@mL,reverse_square@mL
 11044  002C20  C039  F029         	movff	action@mL+1,reverse_square@mL+1
 11045  002C24  C03A  F02A         	movff	action@mR,reverse_square@mR
 11046  002C28  C03B  F02B         	movff	action@mR+1,reverse_square@mR+1
 11047  002C2C  EC05  F029         	call	_reverse_square	;wreg free
 11048                           
 11049                           ;movement.c: 55:             turnLeft(mL,mR,90);
 11050  002C30  C038  F022         	movff	action@mL,turnLeft@mL
 11051  002C34  C039  F023         	movff	action@mL+1,turnLeft@mL+1
 11052  002C38  C03A  F024         	movff	action@mR,turnLeft@mR
 11053  002C3C  C03B  F025         	movff	action@mR+1,turnLeft@mR+1
 11054  002C40  0E5A               	movlw	90
 11055  002C42  6E26               	movwf	turnLeft@angle_left^0,c
 11056  002C44  ECB1  F021         	call	_turnLeft	;wreg free
 11057  002C48                     
 11058                           ;movement.c: 56:             memory[array_index] = 5;
 11059  002C48  505A               	movf	_array_index^0,w,c
 11060  002C4A  0D02               	mullw	2
 11061  002C4C  0E3C               	movlw	low _memory
 11062  002C4E  24F3               	addwf	243,w,c
 11063  002C50  6ED9               	movwf	fsr2l,c
 11064  002C52  0E01               	movlw	high _memory
 11065  002C54  20F4               	addwfc	prodh,w,c
 11066  002C56  6EDA               	movwf	fsr2h,c
 11067  002C58  0E05               	movlw	5
 11068  002C5A  6EDE               	movwf	postinc2,c
 11069  002C5C  0E00               	movlw	0
 11070  002C5E  6EDD               	movwf	postdec2,c
 11071  002C60                     
 11072                           ;movement.c: 57:             array_index++;
 11073  002C60  2A5A               	incf	_array_index^0,f,c
 11074  002C62                     l5124:
 11075                           
 11076                           ;movement.c: 59:         if (color == 6){
 11077  002C62  0E06               	movlw	6
 11078  002C64  183E               	xorwf	action@color^0,w,c
 11079  002C66  A4D8               	btfss	status,2,c
 11080  002C68  EF38  F016         	goto	u5291
 11081  002C6C  EF3A  F016         	goto	u5290
 11082  002C70                     u5291:
 11083  002C70  EF5D  F016         	goto	l5132
 11084  002C74                     u5290:
 11085  002C74                     
 11086                           ;movement.c: 60:             short_reverse(mL,mR);
 11087  002C74  C038  F028         	movff	action@mL,short_reverse@mL
 11088  002C78  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 11089  002C7C  C03A  F02A         	movff	action@mR,short_reverse@mR
 11090  002C80  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 11091  002C84  ECE4  F028         	call	_short_reverse	;wreg free
 11092                           
 11093                           ;movement.c: 61:             turnRight(mL,mR,135);
 11094  002C88  C038  F022         	movff	action@mL,turnRight@mL
 11095  002C8C  C039  F023         	movff	action@mL+1,turnRight@mL+1
 11096  002C90  C03A  F024         	movff	action@mR,turnRight@mR
 11097  002C94  C03B  F025         	movff	action@mR+1,turnRight@mR+1
 11098  002C98  0E87               	movlw	135
 11099  002C9A  6E26               	movwf	turnRight@angle_right^0,c
 11100  002C9C  EC1B  F021         	call	_turnRight	;wreg free
 11101  002CA0                     
 11102                           ;movement.c: 62:             memory[array_index] = 6;
 11103  002CA0  505A               	movf	_array_index^0,w,c
 11104  002CA2  0D02               	mullw	2
 11105  002CA4  0E3C               	movlw	low _memory
 11106  002CA6  24F3               	addwf	243,w,c
 11107  002CA8  6ED9               	movwf	fsr2l,c
 11108  002CAA  0E01               	movlw	high _memory
 11109  002CAC  20F4               	addwfc	prodh,w,c
 11110  002CAE  6EDA               	movwf	fsr2h,c
 11111  002CB0  0E06               	movlw	6
 11112  002CB2  6EDE               	movwf	postinc2,c
 11113  002CB4  0E00               	movlw	0
 11114  002CB6  6EDD               	movwf	postdec2,c
 11115  002CB8                     
 11116                           ;movement.c: 63:             array_index++;
 11117  002CB8  2A5A               	incf	_array_index^0,f,c
 11118  002CBA                     l5132:
 11119                           
 11120                           ;movement.c: 65:         if (color == 7){
 11121  002CBA  0E07               	movlw	7
 11122  002CBC  183E               	xorwf	action@color^0,w,c
 11123  002CBE  A4D8               	btfss	status,2,c
 11124  002CC0  EF64  F016         	goto	u5301
 11125  002CC4  EF66  F016         	goto	u5300
 11126  002CC8                     u5301:
 11127  002CC8  EF89  F016         	goto	l5140
 11128  002CCC                     u5300:
 11129  002CCC                     
 11130                           ;movement.c: 66:             short_reverse(mL,mR);
 11131  002CCC  C038  F028         	movff	action@mL,short_reverse@mL
 11132  002CD0  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 11133  002CD4  C03A  F02A         	movff	action@mR,short_reverse@mR
 11134  002CD8  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 11135  002CDC  ECE4  F028         	call	_short_reverse	;wreg free
 11136                           
 11137                           ;movement.c: 67:             turnLeft(mL,mR,135);
 11138  002CE0  C038  F022         	movff	action@mL,turnLeft@mL
 11139  002CE4  C039  F023         	movff	action@mL+1,turnLeft@mL+1
 11140  002CE8  C03A  F024         	movff	action@mR,turnLeft@mR
 11141  002CEC  C03B  F025         	movff	action@mR+1,turnLeft@mR+1
 11142  002CF0  0E87               	movlw	135
 11143  002CF2  6E26               	movwf	turnLeft@angle_left^0,c
 11144  002CF4  ECB1  F021         	call	_turnLeft	;wreg free
 11145  002CF8                     
 11146                           ;movement.c: 68:             memory[array_index] = 7;
 11147  002CF8  505A               	movf	_array_index^0,w,c
 11148  002CFA  0D02               	mullw	2
 11149  002CFC  0E3C               	movlw	low _memory
 11150  002CFE  24F3               	addwf	243,w,c
 11151  002D00  6ED9               	movwf	fsr2l,c
 11152  002D02  0E01               	movlw	high _memory
 11153  002D04  20F4               	addwfc	prodh,w,c
 11154  002D06  6EDA               	movwf	fsr2h,c
 11155  002D08  0E07               	movlw	7
 11156  002D0A  6EDE               	movwf	postinc2,c
 11157  002D0C  0E00               	movlw	0
 11158  002D0E  6EDD               	movwf	postdec2,c
 11159  002D10                     
 11160                           ;movement.c: 69:             array_index++;
 11161  002D10  2A5A               	incf	_array_index^0,f,c
 11162  002D12                     l5140:
 11163                           
 11164                           ;movement.c: 71:         if (color == 8){
 11165  002D12  0E08               	movlw	8
 11166  002D14  183E               	xorwf	action@color^0,w,c
 11167  002D16  A4D8               	btfss	status,2,c
 11168  002D18  EF90  F016         	goto	u5311
 11169  002D1C  EF92  F016         	goto	u5310
 11170  002D20                     u5311:
 11171  002D20  EFA6  F016         	goto	l635
 11172  002D24                     u5310:
 11173  002D24                     
 11174                           ;movement.c: 72:             short_reverse(mL,mR);
 11175  002D24  C038  F028         	movff	action@mL,short_reverse@mL
 11176  002D28  C039  F029         	movff	action@mL+1,short_reverse@mL+1
 11177  002D2C  C03A  F02A         	movff	action@mR,short_reverse@mR
 11178  002D30  C03B  F02B         	movff	action@mR+1,short_reverse@mR+1
 11179  002D34  ECE4  F028         	call	_short_reverse	;wreg free
 11180                           
 11181                           ;movement.c: 73:             goback(mL,mR);
 11182  002D38  C038  F030         	movff	action@mL,goback@mL
 11183  002D3C  C039  F031         	movff	action@mL+1,goback@mL+1
 11184  002D40  C03A  F032         	movff	action@mR,goback@mR
 11185  002D44  C03B  F033         	movff	action@mR+1,goback@mR+1
 11186  002D48  EC6F  F019         	call	_goback	;wreg free
 11187  002D4C                     l635:
 11188  002D4C  0012               	return		;funcret
 11189  002D4E                     __end_of_action:
 11190                           	callstack 0
 11191                           
 11192 ;; *************** function _short_reverse *****************
 11193 ;; Defined at:
 11194 ;;		line 176 in file "dc_motor.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 11197 ;;		 -> main@motorL(10), 
 11198 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 11199 ;;		 -> main@motorR(10), 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;		None
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;Total ram usage:        6 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; Hardware stack levels required when called: 6
 11218 ;; This function calls:
 11219 ;;		_fullSpeedBack
 11220 ;;		_stop
 11221 ;; This function is called by:
 11222 ;;		_action
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text59
 11227  0051C8                     __ptext59:
 11228                           	callstack 0
 11229  0051C8                     _short_reverse:
 11230                           	callstack 23
 11231  0051C8                     
 11232                           ;dc_motor.c: 176: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 177: { fullSpeedBack(mL, mR);
 11233  0051C8  C028  F022         	movff	short_reverse@mL,fullSpeedBack@mL
 11234  0051CC  C029  F023         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 11235  0051D0  C02A  F024         	movff	short_reverse@mR,fullSpeedBack@mR
 11236  0051D4  C02B  F025         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 11237  0051D8  EC4F  F025         	call	_fullSpeedBack	;wreg free
 11238  0051DC                     
 11239                           ;dc_motor.c: 178:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11240  0051DC  0E29               	movlw	41
 11241  0051DE  6E2D               	movwf	(??_short_reverse+1)^0,c
 11242  0051E0  0E96               	movlw	150
 11243  0051E2  6E2C               	movwf	??_short_reverse^0,c
 11244  0051E4  0E7F               	movlw	127
 11245  0051E6                     u6817:
 11246  0051E6  2EE8               	decfsz	wreg,f,c
 11247  0051E8  D7FE               	bra	u6817
 11248  0051EA  2E2C               	decfsz	??_short_reverse^0,f,c
 11249  0051EC  D7FC               	bra	u6817
 11250  0051EE  2E2D               	decfsz	(??_short_reverse+1)^0,f,c
 11251  0051F0  D7FA               	bra	u6817
 11252  0051F2  F000               	nop	
 11253  0051F4                     
 11254                           ;dc_motor.c: 179:     stop(mL,mR);
 11255  0051F4  C028  F01C         	movff	short_reverse@mL,stop@mL
 11256  0051F8  C029  F01D         	movff	short_reverse@mL+1,stop@mL+1
 11257  0051FC  C02A  F01E         	movff	short_reverse@mR,stop@mR
 11258  005200  C02B  F01F         	movff	short_reverse@mR+1,stop@mR+1
 11259  005204  ECAF  F025         	call	_stop	;wreg free
 11260  005208  0012               	return		;funcret
 11261  00520A                     __end_of_short_reverse:
 11262                           	callstack 0
 11263                           
 11264 ;; *************** function _goback *****************
 11265 ;; Defined at:
 11266 ;;		line 108 in file "movement.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  mL              2   47[COMRAM] PTR struct DC_motor
 11269 ;;		 -> main@motorL(10), 
 11270 ;;  mR              2   49[COMRAM] PTR struct DC_motor
 11271 ;;		 -> main@motorR(10), 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  i               2   53[COMRAM] unsigned int 
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  1    wreg      void 
 11276 ;; Registers used:
 11277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11287 ;;Total ram usage:        8 bytes
 11288 ;; Hardware stack levels used: 1
 11289 ;; Hardware stack levels required when called: 7
 11290 ;; This function calls:
 11291 ;;		_fullSpeedAhead
 11292 ;;		_reverse_square
 11293 ;;		_stop
 11294 ;;		_turnLeft
 11295 ;;		_turnRight
 11296 ;; This function is called by:
 11297 ;;		_action
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301                           	psect	text60
 11302  0032DE                     __ptext60:
 11303                           	callstack 0
 11304  0032DE                     _goback:
 11305                           	callstack 22
 11306  0032DE                     
 11307                           ;movement.c: 108: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 109:
      +                           { turnLeft(mL,mR,180);
 11308  0032DE  C030  F022         	movff	goback@mL,turnLeft@mL
 11309  0032E2  C031  F023         	movff	goback@mL+1,turnLeft@mL+1
 11310  0032E6  C032  F024         	movff	goback@mR,turnLeft@mR
 11311  0032EA  C033  F025         	movff	goback@mR+1,turnLeft@mR+1
 11312  0032EE  0EB4               	movlw	180
 11313  0032F0  6E26               	movwf	turnLeft@angle_left^0,c
 11314  0032F2  ECB1  F021         	call	_turnLeft	;wreg free
 11315                           
 11316                           ;movement.c: 110:     while(array_index > 0){
 11317  0032F6  EFAF  F01A         	goto	l4796
 11318  0032FA                     l4736:
 11319                           
 11320                           ;movement.c: 111:         fullSpeedAhead(mL,mR);
 11321  0032FA  C030  F01C         	movff	goback@mL,fullSpeedAhead@mL
 11322  0032FE  C031  F01D         	movff	goback@mL+1,fullSpeedAhead@mL+1
 11323  003302  C032  F01E         	movff	goback@mR,fullSpeedAhead@mR
 11324  003306  C033  F01F         	movff	goback@mR+1,fullSpeedAhead@mR+1
 11325  00330A  EC63  F026         	call	_fullSpeedAhead	;wreg free
 11326  00330E                     
 11327                           ;movement.c: 112:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 11328  00330E  0E00               	movlw	0
 11329  003310  6E37               	movwf	(goback@i+1)^0,c
 11330  003312  0E00               	movlw	0
 11331  003314  6E36               	movwf	goback@i^0,c
 11332  003316  EF9B  F019         	goto	l4744
 11333  00331A                     l4740:
 11334  00331A  0E52               	movlw	82
 11335  00331C  6E35               	movwf	(??_goback+1)^0,c
 11336  00331E  0E2B               	movlw	43
 11337  003320  6E34               	movwf	??_goback^0,c
 11338  003322  0E00               	movlw	0
 11339  003324                     u6827:
 11340  003324  2EE8               	decfsz	wreg,f,c
 11341  003326  D7FE               	bra	u6827
 11342  003328  2E34               	decfsz	??_goback^0,f,c
 11343  00332A  D7FC               	bra	u6827
 11344  00332C  2E35               	decfsz	(??_goback+1)^0,f,c
 11345  00332E  D7FA               	bra	u6827
 11346  003330  D000               	nop2	
 11347  003332  4A36               	infsnz	goback@i^0,f,c
 11348  003334  2A37               	incf	(goback@i+1)^0,f,c
 11349  003336                     l4744:
 11350  003336  505A               	movf	_array_index^0,w,c
 11351  003338  0D02               	mullw	2
 11352  00333A  0E3C               	movlw	low _memory
 11353  00333C  24F3               	addwf	243,w,c
 11354  00333E  6ED9               	movwf	fsr2l,c
 11355  003340  0E01               	movlw	high _memory
 11356  003342  20F4               	addwfc	prodh,w,c
 11357  003344  6EDA               	movwf	fsr2h,c
 11358  003346  50DE               	movf	postinc2,w,c
 11359  003348  5C36               	subwf	goback@i^0,w,c
 11360  00334A  50DE               	movf	postinc2,w,c
 11361  00334C  5837               	subwfb	(goback@i+1)^0,w,c
 11362  00334E  A0D8               	btfss	status,0,c
 11363  003350  EFAC  F019         	goto	u4781
 11364  003354  EFAE  F019         	goto	u4780
 11365  003358                     u4781:
 11366  003358  EF8D  F019         	goto	l4740
 11367  00335C                     u4780:
 11368  00335C                     
 11369                           ;movement.c: 113:         stop(mL,mR);
 11370  00335C  C030  F01C         	movff	goback@mL,stop@mL
 11371  003360  C031  F01D         	movff	goback@mL+1,stop@mL+1
 11372  003364  C032  F01E         	movff	goback@mR,stop@mR
 11373  003368  C033  F01F         	movff	goback@mR+1,stop@mR+1
 11374  00336C  ECAF  F025         	call	_stop	;wreg free
 11375  003370                     
 11376                           ;movement.c: 114:         if (array_index == 0){break;}
 11377  003370  505A               	movf	_array_index^0,w,c
 11378  003372  A4D8               	btfss	status,2,c
 11379  003374  EFBE  F019         	goto	u4791
 11380  003378  EFC0  F019         	goto	u4790
 11381  00337C                     u4791:
 11382  00337C  EFC2  F019         	goto	l4752
 11383  003380                     u4790:
 11384  003380  EFB7  F01A         	goto	l658
 11385  003384                     l4752:
 11386                           
 11387                           ;movement.c: 115:         array_index--;
 11388  003384  065A               	decf	_array_index^0,f,c
 11389  003386                     
 11390                           ;movement.c: 117:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 11391  003386  505A               	movf	_array_index^0,w,c
 11392  003388  0D02               	mullw	2
 11393  00338A  0E3C               	movlw	low _memory
 11394  00338C  24F3               	addwf	243,w,c
 11395  00338E  6ED9               	movwf	fsr2l,c
 11396  003390  0E01               	movlw	high _memory
 11397  003392  20F4               	addwfc	prodh,w,c
 11398  003394  6EDA               	movwf	fsr2h,c
 11399  003396  04DE               	decf	postinc2,w,c
 11400  003398  10DE               	iorwf	postinc2,w,c
 11401  00339A  A4D8               	btfss	status,2,c
 11402  00339C  EFD2  F019         	goto	u4801
 11403  0033A0  EFD4  F019         	goto	u4800
 11404  0033A4                     u4801:
 11405  0033A4  EFE1  F019         	goto	l4760
 11406  0033A8                     u4800:
 11407  0033A8  C030  F022         	movff	goback@mL,turnLeft@mL
 11408  0033AC  C031  F023         	movff	goback@mL+1,turnLeft@mL+1
 11409  0033B0  C032  F024         	movff	goback@mR,turnLeft@mR
 11410  0033B4  C033  F025         	movff	goback@mR+1,turnLeft@mR+1
 11411  0033B8  0E5A               	movlw	90
 11412  0033BA  6E26               	movwf	turnLeft@angle_left^0,c
 11413  0033BC  ECB1  F021         	call	_turnLeft	;wreg free
 11414  0033C0  065A               	decf	_array_index^0,f,c
 11415  0033C2                     l4760:
 11416                           
 11417                           ;movement.c: 118:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11418  0033C2  505A               	movf	_array_index^0,w,c
 11419  0033C4  0D02               	mullw	2
 11420  0033C6  0E3C               	movlw	low _memory
 11421  0033C8  24F3               	addwf	243,w,c
 11422  0033CA  6ED9               	movwf	fsr2l,c
 11423  0033CC  0E01               	movlw	high _memory
 11424  0033CE  20F4               	addwfc	prodh,w,c
 11425  0033D0  6EDA               	movwf	fsr2h,c
 11426  0033D2  0E02               	movlw	2
 11427  0033D4  18DE               	xorwf	postinc2,w,c
 11428  0033D6  10DE               	iorwf	postinc2,w,c
 11429  0033D8  A4D8               	btfss	status,2,c
 11430  0033DA  EFF1  F019         	goto	u4811
 11431  0033DE  EFF3  F019         	goto	u4810
 11432  0033E2                     u4811:
 11433  0033E2  EF00  F01A         	goto	l4766
 11434  0033E6                     u4810:
 11435  0033E6  C030  F022         	movff	goback@mL,turnRight@mL
 11436  0033EA  C031  F023         	movff	goback@mL+1,turnRight@mL+1
 11437  0033EE  C032  F024         	movff	goback@mR,turnRight@mR
 11438  0033F2  C033  F025         	movff	goback@mR+1,turnRight@mR+1
 11439  0033F6  0E5A               	movlw	90
 11440  0033F8  6E26               	movwf	turnRight@angle_right^0,c
 11441  0033FA  EC1B  F021         	call	_turnRight	;wreg free
 11442  0033FE  065A               	decf	_array_index^0,f,c
 11443  003400                     l4766:
 11444                           
 11445                           ;movement.c: 119:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 11446  003400  505A               	movf	_array_index^0,w,c
 11447  003402  0D02               	mullw	2
 11448  003404  0E3C               	movlw	low _memory
 11449  003406  24F3               	addwf	243,w,c
 11450  003408  6ED9               	movwf	fsr2l,c
 11451  00340A  0E01               	movlw	high _memory
 11452  00340C  20F4               	addwfc	prodh,w,c
 11453  00340E  6EDA               	movwf	fsr2h,c
 11454  003410  0E03               	movlw	3
 11455  003412  18DE               	xorwf	postinc2,w,c
 11456  003414  10DE               	iorwf	postinc2,w,c
 11457  003416  A4D8               	btfss	status,2,c
 11458  003418  EF10  F01A         	goto	u4821
 11459  00341C  EF12  F01A         	goto	u4820
 11460  003420                     u4821:
 11461  003420  EF1F  F01A         	goto	l4772
 11462  003424                     u4820:
 11463  003424  C030  F022         	movff	goback@mL,turnLeft@mL
 11464  003428  C031  F023         	movff	goback@mL+1,turnLeft@mL+1
 11465  00342C  C032  F024         	movff	goback@mR,turnLeft@mR
 11466  003430  C033  F025         	movff	goback@mR+1,turnLeft@mR+1
 11467  003434  0EB4               	movlw	180
 11468  003436  6E26               	movwf	turnLeft@angle_left^0,c
 11469  003438  ECB1  F021         	call	_turnLeft	;wreg free
 11470  00343C  065A               	decf	_array_index^0,f,c
 11471  00343E                     l4772:
 11472                           
 11473                           ;movement.c: 120:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 11474  00343E  505A               	movf	_array_index^0,w,c
 11475  003440  0D02               	mullw	2
 11476  003442  0E3C               	movlw	low _memory
 11477  003444  24F3               	addwf	243,w,c
 11478  003446  6ED9               	movwf	fsr2l,c
 11479  003448  0E01               	movlw	high _memory
 11480  00344A  20F4               	addwfc	prodh,w,c
 11481  00344C  6EDA               	movwf	fsr2h,c
 11482  00344E  0E04               	movlw	4
 11483  003450  18DE               	xorwf	postinc2,w,c
 11484  003452  10DE               	iorwf	postinc2,w,c
 11485  003454  A4D8               	btfss	status,2,c
 11486  003456  EF2F  F01A         	goto	u4831
 11487  00345A  EF31  F01A         	goto	u4830
 11488  00345E                     u4831:
 11489  00345E  EF48  F01A         	goto	l4778
 11490  003462                     u4830:
 11491  003462  C030  F028         	movff	goback@mL,reverse_square@mL
 11492  003466  C031  F029         	movff	goback@mL+1,reverse_square@mL+1
 11493  00346A  C032  F02A         	movff	goback@mR,reverse_square@mR
 11494  00346E  C033  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11495  003472  EC05  F029         	call	_reverse_square	;wreg free
 11496  003476  C030  F022         	movff	goback@mL,turnLeft@mL
 11497  00347A  C031  F023         	movff	goback@mL+1,turnLeft@mL+1
 11498  00347E  C032  F024         	movff	goback@mR,turnLeft@mR
 11499  003482  C033  F025         	movff	goback@mR+1,turnLeft@mR+1
 11500  003486  0E5A               	movlw	90
 11501  003488  6E26               	movwf	turnLeft@angle_left^0,c
 11502  00348A  ECB1  F021         	call	_turnLeft	;wreg free
 11503  00348E  065A               	decf	_array_index^0,f,c
 11504  003490                     l4778:
 11505                           
 11506                           ;movement.c: 121:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 11507  003490  505A               	movf	_array_index^0,w,c
 11508  003492  0D02               	mullw	2
 11509  003494  0E3C               	movlw	low _memory
 11510  003496  24F3               	addwf	243,w,c
 11511  003498  6ED9               	movwf	fsr2l,c
 11512  00349A  0E01               	movlw	high _memory
 11513  00349C  20F4               	addwfc	prodh,w,c
 11514  00349E  6EDA               	movwf	fsr2h,c
 11515  0034A0  0E05               	movlw	5
 11516  0034A2  18DE               	xorwf	postinc2,w,c
 11517  0034A4  10DE               	iorwf	postinc2,w,c
 11518  0034A6  A4D8               	btfss	status,2,c
 11519  0034A8  EF58  F01A         	goto	u4841
 11520  0034AC  EF5A  F01A         	goto	u4840
 11521  0034B0                     u4841:
 11522  0034B0  EF71  F01A         	goto	l4784
 11523  0034B4                     u4840:
 11524  0034B4  C030  F028         	movff	goback@mL,reverse_square@mL
 11525  0034B8  C031  F029         	movff	goback@mL+1,reverse_square@mL+1
 11526  0034BC  C032  F02A         	movff	goback@mR,reverse_square@mR
 11527  0034C0  C033  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11528  0034C4  EC05  F029         	call	_reverse_square	;wreg free
 11529  0034C8  C030  F022         	movff	goback@mL,turnRight@mL
 11530  0034CC  C031  F023         	movff	goback@mL+1,turnRight@mL+1
 11531  0034D0  C032  F024         	movff	goback@mR,turnRight@mR
 11532  0034D4  C033  F025         	movff	goback@mR+1,turnRight@mR+1
 11533  0034D8  0E5A               	movlw	90
 11534  0034DA  6E26               	movwf	turnRight@angle_right^0,c
 11535  0034DC  EC1B  F021         	call	_turnRight	;wreg free
 11536  0034E0  065A               	decf	_array_index^0,f,c
 11537  0034E2                     l4784:
 11538                           
 11539                           ;movement.c: 122:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 11540  0034E2  505A               	movf	_array_index^0,w,c
 11541  0034E4  0D02               	mullw	2
 11542  0034E6  0E3C               	movlw	low _memory
 11543  0034E8  24F3               	addwf	243,w,c
 11544  0034EA  6ED9               	movwf	fsr2l,c
 11545  0034EC  0E01               	movlw	high _memory
 11546  0034EE  20F4               	addwfc	prodh,w,c
 11547  0034F0  6EDA               	movwf	fsr2h,c
 11548  0034F2  0E06               	movlw	6
 11549  0034F4  18DE               	xorwf	postinc2,w,c
 11550  0034F6  10DE               	iorwf	postinc2,w,c
 11551  0034F8  A4D8               	btfss	status,2,c
 11552  0034FA  EF81  F01A         	goto	u4851
 11553  0034FE  EF83  F01A         	goto	u4850
 11554  003502                     u4851:
 11555  003502  EF90  F01A         	goto	l4790
 11556  003506                     u4850:
 11557  003506  C030  F022         	movff	goback@mL,turnLeft@mL
 11558  00350A  C031  F023         	movff	goback@mL+1,turnLeft@mL+1
 11559  00350E  C032  F024         	movff	goback@mR,turnLeft@mR
 11560  003512  C033  F025         	movff	goback@mR+1,turnLeft@mR+1
 11561  003516  0E87               	movlw	135
 11562  003518  6E26               	movwf	turnLeft@angle_left^0,c
 11563  00351A  ECB1  F021         	call	_turnLeft	;wreg free
 11564  00351E  065A               	decf	_array_index^0,f,c
 11565  003520                     l4790:
 11566                           
 11567                           ;movement.c: 123:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 11568  003520  505A               	movf	_array_index^0,w,c
 11569  003522  0D02               	mullw	2
 11570  003524  0E3C               	movlw	low _memory
 11571  003526  24F3               	addwf	243,w,c
 11572  003528  6ED9               	movwf	fsr2l,c
 11573  00352A  0E01               	movlw	high _memory
 11574  00352C  20F4               	addwfc	prodh,w,c
 11575  00352E  6EDA               	movwf	fsr2h,c
 11576  003530  0E07               	movlw	7
 11577  003532  18DE               	xorwf	postinc2,w,c
 11578  003534  10DE               	iorwf	postinc2,w,c
 11579  003536  A4D8               	btfss	status,2,c
 11580  003538  EFA0  F01A         	goto	u4861
 11581  00353C  EFA2  F01A         	goto	u4860
 11582  003540                     u4861:
 11583  003540  EFAF  F01A         	goto	l4796
 11584  003544                     u4860:
 11585  003544  C030  F022         	movff	goback@mL,turnRight@mL
 11586  003548  C031  F023         	movff	goback@mL+1,turnRight@mL+1
 11587  00354C  C032  F024         	movff	goback@mR,turnRight@mR
 11588  003550  C033  F025         	movff	goback@mR+1,turnRight@mR+1
 11589  003554  0E79               	movlw	121
 11590  003556  6E26               	movwf	turnRight@angle_right^0,c
 11591  003558  EC1B  F021         	call	_turnRight	;wreg free
 11592  00355C  065A               	decf	_array_index^0,f,c
 11593  00355E                     l4796:
 11594                           
 11595                           ;movement.c: 110:     while(array_index > 0){
 11596  00355E  505A               	movf	_array_index^0,w,c
 11597  003560  A4D8               	btfss	status,2,c
 11598  003562  EFB5  F01A         	goto	u4871
 11599  003566  EFB7  F01A         	goto	u4870
 11600  00356A                     u4871:
 11601  00356A  EF7D  F019         	goto	l4736
 11602  00356E                     u4870:
 11603  00356E                     l658:
 11604  00356E  0012               	return		;funcret
 11605  003570                     __end_of_goback:
 11606                           	callstack 0
 11607                           
 11608 ;; *************** function _turnRight *****************
 11609 ;; Defined at:
 11610 ;;		line 119 in file "dc_motor.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 11613 ;;		 -> main@motorL(10), 
 11614 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 11615 ;;		 -> main@motorR(10), 
 11616 ;;  angle_right     1   37[COMRAM] unsigned char 
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;  i               2   43[COMRAM] unsigned int 
 11619 ;;  i               2   41[COMRAM] unsigned int 
 11620 ;;  delay           2   45[COMRAM] unsigned int 
 11621 ;;  delay_180       2   39[COMRAM] unsigned int 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11631 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11632 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11634 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11635 ;;Total ram usage:       14 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 5
 11638 ;; This function calls:
 11639 ;;		_setMotorPWM
 11640 ;;		_stop
 11641 ;; This function is called by:
 11642 ;;		_action
 11643 ;;		_goback
 11644 ;;		_movement
 11645 ;;		_test_action
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           	psect	text61
 11650  004236                     __ptext61:
 11651                           	callstack 0
 11652  004236                     _turnRight:
 11653                           	callstack 24
 11654  004236                     
 11655                           ;dc_motor.c: 119: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 120: {;dc_motor.c: 121:     mL->direction=1;
 11656  004236  EE20 F001          	lfsr	2,1
 11657  00423A  5022               	movf	turnRight@mL^0,w,c
 11658  00423C  26D9               	addwf	fsr2l,f,c
 11659  00423E  5023               	movf	(turnRight@mL+1)^0,w,c
 11660  004240  22DA               	addwfc	fsr2h,f,c
 11661  004242  0E01               	movlw	1
 11662  004244  6EDF               	movwf	indf2,c
 11663                           
 11664                           ;dc_motor.c: 122:     mR->direction=1;
 11665  004246  EE20 F001          	lfsr	2,1
 11666  00424A  5024               	movf	turnRight@mR^0,w,c
 11667  00424C  26D9               	addwf	fsr2l,f,c
 11668  00424E  5025               	movf	(turnRight@mR+1)^0,w,c
 11669  004250  22DA               	addwfc	fsr2h,f,c
 11670  004252  0E01               	movlw	1
 11671  004254  6EDF               	movwf	indf2,c
 11672                           
 11673                           ;dc_motor.c: 123:     while (mL->power <25){
 11674  004256  EF4C  F021         	goto	l4330
 11675  00425A                     l4322:
 11676                           
 11677                           ;dc_motor.c: 124:         mL->power += 5;
 11678  00425A  C022  FFD9         	movff	turnRight@mL,fsr2l
 11679  00425E  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 11680  004262  0E05               	movlw	5
 11681  004264  26DF               	addwf	indf2,f,c
 11682                           
 11683                           ;dc_motor.c: 125:         mR->power = 0;
 11684  004266  C024  FFD9         	movff	turnRight@mR,fsr2l
 11685  00426A  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 11686  00426E  0E00               	movlw	0
 11687  004270  6EDF               	movwf	indf2,c
 11688  004272                     
 11689                           ;dc_motor.c: 126:         setMotorPWM(mL);
 11690  004272  C022  F011         	movff	turnRight@mL,setMotorPWM@m
 11691  004276  C023  F012         	movff	turnRight@mL+1,setMotorPWM@m+1
 11692  00427A  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11693  00427E                     
 11694                           ;dc_motor.c: 127:         setMotorPWM(mR);
 11695  00427E  C024  F011         	movff	turnRight@mR,setMotorPWM@m
 11696  004282  C025  F012         	movff	turnRight@mR+1,setMotorPWM@m+1
 11697  004286  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11698  00428A                     
 11699                           ;dc_motor.c: 128:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11700  00428A  0ED0               	movlw	208
 11701  00428C  6E27               	movwf	??_turnRight^0,c
 11702  00428E  0ECA               	movlw	202
 11703  004290                     u6837:
 11704  004290  2EE8               	decfsz	wreg,f,c
 11705  004292  D7FE               	bra	u6837
 11706  004294  2E27               	decfsz	??_turnRight^0,f,c
 11707  004296  D7FC               	bra	u6837
 11708  004298                     l4330:
 11709                           
 11710                           ;dc_motor.c: 123:     while (mL->power <25){
 11711  004298  C022  FFD9         	movff	turnRight@mL,fsr2l
 11712  00429C  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 11713  0042A0  0E18               	movlw	24
 11714  0042A2  64DF               	cpfsgt	indf2,c
 11715  0042A4  EF56  F021         	goto	u4211
 11716  0042A8  EF58  F021         	goto	u4210
 11717  0042AC                     u4211:
 11718  0042AC  EF2D  F021         	goto	l4322
 11719  0042B0                     u4210:
 11720  0042B0                     
 11721                           ;dc_motor.c: 130:     unsigned int delay = angle_right * SENSITIVITY;
 11722  0042B0  5026               	movf	turnRight@angle_right^0,w,c
 11723  0042B2  0100               	movlb	0	; () banked
 11724  0042B4  03FF               	mulwf	_SENSITIVITY& (0+255),b
 11725  0042B6  CFF3 F02E          	movff	prodl,turnRight@delay
 11726  0042BA  CFF4 F02F          	movff	prodh,turnRight@delay+1
 11727  0042BE                     
 11728                           ; BSR set to: 0
 11729                           ;dc_motor.c: 131:     unsigned int delay_180 = delay + CALIBRATION_180;
 11730  0042BE  0E14               	movlw	20
 11731  0042C0  242E               	addwf	turnRight@delay^0,w,c
 11732  0042C2  6E28               	movwf	turnRight@delay_180^0,c
 11733  0042C4  0E00               	movlw	0
 11734  0042C6  202F               	addwfc	(turnRight@delay+1)^0,w,c
 11735  0042C8  6E29               	movwf	(turnRight@delay_180+1)^0,c
 11736  0042CA                     
 11737                           ; BSR set to: 0
 11738                           ;dc_motor.c: 132:     if (angle_right == 180){
 11739  0042CA  0EB4               	movlw	180
 11740  0042CC  1826               	xorwf	turnRight@angle_right^0,w,c
 11741  0042CE  A4D8               	btfss	status,2,c
 11742  0042D0  EF6C  F021         	goto	u4221
 11743  0042D4  EF6E  F021         	goto	u4220
 11744  0042D8                     u4221:
 11745  0042D8  EF8B  F021         	goto	l4344
 11746  0042DC                     u4220:
 11747  0042DC                     
 11748                           ; BSR set to: 0
 11749                           ;dc_motor.c: 133:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11750  0042DC  0E00               	movlw	0
 11751  0042DE  6E2B               	movwf	(turnRight@i+1)^0,c
 11752  0042E0  0E00               	movlw	0
 11753  0042E2  6E2A               	movwf	turnRight@i^0,c
 11754  0042E4  EF7E  F021         	goto	l343
 11755  0042E8                     l4340:
 11756  0042E8  0E15               	movlw	21
 11757  0042EA  6E27               	movwf	??_turnRight^0,c
 11758  0042EC  0EC6               	movlw	198
 11759  0042EE                     u6847:
 11760  0042EE  2EE8               	decfsz	wreg,f,c
 11761  0042F0  D7FE               	bra	u6847
 11762  0042F2  2E27               	decfsz	??_turnRight^0,f,c
 11763  0042F4  D7FC               	bra	u6847
 11764  0042F6  D000               	nop2	
 11765  0042F8  4A2A               	infsnz	turnRight@i^0,f,c
 11766  0042FA  2A2B               	incf	(turnRight@i+1)^0,f,c
 11767  0042FC                     l343:
 11768  0042FC  5028               	movf	turnRight@delay_180^0,w,c
 11769  0042FE  5C2A               	subwf	turnRight@i^0,w,c
 11770  004300  5029               	movf	(turnRight@delay_180+1)^0,w,c
 11771  004302  582B               	subwfb	(turnRight@i+1)^0,w,c
 11772  004304  A0D8               	btfss	status,0,c
 11773  004306  EF87  F021         	goto	u4231
 11774  00430A  EF89  F021         	goto	u4230
 11775  00430E                     u4231:
 11776  00430E  EF74  F021         	goto	l4340
 11777  004312                     u4230:
 11778  004312  EFA6  F021         	goto	l4350
 11779  004316                     l4344:
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;dc_motor.c: 136:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11783  004316  0E00               	movlw	0
 11784  004318  6E2D               	movwf	(turnRight@i_1402+1)^0,c
 11785  00431A  0E00               	movlw	0
 11786  00431C  6E2C               	movwf	turnRight@i_1402^0,c
 11787  00431E  EF9B  F021         	goto	l347
 11788  004322                     l4346:
 11789  004322  0E15               	movlw	21
 11790  004324  6E27               	movwf	??_turnRight^0,c
 11791  004326  0EC6               	movlw	198
 11792  004328                     u6857:
 11793  004328  2EE8               	decfsz	wreg,f,c
 11794  00432A  D7FE               	bra	u6857
 11795  00432C  2E27               	decfsz	??_turnRight^0,f,c
 11796  00432E  D7FC               	bra	u6857
 11797  004330  D000               	nop2	
 11798  004332  4A2C               	infsnz	turnRight@i_1402^0,f,c
 11799  004334  2A2D               	incf	(turnRight@i_1402+1)^0,f,c
 11800  004336                     l347:
 11801  004336  502E               	movf	turnRight@delay^0,w,c
 11802  004338  5C2C               	subwf	turnRight@i_1402^0,w,c
 11803  00433A  502F               	movf	(turnRight@delay+1)^0,w,c
 11804  00433C  582D               	subwfb	(turnRight@i_1402+1)^0,w,c
 11805  00433E  A0D8               	btfss	status,0,c
 11806  004340  EFA4  F021         	goto	u4241
 11807  004344  EFA6  F021         	goto	u4240
 11808  004348                     u4241:
 11809  004348  EF91  F021         	goto	l4346
 11810  00434C                     u4240:
 11811  00434C                     l4350:
 11812                           
 11813                           ;dc_motor.c: 138:     stop(mL,mR);
 11814  00434C  C022  F01C         	movff	turnRight@mL,stop@mL
 11815  004350  C023  F01D         	movff	turnRight@mL+1,stop@mL+1
 11816  004354  C024  F01E         	movff	turnRight@mR,stop@mR
 11817  004358  C025  F01F         	movff	turnRight@mR+1,stop@mR+1
 11818  00435C  ECAF  F025         	call	_stop	;wreg free
 11819  004360  0012               	return		;funcret
 11820  004362                     __end_of_turnRight:
 11821                           	callstack 0
 11822                           
 11823 ;; *************** function _turnLeft *****************
 11824 ;; Defined at:
 11825 ;;		line 96 in file "dc_motor.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 11828 ;;		 -> main@motorL(10), 
 11829 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 11830 ;;		 -> main@motorR(10), 
 11831 ;;  angle_left      1   37[COMRAM] unsigned char 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  i               2   43[COMRAM] unsigned int 
 11834 ;;  i               2   41[COMRAM] unsigned int 
 11835 ;;  delay           2   45[COMRAM] unsigned int 
 11836 ;;  delay_180       2   39[COMRAM] unsigned int 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11846 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11847 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11849 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11850 ;;Total ram usage:       14 bytes
 11851 ;; Hardware stack levels used: 1
 11852 ;; Hardware stack levels required when called: 5
 11853 ;; This function calls:
 11854 ;;		_setMotorPWM
 11855 ;;		_stop
 11856 ;; This function is called by:
 11857 ;;		_action
 11858 ;;		_goback
 11859 ;;		_test_action
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           	psect	text62
 11864  004362                     __ptext62:
 11865                           	callstack 0
 11866  004362                     _turnLeft:
 11867                           	callstack 24
 11868  004362                     
 11869                           ;dc_motor.c: 96: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 97: {;dc_motor.c: 98:       mL->direction=1;
 11870  004362  EE20 F001          	lfsr	2,1
 11871  004366  5022               	movf	turnLeft@mL^0,w,c
 11872  004368  26D9               	addwf	fsr2l,f,c
 11873  00436A  5023               	movf	(turnLeft@mL+1)^0,w,c
 11874  00436C  22DA               	addwfc	fsr2h,f,c
 11875  00436E  0E01               	movlw	1
 11876  004370  6EDF               	movwf	indf2,c
 11877                           
 11878                           ;dc_motor.c: 99:       mR->direction=1;
 11879  004372  EE20 F001          	lfsr	2,1
 11880  004376  5024               	movf	turnLeft@mR^0,w,c
 11881  004378  26D9               	addwf	fsr2l,f,c
 11882  00437A  5025               	movf	(turnLeft@mR+1)^0,w,c
 11883  00437C  22DA               	addwfc	fsr2h,f,c
 11884  00437E  0E01               	movlw	1
 11885  004380  6EDF               	movwf	indf2,c
 11886                           
 11887                           ;dc_motor.c: 100:       while (mR->power <25){
 11888  004382  EFE2  F021         	goto	l4362
 11889  004386                     l4354:
 11890                           
 11891                           ;dc_motor.c: 101:         mR->power += 5;
 11892  004386  C024  FFD9         	movff	turnLeft@mR,fsr2l
 11893  00438A  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 11894  00438E  0E05               	movlw	5
 11895  004390  26DF               	addwf	indf2,f,c
 11896                           
 11897                           ;dc_motor.c: 102:         mL->power = 0;
 11898  004392  C022  FFD9         	movff	turnLeft@mL,fsr2l
 11899  004396  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 11900  00439A  0E00               	movlw	0
 11901  00439C  6EDF               	movwf	indf2,c
 11902  00439E                     
 11903                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11904  00439E  C022  F011         	movff	turnLeft@mL,setMotorPWM@m
 11905  0043A2  C023  F012         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11906  0043A6  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11907  0043AA                     
 11908                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11909  0043AA  C024  F011         	movff	turnLeft@mR,setMotorPWM@m
 11910  0043AE  C025  F012         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11911  0043B2  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11912  0043B6                     
 11913                           ;dc_motor.c: 105:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11914  0043B6  0ED0               	movlw	208
 11915  0043B8  6E27               	movwf	??_turnLeft^0,c
 11916  0043BA  0ECA               	movlw	202
 11917  0043BC                     u6867:
 11918  0043BC  2EE8               	decfsz	wreg,f,c
 11919  0043BE  D7FE               	bra	u6867
 11920  0043C0  2E27               	decfsz	??_turnLeft^0,f,c
 11921  0043C2  D7FC               	bra	u6867
 11922  0043C4                     l4362:
 11923                           
 11924                           ;dc_motor.c: 100:       while (mR->power <25){
 11925  0043C4  C024  FFD9         	movff	turnLeft@mR,fsr2l
 11926  0043C8  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 11927  0043CC  0E18               	movlw	24
 11928  0043CE  64DF               	cpfsgt	indf2,c
 11929  0043D0  EFEC  F021         	goto	u4251
 11930  0043D4  EFEE  F021         	goto	u4250
 11931  0043D8                     u4251:
 11932  0043D8  EFC3  F021         	goto	l4354
 11933  0043DC                     u4250:
 11934  0043DC                     
 11935                           ;dc_motor.c: 107:     unsigned int delay = angle_left * SENSITIVITY;
 11936  0043DC  5026               	movf	turnLeft@angle_left^0,w,c
 11937  0043DE  0100               	movlb	0	; () banked
 11938  0043E0  03FF               	mulwf	_SENSITIVITY& (0+255),b
 11939  0043E2  CFF3 F02E          	movff	prodl,turnLeft@delay
 11940  0043E6  CFF4 F02F          	movff	prodh,turnLeft@delay+1
 11941  0043EA                     
 11942                           ; BSR set to: 0
 11943                           ;dc_motor.c: 108:     unsigned int delay_180 = delay + CALIBRATION_180;
 11944  0043EA  0E14               	movlw	20
 11945  0043EC  242E               	addwf	turnLeft@delay^0,w,c
 11946  0043EE  6E28               	movwf	turnLeft@delay_180^0,c
 11947  0043F0  0E00               	movlw	0
 11948  0043F2  202F               	addwfc	(turnLeft@delay+1)^0,w,c
 11949  0043F4  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 11950  0043F6                     
 11951                           ; BSR set to: 0
 11952                           ;dc_motor.c: 109:     if (angle_left == 180){
 11953  0043F6  0EB4               	movlw	180
 11954  0043F8  1826               	xorwf	turnLeft@angle_left^0,w,c
 11955  0043FA  A4D8               	btfss	status,2,c
 11956  0043FC  EF02  F022         	goto	u4261
 11957  004400  EF04  F022         	goto	u4260
 11958  004404                     u4261:
 11959  004404  EF21  F022         	goto	l4376
 11960  004408                     u4260:
 11961  004408                     
 11962                           ; BSR set to: 0
 11963                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11964  004408  0E00               	movlw	0
 11965  00440A  6E2B               	movwf	(turnLeft@i+1)^0,c
 11966  00440C  0E00               	movlw	0
 11967  00440E  6E2A               	movwf	turnLeft@i^0,c
 11968  004410  EF14  F022         	goto	l329
 11969  004414                     l4372:
 11970  004414  0E15               	movlw	21
 11971  004416  6E27               	movwf	??_turnLeft^0,c
 11972  004418  0EC6               	movlw	198
 11973  00441A                     u6877:
 11974  00441A  2EE8               	decfsz	wreg,f,c
 11975  00441C  D7FE               	bra	u6877
 11976  00441E  2E27               	decfsz	??_turnLeft^0,f,c
 11977  004420  D7FC               	bra	u6877
 11978  004422  D000               	nop2	
 11979  004424  4A2A               	infsnz	turnLeft@i^0,f,c
 11980  004426  2A2B               	incf	(turnLeft@i+1)^0,f,c
 11981  004428                     l329:
 11982  004428  5028               	movf	turnLeft@delay_180^0,w,c
 11983  00442A  5C2A               	subwf	turnLeft@i^0,w,c
 11984  00442C  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 11985  00442E  582B               	subwfb	(turnLeft@i+1)^0,w,c
 11986  004430  A0D8               	btfss	status,0,c
 11987  004432  EF1D  F022         	goto	u4271
 11988  004436  EF1F  F022         	goto	u4270
 11989  00443A                     u4271:
 11990  00443A  EF0A  F022         	goto	l4372
 11991  00443E                     u4270:
 11992  00443E  EF3C  F022         	goto	l4382
 11993  004442                     l4376:
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;dc_motor.c: 113:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11997  004442  0E00               	movlw	0
 11998  004444  6E2D               	movwf	(turnLeft@i_1379+1)^0,c
 11999  004446  0E00               	movlw	0
 12000  004448  6E2C               	movwf	turnLeft@i_1379^0,c
 12001  00444A  EF31  F022         	goto	l333
 12002  00444E                     l4378:
 12003  00444E  0E15               	movlw	21
 12004  004450  6E27               	movwf	??_turnLeft^0,c
 12005  004452  0EC6               	movlw	198
 12006  004454                     u6887:
 12007  004454  2EE8               	decfsz	wreg,f,c
 12008  004456  D7FE               	bra	u6887
 12009  004458  2E27               	decfsz	??_turnLeft^0,f,c
 12010  00445A  D7FC               	bra	u6887
 12011  00445C  D000               	nop2	
 12012  00445E  4A2C               	infsnz	turnLeft@i_1379^0,f,c
 12013  004460  2A2D               	incf	(turnLeft@i_1379+1)^0,f,c
 12014  004462                     l333:
 12015  004462  502E               	movf	turnLeft@delay^0,w,c
 12016  004464  5C2C               	subwf	turnLeft@i_1379^0,w,c
 12017  004466  502F               	movf	(turnLeft@delay+1)^0,w,c
 12018  004468  582D               	subwfb	(turnLeft@i_1379+1)^0,w,c
 12019  00446A  A0D8               	btfss	status,0,c
 12020  00446C  EF3A  F022         	goto	u4281
 12021  004470  EF3C  F022         	goto	u4280
 12022  004474                     u4281:
 12023  004474  EF27  F022         	goto	l4378
 12024  004478                     u4280:
 12025  004478                     l4382:
 12026                           
 12027                           ;dc_motor.c: 115:     stop(mL,mR);
 12028  004478  C022  F01C         	movff	turnLeft@mL,stop@mL
 12029  00447C  C023  F01D         	movff	turnLeft@mL+1,stop@mL+1
 12030  004480  C024  F01E         	movff	turnLeft@mR,stop@mR
 12031  004484  C025  F01F         	movff	turnLeft@mR+1,stop@mR+1
 12032  004488  ECAF  F025         	call	_stop	;wreg free
 12033  00448C  0012               	return		;funcret
 12034  00448E                     __end_of_turnLeft:
 12035                           	callstack 0
 12036                           
 12037 ;; *************** function _reverse_square *****************
 12038 ;; Defined at:
 12039 ;;		line 182 in file "dc_motor.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 12042 ;;		 -> main@motorL(10), 
 12043 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 12044 ;;		 -> main@motorR(10), 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12059 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12060 ;;Total ram usage:        6 bytes
 12061 ;; Hardware stack levels used: 1
 12062 ;; Hardware stack levels required when called: 6
 12063 ;; This function calls:
 12064 ;;		_fullSpeedBack
 12065 ;;		_stop
 12066 ;; This function is called by:
 12067 ;;		_action
 12068 ;;		_goback
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text63
 12073  00520A                     __ptext63:
 12074                           	callstack 0
 12075  00520A                     _reverse_square:
 12076                           	callstack 23
 12077  00520A                     
 12078                           ;dc_motor.c: 182: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 183: { fullSpeedBack(mL, mR);
 12079  00520A  C028  F022         	movff	reverse_square@mL,fullSpeedBack@mL
 12080  00520E  C029  F023         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12081  005212  C02A  F024         	movff	reverse_square@mR,fullSpeedBack@mR
 12082  005216  C02B  F025         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12083  00521A  EC4F  F025         	call	_fullSpeedBack	;wreg free
 12084  00521E                     
 12085                           ;dc_motor.c: 184:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12086  00521E  0E52               	movlw	82
 12087  005220  6E2D               	movwf	(??_reverse_square+1)^0,c
 12088  005222  0E2B               	movlw	43
 12089  005224  6E2C               	movwf	??_reverse_square^0,c
 12090  005226  0E00               	movlw	0
 12091  005228                     u6897:
 12092  005228  2EE8               	decfsz	wreg,f,c
 12093  00522A  D7FE               	bra	u6897
 12094  00522C  2E2C               	decfsz	??_reverse_square^0,f,c
 12095  00522E  D7FC               	bra	u6897
 12096  005230  2E2D               	decfsz	(??_reverse_square+1)^0,f,c
 12097  005232  D7FA               	bra	u6897
 12098  005234  D000               	nop2	
 12099  005236                     
 12100                           ;dc_motor.c: 185:     stop(mL,mR);
 12101  005236  C028  F01C         	movff	reverse_square@mL,stop@mL
 12102  00523A  C029  F01D         	movff	reverse_square@mL+1,stop@mL+1
 12103  00523E  C02A  F01E         	movff	reverse_square@mR,stop@mR
 12104  005242  C02B  F01F         	movff	reverse_square@mR+1,stop@mR+1
 12105  005246  ECAF  F025         	call	_stop	;wreg free
 12106  00524A  0012               	return		;funcret
 12107  00524C                     __end_of_reverse_square:
 12108                           	callstack 0
 12109                           
 12110 ;; *************** function _fullSpeedBack *****************
 12111 ;; Defined at:
 12112 ;;		line 161 in file "dc_motor.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12115 ;;		 -> main@motorL(10), 
 12116 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12117 ;;		 -> main@motorR(10), 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;Total ram usage:        6 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 5
 12136 ;; This function calls:
 12137 ;;		_setMotorPWM
 12138 ;;		_stop
 12139 ;; This function is called by:
 12140 ;;		_short_reverse
 12141 ;;		_reverse_square
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           	psect	text64
 12146  004A9E                     __ptext64:
 12147                           	callstack 0
 12148  004A9E                     _fullSpeedBack:
 12149                           	callstack 23
 12150  004A9E                     
 12151                           ;dc_motor.c: 161: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 162: {;dc_motor.c: 163:     mL->direction=0;
 12152  004A9E  EE20 F001          	lfsr	2,1
 12153  004AA2  5022               	movf	fullSpeedBack@mL^0,w,c
 12154  004AA4  26D9               	addwf	fsr2l,f,c
 12155  004AA6  5023               	movf	(fullSpeedBack@mL+1)^0,w,c
 12156  004AA8  22DA               	addwfc	fsr2h,f,c
 12157  004AAA  0E00               	movlw	0
 12158  004AAC  6EDF               	movwf	indf2,c
 12159                           
 12160                           ;dc_motor.c: 164:     mR->direction=0;
 12161  004AAE  EE20 F001          	lfsr	2,1
 12162  004AB2  5024               	movf	fullSpeedBack@mR^0,w,c
 12163  004AB4  26D9               	addwf	fsr2l,f,c
 12164  004AB6  5025               	movf	(fullSpeedBack@mR+1)^0,w,c
 12165  004AB8  22DA               	addwfc	fsr2h,f,c
 12166  004ABA  0E00               	movlw	0
 12167  004ABC  6EDF               	movwf	indf2,c
 12168                           
 12169                           ;dc_motor.c: 165:     while (mL->power<50 && mR->power<50){
 12170  004ABE  EF80  F025         	goto	l4174
 12171  004AC2                     l4166:
 12172                           
 12173                           ;dc_motor.c: 166:         mL->power += 10;
 12174  004AC2  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12175  004AC6  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12176  004ACA  0E0A               	movlw	10
 12177  004ACC  26DF               	addwf	indf2,f,c
 12178                           
 12179                           ;dc_motor.c: 167:         mR->power += 10;
 12180  004ACE  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12181  004AD2  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12182  004AD6  0E0A               	movlw	10
 12183  004AD8  26DF               	addwf	indf2,f,c
 12184  004ADA                     
 12185                           ;dc_motor.c: 168:         setMotorPWM(mL);
 12186  004ADA  C022  F011         	movff	fullSpeedBack@mL,setMotorPWM@m
 12187  004ADE  C023  F012         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12188  004AE2  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12189  004AE6                     
 12190                           ;dc_motor.c: 169:         setMotorPWM(mR);
 12191  004AE6  C024  F011         	movff	fullSpeedBack@mR,setMotorPWM@m
 12192  004AEA  C025  F012         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12193  004AEE  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12194  004AF2                     
 12195                           ;dc_motor.c: 170:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12196  004AF2  0ED0               	movlw	208
 12197  004AF4  6E26               	movwf	??_fullSpeedBack^0,c
 12198  004AF6  0ECA               	movlw	202
 12199  004AF8                     u6907:
 12200  004AF8  2EE8               	decfsz	wreg,f,c
 12201  004AFA  D7FE               	bra	u6907
 12202  004AFC  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12203  004AFE  D7FC               	bra	u6907
 12204  004B00                     l4174:
 12205                           
 12206                           ;dc_motor.c: 165:     while (mL->power<50 && mR->power<50){
 12207  004B00  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12208  004B04  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12209  004B08  0E32               	movlw	50
 12210  004B0A  60DF               	cpfslt	indf2,c
 12211  004B0C  EF8A  F025         	goto	u3981
 12212  004B10  EF8C  F025         	goto	u3980
 12213  004B14                     u3981:
 12214  004B14  EF98  F025         	goto	l4178
 12215  004B18                     u3980:
 12216  004B18  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12217  004B1C  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12218  004B20  0E31               	movlw	49
 12219  004B22  64DF               	cpfsgt	indf2,c
 12220  004B24  EF96  F025         	goto	u3991
 12221  004B28  EF98  F025         	goto	u3990
 12222  004B2C                     u3991:
 12223  004B2C  EF61  F025         	goto	l4166
 12224  004B30                     u3990:
 12225  004B30                     l4178:
 12226                           
 12227                           ;dc_motor.c: 172:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12228  004B30  0E29               	movlw	41
 12229  004B32  6E27               	movwf	(??_fullSpeedBack+1)^0,c
 12230  004B34  0E96               	movlw	150
 12231  004B36  6E26               	movwf	??_fullSpeedBack^0,c
 12232  004B38  0E7F               	movlw	127
 12233  004B3A                     u6917:
 12234  004B3A  2EE8               	decfsz	wreg,f,c
 12235  004B3C  D7FE               	bra	u6917
 12236  004B3E  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12237  004B40  D7FC               	bra	u6917
 12238  004B42  2E27               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12239  004B44  D7FA               	bra	u6917
 12240  004B46  F000               	nop	
 12241  004B48                     
 12242                           ;dc_motor.c: 173:     stop(mL,mR);
 12243  004B48  C022  F01C         	movff	fullSpeedBack@mL,stop@mL
 12244  004B4C  C023  F01D         	movff	fullSpeedBack@mL+1,stop@mL+1
 12245  004B50  C024  F01E         	movff	fullSpeedBack@mR,stop@mR
 12246  004B54  C025  F01F         	movff	fullSpeedBack@mR+1,stop@mR+1
 12247  004B58  ECAF  F025         	call	_stop	;wreg free
 12248  004B5C  0012               	return		;funcret
 12249  004B5E                     __end_of_fullSpeedBack:
 12250                           	callstack 0
 12251                           
 12252 ;; *************** function _stop *****************
 12253 ;; Defined at:
 12254 ;;		line 83 in file "dc_motor.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12257 ;;		 -> main@motorL(10), 
 12258 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12259 ;;		 -> main@motorR(10), 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  1    wreg      void 
 12264 ;; Registers used:
 12265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;Total ram usage:        6 bytes
 12276 ;; Hardware stack levels used: 1
 12277 ;; Hardware stack levels required when called: 4
 12278 ;; This function calls:
 12279 ;;		_setMotorPWM
 12280 ;; This function is called by:
 12281 ;;		_turnLeft
 12282 ;;		_turnRight
 12283 ;;		_fullSpeedBack
 12284 ;;		_short_reverse
 12285 ;;		_reverse_square
 12286 ;;		_main
 12287 ;;		_short_burst
 12288 ;;		_action
 12289 ;;		_goback
 12290 ;;		_fullSpeedAhead_test
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text65
 12295  004B5E                     __ptext65:
 12296                           	callstack 0
 12297  004B5E                     _stop:
 12298                           	callstack 26
 12299  004B5E                     
 12300                           ;dc_motor.c: 83: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 84: {;d
      +                          c_motor.c: 85:     while (mL->power >0 || mR->power >0){
 12301  004B5E  EFE8  F025         	goto	l3926
 12302  004B62                     l3912:
 12303                           
 12304                           ;dc_motor.c: 86:         if (mL->power !=0){mL->power -= 5;}
 12305  004B62  C01C  FFD9         	movff	stop@mL,fsr2l
 12306  004B66  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12307  004B6A  50DF               	movf	indf2,w,c
 12308  004B6C  B4D8               	btfsc	status,2,c
 12309  004B6E  EFBB  F025         	goto	u3651
 12310  004B72  EFBD  F025         	goto	u3650
 12311  004B76                     u3651:
 12312  004B76  EFC3  F025         	goto	l3916
 12313  004B7A                     u3650:
 12314  004B7A  C01C  FFD9         	movff	stop@mL,fsr2l
 12315  004B7E  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12316  004B82  0E05               	movlw	5
 12317  004B84  5EDF               	subwf	indf2,f,c
 12318  004B86                     l3916:
 12319                           
 12320                           ;dc_motor.c: 87:         if (mR->power !=0){mR->power -= 5;}
 12321  004B86  C01E  FFD9         	movff	stop@mR,fsr2l
 12322  004B8A  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12323  004B8E  50DF               	movf	indf2,w,c
 12324  004B90  B4D8               	btfsc	status,2,c
 12325  004B92  EFCD  F025         	goto	u3661
 12326  004B96  EFCF  F025         	goto	u3660
 12327  004B9A                     u3661:
 12328  004B9A  EFD5  F025         	goto	l3920
 12329  004B9E                     u3660:
 12330  004B9E  C01E  FFD9         	movff	stop@mR,fsr2l
 12331  004BA2  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12332  004BA6  0E05               	movlw	5
 12333  004BA8  5EDF               	subwf	indf2,f,c
 12334  004BAA                     l3920:
 12335                           
 12336                           ;dc_motor.c: 88:         setMotorPWM(mL);
 12337  004BAA  C01C  F011         	movff	stop@mL,setMotorPWM@m
 12338  004BAE  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
 12339  004BB2  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12340  004BB6                     
 12341                           ;dc_motor.c: 89:         setMotorPWM(mR);
 12342  004BB6  C01E  F011         	movff	stop@mR,setMotorPWM@m
 12343  004BBA  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
 12344  004BBE  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12345  004BC2                     
 12346                           ;dc_motor.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12347  004BC2  0ED0               	movlw	208
 12348  004BC4  6E20               	movwf	??_stop^0,c
 12349  004BC6  0ECA               	movlw	202
 12350  004BC8                     u6927:
 12351  004BC8  2EE8               	decfsz	wreg,f,c
 12352  004BCA  D7FE               	bra	u6927
 12353  004BCC  2E20               	decfsz	??_stop^0,f,c
 12354  004BCE  D7FC               	bra	u6927
 12355  004BD0                     l3926:
 12356                           
 12357                           ;dc_motor.c: 85:     while (mL->power >0 || mR->power >0){
 12358  004BD0  C01C  FFD9         	movff	stop@mL,fsr2l
 12359  004BD4  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12360  004BD8  50DF               	movf	indf2,w,c
 12361  004BDA  A4D8               	btfss	status,2,c
 12362  004BDC  EFF2  F025         	goto	u3671
 12363  004BE0  EFF4  F025         	goto	u3670
 12364  004BE4                     u3671:
 12365  004BE4  EFB1  F025         	goto	l3912
 12366  004BE8                     u3670:
 12367  004BE8  C01E  FFD9         	movff	stop@mR,fsr2l
 12368  004BEC  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12369  004BF0  50DF               	movf	indf2,w,c
 12370  004BF2  A4D8               	btfss	status,2,c
 12371  004BF4  EFFE  F025         	goto	u3681
 12372  004BF8  EF00  F026         	goto	u3680
 12373  004BFC                     u3681:
 12374  004BFC  EFB1  F025         	goto	l3912
 12375  004C00                     u3680:
 12376  004C00                     
 12377                           ;dc_motor.c: 92:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12378  004C00  0E09               	movlw	9
 12379  004C02  6E21               	movwf	(??_stop+1)^0,c
 12380  004C04  0E1E               	movlw	30
 12381  004C06  6E20               	movwf	??_stop^0,c
 12382  004C08  0EE4               	movlw	228
 12383  004C0A                     u6937:
 12384  004C0A  2EE8               	decfsz	wreg,f,c
 12385  004C0C  D7FE               	bra	u6937
 12386  004C0E  2E20               	decfsz	??_stop^0,f,c
 12387  004C10  D7FC               	bra	u6937
 12388  004C12  2E21               	decfsz	(??_stop+1)^0,f,c
 12389  004C14  D7FA               	bra	u6937
 12390  004C16  D000               	nop2	
 12391  004C18  0012               	return		;funcret
 12392  004C1A                     __end_of_stop:
 12393                           	callstack 0
 12394                           
 12395 ;; *************** function _fullSpeedAhead *****************
 12396 ;; Defined at:
 12397 ;;		line 142 in file "dc_motor.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12400 ;;		 -> main@motorL(10), 
 12401 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12402 ;;		 -> main@motorR(10), 
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;		None
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      void 
 12407 ;; Registers used:
 12408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12418 ;;Total ram usage:        5 bytes
 12419 ;; Hardware stack levels used: 1
 12420 ;; Hardware stack levels required when called: 4
 12421 ;; This function calls:
 12422 ;;		_setMotorPWM
 12423 ;; This function is called by:
 12424 ;;		_main
 12425 ;;		_short_burst
 12426 ;;		_goback
 12427 ;;		_fullSpeedAhead_test
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text66
 12432  004CC6                     __ptext66:
 12433                           	callstack 0
 12434  004CC6                     _fullSpeedAhead:
 12435                           	callstack 25
 12436  004CC6                     
 12437                           ;dc_motor.c: 142: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 143: {;dc_motor.c: 144:     mL->direction=1;
 12438  004CC6  EE20 F001          	lfsr	2,1
 12439  004CCA  501C               	movf	fullSpeedAhead@mL^0,w,c
 12440  004CCC  26D9               	addwf	fsr2l,f,c
 12441  004CCE  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12442  004CD0  22DA               	addwfc	fsr2h,f,c
 12443  004CD2  0E01               	movlw	1
 12444  004CD4  6EDF               	movwf	indf2,c
 12445                           
 12446                           ;dc_motor.c: 145:     mR->direction=1;
 12447  004CD6  EE20 F001          	lfsr	2,1
 12448  004CDA  501E               	movf	fullSpeedAhead@mR^0,w,c
 12449  004CDC  26D9               	addwf	fsr2l,f,c
 12450  004CDE  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12451  004CE0  22DA               	addwfc	fsr2h,f,c
 12452  004CE2  0E01               	movlw	1
 12453  004CE4  6EDF               	movwf	indf2,c
 12454                           
 12455                           ;dc_motor.c: 146:     while (mL->power<20 && mR->power<20){
 12456  004CE6  EF94  F026         	goto	l4394
 12457  004CEA                     l4386:
 12458                           
 12459                           ;dc_motor.c: 147:         mL->power += 10;
 12460  004CEA  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12461  004CEE  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12462  004CF2  0E0A               	movlw	10
 12463  004CF4  26DF               	addwf	indf2,f,c
 12464                           
 12465                           ;dc_motor.c: 148:         mR->power += 10;
 12466  004CF6  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12467  004CFA  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12468  004CFE  0E0A               	movlw	10
 12469  004D00  26DF               	addwf	indf2,f,c
 12470  004D02                     
 12471                           ;dc_motor.c: 149:         setMotorPWM(mL);
 12472  004D02  C01C  F011         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12473  004D06  C01D  F012         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12474  004D0A  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12475  004D0E                     
 12476                           ;dc_motor.c: 150:         setMotorPWM(mR);
 12477  004D0E  C01E  F011         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12478  004D12  C01F  F012         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12479  004D16  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12480  004D1A                     
 12481                           ;dc_motor.c: 151:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12482  004D1A  0ED0               	movlw	208
 12483  004D1C  6E20               	movwf	??_fullSpeedAhead^0,c
 12484  004D1E  0ECA               	movlw	202
 12485  004D20                     u6947:
 12486  004D20  2EE8               	decfsz	wreg,f,c
 12487  004D22  D7FE               	bra	u6947
 12488  004D24  2E20               	decfsz	??_fullSpeedAhead^0,f,c
 12489  004D26  D7FC               	bra	u6947
 12490  004D28                     l4394:
 12491                           
 12492                           ;dc_motor.c: 146:     while (mL->power<20 && mR->power<20){
 12493  004D28  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12494  004D2C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12495  004D30  0E14               	movlw	20
 12496  004D32  60DF               	cpfslt	indf2,c
 12497  004D34  EF9E  F026         	goto	u4291
 12498  004D38  EFA0  F026         	goto	u4290
 12499  004D3C                     u4291:
 12500  004D3C  EFAC  F026         	goto	l358
 12501  004D40                     u4290:
 12502  004D40  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12503  004D44  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12504  004D48  0E13               	movlw	19
 12505  004D4A  64DF               	cpfsgt	indf2,c
 12506  004D4C  EFAA  F026         	goto	u4301
 12507  004D50  EFAC  F026         	goto	u4300
 12508  004D54                     u4301:
 12509  004D54  EF75  F026         	goto	l4386
 12510  004D58                     u4300:
 12511  004D58                     l358:
 12512  004D58  0012               	return		;funcret
 12513  004D5A                     __end_of_fullSpeedAhead:
 12514                           	callstack 0
 12515                           
 12516 ;; *************** function _setMotorPWM *****************
 12517 ;; Defined at:
 12518 ;;		line 60 in file "dc_motor.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  m               2   16[COMRAM] PTR struct DC_motor
 12521 ;;		 -> main@motorR(10), main@motorL(10), 
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;  PWMduty         2   25[COMRAM] int 
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      void 
 12526 ;; Registers used:
 12527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12535 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12536 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;Total ram usage:       11 bytes
 12538 ;; Hardware stack levels used: 1
 12539 ;; Hardware stack levels required when called: 3
 12540 ;; This function calls:
 12541 ;;		___awdiv
 12542 ;;		___wmul
 12543 ;; This function is called by:
 12544 ;;		_stop
 12545 ;;		_turnLeft
 12546 ;;		_turnRight
 12547 ;;		_fullSpeedAhead
 12548 ;;		_fullSpeedBack
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text67
 12553  003570                     __ptext67:
 12554                           	callstack 0
 12555  003570                     _setMotorPWM:
 12556                           	callstack 26
 12557  003570                     
 12558                           ;dc_motor.c: 60: void setMotorPWM(struct DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62: 
      +                           int PWMduty;;dc_motor.c: 64:  if (m->direction){
 12559  003570  EE20 F001          	lfsr	2,1
 12560  003574  5011               	movf	setMotorPWM@m^0,w,c
 12561  003576  26D9               	addwf	fsr2l,f,c
 12562  003578  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12563  00357A  22DA               	addwfc	fsr2h,f,c
 12564  00357C  50DF               	movf	indf2,w,c
 12565  00357E  B4D8               	btfsc	status,2,c
 12566  003580  EFC4  F01A         	goto	u3051
 12567  003584  EFC6  F01A         	goto	u3050
 12568  003588                     u3051:
 12569  003588  EFF7  F01A         	goto	l3606
 12570  00358C                     u3050:
 12571  00358C                     
 12572                           ;dc_motor.c: 66:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 12573  00358C  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 12574  003590  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12575  003594  50DF               	movf	indf2,w,c
 12576  003596  6E13               	movwf	??_setMotorPWM^0,c
 12577  003598  5013               	movf	??_setMotorPWM^0,w,c
 12578  00359A  6E03               	movwf	___wmul@multiplier^0,c
 12579  00359C  6A04               	clrf	(___wmul@multiplier+1)^0,c
 12580  00359E  EE20 F007          	lfsr	2,7
 12581  0035A2  5011               	movf	setMotorPWM@m^0,w,c
 12582  0035A4  26D9               	addwf	fsr2l,f,c
 12583  0035A6  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12584  0035A8  22DA               	addwfc	fsr2h,f,c
 12585  0035AA  CFDE F005          	movff	postinc2,___wmul@multiplicand
 12586  0035AE  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 12587  0035B2  EC29  F02A         	call	___wmul	;wreg free
 12588  0035B6  C003  F009         	movff	?___wmul,___awdiv@dividend
 12589  0035BA  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 12590  0035BE  0E00               	movlw	0
 12591  0035C0  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 12592  0035C2  0E64               	movlw	100
 12593  0035C4  6E0B               	movwf	___awdiv@divisor^0,c
 12594  0035C6  ECED  F024         	call	___awdiv	;wreg free
 12595  0035CA  EE20 F007          	lfsr	2,7
 12596  0035CE  5011               	movf	setMotorPWM@m^0,w,c
 12597  0035D0  26D9               	addwf	fsr2l,f,c
 12598  0035D2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12599  0035D4  22DA               	addwfc	fsr2h,f,c
 12600  0035D6  CFDE F014          	movff	postinc2,??_setMotorPWM+1
 12601  0035DA  CFDD F015          	movff	postdec2,??_setMotorPWM+2
 12602  0035DE  5009               	movf	?___awdiv^0,w,c
 12603  0035E0  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
 12604  0035E2  6E1A               	movwf	setMotorPWM@PWMduty^0,c
 12605  0035E4  500A               	movf	(?___awdiv+1)^0,w,c
 12606  0035E6  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
 12607  0035E8  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
 12608                           
 12609                           ;dc_motor.c: 67:  }
 12610  0035EA  EF1A  F01B         	goto	l3608
 12611  0035EE                     l3606:
 12612                           
 12613                           ;dc_motor.c: 70:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 12614  0035EE  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 12615  0035F2  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12616  0035F6  50DF               	movf	indf2,w,c
 12617  0035F8  6E13               	movwf	??_setMotorPWM^0,c
 12618  0035FA  5013               	movf	??_setMotorPWM^0,w,c
 12619  0035FC  6E03               	movwf	___wmul@multiplier^0,c
 12620  0035FE  6A04               	clrf	(___wmul@multiplier+1)^0,c
 12621  003600  EE20 F007          	lfsr	2,7
 12622  003604  5011               	movf	setMotorPWM@m^0,w,c
 12623  003606  26D9               	addwf	fsr2l,f,c
 12624  003608  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12625  00360A  22DA               	addwfc	fsr2h,f,c
 12626  00360C  CFDE F005          	movff	postinc2,___wmul@multiplicand
 12627  003610  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 12628  003614  EC29  F02A         	call	___wmul	;wreg free
 12629  003618  C003  F009         	movff	?___wmul,___awdiv@dividend
 12630  00361C  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 12631  003620  0E00               	movlw	0
 12632  003622  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 12633  003624  0E64               	movlw	100
 12634  003626  6E0B               	movwf	___awdiv@divisor^0,c
 12635  003628  ECED  F024         	call	___awdiv	;wreg free
 12636  00362C  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
 12637  003630  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 12638  003634                     l3608:
 12639                           
 12640                           ;dc_motor.c: 73:  *(m->dutyHighByte) = PWMduty;
 12641  003634  EE20 F002          	lfsr	2,2
 12642  003638  5011               	movf	setMotorPWM@m^0,w,c
 12643  00363A  26D9               	addwf	fsr2l,f,c
 12644  00363C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12645  00363E  22DA               	addwfc	fsr2h,f,c
 12646  003640  CFDE F013          	movff	postinc2,??_setMotorPWM
 12647  003644  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 12648  003648  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 12649  00364C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12650  003650  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
 12651  003654                     
 12652                           ;dc_motor.c: 75:  if (m->direction){
 12653  003654  EE20 F001          	lfsr	2,1
 12654  003658  5011               	movf	setMotorPWM@m^0,w,c
 12655  00365A  26D9               	addwf	fsr2l,f,c
 12656  00365C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12657  00365E  22DA               	addwfc	fsr2h,f,c
 12658  003660  50DF               	movf	indf2,w,c
 12659  003662  B4D8               	btfsc	status,2,c
 12660  003664  EF36  F01B         	goto	u3061
 12661  003668  EF38  F01B         	goto	u3060
 12662  00366C                     u3061:
 12663  00366C  EF6D  F01B         	goto	l3614
 12664  003670                     u3060:
 12665  003670                     
 12666                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 12667  003670  EE20 F004          	lfsr	2,4
 12668  003674  5011               	movf	setMotorPWM@m^0,w,c
 12669  003676  26D9               	addwf	fsr2l,f,c
 12670  003678  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12671  00367A  22DA               	addwfc	fsr2h,f,c
 12672  00367C  CFDE F013          	movff	postinc2,??_setMotorPWM
 12673  003680  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 12674  003684  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 12675  003688  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12676  00368C  EE10 F004          	lfsr	1,4
 12677  003690  5011               	movf	setMotorPWM@m^0,w,c
 12678  003692  26E1               	addwf	fsr1l,f,c
 12679  003694  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12680  003696  22E2               	addwfc	fsr1h,f,c
 12681  003698  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 12682  00369C  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 12683  0036A0  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 12684  0036A4  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 12685  0036A8  50E7               	movf	indf1,w,c
 12686  0036AA  6E17               	movwf	(??_setMotorPWM+4)^0,c
 12687  0036AC  EE10 F006          	lfsr	1,6
 12688  0036B0  5011               	movf	setMotorPWM@m^0,w,c
 12689  0036B2  26E1               	addwf	fsr1l,f,c
 12690  0036B4  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12691  0036B6  22E2               	addwfc	fsr1h,f,c
 12692  0036B8  50E7               	movf	indf1,w,c
 12693  0036BA  6E18               	movwf	(??_setMotorPWM+5)^0,c
 12694  0036BC  0E01               	movlw	1
 12695  0036BE  6E19               	movwf	(??_setMotorPWM+6)^0,c
 12696  0036C0  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 12697  0036C2  EF65  F01B         	goto	u3074
 12698  0036C6                     u3075:
 12699  0036C6  90D8               	bcf	status,0,c
 12700  0036C8  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 12701  0036CA                     u3074:
 12702  0036CA  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 12703  0036CC  EF63  F01B         	goto	u3075
 12704  0036D0  5019               	movf	(??_setMotorPWM+6)^0,w,c
 12705  0036D2  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
 12706  0036D4  6EDF               	movwf	indf2,c
 12707                           
 12708                           ;dc_motor.c: 77:  } else {
 12709  0036D6  EFA1  F01B         	goto	l314
 12710  0036DA                     l3614:
 12711                           
 12712                           ;dc_motor.c: 78:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 12713  0036DA  EE20 F004          	lfsr	2,4
 12714  0036DE  5011               	movf	setMotorPWM@m^0,w,c
 12715  0036E0  26D9               	addwf	fsr2l,f,c
 12716  0036E2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12717  0036E4  22DA               	addwfc	fsr2h,f,c
 12718  0036E6  CFDE F013          	movff	postinc2,??_setMotorPWM
 12719  0036EA  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 12720  0036EE  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 12721  0036F2  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12722  0036F6  EE10 F004          	lfsr	1,4
 12723  0036FA  5011               	movf	setMotorPWM@m^0,w,c
 12724  0036FC  26E1               	addwf	fsr1l,f,c
 12725  0036FE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12726  003700  22E2               	addwfc	fsr1h,f,c
 12727  003702  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 12728  003706  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 12729  00370A  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 12730  00370E  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 12731  003712  50E7               	movf	indf1,w,c
 12732  003714  6E17               	movwf	(??_setMotorPWM+4)^0,c
 12733  003716  EE10 F006          	lfsr	1,6
 12734  00371A  5011               	movf	setMotorPWM@m^0,w,c
 12735  00371C  26E1               	addwf	fsr1l,f,c
 12736  00371E  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12737  003720  22E2               	addwfc	fsr1h,f,c
 12738  003722  50E7               	movf	indf1,w,c
 12739  003724  6E18               	movwf	(??_setMotorPWM+5)^0,c
 12740  003726  0E01               	movlw	1
 12741  003728  6E19               	movwf	(??_setMotorPWM+6)^0,c
 12742  00372A  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 12743  00372C  EF9A  F01B         	goto	u3084
 12744  003730                     u3085:
 12745  003730  90D8               	bcf	status,0,c
 12746  003732  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 12747  003734                     u3084:
 12748  003734  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 12749  003736  EF98  F01B         	goto	u3085
 12750  00373A  5019               	movf	(??_setMotorPWM+6)^0,w,c
 12751  00373C  0AFF               	xorlw	255
 12752  00373E  1417               	andwf	(??_setMotorPWM+4)^0,w,c
 12753  003740  6EDF               	movwf	indf2,c
 12754  003742                     l314:
 12755  003742  0012               	return		;funcret
 12756  003744                     __end_of_setMotorPWM:
 12757                           	callstack 0
 12758                           
 12759 ;; *************** function ___wmul *****************
 12760 ;; Defined at:
 12761 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;  multiplier      2    2[COMRAM] unsigned int 
 12764 ;;  multiplicand    2    4[COMRAM] unsigned int 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  product         2    6[COMRAM] unsigned int 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  2    2[COMRAM] unsigned int 
 12769 ;; Registers used:
 12770 ;;		wreg, status,2, status,0, prodl, prodh
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12780 ;;Total ram usage:        6 bytes
 12781 ;; Hardware stack levels used: 1
 12782 ;; Hardware stack levels required when called: 2
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_setMotorPWM
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text68
 12791  005452                     __ptext68:
 12792                           	callstack 0
 12793  005452                     ___wmul:
 12794                           	callstack 26
 12795  005452  5003               	movf	___wmul@multiplier^0,w,c
 12796  005454  0205               	mulwf	___wmul@multiplicand^0,c
 12797  005456  CFF3 F007          	movff	prodl,___wmul@product
 12798  00545A  CFF4 F008          	movff	prodh,___wmul@product+1
 12799  00545E  5003               	movf	___wmul@multiplier^0,w,c
 12800  005460  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 12801  005462  50F3               	movf	243,w,c
 12802  005464  2608               	addwf	(___wmul@product+1)^0,f,c
 12803  005466  5004               	movf	(___wmul@multiplier+1)^0,w,c
 12804  005468  0205               	mulwf	___wmul@multiplicand^0,c
 12805  00546A  50F3               	movf	243,w,c
 12806  00546C  2608               	addwf	(___wmul@product+1)^0,f,c
 12807  00546E  C007  F003         	movff	___wmul@product,?___wmul
 12808  005472  C008  F004         	movff	___wmul@product+1,?___wmul+1
 12809  005476  0012               	return		;funcret
 12810  005478                     __end_of___wmul:
 12811                           	callstack 0
 12812                           
 12813 ;; *************** function ___awdiv *****************
 12814 ;; Defined at:
 12815 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;  dividend        2    8[COMRAM] int 
 12818 ;;  divisor         2   10[COMRAM] int 
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;  quotient        2   14[COMRAM] int 
 12821 ;;  sign            1   13[COMRAM] unsigned char 
 12822 ;;  counter         1   12[COMRAM] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  2    8[COMRAM] int 
 12825 ;; Registers used:
 12826 ;;		wreg, status,2, status,0
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12835 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12836 ;;Total ram usage:        8 bytes
 12837 ;; Hardware stack levels used: 1
 12838 ;; Hardware stack levels required when called: 2
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_setMotorPWM
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           	psect	text69
 12847  0049DA                     __ptext69:
 12848                           	callstack 0
 12849  0049DA                     ___awdiv:
 12850                           	callstack 26
 12851  0049DA  0E00               	movlw	0
 12852  0049DC  6E0E               	movwf	___awdiv@sign^0,c
 12853  0049DE  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 12854  0049E0  EFF6  F024         	goto	u2920
 12855  0049E4  EFF4  F024         	goto	u2921
 12856  0049E8                     u2921:
 12857  0049E8  EFFC  F024         	goto	l3536
 12858  0049EC                     u2920:
 12859  0049EC  6C0B               	negf	___awdiv@divisor^0,c
 12860  0049EE  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 12861  0049F0  B0D8               	btfsc	status,0,c
 12862  0049F2  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 12863  0049F4  0E01               	movlw	1
 12864  0049F6  6E0E               	movwf	___awdiv@sign^0,c
 12865  0049F8                     l3536:
 12866  0049F8  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 12867  0049FA  EF03  F025         	goto	u2930
 12868  0049FE  EF01  F025         	goto	u2931
 12869  004A02                     u2931:
 12870  004A02  EF09  F025         	goto	l3542
 12871  004A06                     u2930:
 12872  004A06  6C09               	negf	___awdiv@dividend^0,c
 12873  004A08  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 12874  004A0A  B0D8               	btfsc	status,0,c
 12875  004A0C  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 12876  004A0E  0E01               	movlw	1
 12877  004A10  1A0E               	xorwf	___awdiv@sign^0,f,c
 12878  004A12                     l3542:
 12879  004A12  0E00               	movlw	0
 12880  004A14  6E10               	movwf	(___awdiv@quotient+1)^0,c
 12881  004A16  0E00               	movlw	0
 12882  004A18  6E0F               	movwf	___awdiv@quotient^0,c
 12883  004A1A  500B               	movf	___awdiv@divisor^0,w,c
 12884  004A1C  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 12885  004A1E  B4D8               	btfsc	status,2,c
 12886  004A20  EF14  F025         	goto	u2941
 12887  004A24  EF16  F025         	goto	u2940
 12888  004A28                     u2941:
 12889  004A28  EF3E  F025         	goto	l3564
 12890  004A2C                     u2940:
 12891  004A2C  0E01               	movlw	1
 12892  004A2E  6E0D               	movwf	___awdiv@counter^0,c
 12893  004A30  EF1E  F025         	goto	l3550
 12894  004A34                     l3548:
 12895  004A34  90D8               	bcf	status,0,c
 12896  004A36  360B               	rlcf	___awdiv@divisor^0,f,c
 12897  004A38  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 12898  004A3A  2A0D               	incf	___awdiv@counter^0,f,c
 12899  004A3C                     l3550:
 12900  004A3C  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 12901  004A3E  EF23  F025         	goto	u2951
 12902  004A42  EF25  F025         	goto	u2950
 12903  004A46                     u2951:
 12904  004A46  EF1A  F025         	goto	l3548
 12905  004A4A                     u2950:
 12906  004A4A                     l3552:
 12907  004A4A  90D8               	bcf	status,0,c
 12908  004A4C  360F               	rlcf	___awdiv@quotient^0,f,c
 12909  004A4E  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 12910  004A50  500B               	movf	___awdiv@divisor^0,w,c
 12911  004A52  5C09               	subwf	___awdiv@dividend^0,w,c
 12912  004A54  500C               	movf	(___awdiv@divisor+1)^0,w,c
 12913  004A56  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 12914  004A58  A0D8               	btfss	status,0,c
 12915  004A5A  EF31  F025         	goto	u2961
 12916  004A5E  EF33  F025         	goto	u2960
 12917  004A62                     u2961:
 12918  004A62  EF38  F025         	goto	l3560
 12919  004A66                     u2960:
 12920  004A66  500B               	movf	___awdiv@divisor^0,w,c
 12921  004A68  5E09               	subwf	___awdiv@dividend^0,f,c
 12922  004A6A  500C               	movf	(___awdiv@divisor+1)^0,w,c
 12923  004A6C  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 12924  004A6E  800F               	bsf	___awdiv@quotient^0,0,c
 12925  004A70                     l3560:
 12926  004A70  90D8               	bcf	status,0,c
 12927  004A72  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 12928  004A74  320B               	rrcf	___awdiv@divisor^0,f,c
 12929  004A76  2E0D               	decfsz	___awdiv@counter^0,f,c
 12930  004A78  EF25  F025         	goto	l3552
 12931  004A7C                     l3564:
 12932  004A7C  500E               	movf	___awdiv@sign^0,w,c
 12933  004A7E  B4D8               	btfsc	status,2,c
 12934  004A80  EF44  F025         	goto	u2971
 12935  004A84  EF46  F025         	goto	u2970
 12936  004A88                     u2971:
 12937  004A88  EF4A  F025         	goto	l3568
 12938  004A8C                     u2970:
 12939  004A8C  6C0F               	negf	___awdiv@quotient^0,c
 12940  004A8E  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 12941  004A90  B0D8               	btfsc	status,0,c
 12942  004A92  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 12943  004A94                     l3568:
 12944  004A94  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 12945  004A98  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 12946  004A9C  0012               	return		;funcret
 12947  004A9E                     __end_of___awdiv:
 12948                           	callstack 0
 12949                           
 12950 ;; *************** function _Timer0_init *****************
 12951 ;; Defined at:
 12952 ;;		line 7 in file "timers.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;		None
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  1    wreg      void 
 12959 ;; Registers used:
 12960 ;;		wreg, status,2
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12970 ;;Total ram usage:        0 bytes
 12971 ;; Hardware stack levels used: 1
 12972 ;; Hardware stack levels required when called: 2
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_main
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text70
 12981  005556                     __ptext70:
 12982                           	callstack 0
 12983  005556                     _Timer0_init:
 12984                           	callstack 28
 12985  005556                     
 12986                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 12987  005556  50D6               	movf	214,w,c	;volatile
 12988  005558  0B1F               	andlw	-225
 12989  00555A  0940               	iorlw	64
 12990  00555C  6ED6               	movwf	214,c	;volatile
 12991  00555E                     
 12992                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 12993  00555E  88D6               	bsf	214,4,c	;volatile
 12994                           
 12995                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 12996  005560  50D6               	movf	214,w,c	;volatile
 12997  005562  0BF0               	andlw	-16
 12998  005564  0908               	iorlw	8
 12999  005566  6ED6               	movwf	214,c	;volatile
 13000  005568                     
 13001                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13002  005568  88D5               	bsf	213,4,c	;volatile
 13003                           
 13004                           ;timers.c: 16:     TMR0H=0b00001011;
 13005  00556A  0E0B               	movlw	11
 13006  00556C  6ED4               	movwf	212,c	;volatile
 13007                           
 13008                           ;timers.c: 17:     TMR0L=0b11011011;
 13009  00556E  0EDB               	movlw	219
 13010  005570  6ED3               	movwf	211,c	;volatile
 13011  005572  0012               	return		;funcret
 13012  005574                     __end_of_Timer0_init:
 13013                           	callstack 0
 13014                           
 13015 ;; *************** function _LED_OFF *****************
 13016 ;; Defined at:
 13017 ;;		line 153 in file "color.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		wreg
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13035 ;;Total ram usage:        2 bytes
 13036 ;; Hardware stack levels used: 1
 13037 ;; Hardware stack levels required when called: 2
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		_main
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           	psect	text71
 13046  005518                     __ptext71:
 13047                           	callstack 0
 13048  005518                     _LED_OFF:
 13049                           	callstack 28
 13050  005518                     
 13051                           ;color.c: 155:     LATGbits.LATG1 = 0;
 13052  005518  927F               	bcf	127,1,c	;volatile
 13053                           
 13054                           ;color.c: 156:     LATFbits.LATF7 = 0;
 13055  00551A  9E7E               	bcf	126,7,c	;volatile
 13056                           
 13057                           ;color.c: 157:     LATAbits.LATA4 = 0;
 13058  00551C  9879               	bcf	121,4,c	;volatile
 13059  00551E                     
 13060                           ;color.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13061  00551E  0E11               	movlw	17
 13062  005520  6E04               	movwf	(??_LED_OFF+1)^0,c
 13063  005522  0E3C               	movlw	60
 13064  005524  6E03               	movwf	??_LED_OFF^0,c
 13065  005526  0ECB               	movlw	203
 13066  005528                     u6957:
 13067  005528  2EE8               	decfsz	wreg,f,c
 13068  00552A  D7FE               	bra	u6957
 13069  00552C  2E03               	decfsz	??_LED_OFF^0,f,c
 13070  00552E  D7FC               	bra	u6957
 13071  005530  2E04               	decfsz	(??_LED_OFF+1)^0,f,c
 13072  005532  D7FA               	bra	u6957
 13073  005534  F000               	nop	
 13074  005536  0012               	return		;funcret
 13075  005538                     __end_of_LED_OFF:
 13076                           	callstack 0
 13077                           
 13078 ;; *************** function _Interrupts_init *****************
 13079 ;; Defined at:
 13080 ;;		line 9 in file "interrupts.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;		None
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;		None
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      void 
 13087 ;; Registers used:
 13088 ;;		None
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13098 ;;Total ram usage:        0 bytes
 13099 ;; Hardware stack levels used: 1
 13100 ;; Hardware stack levels required when called: 2
 13101 ;; This function calls:
 13102 ;;		Nothing
 13103 ;; This function is called by:
 13104 ;;		_main
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           	psect	text72
 13109  0055CA                     __ptext72:
 13110                           	callstack 0
 13111  0055CA                     _Interrupts_init:
 13112                           	callstack 28
 13113  0055CA  8EF2               	bsf	242,7,c	;volatile
 13114                           
 13115                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13116  0055CC  8AF2               	bsf	242,5,c	;volatile
 13117                           
 13118                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13119  0055CE  8CF2               	bsf	242,6,c	;volatile
 13120                           
 13121                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13122  0055D0  010E               	movlb	14	; () banked
 13123  0055D2  8B29               	bsf	41,5,b	;volatile
 13124  0055D4                     
 13125                           ; BSR set to: 14
 13126  0055D4  0012               	return		;funcret
 13127  0055D6                     __end_of_Interrupts_init:
 13128                           	callstack 0
 13129                           
 13130 ;; *************** function _LowISR *****************
 13131 ;; Defined at:
 13132 ;;		line 25 in file "interrupts.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;		None
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;		None
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  1    wreg      void 
 13139 ;; Registers used:
 13140 ;;		status,2, status,0
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13150 ;;Total ram usage:        2 bytes
 13151 ;; Hardware stack levels used: 1
 13152 ;; Hardware stack levels required when called: 1
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		Interrupt level 1
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	intcodelo
 13161  000018                     __pintcodelo:
 13162                           	callstack 0
 13163  000018                     _LowISR:
 13164                           	callstack 19
 13165                           
 13166                           ; BSR set to: 14
 13167                           ;incstack = 0
 13168  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13169  00001A  CFD8 F001          	movff	status,??_LowISR
 13170  00001E  CFE0 F002          	movff	bsr,??_LowISR+1
 13171  000022                     
 13172                           ;interrupts.c: 27:     if(PIR0bits.TMR0IF){
 13173  000022  010E               	movlb	14	; () banked
 13174  000024  AB33               	btfss	51,5,b	;volatile
 13175  000026  EF17  F000         	goto	i1u543_21
 13176  00002A  EF19  F000         	goto	i1u543_20
 13177  00002E                     i1u543_21:
 13178  00002E  EF1E  F000         	goto	i1l688
 13179  000032                     i1u543_20:
 13180  000032                     
 13181                           ; BSR set to: 14
 13182                           ;interrupts.c: 28:         second ++;
 13183  000032  0100               	movlb	0	; () banked
 13184  000034  4BF9               	infsnz	_second& (0+255),f,b
 13185  000036  2BFA               	incf	(_second+1)& (0+255),f,b
 13186  000038                     
 13187                           ; BSR set to: 0
 13188                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
 13189  000038  010E               	movlb	14	; () banked
 13190  00003A  9B33               	bcf	51,5,b	;volatile
 13191  00003C                     i1l688:
 13192                           
 13193                           ; BSR set to: 14
 13194  00003C  C002  FFE0         	movff	??_LowISR+1,bsr
 13195  000040  C001  FFD8         	movff	??_LowISR,status
 13196  000044  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13197  000046  0010               	retfie	
 13198  000048                     __end_of_LowISR:
 13199                           	callstack 0
 13200                           
 13201 ;; *************** function _HighISR *****************
 13202 ;; Defined at:
 13203 ;;		line 21 in file "interrupts.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;		None
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		None
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13221 ;;Total ram usage:        0 bytes
 13222 ;; Hardware stack levels used: 1
 13223 ;; This function calls:
 13224 ;;		Nothing
 13225 ;; This function is called by:
 13226 ;;		Interrupt level 2
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	intcode
 13231  000008                     __pintcode:
 13232                           	callstack 0
 13233  000008                     _HighISR:
 13234                           	callstack 19
 13235                           
 13236                           ; BSR set to: 14
 13237                           ;incstack = 0
 13238  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13239  00000A  EFFA  F02A         	goto	int_func
 13240                           
 13241                           	psect	intcode_body
 13242  0055F4                     __pintcode_body:
 13243                           	callstack 19
 13244  0055F4                     int_func:
 13245                           	callstack 19
 13246  0055F4  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13247  0055F6  0011               	retfie		f
 13248  0055F8                     __end_of_HighISR:
 13249                           	callstack 0
 13250                           
 13251                           	psect	rparam
 13252  0000                     
 13253                           	psect	temp
 13254  00005C                     btemp:
 13255                           	callstack 0
 13256  00005C                     	ds	1
 13257  0000                     int$flags	set	btemp
 13258  0000                     wtemp8	set	btemp+1
 13259  0000                     ttemp5	set	btemp+1
 13260  0000                     ttemp6	set	btemp+4
 13261  0000                     ttemp7	set	btemp+8
 13262                           
 13263                           	psect	idloc
 13264                           
 13265                           ;Config register IDLOC0 @ 0x200000
 13266                           ;	unspecified, using default values
 13267  200000                     	org	2097152
 13268  200000  0FFF               	dw	4095
 13269                           
 13270                           ;Config register IDLOC1 @ 0x200002
 13271                           ;	unspecified, using default values
 13272  200002                     	org	2097154
 13273  200002  0FFF               	dw	4095
 13274                           
 13275                           ;Config register IDLOC2 @ 0x200004
 13276                           ;	unspecified, using default values
 13277  200004                     	org	2097156
 13278  200004  0FFF               	dw	4095
 13279                           
 13280                           ;Config register IDLOC3 @ 0x200006
 13281                           ;	unspecified, using default values
 13282  200006                     	org	2097158
 13283  200006  0FFF               	dw	4095
 13284                           
 13285                           ;Config register IDLOC4 @ 0x200008
 13286                           ;	unspecified, using default values
 13287  200008                     	org	2097160
 13288  200008  0FFF               	dw	4095
 13289                           
 13290                           ;Config register IDLOC5 @ 0x20000A
 13291                           ;	unspecified, using default values
 13292  20000A                     	org	2097162
 13293  20000A  0FFF               	dw	4095
 13294                           
 13295                           ;Config register IDLOC6 @ 0x20000C
 13296                           ;	unspecified, using default values
 13297  20000C                     	org	2097164
 13298  20000C  0FFF               	dw	4095
 13299                           
 13300                           ;Config register IDLOC7 @ 0x20000E
 13301                           ;	unspecified, using default values
 13302  20000E                     	org	2097166
 13303  20000E  0FFF               	dw	4095
 13304                           
 13305                           	psect	config
 13306                           
 13307                           ;Config register CONFIG1L @ 0x300000
 13308                           ;	External Oscillator mode Selection bits
 13309                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13310                           ;	Power-up default value for COSC bits
 13311                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13312  300000                     	org	3145728
 13313  300000  AA                 	db	170
 13314                           
 13315                           ;Config register CONFIG1H @ 0x300001
 13316                           ;	unspecified, using default values
 13317                           ;	Clock Out Enable bit
 13318                           ;	CLKOUTEN = 0x1, unprogrammed default
 13319                           ;	Clock Switch Enable bit
 13320                           ;	CSWEN = 0x1, unprogrammed default
 13321                           ;	Fail-Safe Clock Monitor Enable bit
 13322                           ;	FCMEN = 0x1, unprogrammed default
 13323  300001                     	org	3145729
 13324  300001  FF                 	db	255
 13325                           
 13326                           ;Config register CONFIG2L @ 0x300002
 13327                           ;	unspecified, using default values
 13328                           ;	Master Clear Enable bit
 13329                           ;	MCLRE = 0x1, unprogrammed default
 13330                           ;	Power-up Timer Enable bit
 13331                           ;	PWRTE = 0x1, unprogrammed default
 13332                           ;	Low-power BOR enable bit
 13333                           ;	LPBOREN = 0x1, unprogrammed default
 13334                           ;	Brown-out Reset Enable bits
 13335                           ;	BOREN = 0x3, unprogrammed default
 13336  300002                     	org	3145730
 13337  300002  FF                 	db	255
 13338                           
 13339                           ;Config register CONFIG2H @ 0x300003
 13340                           ;	unspecified, using default values
 13341                           ;	Brown Out Reset Voltage selection bits
 13342                           ;	BORV = 0x3, unprogrammed default
 13343                           ;	ZCD Disable bit
 13344                           ;	ZCD = 0x1, unprogrammed default
 13345                           ;	PPSLOCK bit One-Way Set Enable bit
 13346                           ;	PPS1WAY = 0x1, unprogrammed default
 13347                           ;	Stack Full/Underflow Reset Enable bit
 13348                           ;	STVREN = 0x1, unprogrammed default
 13349                           ;	Debugger Enable bit
 13350                           ;	DEBUG = 0x1, unprogrammed default
 13351                           ;	Extended Instruction Set Enable bit
 13352                           ;	XINST = 0x1, unprogrammed default
 13353  300003                     	org	3145731
 13354  300003  FF                 	db	255
 13355                           
 13356                           ;Config register CONFIG3L @ 0x300004
 13357                           ;	WDT Period Select bits
 13358                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13359                           ;	WDT operating mode
 13360                           ;	WDTE = OFF, WDT Disabled
 13361  300004                     	org	3145732
 13362  300004  9F                 	db	159
 13363                           
 13364                           ;Config register CONFIG3H @ 0x300005
 13365                           ;	unspecified, using default values
 13366                           ;	WDT Window Select bits
 13367                           ;	WDTCWS = 0x7, unprogrammed default
 13368                           ;	WDT input clock selector
 13369                           ;	WDTCCS = 0x7, unprogrammed default
 13370  300005                     	org	3145733
 13371  300005  FF                 	db	255
 13372                           
 13373                           ;Config register CONFIG4L @ 0x300006
 13374                           ;	unspecified, using default values
 13375                           ;	Write Protection Block 0
 13376                           ;	WRT0 = 0x1, unprogrammed default
 13377                           ;	Write Protection Block 1
 13378                           ;	WRT1 = 0x1, unprogrammed default
 13379                           ;	Write Protection Block 2
 13380                           ;	WRT2 = 0x1, unprogrammed default
 13381                           ;	Write Protection Block 3
 13382                           ;	WRT3 = 0x1, unprogrammed default
 13383                           ;	Write Protection Block 3
 13384                           ;	WRT4 = 0x1, unprogrammed default
 13385                           ;	Write Protection Block 3
 13386                           ;	WRT5 = 0x1, unprogrammed default
 13387                           ;	Write Protection Block 3
 13388                           ;	WRT6 = 0x1, unprogrammed default
 13389                           ;	Write Protection Block 3
 13390                           ;	WRT7 = 0x1, unprogrammed default
 13391  300006                     	org	3145734
 13392  300006  FF                 	db	255
 13393                           
 13394                           ;Config register CONFIG4H @ 0x300007
 13395                           ;	unspecified, using default values
 13396                           ;	Configuration Register Write Protection bit
 13397                           ;	WRTC = 0x1, unprogrammed default
 13398                           ;	Boot Block Write Protection bit
 13399                           ;	WRTB = 0x1, unprogrammed default
 13400                           ;	Data EEPROM Write Protection bit
 13401                           ;	WRTD = 0x1, unprogrammed default
 13402                           ;	Scanner Enable bit
 13403                           ;	SCANE = 0x1, unprogrammed default
 13404                           ;	Low Voltage Programming Enable bit
 13405                           ;	LVP = 0x1, unprogrammed default
 13406  300007                     	org	3145735
 13407  300007  FF                 	db	255
 13408                           
 13409                           ;Config register CONFIG5L @ 0x300008
 13410                           ;	unspecified, using default values
 13411                           ;	UserNVM Program Memory Code Protection bit
 13412                           ;	CP = 0x1, unprogrammed default
 13413                           ;	DataNVM Memory Code Protection bit
 13414                           ;	CPD = 0x1, unprogrammed default
 13415  300008                     	org	3145736
 13416  300008  FF                 	db	255
 13417                           
 13418                           ;Config register CONFIG5H @ 0x300009
 13419                           ;	unspecified, using default values
 13420  300009                     	org	3145737
 13421  300009  FF                 	db	255
 13422                           
 13423                           ;Config register CONFIG6L @ 0x30000A
 13424                           ;	unspecified, using default values
 13425                           ;	Table Read Protection Block 0
 13426                           ;	EBTR0 = 0x1, unprogrammed default
 13427                           ;	Table Read Protection Block 1
 13428                           ;	EBTR1 = 0x1, unprogrammed default
 13429                           ;	Table Read Protection Block 2
 13430                           ;	EBTR2 = 0x1, unprogrammed default
 13431                           ;	Table Read Protection Block 3
 13432                           ;	EBTR3 = 0x1, unprogrammed default
 13433                           ;	Table Read Protection Block 4
 13434                           ;	EBTR4 = 0x1, unprogrammed default
 13435                           ;	Table Read Protection Block 5
 13436                           ;	EBTR5 = 0x1, unprogrammed default
 13437                           ;	Table Read Protection Block 6
 13438                           ;	EBTR6 = 0x1, unprogrammed default
 13439                           ;	Table Read Protection Block 7
 13440                           ;	EBTR7 = 0x1, unprogrammed default
 13441  30000A                     	org	3145738
 13442  30000A  FF                 	db	255
 13443                           
 13444                           ;Config register CONFIG6H @ 0x30000B
 13445                           ;	unspecified, using default values
 13446                           ;	Boot Block Table Read Protection bit
 13447                           ;	EBTRB = 0x1, unprogrammed default
 13448  30000B                     	org	3145739
 13449  30000B  FF                 	db	255
 13450                           tosu	equ	0xFFF
 13451                           tosh	equ	0xFFE
 13452                           tosl	equ	0xFFD
 13453                           stkptr	equ	0xFFC
 13454                           pclatu	equ	0xFFB
 13455                           pclath	equ	0xFFA
 13456                           pcl	equ	0xFF9
 13457                           tblptru	equ	0xFF8
 13458                           tblptrh	equ	0xFF7
 13459                           tblptrl	equ	0xFF6
 13460                           tablat	equ	0xFF5
 13461                           prodh	equ	0xFF4
 13462                           prodl	equ	0xFF3
 13463                           indf0	equ	0xFEF
 13464                           postinc0	equ	0xFEE
 13465                           postdec0	equ	0xFED
 13466                           preinc0	equ	0xFEC
 13467                           plusw0	equ	0xFEB
 13468                           fsr0h	equ	0xFEA
 13469                           fsr0l	equ	0xFE9
 13470                           wreg	equ	0xFE8
 13471                           indf1	equ	0xFE7
 13472                           postinc1	equ	0xFE6
 13473                           postdec1	equ	0xFE5
 13474                           preinc1	equ	0xFE4
 13475                           plusw1	equ	0xFE3
 13476                           fsr1h	equ	0xFE2
 13477                           fsr1l	equ	0xFE1
 13478                           bsr	equ	0xFE0
 13479                           indf2	equ	0xFDF
 13480                           postinc2	equ	0xFDE
 13481                           postdec2	equ	0xFDD
 13482                           preinc2	equ	0xFDC
 13483                           plusw2	equ	0xFDB
 13484                           fsr2h	equ	0xFDA
 13485                           fsr2l	equ	0xFD9
 13486                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    141     160
    BANK1           256     55     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2615$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2615$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    distance_measure@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verify_color->_detect_color
    _detect_color->_compare
    _short_burst->_stop
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _verify_color->_detect_color
    _detect_color->_compare
    _compare->_lroundf
    _distance_measure->_lroundf
    _lroundf->___fltol
    ___fltol->_roundf
    _color_data_collection->_color_display
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0  214189
                                            139 BANK0      2     2      0
                                              0 BANK1     55    55      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                              _LED_C
                            _LED_OFF
                        _Timer0_init
                             _action
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_display
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _read_color
                        _short_burst
                               _stop
                       _toggle_light
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   33411
                                             85 COMRAM     2     2      0
                                             61 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   32960
                                             81 COMRAM     4     4      0
                                             32 BANK0     29    25      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    3131
                                             80 COMRAM     1     1      0
                                             26 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _toggle_light                                         5     4      1     309
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6790
                                             33 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    19    13      6   26903
                                             80 COMRAM     2     2      0
                                             26 BANK0     17    11      6
                              _LED_C
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   17295
                                             22 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   15577
                                             66 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             18 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4522
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4373
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             74 COMRAM     6     6      0
                                             18 BANK0      4     0      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1807
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2781
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16772
                                            127 BANK0     12    10      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1224
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7799
                                             25 BANK0    102   100      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     814
                                             13 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4   78610
                                             55 COMRAM     7     3      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11021
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   35007
                                             47 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     9      5    8176
                                             33 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     9      5    8860
                                             33 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10717
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6290
                                             33 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3731
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2819
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_OFF                                              2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_C
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _color_display
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _distance_measure
     _LED_C
     ___fldiv
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _read_color
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _toggle_light
   _verify_color
     _detect_color

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     37      E8       7       90.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E3      57        0.0%
DATA                 0      0     1E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Mar 11 17:08:58 2022

                ?_short_reverse 0028                  _color_read_Red 4F34                    ___fldiv@aexp 0029  
                  ___fldiv@bexp 0028                    ___fldiv@sign 0021                 _color_read_Blue 5024  
                 _color_predict 53D2                              l71 55BC                              l82 32DC  
                            l74 32CA                              l91 4F82                              l85 53A0  
                            l94 5072                              l88 5496                              l97 4FD2  
                  ___awdiv@sign 000E                              bsr 000FE0             ___wmul@multiplicand 0005  
              _color_read_Clear 4FD4                _color_read_Green 4F84               ??_Interrupts_init 0003  
                           l100 5022                             l103 4E88                             l112 54F6  
                           l106 5536                             l115 5516                             l211 542A  
                           l220 55F2                             l132 4DC8                             l109 54B6  
                           l141 3E0E                             l118 54D6                             l214 5450  
                           l223 55DE                             l208 5428                             l304 5184  
                           l217 55E8                             l129 3900                             l314 3742  
                           l322 4C18                             l226 55C8                             l138 53FE  
                           l307 4848                             l163 1A0E                             l180 4774  
                           l164 1A12                             l172 4CC4                             l333 4462  
                           l229 51C6                             l181 4776                             l421 5554  
                           l350 4360                             l430 5592                             l343 42FC  
                           l167 52C2                             l336 448C                             l168 52C4  
                           l329 4428                             l433 55A6                             l347 4336  
                           l372 5208                             l702 5476                             l358 4D58  
                           l375 524A                             l439 53D0                             l623 4EE0  
                           l369 4B5C                             l641 558E                             l635 2D4C  
                           l816 3F96                             l658 356E                             l677 55D4  
                           l933 4A9C                             l829 40FA                             l699 5572  
                           l972 4698                             l967 4652                             l976 5336  
                           l999 4594               verify_color@color 00A3                ?_calibrate_white 000E  
      __end_of_distance_measure 4778                             _abs 524C                             _pad 4914  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0037  
                  ___flmul@bexp 003C                    ___flmul@sign 0036                    ___flmul@temp 0041  
                  ___flmul@prod 003D                 __end_of_LED_OFF 5538                    ___fltol@exp1 0050  
                          ?_abs 0015                            l1230 1C02                            l1231 1BF0  
                          l1320 22FC                            l1232 1BB6                            l1323 218E  
                          l1412 495A                            l1316 1F98                            l1333 22BE  
                          l1325 2206                            l1326 21F4                            l1415 499C  
                          l1423 2DEE                            l1247 1D1C                            l1239 1ED2  
                          l1360 3AB4                            l1256 1DEC                            l1272 50FE  
                          l1417 49D8                            l1425 2DF6                            l1257 1DDA  
                          l1450 3C68                            l1443 3030                            l1371 3A4C  
                          l1508 536C                            l4100 3ADA                            l1284 2A48  
                          l1364 39F0                            l1461 5282                            l1357 3958  
                          l4110 3B46                            l4102 3AE8                            l1286 28A8  
                          l1295 28EE                            l1464 528A                            l4120 3BF8  
                          l4112 3B8E                            l4104 3AFA                            l1456 4E22  
                          l1457 4E2A                            l1385 4F32                            l1297 2966  
                          l1289 286C                            l3410 484A                            l4122 3C0C  
                          l4106 3AFE                            l1298 2954                            l1378 52FE  
                          l5010 5144                            l5100 2B5A                            l4140 4F34  
                          l4300 53A6                            l3500 3FCE                            l3420 48CC  
                          l1476 4912                            l3412 485C                            l1484 5142  
                          l4116 3BC6                            l4108 3B22                            l4132 3C32  
                          l5012 5154                            l5020 4778                            l5110 2BC4  
                          l5102 2B6C                            l4142 4F7A                            l4302 53B4  
                          l3510 4036                            l3502 3FDC                            l3414 486E  
                          l3430 5122                            l4134 3C56                            l4118 3BEA  
                          l4126 3C18                            l5014 516C                            l5030 47CC  
                          l5022 4784                            l1487 55FA                            l1495 26AE  
                          l4400 521E                            l4320 4236                            l5120 2C48  
                          l5112 2BF0                            l5104 2B98                            l3600 543A  
                          l4160 501A                            l4152 4F84                            l4304 53B8  
                          l3512 4044                            l3520 40AA                            l3504 3FFC  
                          l3416 4878                            l3424 5100                            l3432 5338  
                          l4128 3C26                            l5016 5180                            l5032 47E0  
                          l5024 4794                            l5040 5538                            l3530 49DE  
                          l3442 5452                            l3610 3654                            l3602 3570  
                          l4170 4AE6                            l4402 5236                            l4322 425A  
                          l4330 4298                            l5130 2CB8                            l5122 2C60  
                          l5114 2C08                            l5106 2BB0                            l4146 5024  
                          l4154 4FCA                            l3450 3E14                            l3522 40BA  
                          l3514 4072                            l3506 401A                            l3418 4896  
                          l3426 510C                            l3434 5344                            l4410 26CC  
                          l5018 5182                            l5026 47A8                            l5050 5552  
                          l5042 5542                            l6010 4100                            l5060 555E  
                          l3540 4A0E                            l3532 49EC                            l3444 546E  
                          l3612 3670                            l3604 358C                            l4180 4B48  
                          l4172 4AF2                            l4164 4A9E                            l4340 42E8  
                          l4332 42B0                            l4324 4272                            l5140 2D12  
                          l5132 2CBA                            l5124 2C62                            l5116 2C0A  
                          l5108 2BB2                            l4148 506A                            l3460 3E74  
                          l3452 3E22                            l3524 40DA                            l3516 4092  
                          l3508 4022                            l3428 511E                            l3436 5348  
                          l4500 290C                            l4412 26DC                            l4420 2706  
                          l4404 26B0                            l5028 47BC                            l5044 5544  
                          l6020 411C                            l6012 4104                            l5062 5568  
                          l3550 4A3C                            l3542 4A12                            l3534 49F4  
                          l3614 36DA                            l3606 35EE                            l4166 4AC2  
                          l4174 4B00                            l4350 434C                            l4342 42F8  
                          l4334 42BE                            l4326 427E                            l5142 2D24  
                          l5134 2CCC                            l5126 2C74                            l5118 2C1C  
                          l4158 4FD4                            l4182 5592                            l3470 3EBE  
                          l3462 3E78                            l3454 3E42                            l3518 40A4  
                          l3438 5360                            l4270 4E06                            l4510 2976  
                          l4502 2910                            l4430 2732                            l4422 2716  
                          l4414 26EC                            l4406 26BC                            l5310 1A40  
                          l5302 1A14                            l5046 554E                            l5070 4EB4  
                          l6030 4146                            l6022 4120                            l6014 4108  
                          l5056 55CA                            l3560 4A70                            l3552 4A4A  
                          l3544 4A1A                            l3536 49F8                            l3528 49DA  
                          l3608 3634                            l4176 4B18                            l4168 4ADA  
                          l4360 43B6                            l4352 4362                            l4344 4316  
                          l4336 42CA                            l4328 428A                            l5136 2CF8  
                          l5128 2CA0                            l5080 2A96                            l5072 2A4C  
                          l4280 54FE                            l4600 547A                            l4184 55A2  
                          l3480 3F2E                            l3472 3ECC                            l3464 3E84  
                          l3456 3E46                            l3448 3E10                            l4264 4DCA  
                          l4272 4E2C                            l4520 29D8                            l4512 2982  
                          l4504 291E                            l4432 2742                            l4440 276C  
                          l4424 271C                            l4416 26FC                            l4408 26CA  
                          l5400 1BEE                            l5320 1A7A                            l5312 1A50  
                          l5304 1A20                            l5048 5550                            l5064 5574  
                          l6040 4194                            l6032 416C                            l6024 4134  
                          l6016 410C                            l6008 40FC                            l5058 5556  
                          l3562 4A76                            l3554 4A50                            l3546 4A2C  
                          l3538 4A06                            l4178 4B30                            l4370 4408  
                          l4354 4386                            l4362 43C4                            l4346 4322  
                          l4338 42DC                            l5138 2D10                            l5090 2B00  
                          l5082 2A98                            l5074 2A56                            l4602 54D8  
                          l4282 54B8                            l4274 5498                            l3482 3F40  
                          l3474 3EDE                            l3466 3EA2                            l3458 3E54  
                          l4098 3AB6                            l4266 4DD2                            l4290 4EFC  
                          l4610 53D6                            l4530 2A36                            l4522 29EE  
                          l4514 2990                            l4506 294C                            l4450 27AE  
                          l4442 277C                            l4434 2752                            l4426 2722  
                          l4418 26FE                            l5410 1C44                            l5402 1C10  
                          l5330 1AA8                            l5322 1A80                            l5314 1A60  
                          l5306 1A2E                            l5066 4E8A                            l6034 4186  
                          l6026 4138                            l6018 4118                            l3556 4A66  
                          l3548 4A34                            l3564 4A7C                            l4380 445E  
                          l4372 4414                            l4364 43DC                            l4356 439E  
                          l4348 4332                            l5092 2B02                            l5084 2AAC  
                          l5076 2A66                            l4604 54DE                            l4284 54BE  
                          l4276 549E                            l3900 5194                            l3476 3F0C  
                          l3468 3EAA                            l3484 3F46                            l3492 3F98  
                          l3580 4952                            l3572 4914                            l3820 2D6E  
                          l4268 4DE0                            l4292 4F04                            l4612 53F2  
                          l4532 2A3C                            l4524 2A08                            l4516 29BA  
                          l4444 2792                            l4436 2762                            l4428 2730  
                          l5500 1EC2                            l5420 1C7E                            l5412 1C52  
                          l5404 1C20                            l5340 1ADC                            l5332 1AAA  
                          l5324 1A92                            l5316 1A62                            l5308 1A30  
                          l5068 4E9E                            l6036 418A                            l6028 413C  
                          l3566 4A8C                            l3558 4A6E                            l4390 4D0E  
                          l3910 4B5E                            l4382 4478                            l4374 4424  
                          l4366 43EA                            l4358 43AA                            l5094 2B14  
                          l5086 2ABC                            l5078 2A70                            l4278 54F8  
                          l3902 519C                            l3486 3F56                            l3478 3F2C  
                          l3494 3F9C                            l3590 49C0                            l3582 4966  
                          l3574 4924                            l3830 2DE2                            l3822 2D96  
                          l4294 4F20                            l4286 4EE2                            l4534 2A3E  
                          l4526 2A24                            l4518 29BE                            l4470 2830  
                          l4462 27E6                            l4446 27A2                            l4454 27C2  
                          l4438 2764                            l4550 397E                            l4542 3904  
                          l5510 1EF0                            l5430 1CEA                            l5422 1C80  
                          l5414 1C60                            l5350 1B18                            l5334 1ABA  
                          l5342 1AE4                            l5326 1A94                            l5318 1A6A  
                          l6070 419A                            l6038 4194                            ?_pad 0013  
                          l3568 4A94                            l4392 4D1A                            l4384 4CC6  
                          l3920 4BAA                            l3912 4B62                            l4376 4442  
                          l4368 43F6                            l5096 2B40                            l5088 2AE8  
                          l3904 51C2                            l3488 3F76                            l3496 3FAA  
                          l3584 497A                            l3576 4938                            l3840 2E2C  
                          l3832 2DFE                            l3824 2DB6                            l4288 4EF4  
                          l4528 2A28                            l4480 2876                            l4472 2838  
                          l4464 2800                            l4456 27D2                            l4448 27AA  
                          l4560 39D8                            l4544 3914                            l5600 21EC  
                          l5520 1F36                            l5512 1F00                            l5504 1ED4  
                          l5440 1D42                            l5432 1CEC                            l5424 1C8A  
                          l5416 1C6C                            l5408 1C34                            l5360 1B2C  
                          l5352 1B1C                            l5344 1AF4                            l5336 1ACA  
                          l5328 1A9A                            l4800 3034                            l6080 4200  
                          l6072 41A6                            l4386 4CEA                            l4394 4D28  
                          l3930 4C00                            l3922 4BB6                            l3914 4B7A  
                          l4378 444E                            l4730 51DC                            l5098 2B58  
                          l3906 51C4                            l4298 53A2                            l3498 3FCA  
                          l3594 524C                            l3586 497E                            l3578 4946  
                          l3850 2ECA                            l3842 2E36                            l3834 2E10  
                          l3826 2DC6                            l3818 2D4E                            l4490 28CE  
                          l4482 2894                            l4474 2848                            l4466 2810  
                          l4458 27D2                            l4570 3A3C                            l4562 39DA  
                          l4554 3992                            l4546 3922                            l5610 225A  
                          l5530 1F62                            l5522 1F3C                            l5514 1F10  
                          l5506 1EE0                            l5450 1D70                            l5434 1CFC  
                          l5418 1C70                            l5426 1C90                            l5370 1B40  
                          l5362 1B30                            l5354 1B20                            l5346 1B06  
                          l5338 1ADA                            l4810 30C0                            l4802 3040  
                          l6082 4214                            l6074 41B8                            l4396 4D40  
                          l4388 4D02                            l3924 4BC2                            l3916 4B86  
                          l4740 331A                            l4732 51F4                            l3596 5266  
                          l3588 49AC                            l3860 2F9A                            l3844 2E3C  
                          l3852 2F2E                            l3836 2E1E                            l3828 2DC8  
                          l4492 28D4                            l4484 2896                            l4476 285C  
                          l4468 2820                            l4580 3A94                            l4572 3A5A  
                          l4564 39E6                            l4556 399A                            l4548 3968  
                          l5620 22C2                            l5604 2216                            l5612 225E  
                          l5540 1FB8                            l5532 1F72                            l5524 1F42  
                          l5516 1F20                            l5508 1EEE                            l5452 1D7E  
                          l5444 1D56                            l5460 1D9C                            l5428 1CB6  
                          l5436 1D0C                            l5372 1B44                            l5364 1B34  
                          l5356 1B24                            l5348 1B14                            l5380 1B54  
                          l4820 3154                            l4812 30D2                            l4804 3050  
                          l6076 41CC                            l3918 4B9E                            l3926 4BD0  
                          l4398 520A                            l4742 3332                            l4734 32DE  
                          l3598 542A                            l4590 540A                            l3870 2FE4  
                          l3854 2F48                            l3862 2FAA                            l3846 2EBE  
                          l3838 2E24                            l4494 28DE                            l4486 28A6  
                          l4478 286A                            l4582 3AA2                            l4574 3A5C  
                          l4566 3A22                            l4558 39A6                            l5710 4584  
                          l5702 4548                            l5630 22EC                            l5622 22D2  
                          l5614 2278                            l5606 2222                            l5550 1FF8  
                          l5534 1F82                            l5526 1F50                            l5518 1F26  
                          l5454 1D86                            l5446 1D60                            l5438 1D32  
                          l5462 1DAA                            l5390 1BC4                            l5382 1B58  
                          l5374 1B48                            l5366 1B38                            l5358 1B28  
                          l4830 31FC                            l4822 3178                            l4814 30F2  
                          l4806 3070                            l6078 41EE                            l3928 4BE8  
                          l4760 33C2                            l4752 3384                            l4744 3336  
                          l4736 32FA                            l4728 51C8                            l3880 55E0  
                          l4592 5410                            l3872 2FF0                            l3864 2FBC  
                          l3856 2F66                            l3848 2EC4                            l4496 28EC  
                          l4488 28B8                            l4584 3AA4                            l4576 3A60  
                          l4568 3A2E                            l5704 4554                            l5640 4596  
                          l5624 22E0                            l5616 228C                            l5608 2230  
                          l5560 2042                            l5552 2004                            l5544 1FCC  
                          l5536 1F88                            l5528 1F52                            l5472 1DFC  
                          l5480 1E52                            l5464 1DAE                            l5456 1D8A  
                          l5448 1D6E                            l5392 1BD0                            l5384 1B82  
                          l5376 1B4C                            l5368 1B3C                            l5720 237C  
                          l4840 3292                            l4832 3214                            l4824 3190  
                          l4816 310A                            l4808 3088                            l5800 12FC  
                          l4770 343C                            l4762 33E6                            l4754 3386  
                          l4746 335C                            l4738 330E                            l3882 55E4  
                          l3890 55DA                            l4594 5412                            l4850 538C  
                          l3874 2FF8                            l3866 2FCC                            l3858 2F80  
                          l4498 28FE                            l4578 3A84                            l5706 4564  
                          l5650 4620                            l5642 45C4                            l5626 22E2  
                          l5618 22A6                            l5570 2094                            l5562 204E  
                          l5554 201C                            l5546 1FD8                            l5538 1FA8  
                          l5490 1EA4                            l5482 1E62                            l5474 1E08  
                          l5466 1DBC                            l5458 1D9A                            l5394 1BD4  
                          l5386 1B9E                            l5378 1B50                            l5634 50BA  
                          l5730 2432                            l5722 23B8                            l5714 22FE  
                          l4842 32C8                            l4834 324A                            l4826 31CC  
                          l4818 3142                            l5810 13E2                            l5802 1310  
                          l4780 34B4                            l4772 343E                            l4764 33FE  
                          l4756 33A8                            l4748 3370                            l3892 55EA  
                          l3884 55C0                            l4940 3C6A                            l4596 5414  
                          l4588 5400                            l4852 5396                            l4844 536E  
                          l3868 2FD2                            l3876 3008                            l5900 37C4  
                          l5708 4574                            l5652 4632                            l5644 45D4  
                          l5628 22E8                            l5580 2112                            l5572 20A4  
                          l5564 205E                            l5556 2028                            l5548 1FE2  
                          l5492 1EAA                            l5484 1E72                            l5476 1E16  
                          l5468 1DD2                            l5396 1BE2                            l5388 1BAE  
                          l5636 50CA                            l5740 263E                            l5732 2500  
                          l5724 23DC                            l5716 231E                            l4836 325C  
                          l4828 31DE                            l5820 1570                            l5812 13EE  
                          l5804 13B2                            l4854 5518                            l4790 3520  
                          l4782 34E0                            l4774 3462                            l4766 3400  
                          l4758 33C0                            l3894 55EE                            l3886 55C4  
                          l4950 3CCA                            l4942 3C6E                            l4598 5416  
                          l4846 5372                            l5910 37DE                            l5670 448E  
                          l5654 4640                            l5646 4602                            l5590 218C  
                          l5582 2148                            l5574 20C0                            l5566 206A  
                          l5558 2034                            l5662 5300                            l5494 1EAC  
                          l5486 1E92                            l5478 1E50                            l5398 1BE4  
                          l5742 267A                            l5734 256C                            l5726 23FA  
                          l5718 2368                            l4838 327A                            l5830 1748  
                          l5822 1618                            l5814 1490                            l5806 13C6  
                          l4856 551E                            l4792 3544                            l4784 34E2  
                          l4776 348E                            l4768 3424                            l3896 5188  
                          l3888 55D6                            l4960 3D32                            l4952 3CCE  
                          l4944 3C82                            l4848 537C                            l5920 382C  
                          l5912 37EA                            l5680 44E6                            l5672 44A6  
                          l5656 4690                            l5648 4612                            l5592 219E  
                          l5584 2156                            l5576 20CC                            l5568 207A  
                          l5664 5316                            l5496 1EB2                            l5488 1E96  
                          l5744 269E                            l5736 259E                            l5752 528C  
                          l5840 1862                            l5832 1752                            l5824 1634  
                          l5816 14AC                            l5808 13DE                            l4794 355C  
                          l4786 3506                            l4778 3490                            l3898 518C  
                          l4970 3DF6                            l4962 3D4A                            l4954 3CE6  
                          l4946 3C9A                            l5762 4D5A                            l5930 3846  
                          l5914 3804                            l5906 37CE                            l5682 44F6  
                          l5658 4696                            l5594 21AC                            l5586 2174  
                          l5578 20E8                            l5666 5326                            l5498 1EC0  
                          l5738 260A                            l5754 5290                            l5850 18C4  
                          l5842 186A                            l5834 175C                            l5826 164C  
                          l5818 1554                            l5770 0E66                            l4788 351E  
                          l4796 355E                            l4964 3D62                            l4956 3CFE  
                          l4948 3CB2                            l5764 4DBC                            l5940 3894  
                          l5932 3852                            l5916 380A                            l5908 37D2  
                          l5692 4520                            l5684 44FA                            l5676 44BA  
                          l5596 21B0                            l5588 217E                            l5748 52C6  
                          l5756 52A8                            l5860 1918                            l5844 1874  
                          l5836 178A                            l5828 167A                            l5780 0FEE  
                          l5772 0E72                            l4798 55A8                            l4966 3D7A  
                          l4958 3D2E                            l5950 38AE                            l5934 386C  
                          l5926 3836                            l5918 3826                            l5694 452A  
                          l5686 4508                            l5678 44E4                            l5598 21BE  
                          l5758 52BE                            l5870 19A6                            l5854 18CC  
                          l5838 184A                            l5846 187E                            l5790 10D2  
                          l5782 1096                            l5774 0F0E                            l5766 0E14  
                          l4968 3D92                            l5960 38FC                            l5952 38BA  
                          l5936 3872                            l5928 383A                            l5880 3744  
                          l5696 4534                            l5872 19AC                            l5856 18E4  
                          l5848 18AC                            l5864 191E                            l5792 1174  
                          l5784 10AA                            l5776 0F2A                            l5768 0E62  
                          l5954 38D4                            l5946 389E                            l5938 388E  
                          l5890 3776                            l5874 19DA                            l5866 194A  
                          l5858 18EC                            l5794 1190                            l5786 10C2  
                          l5778 0FD2                            l5970 4C8A                            l5962 4C1E  
                          l5956 38DA                            l5948 38A2                            l5892 3782  
                          l5876 1A08                            l5868 1978                            l5796 1238  
                          l5788 10C6                            l5972 4CA8                            l5964 4C36  
                          l5958 38F6                            l5894 379C                            l5886 3766  
                          l5990 46C4                            l5982 469A                            l5798 1254  
                          l5966 4C54                            l5896 37A2                            l5888 376A  
                          l5992 4744                            l5984 46B0                            l5968 4C6C  
                          l5898 37BE                            l5994 4758                            l5986 46B4  
                          l5978 4CC4                            l5996 4770                            l5988 46C0  
                          STR_1 0E05                            STR_3 0E0D                            u3000 499C  
                          u3001 4998                            u3010 49AC                            u3011 49A8  
                          u3020 5266                            u3021 5262                            u3030 543A  
                          u3031 5436                            u3040 5450                            u4000 55A2  
                  _BAUD4CONbits 000EE9                            u3041 544C                            u4001 559E  
                          _LATE 000F7D                            u3050 358C                            u3051 3588  
                          _LATG 000F7F                            u3060 3670                            u3061 366C  
                          u3074 36CA                            u4210 42B0                            u5010 31A2  
                          _T2PR 000FBC                            u3075 36C6                            u4211 42AC  
                          u5011 319A                            u3084 3734                            u4300 4D58  
                          u4220 42DC                            u3500 2D96                            u3085 3730  
                          u4301 4D54                            u4221 42D8                            u3501 2D92  
                          u4230 4312                            u3510 2DC6                            u4310 26CA  
                          u5110 32A4                            u5030 31DE                            u4231 430E  
                          u3511 2DC2                            u4311 26C6                            u5111 329C  
                          u5031 31DA                            u4240 434C                            u2800 3E54  
                          u3600 2FBC                            u3520 2DE2                            u4400 286A  
                          u4320 26DC                            u6000 22A6                            u5040 31F0  
                          u5008 3168                            u4241 4348                            u2801 3E50  
                          u3601 2FB8                            u3521 2DDE                            u4401 2866  
                          u4321 26D8                            u6001 22A2                            u5041 31E8  
                          u4250 43DC                            u2730 485C                            u3610 2FCC  
                          u3530 2E10                            u4170 4E22                            u4410 2894  
                          u4330 26EC                            u6010 22E0                            u5130 32DC  
                          u4251 43D8                            u2811 3E7E                            u2731 4858  
                          u3611 2FC8                            u3531 2E0C                            u4171 4E1E  
                          u4411 2890                            u4331 26E8                            u6011 22DC  
                          u5131 32D8                            u4260 4408                            u5300 2CCC  
                          u4180 53D0                            u2820 3EA2                            u2900 4072  
                          u2740 486E                            u3620 2FE4                            u3540 2E1E  
                          u4500 2990                            u4420 28B8                            u4340 2730  
                          u6100 4508                            u6020 45C4                            u5108 3270  
                          u5060 3226                            u5028 31A4                            u4261 4404  
                          u5301 2CC8                            u4181 53CC                            u2821 3E9E  
                          u2901 406E                            u2741 486A                            u3621 2FE0  
                          u3541 2E1A                            u4501 298C                            u4421 28B4  
                          u4341 272C                            u6101 4504                            u6021 45C0  
                          u5061 321E                            u4270 443E                            u5310 2D24  
                          u5230 2A66                            u3630 51B0                            u2830 3ECC  
                          u2910 40BA                            u2750 4896                            u3550 2F48  
                          u4510 29D8                            u4430 28CE                            u4350 2742  
                          u6110 451C                            u6030 4602                            u4271 443A  
                          u5311 2D20                            u5231 2A62                            u3631 51A8  
                          u2831 3EC8                            u2911 40B6                            u2751 4892  
                          u3551 2F44                            u4511 29D4                            u4431 28CA  
                          u4351 273E                            u6111 4518                            u6031 45FE  
                          u2920 49EC                            u4280 4478                            u5240 2ABC  
                          u2840 3F0C                            u2760 48CC                            u3560 2F66  
                          u3480 2D7E                            u4520 2A08                            u4440 28EC  
                          u4360 2752                            u4600 3A4C                            u6120 4544  
                          u6040 4620                            u6200 2500                            u5128 32A6  
                          u5080 325C                            u2921 49E8                            u4281 4474  
                          u5241 2AB8                            u2841 3F08                            u2761 48C8  
                          u3561 2F62                            u3481 2D78                            u4521 2A04  
                          u4441 28E8                            u4361 274E                            u4601 3A48  
                          u6121 4540                            u6041 461C                            u6201 24FC  
                          u5081 3258                            u2930 4A06                            u4290 4D40  
                          u3650 4B7A                            u5250 2B14                            u2850 3F56  
                          u2770 5142                            u3570 2F80                            u3490 2D80  
                          u4530 2A36                            u4450 290C                            u4370 2792  
                          u4610 3A5A                            u6130 4564                            u6050 4640  
                          u6210 259E                            u5090 326E                            u5058 31F2  
            verify_color@color2 00A4                            u2931 4A02                            u4291 4D3C  
                          u3651 4B76                            u5251 2B10                            u2851 3F52  
                          u2771 513E                            u3571 2F7C                            u4531 2A32  
                          u4451 2908                            u4371 278E                            u4611 3A56  
                          u6131 4560                            u6051 463C                            u6211 259A  
                          u5091 3266              verify_color@color3 00A1                            u2940 4A2C  
                          u3660 4B9E                            u5260 2B6C                            u2860 3FAA  
                          u2780 5360                            u3580 2F9A                            u4460 291E  
                          u4380 27D2                            u4620 3A94                            u4540 3914  
                          u6140 4574                            u6060 4690                            u5500 1ACA  
                          u6220 265E                            u6300 1862                            u2941 4A28  
                          u3661 4B9A                            u5261 2B68                            u2861 3FA6  
                          u2781 535C                            u3581 2F96                            u4461 291A  
                          u4381 27CE                            u4621 3A90                            u4541 3910  
                          u6141 4570                            u6061 468C                            u5501 1AC6  
                          u6301 185E                            u2950 4A4A                            u3670 4BE8  
                          u5270 2BC4                            u2790 3E22                            u2870 3FDC  
                          u3590 2FAA                            u4470 294C                            u4390 2848  
                          u4630 3AA2                            u4550 3922                            u6070 5316  
                          u5510 1B06                            u6230 267A                            u6150 233E  
                          u5078 3228                            u6310 18AC                            u2951 4A46  
                          u3671 4BE4                            u5271 2BC0                            u2791 3E1E  
                          u2871 3FD8                            u3591 2FA6                            u4471 2948  
                          u4391 2844                            u4631 3A9E                            u4551 391E  
                          u6071 5312                            u5511 1B02                            u6231 2676  
                          u6311 18A8                            u2960 4A66                            u3680 4C00  
                          u4800 33A8                            u5280 2C1C                            u3648 51B2  
                          u2880 401A                            u6400 37BE                            u4480 2962  
                          u4560 397E                            u6080 44A6                            u5600 1C20  
                          u5520 1B14                            u5440 1A2E                            u6160 2368  
                          u6240 52A8                            u6320 18C4                            u2961 4A62  
                          u3681 4BFC                            u4801 33A4                            u5281 2C18  
                          u2881 4016                            u6401 37BA                            u4481 295E  
                          u4561 397A                            u6081 44A2                            u5601 1C1C  
                          u5521 1B10                            u5441 1A2A                            u6225 2654  
                          u6161 2364                            u6241 52A4                            u6321 18C0  
                          u2970 4A8C                            u4810 33E6                            u5290 2C74  
                          u2890 4044                            u6410 3826                            u4490 2976  
                          u4570 39D4                            u6090 44DA                            u5610 1C52  
                          u5530 1B82                            u5450 1A40                            u6170 239C  
                          u6250 52BE                            u6330 18E4                            u2971 4A88  
                          u4811 33E2                            u5291 2C70                            u2891 4040  
                          u6411 3822                            u4491 2972                            u4571 39D0  
                          u5611 1C4E                            u5531 1B7E                            u5451 1A3C  
                          u6155 2334                            u6251 52BA                            u6331 18E0  
                          u4820 3424                            u2980 4924                            u3940 3ADA  
                          u6420 388E                            u4580 3A1E                            u5700 1D9A  
                          u5620 1C60                            u5540 1B9A                            u5460 1A50  
                          u6180 23B8                            u6340 1918                            u6260 167A  
                          u4821 3420                            u2981 4920                            u3941 3AD6  
                          u6421 388A                            u4581 3A1A                            u5701 1D96  
                          u5621 1C5C                            u5541 1B94                            u5461 1A4C  
                          u6181 23B4                            u6341 1914                            u6261 1676  
                          u4830 3462                            u2990 4946                            u3950 3B22  
                          u6430 38F6                            u4590 3A3C                            u5710 1DAA  
                          u5630 1C7E                            u5550 1B9C                            u5470 1A92  
                          u6190 23FA                            u4910 309A                            u6350 194A  
                          u6270 1748                            u4831 345E                            u2991 4942  
                          u3951 3B1E                            u6431 38F2                            u4591 3A38  
                          u6095 44D0                            u5711 1DA6                            u5631 1C7A  
                          u5471 1A8E                            u6191 23F6                            u6175 2392  
                          u4911 3092                            u6351 1946                            u6271 1744  
                          u4840 34B4                            u3960 3B46                            u5800 1E92  
                          u5720 1DBC                            u5640 1CB6                            u5560 1BC4  
                          u5480 1AA8                            u6360 1978                            u6280 178A  
                          u6440 4CA8                            u4841 34B0                            u3961 3B42  
                          u5801 1E8E                            u5721 1DB8                            u5641 1CB2  
                          u5561 1BC0                            u5481 1AA4                            u6361 1974  
                          u6281 1786                            u6441 4CA4                            u4850 3506  
                          u3970 3BEA                            u5810 1EA4                            u5730 1DD2  
                          u5650 1CFC                            u5570 1BE2                            u5490 1ABA  
                          u4930 30D2                            u6370 19A6                            u6290 184A  
                          u6450 4CC0                            u4851 3502                            u3971 3BE6  
                          u5811 1EA0                            u5731 1DCE                            u5651 1CF8  
                          u5571 1BDE                            u5491 1AB6                            u4931 30CE  
                          u6371 19A2                            u6291 1846                            u6451 4CBC  
                          u6507 4220                            u3980 4B18                            u4860 3544  
                          u4780 335C                            u5900 1FB8                            u5820 1EC0  
                          u5740 1DE8                            u5660 1D32                            u5580 1C02  
                          u6460 4770                            u4940 30E4                            u4908 3064  
                          u6380 19DA                            u3981 4B14                            u4861 3540  
                          u4781 3358                            u5901 1FB4                            u5821 1EBC  
                          u5741 1DE4                            u5661 1D2E                            u5581 1BFE  
                          u6461 476C                            u4941 30DC                            u6381 19D6  
                          u6517 4C28                            u3990 4B30                            u4870 356E  
                          u4790 3380                            u5910 2132                            u5830 1EEE  
                          u5750 1DFC                            u5670 1D42                            u5590 1C10  
                          u6390 1A08                            u6470 4200                            u3991 4B2C  
                          u4871 356A                            u4791 337C                            u5831 1EEA  
                          u5751 1DF8                            u5671 1D3E                            u5591 1C0C  
                          u6607 3182                            u6391 1A04                            u6527 4C5E  
                          u6471 41FC                            u5920 218C                            u5840 1F00  
                          u5760 1E16                            u5680 1D6E                            u4960 311C  
                          u4928 309C                            u4880 3050                            u5921 2188  
                          u5841 1EFC                            u5761 1E12                            u5681 1D6A  
                          u6617 31BE                            u4961 3114                            u4881 304C  
                          u6537 10B4                            u5930 21AC                            u5850 1F10  
                          u5770 1E50                            u5690 1D7E                            u4890 3062  
                          u6707 385E                            u5931 21A8                            u5915 2128  
                          u5851 1F0C                            u5771 1E4C                            u5691 1D7A  
                          u6627 3206                            u4891 305A                            u6547 13D0  
                          u5940 21BE                            u5860 1F50                            u5780 1E62  
                          u4980 3154                            u6717 38C6                            u5941 21BA  
                          u5861 1F4C                            u5781 1E5E                            u6637 323C  
                          u4981 3150                            u6557 163E                            u5950 21EC  
                          u5870 1F62                            u5790 1E72                            u4990 3166  
                          u4958 30E6                            u6807 5508                            u6727 5382  
                          u5951 21E8                            u5871 1F5E                            u5791 1E6E  
                          u6647 3284                            u4991 315E                            u6567 307A  
                          u6487 4152                            u5960 2202                            u5880 1F72  
                          u6817 51E6                            u6737 3CBC                            u5961 21FE  
                          u5881 1F6E                            u6657 32BA                            u6577 30B2  
                          u6497 4178                            u5970 2216                            u5890 1FA8  
                          u4978 311E                            u6907 4AF8                            u6827 3324  
                          u6747 3D20                            u5971 2212                            u5891 1FA4  
                          u6667 4EA8                            u6587 30FC                            u5980 2230  
                          u6917 4B3A                            u6837 4290                            u6757 3D84  
                          u5981 222C                            u6677 4ED2                            u6597 3134  
                          u5990 2278                            u6927 4BC8                            u6847 42EE  
                          u6767 3E00                            u6687 378E                            u5991 2274  
                          u6937 4C0A                            u6857 4328                            u6777 54A8  
                          u6697 37F6                            u6947 4D20                            u6867 43BC  
                          u6787 54C8                            u6957 5528                            u6877 441A  
                          u6797 54E8                            u6887 4454                            u6897 5228  
                          abs@a 0015                            _dbuf 0191                            _main 40FC  
                          _dtoa 2D4E                            _prec 00F1                            _nout 00ED  
                          pad@i 001A                            pad@p 0017                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001C                            fsr2l 000FD9  
                          btemp 005C                            _stop 4B5E                            prodh 000FF4  
                          prodl 000FF3                            start 0048                  ?_color_display 0079  
               ___fldiv@new_exp 0022          __end_of_color_read_Red 4F84                 __end_of_HighISR 55F8  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0017  
                         ??_pad 0019                   ___fltol@sign1 004F                 __end_of___aodiv 3F98  
               __end_of___fladd 1ED4                           ?_main 0001                           ?_dtoa 001E  
               __end_of___aomod 40FC                 __end_of___fldiv 2A4A                 __end_of___awdiv 4A9E  
               __end_of___flneg 5338                 __end_of___flmul 22FE                 __end_of___flsub 5100  
               __end_of___fltol 4596                           ?_stop 001C                 ___awdiv@divisor 000B  
                         _LED_B 54F8                           _LED_C 54D8                           _LED_G 54B8  
                         _LED_R 5498                           i1l688 003C                           i2l682 55F4  
               ___awdiv@counter 000D                    vfpfcnvrt@fmt 0044                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 55A8      __end_of_I2C_2_Master_Start 55EA  
       ??_color_data_collection 00E1      __end_of_I2C_2_Master_Write 55CA                 __end_of_compare 52C6  
                  compare@lower 007A                           _flags 00F3                           _color 0190  
                  compare@upper 007E                           _fputc 484A                           _fputs 5100  
                         pad@fp 0013                           _width 00EF                           _putch 55FA  
                         _toint 0E01                           dtoa@d 0020                           dtoa@i 0040  
                         dtoa@n 0038                           dtoa@p 0032                           dtoa@s 0036  
                         dtoa@w 0034                           tablat 000FF5                 __end_of_lroundf 5300  
                         ttemp5 005D                           ttemp6 0060                           ttemp7 0064  
                         status 000FD8                           wtemp8 005D                 __end_of_sprintf 4F34  
              color_display@buf 007B         __end_of_color_read_Blue 5074           _I2C_2_Master_RepStart 55EA  
               ??_short_reverse 002C                 ?_color_read_Red 0007                 __initialization 5074  
                 short_burst@mL 0022                   short_burst@mR 0024                    __end_of_main 4236  
                  __end_of_dtoa 3032            __end_of_detect_color 1A14                    __end_of_stop 4C1A  
        color_data_collection@i 00E3          color_data_collection@j 00E5          color_data_collection@k 00E7  
        color_data_collection@m 00DF          color_data_collection@x 00E9                          ??_main 00EB  
                        ??_dtoa 0028                          ??_stop 0020                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 55A8                       ??_LED_OFF 0003  
        _initDCmotors_parameter 4778                    ?_setMotorPWM 0011                          ?_fputc 0003  
                        ?_fputs 000C                ___awdiv@dividend 0009                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i1l5300 0038                          i1l5296 0022                          i1l5298 0032  
            turnLeft@angle_left 0026                       ??_HighISR 0001        __end_of_color_click_init 53A2  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3AB6                          _LowISR 0018                   ??_Timer0_init 0003  
               ??_color_predict 005A                    vfprintf@cfmt 0058                          ___flge 4596  
                     ??___aodiv 0013                       ??___fladd 000B                       ??___aomod 0013  
                        ___wmul 5452                       ??___fldiv 0019                       ??___awdiv 000D  
                     ??___flneg 0007                       ??___flmul 0032                          _action 2A4A  
                     ??___flsub 001B                       ??___fltol 004B                          _goback 32DE  
                 compare@result 0051                          _memory 013C                          clear_0 5092  
                        clear_1 509E                ___awdiv@quotient 000F                          _second 00F9  
                        _motorL 0182                          _motorR 0178                          isa$std 000001  
                        pad@buf 0015                          _roundf 22FE                          dtoa@fp 001E  
                        _strlen 5338                       ??_compare 0051                   toggle_light@i 0006  
              __end_of_pin_init 5590                          fputc@c 0003         toggle_light@lightnumber 0007  
                        fputs@c 0010                          fputs@i 0011                          fputs@s 000C  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 0051  
                   read_color@m 000E                          putch@c 0001                __end_of_vfprintf 4E2C  
                        stop@mL 001C                          stop@mR 001E               ??_initDCmotorsPWM 0005  
                     ??_sprintf 005A                __end_of_turnLeft 448E                      ___flge@ff1 0003  
                    ___flge@ff2 0007                    ___xxtofl@arg 000D                    ___xxtofl@exp 000C  
                  ___xxtofl@val 0003                    ?_short_burst 0022                calibrate_white@w 000E  
               fullSpeedBack@mL 0022                 fullSpeedBack@mR 0024                      __accesstop 0060  
       __end_of__initialization 50A8                   verify_color@m 009D                   verify_color@w 009F  
      __end_of_color_read_Clear 5024                      ___flneg@f1 0003        __end_of_color_read_Green 4FD4  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0003  
  initDCmotors_parameter@motorR 0005                   ___rparam_used 000001                      ___fltol@f1 0072  
                 __end_of_LED_B 5518                   __end_of_LED_C 54F8                   __end_of_LED_G 54D8  
                 __end_of_LED_R 54B8                ?_color_read_Blue 0007                 _Interrupts_init 55CA  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4A9E                    __pidataBANK0 55F8  
       __end_of_buggylight_init 55BE            turnRight@angle_right 0026           _distance_measure$3060 0084  
                 __end_of_fputc 4914               detect_color@color 0096                   __end_of_fputs 5144  
                 __end_of_putch 55FC                   __end_of_toint 0E05             __end_of_Timer0_init 5574  
                       ??_LED_B 0003                         ??_LED_C 0003                         ??_LED_G 0003  
                       ??_LED_R 0003               ?_distance_measure 007A              ??_distance_measure 0051  
                       ??_fputc 0007                         ??_fputs 0010                         ??_putch 0003  
                    __pbssBANK0 00ED                      __pbssBANK1 0100                color_predict@buf 0079  
                       ?_LowISR 0001               _color_writetoaddr 5478                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0022                         ?___flge 0003              ?_color_writetoaddr 0005  
                       ?___wmul 0003                         ?_action 0038                         ?_goback 0030  
                       ?_roundf 0043             ??_color_writetoaddr 0006                         ?_strlen 0003  
                       _LED_OFF 5518                       ?___xxtofl 0003                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                    _detect_color 0E14  
 __end_of_color_data_collection 3902         __end_of_Interrupts_init 55D6          color_writetoaddr@value 0005  
              ??_color_read_Red 0009                         _HighISR 0008       __end_of_color_writetoaddr 5498  
            _I2C_2_Master_Start 55E0                      _initUSART4 5538              _I2C_2_Master_Write 55BE  
                     ?_pin_init 0001                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000C                     _Timer0_init 5556         sendStringSerial4@string 0004  
                       ___aodiv 3E10                         ___fladd 1A14                         ___aomod 3F98  
                       ___fldiv 26B0                         ___awdiv 49DA                         ___flneg 5300  
                       ___flmul 1ED4                         ___flsub 50BA                         ___fltol 448E  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0052                    __psmallconst 0E00       distance_measure@threshold 0082  
                       __pcinit 5074                         __ramtop 0E00                      _read_color 4E2C  
                     ?_turnLeft 0022                         __ptext0 40FC                         __ptext1 4C1A  
                       __ptext2 0E14                         __ptext3 528C                         __ptext4 3032  
                       __ptext5 4E8A                         __ptext6 5574                         __ptext7 5538  
                       __ptext8 4778                         __ptext9 5144                         _compare 528C  
       ?_initDCmotors_parameter 0003                       _T2CONbits 000FBD                      ??___xxtofl 0007  
                     _T2HLTbits 000FBE                         _lroundf 52C6                   _RxBufWriteCnt 00FD  
                       goback@i 0036          distance_measure@CC_amb 0088          distance_measure@CG_amb 0080  
                       _sprintf 4EE2                         main@rgb 01CC            ??_I2C_2_Master_Start 0004  
          ??_I2C_2_Master_Write 0004                  __pintcode_body 55F4            end_of_initialization 50A8  
            setMotorPWM@PWMduty 001A                 _CALIBRATION_180 00FE                         fputc@fp 0005  
                       int_func 55F4                         fputs@fp 000E               ?_color_click_init 0001  
               ??_fullSpeedBack 0026                      ??_pin_init 0003              ??_color_click_init 0007  
             __end_of_vfpfcnvrt 3C6A           __end_of_short_reverse 520A                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 0064                         roundf@u 006A  
                       roundf@x 0043                         roundf@y 006E                      ??_vfprintf 0058  
                       strlen@a 0005                         strlen@s 0003                 _initDCmotorsPWM 5144  
             distance_measure@w 007E                      ??_turnLeft 0027  __end_of_initDCmotors_parameter 484A  
                     _PORTFbits 000F8E               __end_of_turnRight 4362                     ___fladd@grs 0012  
                 ___xxtofl@sign 000B                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0024  
                   ___fldiv@rem 001D                fullSpeedAhead@mL 001C                fullSpeedAhead@mR 001E  
      color_writetoaddr@address 0006         ??_I2C_2_Master_RepStart 0004                      _start_move 00F7  
              ?_Interrupts_init 0001                     ___flmul@grs 0038                   ?_toggle_light 0003  
             ?_color_read_Clear 0007                    _EUSART4RXbuf 0164                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0007                     ?_initUSART4 0001       sendCharSerial4@charToSend 0003  
                 ?_verify_color 009D           __end_of_color_display 4DCA                      main@motorL 01D4  
                    main@motorR 01DE               ??_calibrate_white 0010              ??_color_read_Clear 0009  
                color_display@m 0079              ??_color_read_Green 0009                  detect_color@BB 0094  
                detect_color@BG 0097                  detect_color@GB 0086                  detect_color@GC 0088  
                detect_color@GG 008E                  detect_color@BR 0092                  detect_color@GR 008C  
                detect_color@RB 0084                  detect_color@RG 008A                  detect_color@RR 0090  
                __end_of_LowISR 0048           __end_of_color_predict 5400                  __end_of___flge 469A  
                _fullSpeedAhead 4CC6                     vfpfcnvrt@ap 0046                     vfpfcnvrt@fp 0042  
                   vfpfcnvrt@ll 004A                  __end_of___wmul 5478                  __end_of_action 2D4E  
                   ?_read_color 000E                  __end_of_goback 3570                  __end_of_roundf 26B0  
            turnRight@delay_180 0028                  __end_of_strlen 536E             color_read_Clear@tmp 000C  
           start_initialization 5074                     __end_of_abs 528C                     __end_of_pad 49DA  
                 _TxBufWriteCnt 005B               turnLeft@delay_180 0028                  ??_toggle_light 0004  
                ??_verify_color 0056             color_read_Green@tmp 000C                        ??_LowISR 0001  
                _reverse_square 520A         __end_of_initDCmotorsPWM 5186                     vfprintf@fmt 0054  
        __end_of_fullSpeedAhead 4D5A                        ??___flge 000B                        ??___wmul 0007  
                      ??_action 003C                        ??_goback 0034                 short_reverse@mL 0028  
               short_reverse@mR 002A                     __pdataBANK0 00FE                        ??_roundf 0047  
                      ??_strlen 0005                       ___fladd@a 0007                       ___fladd@b 0003  
                      ?_LED_OFF 0001                       ___fldiv@a 0015                       ___fldiv@b 0011  
                     ___flmul@a 002E                       ___flmul@b 002A                     __pbssCOMRAM 005A  
                     ___flsub@a 0017                       ___flsub@b 0013                   __pcstackBANK0 0060  
                 __pcstackBANK1 01B1                ___aodiv@dividend 0003                        ?_HighISR 0001  
        __end_of_reverse_square 524C                       _dtoa$2697 0030                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001C                       __pintcode 0008                        ?___aodiv 0003  
                      ?___fladd 0003                        ?___aomod 0003                        ?___fldiv 0011  
                      ?___awdiv 0009                ___aodiv@quotient 0015                        ?___flneg 0003  
                      ?___flmul 002A                        ?___flsub 0013                        ?___fltol 0072  
                   __pintcodelo 0018                 turnRight@i_1402 002C                  turnLeft@i_1379 002C  
          I2C_2_Master_Read@ack 0005            I2C_2_Master_Read@tmp 0006                        ?_compare 007A  
                   __smallconst 0E00               _I2C_2_Master_Idle 542A               _I2C_2_Master_Init 5400  
             _I2C_2_Master_Read 5186               _I2C_2_Master_Stop 55D6          toggle_light@toggletime 0003  
                  _RxBufReadCnt 00FC                        ?_lroundf 0076              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0013  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0003                        ?_sprintf 0060  
             _sendStringSerial4 53A2           _color_data_collection 3744             ??_I2C_2_Master_Idle 0003  
           ??_I2C_2_Master_Init 0003             ??_I2C_2_Master_Read 0004                  ___wmul@product 0007  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0004                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0028  
                      _PIE0bits 000E29              ?_sendStringSerial4 0004                        _PIE4bits 000E2D  
                      i1u543_20 0032                        i1u543_21 002E                     turnRight@mL 0022  
                   turnRight@mR 0024                        _PIR0bits 000E33                        _PIR4bits 000E37  
              ?_initDCmotorsPWM 0003               ??_sendCharSerial4 0003                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0006                        _SSP2STAT 000ED8                     _array_index 005A  
                     _vfpfcnvrt 3AB6       __end_of_I2C_2_Master_Idle 5452            __end_of_toggle_light 32DE  
     __end_of_I2C_2_Master_Init 542A       __end_of_I2C_2_Master_Read 51C8               ___wmul@multiplier 0003  
     __end_of_I2C_2_Master_Stop 55E0                    setMotorPWM@m 0011     I2C_2_Master_Write@data_byte 0004  
          __end_of_verify_color 4CC6                       main@white 01B2               ??_color_read_Blue 0009  
                     _stop_move 00F5                   detect_color@m 0080                   detect_color@w 0082  
                  _TxBufReadCnt 00FB                       _turnRight 4236                 _calibrate_white 3C6A  
     __end_of_sendStringSerial4 53D2                   ??_short_burst 0026   __end_of_I2C_2_Master_RepStart 55F4  
            color_read_Blue@tmp 000C             __end_of_setMotorPWM 3744                      roundf@F527 018C  
              _distance_measure 469A                    ??_initUSART4 0003                        __Hrparam 0000  
                    vfprintf@ap 0056                        __Lrparam 0000                      vfprintf@fp 0052  
         __end_of_fullSpeedBack 4B5E                    __Lsmallconst 0E00            compare@value2compare 007C  
                    ?_vfpfcnvrt 0042                    ??_read_color 0010                 ___aodiv@divisor 000B  
               ___aodiv@counter 0013                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 003E                      sprintf@fmt 0062                        ___xxtofl 3902  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5556  
                    ?_turnRight 0022                        __ptext10 469A                        __ptext11 52C6  
                      __ptext20 26B0                        __ptext12 22FE                        __ptext21 3744  
                      __ptext13 50BA                        __ptext30 5338                        __ptext22 4E2C  
                      __ptext14 1A14                        __ptext31 5100                        __ptext23 53D2  
                      __ptext15 5300                        __ptext40 5478                        __ptext32 484A  
                      __ptext24 4D5A                        __ptext16 1ED4                        __ptext41 5400  
                      __ptext33 55FA                        __ptext25 4EE2                        __ptext17 4596  
                      __ptext50 55EA                        __ptext42 3C6A                        __ptext34 524C  
                      __ptext26 4DCA                        __ptext18 448E                        __ptext51 5186  
                      __ptext43 4F34                        __ptext35 3F98                        __ptext27 3AB6  
                      __ptext19 3902                        __ptext60 32DE                        __ptext52 542A  
                      __ptext44 4F84                        __ptext36 3E10                        __ptext28 2D4E  
                      __ptext61 4236                        __ptext53 5498                        __ptext45 4FD4  
                      __ptext37 53A2                        __ptext29 4914                        __ptext70 5556  
                      __ptext62 4362                        __ptext54 54B8                        __ptext46 5024  
                      __ptext38 5590                        __ptext71 5518                        __ptext63 520A  
                      __ptext55 54D8                        __ptext47 55BE                        __ptext39 536E  
                      __ptext72 55CA                        __ptext64 4A9E                        __ptext56 54F8  
                      __ptext48 55D6                        __ptext65 4B5E                        __ptext57 55A8  
                      __ptext49 55E0                        __ptext66 4CC6                        __ptext58 2A4A  
                      __ptext67 3570                        __ptext59 51C8                        __ptext68 5452  
                      __ptext69 49DA                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 00DF                  turnRight@delay 002E                   turnLeft@delay 002E  
                      action@mL 0038                        action@mR 003A                      turnLeft@mL 0022  
                    turnLeft@mR 0024              __end_of_read_color 4E8A                        _pin_init 5574  
                    turnRight@i 002A             __end_of_short_burst 4EE2                        isa$xinst 000000  
          distance_measure@stop 008A                      _RC4STAbits 000EE7                        int$flags 005C  
                   _SENSITIVITY 00FF                        goback@mL 0030                        goback@mR 0032  
                      _vfprintf 4DCA                        _turnLeft 4362                ___aomod@dividend 0003  
       __end_of_calibrate_white 3E10                      _INTCONbits 000FF2                     _setMotorPWM 3570  
                 ?_detect_color 0080                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0003                ??_fullSpeedAhead 0020                       turnLeft@i 002A  
              reverse_square@mL 0028                reverse_square@mR 002A                        lroundf@x 0076  
      ??_initDCmotors_parameter 0007                   _short_reverse 51C8                 ___aomod@divisor 000B  
                   ??_vfpfcnvrt 0048                 ___aomod@counter 0013                _color_click_init 536E  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$3059 0099  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 007A  
            distance_measure@mR 007C                  ??_detect_color 0052                     ??_turnRight 0027  
                 ___fladd@signs 000F                ??_reverse_square 002C                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0014                 _sendCharSerial4 5590                     _short_burst 4E8A  
                  ___fladd@aexp 0010                    ___fladd@bexp 0011                    _toggle_light 3032  
                  ___aomod@sign 0014                    _verify_color 4C1A                     _roundf$3061 0066  
                   _roundf$3062 0060                   _color_display 4D5A                 main@stop_signal 01B1  
