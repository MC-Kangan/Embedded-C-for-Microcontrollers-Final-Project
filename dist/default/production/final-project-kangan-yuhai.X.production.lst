

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 20:53:26 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99  0000                     
   100                           ; Version 2.35
   101                           ; Generated 05/05/2021 GMT
   102                           ; 
   103                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK0
   137  005984                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _SENSITIVITY
   141  005984  0A                 	db	10
   142                           
   143                           ;initializer for _CALIBRATION_135
   144  005985  0F                 	db	15
   145                           
   146                           	psect	idataBANK2
   147  005988                     __pidataBANK2:
   148                           	callstack 0
   149                           
   150                           ;initializer for _CALIBRATION_180
   151  005988  0A                 	db	10
   152                           
   153                           	psect	smallconst
   154  000E00                     __psmallconst:
   155                           	callstack 0
   156  000E00  00                 	db	0
   157  000E01  0000               	dw	0
   158  000E03  4B00               	dw	19200
   159  000E05                     __end_of_toint:
   160                           	callstack 0
   161  0000                     _TX4REG	set	3812
   162  0000                     _RC4STAbits	set	3815
   163  0000                     _SP4BRGH	set	3814
   164  0000                     _LATEbits	set	3965
   165  0000                     _TRISGbits	set	3975
   166  0000                     _TRISEbits	set	3973
   167  0000                     _LATGbits	set	3967
   168  0000                     _LATFbits	set	3966
   169  0000                     _TRISFbits	set	3974
   170  0000                     _SSP2CON2bits	set	3802
   171  0000                     _LATG	set	3967
   172  0000                     _LATE	set	3965
   173  0000                     _RX4PPS	set	3605
   174  0000                     _SSP2CLKPPS	set	3612
   175  0000                     _SSP2DATPPS	set	3613
   176  0000                     _ANSELDbits	set	3751
   177  0000                     _SSP2ADD	set	3798
   178  0000                     _SSP2CON1bits	set	3801
   179  0000                     _LATAbits	set	3961
   180  0000                     _LATDbits	set	3964
   181  0000                     _LATHbits	set	3968
   182  0000                     _TRISDbits	set	3972
   183  0000                     _TRISHbits	set	3976
   184  0000                     _PORTFbits	set	3982
   185  0000                     _T2PR	set	4028
   186  0000                     _T2CONbits	set	4029
   187  0000                     _PWM7DCH	set	4000
   188  0000                     _PWM6DCH	set	4003
   189  0000                     _TRISAbits	set	3969
   190  0000                     _TRISCbits	set	3971
   191  0000                     _LATCbits	set	3963
   192  0000                     _RC4REG	set	3811
   193  0000                     _SP4BRGL	set	3813
   194  0000                     _TX4STAbits	set	3816
   195  0000                     _BAUD4CONbits	set	3817
   196  0000                     _SSP2CON2	set	3802
   197  0000                     _SSP2STAT	set	3800
   198  0000                     _ANSELFbits	set	3764
   199  0000                     _SSP2BUF	set	3797
   200  0000                     _PIE0bits	set	3625
   201  0000                     _PIE4bits	set	3629
   202  0000                     _PIR4bits	set	3639
   203  0000                     _RC0PPS	set	3682
   204  0000                     _RC7PPS	set	3689
   205  0000                     _RD5PPS	set	3695
   206  0000                     _RE2PPS	set	3700
   207  0000                     _RD6PPS	set	3696
   208  0000                     _TMR0L	set	4051
   209  0000                     _TMR0H	set	4052
   210  0000                     _T0CON0bits	set	4053
   211  0000                     _T2CLKCONbits	set	4031
   212  0000                     _T2HLTbits	set	4030
   213  0000                     _PWM6CONbits	set	4004
   214  0000                     _PWM7CONbits	set	4001
   215  0000                     _PIR0bits	set	3635
   216  0000                     _T0CON1bits	set	4054
   217  0000                     _INTCONbits	set	4082
   218  000E05                     STR_6:
   219                           
   220                           ; BSR set to: 14
   221  000E05  67                 	db	103	;'g'
   222  000E06  6F                 	db	111	;'o'
   223  000E07  20                 	db	32
   224  000E08  62                 	db	98	;'b'
   225  000E09  61                 	db	97	;'a'
   226  000E0A  63                 	db	99	;'c'
   227  000E0B  6B                 	db	107	;'k'
   228  000E0C  20                 	db	32
   229  000E0D  66                 	db	102	;'f'
   230  000E0E  69                 	db	105	;'i'
   231  000E0F  6E                 	db	110	;'n'
   232  000E10  69                 	db	105	;'i'
   233  000E11  73                 	db	115	;'s'
   234  000E12  68                 	db	104	;'h'
   235  000E13  0D                 	db	13
   236  000E14  0A                 	db	10
   237  000E15  00                 	db	0
   238  000E16                     STR_1:
   239                           
   240                           ; BSR set to: 14
   241  000E16  25                 	db	37
   242  000E17  64                 	db	100	;'d'
   243  000E18  09                 	db	9
   244  000E19  25                 	db	37
   245  000E1A  64                 	db	100	;'d'
   246  000E1B  09                 	db	9
   247  000E1C  25                 	db	37
   248  000E1D  64                 	db	100	;'d'
   249  000E1E  09                 	db	9
   250  000E1F  25                 	db	37
   251  000E20  64                 	db	100	;'d'
   252  000E21  0D                 	db	13
   253  000E22  0A                 	db	10
   254  000E23  00                 	db	0
   255  000E24                     STR_3:
   256                           
   257                           ; BSR set to: 14
   258  000E24  72                 	db	114	;'r'
   259  000E25  65                 	db	101	;'e'
   260  000E26  73                 	db	115	;'s'
   261  000E27  75                 	db	117	;'u'
   262  000E28  6C                 	db	108	;'l'
   263  000E29  74                 	db	116	;'t'
   264  000E2A  3A                 	db	58	;':'
   265  000E2B  20                 	db	32
   266  000E2C  25                 	db	37
   267  000E2D  64                 	db	100	;'d'
   268  000E2E  0D                 	db	13
   269  000E2F  0A                 	db	10
   270  000E30  00                 	db	0
   271  000E31                     STR_4:
   272                           
   273                           ; BSR set to: 14
   274  000E31  67                 	db	103	;'g'
   275  000E32  6F                 	db	111	;'o'
   276  000E33  20                 	db	32
   277  000E34  62                 	db	98	;'b'
   278  000E35  61                 	db	97	;'a'
   279  000E36  63                 	db	99	;'c'
   280  000E37  6B                 	db	107	;'k'
   281  000E38  0D                 	db	13
   282  000E39  0A                 	db	10
   283  000E3A  00                 	db	0
   284  000E3B                     STR_5:
   285                           
   286                           ; BSR set to: 14
   287  000E3B  72                 	db	114	;'r'
   288  000E3C  65                 	db	101	;'e'
   289  000E3D  70                 	db	112	;'p'
   290  000E3E  65                 	db	101	;'e'
   291  000E3F  61                 	db	97	;'a'
   292  000E40  74                 	db	116	;'t'
   293  000E41  0D                 	db	13
   294  000E42  0A                 	db	10
   295  000E43  00                 	db	0
   296  000E44  00                 	db	0	; dummy byte at the end
   297  0000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301  0051CE                     __pcinit:
   302                           	callstack 0
   303  0051CE                     start_initialization:
   304                           	callstack 0
   305  0051CE                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK2 (1 bytes)
   309                           ; load TBLPTR registers with __pidataBANK2
   310  0051CE  0E88               	movlw	low __pidataBANK2
   311  0051D0  6EF6               	movwf	tblptrl,c
   312  0051D2  0E59               	movlw	high __pidataBANK2
   313  0051D4  6EF7               	movwf	tblptrh,c
   314  0051D6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   315  0051D8  6EF8               	movwf	tblptru,c
   316  0051DA  0009               	tblrd		*+	;fetch initializer
   317  0051DC  CFF5 F2ED          	movff	tablat,__pdataBANK2
   318                           
   319                           ; Initialize objects allocated to BANK0 (2 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321  0051E0  0E84               	movlw	low __pidataBANK0
   322  0051E2  6EF6               	movwf	tblptrl,c
   323  0051E4  0E59               	movlw	high __pidataBANK0
   324  0051E6  6EF7               	movwf	tblptrh,c
   325  0051E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326  0051EA  6EF8               	movwf	tblptru,c
   327  0051EC  0009               	tblrd		*+	;fetch initializer
   328  0051EE  CFF5 F0FE          	movff	tablat,__pdataBANK0
   329  0051F2  0009               	tblrd		*+	;fetch initializer
   330  0051F4  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   331                           
   332                           ; Clear objects allocated to BANK3 (152 bytes)
   333  0051F8  EE03  F000         	lfsr	0,__pbssBANK3
   334  0051FC  0E98               	movlw	152
   335  0051FE                     clear_0:
   336  0051FE  6AEE               	clrf	postinc0,c
   337  005200  06E8               	decf	wreg,f,c
   338  005202  E1FD               	bnz	clear_0
   339                           
   340                           ; Clear objects allocated to BANK2 (36 bytes)
   341  005204  EE02  F0C9         	lfsr	0,__pbssBANK2
   342  005208  0E24               	movlw	36
   343  00520A                     clear_1:
   344  00520A  6AEE               	clrf	postinc0,c
   345  00520C  06E8               	decf	wreg,f,c
   346  00520E  E1FD               	bnz	clear_1
   347                           
   348                           ; Clear objects allocated to BANK0 (8 bytes)
   349  005210  EE00  F0F6         	lfsr	0,__pbssBANK0
   350  005214  0E08               	movlw	8
   351  005216                     clear_2:
   352  005216  6AEE               	clrf	postinc0,c
   353  005218  06E8               	decf	wreg,f,c
   354  00521A  E1FD               	bnz	clear_2
   355  00521C                     end_of_initialization:
   356                           	callstack 0
   357  00521C                     __end_of__initialization:
   358                           	callstack 0
   359  00521C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   360  00521E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   361  005220  0E00               	movlw	low (__Lsmallconst shr (0+16))
   362  005222  6EF8               	movwf	tblptru,c
   363  005224  0E0E               	movlw	high __Lsmallconst
   364  005226  6EF7               	movwf	tblptrh,c
   365  005228  0100               	movlb	0
   366  00522A  EF80  F028         	goto	_main	;jump to C main() function
   367                           
   368                           	psect	bssBANK0
   369  0000F6                     __pbssBANK0:
   370                           	callstack 0
   371  0000F6                     _flags:
   372                           	callstack 0
   373  0000F6                     	ds	2
   374  0000F8                     _color:
   375                           	callstack 0
   376  0000F8                     	ds	1
   377  0000F9                     _array_index:
   378                           	callstack 0
   379  0000F9                     	ds	1
   380  0000FA                     _TxBufReadCnt:
   381                           	callstack 0
   382  0000FA                     	ds	1
   383  0000FB                     _TxBufWriteCnt:
   384                           	callstack 0
   385  0000FB                     	ds	1
   386  0000FC                     _RxBufReadCnt:
   387                           	callstack 0
   388  0000FC                     	ds	1
   389  0000FD                     _RxBufWriteCnt:
   390                           	callstack 0
   391  0000FD                     	ds	1
   392                           
   393                           	psect	dataBANK0
   394  0000FE                     __pdataBANK0:
   395                           	callstack 0
   396  0000FE                     _SENSITIVITY:
   397                           	callstack 0
   398  0000FE                     	ds	1
   399  0000FF                     _CALIBRATION_135:
   400                           	callstack 0
   401  0000FF                     	ds	1
   402                           
   403                           	psect	bssBANK2
   404  0002C9                     __pbssBANK2:
   405                           	callstack 0
   406  0002C9                     _motorR:
   407                           	callstack 0
   408  0002C9                     	ds	10
   409  0002D3                     _motorL:
   410                           	callstack 0
   411  0002D3                     	ds	10
   412  0002DD                     roundf@F527:
   413                           	callstack 0
   414  0002DD                     	ds	4
   415  0002E1                     _nout:
   416                           	callstack 0
   417  0002E1                     	ds	2
   418  0002E3                     _width:
   419                           	callstack 0
   420  0002E3                     	ds	2
   421  0002E5                     _prec:
   422                           	callstack 0
   423  0002E5                     	ds	2
   424  0002E7                     _stop_move:
   425                           	callstack 0
   426  0002E7                     	ds	2
   427  0002E9                     _start_move:
   428                           	callstack 0
   429  0002E9                     	ds	2
   430  0002EB                     _second:
   431                           	callstack 0
   432  0002EB                     	ds	2
   433                           
   434                           	psect	dataBANK2
   435  0002ED                     __pdataBANK2:
   436                           	callstack 0
   437  0002ED                     _CALIBRATION_180:
   438                           	callstack 0
   439  0002ED                     	ds	1
   440                           
   441                           	psect	bssBANK3
   442  000300                     __pbssBANK3:
   443                           	callstack 0
   444  000300                     _EUSART4TXbuf:
   445                           	callstack 0
   446  000300                     	ds	60
   447  00033C                     _memory:
   448                           	callstack 0
   449  00033C                     	ds	40
   450  000364                     _EUSART4RXbuf:
   451                           	callstack 0
   452  000364                     	ds	20
   453  000378                     _dbuf:
   454                           	callstack 0
   455  000378                     	ds	32
   456                           
   457                           	psect	cstackBANK2
   458  000200                     __pcstackBANK2:
   459                           	callstack 0
   460  000200                     goback@buf2:
   461                           	callstack 0
   462                           
   463                           ; 100 bytes @ 0x0
   464  000200                     	ds	100
   465  000264                     action@buf:
   466                           	callstack 0
   467                           
   468                           ; 100 bytes @ 0x64
   469  000264                     	ds	100
   470  0002C8                     action@color:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xC8
   474  0002C8                     	ds	1
   475                           
   476                           	psect	cstackBANK1
   477  000100                     __pcstackBANK1:
   478                           	callstack 0
   479  000100                     goback@buf:
   480                           	callstack 0
   481                           
   482                           ; 100 bytes @ 0x0
   483  000100                     	ds	100
   484  000164                     goback@buf3:
   485                           	callstack 0
   486                           
   487                           ; 100 bytes @ 0x64
   488  000164                     	ds	100
   489  0001C8                     main@rgb:
   490                           	callstack 0
   491                           
   492                           ; 8 bytes @ 0xC8
   493  0001C8                     	ds	8
   494  0001D0                     main@white:
   495                           	callstack 0
   496                           
   497                           ; 28 bytes @ 0xD0
   498  0001D0                     	ds	28
   499  0001EC                     main@motorL:
   500                           	callstack 0
   501                           
   502                           ; 10 bytes @ 0xEC
   503  0001EC                     	ds	10
   504  0001F6                     main@motorR:
   505                           	callstack 0
   506                           
   507                           ; 10 bytes @ 0xF6
   508  0001F6                     	ds	10
   509                           
   510                           	psect	cstackBANK0
   511  000060                     __pcstackBANK0:
   512                           	callstack 0
   513  000060                     ??___fltol:
   514  000060                     ?_sprintf:
   515                           	callstack 0
   516  000060                     sprintf@s:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  000060                     	ds	2
   521  000062                     sprintf@fmt:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  000062                     	ds	2
   526  000064                     ___fltol@sign1:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x4
   530  000064                     	ds	1
   531  000065                     ___fltol@exp1:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x5
   535  000065                     	ds	1
   536  000066                     ?_lroundf:
   537                           	callstack 0
   538  000066                     lroundf@x:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x6
   542  000066                     	ds	4
   543  00006A                     ?_amb_light_measure:
   544                           	callstack 0
   545  00006A                     compare@lower:
   546                           	callstack 0
   547  00006A                     amb_light_measure@amb:
   548                           	callstack 0
   549  00006A                     distance_measure@mL:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0xA
   553  00006A                     	ds	2
   554  00006C                     ??_amb_light_measure:
   555  00006C                     compare@value2compare:
   556                           	callstack 0
   557  00006C                     distance_measure@mR:
   558                           	callstack 0
   559  00006C                     sprintf@ap:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0xC
   563  00006C                     	ds	2
   564  00006E                     compare@upper:
   565                           	callstack 0
   566  00006E                     amb_light_measure@upper_bound:
   567                           	callstack 0
   568  00006E                     distance_measure@amb_light:
   569                           	callstack 0
   570  00006E                     sprintf@f:
   571                           	callstack 0
   572                           
   573                           ; 11 bytes @ 0xE
   574  00006E                     	ds	2
   575  000070                     ??_distance_measure:
   576  000070                     compare@result:
   577                           	callstack 0
   578  000070                     amb_light_measure@CC_amb_ave:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x10
   582  000070                     	ds	1
   583  000071                     detect_color@m:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x11
   587  000071                     	ds	1
   588  000072                     amb_light_measure@CC_amb_1:
   589                           	callstack 0
   590  000072                     distance_measure@CG_amb:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x12
   594  000072                     	ds	1
   595  000073                     detect_color@w:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x13
   599  000073                     	ds	1
   600  000074                     amb_light_measure@CC_amb_2:
   601                           	callstack 0
   602  000074                     _distance_measure$3276:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x14
   606  000074                     	ds	1
   607  000075                     ??_detect_color:
   608                           
   609                           ; 1 bytes @ 0x15
   610  000075                     	ds	1
   611  000076                     amb_light_measure@CC_amb_3:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x16
   615  000076                     	ds	2
   616  000078                     distance_measure@CC_amb:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x18
   620  000078                     	ds	1
   621  000079                     detect_color@RG:
   622                           	callstack 0
   623  000079                     color_display@buf:
   624                           	callstack 0
   625  000079                     color_predict@buf:
   626                           	callstack 0
   627                           
   628                           ; 100 bytes @ 0x19
   629  000079                     	ds	1
   630  00007A                     distance_measure@threshold:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x1A
   634  00007A                     	ds	1
   635  00007B                     detect_color@BC:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x1B
   639  00007B                     	ds	1
   640  00007C                     distance_measure@stop:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x1C
   644  00007C                     	ds	1
   645  00007D                     detect_color@GR:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x1D
   649  00007D                     	ds	2
   650  00007F                     detect_color@BB:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x1F
   654  00007F                     	ds	2
   655  000081                     detect_color@RB:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x21
   659  000081                     	ds	2
   660  000083                     detect_color@GB:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x23
   664  000083                     	ds	2
   665  000085                     detect_color@GG:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x25
   669  000085                     	ds	2
   670  000087                     detect_color@BR:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x27
   674  000087                     	ds	2
   675  000089                     detect_color@BG:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x29
   679  000089                     	ds	2
   680  00008B                     detect_color@color:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x2B
   684  00008B                     	ds	1
   685  00008C                     detect_color@RR:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x2C
   689  00008C                     	ds	2
   690  00008E                     _detect_color$3275:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x2E
   694  00008E                     	ds	4
   695  000092                     verify_color@m:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x32
   699  000092                     	ds	2
   700  000094                     verify_color@w:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x34
   704  000094                     	ds	2
   705  000096                     ??_verify_color:
   706                           
   707                           ; 1 bytes @ 0x36
   708  000096                     	ds	2
   709  000098                     verify_color@color2:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x38
   713  000098                     	ds	2
   714  00009A                     verify_color@color:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x3A
   718  00009A                     	ds	67
   719  0000DD                     color_predict@color:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x7D
   723  0000DD                     	ds	1
   724  0000DE                     color_data_collection@i:
   725                           	callstack 0
   726  0000DE                     goback@i:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x7E
   730  0000DE                     	ds	2
   731  0000E0                     color_data_collection@j:
   732                           	callstack 0
   733  0000E0                     action@mL:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x80
   737  0000E0                     	ds	2
   738  0000E2                     color_data_collection@k:
   739                           	callstack 0
   740  0000E2                     action@mR:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x82
   744  0000E2                     	ds	2
   745  0000E4                     color_data_collection@x:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x84
   749  0000E4                     	ds	2
   750  0000E6                     test_function@m:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x86
   754  0000E6                     	ds	2
   755  0000E8                     test_function@w:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x88
   759  0000E8                     	ds	2
   760  0000EA                     test_function@mL:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x8A
   764  0000EA                     	ds	2
   765  0000EC                     test_function@mR:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x8C
   769  0000EC                     	ds	2
   770  0000EE                     ??_test_function:
   771                           
   772                           ; 1 bytes @ 0x8E
   773  0000EE                     	ds	2
   774  0000F0                     test_function@amb_light:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x90
   778  0000F0                     	ds	2
   779  0000F2                     test_function@complete:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x92
   783  0000F2                     	ds	1
   784  0000F3                     test_function@color:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x93
   788  0000F3                     	ds	1
   789  0000F4                     test_function@stop_signal:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x94
   793  0000F4                     	ds	1
   794  0000F5                     test_function@test_code:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x95
   798  0000F5                     	ds	1
   799                           
   800                           	psect	cstackCOMRAM
   801  000001                     __pcstackCOMRAM:
   802                           	callstack 0
   803  000001                     ??_LED_OFF:
   804  000001                     ??_LED_R:
   805  000001                     ??_LED_C:
   806  000001                     ??_LED_B:
   807  000001                     ??_LED_G:
   808  000001                     ??_I2C_2_Master_Idle:
   809  000001                     ?_strlen:
   810                           	callstack 0
   811  000001                     ?___wmul:
   812                           	callstack 0
   813  000001                     ?___fladd:
   814                           	callstack 0
   815  000001                     ?___flneg:
   816                           	callstack 0
   817  000001                     ?___xxtofl:
   818                           	callstack 0
   819  000001                     ?___aodiv:
   820                           	callstack 0
   821  000001                     ?___aomod:
   822                           	callstack 0
   823  000001                     toggle_light@toggletime:
   824                           	callstack 0
   825  000001                     sendCharSerial4@charToSend:
   826                           	callstack 0
   827  000001                     initDCmotorsPWM@PWMperiod:
   828                           	callstack 0
   829  000001                     initDCmotors_parameter@motorL:
   830                           	callstack 0
   831  000001                     ___wmul@multiplier:
   832                           	callstack 0
   833  000001                     fputc@c:
   834                           	callstack 0
   835  000001                     strlen@s:
   836                           	callstack 0
   837  000001                     ___flge@ff1:
   838                           	callstack 0
   839  000001                     ___flneg@f1:
   840                           	callstack 0
   841  000001                     ___fladd@b:
   842                           	callstack 0
   843  000001                     ___xxtofl@val:
   844                           	callstack 0
   845  000001                     ___aodiv@dividend:
   846                           	callstack 0
   847  000001                     ___aomod@dividend:
   848                           	callstack 0
   849                           
   850                           ; 8 bytes @ 0x0
   851  000001                     	ds	1
   852  000002                     ??_I2C_2_Master_Read:
   853  000002                     ??_toggle_light:
   854  000002                     I2C_2_Master_Write@data_byte:
   855                           	callstack 0
   856  000002                     sendStringSerial4@string:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     color_writetoaddr@value:
   862                           	callstack 0
   863  000003                     I2C_2_Master_Read@ack:
   864                           	callstack 0
   865  000003                     initDCmotors_parameter@motorR:
   866                           	callstack 0
   867  000003                     ___wmul@multiplicand:
   868                           	callstack 0
   869  000003                     fputc@fp:
   870                           	callstack 0
   871  000003                     strlen@a:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000003                     	ds	1
   876  000004                     toggle_light@i:
   877                           	callstack 0
   878  000004                     color_writetoaddr@address:
   879                           	callstack 0
   880  000004                     I2C_2_Master_Read@tmp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x3
   884  000004                     	ds	1
   885  000005                     ??_fputc:
   886  000005                     ??_color_click_init:
   887  000005                     ??___xxtofl:
   888  000005                     ?_color_read_Red:
   889                           	callstack 0
   890  000005                     ?_color_read_Blue:
   891                           	callstack 0
   892  000005                     ?_color_read_Green:
   893                           	callstack 0
   894  000005                     ?_color_read_Clear:
   895                           	callstack 0
   896  000005                     toggle_light@lightnumber:
   897                           	callstack 0
   898  000005                     ___wmul@product:
   899                           	callstack 0
   900  000005                     ___flge@ff2:
   901                           	callstack 0
   902  000005                     ___fladd@a:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x4
   906  000005                     	ds	2
   907  000007                     ??_color_read_Red:
   908  000007                     ??_color_read_Blue:
   909  000007                     ??_color_read_Green:
   910  000007                     ??_color_read_Clear:
   911  000007                     ?___awdiv:
   912                           	callstack 0
   913  000007                     ___awdiv@dividend:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x6
   917  000007                     	ds	2
   918  000009                     ??___fladd:
   919  000009                     ??___flge:
   920  000009                     ___xxtofl@sign:
   921                           	callstack 0
   922  000009                     ___awdiv@divisor:
   923                           	callstack 0
   924  000009                     ___aodiv@divisor:
   925                           	callstack 0
   926  000009                     ___aomod@divisor:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x8
   930  000009                     	ds	1
   931  00000A                     ___xxtofl@exp:
   932                           	callstack 0
   933  00000A                     color_read_Red@tmp:
   934                           	callstack 0
   935  00000A                     color_read_Blue@tmp:
   936                           	callstack 0
   937  00000A                     color_read_Green@tmp:
   938                           	callstack 0
   939  00000A                     color_read_Clear@tmp:
   940                           	callstack 0
   941  00000A                     fputs@s:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x9
   945  00000A                     	ds	1
   946  00000B                     ___awdiv@counter:
   947                           	callstack 0
   948  00000B                     ___xxtofl@arg:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0xA
   952  00000B                     	ds	1
   953  00000C                     ___awdiv@sign:
   954                           	callstack 0
   955  00000C                     read_color@m:
   956                           	callstack 0
   957  00000C                     calibrate_white@w:
   958                           	callstack 0
   959  00000C                     fputs@fp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xB
   963  00000C                     	ds	1
   964  00000D                     ___fladd@signs:
   965                           	callstack 0
   966  00000D                     ___awdiv@quotient:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xC
   970  00000D                     	ds	1
   971  00000E                     ??_calibrate_white:
   972  00000E                     ___fladd@aexp:
   973                           	callstack 0
   974  00000E                     fputs@c:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0xD
   978  00000E                     	ds	1
   979  00000F                     ?___fldiv:
   980                           	callstack 0
   981  00000F                     ___fladd@bexp:
   982                           	callstack 0
   983  00000F                     setMotorPWM@m:
   984                           	callstack 0
   985  00000F                     fputs@i:
   986                           	callstack 0
   987  00000F                     ___fldiv@b:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0xE
   991  00000F                     	ds	1
   992  000010                     ___fladd@grs:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0xF
   996  000010                     	ds	1
   997  000011                     ??_setMotorPWM:
   998  000011                     ?_pad:
   999                           	callstack 0
  1000  000011                     ?___flsub:
  1001                           	callstack 0
  1002  000011                     ___aodiv@counter:
  1003                           	callstack 0
  1004  000011                     ___aomod@counter:
  1005                           	callstack 0
  1006  000011                     pad@fp:
  1007                           	callstack 0
  1008  000011                     ___flsub@b:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x10
  1012  000011                     	ds	1
  1013  000012                     ___aodiv@sign:
  1014                           	callstack 0
  1015  000012                     ___aomod@sign:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x11
  1019  000012                     	ds	1
  1020  000013                     ?_abs:
  1021                           	callstack 0
  1022  000013                     pad@buf:
  1023                           	callstack 0
  1024  000013                     abs@a:
  1025                           	callstack 0
  1026  000013                     ___fldiv@a:
  1027                           	callstack 0
  1028  000013                     ___aodiv@quotient:
  1029                           	callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x12
  1032  000013                     	ds	2
  1033  000015                     ??_abs:
  1034  000015                     pad@p:
  1035                           	callstack 0
  1036  000015                     ___flsub@a:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x14
  1040  000015                     	ds	2
  1041  000017                     ??___fldiv:
  1042  000017                     ??_pad:
  1043                           
  1044                           ; 1 bytes @ 0x16
  1045  000017                     	ds	1
  1046  000018                     setMotorPWM@PWMduty:
  1047                           	callstack 0
  1048  000018                     pad@i:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x17
  1052  000018                     	ds	1
  1053  000019                     
  1054                           ; 1 bytes @ 0x18
  1055  000019                     	ds	1
  1056  00001A                     stop@mL:
  1057                           	callstack 0
  1058  00001A                     fullSpeedAhead@mL:
  1059                           	callstack 0
  1060  00001A                     pad@w:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x19
  1064  00001A                     	ds	1
  1065  00001B                     ___fldiv@rem:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x1A
  1069  00001B                     	ds	1
  1070  00001C                     ?_dtoa:
  1071                           	callstack 0
  1072  00001C                     stop@mR:
  1073                           	callstack 0
  1074  00001C                     fullSpeedAhead@mR:
  1075                           	callstack 0
  1076  00001C                     dtoa@fp:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x1B
  1080  00001C                     	ds	2
  1081  00001E                     ??_stop:
  1082  00001E                     ??_fullSpeedAhead:
  1083  00001E                     dtoa@d:
  1084                           	callstack 0
  1085                           
  1086                           ; 8 bytes @ 0x1D
  1087  00001E                     	ds	1
  1088  00001F                     ___fldiv@sign:
  1089                           	callstack 0
  1090  00001F                     short_burst_back@mL:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x1E
  1094  00001F                     	ds	1
  1095  000020                     turnLeft@mL:
  1096                           	callstack 0
  1097  000020                     turnRight@mL:
  1098                           	callstack 0
  1099  000020                     fullSpeedBack@mL:
  1100                           	callstack 0
  1101  000020                     ___fldiv@new_exp:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x1F
  1105  000020                     	ds	1
  1106  000021                     short_burst_back@mR:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x20
  1110  000021                     	ds	1
  1111  000022                     turnLeft@mR:
  1112                           	callstack 0
  1113  000022                     turnRight@mR:
  1114                           	callstack 0
  1115  000022                     fullSpeedBack@mR:
  1116                           	callstack 0
  1117  000022                     ___fldiv@grs:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x21
  1121  000022                     	ds	1
  1122  000023                     ??_short_burst_back:
  1123                           
  1124                           ; 1 bytes @ 0x22
  1125  000023                     	ds	1
  1126  000024                     ??_fullSpeedBack:
  1127  000024                     turnLeft@angle_left:
  1128                           	callstack 0
  1129  000024                     turnRight@angle_right:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x23
  1133  000024                     	ds	1
  1134  000025                     ??_turnLeft:
  1135  000025                     ??_turnRight:
  1136                           
  1137                           ; 1 bytes @ 0x24
  1138  000025                     	ds	1
  1139  000026                     ??_dtoa:
  1140  000026                     ___fldiv@bexp:
  1141                           	callstack 0
  1142  000026                     turnLeft@delay_135:
  1143                           	callstack 0
  1144  000026                     turnRight@delay_135:
  1145                           	callstack 0
  1146  000026                     short_reverse@mL:
  1147                           	callstack 0
  1148  000026                     reverse_square@mL:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x25
  1152  000026                     	ds	1
  1153  000027                     ___fldiv@aexp:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x26
  1157  000027                     	ds	1
  1158  000028                     ?___flmul:
  1159                           	callstack 0
  1160  000028                     turnLeft@delay_180:
  1161                           	callstack 0
  1162  000028                     turnRight@delay_180:
  1163                           	callstack 0
  1164  000028                     short_reverse@mR:
  1165                           	callstack 0
  1166  000028                     reverse_square@mR:
  1167                           	callstack 0
  1168  000028                     ___flmul@b:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x27
  1172  000028                     	ds	2
  1173  00002A                     ??_short_reverse:
  1174  00002A                     ??_reverse_square:
  1175  00002A                     turnLeft@i:
  1176                           	callstack 0
  1177  00002A                     turnRight@i:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x29
  1181  00002A                     	ds	2
  1182  00002C                     turnLeft@i_1332:
  1183                           	callstack 0
  1184  00002C                     turnRight@i_1357:
  1185                           	callstack 0
  1186  00002C                     ___flmul@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x2B
  1190  00002C                     	ds	2
  1191  00002E                     turnLeft@i_1333:
  1192                           	callstack 0
  1193  00002E                     turnRight@i_1358:
  1194                           	callstack 0
  1195  00002E                     _dtoa$2910:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2D
  1199  00002E                     	ds	2
  1200  000030                     ??___flmul:
  1201  000030                     turnLeft@delay:
  1202                           	callstack 0
  1203  000030                     turnRight@delay:
  1204                           	callstack 0
  1205  000030                     dtoa@p:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x2F
  1209  000030                     	ds	2
  1210  000032                     dtoa@w:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x31
  1214  000032                     	ds	2
  1215  000034                     ___flmul@sign:
  1216                           	callstack 0
  1217  000034                     dtoa@s:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x33
  1221  000034                     	ds	1
  1222  000035                     ___flmul@grs:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x34
  1226  000035                     	ds	1
  1227  000036                     dtoa@n:
  1228                           	callstack 0
  1229                           
  1230                           ; 8 bytes @ 0x35
  1231  000036                     	ds	3
  1232  000039                     ___flmul@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x38
  1236  000039                     	ds	1
  1237  00003A                     ___flmul@bexp:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x39
  1241  00003A                     	ds	1
  1242  00003B                     ___flmul@prod:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x3A
  1246  00003B                     	ds	3
  1247  00003E                     dtoa@i:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x3D
  1251  00003E                     	ds	1
  1252  00003F                     ___flmul@temp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x3E
  1256  00003F                     	ds	1
  1257  000040                     ?_vfpfcnvrt:
  1258                           	callstack 0
  1259  000040                     vfpfcnvrt@fp:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x3F
  1263  000040                     	ds	1
  1264  000041                     ?_roundf:
  1265                           	callstack 0
  1266  000041                     roundf@x:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x40
  1270  000041                     	ds	1
  1271  000042                     vfpfcnvrt@fmt:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x41
  1275  000042                     	ds	2
  1276  000044                     vfpfcnvrt@ap:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x43
  1280  000044                     	ds	1
  1281  000045                     ??_roundf:
  1282                           
  1283                           ; 1 bytes @ 0x44
  1284  000045                     	ds	1
  1285  000046                     ??_vfpfcnvrt:
  1286                           
  1287                           ; 1 bytes @ 0x45
  1288  000046                     	ds	2
  1289  000048                     vfpfcnvrt@ll:
  1290                           	callstack 0
  1291                           
  1292                           ; 8 bytes @ 0x47
  1293  000048                     	ds	1
  1294  000049                     _roundf$3278:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x48
  1298  000049                     	ds	4
  1299  00004D                     roundf@e:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x4C
  1303  00004D                     	ds	2
  1304  00004F                     _roundf$3277:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x4E
  1308  00004F                     	ds	1
  1309  000050                     ?_vfprintf:
  1310                           	callstack 0
  1311  000050                     vfprintf@fp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x4F
  1315  000050                     	ds	2
  1316  000052                     vfprintf@fmt:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x51
  1320  000052                     	ds	1
  1321  000053                     roundf@u:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x52
  1325  000053                     	ds	1
  1326  000054                     vfprintf@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x53
  1330  000054                     	ds	2
  1331  000056                     vfprintf@cfmt:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x55
  1335  000056                     	ds	1
  1336  000057                     roundf@y:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x56
  1340  000057                     	ds	1
  1341  000058                     color_display@m:
  1342                           	callstack 0
  1343  000058                     goback@mL:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x57
  1347  000058                     	ds	2
  1348  00005A                     color_data_collection@m:
  1349                           	callstack 0
  1350  00005A                     goback@mR:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x59
  1354  00005A                     	ds	1
  1355  00005B                     ?___fltol:
  1356                           	callstack 0
  1357  00005B                     ___fltol@f1:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x5A
  1361  00005B                     	ds	1
  1362  00005C                     ??_goback:
  1363  00005C                     ??_color_data_collection:
  1364                           
  1365                           ; 1 bytes @ 0x5B
  1366  00005C                     	ds	2
  1367  00005E                     
  1368                           ; 1 bytes @ 0x5D
  1369  00005E                     	ds	1
  1370  00005F                     
  1371                           ; 1 bytes @ 0x5E
  1372 ;;
  1373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1374 ;;
  1375 ;; *************** function _main *****************
  1376 ;; Defined at:
  1377 ;;		line 29 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  white          28  208[BANK1 ] struct white_card
  1382 ;;  motorR         10  246[BANK1 ] struct DC_motor
  1383 ;;  motorL         10  236[BANK1 ] struct DC_motor
  1384 ;;  rgb             8  200[BANK1 ] struct color_rgb
  1385 ;;  amb             8    0        struct color_rgb
  1386 ;;  amb_light       2    0        unsigned int 
  1387 ;;  stop_signal     1    0        unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;Total ram usage:       56 bytes
  1402 ;; Hardware stack levels required when called: 12
  1403 ;; This function calls:
  1404 ;;		_I2C_2_Master_Init
  1405 ;;		_Interrupts_init
  1406 ;;		_Timer0_init
  1407 ;;		_action
  1408 ;;		_amb_light_measure
  1409 ;;		_buggylight_init
  1410 ;;		_calibrate_white
  1411 ;;		_color_click_init
  1412 ;;		_color_predict
  1413 ;;		_detect_color
  1414 ;;		_distance_measure
  1415 ;;		_fullSpeedAhead
  1416 ;;		_initDCmotorsPWM
  1417 ;;		_initDCmotors_parameter
  1418 ;;		_initUSART4
  1419 ;;		_pin_init
  1420 ;;		_short_burst_back
  1421 ;;		_stop
  1422 ;;		_test_function
  1423 ;;		_verify_color
  1424 ;; This function is called by:
  1425 ;;		Startup code after reset
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text0
  1430  005100                     __ptext0:
  1431                           	callstack 0
  1432  005100                     _main:
  1433                           	callstack 19
  1434  005100                     
  1435                           ;main.c: 32:     I2C_2_Master_Init();
  1436  005100  ECC6  F02B         	call	_I2C_2_Master_Init	;wreg free
  1437  005104                     
  1438                           ;main.c: 33:     color_click_init();
  1439  005104  EC67  F02B         	call	_color_click_init	;wreg free
  1440  005108                     
  1441                           ;main.c: 34:     initDCmotorsPWM(199);
  1442  005108  0E00               	movlw	0
  1443  00510A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1444  00510C  0EC7               	movlw	199
  1445  00510E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1446  005110  EC75  F02A         	call	_initDCmotorsPWM	;wreg free
  1447  005114                     
  1448                           ;main.c: 35:     buggylight_init();
  1449  005114  EC9C  F02C         	call	_buggylight_init	;wreg free
  1450  005118                     
  1451                           ;main.c: 36:     initUSART4();
  1452  005118  EC72  F02C         	call	_initUSART4	;wreg free
  1453  00511C                     
  1454                           ;main.c: 37:     Timer0_init();
  1455  00511C  EC81  F02C         	call	_Timer0_init	;wreg free
  1456  005120                     
  1457                           ;main.c: 38:     Interrupts_init();
  1458  005120  ECAD  F02C         	call	_Interrupts_init	;wreg free
  1459  005124                     
  1460                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1461  005124  EC52  F02C         	call	_pin_init	;wreg free
  1462  005128                     
  1463                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1464  005128  0EEC               	movlw	low main@motorL
  1465  00512A  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1466  00512C  0E01               	movlw	high main@motorL
  1467  00512E  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1468  005130  0EF6               	movlw	low main@motorR
  1469  005132  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1470  005134  0E01               	movlw	high main@motorR
  1471  005136  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1472  005138  EC0C  F025         	call	_initDCmotors_parameter	;wreg free
  1473  00513C                     l5605:
  1474                           
  1475                           ;main.c: 61:             test_function(3, &rgb, &white, &motorL, &motorR);
  1476  00513C  0EC8               	movlw	low main@rgb
  1477  00513E  0100               	movlb	0	; () banked
  1478  005140  6FE6               	movwf	test_function@m& (0+255),b
  1479  005142  0E01               	movlw	high main@rgb
  1480  005144  6FE7               	movwf	(test_function@m+1)& (0+255),b
  1481  005146  0ED0               	movlw	low main@white
  1482  005148  6FE8               	movwf	test_function@w& (0+255),b
  1483  00514A  0E01               	movlw	high main@white
  1484  00514C  6FE9               	movwf	(test_function@w+1)& (0+255),b
  1485  00514E  0EEC               	movlw	low main@motorL
  1486  005150  6FEA               	movwf	test_function@mL& (0+255),b
  1487  005152  0E01               	movlw	high main@motorL
  1488  005154  6FEB               	movwf	(test_function@mL+1)& (0+255),b
  1489  005156  0EF6               	movlw	low main@motorR
  1490  005158  6FEC               	movwf	test_function@mR& (0+255),b
  1491  00515A  0E01               	movlw	high main@motorR
  1492  00515C  6FED               	movwf	(test_function@mR+1)& (0+255),b
  1493  00515E  0E03               	movlw	3
  1494  005160  EC37  F021         	call	_test_function
  1495  005164  EF9E  F028         	goto	l5605
  1496  005168  EF14  F000         	goto	start
  1497  00516C                     __end_of_main:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _verify_color *****************
  1501 ;; Defined at:
  1502 ;;		line 364 in file "color.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  color           1    wreg     unsigned char 
  1505 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1506 ;;		 -> main@rgb(8), 
  1507 ;;  w               2   52[BANK0 ] PTR struct white_card
  1508 ;;		 -> main@white(28), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  color           1   58[BANK0 ] unsigned char 
  1511 ;;  color2          2   56[BANK0 ] unsigned int 
  1512 ;;  color3          2    0        unsigned int 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1526 ;;Total ram usage:        9 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 6
  1529 ;; This function calls:
  1530 ;;		_detect_color
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text1
  1537  005014                     __ptext1:
  1538                           	callstack 0
  1539  005014                     _verify_color:
  1540                           	callstack 24
  1541                           
  1542                           ;incstack = 0
  1543                           ;verify_color@color stored from wreg
  1544  005014  0100               	movlb	0	; () banked
  1545  005016  6F9A               	movwf	verify_color@color& (0+255),b
  1546  005018                     
  1547                           ;color.c: 364: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 365: {;color.c: 366:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1548  005018  0E05               	movlw	5
  1549  00501A  0100               	movlb	0	; () banked
  1550  00501C  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1551  00501E  0E0F               	movlw	15
  1552  005020  6F96               	movwf	??_verify_color& (0+255),b
  1553  005022  0EF1               	movlw	241
  1554  005024                     u5747:
  1555  005024  2EE8               	decfsz	wreg,f,c
  1556  005026  D7FE               	bra	u5747
  1557  005028  2F96               	decfsz	??_verify_color& (0+255),f,b
  1558  00502A  D7FC               	bra	u5747
  1559  00502C  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1560  00502E  D7FA               	bra	u5747
  1561  005030                     
  1562                           ;color.c: 367:     unsigned int color2, color3;;color.c: 368:     color2 = detect_color(
      +                          m,w);
  1563  005030  C092  F071         	movff	verify_color@m,detect_color@m
  1564  005034  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1565  005038  C094  F073         	movff	verify_color@w,detect_color@w
  1566  00503C  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1567  005040  EC23  F007         	call	_detect_color	;wreg free
  1568  005044  0100               	movlb	0	; () banked
  1569  005046  6F96               	movwf	??_verify_color& (0+255),b
  1570  005048  5196               	movf	??_verify_color& (0+255),w,b
  1571  00504A  6F98               	movwf	verify_color@color2& (0+255),b
  1572  00504C  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1573  00504E                     
  1574                           ; BSR set to: 0
  1575                           ;color.c: 369:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1576  00504E  0E05               	movlw	5
  1577  005050  0100               	movlb	0	; () banked
  1578  005052  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1579  005054  0E0F               	movlw	15
  1580  005056  6F96               	movwf	??_verify_color& (0+255),b
  1581  005058  0EF1               	movlw	241
  1582  00505A                     u5757:
  1583  00505A  2EE8               	decfsz	wreg,f,c
  1584  00505C  D7FE               	bra	u5757
  1585  00505E  2F96               	decfsz	??_verify_color& (0+255),f,b
  1586  005060  D7FC               	bra	u5757
  1587  005062  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1588  005064  D7FA               	bra	u5757
  1589  005066                     
  1590                           ;color.c: 371:     if (color == color2){return color;}
  1591  005066  0100               	movlb	0	; () banked
  1592  005068  519A               	movf	verify_color@color& (0+255),w,b
  1593  00506A  6F96               	movwf	??_verify_color& (0+255),b
  1594  00506C  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1595  00506E  5198               	movf	verify_color@color2& (0+255),w,b
  1596  005070  1996               	xorwf	??_verify_color& (0+255),w,b
  1597  005072  E107               	bnz	u5401
  1598  005074  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1599  005076  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1600  005078  A4D8               	btfss	status,2,c
  1601  00507A  EF41  F028         	goto	u5401
  1602  00507E  EF43  F028         	goto	u5400
  1603  005082                     u5401:
  1604  005082  EF46  F028         	goto	l5341
  1605  005086                     u5400:
  1606  005086                     
  1607                           ; BSR set to: 0
  1608  005086  519A               	movf	verify_color@color& (0+255),w,b
  1609  005088  EF47  F028         	goto	l168
  1610  00508C                     l5341:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;color.c: 374:         return color;}
  1614  00508C  0E00               	movlw	0
  1615  00508E                     l168:
  1616                           
  1617                           ; BSR set to: 0
  1618  00508E  0012               	return		;funcret
  1619  005090                     __end_of_verify_color:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _test_function *****************
  1623 ;; Defined at:
  1624 ;;		line 16 in file "test_and_calibration.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  test_code       1    wreg     unsigned char 
  1627 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1628 ;;		 -> main@rgb(8), 
  1629 ;;  w               2  136[BANK0 ] PTR struct white_card
  1630 ;;		 -> main@white(28), 
  1631 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1632 ;;		 -> main@motorL(10), 
  1633 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1634 ;;		 -> main@motorR(10), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  test_code       1  149[BANK0 ] unsigned char 
  1637 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1638 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1639 ;;  color           1  147[BANK0 ] unsigned char 
  1640 ;;  complete        1  146[BANK0 ] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:       16 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 11
  1657 ;; This function calls:
  1658 ;;		_LED_C
  1659 ;;		_amb_light_measure
  1660 ;;		_calibrate_white
  1661 ;;		_color_data_collection
  1662 ;;		_color_display
  1663 ;;		_color_predict
  1664 ;;		_detect_color
  1665 ;;		_distance_measure
  1666 ;;		_fullSpeedAhead
  1667 ;;		_read_color
  1668 ;;		_stop
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text2
  1675  00426E                     __ptext2:
  1676                           	callstack 0
  1677  00426E                     _test_function:
  1678                           	callstack 19
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;incstack = 0
  1682                           ;test_function@test_code stored from wreg
  1683  00426E  0100               	movlb	0	; () banked
  1684  004270  6FF5               	movwf	test_function@test_code& (0+255),b
  1685  004272                     
  1686                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1687  004272  0E00               	movlw	0
  1688  004274  0100               	movlb	0	; () banked
  1689  004276  6FF2               	movwf	test_function@complete& (0+255),b
  1690                           
  1691                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1692  004278  0E00               	movlw	0
  1693  00427A  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1694                           
  1695                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1696  00427C  0E00               	movlw	0
  1697  00427E  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1698  004280  0E00               	movlw	0
  1699  004282  6FF0               	movwf	test_function@amb_light& (0+255),b
  1700  004284                     
  1701                           ; BSR set to: 0
  1702                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1703  004284  0E02               	movlw	2
  1704  004286  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1705  004288  A4D8               	btfss	status,2,c
  1706  00428A  EF49  F021         	goto	u5431
  1707  00428E  EF4B  F021         	goto	u5430
  1708  004292                     u5431:
  1709  004292  EF51  F021         	goto	l5401
  1710  004296                     u5430:
  1711  004296                     
  1712                           ; BSR set to: 0
  1713  004296  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1714  00429A  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1715  00429E  EC3B  F01B         	call	_calibrate_white	;wreg free
  1716  0042A2                     l5401:
  1717                           
  1718                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1719  0042A2  0E04               	movlw	4
  1720  0042A4  0100               	movlb	0	; () banked
  1721  0042A6  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1722  0042A8  A4D8               	btfss	status,2,c
  1723  0042AA  EF59  F021         	goto	u5441
  1724  0042AE  EF5B  F021         	goto	u5440
  1725  0042B2                     u5441:
  1726  0042B2  EF65  F021         	goto	l5405
  1727  0042B6                     u5440:
  1728  0042B6                     
  1729                           ; BSR set to: 0
  1730  0042B6  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1731  0042BA  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1732  0042BE  EC72  F023         	call	_amb_light_measure	;wreg free
  1733  0042C2  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1734  0042C6  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1735  0042CA                     l5405:
  1736                           
  1737                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1738  0042CA  0100               	movlb	0	; () banked
  1739  0042CC  05F5               	decf	test_function@test_code& (0+255),w,b
  1740  0042CE  A4D8               	btfss	status,2,c
  1741  0042D0  EF6C  F021         	goto	u5451
  1742  0042D4  EF6E  F021         	goto	u5450
  1743  0042D8                     u5451:
  1744  0042D8  EF7C  F021         	goto	l5413
  1745  0042DC                     u5450:
  1746  0042DC                     
  1747                           ; BSR set to: 0
  1748                           ;test_and_calibration.c: 29:             LED_C();
  1749  0042DC  EC42  F02C         	call	_LED_C	;wreg free
  1750  0042E0                     
  1751                           ;test_and_calibration.c: 30:             read_color(m);
  1752  0042E0  C0E6  F00C         	movff	test_function@m,read_color@m
  1753  0042E4  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  1754  0042E8  EC17  F029         	call	_read_color	;wreg free
  1755  0042EC                     
  1756                           ;test_and_calibration.c: 31:             color_display(m);
  1757  0042EC  C0E6  F058         	movff	test_function@m,color_display@m
  1758  0042F0  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  1759  0042F4  EC48  F028         	call	_color_display	;wreg free
  1760  0042F8                     l5413:
  1761                           
  1762                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1763  0042F8  0E02               	movlw	2
  1764  0042FA  0100               	movlb	0	; () banked
  1765  0042FC  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1766  0042FE  A4D8               	btfss	status,2,c
  1767  004300  EF84  F021         	goto	u5461
  1768  004304  EF86  F021         	goto	u5460
  1769  004308                     u5461:
  1770  004308  EF95  F021         	goto	l5419
  1771  00430C                     u5460:
  1772  00430C                     
  1773                           ; BSR set to: 0
  1774                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1775  00430C  C0E6  F071         	movff	test_function@m,detect_color@m
  1776  004310  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  1777  004314  C0E8  F073         	movff	test_function@w,detect_color@w
  1778  004318  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  1779  00431C  EC23  F007         	call	_detect_color	;wreg free
  1780  004320  0100               	movlb	0	; () banked
  1781  004322  6FF3               	movwf	test_function@color& (0+255),b
  1782  004324                     
  1783                           ; BSR set to: 0
  1784                           ;test_and_calibration.c: 37:             color_predict(color);
  1785  004324  51F3               	movf	test_function@color& (0+255),w,b
  1786  004326  EC99  F02B         	call	_color_predict
  1787  00432A                     l5419:
  1788                           
  1789                           ;test_and_calibration.c: 40:         if (test_code == 3){
  1790  00432A  0E03               	movlw	3
  1791  00432C  0100               	movlb	0	; () banked
  1792  00432E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1793  004330  A4D8               	btfss	status,2,c
  1794  004332  EF9D  F021         	goto	u5471
  1795  004336  EF9F  F021         	goto	u5470
  1796  00433A                     u5471:
  1797  00433A  EFB2  F021         	goto	l5429
  1798  00433E                     u5470:
  1799  00433E  EFAA  F021         	goto	l5427
  1800  004342                     l5423:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  1804  004342  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  1805  004346  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1806  00434A  ECDE  F01E         	call	_color_data_collection	;wreg free
  1807  00434E                     
  1808                           ;test_and_calibration.c: 43:                 complete = 1;
  1809  00434E  0E01               	movlw	1
  1810  004350  0100               	movlb	0	; () banked
  1811  004352  6FF2               	movwf	test_function@complete& (0+255),b
  1812  004354                     l5427:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;test_and_calibration.c: 41:             while (complete == 0){
  1816  004354  51F2               	movf	test_function@complete& (0+255),w,b
  1817  004356  B4D8               	btfsc	status,2,c
  1818  004358  EFB0  F021         	goto	u5481
  1819  00435C  EFB2  F021         	goto	u5480
  1820  004360                     u5481:
  1821  004360  EFA1  F021         	goto	l5423
  1822  004364                     u5480:
  1823  004364                     l5429:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;test_and_calibration.c: 47:         if (test_code == 4){
  1827  004364  0E04               	movlw	4
  1828  004366  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1829  004368  A4D8               	btfss	status,2,c
  1830  00436A  EFB9  F021         	goto	u5491
  1831  00436E  EFBB  F021         	goto	u5490
  1832  004372                     u5491:
  1833  004372  EF65  F021         	goto	l5405
  1834  004376                     u5490:
  1835  004376  EFD7  F021         	goto	l5437
  1836  00437A                     l5433:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  1840  00437A  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1841  00437E  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1842  004382  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1843  004386  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1844  00438A  ECC0  F027         	call	_fullSpeedAhead	;wreg free
  1845  00438E                     
  1846                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1847  00438E  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  1848  004392  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1849  004396  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  1850  00439A  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1851  00439E  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1852  0043A2  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1853  0043A6  ECDA  F025         	call	_distance_measure	;wreg free
  1854  0043AA  0100               	movlb	0	; () banked
  1855  0043AC  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1856  0043AE                     l5437:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  1860  0043AE  51F4               	movf	test_function@stop_signal& (0+255),w,b
  1861  0043B0  B4D8               	btfsc	status,2,c
  1862  0043B2  EFDD  F021         	goto	u5501
  1863  0043B6  EFDF  F021         	goto	u5500
  1864  0043BA                     u5501:
  1865  0043BA  EFBD  F021         	goto	l5433
  1866  0043BE                     u5500:
  1867  0043BE                     
  1868                           ; BSR set to: 0
  1869                           ;test_and_calibration.c: 52:             stop(mL, mR);
  1870  0043BE  C0EA  F01A         	movff	test_function@mL,stop@mL
  1871  0043C2  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  1872  0043C6  C0EC  F01C         	movff	test_function@mR,stop@mR
  1873  0043CA  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  1874  0043CE  EC62  F027         	call	_stop	;wreg free
  1875  0043D2                     
  1876                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1877  0043D2  0E52               	movlw	82
  1878  0043D4  0100               	movlb	0	; () banked
  1879  0043D6  6FEF               	movwf	(??_test_function+1)& (0+255),b
  1880  0043D8  0E2B               	movlw	43
  1881  0043DA  6FEE               	movwf	??_test_function& (0+255),b
  1882  0043DC  0E00               	movlw	0
  1883  0043DE                     u5767:
  1884  0043DE  2EE8               	decfsz	wreg,f,c
  1885  0043E0  D7FE               	bra	u5767
  1886  0043E2  2FEE               	decfsz	??_test_function& (0+255),f,b
  1887  0043E4  D7FC               	bra	u5767
  1888  0043E6  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  1889  0043E8  D7FA               	bra	u5767
  1890  0043EA  F000               	nop	
  1891  0043EC                     
  1892                           ;test_and_calibration.c: 54:             stop_signal = 0;
  1893  0043EC  0E00               	movlw	0
  1894  0043EE  0100               	movlb	0	; () banked
  1895  0043F0  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1896  0043F2  EF65  F021         	goto	l5405
  1897  0043F6  0012               	return		;funcret
  1898  0043F8                     __end_of_test_function:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _distance_measure *****************
  1902 ;; Defined at:
  1903 ;;		line 400 in file "color.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1906 ;;		 -> main@motorL(10), 
  1907 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1908 ;;		 -> main@motorR(10), 
  1909 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  threshold       2   26[BANK0 ] unsigned int 
  1912 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  1913 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  1914 ;;  stop            1   28[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:       19 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 5
  1931 ;; This function calls:
  1932 ;;		_LED_C
  1933 ;;		___flmul
  1934 ;;		___xxtofl
  1935 ;;		_color_read_Clear
  1936 ;;		_color_read_Green
  1937 ;;		_lroundf
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;;		_test_function
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text3
  1945  004BB4                     __ptext3:
  1946                           	callstack 0
  1947  004BB4                     _distance_measure:
  1948                           	callstack 24
  1949  004BB4  0E00               	movlw	0
  1950  004BB6  0100               	movlb	0	; () banked
  1951  004BB8  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  1952  004BBA  0E00               	movlw	0
  1953  004BBC  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  1954                           
  1955                           ;color.c: 403:     unsigned char stop = 0;
  1956  004BBE  0E00               	movlw	0
  1957  004BC0  6F7C               	movwf	distance_measure@stop& (0+255),b
  1958                           
  1959                           ;color.c: 404:     unsigned int threshold = 0;
  1960  004BC2  0E00               	movlw	0
  1961  004BC4  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  1962  004BC6  0E00               	movlw	0
  1963  004BC8  6F7A               	movwf	distance_measure@threshold& (0+255),b
  1964  004BCA                     
  1965                           ; BSR set to: 0
  1966                           ;color.c: 405:     LED_C();
  1967  004BCA  EC42  F02C         	call	_LED_C	;wreg free
  1968  004BCE                     
  1969                           ;color.c: 406:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1970  004BCE  0E09               	movlw	9
  1971  004BD0  0100               	movlb	0	; () banked
  1972  004BD2  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  1973  004BD4  0E1E               	movlw	30
  1974  004BD6  6F70               	movwf	??_distance_measure& (0+255),b
  1975  004BD8  0EE4               	movlw	228
  1976  004BDA                     u5777:
  1977  004BDA  2EE8               	decfsz	wreg,f,c
  1978  004BDC  D7FE               	bra	u5777
  1979  004BDE  2F70               	decfsz	??_distance_measure& (0+255),f,b
  1980  004BE0  D7FC               	bra	u5777
  1981  004BE2  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  1982  004BE4  D7FA               	bra	u5777
  1983  004BE6  F000               	nop	
  1984  004BE8                     
  1985                           ;color.c: 407:     CC_amb = color_read_Clear();
  1986  004BE8  ECE7  F029         	call	_color_read_Clear	;wreg free
  1987  004BEC  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  1988  004BF0  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  1989  004BF4  EC97  F029         	call	_color_read_Green	;wreg free
  1990  004BF8                     
  1991                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  1992  004BF8  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  1993  004BFC  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  1994  004C00  6A03               	clrf	(___xxtofl@val+2)^0,c
  1995  004C02  6A04               	clrf	(___xxtofl@val+3)^0,c
  1996  004C04  0E00               	movlw	0
  1997  004C06  EC2A  F01D         	call	___xxtofl
  1998  004C0A  C001  F028         	movff	?___xxtofl,___flmul@b
  1999  004C0E  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2000  004C12  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2001  004C16  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2002  004C1A  0E66               	movlw	102
  2003  004C1C  6E2C               	movwf	___flmul@a^0,c
  2004  004C1E  0E66               	movlw	102
  2005  004C20  6E2D               	movwf	(___flmul@a+1)^0,c
  2006  004C22  0E86               	movlw	134
  2007  004C24  6E2E               	movwf	(___flmul@a+2)^0,c
  2008  004C26  0E3F               	movlw	63
  2009  004C28  6E2F               	movwf	(___flmul@a+3)^0,c
  2010  004C2A  EC81  F00F         	call	___flmul	;wreg free
  2011  004C2E  C028  F074         	movff	?___flmul,_distance_measure$3276
  2012  004C32  C029  F075         	movff	?___flmul+1,_distance_measure$3276+1
  2013  004C36  C02A  F076         	movff	?___flmul+2,_distance_measure$3276+2
  2014  004C3A  C02B  F077         	movff	?___flmul+3,_distance_measure$3276+3
  2015  004C3E                     
  2016                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  2017  004C3E  C074  F066         	movff	_distance_measure$3276,lroundf@x
  2018  004C42  C075  F067         	movff	_distance_measure$3276+1,lroundf@x+1
  2019  004C46  C076  F068         	movff	_distance_measure$3276+2,lroundf@x+2
  2020  004C4A  C077  F069         	movff	_distance_measure$3276+3,lroundf@x+3
  2021  004C4E  EC13  F02B         	call	_lroundf	;wreg free
  2022  004C52  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2023  004C56  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2024  004C5A                     
  2025                           ;color.c: 412:     if (CC_amb >= threshold){stop = 1;}
  2026  004C5A  0100               	movlb	0	; () banked
  2027  004C5C  517A               	movf	distance_measure@threshold& (0+255),w,b
  2028  004C5E  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2029  004C60  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2030  004C62  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2031  004C64  A0D8               	btfss	status,0,c
  2032  004C66  EF37  F026         	goto	u5301
  2033  004C6A  EF39  F026         	goto	u5300
  2034  004C6E                     u5301:
  2035  004C6E  EF3B  F026         	goto	l175
  2036  004C72                     u5300:
  2037  004C72                     
  2038                           ; BSR set to: 0
  2039  004C72  0E01               	movlw	1
  2040  004C74  6F7C               	movwf	distance_measure@stop& (0+255),b
  2041  004C76                     l175:
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;color.c: 413:     return stop;
  2045  004C76  517C               	movf	distance_measure@stop& (0+255),w,b
  2046  004C78                     
  2047                           ; BSR set to: 0
  2048  004C78  0012               	return		;funcret
  2049  004C7A                     __end_of_distance_measure:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _detect_color *****************
  2053 ;; Defined at:
  2054 ;;		line 290 in file "color.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2057 ;;		 -> main@rgb(8), 
  2058 ;;  w               2   19[BANK0 ] PTR struct white_card
  2059 ;;		 -> main@white(28), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  RR              2   44[BANK0 ] unsigned int 
  2062 ;;  BG              2   41[BANK0 ] unsigned int 
  2063 ;;  BR              2   39[BANK0 ] unsigned int 
  2064 ;;  GG              2   37[BANK0 ] unsigned int 
  2065 ;;  GB              2   35[BANK0 ] unsigned int 
  2066 ;;  RB              2   33[BANK0 ] unsigned int 
  2067 ;;  BB              2   31[BANK0 ] unsigned int 
  2068 ;;  GR              2   29[BANK0 ] unsigned int 
  2069 ;;  BC              2   27[BANK0 ] unsigned int 
  2070 ;;  RG              2   25[BANK0 ] unsigned int 
  2071 ;;  color           1   43[BANK0 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      unsigned char 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:       33 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 5
  2088 ;; This function calls:
  2089 ;;		_LED_B
  2090 ;;		_LED_G
  2091 ;;		_LED_R
  2092 ;;		___fldiv
  2093 ;;		___flmul
  2094 ;;		___xxtofl
  2095 ;;		_compare
  2096 ;;		_lroundf
  2097 ;;		_read_color
  2098 ;;		_toggle_light
  2099 ;; This function is called by:
  2100 ;;		_verify_color
  2101 ;;		_main
  2102 ;;		_test_function
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text4
  2107  000E46                     __ptext4:
  2108                           	callstack 0
  2109  000E46                     _detect_color:
  2110                           	callstack 24
  2111  000E46  0E00               	movlw	0
  2112  000E48  0100               	movlb	0	; () banked
  2113  000E4A  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2114  000E4C  0E00               	movlw	0
  2115  000E4E  6F79               	movwf	detect_color@RG& (0+255),b
  2116  000E50  0E00               	movlw	0
  2117  000E52  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  2118  000E54  0E00               	movlw	0
  2119  000E56  6F81               	movwf	detect_color@RB& (0+255),b
  2120  000E58  0E00               	movlw	0
  2121  000E5A  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  2122  000E5C  0E00               	movlw	0
  2123  000E5E  6F7D               	movwf	detect_color@GR& (0+255),b
  2124  000E60  0E00               	movlw	0
  2125  000E62  6F86               	movwf	(detect_color@GG+1)& (0+255),b
  2126  000E64  0E00               	movlw	0
  2127  000E66  6F85               	movwf	detect_color@GG& (0+255),b
  2128  000E68  0E00               	movlw	0
  2129  000E6A  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  2130  000E6C  0E00               	movlw	0
  2131  000E6E  6F83               	movwf	detect_color@GB& (0+255),b
  2132  000E70  0E00               	movlw	0
  2133  000E72  6F88               	movwf	(detect_color@BR+1)& (0+255),b
  2134  000E74  0E00               	movlw	0
  2135  000E76  6F87               	movwf	detect_color@BR& (0+255),b
  2136  000E78  0E00               	movlw	0
  2137  000E7A  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2138  000E7C  0E00               	movlw	0
  2139  000E7E  6F89               	movwf	detect_color@BG& (0+255),b
  2140  000E80  0E00               	movlw	0
  2141  000E82  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  2142  000E84  0E00               	movlw	0
  2143  000E86  6F7F               	movwf	detect_color@BB& (0+255),b
  2144  000E88  0E00               	movlw	0
  2145  000E8A  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  2146  000E8C  0E00               	movlw	0
  2147  000E8E  6F7B               	movwf	detect_color@BC& (0+255),b
  2148                           
  2149                           ;color.c: 296:     unsigned char color = 0;
  2150  000E90  0E00               	movlw	0
  2151  000E92  6F8B               	movwf	detect_color@color& (0+255),b
  2152  000E94                     
  2153                           ; BSR set to: 0
  2154                           ;color.c: 298:     LED_R();
  2155  000E94  EC02  F02C         	call	_LED_R	;wreg free
  2156  000E98                     
  2157                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2158  000E98  0E09               	movlw	9
  2159  000E9A  0100               	movlb	0	; () banked
  2160  000E9C  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2161  000E9E  0E1E               	movlw	30
  2162  000EA0  6F75               	movwf	??_detect_color& (0+255),b
  2163  000EA2  0EE4               	movlw	228
  2164  000EA4                     u5787:
  2165  000EA4  2EE8               	decfsz	wreg,f,c
  2166  000EA6  D7FE               	bra	u5787
  2167  000EA8  2F75               	decfsz	??_detect_color& (0+255),f,b
  2168  000EAA  D7FC               	bra	u5787
  2169  000EAC  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2170  000EAE  D7FA               	bra	u5787
  2171  000EB0  F000               	nop	
  2172  000EB2                     
  2173                           ;color.c: 300:     read_color(m);
  2174  000EB2  C071  F00C         	movff	detect_color@m,read_color@m
  2175  000EB6  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2176  000EBA  EC17  F029         	call	_read_color	;wreg free
  2177  000EBE                     
  2178                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2179  000EBE  C073  FFD9         	movff	detect_color@w,fsr2l
  2180  000EC2  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2181  000EC6  CFDE F075          	movff	postinc2,??_detect_color
  2182  000ECA  CFDD F076          	movff	postdec2,??_detect_color+1
  2183  000ECE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2184  000ED2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2185  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2186  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2187  000EDA  0E00               	movlw	0
  2188  000EDC  EC2A  F01D         	call	___xxtofl
  2189  000EE0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2190  000EE4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2191  000EE8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2192  000EEC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2193  000EF0  C071  FFD9         	movff	detect_color@m,fsr2l
  2194  000EF4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2195  000EF8  CFDE F077          	movff	postinc2,??_detect_color+2
  2196  000EFC  CFDD F078          	movff	postdec2,??_detect_color+3
  2197  000F00  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2198  000F04  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2199  000F08  6A03               	clrf	(___xxtofl@val+2)^0,c
  2200  000F0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2201  000F0C  0E00               	movlw	0
  2202  000F0E  EC2A  F01D         	call	___xxtofl
  2203  000F12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2204  000F16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2205  000F1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2206  000F1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2207  000F22  EC6D  F013         	call	___fldiv	;wreg free
  2208  000F26  C00F  F028         	movff	?___fldiv,___flmul@b
  2209  000F2A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2210  000F2E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2211  000F32  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2212  000F36  0E00               	movlw	0
  2213  000F38  6E2C               	movwf	___flmul@a^0,c
  2214  000F3A  0E00               	movlw	0
  2215  000F3C  6E2D               	movwf	(___flmul@a+1)^0,c
  2216  000F3E  0EC8               	movlw	200
  2217  000F40  6E2E               	movwf	(___flmul@a+2)^0,c
  2218  000F42  0E42               	movlw	66
  2219  000F44  6E2F               	movwf	(___flmul@a+3)^0,c
  2220  000F46  EC81  F00F         	call	___flmul	;wreg free
  2221  000F4A  C028  F08E         	movff	?___flmul,_detect_color$3275
  2222  000F4E  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2223  000F52  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2224  000F56  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2225  000F5A                     
  2226                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2227  000F5A  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2228  000F5E  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2229  000F62  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2230  000F66  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2231  000F6A  EC13  F02B         	call	_lroundf	;wreg free
  2232  000F6E  C066  F08C         	movff	?_lroundf,detect_color@RR
  2233  000F72  C067  F08D         	movff	?_lroundf+1,detect_color@RR+1
  2234  000F76  0100               	movlb	0	; () banked
  2235  000F78  EE20 F002          	lfsr	2,2
  2236  000F7C  5173               	movf	detect_color@w& (0+255),w,b
  2237  000F7E  26D9               	addwf	fsr2l,f,c
  2238  000F80  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2239  000F82  22DA               	addwfc	fsr2h,f,c
  2240  000F84  CFDE F075          	movff	postinc2,??_detect_color
  2241  000F88  CFDD F076          	movff	postdec2,??_detect_color+1
  2242  000F8C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2243  000F90  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2244  000F94  6A03               	clrf	(___xxtofl@val+2)^0,c
  2245  000F96  6A04               	clrf	(___xxtofl@val+3)^0,c
  2246  000F98  0E00               	movlw	0
  2247  000F9A  EC2A  F01D         	call	___xxtofl
  2248  000F9E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2249  000FA2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2250  000FA6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2251  000FAA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2252  000FAE  0100               	movlb	0	; () banked
  2253  000FB0  EE20 F002          	lfsr	2,2
  2254  000FB4  5171               	movf	detect_color@m& (0+255),w,b
  2255  000FB6  26D9               	addwf	fsr2l,f,c
  2256  000FB8  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2257  000FBA  22DA               	addwfc	fsr2h,f,c
  2258  000FBC  CFDE F077          	movff	postinc2,??_detect_color+2
  2259  000FC0  CFDD F078          	movff	postdec2,??_detect_color+3
  2260  000FC4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2261  000FC8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2262  000FCC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2263  000FCE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2264  000FD0  0E00               	movlw	0
  2265  000FD2  EC2A  F01D         	call	___xxtofl
  2266  000FD6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2267  000FDA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2268  000FDE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2269  000FE2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2270  000FE6  EC6D  F013         	call	___fldiv	;wreg free
  2271  000FEA  C00F  F028         	movff	?___fldiv,___flmul@b
  2272  000FEE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2273  000FF2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2274  000FF6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2275  000FFA  0E00               	movlw	0
  2276  000FFC  6E2C               	movwf	___flmul@a^0,c
  2277  000FFE  0E00               	movlw	0
  2278  001000  6E2D               	movwf	(___flmul@a+1)^0,c
  2279  001002  0EC8               	movlw	200
  2280  001004  6E2E               	movwf	(___flmul@a+2)^0,c
  2281  001006  0E42               	movlw	66
  2282  001008  6E2F               	movwf	(___flmul@a+3)^0,c
  2283  00100A  EC81  F00F         	call	___flmul	;wreg free
  2284  00100E  C028  F08E         	movff	?___flmul,_detect_color$3275
  2285  001012  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2286  001016  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2287  00101A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2288  00101E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2289  001022  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2290  001026  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2291  00102A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2292  00102E  EC13  F02B         	call	_lroundf	;wreg free
  2293  001032  0100               	movlb	0	; () banked
  2294  001034  EE20 F004          	lfsr	2,4
  2295  001038  5173               	movf	detect_color@w& (0+255),w,b
  2296  00103A  26D9               	addwf	fsr2l,f,c
  2297  00103C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2298  00103E  22DA               	addwfc	fsr2h,f,c
  2299  001040  CFDE F075          	movff	postinc2,??_detect_color
  2300  001044  CFDD F076          	movff	postdec2,??_detect_color+1
  2301  001048  C075  F001         	movff	??_detect_color,___xxtofl@val
  2302  00104C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2303  001050  6A03               	clrf	(___xxtofl@val+2)^0,c
  2304  001052  6A04               	clrf	(___xxtofl@val+3)^0,c
  2305  001054  0E00               	movlw	0
  2306  001056  EC2A  F01D         	call	___xxtofl
  2307  00105A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2308  00105E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2309  001062  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2310  001066  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2311  00106A  0100               	movlb	0	; () banked
  2312  00106C  EE20 F004          	lfsr	2,4
  2313  001070  5171               	movf	detect_color@m& (0+255),w,b
  2314  001072  26D9               	addwf	fsr2l,f,c
  2315  001074  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2316  001076  22DA               	addwfc	fsr2h,f,c
  2317  001078  CFDE F077          	movff	postinc2,??_detect_color+2
  2318  00107C  CFDD F078          	movff	postdec2,??_detect_color+3
  2319  001080  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2320  001084  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2321  001088  6A03               	clrf	(___xxtofl@val+2)^0,c
  2322  00108A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2323  00108C  0E00               	movlw	0
  2324  00108E  EC2A  F01D         	call	___xxtofl
  2325  001092  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2326  001096  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2327  00109A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2328  00109E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2329  0010A2  EC6D  F013         	call	___fldiv	;wreg free
  2330  0010A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2331  0010AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2332  0010AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2333  0010B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2334  0010B6  0E00               	movlw	0
  2335  0010B8  6E2C               	movwf	___flmul@a^0,c
  2336  0010BA  0E00               	movlw	0
  2337  0010BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2338  0010BE  0EC8               	movlw	200
  2339  0010C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2340  0010C2  0E42               	movlw	66
  2341  0010C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2342  0010C6  EC81  F00F         	call	___flmul	;wreg free
  2343  0010CA  C028  F08E         	movff	?___flmul,_detect_color$3275
  2344  0010CE  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2345  0010D2  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2346  0010D6  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2347  0010DA  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2348  0010DE  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2349  0010E2  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2350  0010E6  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2351  0010EA  EC13  F02B         	call	_lroundf	;wreg free
  2352  0010EE  C066  F081         	movff	?_lroundf,detect_color@RB
  2353  0010F2  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  2354  0010F6                     
  2355                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2356  0010F6  0E05               	movlw	5
  2357  0010F8  0100               	movlb	0	; () banked
  2358  0010FA  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2359  0010FC  0E0F               	movlw	15
  2360  0010FE  6F75               	movwf	??_detect_color& (0+255),b
  2361  001100  0EF1               	movlw	241
  2362  001102                     u5797:
  2363  001102  2EE8               	decfsz	wreg,f,c
  2364  001104  D7FE               	bra	u5797
  2365  001106  2F75               	decfsz	??_detect_color& (0+255),f,b
  2366  001108  D7FC               	bra	u5797
  2367  00110A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2368  00110C  D7FA               	bra	u5797
  2369  00110E                     
  2370                           ;color.c: 309:     LED_G();
  2371  00110E  EC22  F02C         	call	_LED_G	;wreg free
  2372  001112                     
  2373                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2374  001112  0E09               	movlw	9
  2375  001114  0100               	movlb	0	; () banked
  2376  001116  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2377  001118  0E1E               	movlw	30
  2378  00111A  6F75               	movwf	??_detect_color& (0+255),b
  2379  00111C  0EE4               	movlw	228
  2380  00111E                     u5807:
  2381  00111E  2EE8               	decfsz	wreg,f,c
  2382  001120  D7FE               	bra	u5807
  2383  001122  2F75               	decfsz	??_detect_color& (0+255),f,b
  2384  001124  D7FC               	bra	u5807
  2385  001126  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2386  001128  D7FA               	bra	u5807
  2387  00112A  F000               	nop	
  2388  00112C                     
  2389                           ;color.c: 311:     read_color(m);
  2390  00112C  C071  F00C         	movff	detect_color@m,read_color@m
  2391  001130  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2392  001134  EC17  F029         	call	_read_color	;wreg free
  2393  001138                     
  2394                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2395  001138  0100               	movlb	0	; () banked
  2396  00113A  EE20 F006          	lfsr	2,6
  2397  00113E  5173               	movf	detect_color@w& (0+255),w,b
  2398  001140  26D9               	addwf	fsr2l,f,c
  2399  001142  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2400  001144  22DA               	addwfc	fsr2h,f,c
  2401  001146  CFDE F075          	movff	postinc2,??_detect_color
  2402  00114A  CFDD F076          	movff	postdec2,??_detect_color+1
  2403  00114E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2404  001152  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2405  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2406  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2407  00115A  0E00               	movlw	0
  2408  00115C  EC2A  F01D         	call	___xxtofl
  2409  001160  C001  F013         	movff	?___xxtofl,___fldiv@a
  2410  001164  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2411  001168  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2412  00116C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2413  001170  C071  FFD9         	movff	detect_color@m,fsr2l
  2414  001174  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2415  001178  CFDE F077          	movff	postinc2,??_detect_color+2
  2416  00117C  CFDD F078          	movff	postdec2,??_detect_color+3
  2417  001180  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2418  001184  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2419  001188  6A03               	clrf	(___xxtofl@val+2)^0,c
  2420  00118A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2421  00118C  0E00               	movlw	0
  2422  00118E  EC2A  F01D         	call	___xxtofl
  2423  001192  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2424  001196  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2425  00119A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2426  00119E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2427  0011A2  EC6D  F013         	call	___fldiv	;wreg free
  2428  0011A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2429  0011AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2430  0011AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2431  0011B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2432  0011B6  0E00               	movlw	0
  2433  0011B8  6E2C               	movwf	___flmul@a^0,c
  2434  0011BA  0E00               	movlw	0
  2435  0011BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2436  0011BE  0EC8               	movlw	200
  2437  0011C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2438  0011C2  0E42               	movlw	66
  2439  0011C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2440  0011C6  EC81  F00F         	call	___flmul	;wreg free
  2441  0011CA  C028  F08E         	movff	?___flmul,_detect_color$3275
  2442  0011CE  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2443  0011D2  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2444  0011D6  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2445  0011DA                     
  2446                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2447  0011DA  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2448  0011DE  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2449  0011E2  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2450  0011E6  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2451  0011EA  EC13  F02B         	call	_lroundf	;wreg free
  2452  0011EE  C066  F07D         	movff	?_lroundf,detect_color@GR
  2453  0011F2  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  2454  0011F6  0100               	movlb	0	; () banked
  2455  0011F8  EE20 F008          	lfsr	2,8
  2456  0011FC  5173               	movf	detect_color@w& (0+255),w,b
  2457  0011FE  26D9               	addwf	fsr2l,f,c
  2458  001200  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2459  001202  22DA               	addwfc	fsr2h,f,c
  2460  001204  CFDE F075          	movff	postinc2,??_detect_color
  2461  001208  CFDD F076          	movff	postdec2,??_detect_color+1
  2462  00120C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2463  001210  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2464  001214  6A03               	clrf	(___xxtofl@val+2)^0,c
  2465  001216  6A04               	clrf	(___xxtofl@val+3)^0,c
  2466  001218  0E00               	movlw	0
  2467  00121A  EC2A  F01D         	call	___xxtofl
  2468  00121E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2469  001222  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2470  001226  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2471  00122A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2472  00122E  0100               	movlb	0	; () banked
  2473  001230  EE20 F002          	lfsr	2,2
  2474  001234  5171               	movf	detect_color@m& (0+255),w,b
  2475  001236  26D9               	addwf	fsr2l,f,c
  2476  001238  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2477  00123A  22DA               	addwfc	fsr2h,f,c
  2478  00123C  CFDE F077          	movff	postinc2,??_detect_color+2
  2479  001240  CFDD F078          	movff	postdec2,??_detect_color+3
  2480  001244  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2481  001248  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2482  00124C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2483  00124E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2484  001250  0E00               	movlw	0
  2485  001252  EC2A  F01D         	call	___xxtofl
  2486  001256  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2487  00125A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2488  00125E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2489  001262  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2490  001266  EC6D  F013         	call	___fldiv	;wreg free
  2491  00126A  C00F  F028         	movff	?___fldiv,___flmul@b
  2492  00126E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2493  001272  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2494  001276  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2495  00127A  0E00               	movlw	0
  2496  00127C  6E2C               	movwf	___flmul@a^0,c
  2497  00127E  0E00               	movlw	0
  2498  001280  6E2D               	movwf	(___flmul@a+1)^0,c
  2499  001282  0EC8               	movlw	200
  2500  001284  6E2E               	movwf	(___flmul@a+2)^0,c
  2501  001286  0E42               	movlw	66
  2502  001288  6E2F               	movwf	(___flmul@a+3)^0,c
  2503  00128A  EC81  F00F         	call	___flmul	;wreg free
  2504  00128E  C028  F08E         	movff	?___flmul,_detect_color$3275
  2505  001292  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2506  001296  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2507  00129A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2508  00129E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2509  0012A2  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2510  0012A6  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2511  0012AA  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2512  0012AE  EC13  F02B         	call	_lroundf	;wreg free
  2513  0012B2  C066  F085         	movff	?_lroundf,detect_color@GG
  2514  0012B6  C067  F086         	movff	?_lroundf+1,detect_color@GG+1
  2515  0012BA  0100               	movlb	0	; () banked
  2516  0012BC  EE20 F00A          	lfsr	2,10
  2517  0012C0  5173               	movf	detect_color@w& (0+255),w,b
  2518  0012C2  26D9               	addwf	fsr2l,f,c
  2519  0012C4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2520  0012C6  22DA               	addwfc	fsr2h,f,c
  2521  0012C8  CFDE F075          	movff	postinc2,??_detect_color
  2522  0012CC  CFDD F076          	movff	postdec2,??_detect_color+1
  2523  0012D0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2524  0012D4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2525  0012D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2526  0012DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2527  0012DC  0E00               	movlw	0
  2528  0012DE  EC2A  F01D         	call	___xxtofl
  2529  0012E2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2530  0012E6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2531  0012EA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2532  0012EE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2533  0012F2  0100               	movlb	0	; () banked
  2534  0012F4  EE20 F004          	lfsr	2,4
  2535  0012F8  5171               	movf	detect_color@m& (0+255),w,b
  2536  0012FA  26D9               	addwf	fsr2l,f,c
  2537  0012FC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2538  0012FE  22DA               	addwfc	fsr2h,f,c
  2539  001300  CFDE F077          	movff	postinc2,??_detect_color+2
  2540  001304  CFDD F078          	movff	postdec2,??_detect_color+3
  2541  001308  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2542  00130C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2543  001310  6A03               	clrf	(___xxtofl@val+2)^0,c
  2544  001312  6A04               	clrf	(___xxtofl@val+3)^0,c
  2545  001314  0E00               	movlw	0
  2546  001316  EC2A  F01D         	call	___xxtofl
  2547  00131A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2548  00131E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2549  001322  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2550  001326  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2551  00132A  EC6D  F013         	call	___fldiv	;wreg free
  2552  00132E  C00F  F028         	movff	?___fldiv,___flmul@b
  2553  001332  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2554  001336  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2555  00133A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2556  00133E  0E00               	movlw	0
  2557  001340  6E2C               	movwf	___flmul@a^0,c
  2558  001342  0E00               	movlw	0
  2559  001344  6E2D               	movwf	(___flmul@a+1)^0,c
  2560  001346  0EC8               	movlw	200
  2561  001348  6E2E               	movwf	(___flmul@a+2)^0,c
  2562  00134A  0E42               	movlw	66
  2563  00134C  6E2F               	movwf	(___flmul@a+3)^0,c
  2564  00134E  EC81  F00F         	call	___flmul	;wreg free
  2565  001352  C028  F08E         	movff	?___flmul,_detect_color$3275
  2566  001356  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2567  00135A  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2568  00135E  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2569  001362  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2570  001366  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2571  00136A  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2572  00136E  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2573  001372  EC13  F02B         	call	_lroundf	;wreg free
  2574  001376  C066  F083         	movff	?_lroundf,detect_color@GB
  2575  00137A  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  2576  00137E                     
  2577                           ;color.c: 319:     LED_B();
  2578  00137E  EC32  F02C         	call	_LED_B	;wreg free
  2579  001382                     
  2580                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2581  001382  0E09               	movlw	9
  2582  001384  0100               	movlb	0	; () banked
  2583  001386  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2584  001388  0E1E               	movlw	30
  2585  00138A  6F75               	movwf	??_detect_color& (0+255),b
  2586  00138C  0EE4               	movlw	228
  2587  00138E                     u5817:
  2588  00138E  2EE8               	decfsz	wreg,f,c
  2589  001390  D7FE               	bra	u5817
  2590  001392  2F75               	decfsz	??_detect_color& (0+255),f,b
  2591  001394  D7FC               	bra	u5817
  2592  001396  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2593  001398  D7FA               	bra	u5817
  2594  00139A  F000               	nop	
  2595  00139C                     
  2596                           ;color.c: 321:     read_color(m);
  2597  00139C  C071  F00C         	movff	detect_color@m,read_color@m
  2598  0013A0  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2599  0013A4  EC17  F029         	call	_read_color	;wreg free
  2600  0013A8                     
  2601                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2602  0013A8  0100               	movlb	0	; () banked
  2603  0013AA  EE20 F00C          	lfsr	2,12
  2604  0013AE  5173               	movf	detect_color@w& (0+255),w,b
  2605  0013B0  26D9               	addwf	fsr2l,f,c
  2606  0013B2  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2607  0013B4  22DA               	addwfc	fsr2h,f,c
  2608  0013B6  CFDE F075          	movff	postinc2,??_detect_color
  2609  0013BA  CFDD F076          	movff	postdec2,??_detect_color+1
  2610  0013BE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2611  0013C2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2612  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2613  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2614  0013CA  0E00               	movlw	0
  2615  0013CC  EC2A  F01D         	call	___xxtofl
  2616  0013D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2617  0013D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2618  0013D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2619  0013DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2620  0013E0  C071  FFD9         	movff	detect_color@m,fsr2l
  2621  0013E4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2622  0013E8  CFDE F077          	movff	postinc2,??_detect_color+2
  2623  0013EC  CFDD F078          	movff	postdec2,??_detect_color+3
  2624  0013F0  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2625  0013F4  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2626  0013F8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2627  0013FA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2628  0013FC  0E00               	movlw	0
  2629  0013FE  EC2A  F01D         	call	___xxtofl
  2630  001402  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2631  001406  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2632  00140A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2633  00140E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2634  001412  EC6D  F013         	call	___fldiv	;wreg free
  2635  001416  C00F  F028         	movff	?___fldiv,___flmul@b
  2636  00141A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2637  00141E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2638  001422  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2639  001426  0E00               	movlw	0
  2640  001428  6E2C               	movwf	___flmul@a^0,c
  2641  00142A  0E00               	movlw	0
  2642  00142C  6E2D               	movwf	(___flmul@a+1)^0,c
  2643  00142E  0EC8               	movlw	200
  2644  001430  6E2E               	movwf	(___flmul@a+2)^0,c
  2645  001432  0E42               	movlw	66
  2646  001434  6E2F               	movwf	(___flmul@a+3)^0,c
  2647  001436  EC81  F00F         	call	___flmul	;wreg free
  2648  00143A  C028  F08E         	movff	?___flmul,_detect_color$3275
  2649  00143E  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2650  001442  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2651  001446  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2652  00144A                     
  2653                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2654  00144A  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2655  00144E  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2656  001452  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2657  001456  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2658  00145A  EC13  F02B         	call	_lroundf	;wreg free
  2659  00145E  C066  F087         	movff	?_lroundf,detect_color@BR
  2660  001462  C067  F088         	movff	?_lroundf+1,detect_color@BR+1
  2661  001466  0100               	movlb	0	; () banked
  2662  001468  EE20 F00E          	lfsr	2,14
  2663  00146C  5173               	movf	detect_color@w& (0+255),w,b
  2664  00146E  26D9               	addwf	fsr2l,f,c
  2665  001470  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2666  001472  22DA               	addwfc	fsr2h,f,c
  2667  001474  CFDE F075          	movff	postinc2,??_detect_color
  2668  001478  CFDD F076          	movff	postdec2,??_detect_color+1
  2669  00147C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2670  001480  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2671  001484  6A03               	clrf	(___xxtofl@val+2)^0,c
  2672  001486  6A04               	clrf	(___xxtofl@val+3)^0,c
  2673  001488  0E00               	movlw	0
  2674  00148A  EC2A  F01D         	call	___xxtofl
  2675  00148E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2676  001492  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2677  001496  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2678  00149A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2679  00149E  0100               	movlb	0	; () banked
  2680  0014A0  EE20 F002          	lfsr	2,2
  2681  0014A4  5171               	movf	detect_color@m& (0+255),w,b
  2682  0014A6  26D9               	addwf	fsr2l,f,c
  2683  0014A8  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2684  0014AA  22DA               	addwfc	fsr2h,f,c
  2685  0014AC  CFDE F077          	movff	postinc2,??_detect_color+2
  2686  0014B0  CFDD F078          	movff	postdec2,??_detect_color+3
  2687  0014B4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2688  0014B8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2689  0014BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2690  0014BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2691  0014C0  0E00               	movlw	0
  2692  0014C2  EC2A  F01D         	call	___xxtofl
  2693  0014C6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2694  0014CA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2695  0014CE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2696  0014D2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2697  0014D6  EC6D  F013         	call	___fldiv	;wreg free
  2698  0014DA  C00F  F028         	movff	?___fldiv,___flmul@b
  2699  0014DE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2700  0014E2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2701  0014E6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2702  0014EA  0E00               	movlw	0
  2703  0014EC  6E2C               	movwf	___flmul@a^0,c
  2704  0014EE  0E00               	movlw	0
  2705  0014F0  6E2D               	movwf	(___flmul@a+1)^0,c
  2706  0014F2  0EC8               	movlw	200
  2707  0014F4  6E2E               	movwf	(___flmul@a+2)^0,c
  2708  0014F6  0E42               	movlw	66
  2709  0014F8  6E2F               	movwf	(___flmul@a+3)^0,c
  2710  0014FA  EC81  F00F         	call	___flmul	;wreg free
  2711  0014FE  C028  F08E         	movff	?___flmul,_detect_color$3275
  2712  001502  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2713  001506  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2714  00150A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2715  00150E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2716  001512  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2717  001516  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2718  00151A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2719  00151E  EC13  F02B         	call	_lroundf	;wreg free
  2720  001522  C066  F089         	movff	?_lroundf,detect_color@BG
  2721  001526  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2722  00152A  0100               	movlb	0	; () banked
  2723  00152C  EE20 F010          	lfsr	2,16
  2724  001530  5173               	movf	detect_color@w& (0+255),w,b
  2725  001532  26D9               	addwf	fsr2l,f,c
  2726  001534  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2727  001536  22DA               	addwfc	fsr2h,f,c
  2728  001538  CFDE F075          	movff	postinc2,??_detect_color
  2729  00153C  CFDD F076          	movff	postdec2,??_detect_color+1
  2730  001540  C075  F001         	movff	??_detect_color,___xxtofl@val
  2731  001544  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2732  001548  6A03               	clrf	(___xxtofl@val+2)^0,c
  2733  00154A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2734  00154C  0E00               	movlw	0
  2735  00154E  EC2A  F01D         	call	___xxtofl
  2736  001552  C001  F013         	movff	?___xxtofl,___fldiv@a
  2737  001556  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2738  00155A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2739  00155E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2740  001562  0100               	movlb	0	; () banked
  2741  001564  EE20 F004          	lfsr	2,4
  2742  001568  5171               	movf	detect_color@m& (0+255),w,b
  2743  00156A  26D9               	addwf	fsr2l,f,c
  2744  00156C  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2745  00156E  22DA               	addwfc	fsr2h,f,c
  2746  001570  CFDE F077          	movff	postinc2,??_detect_color+2
  2747  001574  CFDD F078          	movff	postdec2,??_detect_color+3
  2748  001578  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2749  00157C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2750  001580  6A03               	clrf	(___xxtofl@val+2)^0,c
  2751  001582  6A04               	clrf	(___xxtofl@val+3)^0,c
  2752  001584  0E00               	movlw	0
  2753  001586  EC2A  F01D         	call	___xxtofl
  2754  00158A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2755  00158E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2756  001592  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2757  001596  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2758  00159A  EC6D  F013         	call	___fldiv	;wreg free
  2759  00159E  C00F  F028         	movff	?___fldiv,___flmul@b
  2760  0015A2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2761  0015A6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2762  0015AA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2763  0015AE  0E00               	movlw	0
  2764  0015B0  6E2C               	movwf	___flmul@a^0,c
  2765  0015B2  0E00               	movlw	0
  2766  0015B4  6E2D               	movwf	(___flmul@a+1)^0,c
  2767  0015B6  0EC8               	movlw	200
  2768  0015B8  6E2E               	movwf	(___flmul@a+2)^0,c
  2769  0015BA  0E42               	movlw	66
  2770  0015BC  6E2F               	movwf	(___flmul@a+3)^0,c
  2771  0015BE  EC81  F00F         	call	___flmul	;wreg free
  2772  0015C2  C028  F08E         	movff	?___flmul,_detect_color$3275
  2773  0015C6  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2774  0015CA  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2775  0015CE  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2776  0015D2  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2777  0015D6  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2778  0015DA  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2779  0015DE  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2780  0015E2  EC13  F02B         	call	_lroundf	;wreg free
  2781  0015E6  C066  F07F         	movff	?_lroundf,detect_color@BB
  2782  0015EA  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  2783  0015EE                     
  2784                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2785  0015EE  0100               	movlb	0	; () banked
  2786  0015F0  EE20 F01A          	lfsr	2,26
  2787  0015F4  5173               	movf	detect_color@w& (0+255),w,b
  2788  0015F6  26D9               	addwf	fsr2l,f,c
  2789  0015F8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2790  0015FA  22DA               	addwfc	fsr2h,f,c
  2791  0015FC  CFDE F075          	movff	postinc2,??_detect_color
  2792  001600  CFDD F076          	movff	postdec2,??_detect_color+1
  2793  001604  C075  F001         	movff	??_detect_color,___xxtofl@val
  2794  001608  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2795  00160C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2796  00160E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2797  001610  0E00               	movlw	0
  2798  001612  EC2A  F01D         	call	___xxtofl
  2799  001616  C001  F013         	movff	?___xxtofl,___fldiv@a
  2800  00161A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2801  00161E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2802  001622  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2803  001626  0100               	movlb	0	; () banked
  2804  001628  EE20 F006          	lfsr	2,6
  2805  00162C  5171               	movf	detect_color@m& (0+255),w,b
  2806  00162E  26D9               	addwf	fsr2l,f,c
  2807  001630  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2808  001632  22DA               	addwfc	fsr2h,f,c
  2809  001634  CFDE F077          	movff	postinc2,??_detect_color+2
  2810  001638  CFDD F078          	movff	postdec2,??_detect_color+3
  2811  00163C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2812  001640  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2813  001644  6A03               	clrf	(___xxtofl@val+2)^0,c
  2814  001646  6A04               	clrf	(___xxtofl@val+3)^0,c
  2815  001648  0E00               	movlw	0
  2816  00164A  EC2A  F01D         	call	___xxtofl
  2817  00164E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2818  001652  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2819  001656  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2820  00165A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2821  00165E  EC6D  F013         	call	___fldiv	;wreg free
  2822  001662  C00F  F028         	movff	?___fldiv,___flmul@b
  2823  001666  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2824  00166A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2825  00166E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2826  001672  0E00               	movlw	0
  2827  001674  6E2C               	movwf	___flmul@a^0,c
  2828  001676  0E00               	movlw	0
  2829  001678  6E2D               	movwf	(___flmul@a+1)^0,c
  2830  00167A  0EC8               	movlw	200
  2831  00167C  6E2E               	movwf	(___flmul@a+2)^0,c
  2832  00167E  0E42               	movlw	66
  2833  001680  6E2F               	movwf	(___flmul@a+3)^0,c
  2834  001682  EC81  F00F         	call	___flmul	;wreg free
  2835  001686  C028  F08E         	movff	?___flmul,_detect_color$3275
  2836  00168A  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2837  00168E  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2838  001692  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2839  001696  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2840  00169A  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2841  00169E  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2842  0016A2  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2843  0016A6  EC13  F02B         	call	_lroundf	;wreg free
  2844  0016AA                     
  2845                           ;color.c: 329:     if (compare(0, RR, 45)){
  2846  0016AA  0E00               	movlw	0
  2847  0016AC  0100               	movlb	0	; () banked
  2848  0016AE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2849  0016B0  0E00               	movlw	0
  2850  0016B2  6F6A               	movwf	compare@lower& (0+255),b
  2851  0016B4  C08C  F06C         	movff	detect_color@RR,compare@value2compare
  2852  0016B8  C08D  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2853  0016BC  0E00               	movlw	0
  2854  0016BE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2855  0016C0  0E2D               	movlw	45
  2856  0016C2  6F6E               	movwf	compare@upper& (0+255),b
  2857  0016C4  ECF6  F02A         	call	_compare	;wreg free
  2858  0016C8  0900               	iorlw	0
  2859  0016CA  B4D8               	btfsc	status,2,c
  2860  0016CC  EF6A  F00B         	goto	u5151
  2861  0016D0  EF6C  F00B         	goto	u5150
  2862  0016D4                     u5151:
  2863  0016D4  EFDD  F00B         	goto	l5119
  2864  0016D8                     u5150:
  2865  0016D8                     
  2866                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  2867  0016D8  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  2868  0016DC  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2869  0016E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2870  0016E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2871  0016E4  0E00               	movlw	0
  2872  0016E6  EC2A  F01D         	call	___xxtofl
  2873  0016EA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2874  0016EE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2875  0016F2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2876  0016F6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2877  0016FA  0100               	movlb	0	; () banked
  2878  0016FC  5189               	movf	detect_color@BG& (0+255),w,b
  2879  0016FE  2585               	addwf	detect_color@GG& (0+255),w,b
  2880  001700  6F75               	movwf	??_detect_color& (0+255),b
  2881  001702  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  2882  001704  2186               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2883  001706  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2884  001708  C075  F001         	movff	??_detect_color,___xxtofl@val
  2885  00170C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2886  001710  6A03               	clrf	(___xxtofl@val+2)^0,c
  2887  001712  6A04               	clrf	(___xxtofl@val+3)^0,c
  2888  001714  0E00               	movlw	0
  2889  001716  EC2A  F01D         	call	___xxtofl
  2890  00171A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2891  00171E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2892  001722  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2893  001726  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2894  00172A  EC6D  F013         	call	___fldiv	;wreg free
  2895  00172E  C00F  F028         	movff	?___fldiv,___flmul@b
  2896  001732  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2897  001736  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2898  00173A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2899  00173E  0E00               	movlw	0
  2900  001740  6E2C               	movwf	___flmul@a^0,c
  2901  001742  0E00               	movlw	0
  2902  001744  6E2D               	movwf	(___flmul@a+1)^0,c
  2903  001746  0E48               	movlw	72
  2904  001748  6E2E               	movwf	(___flmul@a+2)^0,c
  2905  00174A  0E43               	movlw	67
  2906  00174C  6E2F               	movwf	(___flmul@a+3)^0,c
  2907  00174E  EC81  F00F         	call	___flmul	;wreg free
  2908  001752  C028  F08E         	movff	?___flmul,_detect_color$3275
  2909  001756  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2910  00175A  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2911  00175E  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2912                           
  2913                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  2914  001762  0E00               	movlw	0
  2915  001764  0100               	movlb	0	; () banked
  2916  001766  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2917  001768  0E00               	movlw	0
  2918  00176A  6F6A               	movwf	compare@lower& (0+255),b
  2919  00176C  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2920  001770  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2921  001774  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2922  001778  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2923  00177C  EC13  F02B         	call	_lroundf	;wreg free
  2924  001780  C066  F06C         	movff	?_lroundf,compare@value2compare
  2925  001784  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2926  001788  0E01               	movlw	1
  2927  00178A  0100               	movlb	0	; () banked
  2928  00178C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2929  00178E  0ED3               	movlw	211
  2930  001790  6F6E               	movwf	compare@upper& (0+255),b
  2931  001792  ECF6  F02A         	call	_compare	;wreg free
  2932  001796  0900               	iorlw	0
  2933  001798  B4D8               	btfsc	status,2,c
  2934  00179A  EFD1  F00B         	goto	u5161
  2935  00179E  EFD3  F00B         	goto	u5160
  2936  0017A2                     u5161:
  2937  0017A2  EFD8  F00B         	goto	l5117
  2938  0017A6                     u5160:
  2939  0017A6  0E03               	movlw	3
  2940  0017A8  0100               	movlb	0	; () banked
  2941  0017AA  6F8B               	movwf	detect_color@color& (0+255),b
  2942  0017AC  EF94  F00C         	goto	l5143
  2943  0017B0                     l5117:
  2944  0017B0  0E02               	movlw	2
  2945  0017B2  0100               	movlb	0	; () banked
  2946  0017B4  6F8B               	movwf	detect_color@color& (0+255),b
  2947  0017B6  EF94  F00C         	goto	l5143
  2948  0017BA                     l5119:
  2949                           
  2950                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  2951  0017BA  0100               	movlb	0	; () banked
  2952  0017BC  5186               	movf	(detect_color@GG+1)& (0+255),w,b
  2953  0017BE  E107               	bnz	u5171
  2954  0017C0  0E1F               	movlw	31
  2955  0017C2  5D85               	subwf	detect_color@GG& (0+255),w,b
  2956  0017C4  B0D8               	btfsc	status,0,c
  2957  0017C6  EFE7  F00B         	goto	u5171
  2958  0017CA  EFE9  F00B         	goto	u5170
  2959  0017CE                     u5171:
  2960  0017CE  EF5E  F00C         	goto	l5129
  2961  0017D2                     u5170:
  2962  0017D2                     
  2963                           ; BSR set to: 0
  2964  0017D2  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  2965  0017D4  E107               	bnz	u5181
  2966  0017D6  0E1F               	movlw	31
  2967  0017D8  5D83               	subwf	detect_color@GB& (0+255),w,b
  2968  0017DA  B0D8               	btfsc	status,0,c
  2969  0017DC  EFF2  F00B         	goto	u5181
  2970  0017E0  EFF4  F00B         	goto	u5180
  2971  0017E4                     u5181:
  2972  0017E4  EF5E  F00C         	goto	l5129
  2973  0017E8                     u5180:
  2974  0017E8                     
  2975                           ; BSR set to: 0
  2976                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  2977  0017E8  C08C  F001         	movff	detect_color@RR,___xxtofl@val
  2978  0017EC  C08D  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2979  0017F0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2980  0017F2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2981  0017F4  0E00               	movlw	0
  2982  0017F6  EC2A  F01D         	call	___xxtofl
  2983  0017FA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2984  0017FE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2985  001802  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2986  001806  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2987  00180A  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  2988  00180E  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  2989  001812  6A03               	clrf	(___xxtofl@val+2)^0,c
  2990  001814  6A04               	clrf	(___xxtofl@val+3)^0,c
  2991  001816  0E00               	movlw	0
  2992  001818  EC2A  F01D         	call	___xxtofl
  2993  00181C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2994  001820  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2995  001824  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2996  001828  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2997  00182C  EC6D  F013         	call	___fldiv	;wreg free
  2998  001830  C00F  F028         	movff	?___fldiv,___flmul@b
  2999  001834  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3000  001838  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3001  00183C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3002  001840  0E00               	movlw	0
  3003  001842  6E2C               	movwf	___flmul@a^0,c
  3004  001844  0E00               	movlw	0
  3005  001846  6E2D               	movwf	(___flmul@a+1)^0,c
  3006  001848  0EFA               	movlw	250
  3007  00184A  6E2E               	movwf	(___flmul@a+2)^0,c
  3008  00184C  0E43               	movlw	67
  3009  00184E  6E2F               	movwf	(___flmul@a+3)^0,c
  3010  001850  EC81  F00F         	call	___flmul	;wreg free
  3011  001854  C028  F08E         	movff	?___flmul,_detect_color$3275
  3012  001858  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  3013  00185C  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  3014  001860  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  3015                           
  3016                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3017  001864  0E00               	movlw	0
  3018  001866  0100               	movlb	0	; () banked
  3019  001868  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3020  00186A  0E00               	movlw	0
  3021  00186C  6F6A               	movwf	compare@lower& (0+255),b
  3022  00186E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  3023  001872  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  3024  001876  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  3025  00187A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  3026  00187E  EC13  F02B         	call	_lroundf	;wreg free
  3027  001882  C066  F06C         	movff	?_lroundf,compare@value2compare
  3028  001886  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3029  00188A  0E00               	movlw	0
  3030  00188C  0100               	movlb	0	; () banked
  3031  00188E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3032  001890  0E96               	movlw	150
  3033  001892  6F6E               	movwf	compare@upper& (0+255),b
  3034  001894  ECF6  F02A         	call	_compare	;wreg free
  3035  001898  0900               	iorlw	0
  3036  00189A  B4D8               	btfsc	status,2,c
  3037  00189C  EF52  F00C         	goto	u5191
  3038  0018A0  EF54  F00C         	goto	u5190
  3039  0018A4                     u5191:
  3040  0018A4  EF59  F00C         	goto	l5127
  3041  0018A8                     u5190:
  3042  0018A8  0E01               	movlw	1
  3043  0018AA  0100               	movlb	0	; () banked
  3044  0018AC  6F8B               	movwf	detect_color@color& (0+255),b
  3045  0018AE  EF94  F00C         	goto	l5143
  3046  0018B2                     l5127:
  3047  0018B2  0E06               	movlw	6
  3048  0018B4  0100               	movlb	0	; () banked
  3049  0018B6  6F8B               	movwf	detect_color@color& (0+255),b
  3050  0018B8  EF94  F00C         	goto	l5143
  3051  0018BC                     l5129:
  3052                           
  3053                           ; BSR set to: 0
  3054  0018BC  5186               	movf	(detect_color@GG+1)& (0+255),w,b
  3055  0018BE  E109               	bnz	u5200
  3056  0018C0  0E1F               	movlw	31
  3057  0018C2  5D85               	subwf	detect_color@GG& (0+255),w,b
  3058  0018C4  A0D8               	btfss	status,0,c
  3059  0018C6  EF67  F00C         	goto	u5201
  3060  0018CA  EF69  F00C         	goto	u5200
  3061  0018CE                     u5201:
  3062  0018CE  EF94  F00C         	goto	l5143
  3063  0018D2                     u5200:
  3064  0018D2                     
  3065                           ; BSR set to: 0
  3066  0018D2  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3067  0018D4  E109               	bnz	u5210
  3068  0018D6  0E1F               	movlw	31
  3069  0018D8  5D83               	subwf	detect_color@GB& (0+255),w,b
  3070  0018DA  A0D8               	btfss	status,0,c
  3071  0018DC  EF72  F00C         	goto	u5211
  3072  0018E0  EF74  F00C         	goto	u5210
  3073  0018E4                     u5211:
  3074  0018E4  EF94  F00C         	goto	l5143
  3075  0018E8                     u5210:
  3076  0018E8                     
  3077                           ; BSR set to: 0
  3078                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  3079  0018E8  5187               	movf	detect_color@BR& (0+255),w,b
  3080  0018EA  5D89               	subwf	detect_color@BG& (0+255),w,b
  3081  0018EC  5188               	movf	(detect_color@BR+1)& (0+255),w,b
  3082  0018EE  598A               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3083  0018F0  A0D8               	btfss	status,0,c
  3084  0018F2  EF7D  F00C         	goto	u5221
  3085  0018F6  EF7F  F00C         	goto	u5220
  3086  0018FA                     u5221:
  3087  0018FA  EF83  F00C         	goto	l5137
  3088  0018FE                     u5220:
  3089  0018FE                     
  3090                           ; BSR set to: 0
  3091  0018FE  0E07               	movlw	7
  3092  001900  6F8B               	movwf	detect_color@color& (0+255),b
  3093  001902  EF94  F00C         	goto	l5143
  3094  001906                     l5137:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;color.c: 343:                 if (BR < 48){color = 4;}
  3098  001906  5188               	movf	(detect_color@BR+1)& (0+255),w,b
  3099  001908  E107               	bnz	u5231
  3100  00190A  0E30               	movlw	48
  3101  00190C  5D87               	subwf	detect_color@BR& (0+255),w,b
  3102  00190E  B0D8               	btfsc	status,0,c
  3103  001910  EF8C  F00C         	goto	u5231
  3104  001914  EF8E  F00C         	goto	u5230
  3105  001918                     u5231:
  3106  001918  EF92  F00C         	goto	l5141
  3107  00191C                     u5230:
  3108  00191C                     
  3109                           ; BSR set to: 0
  3110  00191C  0E04               	movlw	4
  3111  00191E  6F8B               	movwf	detect_color@color& (0+255),b
  3112  001920  EF94  F00C         	goto	l5143
  3113  001924                     l5141:
  3114                           
  3115                           ; BSR set to: 0
  3116  001924  0E05               	movlw	5
  3117  001926  6F8B               	movwf	detect_color@color& (0+255),b
  3118  001928                     l5143:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;color.c: 349:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  3122  001928  0E00               	movlw	0
  3123  00192A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3124  00192C  0E5A               	movlw	90
  3125  00192E  6F6A               	movwf	compare@lower& (0+255),b
  3126  001930  C08C  F06C         	movff	detect_color@RR,compare@value2compare
  3127  001934  C08D  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3128  001938  90D8               	bcf	status,0,c
  3129  00193A  358C               	rlcf	detect_color@RR& (0+255),w,b
  3130  00193C  6F6E               	movwf	compare@upper& (0+255),b
  3131  00193E  358D               	rlcf	(detect_color@RR+1)& (0+255),w,b
  3132  001940  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3133  001942  ECF6  F02A         	call	_compare	;wreg free
  3134  001946  0900               	iorlw	0
  3135  001948  B4D8               	btfsc	status,2,c
  3136  00194A  EFA9  F00C         	goto	u5241
  3137  00194E  EFAB  F00C         	goto	u5240
  3138  001952                     u5241:
  3139  001952  EFDE  F00C         	goto	l5151
  3140  001956                     u5240:
  3141  001956  0E00               	movlw	0
  3142  001958  0100               	movlb	0	; () banked
  3143  00195A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3144  00195C  0E5A               	movlw	90
  3145  00195E  6F6A               	movwf	compare@lower& (0+255),b
  3146  001960  C081  F06C         	movff	detect_color@RB,compare@value2compare
  3147  001964  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  3148  001968  90D8               	bcf	status,0,c
  3149  00196A  3581               	rlcf	detect_color@RB& (0+255),w,b
  3150  00196C  6F6E               	movwf	compare@upper& (0+255),b
  3151  00196E  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  3152  001970  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3153  001972  ECF6  F02A         	call	_compare	;wreg free
  3154  001976  0900               	iorlw	0
  3155  001978  B4D8               	btfsc	status,2,c
  3156  00197A  EFC1  F00C         	goto	u5251
  3157  00197E  EFC3  F00C         	goto	u5250
  3158  001982                     u5251:
  3159  001982  EFDE  F00C         	goto	l5151
  3160  001986                     u5250:
  3161  001986  0E00               	movlw	0
  3162  001988  0100               	movlb	0	; () banked
  3163  00198A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3164  00198C  0E5A               	movlw	90
  3165  00198E  6F6A               	movwf	compare@lower& (0+255),b
  3166  001990  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3167  001994  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3168  001998  90D8               	bcf	status,0,c
  3169  00199A  3589               	rlcf	detect_color@BG& (0+255),w,b
  3170  00199C  6F6E               	movwf	compare@upper& (0+255),b
  3171  00199E  358A               	rlcf	(detect_color@BG+1)& (0+255),w,b
  3172  0019A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3173  0019A2  ECF6  F02A         	call	_compare	;wreg free
  3174  0019A6  0900               	iorlw	0
  3175  0019A8  B4D8               	btfsc	status,2,c
  3176  0019AA  EFD9  F00C         	goto	u5261
  3177  0019AE  EFDB  F00C         	goto	u5260
  3178  0019B2                     u5261:
  3179  0019B2  EFDE  F00C         	goto	l5151
  3180  0019B6                     u5260:
  3181  0019B6  0E08               	movlw	8
  3182  0019B8  0100               	movlb	0	; () banked
  3183  0019BA  6F8B               	movwf	detect_color@color& (0+255),b
  3184  0019BC                     l5151:
  3185                           
  3186                           ;color.c: 350:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  3187  0019BC  0E00               	movlw	0
  3188  0019BE  0100               	movlb	0	; () banked
  3189  0019C0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3190  0019C2  0E00               	movlw	0
  3191  0019C4  6F6A               	movwf	compare@lower& (0+255),b
  3192  0019C6  C087  F06C         	movff	detect_color@BR,compare@value2compare
  3193  0019CA  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3194  0019CE  0E00               	movlw	0
  3195  0019D0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3196  0019D2  0E19               	movlw	25
  3197  0019D4  6F6E               	movwf	compare@upper& (0+255),b
  3198  0019D6  ECF6  F02A         	call	_compare	;wreg free
  3199  0019DA  0900               	iorlw	0
  3200  0019DC  B4D8               	btfsc	status,2,c
  3201  0019DE  EFF3  F00C         	goto	u5271
  3202  0019E2  EFF5  F00C         	goto	u5270
  3203  0019E6                     u5271:
  3204  0019E6  EF0F  F00D         	goto	l5157
  3205  0019EA                     u5270:
  3206  0019EA  0E00               	movlw	0
  3207  0019EC  0100               	movlb	0	; () banked
  3208  0019EE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3209  0019F0  0E00               	movlw	0
  3210  0019F2  6F6A               	movwf	compare@lower& (0+255),b
  3211  0019F4  C08C  F06C         	movff	detect_color@RR,compare@value2compare
  3212  0019F8  C08D  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3213  0019FC  0E00               	movlw	0
  3214  0019FE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3215  001A00  0E1E               	movlw	30
  3216  001A02  6F6E               	movwf	compare@upper& (0+255),b
  3217  001A04  ECF6  F02A         	call	_compare	;wreg free
  3218  001A08  0900               	iorlw	0
  3219  001A0A  B4D8               	btfsc	status,2,c
  3220  001A0C  EF0A  F00D         	goto	u5281
  3221  001A10  EF0C  F00D         	goto	u5280
  3222  001A14                     u5281:
  3223  001A14  EF0F  F00D         	goto	l5157
  3224  001A18                     u5280:
  3225  001A18  0E00               	movlw	0
  3226  001A1A  0100               	movlb	0	; () banked
  3227  001A1C  6F8B               	movwf	detect_color@color& (0+255),b
  3228  001A1E                     l5157:
  3229                           
  3230                           ;color.c: 352:     if (color == 8) {toggle_light(2,1);}
  3231  001A1E  0E08               	movlw	8
  3232  001A20  0100               	movlb	0	; () banked
  3233  001A22  198B               	xorwf	detect_color@color& (0+255),w,b
  3234  001A24  A4D8               	btfss	status,2,c
  3235  001A26  EF17  F00D         	goto	u5291
  3236  001A2A  EF19  F00D         	goto	u5290
  3237  001A2E                     u5291:
  3238  001A2E  EF1E  F00D         	goto	l5161
  3239  001A32                     u5290:
  3240  001A32                     
  3241                           ; BSR set to: 0
  3242  001A32  0E01               	movlw	1
  3243  001A34  6E01               	movwf	toggle_light@toggletime^0,c
  3244  001A36  0E02               	movlw	2
  3245  001A38  ECE5  F019         	call	_toggle_light
  3246  001A3C                     l5161:
  3247                           
  3248                           ;color.c: 353:     return color;
  3249  001A3C  0100               	movlb	0	; () banked
  3250  001A3E  518B               	movf	detect_color@color& (0+255),w,b
  3251  001A40                     
  3252                           ; BSR set to: 0
  3253  001A40  0012               	return		;funcret
  3254  001A42                     __end_of_detect_color:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _compare *****************
  3258 ;; Defined at:
  3259 ;;		line 356 in file "color.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  lower           2   10[BANK0 ] unsigned int 
  3262 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3263 ;;  upper           2   14[BANK0 ] unsigned int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  result          1   16[BANK0 ] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3275 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;Total ram usage:        7 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_detect_color
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text5
  3290  0055EC                     __ptext5:
  3291                           	callstack 0
  3292  0055EC                     _compare:
  3293                           	callstack 27
  3294  0055EC                     
  3295                           ;color.c: 356: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 357: {;color.c: 358:     unsigned char result = 0;
  3296  0055EC  0E00               	movlw	0
  3297  0055EE  0100               	movlb	0	; () banked
  3298  0055F0  6F70               	movwf	compare@result& (0+255),b
  3299  0055F2                     
  3300                           ; BSR set to: 0
  3301                           ;color.c: 359:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3302  0055F2  516C               	movf	compare@value2compare& (0+255),w,b
  3303  0055F4  5D6A               	subwf	compare@lower& (0+255),w,b
  3304  0055F6  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3305  0055F8  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3306  0055FA  B0D8               	btfsc	status,0,c
  3307  0055FC  EF02  F02B         	goto	u4601
  3308  005600  EF04  F02B         	goto	u4600
  3309  005604                     u4601:
  3310  005604  EF11  F02B         	goto	l163
  3311  005608                     u4600:
  3312  005608                     
  3313                           ; BSR set to: 0
  3314  005608  516C               	movf	compare@value2compare& (0+255),w,b
  3315  00560A  5D6E               	subwf	compare@upper& (0+255),w,b
  3316  00560C  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3317  00560E  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3318  005610  A0D8               	btfss	status,0,c
  3319  005612  EF0D  F02B         	goto	u4611
  3320  005616  EF0F  F02B         	goto	u4610
  3321  00561A                     u4611:
  3322  00561A  EF11  F02B         	goto	l163
  3323  00561E                     u4610:
  3324  00561E                     
  3325                           ; BSR set to: 0
  3326  00561E  0E01               	movlw	1
  3327  005620  6F70               	movwf	compare@result& (0+255),b
  3328  005622                     l163:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;color.c: 360:     return result;
  3332  005622  5170               	movf	compare@result& (0+255),w,b
  3333  005624                     
  3334                           ; BSR set to: 0
  3335  005624  0012               	return		;funcret
  3336  005626                     __end_of_compare:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _color_data_collection *****************
  3340 ;; Defined at:
  3341 ;;		line 200 in file "color.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3344 ;;		 -> main@rgb(8), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  x               2  132[BANK0 ] int 
  3347 ;;  k               2  130[BANK0 ] int 
  3348 ;;  j               2  128[BANK0 ] int 
  3349 ;;  i               2  126[BANK0 ] int 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:       12 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 10
  3366 ;; This function calls:
  3367 ;;		_LED_B
  3368 ;;		_LED_C
  3369 ;;		_LED_G
  3370 ;;		_LED_R
  3371 ;;		_color_display
  3372 ;;		_color_predict
  3373 ;;		_read_color
  3374 ;; This function is called by:
  3375 ;;		_test_function
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text6
  3380  003DBC                     __ptext6:
  3381                           	callstack 0
  3382  003DBC                     _color_data_collection:
  3383                           	callstack 19
  3384  003DBC                     
  3385                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3386  003DBC  0E00               	movlw	0
  3387  003DBE  0100               	movlb	0	; () banked
  3388  003DC0  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3389  003DC2  0E00               	movlw	0
  3390  003DC4  6FDE               	movwf	color_data_collection@i& (0+255),b
  3391  003DC6  0E00               	movlw	0
  3392  003DC8  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3393  003DCA  0E00               	movlw	0
  3394  003DCC  6FE2               	movwf	color_data_collection@k& (0+255),b
  3395  003DCE  0E00               	movlw	0
  3396  003DD0  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3397  003DD2  0E00               	movlw	0
  3398  003DD4  6FE4               	movwf	color_data_collection@x& (0+255),b
  3399                           
  3400                           ;color.c: 203:     for (i = 0; i < 1; ++i){
  3401  003DD6  0E00               	movlw	0
  3402  003DD8  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3403  003DDA  0E00               	movlw	0
  3404  003DDC  6FDE               	movwf	color_data_collection@i& (0+255),b
  3405  003DDE                     l4925:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;color.c: 204:         LED_C();
  3409  003DDE  EC42  F02C         	call	_LED_C	;wreg free
  3410  003DE2                     
  3411                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3412  003DE2  0E09               	movlw	9
  3413  003DE4  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3414  003DE6  0E1E               	movlw	30
  3415  003DE8  6E5C               	movwf	??_color_data_collection^0,c
  3416  003DEA  0EE4               	movlw	228
  3417  003DEC                     u5827:
  3418  003DEC  2EE8               	decfsz	wreg,f,c
  3419  003DEE  D7FE               	bra	u5827
  3420  003DF0  2E5C               	decfsz	??_color_data_collection^0,f,c
  3421  003DF2  D7FC               	bra	u5827
  3422  003DF4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3423  003DF6  D7FA               	bra	u5827
  3424  003DF8  D000               	nop2	
  3425  003DFA                     
  3426                           ;color.c: 206:         read_color(m);
  3427  003DFA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3428  003DFE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3429  003E02  EC17  F029         	call	_read_color	;wreg free
  3430  003E06                     
  3431                           ;color.c: 207:         color_display(m);
  3432  003E06  C05A  F058         	movff	color_data_collection@m,color_display@m
  3433  003E0A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3434  003E0E  EC48  F028         	call	_color_display	;wreg free
  3435  003E12                     
  3436                           ;color.c: 208:     }
  3437  003E12  0100               	movlb	0	; () banked
  3438  003E14  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3439  003E16  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3440  003E18                     
  3441                           ; BSR set to: 0
  3442  003E18  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3443  003E1A  EF17  F01F         	goto	u5111
  3444  003E1E  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3445  003E20  E108               	bnz	u5110
  3446  003E22  05DE               	decf	color_data_collection@i& (0+255),w,b
  3447  003E24  A0D8               	btfss	status,0,c
  3448  003E26  EF17  F01F         	goto	u5111
  3449  003E2A  EF19  F01F         	goto	u5110
  3450  003E2E                     u5111:
  3451  003E2E  EFEF  F01E         	goto	l4925
  3452  003E32                     u5110:
  3453  003E32                     
  3454                           ; BSR set to: 0
  3455                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  3456  003E32  0E00               	movlw	0
  3457  003E34  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3458  003E36  0E00               	movlw	0
  3459  003E38  6FE0               	movwf	color_data_collection@j& (0+255),b
  3460  003E3A                     l4943:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;color.c: 211:         LED_R();
  3464  003E3A  EC02  F02C         	call	_LED_R	;wreg free
  3465  003E3E                     
  3466                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3467  003E3E  0E09               	movlw	9
  3468  003E40  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3469  003E42  0E1E               	movlw	30
  3470  003E44  6E5C               	movwf	??_color_data_collection^0,c
  3471  003E46  0EE4               	movlw	228
  3472  003E48                     u5837:
  3473  003E48  2EE8               	decfsz	wreg,f,c
  3474  003E4A  D7FE               	bra	u5837
  3475  003E4C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3476  003E4E  D7FC               	bra	u5837
  3477  003E50  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3478  003E52  D7FA               	bra	u5837
  3479  003E54  D000               	nop2	
  3480  003E56                     
  3481                           ;color.c: 213:         read_color(m);
  3482  003E56  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3483  003E5A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3484  003E5E  EC17  F029         	call	_read_color	;wreg free
  3485  003E62                     
  3486                           ;color.c: 214:         color_display(m);
  3487  003E62  C05A  F058         	movff	color_data_collection@m,color_display@m
  3488  003E66  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3489  003E6A  EC48  F028         	call	_color_display	;wreg free
  3490  003E6E                     
  3491                           ;color.c: 215:     }
  3492  003E6E  0100               	movlb	0	; () banked
  3493  003E70  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3494  003E72  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3495  003E74                     
  3496                           ; BSR set to: 0
  3497  003E74  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3498  003E76  EF45  F01F         	goto	u5121
  3499  003E7A  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3500  003E7C  E108               	bnz	u5120
  3501  003E7E  05E0               	decf	color_data_collection@j& (0+255),w,b
  3502  003E80  A0D8               	btfss	status,0,c
  3503  003E82  EF45  F01F         	goto	u5121
  3504  003E86  EF47  F01F         	goto	u5120
  3505  003E8A                     u5121:
  3506  003E8A  EF1D  F01F         	goto	l4943
  3507  003E8E                     u5120:
  3508  003E8E                     
  3509                           ; BSR set to: 0
  3510                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  3511  003E8E  0E00               	movlw	0
  3512  003E90  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3513  003E92  0E00               	movlw	0
  3514  003E94  6FE2               	movwf	color_data_collection@k& (0+255),b
  3515  003E96                     l4961:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;color.c: 218:         LED_G();
  3519  003E96  EC22  F02C         	call	_LED_G	;wreg free
  3520  003E9A                     
  3521                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3522  003E9A  0E09               	movlw	9
  3523  003E9C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3524  003E9E  0E1E               	movlw	30
  3525  003EA0  6E5C               	movwf	??_color_data_collection^0,c
  3526  003EA2  0EE4               	movlw	228
  3527  003EA4                     u5847:
  3528  003EA4  2EE8               	decfsz	wreg,f,c
  3529  003EA6  D7FE               	bra	u5847
  3530  003EA8  2E5C               	decfsz	??_color_data_collection^0,f,c
  3531  003EAA  D7FC               	bra	u5847
  3532  003EAC  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3533  003EAE  D7FA               	bra	u5847
  3534  003EB0  D000               	nop2	
  3535  003EB2                     
  3536                           ;color.c: 220:         read_color(m);
  3537  003EB2  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3538  003EB6  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3539  003EBA  EC17  F029         	call	_read_color	;wreg free
  3540  003EBE                     
  3541                           ;color.c: 221:         color_display(m);
  3542  003EBE  C05A  F058         	movff	color_data_collection@m,color_display@m
  3543  003EC2  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3544  003EC6  EC48  F028         	call	_color_display	;wreg free
  3545  003ECA                     
  3546                           ;color.c: 222:     }
  3547  003ECA  0100               	movlb	0	; () banked
  3548  003ECC  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3549  003ECE  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3550  003ED0                     
  3551                           ; BSR set to: 0
  3552  003ED0  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3553  003ED2  EF73  F01F         	goto	u5131
  3554  003ED6  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3555  003ED8  E108               	bnz	u5130
  3556  003EDA  05E2               	decf	color_data_collection@k& (0+255),w,b
  3557  003EDC  A0D8               	btfss	status,0,c
  3558  003EDE  EF73  F01F         	goto	u5131
  3559  003EE2  EF75  F01F         	goto	u5130
  3560  003EE6                     u5131:
  3561  003EE6  EF4B  F01F         	goto	l4961
  3562  003EEA                     u5130:
  3563  003EEA                     
  3564                           ; BSR set to: 0
  3565                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  3566  003EEA  0E00               	movlw	0
  3567  003EEC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3568  003EEE  0E00               	movlw	0
  3569  003EF0  6FE4               	movwf	color_data_collection@x& (0+255),b
  3570  003EF2                     l4979:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;color.c: 225:         LED_B();
  3574  003EF2  EC32  F02C         	call	_LED_B	;wreg free
  3575  003EF6                     
  3576                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3577  003EF6  0E09               	movlw	9
  3578  003EF8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3579  003EFA  0E1E               	movlw	30
  3580  003EFC  6E5C               	movwf	??_color_data_collection^0,c
  3581  003EFE  0EE4               	movlw	228
  3582  003F00                     u5857:
  3583  003F00  2EE8               	decfsz	wreg,f,c
  3584  003F02  D7FE               	bra	u5857
  3585  003F04  2E5C               	decfsz	??_color_data_collection^0,f,c
  3586  003F06  D7FC               	bra	u5857
  3587  003F08  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3588  003F0A  D7FA               	bra	u5857
  3589  003F0C  D000               	nop2	
  3590  003F0E                     
  3591                           ;color.c: 227:         read_color(m);
  3592  003F0E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3593  003F12  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3594  003F16  EC17  F029         	call	_read_color	;wreg free
  3595  003F1A                     
  3596                           ;color.c: 228:         color_display(m);
  3597  003F1A  C05A  F058         	movff	color_data_collection@m,color_display@m
  3598  003F1E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3599  003F22  EC48  F028         	call	_color_display	;wreg free
  3600  003F26                     
  3601                           ;color.c: 229:     }
  3602  003F26  0100               	movlb	0	; () banked
  3603  003F28  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3604  003F2A  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3605  003F2C                     
  3606                           ; BSR set to: 0
  3607  003F2C  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3608  003F2E  EFA1  F01F         	goto	u5141
  3609  003F32  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3610  003F34  E108               	bnz	u5140
  3611  003F36  05E4               	decf	color_data_collection@x& (0+255),w,b
  3612  003F38  A0D8               	btfss	status,0,c
  3613  003F3A  EFA1  F01F         	goto	u5141
  3614  003F3E  EFA3  F01F         	goto	u5140
  3615  003F42                     u5141:
  3616  003F42  EF79  F01F         	goto	l4979
  3617  003F46                     u5140:
  3618  003F46                     
  3619                           ; BSR set to: 0
  3620                           ;color.c: 230:     color_predict(1);
  3621  003F46  0E01               	movlw	1
  3622  003F48  EC99  F02B         	call	_color_predict
  3623  003F4C                     
  3624                           ;color.c: 231:     LED_C();
  3625  003F4C  EC42  F02C         	call	_LED_C	;wreg free
  3626  003F50  0012               	return		;funcret
  3627  003F52                     __end_of_color_data_collection:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _read_color *****************
  3631 ;; Defined at:
  3632 ;;		line 147 in file "color.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3635 ;;		 -> main@rgb(8), 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;Total ram usage:        2 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 4
  3654 ;; This function calls:
  3655 ;;		_color_read_Blue
  3656 ;;		_color_read_Clear
  3657 ;;		_color_read_Green
  3658 ;;		_color_read_Red
  3659 ;; This function is called by:
  3660 ;;		_color_data_collection
  3661 ;;		_detect_color
  3662 ;;		_test_function
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text7
  3667  00522E                     __ptext7:
  3668                           	callstack 0
  3669  00522E                     _read_color:
  3670                           	callstack 24
  3671  00522E                     
  3672                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3673  00522E  EC6F  F029         	call	_color_read_Red	;wreg free
  3674  005232  C00C  FFD9         	movff	read_color@m,fsr2l
  3675  005236  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3676  00523A  C005  FFDE         	movff	?_color_read_Red,postinc2
  3677  00523E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3678                           
  3679                           ;color.c: 150:     m->B = color_read_Blue();
  3680  005242  ECBF  F029         	call	_color_read_Blue	;wreg free
  3681  005246  EE20 F004          	lfsr	2,4
  3682  00524A  500C               	movf	read_color@m^0,w,c
  3683  00524C  26D9               	addwf	fsr2l,f,c
  3684  00524E  500D               	movf	(read_color@m+1)^0,w,c
  3685  005250  22DA               	addwfc	fsr2h,f,c
  3686  005252  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3687  005256  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3688                           
  3689                           ;color.c: 151:     m->G = color_read_Green();
  3690  00525A  EC97  F029         	call	_color_read_Green	;wreg free
  3691  00525E  EE20 F002          	lfsr	2,2
  3692  005262  500C               	movf	read_color@m^0,w,c
  3693  005264  26D9               	addwf	fsr2l,f,c
  3694  005266  500D               	movf	(read_color@m+1)^0,w,c
  3695  005268  22DA               	addwfc	fsr2h,f,c
  3696  00526A  C005  FFDE         	movff	?_color_read_Green,postinc2
  3697  00526E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3698                           
  3699                           ;color.c: 152:     m->C = color_read_Clear();
  3700  005272  ECE7  F029         	call	_color_read_Clear	;wreg free
  3701  005276  EE20 F006          	lfsr	2,6
  3702  00527A  500C               	movf	read_color@m^0,w,c
  3703  00527C  26D9               	addwf	fsr2l,f,c
  3704  00527E  500D               	movf	(read_color@m+1)^0,w,c
  3705  005280  22DA               	addwfc	fsr2h,f,c
  3706  005282  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3707  005286  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3708  00528A  0012               	return		;funcret
  3709  00528C                     __end_of_read_color:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _color_display *****************
  3713 ;; Defined at:
  3714 ;;		line 234 in file "color.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3717 ;;		 -> main@rgb(8), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3733 ;;Total ram usage:      102 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 9
  3736 ;; This function calls:
  3737 ;;		_sendStringSerial4
  3738 ;;		_sprintf
  3739 ;; This function is called by:
  3740 ;;		_color_data_collection
  3741 ;;		_test_function
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text8
  3746  005090                     __ptext8:
  3747                           	callstack 0
  3748  005090                     _color_display:
  3749                           	callstack 20
  3750  005090                     
  3751                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3752  005090  0E79               	movlw	low color_display@buf
  3753  005092  0100               	movlb	0	; () banked
  3754  005094  6F60               	movwf	sprintf@s& (0+255),b
  3755  005096  0E00               	movlw	high color_display@buf
  3756  005098  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3757  00509A  0E16               	movlw	low STR_1
  3758  00509C  6F62               	movwf	sprintf@fmt& (0+255),b
  3759  00509E  0E0E               	movlw	high STR_1
  3760  0050A0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3761  0050A2  C058  FFD9         	movff	color_display@m,fsr2l
  3762  0050A6  C059  FFDA         	movff	color_display@m+1,fsr2h
  3763  0050AA  CFDE F064          	movff	postinc2,?_sprintf+4
  3764  0050AE  CFDD F065          	movff	postdec2,?_sprintf+5
  3765  0050B2  EE20 F002          	lfsr	2,2
  3766  0050B6  5058               	movf	color_display@m^0,w,c
  3767  0050B8  26D9               	addwf	fsr2l,f,c
  3768  0050BA  5059               	movf	(color_display@m+1)^0,w,c
  3769  0050BC  22DA               	addwfc	fsr2h,f,c
  3770  0050BE  CFDE F066          	movff	postinc2,?_sprintf+6
  3771  0050C2  CFDD F067          	movff	postdec2,?_sprintf+7
  3772  0050C6  EE20 F004          	lfsr	2,4
  3773  0050CA  5058               	movf	color_display@m^0,w,c
  3774  0050CC  26D9               	addwf	fsr2l,f,c
  3775  0050CE  5059               	movf	(color_display@m+1)^0,w,c
  3776  0050D0  22DA               	addwfc	fsr2h,f,c
  3777  0050D2  CFDE F068          	movff	postinc2,?_sprintf+8
  3778  0050D6  CFDD F069          	movff	postdec2,?_sprintf+9
  3779  0050DA  EE20 F006          	lfsr	2,6
  3780  0050DE  5058               	movf	color_display@m^0,w,c
  3781  0050E0  26D9               	addwf	fsr2l,f,c
  3782  0050E2  5059               	movf	(color_display@m+1)^0,w,c
  3783  0050E4  22DA               	addwfc	fsr2h,f,c
  3784  0050E6  CFDE F06A          	movff	postinc2,?_sprintf+10
  3785  0050EA  CFDD F06B          	movff	postdec2,?_sprintf+11
  3786  0050EE  EC46  F029         	call	_sprintf	;wreg free
  3787  0050F2                     
  3788                           ;color.c: 238:     sendStringSerial4(buf);
  3789  0050F2  0E79               	movlw	low color_display@buf
  3790  0050F4  6E02               	movwf	sendStringSerial4@string^0,c
  3791  0050F6  0E00               	movlw	high color_display@buf
  3792  0050F8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3793  0050FA  EC81  F02B         	call	_sendStringSerial4	;wreg free
  3794  0050FE  0012               	return		;funcret
  3795  005100                     __end_of_color_display:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _calibrate_white *****************
  3799 ;; Defined at:
  3800 ;;		line 258 in file "color.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  w               2   11[COMRAM] PTR struct white_card
  3803 ;;		 -> main@white(28), 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;Total ram usage:        4 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 4
  3822 ;; This function calls:
  3823 ;;		_LED_B
  3824 ;;		_LED_C
  3825 ;;		_LED_G
  3826 ;;		_LED_OFF
  3827 ;;		_LED_R
  3828 ;;		_color_read_Blue
  3829 ;;		_color_read_Clear
  3830 ;;		_color_read_Green
  3831 ;;		_color_read_Red
  3832 ;;		_toggle_light
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;;		_test_function
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text9
  3840  003676                     __ptext9:
  3841                           	callstack 0
  3842  003676                     _calibrate_white:
  3843                           	callstack 25
  3844  003676                     
  3845                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  3846  003676  EC12  F02C         	call	_LED_OFF	;wreg free
  3847  00367A                     
  3848                           ;color.c: 261:     toggle_light(1,2);
  3849  00367A  0E02               	movlw	2
  3850  00367C  6E01               	movwf	toggle_light@toggletime^0,c
  3851  00367E  0E01               	movlw	1
  3852  003680  ECE5  F019         	call	_toggle_light
  3853  003684                     
  3854                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3855  003684  0E29               	movlw	41
  3856  003686  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3857  003688  0E96               	movlw	150
  3858  00368A  6E0E               	movwf	??_calibrate_white^0,c
  3859  00368C  0E7F               	movlw	127
  3860  00368E                     u5867:
  3861  00368E  2EE8               	decfsz	wreg,f,c
  3862  003690  D7FE               	bra	u5867
  3863  003692  2E0E               	decfsz	??_calibrate_white^0,f,c
  3864  003694  D7FC               	bra	u5867
  3865  003696  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3866  003698  D7FA               	bra	u5867
  3867  00369A  F000               	nop	
  3868  00369C                     
  3869                           ;color.c: 264:     LED_R();
  3870  00369C  EC02  F02C         	call	_LED_R	;wreg free
  3871  0036A0                     
  3872                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3873  0036A0  0E09               	movlw	9
  3874  0036A2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3875  0036A4  0E1E               	movlw	30
  3876  0036A6  6E0E               	movwf	??_calibrate_white^0,c
  3877  0036A8  0EE4               	movlw	228
  3878  0036AA                     u5877:
  3879  0036AA  2EE8               	decfsz	wreg,f,c
  3880  0036AC  D7FE               	bra	u5877
  3881  0036AE  2E0E               	decfsz	??_calibrate_white^0,f,c
  3882  0036B0  D7FC               	bra	u5877
  3883  0036B2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3884  0036B4  D7FA               	bra	u5877
  3885  0036B6  D000               	nop2	
  3886  0036B8                     
  3887                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  3888  0036B8  EC6F  F029         	call	_color_read_Red	;wreg free
  3889  0036BC  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  3890  0036C0  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  3891  0036C4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3892  0036C8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3893  0036CC  EC97  F029         	call	_color_read_Green	;wreg free
  3894  0036D0  EE20 F002          	lfsr	2,2
  3895  0036D4  500C               	movf	calibrate_white@w^0,w,c
  3896  0036D6  26D9               	addwf	fsr2l,f,c
  3897  0036D8  500D               	movf	(calibrate_white@w+1)^0,w,c
  3898  0036DA  22DA               	addwfc	fsr2h,f,c
  3899  0036DC  C005  FFDE         	movff	?_color_read_Green,postinc2
  3900  0036E0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3901  0036E4  ECBF  F029         	call	_color_read_Blue	;wreg free
  3902  0036E8  EE20 F004          	lfsr	2,4
  3903  0036EC  500C               	movf	calibrate_white@w^0,w,c
  3904  0036EE  26D9               	addwf	fsr2l,f,c
  3905  0036F0  500D               	movf	(calibrate_white@w+1)^0,w,c
  3906  0036F2  22DA               	addwfc	fsr2h,f,c
  3907  0036F4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3908  0036F8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3909  0036FC                     
  3910                           ;color.c: 269:     LED_G();
  3911  0036FC  EC22  F02C         	call	_LED_G	;wreg free
  3912  003700                     
  3913                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3914  003700  0E09               	movlw	9
  3915  003702  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3916  003704  0E1E               	movlw	30
  3917  003706  6E0E               	movwf	??_calibrate_white^0,c
  3918  003708  0EE4               	movlw	228
  3919  00370A                     u5887:
  3920  00370A  2EE8               	decfsz	wreg,f,c
  3921  00370C  D7FE               	bra	u5887
  3922  00370E  2E0E               	decfsz	??_calibrate_white^0,f,c
  3923  003710  D7FC               	bra	u5887
  3924  003712  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3925  003714  D7FA               	bra	u5887
  3926  003716  D000               	nop2	
  3927  003718                     
  3928                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  3929  003718  EC6F  F029         	call	_color_read_Red	;wreg free
  3930  00371C  EE20 F006          	lfsr	2,6
  3931  003720  500C               	movf	calibrate_white@w^0,w,c
  3932  003722  26D9               	addwf	fsr2l,f,c
  3933  003724  500D               	movf	(calibrate_white@w+1)^0,w,c
  3934  003726  22DA               	addwfc	fsr2h,f,c
  3935  003728  C005  FFDE         	movff	?_color_read_Red,postinc2
  3936  00372C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3937  003730  EC97  F029         	call	_color_read_Green	;wreg free
  3938  003734  EE20 F008          	lfsr	2,8
  3939  003738  500C               	movf	calibrate_white@w^0,w,c
  3940  00373A  26D9               	addwf	fsr2l,f,c
  3941  00373C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3942  00373E  22DA               	addwfc	fsr2h,f,c
  3943  003740  C005  FFDE         	movff	?_color_read_Green,postinc2
  3944  003744  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3945  003748  ECBF  F029         	call	_color_read_Blue	;wreg free
  3946  00374C  EE20 F00A          	lfsr	2,10
  3947  003750  500C               	movf	calibrate_white@w^0,w,c
  3948  003752  26D9               	addwf	fsr2l,f,c
  3949  003754  500D               	movf	(calibrate_white@w+1)^0,w,c
  3950  003756  22DA               	addwfc	fsr2h,f,c
  3951  003758  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3952  00375C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3953  003760                     
  3954                           ;color.c: 275:     LED_B();
  3955  003760  EC32  F02C         	call	_LED_B	;wreg free
  3956  003764                     
  3957                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3958  003764  0E09               	movlw	9
  3959  003766  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3960  003768  0E1E               	movlw	30
  3961  00376A  6E0E               	movwf	??_calibrate_white^0,c
  3962  00376C  0EE4               	movlw	228
  3963  00376E                     u5897:
  3964  00376E  2EE8               	decfsz	wreg,f,c
  3965  003770  D7FE               	bra	u5897
  3966  003772  2E0E               	decfsz	??_calibrate_white^0,f,c
  3967  003774  D7FC               	bra	u5897
  3968  003776  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3969  003778  D7FA               	bra	u5897
  3970  00377A  D000               	nop2	
  3971  00377C                     
  3972                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  3973  00377C  EC6F  F029         	call	_color_read_Red	;wreg free
  3974  003780  EE20 F00C          	lfsr	2,12
  3975  003784  500C               	movf	calibrate_white@w^0,w,c
  3976  003786  26D9               	addwf	fsr2l,f,c
  3977  003788  500D               	movf	(calibrate_white@w+1)^0,w,c
  3978  00378A  22DA               	addwfc	fsr2h,f,c
  3979  00378C  C005  FFDE         	movff	?_color_read_Red,postinc2
  3980  003790  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3981  003794  EC97  F029         	call	_color_read_Green	;wreg free
  3982  003798  EE20 F00E          	lfsr	2,14
  3983  00379C  500C               	movf	calibrate_white@w^0,w,c
  3984  00379E  26D9               	addwf	fsr2l,f,c
  3985  0037A0  500D               	movf	(calibrate_white@w+1)^0,w,c
  3986  0037A2  22DA               	addwfc	fsr2h,f,c
  3987  0037A4  C005  FFDE         	movff	?_color_read_Green,postinc2
  3988  0037A8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3989  0037AC  ECBF  F029         	call	_color_read_Blue	;wreg free
  3990  0037B0  EE20 F010          	lfsr	2,16
  3991  0037B4  500C               	movf	calibrate_white@w^0,w,c
  3992  0037B6  26D9               	addwf	fsr2l,f,c
  3993  0037B8  500D               	movf	(calibrate_white@w+1)^0,w,c
  3994  0037BA  22DA               	addwfc	fsr2h,f,c
  3995  0037BC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3996  0037C0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3997  0037C4  ECE7  F029         	call	_color_read_Clear	;wreg free
  3998  0037C8  EE20 F01A          	lfsr	2,26
  3999  0037CC  500C               	movf	calibrate_white@w^0,w,c
  4000  0037CE  26D9               	addwf	fsr2l,f,c
  4001  0037D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4002  0037D2  22DA               	addwfc	fsr2h,f,c
  4003  0037D4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4004  0037D8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4005  0037DC                     
  4006                           ;color.c: 280:     LED_C();
  4007  0037DC  EC42  F02C         	call	_LED_C	;wreg free
  4008  0037E0                     
  4009                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4010  0037E0  0E09               	movlw	9
  4011  0037E2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4012  0037E4  0E1E               	movlw	30
  4013  0037E6  6E0E               	movwf	??_calibrate_white^0,c
  4014  0037E8  0EE4               	movlw	228
  4015  0037EA                     u5907:
  4016  0037EA  2EE8               	decfsz	wreg,f,c
  4017  0037EC  D7FE               	bra	u5907
  4018  0037EE  2E0E               	decfsz	??_calibrate_white^0,f,c
  4019  0037F0  D7FC               	bra	u5907
  4020  0037F2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4021  0037F4  D7FA               	bra	u5907
  4022  0037F6  D000               	nop2	
  4023  0037F8                     
  4024                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4025  0037F8  EC6F  F029         	call	_color_read_Red	;wreg free
  4026  0037FC  EE20 F012          	lfsr	2,18
  4027  003800  500C               	movf	calibrate_white@w^0,w,c
  4028  003802  26D9               	addwf	fsr2l,f,c
  4029  003804  500D               	movf	(calibrate_white@w+1)^0,w,c
  4030  003806  22DA               	addwfc	fsr2h,f,c
  4031  003808  C005  FFDE         	movff	?_color_read_Red,postinc2
  4032  00380C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4033  003810  EC97  F029         	call	_color_read_Green	;wreg free
  4034  003814  EE20 F014          	lfsr	2,20
  4035  003818  500C               	movf	calibrate_white@w^0,w,c
  4036  00381A  26D9               	addwf	fsr2l,f,c
  4037  00381C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4038  00381E  22DA               	addwfc	fsr2h,f,c
  4039  003820  C005  FFDE         	movff	?_color_read_Green,postinc2
  4040  003824  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4041  003828  ECBF  F029         	call	_color_read_Blue	;wreg free
  4042  00382C  EE20 F016          	lfsr	2,22
  4043  003830  500C               	movf	calibrate_white@w^0,w,c
  4044  003832  26D9               	addwf	fsr2l,f,c
  4045  003834  500D               	movf	(calibrate_white@w+1)^0,w,c
  4046  003836  22DA               	addwfc	fsr2h,f,c
  4047  003838  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4048  00383C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4049  003840  ECE7  F029         	call	_color_read_Clear	;wreg free
  4050  003844  EE20 F018          	lfsr	2,24
  4051  003848  500C               	movf	calibrate_white@w^0,w,c
  4052  00384A  26D9               	addwf	fsr2l,f,c
  4053  00384C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4054  00384E  22DA               	addwfc	fsr2h,f,c
  4055  003850  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4056  003854  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4057  003858                     
  4058                           ;color.c: 284:     LED_OFF();
  4059  003858  EC12  F02C         	call	_LED_OFF	;wreg free
  4060  00385C                     
  4061                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4062  00385C  0E29               	movlw	41
  4063  00385E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4064  003860  0E96               	movlw	150
  4065  003862  6E0E               	movwf	??_calibrate_white^0,c
  4066  003864  0E7F               	movlw	127
  4067  003866                     u5917:
  4068  003866  2EE8               	decfsz	wreg,f,c
  4069  003868  D7FE               	bra	u5917
  4070  00386A  2E0E               	decfsz	??_calibrate_white^0,f,c
  4071  00386C  D7FC               	bra	u5917
  4072  00386E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4073  003870  D7FA               	bra	u5917
  4074  003872  F000               	nop	
  4075                           
  4076                           ;color.c: 286:     toggle_light(1,2);
  4077  003874  0E02               	movlw	2
  4078  003876  6E01               	movwf	toggle_light@toggletime^0,c
  4079  003878  0E01               	movlw	1
  4080  00387A  ECE5  F019         	call	_toggle_light
  4081  00387E  0012               	return		;funcret
  4082  003880                     __end_of_calibrate_white:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _color_read_Red *****************
  4086 ;; Defined at:
  4087 ;;		line 91 in file "color.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  tmp             2    9[COMRAM] unsigned int 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  2    4[COMRAM] unsigned int 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4104 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;Total ram usage:        7 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 3
  4108 ;; This function calls:
  4109 ;;		_I2C_2_Master_Read
  4110 ;;		_I2C_2_Master_RepStart
  4111 ;;		_I2C_2_Master_Start
  4112 ;;		_I2C_2_Master_Stop
  4113 ;;		_I2C_2_Master_Write
  4114 ;; This function is called by:
  4115 ;;		_read_color
  4116 ;;		_calibrate_white
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text10
  4121  0052DE                     __ptext10:
  4122                           	callstack 0
  4123  0052DE                     _color_read_Red:
  4124                           	callstack 24
  4125  0052DE                     
  4126                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4127  0052DE  ECBD  F02C         	call	_I2C_2_Master_Start	;wreg free
  4128                           
  4129                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4130  0052E2  0E52               	movlw	82
  4131  0052E4  ECA7  F02C         	call	_I2C_2_Master_Write
  4132                           
  4133                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4134  0052E8  0EB6               	movlw	182
  4135  0052EA  ECA7  F02C         	call	_I2C_2_Master_Write
  4136                           
  4137                           ;color.c: 97:  I2C_2_Master_RepStart();
  4138  0052EE  ECB3  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4139                           
  4140                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4141  0052F2  0E53               	movlw	83
  4142  0052F4  ECA7  F02C         	call	_I2C_2_Master_Write
  4143                           
  4144                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4145  0052F8  0E01               	movlw	1
  4146  0052FA  EC54  F02A         	call	_I2C_2_Master_Read
  4147  0052FE  6E07               	movwf	??_color_read_Red^0,c
  4148  005300  5007               	movf	??_color_read_Red^0,w,c
  4149  005302  6E0A               	movwf	color_read_Red@tmp^0,c
  4150  005304  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4151                           
  4152                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4153  005306  0E00               	movlw	0
  4154  005308  EC54  F02A         	call	_I2C_2_Master_Read
  4155  00530C  6E07               	movwf	??_color_read_Red^0,c
  4156  00530E  5007               	movf	??_color_read_Red^0,w,c
  4157  005310  6E09               	movwf	(??_color_read_Red+2)^0,c
  4158  005312  6A08               	clrf	(??_color_read_Red+1)^0,c
  4159  005314  500A               	movf	color_read_Red@tmp^0,w,c
  4160  005316  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4161  005318  6E0A               	movwf	color_read_Red@tmp^0,c
  4162  00531A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4163  00531C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4164  00531E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4165                           
  4166                           ;color.c: 101:  I2C_2_Master_Stop();
  4167  005320  ECB8  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4168  005324                     
  4169                           ;color.c: 102:  return tmp;
  4170  005324  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4171  005328  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4172  00532C  0012               	return		;funcret
  4173  00532E                     __end_of_color_read_Red:
  4174                           	callstack 0
  4175                           
  4176 ;; *************** function _color_read_Green *****************
  4177 ;; Defined at:
  4178 ;;		line 119 in file "color.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  tmp             2    9[COMRAM] unsigned int 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    4[COMRAM] unsigned int 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;Total ram usage:        7 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 3
  4199 ;; This function calls:
  4200 ;;		_I2C_2_Master_Read
  4201 ;;		_I2C_2_Master_RepStart
  4202 ;;		_I2C_2_Master_Start
  4203 ;;		_I2C_2_Master_Stop
  4204 ;;		_I2C_2_Master_Write
  4205 ;; This function is called by:
  4206 ;;		_read_color
  4207 ;;		_calibrate_white
  4208 ;;		_distance_measure
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text11
  4213  00532E                     __ptext11:
  4214                           	callstack 0
  4215  00532E                     _color_read_Green:
  4216                           	callstack 24
  4217  00532E                     
  4218                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4219  00532E  ECBD  F02C         	call	_I2C_2_Master_Start	;wreg free
  4220                           
  4221                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4222  005332  0E52               	movlw	82
  4223  005334  ECA7  F02C         	call	_I2C_2_Master_Write
  4224                           
  4225                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4226  005338  0EB8               	movlw	184
  4227  00533A  ECA7  F02C         	call	_I2C_2_Master_Write
  4228                           
  4229                           ;color.c: 125:  I2C_2_Master_RepStart();
  4230  00533E  ECB3  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4231                           
  4232                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4233  005342  0E53               	movlw	83
  4234  005344  ECA7  F02C         	call	_I2C_2_Master_Write
  4235                           
  4236                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4237  005348  0E01               	movlw	1
  4238  00534A  EC54  F02A         	call	_I2C_2_Master_Read
  4239  00534E  6E07               	movwf	??_color_read_Green^0,c
  4240  005350  5007               	movf	??_color_read_Green^0,w,c
  4241  005352  6E0A               	movwf	color_read_Green@tmp^0,c
  4242  005354  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4243                           
  4244                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4245  005356  0E00               	movlw	0
  4246  005358  EC54  F02A         	call	_I2C_2_Master_Read
  4247  00535C  6E07               	movwf	??_color_read_Green^0,c
  4248  00535E  5007               	movf	??_color_read_Green^0,w,c
  4249  005360  6E09               	movwf	(??_color_read_Green+2)^0,c
  4250  005362  6A08               	clrf	(??_color_read_Green+1)^0,c
  4251  005364  500A               	movf	color_read_Green@tmp^0,w,c
  4252  005366  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4253  005368  6E0A               	movwf	color_read_Green@tmp^0,c
  4254  00536A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4255  00536C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4256  00536E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4257                           
  4258                           ;color.c: 129:  I2C_2_Master_Stop();
  4259  005370  ECB8  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4260  005374                     
  4261                           ;color.c: 130:  return tmp;
  4262  005374  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4263  005378  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4264  00537C  0012               	return		;funcret
  4265  00537E                     __end_of_color_read_Green:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _color_read_Blue *****************
  4269 ;; Defined at:
  4270 ;;		line 105 in file "color.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  tmp             2    9[COMRAM] unsigned int 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2    4[COMRAM] unsigned int 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4286 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;Total ram usage:        7 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 3
  4291 ;; This function calls:
  4292 ;;		_I2C_2_Master_Read
  4293 ;;		_I2C_2_Master_RepStart
  4294 ;;		_I2C_2_Master_Start
  4295 ;;		_I2C_2_Master_Stop
  4296 ;;		_I2C_2_Master_Write
  4297 ;; This function is called by:
  4298 ;;		_read_color
  4299 ;;		_calibrate_white
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text12
  4304  00537E                     __ptext12:
  4305                           	callstack 0
  4306  00537E                     _color_read_Blue:
  4307                           	callstack 24
  4308  00537E                     
  4309                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4310  00537E  ECBD  F02C         	call	_I2C_2_Master_Start	;wreg free
  4311                           
  4312                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4313  005382  0E52               	movlw	82
  4314  005384  ECA7  F02C         	call	_I2C_2_Master_Write
  4315                           
  4316                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4317  005388  0EBA               	movlw	186
  4318  00538A  ECA7  F02C         	call	_I2C_2_Master_Write
  4319                           
  4320                           ;color.c: 111:  I2C_2_Master_RepStart();
  4321  00538E  ECB3  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4322                           
  4323                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4324  005392  0E53               	movlw	83
  4325  005394  ECA7  F02C         	call	_I2C_2_Master_Write
  4326                           
  4327                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4328  005398  0E01               	movlw	1
  4329  00539A  EC54  F02A         	call	_I2C_2_Master_Read
  4330  00539E  6E07               	movwf	??_color_read_Blue^0,c
  4331  0053A0  5007               	movf	??_color_read_Blue^0,w,c
  4332  0053A2  6E0A               	movwf	color_read_Blue@tmp^0,c
  4333  0053A4  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4334                           
  4335                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4336  0053A6  0E00               	movlw	0
  4337  0053A8  EC54  F02A         	call	_I2C_2_Master_Read
  4338  0053AC  6E07               	movwf	??_color_read_Blue^0,c
  4339  0053AE  5007               	movf	??_color_read_Blue^0,w,c
  4340  0053B0  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4341  0053B2  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4342  0053B4  500A               	movf	color_read_Blue@tmp^0,w,c
  4343  0053B6  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4344  0053B8  6E0A               	movwf	color_read_Blue@tmp^0,c
  4345  0053BA  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4346  0053BC  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4347  0053BE  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4348                           
  4349                           ;color.c: 115:  I2C_2_Master_Stop();
  4350  0053C0  ECB8  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4351  0053C4                     
  4352                           ;color.c: 116:  return tmp;
  4353  0053C4  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4354  0053C8  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4355  0053CC  0012               	return		;funcret
  4356  0053CE                     __end_of_color_read_Blue:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function _LED_R *****************
  4360 ;; Defined at:
  4361 ;;		line 164 in file "color.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_color_data_collection
  4386 ;;		_calibrate_white
  4387 ;;		_detect_color
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text13
  4392  005804                     __ptext13:
  4393                           	callstack 0
  4394  005804                     _LED_R:
  4395                           	callstack 27
  4396  005804                     
  4397                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4398  005804  827F               	bsf	127,1,c	;volatile
  4399                           
  4400                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4401  005806  9E7E               	bcf	126,7,c	;volatile
  4402                           
  4403                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4404  005808  9879               	bcf	121,4,c	;volatile
  4405  00580A                     
  4406                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4407  00580A  0E11               	movlw	17
  4408  00580C  6E02               	movwf	(??_LED_R+1)^0,c
  4409  00580E  0E3C               	movlw	60
  4410  005810  6E01               	movwf	??_LED_R^0,c
  4411  005812  0ECB               	movlw	203
  4412  005814                     u5927:
  4413  005814  2EE8               	decfsz	wreg,f,c
  4414  005816  D7FE               	bra	u5927
  4415  005818  2E01               	decfsz	??_LED_R^0,f,c
  4416  00581A  D7FC               	bra	u5927
  4417  00581C  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4418  00581E  D7FA               	bra	u5927
  4419  005820  F000               	nop	
  4420  005822  0012               	return		;funcret
  4421  005824                     __end_of_LED_R:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _LED_OFF *****************
  4425 ;; Defined at:
  4426 ;;		line 155 in file "color.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:        2 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_calibrate_white
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text14
  4455  005824                     __ptext14:
  4456                           	callstack 0
  4457  005824                     _LED_OFF:
  4458                           	callstack 27
  4459  005824                     
  4460                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4461  005824  927F               	bcf	127,1,c	;volatile
  4462                           
  4463                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4464  005826  9E7E               	bcf	126,7,c	;volatile
  4465                           
  4466                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4467  005828  9879               	bcf	121,4,c	;volatile
  4468  00582A                     
  4469                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4470  00582A  0E11               	movlw	17
  4471  00582C  6E02               	movwf	(??_LED_OFF+1)^0,c
  4472  00582E  0E3C               	movlw	60
  4473  005830  6E01               	movwf	??_LED_OFF^0,c
  4474  005832  0ECB               	movlw	203
  4475  005834                     u5937:
  4476  005834  2EE8               	decfsz	wreg,f,c
  4477  005836  D7FE               	bra	u5937
  4478  005838  2E01               	decfsz	??_LED_OFF^0,f,c
  4479  00583A  D7FC               	bra	u5937
  4480  00583C  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4481  00583E  D7FA               	bra	u5937
  4482  005840  F000               	nop	
  4483  005842  0012               	return		;funcret
  4484  005844                     __end_of_LED_OFF:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _LED_G *****************
  4488 ;; Defined at:
  4489 ;;		line 191 in file "color.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;Total ram usage:        2 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_color_data_collection
  4514 ;;		_calibrate_white
  4515 ;;		_detect_color
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text15
  4520  005844                     __ptext15:
  4521                           	callstack 0
  4522  005844                     _LED_G:
  4523                           	callstack 27
  4524  005844                     
  4525                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4526  005844  927F               	bcf	127,1,c	;volatile
  4527                           
  4528                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4529  005846  9E7E               	bcf	126,7,c	;volatile
  4530                           
  4531                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4532  005848  8879               	bsf	121,4,c	;volatile
  4533  00584A                     
  4534                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4535  00584A  0E11               	movlw	17
  4536  00584C  6E02               	movwf	(??_LED_G+1)^0,c
  4537  00584E  0E3C               	movlw	60
  4538  005850  6E01               	movwf	??_LED_G^0,c
  4539  005852  0ECB               	movlw	203
  4540  005854                     u5947:
  4541  005854  2EE8               	decfsz	wreg,f,c
  4542  005856  D7FE               	bra	u5947
  4543  005858  2E01               	decfsz	??_LED_G^0,f,c
  4544  00585A  D7FC               	bra	u5947
  4545  00585C  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4546  00585E  D7FA               	bra	u5947
  4547  005860  F000               	nop	
  4548  005862  0012               	return		;funcret
  4549  005864                     __end_of_LED_G:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function _LED_B *****************
  4553 ;; Defined at:
  4554 ;;		line 182 in file "color.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;Total ram usage:        2 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_color_data_collection
  4579 ;;		_calibrate_white
  4580 ;;		_detect_color
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text16
  4585  005864                     __ptext16:
  4586                           	callstack 0
  4587  005864                     _LED_B:
  4588                           	callstack 27
  4589  005864                     
  4590                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4591  005864  927F               	bcf	127,1,c	;volatile
  4592                           
  4593                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4594  005866  8E7E               	bsf	126,7,c	;volatile
  4595                           
  4596                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4597  005868  9879               	bcf	121,4,c	;volatile
  4598  00586A                     
  4599                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4600  00586A  0E11               	movlw	17
  4601  00586C  6E02               	movwf	(??_LED_B+1)^0,c
  4602  00586E  0E3C               	movlw	60
  4603  005870  6E01               	movwf	??_LED_B^0,c
  4604  005872  0ECB               	movlw	203
  4605  005874                     u5957:
  4606  005874  2EE8               	decfsz	wreg,f,c
  4607  005876  D7FE               	bra	u5957
  4608  005878  2E01               	decfsz	??_LED_B^0,f,c
  4609  00587A  D7FC               	bra	u5957
  4610  00587C  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4611  00587E  D7FA               	bra	u5957
  4612  005880  F000               	nop	
  4613  005882  0012               	return		;funcret
  4614  005884                     __end_of_LED_B:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _amb_light_measure *****************
  4618 ;; Defined at:
  4619 ;;		line 377 in file "color.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4622 ;;		 -> main@rgb(8), main@amb(8), 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4625 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4626 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4627 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4628 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  2   10[BANK0 ] unsigned int 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4639 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;Total ram usage:       14 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 5
  4645 ;; This function calls:
  4646 ;;		_LED_C
  4647 ;;		___fldiv
  4648 ;;		___xxtofl
  4649 ;;		_color_read_Clear
  4650 ;;		_lroundf
  4651 ;;		_toggle_light
  4652 ;; This function is called by:
  4653 ;;		_main
  4654 ;;		_test_function
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text17
  4659  0046E4                     __ptext17:
  4660                           	callstack 0
  4661  0046E4                     _amb_light_measure:
  4662                           	callstack 24
  4663  0046E4  0E00               	movlw	0
  4664  0046E6  0100               	movlb	0	; () banked
  4665  0046E8  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4666  0046EA  0E00               	movlw	0
  4667  0046EC  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4668  0046EE  0E00               	movlw	0
  4669  0046F0  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4670  0046F2  0E00               	movlw	0
  4671  0046F4  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4672  0046F6  0E00               	movlw	0
  4673  0046F8  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4674  0046FA  0E00               	movlw	0
  4675  0046FC  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4676  0046FE                     
  4677                           ; BSR set to: 0
  4678                           ;color.c: 380:     toggle_light(2,2);
  4679  0046FE  0E02               	movlw	2
  4680  004700  6E01               	movwf	toggle_light@toggletime^0,c
  4681  004702  0E02               	movlw	2
  4682  004704  ECE5  F019         	call	_toggle_light
  4683  004708                     
  4684                           ;color.c: 381:     LED_C();
  4685  004708  EC42  F02C         	call	_LED_C	;wreg free
  4686  00470C                     
  4687                           ;color.c: 382:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4688  00470C  0E29               	movlw	41
  4689  00470E  0100               	movlb	0	; () banked
  4690  004710  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4691  004712  0E96               	movlw	150
  4692  004714  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4693  004716  0E7F               	movlw	127
  4694  004718                     u5967:
  4695  004718  2EE8               	decfsz	wreg,f,c
  4696  00471A  D7FE               	bra	u5967
  4697  00471C  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4698  00471E  D7FC               	bra	u5967
  4699  004720  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4700  004722  D7FA               	bra	u5967
  4701  004724                     
  4702                           ;color.c: 384:     CC_amb_1 = color_read_Clear();
  4703  004724  ECE7  F029         	call	_color_read_Clear	;wreg free
  4704  004728  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4705  00472C  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4706  004730                     
  4707                           ;color.c: 385:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4708  004730  0E11               	movlw	17
  4709  004732  0100               	movlb	0	; () banked
  4710  004734  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4711  004736  0E3C               	movlw	60
  4712  004738  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4713  00473A  0ECB               	movlw	203
  4714  00473C                     u5977:
  4715  00473C  2EE8               	decfsz	wreg,f,c
  4716  00473E  D7FE               	bra	u5977
  4717  004740  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4718  004742  D7FC               	bra	u5977
  4719  004744  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4720  004746  D7FA               	bra	u5977
  4721  004748                     
  4722                           ;color.c: 387:     CC_amb_2 = color_read_Clear();
  4723  004748  ECE7  F029         	call	_color_read_Clear	;wreg free
  4724  00474C  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4725  004750  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4726  004754                     
  4727                           ;color.c: 388:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4728  004754  0E11               	movlw	17
  4729  004756  0100               	movlb	0	; () banked
  4730  004758  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4731  00475A  0E3C               	movlw	60
  4732  00475C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4733  00475E  0ECB               	movlw	203
  4734  004760                     u5987:
  4735  004760  2EE8               	decfsz	wreg,f,c
  4736  004762  D7FE               	bra	u5987
  4737  004764  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4738  004766  D7FC               	bra	u5987
  4739  004768  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4740  00476A  D7FA               	bra	u5987
  4741  00476C                     
  4742                           ;color.c: 390:     CC_amb_3 = color_read_Clear();
  4743  00476C  ECE7  F029         	call	_color_read_Clear	;wreg free
  4744  004770  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4745  004774  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4746  004778                     
  4747                           ;color.c: 391:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4748  004778  0E11               	movlw	17
  4749  00477A  0100               	movlb	0	; () banked
  4750  00477C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4751  00477E  0E3C               	movlw	60
  4752  004780  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4753  004782  0ECB               	movlw	203
  4754  004784                     u5997:
  4755  004784  2EE8               	decfsz	wreg,f,c
  4756  004786  D7FE               	bra	u5997
  4757  004788  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4758  00478A  D7FC               	bra	u5997
  4759  00478C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4760  00478E  D7FA               	bra	u5997
  4761  004790                     
  4762                           ;color.c: 393:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4763  004790  0100               	movlb	0	; () banked
  4764  004792  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4765  004794  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4766  004796  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4767  004798  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4768  00479A  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4769  00479C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4770  00479E  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4771  0047A0  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4772  0047A2  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4773  0047A4  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4774  0047A6  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4775  0047AA  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4776  0047AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4777  0047B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4778  0047B2  0E00               	movlw	0
  4779  0047B4  EC2A  F01D         	call	___xxtofl
  4780  0047B8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4781  0047BC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4782  0047C0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4783  0047C4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4784  0047C8  0E00               	movlw	0
  4785  0047CA  6E13               	movwf	___fldiv@a^0,c
  4786  0047CC  0E00               	movlw	0
  4787  0047CE  6E14               	movwf	(___fldiv@a+1)^0,c
  4788  0047D0  0E40               	movlw	64
  4789  0047D2  6E15               	movwf	(___fldiv@a+2)^0,c
  4790  0047D4  0E40               	movlw	64
  4791  0047D6  6E16               	movwf	(___fldiv@a+3)^0,c
  4792  0047D8  EC6D  F013         	call	___fldiv	;wreg free
  4793  0047DC  C00F  F066         	movff	?___fldiv,lroundf@x
  4794  0047E0  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4795  0047E4  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4796  0047E8  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4797  0047EC  EC13  F02B         	call	_lroundf	;wreg free
  4798  0047F0  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4799  0047F4  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4800  0047F8                     
  4801                           ;color.c: 395:     toggle_light(2,2);
  4802  0047F8  0E02               	movlw	2
  4803  0047FA  6E01               	movwf	toggle_light@toggletime^0,c
  4804  0047FC  0E02               	movlw	2
  4805  0047FE  ECE5  F019         	call	_toggle_light
  4806  004802                     
  4807                           ;color.c: 397:     return CC_amb_ave;
  4808  004802  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  4809  004806  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  4810  00480A  0012               	return		;funcret
  4811  00480C                     __end_of_amb_light_measure:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _lroundf *****************
  4815 ;; Defined at:
  4816 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  x               4    6[BANK0 ] float 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  4    6[BANK0 ] long 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;Total ram usage:        4 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 4
  4837 ;; This function calls:
  4838 ;;		___fltol
  4839 ;;		_roundf
  4840 ;; This function is called by:
  4841 ;;		_detect_color
  4842 ;;		_amb_light_measure
  4843 ;;		_distance_measure
  4844 ;;		_check_color_reading
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text18
  4849  005626                     __ptext18:
  4850                           	callstack 0
  4851  005626                     _lroundf:
  4852                           	callstack 24
  4853  005626  C066  F041         	movff	lroundf@x,roundf@x
  4854  00562A  C067  F042         	movff	lroundf@x+1,roundf@x+1
  4855  00562E  C068  F043         	movff	lroundf@x+2,roundf@x+2
  4856  005632  C069  F044         	movff	lroundf@x+3,roundf@x+3
  4857  005636  EC96  F011         	call	_roundf	;wreg free
  4858  00563A  C041  F05B         	movff	?_roundf,___fltol@f1
  4859  00563E  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  4860  005642  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  4861  005646  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  4862  00564A  EC06  F024         	call	___fltol	;wreg free
  4863  00564E  C05B  F066         	movff	?___fltol,?_lroundf
  4864  005652  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  4865  005656  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  4866  00565A  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  4867  00565E  0012               	return		;funcret
  4868  005660                     __end_of_lroundf:
  4869                           	callstack 0
  4870                           
  4871 ;; *************** function _roundf *****************
  4872 ;; Defined at:
  4873 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  x               4   64[COMRAM] float 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  y               4   86[COMRAM] float 
  4878 ;;  u               4   82[COMRAM] struct .
  4879 ;;  e               2   76[COMRAM] int 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  4   64[COMRAM] float 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4890 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;Total ram usage:       26 bytes
  4894 ;; Hardware stack levels used: 1
  4895 ;; Hardware stack levels required when called: 3
  4896 ;; This function calls:
  4897 ;;		___fladd
  4898 ;;		___flge
  4899 ;;		___flmul
  4900 ;;		___flneg
  4901 ;;		___flsub
  4902 ;; This function is called by:
  4903 ;;		_lroundf
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text19
  4908  00232C                     __ptext19:
  4909                           	callstack 0
  4910  00232C                     _roundf:
  4911                           	callstack 24
  4912  00232C  C2DD  F053         	movff	roundf@F527,roundf@u
  4913  002330  C2DE  F054         	movff	roundf@F527+1,roundf@u+1
  4914  002334  C2DF  F055         	movff	roundf@F527+2,roundf@u+2
  4915  002338  C2E0  F056         	movff	roundf@F527+3,roundf@u+3
  4916  00233C  C041  F053         	movff	roundf@x,roundf@u
  4917  002340  C042  F054         	movff	roundf@x+1,roundf@u+1
  4918  002344  C043  F055         	movff	roundf@x+2,roundf@u+2
  4919  002348  C044  F056         	movff	roundf@x+3,roundf@u+3
  4920  00234C  C053  F045         	movff	roundf@u,??_roundf
  4921  002350  C054  F046         	movff	roundf@u+1,??_roundf+1
  4922  002354  C055  F047         	movff	roundf@u+2,??_roundf+2
  4923  002358  C056  F048         	movff	roundf@u+3,??_roundf+3
  4924  00235C  0E18               	movlw	24
  4925  00235E  EFB6  F011         	goto	u4250
  4926  002362                     u4255:
  4927  002362  90D8               	bcf	status,0,c
  4928  002364  3248               	rrcf	(??_roundf+3)^0,f,c
  4929  002366  3247               	rrcf	(??_roundf+2)^0,f,c
  4930  002368  3246               	rrcf	(??_roundf+1)^0,f,c
  4931  00236A  3245               	rrcf	??_roundf^0,f,c
  4932  00236C                     u4250:
  4933  00236C  2EE8               	decfsz	wreg,f,c
  4934  00236E  EFB1  F011         	goto	u4255
  4935  002372  5045               	movf	??_roundf^0,w,c
  4936  002374  6E4D               	movwf	roundf@e^0,c
  4937  002376  6A4E               	clrf	(roundf@e+1)^0,c
  4938  002378  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4939  00237A  EFC8  F011         	goto	u4261
  4940  00237E  504E               	movf	(roundf@e+1)^0,w,c
  4941  002380  E109               	bnz	u4260
  4942  002382  0E96               	movlw	150
  4943  002384  5C4D               	subwf	roundf@e^0,w,c
  4944  002386  A0D8               	btfss	status,0,c
  4945  002388  EFC8  F011         	goto	u4261
  4946  00238C  EFCA  F011         	goto	u4260
  4947  002390                     u4261:
  4948  002390  EFD4  F011         	goto	l4497
  4949  002394                     u4260:
  4950  002394  C041  F041         	movff	roundf@x,?_roundf
  4951  002398  C042  F042         	movff	roundf@x+1,?_roundf+1
  4952  00239C  C043  F043         	movff	roundf@x+2,?_roundf+2
  4953  0023A0  C044  F044         	movff	roundf@x+3,?_roundf+3
  4954  0023A4  EF6C  F013         	goto	l1586
  4955  0023A8                     l4497:
  4956  0023A8  C053  F045         	movff	roundf@u,??_roundf
  4957  0023AC  C054  F046         	movff	roundf@u+1,??_roundf+1
  4958  0023B0  C055  F047         	movff	roundf@u+2,??_roundf+2
  4959  0023B4  C056  F048         	movff	roundf@u+3,??_roundf+3
  4960  0023B8  0E20               	movlw	32
  4961  0023BA  EFE4  F011         	goto	u4270
  4962  0023BE                     u4275:
  4963  0023BE  90D8               	bcf	status,0,c
  4964  0023C0  3248               	rrcf	(??_roundf+3)^0,f,c
  4965  0023C2  3247               	rrcf	(??_roundf+2)^0,f,c
  4966  0023C4  3246               	rrcf	(??_roundf+1)^0,f,c
  4967  0023C6  3245               	rrcf	??_roundf^0,f,c
  4968  0023C8                     u4270:
  4969  0023C8  2EE8               	decfsz	wreg,f,c
  4970  0023CA  EFDF  F011         	goto	u4275
  4971  0023CE  5045               	movf	??_roundf^0,w,c
  4972  0023D0  1046               	iorwf	(??_roundf+1)^0,w,c
  4973  0023D2  1047               	iorwf	(??_roundf+2)^0,w,c
  4974  0023D4  1048               	iorwf	(??_roundf+3)^0,w,c
  4975  0023D6  B4D8               	btfsc	status,2,c
  4976  0023D8  EFF0  F011         	goto	u4281
  4977  0023DC  EFF2  F011         	goto	u4280
  4978  0023E0                     u4281:
  4979  0023E0  EF04  F012         	goto	l4501
  4980  0023E4                     u4280:
  4981  0023E4  C041  F001         	movff	roundf@x,___flneg@f1
  4982  0023E8  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  4983  0023EC  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  4984  0023F0  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  4985  0023F4  EC30  F02B         	call	___flneg	;wreg free
  4986  0023F8  C001  F041         	movff	?___flneg,roundf@x
  4987  0023FC  C002  F042         	movff	?___flneg+1,roundf@x+1
  4988  002400  C003  F043         	movff	?___flneg+2,roundf@x+2
  4989  002404  C004  F044         	movff	?___flneg+3,roundf@x+3
  4990  002408                     l4501:
  4991  002408  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4992  00240A  EF12  F012         	goto	u4290
  4993  00240E  504E               	movf	(roundf@e+1)^0,w,c
  4994  002410  E107               	bnz	u4291
  4995  002412  0E7E               	movlw	126
  4996  002414  5C4D               	subwf	roundf@e^0,w,c
  4997  002416  B0D8               	btfsc	status,0,c
  4998  002418  EF10  F012         	goto	u4291
  4999  00241C  EF12  F012         	goto	u4290
  5000  002420                     u4291:
  5001  002420  EF2E  F012         	goto	l4507
  5002  002424                     u4290:
  5003  002424  C053  F028         	movff	roundf@u,___flmul@b
  5004  002428  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5005  00242C  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5006  002430  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5007  002434  0E00               	movlw	0
  5008  002436  6E2C               	movwf	___flmul@a^0,c
  5009  002438  0E00               	movlw	0
  5010  00243A  6E2D               	movwf	(___flmul@a+1)^0,c
  5011  00243C  0E00               	movlw	0
  5012  00243E  6E2E               	movwf	(___flmul@a+2)^0,c
  5013  002440  0E00               	movlw	0
  5014  002442  6E2F               	movwf	(___flmul@a+3)^0,c
  5015  002444  EC81  F00F         	call	___flmul	;wreg free
  5016  002448  C028  F041         	movff	?___flmul,?_roundf
  5017  00244C  C029  F042         	movff	?___flmul+1,?_roundf+1
  5018  002450  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5019  002454  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5020  002458  EF6C  F013         	goto	l1586
  5021  00245C                     l4507:
  5022  00245C  0E00               	movlw	0
  5023  00245E  6E05               	movwf	___fladd@a^0,c
  5024  002460  0E00               	movlw	0
  5025  002462  6E06               	movwf	(___fladd@a+1)^0,c
  5026  002464  0E00               	movlw	0
  5027  002466  6E07               	movwf	(___fladd@a+2)^0,c
  5028  002468  0E4B               	movlw	75
  5029  00246A  6E08               	movwf	(___fladd@a+3)^0,c
  5030  00246C  C041  F001         	movff	roundf@x,___fladd@b
  5031  002470  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5032  002474  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5033  002478  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5034  00247C  EC21  F00D         	call	___fladd	;wreg free
  5035  002480  C001  F04F         	movff	?___fladd,_roundf$3277
  5036  002484  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5037  002488  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5038  00248C  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5039  002490  0E00               	movlw	0
  5040  002492  6E05               	movwf	___fladd@a^0,c
  5041  002494  0E00               	movlw	0
  5042  002496  6E06               	movwf	(___fladd@a+1)^0,c
  5043  002498  0E00               	movlw	0
  5044  00249A  6E07               	movwf	(___fladd@a+2)^0,c
  5045  00249C  0ECB               	movlw	203
  5046  00249E  6E08               	movwf	(___fladd@a+3)^0,c
  5047  0024A0  C04F  F001         	movff	_roundf$3277,___fladd@b
  5048  0024A4  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5049  0024A8  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5050  0024AC  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5051  0024B0  EC21  F00D         	call	___fladd	;wreg free
  5052  0024B4  C001  F049         	movff	?___fladd,_roundf$3278
  5053  0024B8  C002  F04A         	movff	?___fladd+1,_roundf$3278+1
  5054  0024BC  C003  F04B         	movff	?___fladd+2,_roundf$3278+2
  5055  0024C0  C004  F04C         	movff	?___fladd+3,_roundf$3278+3
  5056  0024C4  C049  F011         	movff	_roundf$3278,___flsub@b
  5057  0024C8  C04A  F012         	movff	_roundf$3278+1,___flsub@b+1
  5058  0024CC  C04B  F013         	movff	_roundf$3278+2,___flsub@b+2
  5059  0024D0  C04C  F014         	movff	_roundf$3278+3,___flsub@b+3
  5060  0024D4  C041  F015         	movff	roundf@x,___flsub@a
  5061  0024D8  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5062  0024DC  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5063  0024E0  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5064  0024E4  EC0F  F02A         	call	___flsub	;wreg free
  5065  0024E8  C011  F057         	movff	?___flsub,roundf@y
  5066  0024EC  C012  F058         	movff	?___flsub+1,roundf@y+1
  5067  0024F0  C013  F059         	movff	?___flsub+2,roundf@y+2
  5068  0024F4  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5069  0024F8  0E00               	movlw	0
  5070  0024FA  6E01               	movwf	___flge@ff1^0,c
  5071  0024FC  0E00               	movlw	0
  5072  0024FE  6E02               	movwf	(___flge@ff1+1)^0,c
  5073  002500  0E00               	movlw	0
  5074  002502  6E03               	movwf	(___flge@ff1+2)^0,c
  5075  002504  0E3F               	movlw	63
  5076  002506  6E04               	movwf	(___flge@ff1+3)^0,c
  5077  002508  C057  F005         	movff	roundf@y,___flge@ff2
  5078  00250C  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5079  002510  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5080  002514  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5081  002518  EC8A  F024         	call	___flge	;wreg free
  5082  00251C  B0D8               	btfsc	status,0,c
  5083  00251E  EF93  F012         	goto	u4301
  5084  002522  EF95  F012         	goto	u4300
  5085  002526                     u4301:
  5086  002526  EFCB  F012         	goto	l4511
  5087  00252A                     u4300:
  5088  00252A  C041  F005         	movff	roundf@x,___fladd@a
  5089  00252E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5090  002532  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5091  002536  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5092  00253A  C057  F001         	movff	roundf@y,___fladd@b
  5093  00253E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5094  002542  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5095  002546  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5096  00254A  EC21  F00D         	call	___fladd	;wreg free
  5097  00254E  C001  F04F         	movff	?___fladd,_roundf$3277
  5098  002552  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5099  002556  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5100  00255A  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5101  00255E  C04F  F001         	movff	_roundf$3277,___fladd@b
  5102  002562  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5103  002566  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5104  00256A  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5105  00256E  0E00               	movlw	0
  5106  002570  6E05               	movwf	___fladd@a^0,c
  5107  002572  0E00               	movlw	0
  5108  002574  6E06               	movwf	(___fladd@a+1)^0,c
  5109  002576  0E80               	movlw	128
  5110  002578  6E07               	movwf	(___fladd@a+2)^0,c
  5111  00257A  0EBF               	movlw	191
  5112  00257C  6E08               	movwf	(___fladd@a+3)^0,c
  5113  00257E  EC21  F00D         	call	___fladd	;wreg free
  5114  002582  C001  F057         	movff	?___fladd,roundf@y
  5115  002586  C002  F058         	movff	?___fladd+1,roundf@y+1
  5116  00258A  C003  F059         	movff	?___fladd+2,roundf@y+2
  5117  00258E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5118  002592  EF34  F013         	goto	l4517
  5119  002596                     l4511:
  5120  002596  0E00               	movlw	0
  5121  002598  6E01               	movwf	___flge@ff1^0,c
  5122  00259A  0E00               	movlw	0
  5123  00259C  6E02               	movwf	(___flge@ff1+1)^0,c
  5124  00259E  0E00               	movlw	0
  5125  0025A0  6E03               	movwf	(___flge@ff1+2)^0,c
  5126  0025A2  0EBF               	movlw	191
  5127  0025A4  6E04               	movwf	(___flge@ff1+3)^0,c
  5128  0025A6  C057  F005         	movff	roundf@y,___flge@ff2
  5129  0025AA  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5130  0025AE  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5131  0025B2  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5132  0025B6  EC8A  F024         	call	___flge	;wreg free
  5133  0025BA  A0D8               	btfss	status,0,c
  5134  0025BC  EFE2  F012         	goto	u4311
  5135  0025C0  EFE4  F012         	goto	u4310
  5136  0025C4                     u4311:
  5137  0025C4  EF1A  F013         	goto	l4515
  5138  0025C8                     u4310:
  5139  0025C8  C041  F005         	movff	roundf@x,___fladd@a
  5140  0025CC  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5141  0025D0  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5142  0025D4  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5143  0025D8  C057  F001         	movff	roundf@y,___fladd@b
  5144  0025DC  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5145  0025E0  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5146  0025E4  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5147  0025E8  EC21  F00D         	call	___fladd	;wreg free
  5148  0025EC  C001  F04F         	movff	?___fladd,_roundf$3277
  5149  0025F0  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5150  0025F4  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5151  0025F8  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5152  0025FC  C04F  F001         	movff	_roundf$3277,___fladd@b
  5153  002600  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5154  002604  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5155  002608  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5156  00260C  0E00               	movlw	0
  5157  00260E  6E05               	movwf	___fladd@a^0,c
  5158  002610  0E00               	movlw	0
  5159  002612  6E06               	movwf	(___fladd@a+1)^0,c
  5160  002614  0E80               	movlw	128
  5161  002616  6E07               	movwf	(___fladd@a+2)^0,c
  5162  002618  0E3F               	movlw	63
  5163  00261A  6E08               	movwf	(___fladd@a+3)^0,c
  5164  00261C  EC21  F00D         	call	___fladd	;wreg free
  5165  002620  C001  F057         	movff	?___fladd,roundf@y
  5166  002624  C002  F058         	movff	?___fladd+1,roundf@y+1
  5167  002628  C003  F059         	movff	?___fladd+2,roundf@y+2
  5168  00262C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5169  002630  EF34  F013         	goto	l4517
  5170  002634                     l4515:
  5171  002634  C057  F001         	movff	roundf@y,___fladd@b
  5172  002638  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5173  00263C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5174  002640  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5175  002644  C041  F005         	movff	roundf@x,___fladd@a
  5176  002648  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5177  00264C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5178  002650  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5179  002654  EC21  F00D         	call	___fladd	;wreg free
  5180  002658  C001  F057         	movff	?___fladd,roundf@y
  5181  00265C  C002  F058         	movff	?___fladd+1,roundf@y+1
  5182  002660  C003  F059         	movff	?___fladd+2,roundf@y+2
  5183  002664  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5184  002668                     l4517:
  5185  002668  C053  F045         	movff	roundf@u,??_roundf
  5186  00266C  C054  F046         	movff	roundf@u+1,??_roundf+1
  5187  002670  C055  F047         	movff	roundf@u+2,??_roundf+2
  5188  002674  C056  F048         	movff	roundf@u+3,??_roundf+3
  5189  002678  0E20               	movlw	32
  5190  00267A  EF44  F013         	goto	u4320
  5191  00267E                     u4325:
  5192  00267E  90D8               	bcf	status,0,c
  5193  002680  3248               	rrcf	(??_roundf+3)^0,f,c
  5194  002682  3247               	rrcf	(??_roundf+2)^0,f,c
  5195  002684  3246               	rrcf	(??_roundf+1)^0,f,c
  5196  002686  3245               	rrcf	??_roundf^0,f,c
  5197  002688                     u4320:
  5198  002688  2EE8               	decfsz	wreg,f,c
  5199  00268A  EF3F  F013         	goto	u4325
  5200  00268E  5045               	movf	??_roundf^0,w,c
  5201  002690  1046               	iorwf	(??_roundf+1)^0,w,c
  5202  002692  1047               	iorwf	(??_roundf+2)^0,w,c
  5203  002694  1048               	iorwf	(??_roundf+3)^0,w,c
  5204  002696  B4D8               	btfsc	status,2,c
  5205  002698  EF50  F013         	goto	u4331
  5206  00269C  EF52  F013         	goto	u4330
  5207  0026A0                     u4331:
  5208  0026A0  EF64  F013         	goto	l4521
  5209  0026A4                     u4330:
  5210  0026A4  C057  F001         	movff	roundf@y,___flneg@f1
  5211  0026A8  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5212  0026AC  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5213  0026B0  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5214  0026B4  EC30  F02B         	call	___flneg	;wreg free
  5215  0026B8  C001  F057         	movff	?___flneg,roundf@y
  5216  0026BC  C002  F058         	movff	?___flneg+1,roundf@y+1
  5217  0026C0  C003  F059         	movff	?___flneg+2,roundf@y+2
  5218  0026C4  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5219  0026C8                     l4521:
  5220  0026C8  C057  F041         	movff	roundf@y,?_roundf
  5221  0026CC  C058  F042         	movff	roundf@y+1,?_roundf+1
  5222  0026D0  C059  F043         	movff	roundf@y+2,?_roundf+2
  5223  0026D4  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5224  0026D8                     l1586:
  5225  0026D8  0012               	return		;funcret
  5226  0026DA                     __end_of_roundf:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function ___flsub *****************
  5230 ;; Defined at:
  5231 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  b               4   16[COMRAM] float 
  5234 ;;  a               4   20[COMRAM] float 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4   16[COMRAM] float 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;Total ram usage:        8 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 2
  5253 ;; This function calls:
  5254 ;;		___fladd
  5255 ;; This function is called by:
  5256 ;;		_roundf
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text20
  5261  00541E                     __ptext20:
  5262                           	callstack 0
  5263  00541E                     ___flsub:
  5264                           	callstack 24
  5265  00541E  0E00               	movlw	0
  5266  005420  1A15               	xorwf	___flsub@a^0,f,c
  5267  005422  0E00               	movlw	0
  5268  005424  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5269  005426  0E00               	movlw	0
  5270  005428  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5271  00542A  0E80               	movlw	128
  5272  00542C  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5273  00542E  C011  F001         	movff	___flsub@b,___fladd@b
  5274  005432  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5275  005436  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5276  00543A  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5277  00543E  C015  F005         	movff	___flsub@a,___fladd@a
  5278  005442  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5279  005446  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5280  00544A  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5281  00544E  EC21  F00D         	call	___fladd	;wreg free
  5282  005452  C001  F011         	movff	?___fladd,?___flsub
  5283  005456  C002  F012         	movff	?___fladd+1,?___flsub+1
  5284  00545A  C003  F013         	movff	?___fladd+2,?___flsub+2
  5285  00545E  C004  F014         	movff	?___fladd+3,?___flsub+3
  5286  005462  0012               	return		;funcret
  5287  005464                     __end_of___flsub:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function ___fladd *****************
  5291 ;; Defined at:
  5292 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  b               4    0[COMRAM] float 
  5295 ;;  a               4    4[COMRAM] float 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  grs             1   15[COMRAM] unsigned char 
  5298 ;;  bexp            1   14[COMRAM] unsigned char 
  5299 ;;  aexp            1   13[COMRAM] unsigned char 
  5300 ;;  signs           1   12[COMRAM] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4    0[COMRAM] unsigned char 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;Total ram usage:       16 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		___flsub
  5321 ;;		_roundf
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text21
  5326  001A42                     __ptext21:
  5327                           	callstack 0
  5328  001A42                     ___fladd:
  5329                           	callstack 24
  5330  001A42  5004               	movf	(___fladd@b+3)^0,w,c
  5331  001A44  0B80               	andlw	128
  5332  001A46  6E0D               	movwf	___fladd@signs^0,c
  5333  001A48  5004               	movf	(___fladd@b+3)^0,w,c
  5334  001A4A  2404               	addwf	(___fladd@b+3)^0,w,c
  5335  001A4C  6E0F               	movwf	___fladd@bexp^0,c
  5336  001A4E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5337  001A50  EF2C  F00D         	goto	u3391
  5338  001A54  EF2E  F00D         	goto	u3390
  5339  001A58                     u3391:
  5340  001A58  EF2F  F00D         	goto	l3917
  5341  001A5C                     u3390:
  5342  001A5C  800F               	bsf	___fladd@bexp^0,0,c
  5343  001A5E                     l3917:
  5344  001A5E  500F               	movf	___fladd@bexp^0,w,c
  5345  001A60  B4D8               	btfsc	status,2,c
  5346  001A62  EF35  F00D         	goto	u3401
  5347  001A66  EF37  F00D         	goto	u3400
  5348  001A6A                     u3401:
  5349  001A6A  EF4C  F00D         	goto	l3927
  5350  001A6E                     u3400:
  5351  001A6E  280F               	incf	___fladd@bexp^0,w,c
  5352  001A70  A4D8               	btfss	status,2,c
  5353  001A72  EF3D  F00D         	goto	u3411
  5354  001A76  EF3F  F00D         	goto	u3410
  5355  001A7A                     u3411:
  5356  001A7A  EF47  F00D         	goto	l3923
  5357  001A7E                     u3410:
  5358  001A7E  0E00               	movlw	0
  5359  001A80  6E01               	movwf	___fladd@b^0,c
  5360  001A82  0E00               	movlw	0
  5361  001A84  6E02               	movwf	(___fladd@b+1)^0,c
  5362  001A86  0E00               	movlw	0
  5363  001A88  6E03               	movwf	(___fladd@b+2)^0,c
  5364  001A8A  0E00               	movlw	0
  5365  001A8C  6E04               	movwf	(___fladd@b+3)^0,c
  5366  001A8E                     l3923:
  5367  001A8E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5368  001A90  0E00               	movlw	0
  5369  001A92  6E04               	movwf	(___fladd@b+3)^0,c
  5370  001A94  EF54  F00D         	goto	l3929
  5371  001A98                     l3927:
  5372  001A98  0E00               	movlw	0
  5373  001A9A  6E01               	movwf	___fladd@b^0,c
  5374  001A9C  0E00               	movlw	0
  5375  001A9E  6E02               	movwf	(___fladd@b+1)^0,c
  5376  001AA0  0E00               	movlw	0
  5377  001AA2  6E03               	movwf	(___fladd@b+2)^0,c
  5378  001AA4  0E00               	movlw	0
  5379  001AA6  6E04               	movwf	(___fladd@b+3)^0,c
  5380  001AA8                     l3929:
  5381  001AA8  5008               	movf	(___fladd@a+3)^0,w,c
  5382  001AAA  0B80               	andlw	128
  5383  001AAC  6E0E               	movwf	___fladd@aexp^0,c
  5384  001AAE  500D               	movf	___fladd@signs^0,w,c
  5385  001AB0  180E               	xorwf	___fladd@aexp^0,w,c
  5386  001AB2  B4D8               	btfsc	status,2,c
  5387  001AB4  EF5E  F00D         	goto	u3421
  5388  001AB8  EF60  F00D         	goto	u3420
  5389  001ABC                     u3421:
  5390  001ABC  EF61  F00D         	goto	l3935
  5391  001AC0                     u3420:
  5392  001AC0  8C0D               	bsf	___fladd@signs^0,6,c
  5393  001AC2                     l3935:
  5394  001AC2  5008               	movf	(___fladd@a+3)^0,w,c
  5395  001AC4  2408               	addwf	(___fladd@a+3)^0,w,c
  5396  001AC6  6E0E               	movwf	___fladd@aexp^0,c
  5397  001AC8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5398  001ACA  EF69  F00D         	goto	u3431
  5399  001ACE  EF6B  F00D         	goto	u3430
  5400  001AD2                     u3431:
  5401  001AD2  EF6C  F00D         	goto	l3941
  5402  001AD6                     u3430:
  5403  001AD6  800E               	bsf	___fladd@aexp^0,0,c
  5404  001AD8                     l3941:
  5405  001AD8  500E               	movf	___fladd@aexp^0,w,c
  5406  001ADA  B4D8               	btfsc	status,2,c
  5407  001ADC  EF72  F00D         	goto	u3441
  5408  001AE0  EF74  F00D         	goto	u3440
  5409  001AE4                     u3441:
  5410  001AE4  EF89  F00D         	goto	l3951
  5411  001AE8                     u3440:
  5412  001AE8  280E               	incf	___fladd@aexp^0,w,c
  5413  001AEA  A4D8               	btfss	status,2,c
  5414  001AEC  EF7A  F00D         	goto	u3451
  5415  001AF0  EF7C  F00D         	goto	u3450
  5416  001AF4                     u3451:
  5417  001AF4  EF84  F00D         	goto	l3947
  5418  001AF8                     u3450:
  5419  001AF8  0E00               	movlw	0
  5420  001AFA  6E05               	movwf	___fladd@a^0,c
  5421  001AFC  0E00               	movlw	0
  5422  001AFE  6E06               	movwf	(___fladd@a+1)^0,c
  5423  001B00  0E00               	movlw	0
  5424  001B02  6E07               	movwf	(___fladd@a+2)^0,c
  5425  001B04  0E00               	movlw	0
  5426  001B06  6E08               	movwf	(___fladd@a+3)^0,c
  5427  001B08                     l3947:
  5428  001B08  8E07               	bsf	(___fladd@a+2)^0,7,c
  5429  001B0A  0E00               	movlw	0
  5430  001B0C  6E08               	movwf	(___fladd@a+3)^0,c
  5431  001B0E  EF91  F00D         	goto	l3953
  5432  001B12                     l3951:
  5433  001B12  0E00               	movlw	0
  5434  001B14  6E05               	movwf	___fladd@a^0,c
  5435  001B16  0E00               	movlw	0
  5436  001B18  6E06               	movwf	(___fladd@a+1)^0,c
  5437  001B1A  0E00               	movlw	0
  5438  001B1C  6E07               	movwf	(___fladd@a+2)^0,c
  5439  001B1E  0E00               	movlw	0
  5440  001B20  6E08               	movwf	(___fladd@a+3)^0,c
  5441  001B22                     l3953:
  5442  001B22  500F               	movf	___fladd@bexp^0,w,c
  5443  001B24  5C0E               	subwf	___fladd@aexp^0,w,c
  5444  001B26  B0D8               	btfsc	status,0,c
  5445  001B28  EF98  F00D         	goto	u3461
  5446  001B2C  EF9A  F00D         	goto	u3460
  5447  001B30                     u3461:
  5448  001B30  EFC1  F00D         	goto	l3989
  5449  001B34                     u3460:
  5450  001B34  AC0D               	btfss	___fladd@signs^0,6,c
  5451  001B36  EF9F  F00D         	goto	u3471
  5452  001B3A  EFA1  F00D         	goto	u3470
  5453  001B3E                     u3471:
  5454  001B3E  EFA3  F00D         	goto	l3959
  5455  001B42                     u3470:
  5456  001B42  0E80               	movlw	128
  5457  001B44  1A0D               	xorwf	___fladd@signs^0,f,c
  5458  001B46                     l3959:
  5459  001B46  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5460  001B4A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5461  001B4E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5462  001B52  C001  F010         	movff	___fladd@b,___fladd@grs
  5463  001B56  C005  F001         	movff	___fladd@a,___fladd@b
  5464  001B5A  C010  F005         	movff	___fladd@grs,___fladd@a
  5465  001B5E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5466  001B62  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5467  001B66  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5468  001B6A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5469  001B6E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5470  001B72  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5471  001B76  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5472  001B7A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5473  001B7E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5474  001B82                     l3989:
  5475  001B82  0E00               	movlw	0
  5476  001B84  6E10               	movwf	___fladd@grs^0,c
  5477  001B86  500F               	movf	___fladd@bexp^0,w,c
  5478  001B88  C00E  F009         	movff	___fladd@aexp,??___fladd
  5479  001B8C  6A0A               	clrf	(??___fladd+1)^0,c
  5480  001B8E  5E09               	subwf	??___fladd^0,f,c
  5481  001B90  0E00               	movlw	0
  5482  001B92  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5483  001B94  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5484  001B96  EFD6  F00D         	goto	u3481
  5485  001B9A  500A               	movf	(??___fladd+1)^0,w,c
  5486  001B9C  E109               	bnz	u3480
  5487  001B9E  0E1A               	movlw	26
  5488  001BA0  5C09               	subwf	??___fladd^0,w,c
  5489  001BA2  A0D8               	btfss	status,0,c
  5490  001BA4  EFD6  F00D         	goto	u3481
  5491  001BA8  EFD8  F00D         	goto	u3480
  5492  001BAC                     u3481:
  5493  001BAC  EF0F  F00E         	goto	l1322
  5494  001BB0                     u3480:
  5495  001BB0  5001               	movf	___fladd@b^0,w,c
  5496  001BB2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5497  001BB4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5498  001BB6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5499  001BB8  A4D8               	btfss	status,2,c
  5500  001BBA  EFE1  F00D         	goto	u3491
  5501  001BBE  EFE4  F00D         	goto	u3490
  5502  001BC2                     u3491:
  5503  001BC2  0E01               	movlw	1
  5504  001BC4  EFE5  F00D         	goto	u3500
  5505  001BC8                     u3490:
  5506  001BC8  0E00               	movlw	0
  5507  001BCA                     u3500:
  5508  001BCA  6E10               	movwf	___fladd@grs^0,c
  5509  001BCC  0E00               	movlw	0
  5510  001BCE  6E01               	movwf	___fladd@b^0,c
  5511  001BD0  0E00               	movlw	0
  5512  001BD2  6E02               	movwf	(___fladd@b+1)^0,c
  5513  001BD4  0E00               	movlw	0
  5514  001BD6  6E03               	movwf	(___fladd@b+2)^0,c
  5515  001BD8  0E00               	movlw	0
  5516  001BDA  6E04               	movwf	(___fladd@b+3)^0,c
  5517  001BDC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5518  001BE0  EF18  F00E         	goto	l1321
  5519  001BE4                     l1323:
  5520  001BE4  A010               	btfss	___fladd@grs^0,0,c
  5521  001BE6  EFF7  F00D         	goto	u3511
  5522  001BEA  EFF9  F00D         	goto	u3510
  5523  001BEE                     u3511:
  5524  001BEE  EFFF  F00D         	goto	l4001
  5525  001BF2                     u3510:
  5526  001BF2  90D8               	bcf	status,0,c
  5527  001BF4  3010               	rrcf	___fladd@grs^0,w,c
  5528  001BF6  0901               	iorlw	1
  5529  001BF8  6E10               	movwf	___fladd@grs^0,c
  5530  001BFA  EF01  F00E         	goto	l4003
  5531  001BFE                     l4001:
  5532  001BFE  90D8               	bcf	status,0,c
  5533  001C00  3210               	rrcf	___fladd@grs^0,f,c
  5534  001C02                     l4003:
  5535  001C02  A001               	btfss	___fladd@b^0,0,c
  5536  001C04  EF06  F00E         	goto	u3521
  5537  001C08  EF08  F00E         	goto	u3520
  5538  001C0C                     u3521:
  5539  001C0C  EF09  F00E         	goto	l4007
  5540  001C10                     u3520:
  5541  001C10  8E10               	bsf	___fladd@grs^0,7,c
  5542  001C12                     l4007:
  5543  001C12  3404               	rlcf	(___fladd@b+3)^0,w,c
  5544  001C14  3204               	rrcf	(___fladd@b+3)^0,f,c
  5545  001C16  3203               	rrcf	(___fladd@b+2)^0,f,c
  5546  001C18  3202               	rrcf	(___fladd@b+1)^0,f,c
  5547  001C1A  3201               	rrcf	___fladd@b^0,f,c
  5548  001C1C  2A0F               	incf	___fladd@bexp^0,f,c
  5549  001C1E                     l1322:
  5550  001C1E  500E               	movf	___fladd@aexp^0,w,c
  5551  001C20  5C0F               	subwf	___fladd@bexp^0,w,c
  5552  001C22  A0D8               	btfss	status,0,c
  5553  001C24  EF16  F00E         	goto	u3531
  5554  001C28  EF18  F00E         	goto	u3530
  5555  001C2C                     u3531:
  5556  001C2C  EFF2  F00D         	goto	l1323
  5557  001C30                     u3530:
  5558  001C30                     l1321:
  5559  001C30  BC0D               	btfsc	___fladd@signs^0,6,c
  5560  001C32  EF1D  F00E         	goto	u3541
  5561  001C36  EF1F  F00E         	goto	u3540
  5562  001C3A                     u3541:
  5563  001C3A  EF5F  F00E         	goto	l4035
  5564  001C3E                     u3540:
  5565  001C3E  500F               	movf	___fladd@bexp^0,w,c
  5566  001C40  A4D8               	btfss	status,2,c
  5567  001C42  EF25  F00E         	goto	u3551
  5568  001C46  EF27  F00E         	goto	u3550
  5569  001C4A                     u3551:
  5570  001C4A  EF31  F00E         	goto	l4017
  5571  001C4E                     u3550:
  5572  001C4E  0E00               	movlw	0
  5573  001C50  6E01               	movwf	?___fladd^0,c
  5574  001C52  0E00               	movlw	0
  5575  001C54  6E02               	movwf	(?___fladd+1)^0,c
  5576  001C56  0E00               	movlw	0
  5577  001C58  6E03               	movwf	(?___fladd+2)^0,c
  5578  001C5A  0E00               	movlw	0
  5579  001C5C  6E04               	movwf	(?___fladd+3)^0,c
  5580  001C5E  EF80  F00F         	goto	l1330
  5581  001C62                     l4017:
  5582  001C62  5005               	movf	___fladd@a^0,w,c
  5583  001C64  2601               	addwf	___fladd@b^0,f,c
  5584  001C66  5006               	movf	(___fladd@a+1)^0,w,c
  5585  001C68  2202               	addwfc	(___fladd@b+1)^0,f,c
  5586  001C6A  5007               	movf	(___fladd@a+2)^0,w,c
  5587  001C6C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5588  001C6E  5008               	movf	(___fladd@a+3)^0,w,c
  5589  001C70  2204               	addwfc	(___fladd@b+3)^0,f,c
  5590  001C72  A004               	btfss	(___fladd@b+3)^0,0,c
  5591  001C74  EF3E  F00E         	goto	u3561
  5592  001C78  EF40  F00E         	goto	u3560
  5593  001C7C                     u3561:
  5594  001C7C  EFEC  F00E         	goto	l4071
  5595  001C80                     u3560:
  5596  001C80  A010               	btfss	___fladd@grs^0,0,c
  5597  001C82  EF45  F00E         	goto	u3571
  5598  001C86  EF47  F00E         	goto	u3570
  5599  001C8A                     u3571:
  5600  001C8A  EF4D  F00E         	goto	l4025
  5601  001C8E                     u3570:
  5602  001C8E  90D8               	bcf	status,0,c
  5603  001C90  3010               	rrcf	___fladd@grs^0,w,c
  5604  001C92  0901               	iorlw	1
  5605  001C94  6E10               	movwf	___fladd@grs^0,c
  5606  001C96  EF4F  F00E         	goto	l4027
  5607  001C9A                     l4025:
  5608  001C9A  90D8               	bcf	status,0,c
  5609  001C9C  3210               	rrcf	___fladd@grs^0,f,c
  5610  001C9E                     l4027:
  5611  001C9E  A001               	btfss	___fladd@b^0,0,c
  5612  001CA0  EF54  F00E         	goto	u3581
  5613  001CA4  EF56  F00E         	goto	u3580
  5614  001CA8                     u3581:
  5615  001CA8  EF57  F00E         	goto	l4031
  5616  001CAC                     u3580:
  5617  001CAC  8E10               	bsf	___fladd@grs^0,7,c
  5618  001CAE                     l4031:
  5619  001CAE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5620  001CB0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5621  001CB2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5622  001CB4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5623  001CB6  3201               	rrcf	___fladd@b^0,f,c
  5624  001CB8  2A0F               	incf	___fladd@bexp^0,f,c
  5625  001CBA  EFEC  F00E         	goto	l4071
  5626  001CBE                     l4035:
  5627  001CBE  5005               	movf	___fladd@a^0,w,c
  5628  001CC0  5C01               	subwf	___fladd@b^0,w,c
  5629  001CC2  5006               	movf	(___fladd@a+1)^0,w,c
  5630  001CC4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5631  001CC6  5007               	movf	(___fladd@a+2)^0,w,c
  5632  001CC8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5633  001CCA  5004               	movf	(___fladd@b+3)^0,w,c
  5634  001CCC  0A80               	xorlw	128
  5635  001CCE  6E09               	movwf	??___fladd^0,c
  5636  001CD0  5008               	movf	(___fladd@a+3)^0,w,c
  5637  001CD2  0A80               	xorlw	128
  5638  001CD4  5809               	subwfb	??___fladd^0,w,c
  5639  001CD6  B0D8               	btfsc	status,0,c
  5640  001CD8  EF70  F00E         	goto	u3591
  5641  001CDC  EF72  F00E         	goto	u3590
  5642  001CE0                     u3591:
  5643  001CE0  EF9D  F00E         	goto	l4045
  5644  001CE4                     u3590:
  5645  001CE4  5001               	movf	___fladd@b^0,w,c
  5646  001CE6  5C05               	subwf	___fladd@a^0,w,c
  5647  001CE8  6E09               	movwf	??___fladd^0,c
  5648  001CEA  5002               	movf	(___fladd@b+1)^0,w,c
  5649  001CEC  5806               	subwfb	(___fladd@a+1)^0,w,c
  5650  001CEE  6E0A               	movwf	(??___fladd+1)^0,c
  5651  001CF0  5003               	movf	(___fladd@b+2)^0,w,c
  5652  001CF2  5807               	subwfb	(___fladd@a+2)^0,w,c
  5653  001CF4  6E0B               	movwf	(??___fladd+2)^0,c
  5654  001CF6  5004               	movf	(___fladd@b+3)^0,w,c
  5655  001CF8  5808               	subwfb	(___fladd@a+3)^0,w,c
  5656  001CFA  6E0C               	movwf	(??___fladd+3)^0,c
  5657  001CFC  0EFF               	movlw	255
  5658  001CFE  2409               	addwf	??___fladd^0,w,c
  5659  001D00  6E01               	movwf	___fladd@b^0,c
  5660  001D02  0EFF               	movlw	255
  5661  001D04  200A               	addwfc	(??___fladd+1)^0,w,c
  5662  001D06  6E02               	movwf	(___fladd@b+1)^0,c
  5663  001D08  0EFF               	movlw	255
  5664  001D0A  200B               	addwfc	(??___fladd+2)^0,w,c
  5665  001D0C  6E03               	movwf	(___fladd@b+2)^0,c
  5666  001D0E  0EFF               	movlw	255
  5667  001D10  200C               	addwfc	(??___fladd+3)^0,w,c
  5668  001D12  6E04               	movwf	(___fladd@b+3)^0,c
  5669  001D14  0E80               	movlw	128
  5670  001D16  1A0D               	xorwf	___fladd@signs^0,f,c
  5671  001D18  6C10               	negf	___fladd@grs^0,c
  5672  001D1A  5010               	movf	___fladd@grs^0,w,c
  5673  001D1C  A4D8               	btfss	status,2,c
  5674  001D1E  EF93  F00E         	goto	u3601
  5675  001D22  EF95  F00E         	goto	u3600
  5676  001D26                     u3601:
  5677  001D26  EFA5  F00E         	goto	l1338
  5678  001D2A                     u3600:
  5679  001D2A  0E01               	movlw	1
  5680  001D2C  2601               	addwf	___fladd@b^0,f,c
  5681  001D2E  0E00               	movlw	0
  5682  001D30  2202               	addwfc	(___fladd@b+1)^0,f,c
  5683  001D32  2203               	addwfc	(___fladd@b+2)^0,f,c
  5684  001D34  2204               	addwfc	(___fladd@b+3)^0,f,c
  5685  001D36  EFA5  F00E         	goto	l1338
  5686  001D3A                     l4045:
  5687  001D3A  5005               	movf	___fladd@a^0,w,c
  5688  001D3C  5E01               	subwf	___fladd@b^0,f,c
  5689  001D3E  5006               	movf	(___fladd@a+1)^0,w,c
  5690  001D40  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5691  001D42  5007               	movf	(___fladd@a+2)^0,w,c
  5692  001D44  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5693  001D46  5008               	movf	(___fladd@a+3)^0,w,c
  5694  001D48  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5695  001D4A                     l1338:
  5696  001D4A  5001               	movf	___fladd@b^0,w,c
  5697  001D4C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5698  001D4E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5699  001D50  1004               	iorwf	(___fladd@b+3)^0,w,c
  5700  001D52  A4D8               	btfss	status,2,c
  5701  001D54  EFAE  F00E         	goto	u3611
  5702  001D58  EFB0  F00E         	goto	u3610
  5703  001D5C                     u3611:
  5704  001D5C  EFE5  F00E         	goto	l4069
  5705  001D60                     u3610:
  5706  001D60  5010               	movf	___fladd@grs^0,w,c
  5707  001D62  A4D8               	btfss	status,2,c
  5708  001D64  EFB6  F00E         	goto	u3621
  5709  001D68  EFB8  F00E         	goto	u3620
  5710  001D6C                     u3621:
  5711  001D6C  EFE5  F00E         	goto	l4069
  5712  001D70                     u3620:
  5713  001D70  0E00               	movlw	0
  5714  001D72  6E01               	movwf	?___fladd^0,c
  5715  001D74  0E00               	movlw	0
  5716  001D76  6E02               	movwf	(?___fladd+1)^0,c
  5717  001D78  0E00               	movlw	0
  5718  001D7A  6E03               	movwf	(?___fladd+2)^0,c
  5719  001D7C  0E00               	movlw	0
  5720  001D7E  6E04               	movwf	(?___fladd+3)^0,c
  5721  001D80  EF80  F00F         	goto	l1330
  5722  001D84                     l4053:
  5723  001D84  90D8               	bcf	status,0,c
  5724  001D86  3601               	rlcf	___fladd@b^0,f,c
  5725  001D88  3602               	rlcf	(___fladd@b+1)^0,f,c
  5726  001D8A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5727  001D8C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5728  001D8E  AE10               	btfss	___fladd@grs^0,7,c
  5729  001D90  EFCC  F00E         	goto	u3631
  5730  001D94  EFCE  F00E         	goto	u3630
  5731  001D98                     u3631:
  5732  001D98  EFCF  F00E         	goto	l4059
  5733  001D9C                     u3630:
  5734  001D9C  8001               	bsf	___fladd@b^0,0,c
  5735  001D9E                     l4059:
  5736  001D9E  A010               	btfss	___fladd@grs^0,0,c
  5737  001DA0  EFD4  F00E         	goto	u3641
  5738  001DA4  EFD6  F00E         	goto	u3640
  5739  001DA8                     u3641:
  5740  001DA8  EFDA  F00E         	goto	l4063
  5741  001DAC                     u3640:
  5742  001DAC  80D8               	bsf	status,0,c
  5743  001DAE  3610               	rlcf	___fladd@grs^0,f,c
  5744  001DB0  EFDC  F00E         	goto	l4065
  5745  001DB4                     l4063:
  5746  001DB4  90D8               	bcf	status,0,c
  5747  001DB6  3610               	rlcf	___fladd@grs^0,f,c
  5748  001DB8                     l4065:
  5749  001DB8  500F               	movf	___fladd@bexp^0,w,c
  5750  001DBA  B4D8               	btfsc	status,2,c
  5751  001DBC  EFE2  F00E         	goto	u3651
  5752  001DC0  EFE4  F00E         	goto	u3650
  5753  001DC4                     u3651:
  5754  001DC4  EFE5  F00E         	goto	l4069
  5755  001DC8                     u3650:
  5756  001DC8  060F               	decf	___fladd@bexp^0,f,c
  5757  001DCA                     l4069:
  5758  001DCA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5759  001DCC  EFEA  F00E         	goto	u3661
  5760  001DD0  EFEC  F00E         	goto	u3660
  5761  001DD4                     u3661:
  5762  001DD4  EFC2  F00E         	goto	l4053
  5763  001DD8                     u3660:
  5764  001DD8                     l4071:
  5765  001DD8  0E00               	movlw	0
  5766  001DDA  6E0E               	movwf	___fladd@aexp^0,c
  5767  001DDC  AE10               	btfss	___fladd@grs^0,7,c
  5768  001DDE  EFF3  F00E         	goto	u3671
  5769  001DE2  EFF5  F00E         	goto	u3670
  5770  001DE6                     u3671:
  5771  001DE6  EF0D  F00F         	goto	l1347
  5772  001DEA                     u3670:
  5773  001DEA  C010  F009         	movff	___fladd@grs,??___fladd
  5774  001DEE  0E7F               	movlw	127
  5775  001DF0  1609               	andwf	??___fladd^0,f,c
  5776  001DF2  B4D8               	btfsc	status,2,c
  5777  001DF4  EFFE  F00E         	goto	u3681
  5778  001DF8  EF00  F00F         	goto	u3680
  5779  001DFC                     u3681:
  5780  001DFC  EF04  F00F         	goto	l1348
  5781  001E00                     u3680:
  5782  001E00                     l4077:
  5783  001E00  0E01               	movlw	1
  5784  001E02  6E0E               	movwf	___fladd@aexp^0,c
  5785  001E04  EF0D  F00F         	goto	l1347
  5786  001E08                     l1348:
  5787  001E08  A001               	btfss	___fladd@b^0,0,c
  5788  001E0A  EF09  F00F         	goto	u3691
  5789  001E0E  EF0B  F00F         	goto	u3690
  5790  001E12                     u3691:
  5791  001E12  EF0D  F00F         	goto	l1347
  5792  001E16                     u3690:
  5793  001E16  EF00  F00F         	goto	l4077
  5794  001E1A                     l1347:
  5795  001E1A  500E               	movf	___fladd@aexp^0,w,c
  5796  001E1C  B4D8               	btfsc	status,2,c
  5797  001E1E  EF13  F00F         	goto	u3701
  5798  001E22  EF15  F00F         	goto	u3700
  5799  001E26                     u3701:
  5800  001E26  EF40  F00F         	goto	l4089
  5801  001E2A                     u3700:
  5802  001E2A  0E01               	movlw	1
  5803  001E2C  2601               	addwf	___fladd@b^0,f,c
  5804  001E2E  0E00               	movlw	0
  5805  001E30  2202               	addwfc	(___fladd@b+1)^0,f,c
  5806  001E32  2203               	addwfc	(___fladd@b+2)^0,f,c
  5807  001E34  2204               	addwfc	(___fladd@b+3)^0,f,c
  5808  001E36  A004               	btfss	(___fladd@b+3)^0,0,c
  5809  001E38  EF20  F00F         	goto	u3711
  5810  001E3C  EF22  F00F         	goto	u3710
  5811  001E40                     u3711:
  5812  001E40  EF40  F00F         	goto	l4089
  5813  001E44                     u3710:
  5814  001E44  C001  F009         	movff	___fladd@b,??___fladd
  5815  001E48  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5816  001E4C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5817  001E50  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5818  001E54  340C               	rlcf	(??___fladd+3)^0,w,c
  5819  001E56  320C               	rrcf	(??___fladd+3)^0,f,c
  5820  001E58  320B               	rrcf	(??___fladd+2)^0,f,c
  5821  001E5A  320A               	rrcf	(??___fladd+1)^0,f,c
  5822  001E5C  3209               	rrcf	??___fladd^0,f,c
  5823  001E5E  C009  F001         	movff	??___fladd,___fladd@b
  5824  001E62  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5825  001E66  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5826  001E6A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5827  001E6E  280F               	incf	___fladd@bexp^0,w,c
  5828  001E70  B4D8               	btfsc	status,2,c
  5829  001E72  EF3D  F00F         	goto	u3721
  5830  001E76  EF3F  F00F         	goto	u3720
  5831  001E7A                     u3721:
  5832  001E7A  EF40  F00F         	goto	l4089
  5833  001E7E                     u3720:
  5834  001E7E  2A0F               	incf	___fladd@bexp^0,f,c
  5835  001E80                     l4089:
  5836  001E80  280F               	incf	___fladd@bexp^0,w,c
  5837  001E82  B4D8               	btfsc	status,2,c
  5838  001E84  EF46  F00F         	goto	u3731
  5839  001E88  EF48  F00F         	goto	u3730
  5840  001E8C                     u3731:
  5841  001E8C  EF50  F00F         	goto	l4093
  5842  001E90                     u3730:
  5843  001E90  500F               	movf	___fladd@bexp^0,w,c
  5844  001E92  A4D8               	btfss	status,2,c
  5845  001E94  EF4E  F00F         	goto	u3741
  5846  001E98  EF50  F00F         	goto	u3740
  5847  001E9C                     u3741:
  5848  001E9C  EF62  F00F         	goto	l4097
  5849  001EA0                     u3740:
  5850  001EA0                     l4093:
  5851  001EA0  0E00               	movlw	0
  5852  001EA2  6E01               	movwf	___fladd@b^0,c
  5853  001EA4  0E00               	movlw	0
  5854  001EA6  6E02               	movwf	(___fladd@b+1)^0,c
  5855  001EA8  0E00               	movlw	0
  5856  001EAA  6E03               	movwf	(___fladd@b+2)^0,c
  5857  001EAC  0E00               	movlw	0
  5858  001EAE  6E04               	movwf	(___fladd@b+3)^0,c
  5859  001EB0  500F               	movf	___fladd@bexp^0,w,c
  5860  001EB2  A4D8               	btfss	status,2,c
  5861  001EB4  EF5E  F00F         	goto	u3751
  5862  001EB8  EF60  F00F         	goto	u3750
  5863  001EBC                     u3751:
  5864  001EBC  EF62  F00F         	goto	l4097
  5865  001EC0                     u3750:
  5866  001EC0  0E00               	movlw	0
  5867  001EC2  6E0D               	movwf	___fladd@signs^0,c
  5868  001EC4                     l4097:
  5869  001EC4  A00F               	btfss	___fladd@bexp^0,0,c
  5870  001EC6  EF67  F00F         	goto	u3761
  5871  001ECA  EF69  F00F         	goto	u3760
  5872  001ECE                     u3761:
  5873  001ECE  EF6C  F00F         	goto	l4101
  5874  001ED2                     u3760:
  5875  001ED2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5876  001ED4  EF6D  F00F         	goto	l4103
  5877  001ED8                     l4101:
  5878  001ED8  9E03               	bcf	(___fladd@b+2)^0,7,c
  5879  001EDA                     l4103:
  5880  001EDA  90D8               	bcf	status,0,c
  5881  001EDC  300F               	rrcf	___fladd@bexp^0,w,c
  5882  001EDE  6E04               	movwf	(___fladd@b+3)^0,c
  5883  001EE0  AE0D               	btfss	___fladd@signs^0,7,c
  5884  001EE2  EF75  F00F         	goto	u3771
  5885  001EE6  EF77  F00F         	goto	u3770
  5886  001EEA                     u3771:
  5887  001EEA  EF78  F00F         	goto	l4109
  5888  001EEE                     u3770:
  5889  001EEE  8E04               	bsf	(___fladd@b+3)^0,7,c
  5890  001EF0                     l4109:
  5891  001EF0  C001  F001         	movff	___fladd@b,?___fladd
  5892  001EF4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5893  001EF8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5894  001EFC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5895  001F00                     l1330:
  5896  001F00  0012               	return		;funcret
  5897  001F02                     __end_of___fladd:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function ___flneg *****************
  5901 ;; Defined at:
  5902 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  f1              4    0[COMRAM] unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  4    0[COMRAM] unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;Total ram usage:        4 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 1
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_roundf
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text22
  5931  005660                     __ptext22:
  5932                           	callstack 0
  5933  005660                     ___flneg:
  5934                           	callstack 25
  5935  005660  5001               	movf	___flneg@f1^0,w,c
  5936  005662  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5937  005664  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5938  005666  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5939  005668  B4D8               	btfsc	status,2,c
  5940  00566A  EF39  F02B         	goto	u4131
  5941  00566E  EF3B  F02B         	goto	u4130
  5942  005672                     u4131:
  5943  005672  EF43  F02B         	goto	l4373
  5944  005676                     u4130:
  5945  005676  0E00               	movlw	0
  5946  005678  1A01               	xorwf	___flneg@f1^0,f,c
  5947  00567A  0E00               	movlw	0
  5948  00567C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5949  00567E  0E00               	movlw	0
  5950  005680  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5951  005682  0E80               	movlw	128
  5952  005684  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5953  005686                     l4373:
  5954  005686  C001  F001         	movff	___flneg@f1,?___flneg
  5955  00568A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5956  00568E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5957  005692  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5958  005696  0012               	return		;funcret
  5959  005698                     __end_of___flneg:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function ___flmul *****************
  5963 ;; Defined at:
  5964 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  b               4   39[COMRAM] unsigned char 
  5967 ;;  a               4   43[COMRAM] unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  prod            4   58[COMRAM] struct .
  5970 ;;  grs             4   52[COMRAM] unsigned long 
  5971 ;;  temp            2   62[COMRAM] struct .
  5972 ;;  bexp            1   57[COMRAM] unsigned char 
  5973 ;;  aexp            1   56[COMRAM] unsigned char 
  5974 ;;  sign            1   51[COMRAM] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  4   39[COMRAM] unsigned char 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, prodl, prodh
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;Total ram usage:       25 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_detect_color
  5995 ;;		_distance_measure
  5996 ;;		_roundf
  5997 ;;		_check_color_reading
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text23
  6002  001F02                     __ptext23:
  6003                           	callstack 0
  6004  001F02                     ___flmul:
  6005                           	callstack 25
  6006  001F02  502B               	movf	(___flmul@b+3)^0,w,c
  6007  001F04  0B80               	andlw	128
  6008  001F06  6E34               	movwf	___flmul@sign^0,c
  6009  001F08  502B               	movf	(___flmul@b+3)^0,w,c
  6010  001F0A  242B               	addwf	(___flmul@b+3)^0,w,c
  6011  001F0C  6E3A               	movwf	___flmul@bexp^0,c
  6012  001F0E  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6013  001F10  EF8C  F00F         	goto	u3891
  6014  001F14  EF8E  F00F         	goto	u3890
  6015  001F18                     u3891:
  6016  001F18  EF8F  F00F         	goto	l4217
  6017  001F1C                     u3890:
  6018  001F1C  803A               	bsf	___flmul@bexp^0,0,c
  6019  001F1E                     l4217:
  6020  001F1E  503A               	movf	___flmul@bexp^0,w,c
  6021  001F20  B4D8               	btfsc	status,2,c
  6022  001F22  EF95  F00F         	goto	u3901
  6023  001F26  EF97  F00F         	goto	u3900
  6024  001F2A                     u3901:
  6025  001F2A  EFAA  F00F         	goto	l4225
  6026  001F2E                     u3900:
  6027  001F2E  283A               	incf	___flmul@bexp^0,w,c
  6028  001F30  A4D8               	btfss	status,2,c
  6029  001F32  EF9D  F00F         	goto	u3911
  6030  001F36  EF9F  F00F         	goto	u3910
  6031  001F3A                     u3911:
  6032  001F3A  EFA7  F00F         	goto	l4223
  6033  001F3E                     u3910:
  6034  001F3E  0E00               	movlw	0
  6035  001F40  6E28               	movwf	___flmul@b^0,c
  6036  001F42  0E00               	movlw	0
  6037  001F44  6E29               	movwf	(___flmul@b+1)^0,c
  6038  001F46  0E00               	movlw	0
  6039  001F48  6E2A               	movwf	(___flmul@b+2)^0,c
  6040  001F4A  0E00               	movlw	0
  6041  001F4C  6E2B               	movwf	(___flmul@b+3)^0,c
  6042  001F4E                     l4223:
  6043  001F4E  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6044  001F50  EFB2  F00F         	goto	l4227
  6045  001F54                     l4225:
  6046  001F54  0E00               	movlw	0
  6047  001F56  6E28               	movwf	___flmul@b^0,c
  6048  001F58  0E00               	movlw	0
  6049  001F5A  6E29               	movwf	(___flmul@b+1)^0,c
  6050  001F5C  0E00               	movlw	0
  6051  001F5E  6E2A               	movwf	(___flmul@b+2)^0,c
  6052  001F60  0E00               	movlw	0
  6053  001F62  6E2B               	movwf	(___flmul@b+3)^0,c
  6054  001F64                     l4227:
  6055  001F64  502F               	movf	(___flmul@a+3)^0,w,c
  6056  001F66  0B80               	andlw	128
  6057  001F68  1A34               	xorwf	___flmul@sign^0,f,c
  6058  001F6A  502F               	movf	(___flmul@a+3)^0,w,c
  6059  001F6C  242F               	addwf	(___flmul@a+3)^0,w,c
  6060  001F6E  6E39               	movwf	___flmul@aexp^0,c
  6061  001F70  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6062  001F72  EFBD  F00F         	goto	u3921
  6063  001F76  EFBF  F00F         	goto	u3920
  6064  001F7A                     u3921:
  6065  001F7A  EFC0  F00F         	goto	l4235
  6066  001F7E                     u3920:
  6067  001F7E  8039               	bsf	___flmul@aexp^0,0,c
  6068  001F80                     l4235:
  6069  001F80  5039               	movf	___flmul@aexp^0,w,c
  6070  001F82  B4D8               	btfsc	status,2,c
  6071  001F84  EFC6  F00F         	goto	u3931
  6072  001F88  EFC8  F00F         	goto	u3930
  6073  001F8C                     u3931:
  6074  001F8C  EFDB  F00F         	goto	l4243
  6075  001F90                     u3930:
  6076  001F90  2839               	incf	___flmul@aexp^0,w,c
  6077  001F92  A4D8               	btfss	status,2,c
  6078  001F94  EFCE  F00F         	goto	u3941
  6079  001F98  EFD0  F00F         	goto	u3940
  6080  001F9C                     u3941:
  6081  001F9C  EFD8  F00F         	goto	l4241
  6082  001FA0                     u3940:
  6083  001FA0  0E00               	movlw	0
  6084  001FA2  6E2C               	movwf	___flmul@a^0,c
  6085  001FA4  0E00               	movlw	0
  6086  001FA6  6E2D               	movwf	(___flmul@a+1)^0,c
  6087  001FA8  0E00               	movlw	0
  6088  001FAA  6E2E               	movwf	(___flmul@a+2)^0,c
  6089  001FAC  0E00               	movlw	0
  6090  001FAE  6E2F               	movwf	(___flmul@a+3)^0,c
  6091  001FB0                     l4241:
  6092  001FB0  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6093  001FB2  EFE3  F00F         	goto	l1407
  6094  001FB6                     l4243:
  6095  001FB6  0E00               	movlw	0
  6096  001FB8  6E2C               	movwf	___flmul@a^0,c
  6097  001FBA  0E00               	movlw	0
  6098  001FBC  6E2D               	movwf	(___flmul@a+1)^0,c
  6099  001FBE  0E00               	movlw	0
  6100  001FC0  6E2E               	movwf	(___flmul@a+2)^0,c
  6101  001FC2  0E00               	movlw	0
  6102  001FC4  6E2F               	movwf	(___flmul@a+3)^0,c
  6103  001FC6                     l1407:
  6104  001FC6  5039               	movf	___flmul@aexp^0,w,c
  6105  001FC8  B4D8               	btfsc	status,2,c
  6106  001FCA  EFE9  F00F         	goto	u3951
  6107  001FCE  EFEB  F00F         	goto	u3950
  6108  001FD2                     u3951:
  6109  001FD2  EFF3  F00F         	goto	l4247
  6110  001FD6                     u3950:
  6111  001FD6  503A               	movf	___flmul@bexp^0,w,c
  6112  001FD8  A4D8               	btfss	status,2,c
  6113  001FDA  EFF1  F00F         	goto	u3961
  6114  001FDE  EFF3  F00F         	goto	u3960
  6115  001FE2                     u3961:
  6116  001FE2  EFFD  F00F         	goto	l4251
  6117  001FE6                     u3960:
  6118  001FE6                     l4247:
  6119  001FE6  0E00               	movlw	0
  6120  001FE8  6E28               	movwf	?___flmul^0,c
  6121  001FEA  0E00               	movlw	0
  6122  001FEC  6E29               	movwf	(?___flmul+1)^0,c
  6123  001FEE  0E00               	movlw	0
  6124  001FF0  6E2A               	movwf	(?___flmul+2)^0,c
  6125  001FF2  0E00               	movlw	0
  6126  001FF4  6E2B               	movwf	(?___flmul+3)^0,c
  6127  001FF6  EF95  F011         	goto	l1411
  6128  001FFA                     l4251:
  6129  001FFA  502E               	movf	(___flmul@a+2)^0,w,c
  6130  001FFC  0228               	mulwf	___flmul@b^0,c
  6131  001FFE  CFF3 F03F          	movff	prodl,___flmul@temp
  6132  002002  CFF4 F040          	movff	prodh,___flmul@temp+1
  6133  002006  503F               	movf	___flmul@temp^0,w,c
  6134  002008  6E35               	movwf	___flmul@grs^0,c
  6135  00200A  6A36               	clrf	(___flmul@grs+1)^0,c
  6136  00200C  6A37               	clrf	(___flmul@grs+2)^0,c
  6137  00200E  6A38               	clrf	(___flmul@grs+3)^0,c
  6138  002010  5040               	movf	(___flmul@temp+1)^0,w,c
  6139  002012  6E3B               	movwf	___flmul@prod^0,c
  6140  002014  6A3C               	clrf	(___flmul@prod+1)^0,c
  6141  002016  6A3D               	clrf	(___flmul@prod+2)^0,c
  6142  002018  6A3E               	clrf	(___flmul@prod+3)^0,c
  6143  00201A  502D               	movf	(___flmul@a+1)^0,w,c
  6144  00201C  0229               	mulwf	(___flmul@b+1)^0,c
  6145  00201E  CFF3 F03F          	movff	prodl,___flmul@temp
  6146  002022  CFF4 F040          	movff	prodh,___flmul@temp+1
  6147  002026  503F               	movf	___flmul@temp^0,w,c
  6148  002028  2635               	addwf	___flmul@grs^0,f,c
  6149  00202A  0E00               	movlw	0
  6150  00202C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6151  00202E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6152  002030  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6153  002032  5040               	movf	(___flmul@temp+1)^0,w,c
  6154  002034  263B               	addwf	___flmul@prod^0,f,c
  6155  002036  0E00               	movlw	0
  6156  002038  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6157  00203A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6158  00203C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6159  00203E  502C               	movf	___flmul@a^0,w,c
  6160  002040  022A               	mulwf	(___flmul@b+2)^0,c
  6161  002042  CFF3 F03F          	movff	prodl,___flmul@temp
  6162  002046  CFF4 F040          	movff	prodh,___flmul@temp+1
  6163  00204A  503F               	movf	___flmul@temp^0,w,c
  6164  00204C  2635               	addwf	___flmul@grs^0,f,c
  6165  00204E  0E00               	movlw	0
  6166  002050  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6167  002052  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6168  002054  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6169  002056  5040               	movf	(___flmul@temp+1)^0,w,c
  6170  002058  263B               	addwf	___flmul@prod^0,f,c
  6171  00205A  0E00               	movlw	0
  6172  00205C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6173  00205E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6174  002060  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6175  002062  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6176  002066  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6177  00206A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6178  00206E  6A35               	clrf	___flmul@grs^0,c
  6179  002070  502C               	movf	___flmul@a^0,w,c
  6180  002072  0229               	mulwf	(___flmul@b+1)^0,c
  6181  002074  CFF3 F03F          	movff	prodl,___flmul@temp
  6182  002078  CFF4 F040          	movff	prodh,___flmul@temp+1
  6183  00207C  503F               	movf	___flmul@temp^0,w,c
  6184  00207E  2635               	addwf	___flmul@grs^0,f,c
  6185  002080  5040               	movf	(___flmul@temp+1)^0,w,c
  6186  002082  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6187  002084  0E00               	movlw	0
  6188  002086  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6189  002088  0E00               	movlw	0
  6190  00208A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6191  00208C  502D               	movf	(___flmul@a+1)^0,w,c
  6192  00208E  0228               	mulwf	___flmul@b^0,c
  6193  002090  CFF3 F03F          	movff	prodl,___flmul@temp
  6194  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
  6195  002098  503F               	movf	___flmul@temp^0,w,c
  6196  00209A  2635               	addwf	___flmul@grs^0,f,c
  6197  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
  6198  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6199  0020A0  0E00               	movlw	0
  6200  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6201  0020A4  0E00               	movlw	0
  6202  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6203  0020A8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6204  0020AC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6205  0020B0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6206  0020B4  6A35               	clrf	___flmul@grs^0,c
  6207  0020B6  502C               	movf	___flmul@a^0,w,c
  6208  0020B8  0228               	mulwf	___flmul@b^0,c
  6209  0020BA  CFF3 F03F          	movff	prodl,___flmul@temp
  6210  0020BE  CFF4 F040          	movff	prodh,___flmul@temp+1
  6211  0020C2  503F               	movf	___flmul@temp^0,w,c
  6212  0020C4  2635               	addwf	___flmul@grs^0,f,c
  6213  0020C6  5040               	movf	(___flmul@temp+1)^0,w,c
  6214  0020C8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6215  0020CA  0E00               	movlw	0
  6216  0020CC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6217  0020CE  0E00               	movlw	0
  6218  0020D0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6219  0020D2  502E               	movf	(___flmul@a+2)^0,w,c
  6220  0020D4  0229               	mulwf	(___flmul@b+1)^0,c
  6221  0020D6  CFF3 F03F          	movff	prodl,___flmul@temp
  6222  0020DA  CFF4 F040          	movff	prodh,___flmul@temp+1
  6223  0020DE  503F               	movf	___flmul@temp^0,w,c
  6224  0020E0  263B               	addwf	___flmul@prod^0,f,c
  6225  0020E2  5040               	movf	(___flmul@temp+1)^0,w,c
  6226  0020E4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6227  0020E6  0E00               	movlw	0
  6228  0020E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6229  0020EA  0E00               	movlw	0
  6230  0020EC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6231  0020EE  502D               	movf	(___flmul@a+1)^0,w,c
  6232  0020F0  022A               	mulwf	(___flmul@b+2)^0,c
  6233  0020F2  CFF3 F03F          	movff	prodl,___flmul@temp
  6234  0020F6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6235  0020FA  503F               	movf	___flmul@temp^0,w,c
  6236  0020FC  263B               	addwf	___flmul@prod^0,f,c
  6237  0020FE  5040               	movf	(___flmul@temp+1)^0,w,c
  6238  002100  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6239  002102  0E00               	movlw	0
  6240  002104  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6241  002106  0E00               	movlw	0
  6242  002108  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6243  00210A  502E               	movf	(___flmul@a+2)^0,w,c
  6244  00210C  022A               	mulwf	(___flmul@b+2)^0,c
  6245  00210E  CFF3 F03F          	movff	prodl,___flmul@temp
  6246  002112  CFF4 F040          	movff	prodh,___flmul@temp+1
  6247  002116  503F               	movf	___flmul@temp^0,w,c
  6248  002118  6E30               	movwf	??___flmul^0,c
  6249  00211A  5040               	movf	(___flmul@temp+1)^0,w,c
  6250  00211C  6E31               	movwf	(??___flmul+1)^0,c
  6251  00211E  6A32               	clrf	(??___flmul+2)^0,c
  6252  002120  6A33               	clrf	(??___flmul+3)^0,c
  6253  002122  C032  F033         	movff	??___flmul+2,??___flmul+3
  6254  002126  C031  F032         	movff	??___flmul+1,??___flmul+2
  6255  00212A  C030  F031         	movff	??___flmul,??___flmul+1
  6256  00212E  6A30               	clrf	??___flmul^0,c
  6257  002130  5030               	movf	??___flmul^0,w,c
  6258  002132  263B               	addwf	___flmul@prod^0,f,c
  6259  002134  5031               	movf	(??___flmul+1)^0,w,c
  6260  002136  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6261  002138  5032               	movf	(??___flmul+2)^0,w,c
  6262  00213A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6263  00213C  5033               	movf	(??___flmul+3)^0,w,c
  6264  00213E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6265  002140  C035  F030         	movff	___flmul@grs,??___flmul
  6266  002144  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6267  002148  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6268  00214C  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6269  002150  0E19               	movlw	25
  6270  002152  EFB0  F010         	goto	u3970
  6271  002156                     u3975:
  6272  002156  90D8               	bcf	status,0,c
  6273  002158  3233               	rrcf	(??___flmul+3)^0,f,c
  6274  00215A  3232               	rrcf	(??___flmul+2)^0,f,c
  6275  00215C  3231               	rrcf	(??___flmul+1)^0,f,c
  6276  00215E  3230               	rrcf	??___flmul^0,f,c
  6277  002160                     u3970:
  6278  002160  2EE8               	decfsz	wreg,f,c
  6279  002162  EFAB  F010         	goto	u3975
  6280  002166  5030               	movf	??___flmul^0,w,c
  6281  002168  263B               	addwf	___flmul@prod^0,f,c
  6282  00216A  5031               	movf	(??___flmul+1)^0,w,c
  6283  00216C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6284  00216E  5032               	movf	(??___flmul+2)^0,w,c
  6285  002170  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6286  002172  5033               	movf	(??___flmul+3)^0,w,c
  6287  002174  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6288  002176  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6289  00217A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6290  00217E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6291  002182  6A35               	clrf	___flmul@grs^0,c
  6292  002184  5039               	movf	___flmul@aexp^0,w,c
  6293  002186  C03A  F030         	movff	___flmul@bexp,??___flmul
  6294  00218A  6A31               	clrf	(??___flmul+1)^0,c
  6295  00218C  2630               	addwf	??___flmul^0,f,c
  6296  00218E  0E00               	movlw	0
  6297  002190  2231               	addwfc	(??___flmul+1)^0,f,c
  6298  002192  0E82               	movlw	130
  6299  002194  2430               	addwf	??___flmul^0,w,c
  6300  002196  6E3F               	movwf	___flmul@temp^0,c
  6301  002198  0EFF               	movlw	255
  6302  00219A  2031               	addwfc	(??___flmul+1)^0,w,c
  6303  00219C  6E40               	movwf	(___flmul@temp+1)^0,c
  6304  00219E  EFE6  F010         	goto	l4299
  6305  0021A2                     l4293:
  6306  0021A2  90D8               	bcf	status,0,c
  6307  0021A4  363B               	rlcf	___flmul@prod^0,f,c
  6308  0021A6  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6309  0021A8  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6310  0021AA  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6311  0021AC  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6312  0021AE  EFDB  F010         	goto	u3981
  6313  0021B2  EFDD  F010         	goto	u3980
  6314  0021B6                     u3981:
  6315  0021B6  EFDE  F010         	goto	l1414
  6316  0021BA                     u3980:
  6317  0021BA  803B               	bsf	___flmul@prod^0,0,c
  6318  0021BC                     l1414:
  6319  0021BC  90D8               	bcf	status,0,c
  6320  0021BE  3635               	rlcf	___flmul@grs^0,f,c
  6321  0021C0  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6322  0021C2  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6323  0021C4  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6324  0021C6  063F               	decf	___flmul@temp^0,f,c
  6325  0021C8  A0D8               	btfss	status,0,c
  6326  0021CA  0640               	decf	(___flmul@temp+1)^0,f,c
  6327  0021CC                     l4299:
  6328  0021CC  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6329  0021CE  EFEB  F010         	goto	u3991
  6330  0021D2  EFED  F010         	goto	u3990
  6331  0021D6                     u3991:
  6332  0021D6  EFD1  F010         	goto	l4293
  6333  0021DA                     u3990:
  6334  0021DA  0E00               	movlw	0
  6335  0021DC  6E39               	movwf	___flmul@aexp^0,c
  6336  0021DE  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6337  0021E0  EFF4  F010         	goto	u4001
  6338  0021E4  EFF6  F010         	goto	u4000
  6339  0021E8                     u4001:
  6340  0021E8  EF1A  F011         	goto	l1416
  6341  0021EC                     u4000:
  6342  0021EC  0EFF               	movlw	255
  6343  0021EE  1435               	andwf	___flmul@grs^0,w,c
  6344  0021F0  6E30               	movwf	??___flmul^0,c
  6345  0021F2  0EFF               	movlw	255
  6346  0021F4  1436               	andwf	(___flmul@grs+1)^0,w,c
  6347  0021F6  6E31               	movwf	(??___flmul+1)^0,c
  6348  0021F8  0EFF               	movlw	255
  6349  0021FA  1437               	andwf	(___flmul@grs+2)^0,w,c
  6350  0021FC  6E32               	movwf	(??___flmul+2)^0,c
  6351  0021FE  0E7F               	movlw	127
  6352  002200  1438               	andwf	(___flmul@grs+3)^0,w,c
  6353  002202  6E33               	movwf	(??___flmul+3)^0,c
  6354  002204  5030               	movf	??___flmul^0,w,c
  6355  002206  1031               	iorwf	(??___flmul+1)^0,w,c
  6356  002208  1032               	iorwf	(??___flmul+2)^0,w,c
  6357  00220A  1033               	iorwf	(??___flmul+3)^0,w,c
  6358  00220C  B4D8               	btfsc	status,2,c
  6359  00220E  EF0B  F011         	goto	u4011
  6360  002212  EF0D  F011         	goto	u4010
  6361  002216                     u4011:
  6362  002216  EF11  F011         	goto	l1417
  6363  00221A                     u4010:
  6364  00221A                     l4307:
  6365  00221A  0E01               	movlw	1
  6366  00221C  6E39               	movwf	___flmul@aexp^0,c
  6367  00221E  EF1A  F011         	goto	l1416
  6368  002222                     l1417:
  6369  002222  A03B               	btfss	___flmul@prod^0,0,c
  6370  002224  EF16  F011         	goto	u4021
  6371  002228  EF18  F011         	goto	u4020
  6372  00222C                     u4021:
  6373  00222C  EF1A  F011         	goto	l1416
  6374  002230                     u4020:
  6375  002230  EF0D  F011         	goto	l4307
  6376  002234                     l1416:
  6377  002234  5039               	movf	___flmul@aexp^0,w,c
  6378  002236  B4D8               	btfsc	status,2,c
  6379  002238  EF20  F011         	goto	u4031
  6380  00223C  EF22  F011         	goto	u4030
  6381  002240                     u4031:
  6382  002240  EF46  F011         	goto	l4319
  6383  002244                     u4030:
  6384  002244  0E01               	movlw	1
  6385  002246  263B               	addwf	___flmul@prod^0,f,c
  6386  002248  0E00               	movlw	0
  6387  00224A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6388  00224C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6389  00224E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6390  002250  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6391  002252  EF2D  F011         	goto	u4041
  6392  002256  EF2F  F011         	goto	u4040
  6393  00225A                     u4041:
  6394  00225A  EF46  F011         	goto	l4319
  6395  00225E                     u4040:
  6396  00225E  C03B  F030         	movff	___flmul@prod,??___flmul
  6397  002262  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6398  002266  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6399  00226A  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6400  00226E  3433               	rlcf	(??___flmul+3)^0,w,c
  6401  002270  3233               	rrcf	(??___flmul+3)^0,f,c
  6402  002272  3232               	rrcf	(??___flmul+2)^0,f,c
  6403  002274  3231               	rrcf	(??___flmul+1)^0,f,c
  6404  002276  3230               	rrcf	??___flmul^0,f,c
  6405  002278  C030  F03B         	movff	??___flmul,___flmul@prod
  6406  00227C  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6407  002280  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6408  002284  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6409  002288  4A3F               	infsnz	___flmul@temp^0,f,c
  6410  00228A  2A40               	incf	(___flmul@temp+1)^0,f,c
  6411  00228C                     l4319:
  6412  00228C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6413  00228E  EF51  F011         	goto	u4051
  6414  002292  5040               	movf	(___flmul@temp+1)^0,w,c
  6415  002294  E108               	bnz	u4050
  6416  002296  283F               	incf	___flmul@temp^0,w,c
  6417  002298  A0D8               	btfss	status,0,c
  6418  00229A  EF51  F011         	goto	u4051
  6419  00229E  EF53  F011         	goto	u4050
  6420  0022A2                     u4051:
  6421  0022A2  EF5D  F011         	goto	l4323
  6422  0022A6                     u4050:
  6423  0022A6  0E00               	movlw	0
  6424  0022A8  6E3B               	movwf	___flmul@prod^0,c
  6425  0022AA  0E00               	movlw	0
  6426  0022AC  6E3C               	movwf	(___flmul@prod+1)^0,c
  6427  0022AE  0E80               	movlw	128
  6428  0022B0  6E3D               	movwf	(___flmul@prod+2)^0,c
  6429  0022B2  0E7F               	movlw	127
  6430  0022B4  6E3E               	movwf	(___flmul@prod+3)^0,c
  6431  0022B6  EF8B  F011         	goto	l4335
  6432  0022BA                     l4323:
  6433  0022BA  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6434  0022BC  EF6A  F011         	goto	u4060
  6435  0022C0  5040               	movf	(___flmul@temp+1)^0,w,c
  6436  0022C2  E106               	bnz	u4061
  6437  0022C4  043F               	decf	___flmul@temp^0,w,c
  6438  0022C6  B0D8               	btfsc	status,0,c
  6439  0022C8  EF68  F011         	goto	u4061
  6440  0022CC  EF6A  F011         	goto	u4060
  6441  0022D0                     u4061:
  6442  0022D0  EF76  F011         	goto	l1424
  6443  0022D4                     u4060:
  6444  0022D4  0E00               	movlw	0
  6445  0022D6  6E3B               	movwf	___flmul@prod^0,c
  6446  0022D8  0E00               	movlw	0
  6447  0022DA  6E3C               	movwf	(___flmul@prod+1)^0,c
  6448  0022DC  0E00               	movlw	0
  6449  0022DE  6E3D               	movwf	(___flmul@prod+2)^0,c
  6450  0022E0  0E00               	movlw	0
  6451  0022E2  6E3E               	movwf	(___flmul@prod+3)^0,c
  6452  0022E4  0E00               	movlw	0
  6453  0022E6  6E34               	movwf	___flmul@sign^0,c
  6454  0022E8  EF8B  F011         	goto	l4335
  6455  0022EC                     l1424:
  6456  0022EC  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6457  0022F0  0EFF               	movlw	255
  6458  0022F2  163B               	andwf	___flmul@prod^0,f,c
  6459  0022F4  0EFF               	movlw	255
  6460  0022F6  163C               	andwf	(___flmul@prod+1)^0,f,c
  6461  0022F8  0E7F               	movlw	127
  6462  0022FA  163D               	andwf	(___flmul@prod+2)^0,f,c
  6463  0022FC  0E00               	movlw	0
  6464  0022FE  163E               	andwf	(___flmul@prod+3)^0,f,c
  6465  002300  A03A               	btfss	___flmul@bexp^0,0,c
  6466  002302  EF85  F011         	goto	u4071
  6467  002306  EF87  F011         	goto	u4070
  6468  00230A                     u4071:
  6469  00230A  EF88  F011         	goto	l4333
  6470  00230E                     u4070:
  6471  00230E  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6472  002310                     l4333:
  6473  002310  90D8               	bcf	status,0,c
  6474  002312  303A               	rrcf	___flmul@bexp^0,w,c
  6475  002314  6E3E               	movwf	(___flmul@prod+3)^0,c
  6476  002316                     l4335:
  6477  002316  5034               	movf	___flmul@sign^0,w,c
  6478  002318  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6479  00231A  C03B  F028         	movff	___flmul@prod,?___flmul
  6480  00231E  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6481  002322  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6482  002326  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6483  00232A                     l1411:
  6484  00232A  0012               	return		;funcret
  6485  00232C                     __end_of___flmul:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function ___flge *****************
  6489 ;; Defined at:
  6490 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  ff1             4    0[COMRAM] unsigned char 
  6493 ;;  ff2             4    4[COMRAM] unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;		None               void
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6505 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;Total ram usage:       12 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_roundf
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text24
  6520  004914                     __ptext24:
  6521                           	callstack 0
  6522  004914                     ___flge:
  6523                           	callstack 25
  6524  004914  0E00               	movlw	0
  6525  004916  1401               	andwf	___flge@ff1^0,w,c
  6526  004918  6E09               	movwf	??___flge^0,c
  6527  00491A  0E00               	movlw	0
  6528  00491C  1402               	andwf	(___flge@ff1+1)^0,w,c
  6529  00491E  6E0A               	movwf	(??___flge+1)^0,c
  6530  004920  0E80               	movlw	128
  6531  004922  1403               	andwf	(___flge@ff1+2)^0,w,c
  6532  004924  6E0B               	movwf	(??___flge+2)^0,c
  6533  004926  0E7F               	movlw	127
  6534  004928  1404               	andwf	(___flge@ff1+3)^0,w,c
  6535  00492A  6E0C               	movwf	(??___flge+3)^0,c
  6536  00492C  5009               	movf	??___flge^0,w,c
  6537  00492E  100A               	iorwf	(??___flge+1)^0,w,c
  6538  004930  100B               	iorwf	(??___flge+2)^0,w,c
  6539  004932  100C               	iorwf	(??___flge+3)^0,w,c
  6540  004934  A4D8               	btfss	status,2,c
  6541  004936  EF9F  F024         	goto	u4081
  6542  00493A  EFA1  F024         	goto	u4080
  6543  00493E                     u4081:
  6544  00493E  EFA9  F024         	goto	l4351
  6545  004942                     u4080:
  6546  004942  0E00               	movlw	0
  6547  004944  6E01               	movwf	___flge@ff1^0,c
  6548  004946  0E00               	movlw	0
  6549  004948  6E02               	movwf	(___flge@ff1+1)^0,c
  6550  00494A  0E00               	movlw	0
  6551  00494C  6E03               	movwf	(___flge@ff1+2)^0,c
  6552  00494E  0E00               	movlw	0
  6553  004950  6E04               	movwf	(___flge@ff1+3)^0,c
  6554  004952                     l4351:
  6555  004952  0E00               	movlw	0
  6556  004954  1405               	andwf	___flge@ff2^0,w,c
  6557  004956  6E09               	movwf	??___flge^0,c
  6558  004958  0E00               	movlw	0
  6559  00495A  1406               	andwf	(___flge@ff2+1)^0,w,c
  6560  00495C  6E0A               	movwf	(??___flge+1)^0,c
  6561  00495E  0E80               	movlw	128
  6562  004960  1407               	andwf	(___flge@ff2+2)^0,w,c
  6563  004962  6E0B               	movwf	(??___flge+2)^0,c
  6564  004964  0E7F               	movlw	127
  6565  004966  1408               	andwf	(___flge@ff2+3)^0,w,c
  6566  004968  6E0C               	movwf	(??___flge+3)^0,c
  6567  00496A  5009               	movf	??___flge^0,w,c
  6568  00496C  100A               	iorwf	(??___flge+1)^0,w,c
  6569  00496E  100B               	iorwf	(??___flge+2)^0,w,c
  6570  004970  100C               	iorwf	(??___flge+3)^0,w,c
  6571  004972  A4D8               	btfss	status,2,c
  6572  004974  EFBE  F024         	goto	u4091
  6573  004978  EFC0  F024         	goto	u4090
  6574  00497C                     u4091:
  6575  00497C  EFC8  F024         	goto	l4355
  6576  004980                     u4090:
  6577  004980  0E00               	movlw	0
  6578  004982  6E05               	movwf	___flge@ff2^0,c
  6579  004984  0E00               	movlw	0
  6580  004986  6E06               	movwf	(___flge@ff2+1)^0,c
  6581  004988  0E00               	movlw	0
  6582  00498A  6E07               	movwf	(___flge@ff2+2)^0,c
  6583  00498C  0E00               	movlw	0
  6584  00498E  6E08               	movwf	(___flge@ff2+3)^0,c
  6585  004990                     l4355:
  6586  004990  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6587  004992  EFCD  F024         	goto	u4101
  6588  004996  EFCF  F024         	goto	u4100
  6589  00499A                     u4101:
  6590  00499A  EFD8  F024         	goto	l4359
  6591  00499E                     u4100:
  6592  00499E  6C01               	negf	___flge@ff1^0,c
  6593  0049A0  1E02               	comf	(___flge@ff1+1)^0,f,c
  6594  0049A2  B0D8               	btfsc	status,0,c
  6595  0049A4  2A02               	incf	(___flge@ff1+1)^0,f,c
  6596  0049A6  1E03               	comf	(___flge@ff1+2)^0,f,c
  6597  0049A8  B0D8               	btfsc	status,0,c
  6598  0049AA  2A03               	incf	(___flge@ff1+2)^0,f,c
  6599  0049AC  0E80               	movlw	128
  6600  0049AE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6601  0049B0                     l4359:
  6602  0049B0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6603  0049B2  EFDD  F024         	goto	u4111
  6604  0049B6  EFDF  F024         	goto	u4110
  6605  0049BA                     u4111:
  6606  0049BA  EFE8  F024         	goto	l1058
  6607  0049BE                     u4110:
  6608  0049BE  6C05               	negf	___flge@ff2^0,c
  6609  0049C0  1E06               	comf	(___flge@ff2+1)^0,f,c
  6610  0049C2  B0D8               	btfsc	status,0,c
  6611  0049C4  2A06               	incf	(___flge@ff2+1)^0,f,c
  6612  0049C6  1E07               	comf	(___flge@ff2+2)^0,f,c
  6613  0049C8  B0D8               	btfsc	status,0,c
  6614  0049CA  2A07               	incf	(___flge@ff2+2)^0,f,c
  6615  0049CC  0E80               	movlw	128
  6616  0049CE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6617  0049D0                     l1058:
  6618  0049D0  0E00               	movlw	0
  6619  0049D2  1A01               	xorwf	___flge@ff1^0,f,c
  6620  0049D4  0E00               	movlw	0
  6621  0049D6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6622  0049D8  0E00               	movlw	0
  6623  0049DA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6624  0049DC  0E80               	movlw	128
  6625  0049DE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6626  0049E0  0E00               	movlw	0
  6627  0049E2  1A05               	xorwf	___flge@ff2^0,f,c
  6628  0049E4  0E00               	movlw	0
  6629  0049E6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6630  0049E8  0E00               	movlw	0
  6631  0049EA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6632  0049EC  0E80               	movlw	128
  6633  0049EE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6634  0049F0  5005               	movf	___flge@ff2^0,w,c
  6635  0049F2  5C01               	subwf	___flge@ff1^0,w,c
  6636  0049F4  5006               	movf	(___flge@ff2+1)^0,w,c
  6637  0049F6  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6638  0049F8  5007               	movf	(___flge@ff2+2)^0,w,c
  6639  0049FA  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6640  0049FC  5008               	movf	(___flge@ff2+3)^0,w,c
  6641  0049FE  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6642  004A00  B0D8               	btfsc	status,0,c
  6643  004A02  EF05  F025         	goto	u4121
  6644  004A06  EF07  F025         	goto	u4120
  6645  004A0A                     u4121:
  6646  004A0A  EF0A  F025         	goto	l4365
  6647  004A0E                     u4120:
  6648  004A0E  90D8               	bcf	status,0,c
  6649  004A10  EF0B  F025         	goto	l1063
  6650  004A14                     l4365:
  6651  004A14  80D8               	bsf	status,0,c
  6652  004A16                     l1063:
  6653  004A16  0012               	return		;funcret
  6654  004A18                     __end_of___flge:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function ___fltol *****************
  6658 ;; Defined at:
  6659 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  f1              4   90[COMRAM] unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  exp1            1    5[BANK0 ] unsigned char 
  6664 ;;  sign1           1    4[BANK0 ] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  4   90[COMRAM] long 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;Total ram usage:       10 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_lroundf
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text25
  6689  00480C                     __ptext25:
  6690                           	callstack 0
  6691  00480C                     ___fltol:
  6692                           	callstack 26
  6693  00480C  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6694  00480E  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6695  004810  0100               	movlb	0	; () banked
  6696  004812  6F65               	movwf	___fltol@exp1& (0+255),b
  6697  004814  5165               	movf	___fltol@exp1& (0+255),w,b
  6698  004816  A4D8               	btfss	status,2,c
  6699  004818  EF10  F024         	goto	u4181
  6700  00481C  EF12  F024         	goto	u4180
  6701  004820                     u4181:
  6702  004820  EF1C  F024         	goto	l4453
  6703  004824                     u4180:
  6704  004824                     l4449:
  6705                           
  6706                           ; BSR set to: 0
  6707  004824  0E00               	movlw	0
  6708  004826  6E5B               	movwf	?___fltol^0,c
  6709  004828  0E00               	movlw	0
  6710  00482A  6E5C               	movwf	(?___fltol+1)^0,c
  6711  00482C  0E00               	movlw	0
  6712  00482E  6E5D               	movwf	(?___fltol+2)^0,c
  6713  004830  0E00               	movlw	0
  6714  004832  6E5E               	movwf	(?___fltol+3)^0,c
  6715  004834  EF89  F024         	goto	l1090
  6716  004838                     l4453:
  6717                           
  6718                           ; BSR set to: 0
  6719  004838  C05B  F060         	movff	___fltol@f1,??___fltol
  6720  00483C  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6721  004840  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6722  004844  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6723  004848  0E20               	movlw	32
  6724  00484A  EF2C  F024         	goto	u4190
  6725  00484E                     u4195:
  6726  00484E  90D8               	bcf	status,0,c
  6727  004850  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6728  004852  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6729  004854  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6730  004856  3360               	rrcf	??___fltol& (0+255),f,b
  6731  004858                     u4190:
  6732  004858  2EE8               	decfsz	wreg,f,c
  6733  00485A  EF27  F024         	goto	u4195
  6734  00485E  5160               	movf	??___fltol& (0+255),w,b
  6735  004860  6F64               	movwf	___fltol@sign1& (0+255),b
  6736  004862                     
  6737                           ; BSR set to: 0
  6738  004862  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6739  004864                     
  6740                           ; BSR set to: 0
  6741  004864  0EFF               	movlw	255
  6742  004866  165B               	andwf	___fltol@f1^0,f,c
  6743  004868  0EFF               	movlw	255
  6744  00486A  165C               	andwf	(___fltol@f1+1)^0,f,c
  6745  00486C  0EFF               	movlw	255
  6746  00486E  165D               	andwf	(___fltol@f1+2)^0,f,c
  6747  004870  0E00               	movlw	0
  6748  004872  165E               	andwf	(___fltol@f1+3)^0,f,c
  6749  004874                     
  6750                           ; BSR set to: 0
  6751  004874  0E96               	movlw	150
  6752  004876  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6753  004878                     
  6754                           ; BSR set to: 0
  6755  004878  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6756  00487A  EF43  F024         	goto	u4200
  6757  00487E  EF41  F024         	goto	u4201
  6758  004882                     u4201:
  6759  004882  EF59  F024         	goto	l4473
  6760  004886                     u4200:
  6761  004886                     
  6762                           ; BSR set to: 0
  6763  004886  5165               	movf	___fltol@exp1& (0+255),w,b
  6764  004888  0A80               	xorlw	128
  6765  00488A  0F97               	addlw	151
  6766  00488C  B0D8               	btfsc	status,0,c
  6767  00488E  EF4B  F024         	goto	u4211
  6768  004892  EF4D  F024         	goto	u4210
  6769  004896                     u4211:
  6770  004896  EF4F  F024         	goto	l4469
  6771  00489A                     u4210:
  6772  00489A  EF12  F024         	goto	l4449
  6773  00489E                     l4469:
  6774                           
  6775                           ; BSR set to: 0
  6776  00489E  90D8               	bcf	status,0,c
  6777  0048A0  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6778  0048A2  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6779  0048A4  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6780  0048A6  325B               	rrcf	___fltol@f1^0,f,c
  6781  0048A8                     
  6782                           ; BSR set to: 0
  6783  0048A8  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6784  0048AA  EF4F  F024         	goto	l4469
  6785  0048AE  EF71  F024         	goto	l4483
  6786  0048B2                     l4473:
  6787                           
  6788                           ; BSR set to: 0
  6789  0048B2  0E1F               	movlw	31
  6790  0048B4  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6791  0048B6  EF5F  F024         	goto	u4221
  6792  0048BA  EF61  F024         	goto	u4220
  6793  0048BE                     u4221:
  6794  0048BE  EF69  F024         	goto	l4481
  6795  0048C2                     u4220:
  6796  0048C2  EF12  F024         	goto	l4449
  6797  0048C6                     l4479:
  6798                           
  6799                           ; BSR set to: 0
  6800  0048C6  90D8               	bcf	status,0,c
  6801  0048C8  365B               	rlcf	___fltol@f1^0,f,c
  6802  0048CA  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6803  0048CC  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6804  0048CE  365E               	rlcf	(___fltol@f1+3)^0,f,c
  6805  0048D0  0765               	decf	___fltol@exp1& (0+255),f,b
  6806  0048D2                     l4481:
  6807                           
  6808                           ; BSR set to: 0
  6809  0048D2  5165               	movf	___fltol@exp1& (0+255),w,b
  6810  0048D4  A4D8               	btfss	status,2,c
  6811  0048D6  EF6F  F024         	goto	u4231
  6812  0048DA  EF71  F024         	goto	u4230
  6813  0048DE                     u4231:
  6814  0048DE  EF63  F024         	goto	l4479
  6815  0048E2                     u4230:
  6816  0048E2                     l4483:
  6817                           
  6818                           ; BSR set to: 0
  6819  0048E2  5164               	movf	___fltol@sign1& (0+255),w,b
  6820  0048E4  B4D8               	btfsc	status,2,c
  6821  0048E6  EF77  F024         	goto	u4241
  6822  0048EA  EF79  F024         	goto	u4240
  6823  0048EE                     u4241:
  6824  0048EE  EF81  F024         	goto	l4487
  6825  0048F2                     u4240:
  6826  0048F2                     
  6827                           ; BSR set to: 0
  6828  0048F2  1E5E               	comf	(___fltol@f1+3)^0,f,c
  6829  0048F4  1E5D               	comf	(___fltol@f1+2)^0,f,c
  6830  0048F6  1E5C               	comf	(___fltol@f1+1)^0,f,c
  6831  0048F8  6C5B               	negf	___fltol@f1^0,c
  6832  0048FA  0E00               	movlw	0
  6833  0048FC  225C               	addwfc	(___fltol@f1+1)^0,f,c
  6834  0048FE  225D               	addwfc	(___fltol@f1+2)^0,f,c
  6835  004900  225E               	addwfc	(___fltol@f1+3)^0,f,c
  6836  004902                     l4487:
  6837                           
  6838                           ; BSR set to: 0
  6839  004902  C05B  F05B         	movff	___fltol@f1,?___fltol
  6840  004906  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  6841  00490A  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  6842  00490E  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  6843  004912                     l1090:
  6844                           
  6845                           ; BSR set to: 0
  6846  004912  0012               	return		;funcret
  6847  004914                     __end_of___fltol:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function _color_read_Clear *****************
  6851 ;; Defined at:
  6852 ;;		line 133 in file "color.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  tmp             2    9[COMRAM] unsigned int 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  2    4[COMRAM] unsigned int 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;Total ram usage:        7 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 3
  6873 ;; This function calls:
  6874 ;;		_I2C_2_Master_Read
  6875 ;;		_I2C_2_Master_RepStart
  6876 ;;		_I2C_2_Master_Start
  6877 ;;		_I2C_2_Master_Stop
  6878 ;;		_I2C_2_Master_Write
  6879 ;; This function is called by:
  6880 ;;		_read_color
  6881 ;;		_calibrate_white
  6882 ;;		_amb_light_measure
  6883 ;;		_distance_measure
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text26
  6888  0053CE                     __ptext26:
  6889                           	callstack 0
  6890  0053CE                     _color_read_Clear:
  6891                           	callstack 24
  6892  0053CE                     
  6893                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  6894  0053CE  ECBD  F02C         	call	_I2C_2_Master_Start	;wreg free
  6895                           
  6896                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  6897  0053D2  0E52               	movlw	82
  6898  0053D4  ECA7  F02C         	call	_I2C_2_Master_Write
  6899                           
  6900                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  6901  0053D8  0EB4               	movlw	180
  6902  0053DA  ECA7  F02C         	call	_I2C_2_Master_Write
  6903                           
  6904                           ;color.c: 139:  I2C_2_Master_RepStart();
  6905  0053DE  ECB3  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6906                           
  6907                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  6908  0053E2  0E53               	movlw	83
  6909  0053E4  ECA7  F02C         	call	_I2C_2_Master_Write
  6910                           
  6911                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  6912  0053E8  0E01               	movlw	1
  6913  0053EA  EC54  F02A         	call	_I2C_2_Master_Read
  6914  0053EE  6E07               	movwf	??_color_read_Clear^0,c
  6915  0053F0  5007               	movf	??_color_read_Clear^0,w,c
  6916  0053F2  6E0A               	movwf	color_read_Clear@tmp^0,c
  6917  0053F4  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6918                           
  6919                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6920  0053F6  0E00               	movlw	0
  6921  0053F8  EC54  F02A         	call	_I2C_2_Master_Read
  6922  0053FC  6E07               	movwf	??_color_read_Clear^0,c
  6923  0053FE  5007               	movf	??_color_read_Clear^0,w,c
  6924  005400  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6925  005402  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6926  005404  500A               	movf	color_read_Clear@tmp^0,w,c
  6927  005406  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6928  005408  6E0A               	movwf	color_read_Clear@tmp^0,c
  6929  00540A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6930  00540C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6931  00540E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6932                           
  6933                           ;color.c: 143:  I2C_2_Master_Stop();
  6934  005410  ECB8  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6935  005414                     
  6936                           ;color.c: 144:  return tmp;
  6937  005414  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6938  005418  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6939  00541C  0012               	return		;funcret
  6940  00541E                     __end_of_color_read_Clear:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _I2C_2_Master_RepStart *****************
  6944 ;; Defined at:
  6945 ;;		line 33 in file "i2c.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;Total ram usage:        0 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 2
  6966 ;; This function calls:
  6967 ;;		_I2C_2_Master_Idle
  6968 ;; This function is called by:
  6969 ;;		_color_read_Red
  6970 ;;		_color_read_Blue
  6971 ;;		_color_read_Green
  6972 ;;		_color_read_Clear
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text27
  6977  005966                     __ptext27:
  6978                           	callstack 0
  6979  005966                     _I2C_2_Master_RepStart:
  6980                           	callstack 24
  6981  005966                     
  6982                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6983  005966  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6984  00596A                     
  6985                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6986  00596A  010E               	movlb	14	; () banked
  6987  00596C  83DA               	bsf	218,1,b	;volatile
  6988  00596E                     
  6989                           ; BSR set to: 14
  6990  00596E  0012               	return		;funcret
  6991  005970                     __end_of_I2C_2_Master_RepStart:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _I2C_2_Master_Read *****************
  6995 ;; Defined at:
  6996 ;;		line 51 in file "i2c.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  ack             1    wreg     unsigned char 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  ack             1    2[COMRAM] unsigned char 
  7001 ;;  tmp             1    3[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;Total ram usage:        3 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 2
  7018 ;; This function calls:
  7019 ;;		_I2C_2_Master_Idle
  7020 ;; This function is called by:
  7021 ;;		_color_read_Red
  7022 ;;		_color_read_Blue
  7023 ;;		_color_read_Green
  7024 ;;		_color_read_Clear
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text28
  7029  0054A8                     __ptext28:
  7030                           	callstack 0
  7031  0054A8                     _I2C_2_Master_Read:
  7032                           	callstack 24
  7033                           
  7034                           ; BSR set to: 14
  7035                           ;incstack = 0
  7036                           ;I2C_2_Master_Read@ack stored from wreg
  7037  0054A8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7038  0054AA                     
  7039                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7040  0054AA  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7041  0054AE                     
  7042                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7043  0054AE  010E               	movlb	14	; () banked
  7044  0054B0  87DA               	bsf	218,3,b	;volatile
  7045                           
  7046                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7047  0054B2  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7048  0054B6                     
  7049                           ;i2c.c: 57:   tmp = SSP2BUF;
  7050  0054B6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7051                           
  7052                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7053  0054BA  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7054  0054BE                     
  7055                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7056  0054BE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7057  0054C0  B4D8               	btfsc	status,2,c
  7058  0054C2  EF65  F02A         	goto	u3821
  7059  0054C6  EF69  F02A         	goto	u3820
  7060  0054CA                     u3821:
  7061  0054CA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7062  0054CC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7063  0054CE  EF6A  F02A         	goto	u3838
  7064  0054D2                     u3820:
  7065  0054D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7066  0054D4                     u3838:
  7067  0054D4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7068  0054D6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7069  0054D8  010E               	movlb	14	; () banked
  7070  0054DA  51DA               	movf	218,w,b	;volatile
  7071  0054DC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7072  0054DE  0BDF               	andlw	-33
  7073  0054E0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7074  0054E2  6FDA               	movwf	218,b	;volatile
  7075  0054E4                     
  7076                           ; BSR set to: 14
  7077                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7078  0054E4  89DA               	bsf	218,4,b	;volatile
  7079  0054E6                     
  7080                           ; BSR set to: 14
  7081                           ;i2c.c: 61:   return tmp;
  7082  0054E6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7083  0054E8                     
  7084                           ; BSR set to: 14
  7085  0054E8  0012               	return		;funcret
  7086  0054EA                     __end_of_I2C_2_Master_Read:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function ___xxtofl *****************
  7090 ;; Defined at:
  7091 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  sign            1    wreg     unsigned char 
  7094 ;;  val             4    0[COMRAM] long 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  sign            1    8[COMRAM] unsigned char 
  7097 ;;  arg             4   10[COMRAM] unsigned long 
  7098 ;;  exp             1    9[COMRAM] unsigned char 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  4    0[COMRAM] unsigned char 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;Total ram usage:       14 bytes
  7113 ;; Hardware stack levels used: 1
  7114 ;; Hardware stack levels required when called: 1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		_detect_color
  7119 ;;		_amb_light_measure
  7120 ;;		_distance_measure
  7121 ;;		_check_color_reading
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text29
  7126  003A54                     __ptext29:
  7127                           	callstack 0
  7128  003A54                     ___xxtofl:
  7129                           	callstack 27
  7130                           
  7131                           ; BSR set to: 14
  7132                           ;incstack = 0
  7133                           ;___xxtofl@sign stored from wreg
  7134  003A54  6E09               	movwf	___xxtofl@sign^0,c
  7135  003A56  5009               	movf	___xxtofl@sign^0,w,c
  7136  003A58  B4D8               	btfsc	status,2,c
  7137  003A5A  EF31  F01D         	goto	u5011
  7138  003A5E  EF33  F01D         	goto	u5010
  7139  003A62                     u5011:
  7140  003A62  EF55  F01D         	goto	l1448
  7141  003A66                     u5010:
  7142  003A66  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7143  003A68  EF3A  F01D         	goto	u5020
  7144  003A6C  EF38  F01D         	goto	u5021
  7145  003A70                     u5021:
  7146  003A70  EF55  F01D         	goto	l1448
  7147  003A74                     u5020:
  7148  003A74  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7149  003A78  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7150  003A7C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7151  003A80  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7152  003A84  1E05               	comf	??___xxtofl^0,f,c
  7153  003A86  1E06               	comf	(??___xxtofl+1)^0,f,c
  7154  003A88  1E07               	comf	(??___xxtofl+2)^0,f,c
  7155  003A8A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7156  003A8C  2A05               	incf	??___xxtofl^0,f,c
  7157  003A8E  0E00               	movlw	0
  7158  003A90  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7159  003A92  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7160  003A94  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7161  003A96  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7162  003A9A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7163  003A9E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7164  003AA2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7165  003AA6  EF5D  F01D         	goto	l4865
  7166  003AAA                     l1448:
  7167  003AAA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7168  003AAE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7169  003AB2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7170  003AB6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7171  003ABA                     l4865:
  7172  003ABA  5001               	movf	___xxtofl@val^0,w,c
  7173  003ABC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7174  003ABE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7175  003AC0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7176  003AC2  A4D8               	btfss	status,2,c
  7177  003AC4  EF66  F01D         	goto	u5031
  7178  003AC8  EF68  F01D         	goto	u5030
  7179  003ACC                     u5031:
  7180  003ACC  EF72  F01D         	goto	l4871
  7181  003AD0                     u5030:
  7182  003AD0  0E00               	movlw	0
  7183  003AD2  6E01               	movwf	?___xxtofl^0,c
  7184  003AD4  0E00               	movlw	0
  7185  003AD6  6E02               	movwf	(?___xxtofl+1)^0,c
  7186  003AD8  0E00               	movlw	0
  7187  003ADA  6E03               	movwf	(?___xxtofl+2)^0,c
  7188  003ADC  0E00               	movlw	0
  7189  003ADE  6E04               	movwf	(?___xxtofl+3)^0,c
  7190  003AE0  EF03  F01E         	goto	l1451
  7191  003AE4                     l4871:
  7192  003AE4  0E96               	movlw	150
  7193  003AE6  6E0A               	movwf	___xxtofl@exp^0,c
  7194  003AE8  EF7C  F01D         	goto	l4875
  7195  003AEC                     l4873:
  7196  003AEC  2A0A               	incf	___xxtofl@exp^0,f,c
  7197  003AEE  90D8               	bcf	status,0,c
  7198  003AF0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7199  003AF2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7200  003AF4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7201  003AF6  320B               	rrcf	___xxtofl@arg^0,f,c
  7202  003AF8                     l4875:
  7203  003AF8  0E00               	movlw	0
  7204  003AFA  140B               	andwf	___xxtofl@arg^0,w,c
  7205  003AFC  6E05               	movwf	??___xxtofl^0,c
  7206  003AFE  0E00               	movlw	0
  7207  003B00  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7208  003B02  6E06               	movwf	(??___xxtofl+1)^0,c
  7209  003B04  0E00               	movlw	0
  7210  003B06  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7211  003B08  6E07               	movwf	(??___xxtofl+2)^0,c
  7212  003B0A  0EFE               	movlw	254
  7213  003B0C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7214  003B0E  6E08               	movwf	(??___xxtofl+3)^0,c
  7215  003B10  5005               	movf	??___xxtofl^0,w,c
  7216  003B12  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7217  003B14  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7218  003B16  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7219  003B18  A4D8               	btfss	status,2,c
  7220  003B1A  EF91  F01D         	goto	u5041
  7221  003B1E  EF93  F01D         	goto	u5040
  7222  003B22                     u5041:
  7223  003B22  EF76  F01D         	goto	l4873
  7224  003B26                     u5040:
  7225  003B26  EFA1  F01D         	goto	l1455
  7226  003B2A                     l4877:
  7227  003B2A  2A0A               	incf	___xxtofl@exp^0,f,c
  7228  003B2C  0E01               	movlw	1
  7229  003B2E  260B               	addwf	___xxtofl@arg^0,f,c
  7230  003B30  0E00               	movlw	0
  7231  003B32  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7232  003B34  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7233  003B36  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7234  003B38  90D8               	bcf	status,0,c
  7235  003B3A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7236  003B3C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7237  003B3E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7238  003B40  320B               	rrcf	___xxtofl@arg^0,f,c
  7239  003B42                     l1455:
  7240  003B42  0E00               	movlw	0
  7241  003B44  140B               	andwf	___xxtofl@arg^0,w,c
  7242  003B46  6E05               	movwf	??___xxtofl^0,c
  7243  003B48  0E00               	movlw	0
  7244  003B4A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7245  003B4C  6E06               	movwf	(??___xxtofl+1)^0,c
  7246  003B4E  0E00               	movlw	0
  7247  003B50  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7248  003B52  6E07               	movwf	(??___xxtofl+2)^0,c
  7249  003B54  0EFF               	movlw	255
  7250  003B56  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7251  003B58  6E08               	movwf	(??___xxtofl+3)^0,c
  7252  003B5A  5005               	movf	??___xxtofl^0,w,c
  7253  003B5C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7254  003B5E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7255  003B60  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7256  003B62  A4D8               	btfss	status,2,c
  7257  003B64  EFB6  F01D         	goto	u5051
  7258  003B68  EFB8  F01D         	goto	u5050
  7259  003B6C                     u5051:
  7260  003B6C  EF95  F01D         	goto	l4877
  7261  003B70                     u5050:
  7262  003B70  EFC0  F01D         	goto	l4885
  7263  003B74                     l4883:
  7264  003B74  060A               	decf	___xxtofl@exp^0,f,c
  7265  003B76  90D8               	bcf	status,0,c
  7266  003B78  360B               	rlcf	___xxtofl@arg^0,f,c
  7267  003B7A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7268  003B7C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7269  003B7E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7270  003B80                     l4885:
  7271  003B80  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7272  003B82  EFC5  F01D         	goto	u5061
  7273  003B86  EFC7  F01D         	goto	u5060
  7274  003B8A                     u5061:
  7275  003B8A  EFCF  F01D         	goto	l1462
  7276  003B8E                     u5060:
  7277  003B8E  0E02               	movlw	2
  7278  003B90  600A               	cpfslt	___xxtofl@exp^0,c
  7279  003B92  EFCD  F01D         	goto	u5071
  7280  003B96  EFCF  F01D         	goto	u5070
  7281  003B9A                     u5071:
  7282  003B9A  EFBA  F01D         	goto	l4883
  7283  003B9E                     u5070:
  7284  003B9E                     l1462:
  7285  003B9E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7286  003BA0  EFD4  F01D         	goto	u5081
  7287  003BA4  EFD6  F01D         	goto	u5080
  7288  003BA8                     u5081:
  7289  003BA8  EFD7  F01D         	goto	l4891
  7290  003BAC                     u5080:
  7291  003BAC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7292  003BAE                     l4891:
  7293  003BAE  90D8               	bcf	status,0,c
  7294  003BB0  320A               	rrcf	___xxtofl@exp^0,f,c
  7295  003BB2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7296  003BB6  6A06               	clrf	(??___xxtofl+1)^0,c
  7297  003BB8  6A07               	clrf	(??___xxtofl+2)^0,c
  7298  003BBA  6A08               	clrf	(??___xxtofl+3)^0,c
  7299  003BBC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7300  003BC0  6A07               	clrf	(??___xxtofl+2)^0,c
  7301  003BC2  6A06               	clrf	(??___xxtofl+1)^0,c
  7302  003BC4  6A05               	clrf	??___xxtofl^0,c
  7303  003BC6  5005               	movf	??___xxtofl^0,w,c
  7304  003BC8  120B               	iorwf	___xxtofl@arg^0,f,c
  7305  003BCA  5006               	movf	(??___xxtofl+1)^0,w,c
  7306  003BCC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7307  003BCE  5007               	movf	(??___xxtofl+2)^0,w,c
  7308  003BD0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7309  003BD2  5008               	movf	(??___xxtofl+3)^0,w,c
  7310  003BD4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7311  003BD6  5009               	movf	___xxtofl@sign^0,w,c
  7312  003BD8  B4D8               	btfsc	status,2,c
  7313  003BDA  EFF1  F01D         	goto	u5091
  7314  003BDE  EFF3  F01D         	goto	u5090
  7315  003BE2                     u5091:
  7316  003BE2  EFFB  F01D         	goto	l4901
  7317  003BE6                     u5090:
  7318  003BE6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7319  003BE8  EFFA  F01D         	goto	u5100
  7320  003BEC  EFF8  F01D         	goto	u5101
  7321  003BF0                     u5101:
  7322  003BF0  EFFB  F01D         	goto	l4901
  7323  003BF4                     u5100:
  7324  003BF4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7325  003BF6                     l4901:
  7326  003BF6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7327  003BFA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7328  003BFE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7329  003C02  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7330  003C06                     l1451:
  7331  003C06  0012               	return		;funcret
  7332  003C08                     __end_of___xxtofl:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function ___fldiv *****************
  7336 ;; Defined at:
  7337 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  b               4   14[COMRAM] unsigned char 
  7340 ;;  a               4   18[COMRAM] unsigned char 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  grs             4   33[COMRAM] unsigned long 
  7343 ;;  rem             4   26[COMRAM] unsigned long 
  7344 ;;  new_exp         2   31[COMRAM] short 
  7345 ;;  aexp            1   38[COMRAM] unsigned char 
  7346 ;;  bexp            1   37[COMRAM] unsigned char 
  7347 ;;  sign            1   30[COMRAM] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  4   14[COMRAM] unsigned char 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7357 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;Total ram usage:       25 bytes
  7362 ;; Hardware stack levels used: 1
  7363 ;; Hardware stack levels required when called: 1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_detect_color
  7368 ;;		_amb_light_measure
  7369 ;;		_check_color_reading
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text30
  7374  0026DA                     __ptext30:
  7375                           	callstack 0
  7376  0026DA                     ___fldiv:
  7377                           	callstack 27
  7378  0026DA  5012               	movf	(___fldiv@b+3)^0,w,c
  7379  0026DC  0B80               	andlw	128
  7380  0026DE  6E1F               	movwf	___fldiv@sign^0,c
  7381  0026E0  5012               	movf	(___fldiv@b+3)^0,w,c
  7382  0026E2  2412               	addwf	(___fldiv@b+3)^0,w,c
  7383  0026E4  6E26               	movwf	___fldiv@bexp^0,c
  7384  0026E6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7385  0026E8  EF78  F013         	goto	u4781
  7386  0026EC  EF7A  F013         	goto	u4780
  7387  0026F0                     u4781:
  7388  0026F0  EF7B  F013         	goto	l4727
  7389  0026F4                     u4780:
  7390  0026F4  8026               	bsf	___fldiv@bexp^0,0,c
  7391  0026F6                     l4727:
  7392  0026F6  5026               	movf	___fldiv@bexp^0,w,c
  7393  0026F8  B4D8               	btfsc	status,2,c
  7394  0026FA  EF81  F013         	goto	u4791
  7395  0026FE  EF83  F013         	goto	u4790
  7396  002702                     u4791:
  7397  002702  EF98  F013         	goto	l4737
  7398  002706                     u4790:
  7399  002706  2826               	incf	___fldiv@bexp^0,w,c
  7400  002708  A4D8               	btfss	status,2,c
  7401  00270A  EF89  F013         	goto	u4801
  7402  00270E  EF8B  F013         	goto	u4800
  7403  002712                     u4801:
  7404  002712  EF93  F013         	goto	l4733
  7405  002716                     u4800:
  7406  002716  0E00               	movlw	0
  7407  002718  6E0F               	movwf	___fldiv@b^0,c
  7408  00271A  0E00               	movlw	0
  7409  00271C  6E10               	movwf	(___fldiv@b+1)^0,c
  7410  00271E  0E00               	movlw	0
  7411  002720  6E11               	movwf	(___fldiv@b+2)^0,c
  7412  002722  0E00               	movlw	0
  7413  002724  6E12               	movwf	(___fldiv@b+3)^0,c
  7414  002726                     l4733:
  7415  002726  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7416  002728  0E00               	movlw	0
  7417  00272A  6E12               	movwf	(___fldiv@b+3)^0,c
  7418  00272C  EFA0  F013         	goto	l4739
  7419  002730                     l4737:
  7420  002730  0E00               	movlw	0
  7421  002732  6E0F               	movwf	___fldiv@b^0,c
  7422  002734  0E00               	movlw	0
  7423  002736  6E10               	movwf	(___fldiv@b+1)^0,c
  7424  002738  0E00               	movlw	0
  7425  00273A  6E11               	movwf	(___fldiv@b+2)^0,c
  7426  00273C  0E00               	movlw	0
  7427  00273E  6E12               	movwf	(___fldiv@b+3)^0,c
  7428  002740                     l4739:
  7429  002740  5016               	movf	(___fldiv@a+3)^0,w,c
  7430  002742  0B80               	andlw	128
  7431  002744  1A1F               	xorwf	___fldiv@sign^0,f,c
  7432  002746  5016               	movf	(___fldiv@a+3)^0,w,c
  7433  002748  2416               	addwf	(___fldiv@a+3)^0,w,c
  7434  00274A  6E27               	movwf	___fldiv@aexp^0,c
  7435  00274C  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7436  00274E  EFAB  F013         	goto	u4811
  7437  002752  EFAD  F013         	goto	u4810
  7438  002756                     u4811:
  7439  002756  EFAE  F013         	goto	l4747
  7440  00275A                     u4810:
  7441  00275A  8027               	bsf	___fldiv@aexp^0,0,c
  7442  00275C                     l4747:
  7443  00275C  5027               	movf	___fldiv@aexp^0,w,c
  7444  00275E  B4D8               	btfsc	status,2,c
  7445  002760  EFB4  F013         	goto	u4821
  7446  002764  EFB6  F013         	goto	u4820
  7447  002768                     u4821:
  7448  002768  EFCB  F013         	goto	l4757
  7449  00276C                     u4820:
  7450  00276C  2827               	incf	___fldiv@aexp^0,w,c
  7451  00276E  A4D8               	btfss	status,2,c
  7452  002770  EFBC  F013         	goto	u4831
  7453  002774  EFBE  F013         	goto	u4830
  7454  002778                     u4831:
  7455  002778  EFC6  F013         	goto	l4753
  7456  00277C                     u4830:
  7457  00277C  0E00               	movlw	0
  7458  00277E  6E13               	movwf	___fldiv@a^0,c
  7459  002780  0E00               	movlw	0
  7460  002782  6E14               	movwf	(___fldiv@a+1)^0,c
  7461  002784  0E00               	movlw	0
  7462  002786  6E15               	movwf	(___fldiv@a+2)^0,c
  7463  002788  0E00               	movlw	0
  7464  00278A  6E16               	movwf	(___fldiv@a+3)^0,c
  7465  00278C                     l4753:
  7466  00278C  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7467  00278E  0E00               	movlw	0
  7468  002790  6E16               	movwf	(___fldiv@a+3)^0,c
  7469  002792  EFD3  F013         	goto	l4759
  7470  002796                     l4757:
  7471  002796  0E00               	movlw	0
  7472  002798  6E13               	movwf	___fldiv@a^0,c
  7473  00279A  0E00               	movlw	0
  7474  00279C  6E14               	movwf	(___fldiv@a+1)^0,c
  7475  00279E  0E00               	movlw	0
  7476  0027A0  6E15               	movwf	(___fldiv@a+2)^0,c
  7477  0027A2  0E00               	movlw	0
  7478  0027A4  6E16               	movwf	(___fldiv@a+3)^0,c
  7479  0027A6                     l4759:
  7480  0027A6  5013               	movf	___fldiv@a^0,w,c
  7481  0027A8  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7482  0027AA  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7483  0027AC  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7484  0027AE  A4D8               	btfss	status,2,c
  7485  0027B0  EFDC  F013         	goto	u4841
  7486  0027B4  EFDE  F013         	goto	u4840
  7487  0027B8                     u4841:
  7488  0027B8  EFF6  F013         	goto	l4771
  7489  0027BC                     u4840:
  7490  0027BC  0E00               	movlw	0
  7491  0027BE  6E0F               	movwf	___fldiv@b^0,c
  7492  0027C0  0E00               	movlw	0
  7493  0027C2  6E10               	movwf	(___fldiv@b+1)^0,c
  7494  0027C4  0E00               	movlw	0
  7495  0027C6  6E11               	movwf	(___fldiv@b+2)^0,c
  7496  0027C8  0E00               	movlw	0
  7497  0027CA  6E12               	movwf	(___fldiv@b+3)^0,c
  7498  0027CC  0E80               	movlw	128
  7499  0027CE  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7500  0027D0  0E7F               	movlw	127
  7501  0027D2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7502  0027D4                     l4765:
  7503  0027D4  501F               	movf	___fldiv@sign^0,w,c
  7504  0027D6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7505  0027D8  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7506  0027DC  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7507  0027E0  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7508  0027E4  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7509  0027E8  EF39  F015         	goto	l1375
  7510  0027EC                     l4771:
  7511  0027EC  5026               	movf	___fldiv@bexp^0,w,c
  7512  0027EE  A4D8               	btfss	status,2,c
  7513  0027F0  EFFC  F013         	goto	u4851
  7514  0027F4  EFFE  F013         	goto	u4850
  7515  0027F8                     u4851:
  7516  0027F8  EF08  F014         	goto	l4779
  7517  0027FC                     u4850:
  7518  0027FC  0E00               	movlw	0
  7519  0027FE  6E0F               	movwf	?___fldiv^0,c
  7520  002800  0E00               	movlw	0
  7521  002802  6E10               	movwf	(?___fldiv+1)^0,c
  7522  002804  0E00               	movlw	0
  7523  002806  6E11               	movwf	(?___fldiv+2)^0,c
  7524  002808  0E00               	movlw	0
  7525  00280A  6E12               	movwf	(?___fldiv+3)^0,c
  7526  00280C  EF39  F015         	goto	l1375
  7527  002810                     l4779:
  7528  002810  5027               	movf	___fldiv@aexp^0,w,c
  7529  002812  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7530  002816  6A18               	clrf	(??___fldiv+1)^0,c
  7531  002818  5E17               	subwf	??___fldiv^0,f,c
  7532  00281A  0E00               	movlw	0
  7533  00281C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7534  00281E  0E7F               	movlw	127
  7535  002820  2417               	addwf	??___fldiv^0,w,c
  7536  002822  6E20               	movwf	___fldiv@new_exp^0,c
  7537  002824  0E00               	movlw	0
  7538  002826  2018               	addwfc	(??___fldiv+1)^0,w,c
  7539  002828  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7540  00282A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7541  00282E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7542  002832  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7543  002836  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7544  00283A  0E00               	movlw	0
  7545  00283C  6E0F               	movwf	___fldiv@b^0,c
  7546  00283E  0E00               	movlw	0
  7547  002840  6E10               	movwf	(___fldiv@b+1)^0,c
  7548  002842  0E00               	movlw	0
  7549  002844  6E11               	movwf	(___fldiv@b+2)^0,c
  7550  002846  0E00               	movlw	0
  7551  002848  6E12               	movwf	(___fldiv@b+3)^0,c
  7552  00284A  0E00               	movlw	0
  7553  00284C  6E22               	movwf	___fldiv@grs^0,c
  7554  00284E  0E00               	movlw	0
  7555  002850  6E23               	movwf	(___fldiv@grs+1)^0,c
  7556  002852  0E00               	movlw	0
  7557  002854  6E24               	movwf	(___fldiv@grs+2)^0,c
  7558  002856  0E00               	movlw	0
  7559  002858  6E25               	movwf	(___fldiv@grs+3)^0,c
  7560  00285A  0E00               	movlw	0
  7561  00285C  6E27               	movwf	___fldiv@aexp^0,c
  7562  00285E  EF69  F014         	goto	l1377
  7563  002862                     l4789:
  7564  002862  5027               	movf	___fldiv@aexp^0,w,c
  7565  002864  B4D8               	btfsc	status,2,c
  7566  002866  EF37  F014         	goto	u4861
  7567  00286A  EF39  F014         	goto	u4860
  7568  00286E                     u4861:
  7569  00286E  EF50  F014         	goto	l4797
  7570  002872                     u4860:
  7571  002872  90D8               	bcf	status,0,c
  7572  002874  361B               	rlcf	___fldiv@rem^0,f,c
  7573  002876  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7574  002878  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7575  00287A  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7576  00287C  90D8               	bcf	status,0,c
  7577  00287E  360F               	rlcf	___fldiv@b^0,f,c
  7578  002880  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7579  002882  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7580  002884  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7581  002886  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7582  002888  EF48  F014         	goto	u4871
  7583  00288C  EF4A  F014         	goto	u4870
  7584  002890                     u4871:
  7585  002890  EF4B  F014         	goto	l1380
  7586  002894                     u4870:
  7587  002894  800F               	bsf	___fldiv@b^0,0,c
  7588  002896                     l1380:
  7589  002896  90D8               	bcf	status,0,c
  7590  002898  3622               	rlcf	___fldiv@grs^0,f,c
  7591  00289A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7592  00289C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7593  00289E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7594  0028A0                     l4797:
  7595  0028A0  5013               	movf	___fldiv@a^0,w,c
  7596  0028A2  5C1B               	subwf	___fldiv@rem^0,w,c
  7597  0028A4  5014               	movf	(___fldiv@a+1)^0,w,c
  7598  0028A6  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7599  0028A8  5015               	movf	(___fldiv@a+2)^0,w,c
  7600  0028AA  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7601  0028AC  5016               	movf	(___fldiv@a+3)^0,w,c
  7602  0028AE  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7603  0028B0  A0D8               	btfss	status,0,c
  7604  0028B2  EF5D  F014         	goto	u4881
  7605  0028B6  EF5F  F014         	goto	u4880
  7606  0028BA                     u4881:
  7607  0028BA  EF68  F014         	goto	l4803
  7608  0028BE                     u4880:
  7609  0028BE  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7610  0028C0  5013               	movf	___fldiv@a^0,w,c
  7611  0028C2  5E1B               	subwf	___fldiv@rem^0,f,c
  7612  0028C4  5014               	movf	(___fldiv@a+1)^0,w,c
  7613  0028C6  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7614  0028C8  5015               	movf	(___fldiv@a+2)^0,w,c
  7615  0028CA  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7616  0028CC  5016               	movf	(___fldiv@a+3)^0,w,c
  7617  0028CE  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7618  0028D0                     l4803:
  7619  0028D0  2A27               	incf	___fldiv@aexp^0,f,c
  7620  0028D2                     l1377:
  7621  0028D2  0E19               	movlw	25
  7622  0028D4  6427               	cpfsgt	___fldiv@aexp^0,c
  7623  0028D6  EF6F  F014         	goto	u4891
  7624  0028DA  EF71  F014         	goto	u4890
  7625  0028DE                     u4891:
  7626  0028DE  EF31  F014         	goto	l4789
  7627  0028E2                     u4890:
  7628  0028E2  501B               	movf	___fldiv@rem^0,w,c
  7629  0028E4  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7630  0028E6  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7631  0028E8  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7632  0028EA  B4D8               	btfsc	status,2,c
  7633  0028EC  EF7A  F014         	goto	u4901
  7634  0028F0  EF7C  F014         	goto	u4900
  7635  0028F4                     u4901:
  7636  0028F4  EF94  F014         	goto	l4815
  7637  0028F8                     u4900:
  7638  0028F8  8022               	bsf	___fldiv@grs^0,0,c
  7639  0028FA  EF94  F014         	goto	l4815
  7640  0028FE                     l4809:
  7641  0028FE  90D8               	bcf	status,0,c
  7642  002900  360F               	rlcf	___fldiv@b^0,f,c
  7643  002902  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7644  002904  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7645  002906  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7646  002908  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7647  00290A  EF89  F014         	goto	u4911
  7648  00290E  EF8B  F014         	goto	u4910
  7649  002912                     u4911:
  7650  002912  EF8C  F014         	goto	l1386
  7651  002916                     u4910:
  7652  002916  800F               	bsf	___fldiv@b^0,0,c
  7653  002918                     l1386:
  7654  002918  90D8               	bcf	status,0,c
  7655  00291A  3622               	rlcf	___fldiv@grs^0,f,c
  7656  00291C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7657  00291E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7658  002920  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7659  002922  0620               	decf	___fldiv@new_exp^0,f,c
  7660  002924  A0D8               	btfss	status,0,c
  7661  002926  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7662  002928                     l4815:
  7663  002928  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7664  00292A  EF99  F014         	goto	u4921
  7665  00292E  EF9B  F014         	goto	u4920
  7666  002932                     u4921:
  7667  002932  EF7F  F014         	goto	l4809
  7668  002936                     u4920:
  7669  002936  0E00               	movlw	0
  7670  002938  6E27               	movwf	___fldiv@aexp^0,c
  7671  00293A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7672  00293C  EFA2  F014         	goto	u4931
  7673  002940  EFA4  F014         	goto	u4930
  7674  002944                     u4931:
  7675  002944  EFC8  F014         	goto	l1388
  7676  002948                     u4930:
  7677  002948  0EFF               	movlw	255
  7678  00294A  1422               	andwf	___fldiv@grs^0,w,c
  7679  00294C  6E17               	movwf	??___fldiv^0,c
  7680  00294E  0EFF               	movlw	255
  7681  002950  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7682  002952  6E18               	movwf	(??___fldiv+1)^0,c
  7683  002954  0EFF               	movlw	255
  7684  002956  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7685  002958  6E19               	movwf	(??___fldiv+2)^0,c
  7686  00295A  0E7F               	movlw	127
  7687  00295C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7688  00295E  6E1A               	movwf	(??___fldiv+3)^0,c
  7689  002960  5017               	movf	??___fldiv^0,w,c
  7690  002962  1018               	iorwf	(??___fldiv+1)^0,w,c
  7691  002964  1019               	iorwf	(??___fldiv+2)^0,w,c
  7692  002966  101A               	iorwf	(??___fldiv+3)^0,w,c
  7693  002968  B4D8               	btfsc	status,2,c
  7694  00296A  EFB9  F014         	goto	u4941
  7695  00296E  EFBB  F014         	goto	u4940
  7696  002972                     u4941:
  7697  002972  EFBF  F014         	goto	l1389
  7698  002976                     u4940:
  7699  002976                     l4823:
  7700  002976  0E01               	movlw	1
  7701  002978  6E27               	movwf	___fldiv@aexp^0,c
  7702  00297A  EFC8  F014         	goto	l1388
  7703  00297E                     l1389:
  7704  00297E  A00F               	btfss	___fldiv@b^0,0,c
  7705  002980  EFC4  F014         	goto	u4951
  7706  002984  EFC6  F014         	goto	u4950
  7707  002988                     u4951:
  7708  002988  EFC8  F014         	goto	l1388
  7709  00298C                     u4950:
  7710  00298C  EFBB  F014         	goto	l4823
  7711  002990                     l1388:
  7712  002990  5027               	movf	___fldiv@aexp^0,w,c
  7713  002992  B4D8               	btfsc	status,2,c
  7714  002994  EFCE  F014         	goto	u4961
  7715  002998  EFD0  F014         	goto	u4960
  7716  00299C                     u4961:
  7717  00299C  EFF4  F014         	goto	l4835
  7718  0029A0                     u4960:
  7719  0029A0  0E01               	movlw	1
  7720  0029A2  260F               	addwf	___fldiv@b^0,f,c
  7721  0029A4  0E00               	movlw	0
  7722  0029A6  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7723  0029A8  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7724  0029AA  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7725  0029AC  A012               	btfss	(___fldiv@b+3)^0,0,c
  7726  0029AE  EFDB  F014         	goto	u4971
  7727  0029B2  EFDD  F014         	goto	u4970
  7728  0029B6                     u4971:
  7729  0029B6  EFF4  F014         	goto	l4835
  7730  0029BA                     u4970:
  7731  0029BA  C00F  F017         	movff	___fldiv@b,??___fldiv
  7732  0029BE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7733  0029C2  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7734  0029C6  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7735  0029CA  341A               	rlcf	(??___fldiv+3)^0,w,c
  7736  0029CC  321A               	rrcf	(??___fldiv+3)^0,f,c
  7737  0029CE  3219               	rrcf	(??___fldiv+2)^0,f,c
  7738  0029D0  3218               	rrcf	(??___fldiv+1)^0,f,c
  7739  0029D2  3217               	rrcf	??___fldiv^0,f,c
  7740  0029D4  C017  F00F         	movff	??___fldiv,___fldiv@b
  7741  0029D8  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7742  0029DC  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7743  0029E0  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7744  0029E4  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7745  0029E6  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7746  0029E8                     l4835:
  7747  0029E8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7748  0029EA  EFFF  F014         	goto	u4981
  7749  0029EE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7750  0029F0  E108               	bnz	u4980
  7751  0029F2  2820               	incf	___fldiv@new_exp^0,w,c
  7752  0029F4  A0D8               	btfss	status,0,c
  7753  0029F6  EFFF  F014         	goto	u4981
  7754  0029FA  EF01  F015         	goto	u4980
  7755  0029FE                     u4981:
  7756  0029FE  EF0C  F015         	goto	l4839
  7757  002A02                     u4980:
  7758  002A02  0E00               	movlw	0
  7759  002A04  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7760  002A06  6820               	setf	___fldiv@new_exp^0,c
  7761  002A08  0E00               	movlw	0
  7762  002A0A  6E0F               	movwf	___fldiv@b^0,c
  7763  002A0C  0E00               	movlw	0
  7764  002A0E  6E10               	movwf	(___fldiv@b+1)^0,c
  7765  002A10  0E00               	movlw	0
  7766  002A12  6E11               	movwf	(___fldiv@b+2)^0,c
  7767  002A14  0E00               	movlw	0
  7768  002A16  6E12               	movwf	(___fldiv@b+3)^0,c
  7769  002A18                     l4839:
  7770  002A18  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7771  002A1A  EF19  F015         	goto	u4990
  7772  002A1E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7773  002A20  E106               	bnz	u4991
  7774  002A22  0420               	decf	___fldiv@new_exp^0,w,c
  7775  002A24  B0D8               	btfsc	status,0,c
  7776  002A26  EF17  F015         	goto	u4991
  7777  002A2A  EF19  F015         	goto	u4990
  7778  002A2E                     u4991:
  7779  002A2E  EF27  F015         	goto	l4843
  7780  002A32                     u4990:
  7781  002A32  0E00               	movlw	0
  7782  002A34  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7783  002A36  0E00               	movlw	0
  7784  002A38  6E20               	movwf	___fldiv@new_exp^0,c
  7785  002A3A  0E00               	movlw	0
  7786  002A3C  6E0F               	movwf	___fldiv@b^0,c
  7787  002A3E  0E00               	movlw	0
  7788  002A40  6E10               	movwf	(___fldiv@b+1)^0,c
  7789  002A42  0E00               	movlw	0
  7790  002A44  6E11               	movwf	(___fldiv@b+2)^0,c
  7791  002A46  0E00               	movlw	0
  7792  002A48  6E12               	movwf	(___fldiv@b+3)^0,c
  7793  002A4A  0E00               	movlw	0
  7794  002A4C  6E1F               	movwf	___fldiv@sign^0,c
  7795  002A4E                     l4843:
  7796  002A4E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7797  002A52  A026               	btfss	___fldiv@bexp^0,0,c
  7798  002A54  EF2E  F015         	goto	u5001
  7799  002A58  EF30  F015         	goto	u5000
  7800  002A5C                     u5001:
  7801  002A5C  EF33  F015         	goto	l4849
  7802  002A60                     u5000:
  7803  002A60  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7804  002A62  EF34  F015         	goto	l4851
  7805  002A66                     l4849:
  7806  002A66  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7807  002A68                     l4851:
  7808  002A68  90D8               	bcf	status,0,c
  7809  002A6A  3026               	rrcf	___fldiv@bexp^0,w,c
  7810  002A6C  6E12               	movwf	(___fldiv@b+3)^0,c
  7811  002A6E  EFEA  F013         	goto	l4765
  7812  002A72                     l1375:
  7813  002A72  0012               	return		;funcret
  7814  002A74                     __end_of___fldiv:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function _LED_C *****************
  7818 ;; Defined at:
  7819 ;;		line 173 in file "color.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;		None
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;		None
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  1    wreg      void 
  7826 ;; Registers used:
  7827 ;;		wreg
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7837 ;;Total ram usage:        2 bytes
  7838 ;; Hardware stack levels used: 1
  7839 ;; Hardware stack levels required when called: 1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_color_data_collection
  7844 ;;		_calibrate_white
  7845 ;;		_amb_light_measure
  7846 ;;		_distance_measure
  7847 ;;		_test_function
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text31
  7852  005884                     __ptext31:
  7853                           	callstack 0
  7854  005884                     _LED_C:
  7855                           	callstack 27
  7856  005884                     
  7857                           ;color.c: 175:     LATGbits.LATG1 = 1;
  7858  005884  827F               	bsf	127,1,c	;volatile
  7859                           
  7860                           ;color.c: 176:     LATFbits.LATF7 = 1;
  7861  005886  8E7E               	bsf	126,7,c	;volatile
  7862                           
  7863                           ;color.c: 177:     LATAbits.LATA4 = 1;
  7864  005888  8879               	bsf	121,4,c	;volatile
  7865  00588A                     
  7866                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7867  00588A  0E11               	movlw	17
  7868  00588C  6E02               	movwf	(??_LED_C+1)^0,c
  7869  00588E  0E3C               	movlw	60
  7870  005890  6E01               	movwf	??_LED_C^0,c
  7871  005892  0ECB               	movlw	203
  7872  005894                     u6007:
  7873  005894  2EE8               	decfsz	wreg,f,c
  7874  005896  D7FE               	bra	u6007
  7875  005898  2E01               	decfsz	??_LED_C^0,f,c
  7876  00589A  D7FC               	bra	u6007
  7877  00589C  2E02               	decfsz	(??_LED_C+1)^0,f,c
  7878  00589E  D7FA               	bra	u6007
  7879  0058A0  F000               	nop	
  7880  0058A2  0012               	return		;funcret
  7881  0058A4                     __end_of_LED_C:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _short_burst_back *****************
  7885 ;; Defined at:
  7886 ;;		line 10 in file "movement.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7889 ;;		 -> main@motorL(10), 
  7890 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7891 ;;		 -> main@motorR(10), 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;		None
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  1    wreg      void 
  7896 ;; Registers used:
  7897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;Total ram usage:        6 bytes
  7908 ;; Hardware stack levels used: 1
  7909 ;; Hardware stack levels required when called: 4
  7910 ;; This function calls:
  7911 ;;		_fullSpeedAhead
  7912 ;; This function is called by:
  7913 ;;		_main
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text32
  7918  005760                     __ptext32:
  7919                           	callstack 0
  7920  005760                     _short_burst_back:
  7921                           	callstack 26
  7922  005760                     
  7923                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  7924  005760  C01F  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
  7925  005764  C020  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
  7926  005768  C021  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
  7927  00576C  C022  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
  7928  005770  ECC0  F027         	call	_fullSpeedAhead	;wreg free
  7929  005774                     
  7930                           ;movement.c: 13:     _delay((unsigned long)((600)*(64000000/4000.0)));
  7931  005774  0E31               	movlw	49
  7932  005776  6E24               	movwf	(??_short_burst_back+1)^0,c
  7933  005778  0EB4               	movlw	180
  7934  00577A  6E23               	movwf	??_short_burst_back^0,c
  7935  00577C  0E66               	movlw	102
  7936  00577E                     u6017:
  7937  00577E  2EE8               	decfsz	wreg,f,c
  7938  005780  D7FE               	bra	u6017
  7939  005782  2E23               	decfsz	??_short_burst_back^0,f,c
  7940  005784  D7FC               	bra	u6017
  7941  005786  2E24               	decfsz	(??_short_burst_back+1)^0,f,c
  7942  005788  D7FA               	bra	u6017
  7943  00578A  0012               	return		;funcret
  7944  00578C                     __end_of_short_burst_back:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _pin_init *****************
  7948 ;; Defined at:
  7949 ;;		line 100 in file "movement.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		None
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_main
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text33
  7978  0058A4                     __ptext33:
  7979                           	callstack 0
  7980  0058A4                     _pin_init:
  7981                           	callstack 29
  7982  0058A4  8486               	bsf	134,2,c	;volatile
  7983                           
  7984                           ;movement.c: 102:     ANSELFbits.ANSELF2=0;
  7985  0058A6  010E               	movlb	14	; () banked
  7986  0058A8  95B4               	bcf	180,2,b	;volatile
  7987                           
  7988                           ;movement.c: 103:     TRISFbits.TRISF3=1;
  7989  0058AA  8686               	bsf	134,3,c	;volatile
  7990                           
  7991                           ;movement.c: 104:     ANSELFbits.ANSELF3=0;
  7992  0058AC  97B4               	bcf	180,3,b	;volatile
  7993                           
  7994                           ;movement.c: 109:     TRISGbits.TRISG1 = 0;
  7995  0058AE  9287               	bcf	135,1,c	;volatile
  7996                           
  7997                           ;movement.c: 110:     TRISFbits.TRISF7 = 0;
  7998  0058B0  9E86               	bcf	134,7,c	;volatile
  7999                           
  8000                           ;movement.c: 111:     TRISAbits.TRISA4 = 0;
  8001  0058B2  9881               	bcf	129,4,c	;volatile
  8002                           
  8003                           ;movement.c: 112:     LATGbits.LATG1 = 1;
  8004  0058B4  827F               	bsf	127,1,c	;volatile
  8005                           
  8006                           ;movement.c: 113:     LATFbits.LATF7 = 1;
  8007  0058B6  8E7E               	bsf	126,7,c	;volatile
  8008                           
  8009                           ;movement.c: 114:     LATAbits.LATA4 = 1;
  8010  0058B8  8879               	bsf	121,4,c	;volatile
  8011                           
  8012                           ;movement.c: 117:     TRISDbits.TRISD7 = 0;
  8013  0058BA  9E84               	bcf	132,7,c	;volatile
  8014                           
  8015                           ;movement.c: 118:     LATDbits.LATD7 = 0;
  8016  0058BC  9E7C               	bcf	124,7,c	;volatile
  8017                           
  8018                           ;movement.c: 119:     TRISHbits.TRISH3 = 0;
  8019  0058BE  9688               	bcf	136,3,c	;volatile
  8020                           
  8021                           ;movement.c: 120:     LATHbits.LATH3 = 0;
  8022  0058C0  9680               	bcf	128,3,c	;volatile
  8023  0058C2                     
  8024                           ; BSR set to: 14
  8025  0058C2  0012               	return		;funcret
  8026  0058C4                     __end_of_pin_init:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _initUSART4 *****************
  8030 ;; Defined at:
  8031 ;;		line 4 in file "serial.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 1
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text34
  8060  0058E4                     __ptext34:
  8061                           	callstack 0
  8062  0058E4                     _initUSART4:
  8063                           	callstack 29
  8064  0058E4                     
  8065                           ;serial.c: 8:     RC0PPS = 0x12;
  8066  0058E4  0E12               	movlw	18
  8067  0058E6  010E               	movlb	14	; () banked
  8068  0058E8  6F62               	movwf	98,b	;volatile
  8069                           
  8070                           ;serial.c: 9:     RX4PPS = 0x11;
  8071  0058EA  0E11               	movlw	17
  8072  0058EC  6F15               	movwf	21,b	;volatile
  8073  0058EE                     
  8074                           ; BSR set to: 14
  8075                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8076  0058EE  97E9               	bcf	233,3,b	;volatile
  8077  0058F0                     
  8078                           ; BSR set to: 14
  8079                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8080  0058F0  95E8               	bcf	232,2,b	;volatile
  8081                           
  8082                           ;serial.c: 13:     SP4BRGL = 51;
  8083  0058F2  0E33               	movlw	51
  8084  0058F4  6FE5               	movwf	229,b	;volatile
  8085                           
  8086                           ;serial.c: 15:     SP4BRGH = 0;
  8087  0058F6  0E00               	movlw	0
  8088  0058F8  6FE6               	movwf	230,b	;volatile
  8089  0058FA                     
  8090                           ; BSR set to: 14
  8091                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8092  0058FA  89E7               	bsf	231,4,b	;volatile
  8093  0058FC                     
  8094                           ; BSR set to: 14
  8095                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8096  0058FC  8BE8               	bsf	232,5,b	;volatile
  8097  0058FE                     
  8098                           ; BSR set to: 14
  8099                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8100  0058FE  8FE7               	bsf	231,7,b	;volatile
  8101  005900                     
  8102                           ; BSR set to: 14
  8103  005900  0012               	return		;funcret
  8104  005902                     __end_of_initUSART4:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function _initDCmotors_parameter *****************
  8108 ;; Defined at:
  8109 ;;		line 40 in file "dc_motor.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8112 ;;		 -> main@motorL(10), 
  8113 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8114 ;;		 -> main@motorR(10), 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8130 ;;Total ram usage:        4 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; Hardware stack levels required when called: 1
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_main
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text35
  8141  004A18                     __ptext35:
  8142                           	callstack 0
  8143  004A18                     _initDCmotors_parameter:
  8144                           	callstack 29
  8145  004A18                     
  8146                           ;dc_motor.c: 42:     motorL->power = 0;
  8147  004A18  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8148  004A1C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8149  004A20  0E00               	movlw	0
  8150  004A22  6EDF               	movwf	indf2,c
  8151  004A24                     
  8152                           ;dc_motor.c: 43:     motorL->direction = 1;
  8153  004A24  EE20 F001          	lfsr	2,1
  8154  004A28  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8155  004A2A  26D9               	addwf	fsr2l,f,c
  8156  004A2C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8157  004A2E  22DA               	addwfc	fsr2h,f,c
  8158  004A30  0E01               	movlw	1
  8159  004A32  6EDF               	movwf	indf2,c
  8160  004A34                     
  8161                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8162  004A34  EE20 F002          	lfsr	2,2
  8163  004A38  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8164  004A3A  26D9               	addwf	fsr2l,f,c
  8165  004A3C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8166  004A3E  22DA               	addwfc	fsr2h,f,c
  8167  004A40  0EA3               	movlw	163
  8168  004A42  6EDE               	movwf	postinc2,c
  8169  004A44  0E0F               	movlw	15
  8170  004A46  6EDD               	movwf	postdec2,c
  8171  004A48                     
  8172                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8173  004A48  EE20 F004          	lfsr	2,4
  8174  004A4C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8175  004A4E  26D9               	addwf	fsr2l,f,c
  8176  004A50  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8177  004A52  22DA               	addwfc	fsr2h,f,c
  8178  004A54  0E7D               	movlw	125
  8179  004A56  6EDE               	movwf	postinc2,c
  8180  004A58  0E0F               	movlw	15
  8181  004A5A  6EDD               	movwf	postdec2,c
  8182  004A5C                     
  8183                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8184  004A5C  EE20 F006          	lfsr	2,6
  8185  004A60  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8186  004A62  26D9               	addwf	fsr2l,f,c
  8187  004A64  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8188  004A66  22DA               	addwfc	fsr2h,f,c
  8189  004A68  0E04               	movlw	4
  8190  004A6A  6EDF               	movwf	indf2,c
  8191  004A6C                     
  8192                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8193  004A6C  EE20 F007          	lfsr	2,7
  8194  004A70  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8195  004A72  26D9               	addwf	fsr2l,f,c
  8196  004A74  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8197  004A76  22DA               	addwfc	fsr2h,f,c
  8198  004A78  0EC7               	movlw	199
  8199  004A7A  6EDE               	movwf	postinc2,c
  8200  004A7C  0E00               	movlw	0
  8201  004A7E  6EDD               	movwf	postdec2,c
  8202  004A80                     
  8203                           ;dc_motor.c: 50:     motorR->power = 0;
  8204  004A80  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8205  004A84  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8206  004A88  0E00               	movlw	0
  8207  004A8A  6EDF               	movwf	indf2,c
  8208                           
  8209                           ;dc_motor.c: 51:     motorR->direction = 1;
  8210  004A8C  EE20 F001          	lfsr	2,1
  8211  004A90  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8212  004A92  26D9               	addwf	fsr2l,f,c
  8213  004A94  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8214  004A96  22DA               	addwfc	fsr2h,f,c
  8215  004A98  0E01               	movlw	1
  8216  004A9A  6EDF               	movwf	indf2,c
  8217                           
  8218                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8219  004A9C  EE20 F002          	lfsr	2,2
  8220  004AA0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8221  004AA2  26D9               	addwf	fsr2l,f,c
  8222  004AA4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8223  004AA6  22DA               	addwfc	fsr2h,f,c
  8224  004AA8  0EA0               	movlw	160
  8225  004AAA  6EDE               	movwf	postinc2,c
  8226  004AAC  0E0F               	movlw	15
  8227  004AAE  6EDD               	movwf	postdec2,c
  8228                           
  8229                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8230  004AB0  EE20 F004          	lfsr	2,4
  8231  004AB4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8232  004AB6  26D9               	addwf	fsr2l,f,c
  8233  004AB8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8234  004ABA  22DA               	addwfc	fsr2h,f,c
  8235  004ABC  0E7F               	movlw	127
  8236  004ABE  6EDE               	movwf	postinc2,c
  8237  004AC0  0E0F               	movlw	15
  8238  004AC2  6EDD               	movwf	postdec2,c
  8239                           
  8240                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8241  004AC4  EE20 F006          	lfsr	2,6
  8242  004AC8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8243  004ACA  26D9               	addwf	fsr2l,f,c
  8244  004ACC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8245  004ACE  22DA               	addwfc	fsr2h,f,c
  8246  004AD0  0E06               	movlw	6
  8247  004AD2  6EDF               	movwf	indf2,c
  8248                           
  8249                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8250  004AD4  EE20 F007          	lfsr	2,7
  8251  004AD8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8252  004ADA  26D9               	addwf	fsr2l,f,c
  8253  004ADC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8254  004ADE  22DA               	addwfc	fsr2h,f,c
  8255  004AE0  0EC7               	movlw	199
  8256  004AE2  6EDE               	movwf	postinc2,c
  8257  004AE4  0E00               	movlw	0
  8258  004AE6  6EDD               	movwf	postdec2,c
  8259  004AE8  0012               	return		;funcret
  8260  004AEA                     __end_of_initDCmotors_parameter:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _initDCmotorsPWM *****************
  8264 ;; Defined at:
  8265 ;;		line 10 in file "dc_motor.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  PWMperiod       2    0[COMRAM] int 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;Total ram usage:        2 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 1
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text36
  8294  0054EA                     __ptext36:
  8295                           	callstack 0
  8296  0054EA                     _initDCmotorsPWM:
  8297                           	callstack 29
  8298  0054EA                     
  8299                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8300  0054EA  9485               	bcf	133,2,c	;volatile
  8301                           
  8302                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8303  0054EC  9E83               	bcf	131,7,c	;volatile
  8304                           
  8305                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8306  0054EE  9C87               	bcf	135,6,c	;volatile
  8307                           
  8308                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8309  0054F0  9885               	bcf	133,4,c	;volatile
  8310                           
  8311                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8312  0054F2  947D               	bcf	125,2,c	;volatile
  8313                           
  8314                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8315  0054F4  9E7B               	bcf	123,7,c	;volatile
  8316                           
  8317                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8318  0054F6  9C7F               	bcf	127,6,c	;volatile
  8319                           
  8320                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8321  0054F8  987D               	bcf	125,4,c	;volatile
  8322  0054FA                     
  8323                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8324  0054FA  50BD               	movf	189,w,c	;volatile
  8325  0054FC  0B8F               	andlw	-113
  8326  0054FE  0930               	iorlw	48
  8327  005500  6EBD               	movwf	189,c	;volatile
  8328                           
  8329                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8330  005502  0EE0               	movlw	-32
  8331  005504  16BE               	andwf	190,f,c	;volatile
  8332                           
  8333                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8334  005506  50BF               	movf	191,w,c	;volatile
  8335  005508  0BF0               	andlw	-16
  8336  00550A  0901               	iorlw	1
  8337  00550C  6EBF               	movwf	191,c	;volatile
  8338                           
  8339                           ;dc_motor.c: 28:     T2PR=200-1;
  8340  00550E  0EC7               	movlw	199
  8341  005510  6EBC               	movwf	188,c	;volatile
  8342  005512                     
  8343                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8344  005512  8EBD               	bsf	189,7,c	;volatile
  8345                           
  8346                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8347  005514  0E0A               	movlw	10
  8348  005516  010E               	movlb	14	; () banked
  8349  005518  6F74               	movwf	116,b	;volatile
  8350                           
  8351                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8352  00551A  0E0B               	movlw	11
  8353  00551C  6F69               	movwf	105,b	;volatile
  8354                           
  8355                           ;dc_motor.c: 34:     PWM6DCH=0;
  8356  00551E  0E00               	movlw	0
  8357  005520  6EA3               	movwf	163,c	;volatile
  8358                           
  8359                           ;dc_motor.c: 35:     PWM7DCH=0;
  8360  005522  0E00               	movlw	0
  8361  005524  6EA0               	movwf	160,c	;volatile
  8362  005526                     
  8363                           ; BSR set to: 14
  8364                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8365  005526  8EA4               	bsf	164,7,c	;volatile
  8366  005528                     
  8367                           ; BSR set to: 14
  8368                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8369  005528  8EA1               	bsf	161,7,c	;volatile
  8370  00552A                     
  8371                           ; BSR set to: 14
  8372  00552A  0012               	return		;funcret
  8373  00552C                     __end_of_initDCmotorsPWM:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function _color_click_init *****************
  8377 ;; Defined at:
  8378 ;;		line 67 in file "color.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;Total ram usage:        1 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 4
  8399 ;; This function calls:
  8400 ;;		_I2C_2_Master_Init
  8401 ;;		_color_writetoaddr
  8402 ;; This function is called by:
  8403 ;;		_main
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text37
  8408  0056CE                     __ptext37:
  8409                           	callstack 0
  8410  0056CE                     _color_click_init:
  8411                           	callstack 26
  8412  0056CE                     
  8413                           ;color.c: 70:     I2C_2_Master_Init();
  8414  0056CE  ECC6  F02B         	call	_I2C_2_Master_Init	;wreg free
  8415  0056D2                     
  8416                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8417  0056D2  0E01               	movlw	1
  8418  0056D4  6E03               	movwf	color_writetoaddr@value^0,c
  8419  0056D6  0E00               	movlw	0
  8420  0056D8  EC62  F02C         	call	_color_writetoaddr
  8421  0056DC                     
  8422                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8423  0056DC  0E3F               	movlw	63
  8424  0056DE  6E05               	movwf	??_color_click_init^0,c
  8425  0056E0  0E55               	movlw	85
  8426  0056E2                     u6027:
  8427  0056E2  2EE8               	decfsz	wreg,f,c
  8428  0056E4  D7FE               	bra	u6027
  8429  0056E6  2E05               	decfsz	??_color_click_init^0,f,c
  8430  0056E8  D7FC               	bra	u6027
  8431  0056EA  F000               	nop	
  8432  0056EC                     
  8433                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8434  0056EC  0E03               	movlw	3
  8435  0056EE  6E03               	movwf	color_writetoaddr@value^0,c
  8436  0056F0  0E00               	movlw	0
  8437  0056F2  EC62  F02C         	call	_color_writetoaddr
  8438  0056F6                     
  8439                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8440  0056F6  0ED5               	movlw	213
  8441  0056F8  6E03               	movwf	color_writetoaddr@value^0,c
  8442  0056FA  0E01               	movlw	1
  8443  0056FC  EC62  F02C         	call	_color_writetoaddr
  8444  005700  0012               	return		;funcret
  8445  005702                     __end_of_color_click_init:
  8446                           	callstack 0
  8447                           
  8448 ;; *************** function _color_writetoaddr *****************
  8449 ;; Defined at:
  8450 ;;		line 83 in file "color.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  address         1    wreg     unsigned char 
  8453 ;;  value           1    2[COMRAM] unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  address         1    3[COMRAM] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8465 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;Total ram usage:        2 bytes
  8470 ;; Hardware stack levels used: 1
  8471 ;; Hardware stack levels required when called: 3
  8472 ;; This function calls:
  8473 ;;		_I2C_2_Master_Start
  8474 ;;		_I2C_2_Master_Stop
  8475 ;;		_I2C_2_Master_Write
  8476 ;; This function is called by:
  8477 ;;		_color_click_init
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text38
  8482  0058C4                     __ptext38:
  8483                           	callstack 0
  8484  0058C4                     _color_writetoaddr:
  8485                           	callstack 26
  8486                           
  8487                           ;incstack = 0
  8488                           ;color_writetoaddr@address stored from wreg
  8489  0058C4  6E04               	movwf	color_writetoaddr@address^0,c
  8490  0058C6                     
  8491                           ;color.c: 84:     I2C_2_Master_Start();
  8492  0058C6  ECBD  F02C         	call	_I2C_2_Master_Start	;wreg free
  8493                           
  8494                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8495  0058CA  0E52               	movlw	82
  8496  0058CC  ECA7  F02C         	call	_I2C_2_Master_Write
  8497                           
  8498                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8499  0058D0  5004               	movf	color_writetoaddr@address^0,w,c
  8500  0058D2  0980               	iorlw	128
  8501  0058D4  ECA7  F02C         	call	_I2C_2_Master_Write
  8502                           
  8503                           ;color.c: 87:     I2C_2_Master_Write(value);
  8504  0058D8  5003               	movf	color_writetoaddr@value^0,w,c
  8505  0058DA  ECA7  F02C         	call	_I2C_2_Master_Write
  8506                           
  8507                           ;color.c: 88:     I2C_2_Master_Stop();
  8508  0058DE  ECB8  F02C         	call	_I2C_2_Master_Stop	;wreg free
  8509  0058E2  0012               	return		;funcret
  8510  0058E4                     __end_of_color_writetoaddr:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _I2C_2_Master_Write *****************
  8514 ;; Defined at:
  8515 ;;		line 45 in file "i2c.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  data_byte       1    wreg     unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  data_byte       1    1[COMRAM] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;Total ram usage:        1 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 2
  8536 ;; This function calls:
  8537 ;;		_I2C_2_Master_Idle
  8538 ;; This function is called by:
  8539 ;;		_color_writetoaddr
  8540 ;;		_color_read_Red
  8541 ;;		_color_read_Blue
  8542 ;;		_color_read_Green
  8543 ;;		_color_read_Clear
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text39
  8548  00594E                     __ptext39:
  8549                           	callstack 0
  8550  00594E                     _I2C_2_Master_Write:
  8551                           	callstack 24
  8552                           
  8553                           ;incstack = 0
  8554                           ;I2C_2_Master_Write@data_byte stored from wreg
  8555  00594E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8556  005950                     
  8557                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8558  005950  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8559  005954                     
  8560                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8561  005954  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8562  005958  0012               	return		;funcret
  8563  00595A                     __end_of_I2C_2_Master_Write:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _I2C_2_Master_Stop *****************
  8567 ;; Defined at:
  8568 ;;		line 39 in file "i2c.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 2
  8589 ;; This function calls:
  8590 ;;		_I2C_2_Master_Idle
  8591 ;; This function is called by:
  8592 ;;		_color_writetoaddr
  8593 ;;		_color_read_Red
  8594 ;;		_color_read_Blue
  8595 ;;		_color_read_Green
  8596 ;;		_color_read_Clear
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text40
  8601  005970                     __ptext40:
  8602                           	callstack 0
  8603  005970                     _I2C_2_Master_Stop:
  8604                           	callstack 24
  8605  005970                     
  8606                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8607  005970  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8608  005974                     
  8609                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8610  005974  010E               	movlb	14	; () banked
  8611  005976  85DA               	bsf	218,2,b	;volatile
  8612  005978                     
  8613                           ; BSR set to: 14
  8614  005978  0012               	return		;funcret
  8615  00597A                     __end_of_I2C_2_Master_Stop:
  8616                           	callstack 0
  8617                           
  8618 ;; *************** function _I2C_2_Master_Start *****************
  8619 ;; Defined at:
  8620 ;;		line 27 in file "i2c.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, status,2, status,0, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used: 1
  8640 ;; Hardware stack levels required when called: 2
  8641 ;; This function calls:
  8642 ;;		_I2C_2_Master_Idle
  8643 ;; This function is called by:
  8644 ;;		_color_writetoaddr
  8645 ;;		_color_read_Red
  8646 ;;		_color_read_Blue
  8647 ;;		_color_read_Green
  8648 ;;		_color_read_Clear
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text41
  8653  00597A                     __ptext41:
  8654                           	callstack 0
  8655  00597A                     _I2C_2_Master_Start:
  8656                           	callstack 24
  8657  00597A                     
  8658                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8659  00597A  ECDB  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8660  00597E                     
  8661                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8662  00597E  010E               	movlb	14	; () banked
  8663  005980  81DA               	bsf	218,0,b	;volatile
  8664  005982                     
  8665                           ; BSR set to: 14
  8666  005982  0012               	return		;funcret
  8667  005984                     __end_of_I2C_2_Master_Start:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _I2C_2_Master_Idle *****************
  8671 ;; Defined at:
  8672 ;;		line 22 in file "i2c.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, status,0
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;Total ram usage:        1 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; Hardware stack levels required when called: 1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_I2C_2_Master_Start
  8697 ;;		_I2C_2_Master_RepStart
  8698 ;;		_I2C_2_Master_Stop
  8699 ;;		_I2C_2_Master_Write
  8700 ;;		_I2C_2_Master_Read
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text42
  8705  0057B6                     __ptext42:
  8706                           	callstack 0
  8707  0057B6                     _I2C_2_Master_Idle:
  8708                           	callstack 24
  8709  0057B6                     l206:
  8710  0057B6  010E               	movlb	14	; () banked
  8711  0057B8  B5D8               	btfsc	216,2,b	;volatile
  8712  0057BA  EFE1  F02B         	goto	u3331
  8713  0057BE  EFE3  F02B         	goto	u3330
  8714  0057C2                     u3331:
  8715  0057C2  EFDB  F02B         	goto	l206
  8716  0057C6                     u3330:
  8717  0057C6                     
  8718                           ; BSR set to: 14
  8719  0057C6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8720  0057CA  0E1F               	movlw	31
  8721  0057CC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8722  0057CE  A4D8               	btfss	status,2,c
  8723  0057D0  EFEC  F02B         	goto	u3341
  8724  0057D4  EFEE  F02B         	goto	u3340
  8725  0057D8                     u3341:
  8726  0057D8  EFDB  F02B         	goto	l206
  8727  0057DC                     u3340:
  8728  0057DC                     
  8729                           ; BSR set to: 14
  8730  0057DC  0012               	return		;funcret
  8731  0057DE                     __end_of_I2C_2_Master_Idle:
  8732                           	callstack 0
  8733                           
  8734 ;; *************** function _I2C_2_Master_Init *****************
  8735 ;; Defined at:
  8736 ;;		line 4 in file "i2c.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 1
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_color_click_init
  8761 ;;		_main
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text43
  8766  00578C                     __ptext43:
  8767                           	callstack 0
  8768  00578C                     _I2C_2_Master_Init:
  8769                           	callstack 28
  8770  00578C                     
  8771                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8772  00578C  010E               	movlb	14	; () banked
  8773  00578E  51D9               	movf	217,w,b	;volatile
  8774  005790  0BF0               	andlw	-16
  8775  005792  0908               	iorlw	8
  8776  005794  6FD9               	movwf	217,b	;volatile
  8777  005796                     
  8778                           ; BSR set to: 14
  8779                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8780  005796  8BD9               	bsf	217,5,b	;volatile
  8781                           
  8782                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8783  005798  0E9F               	movlw	159
  8784  00579A  6FD6               	movwf	214,b	;volatile
  8785  00579C                     
  8786                           ; BSR set to: 14
  8787                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8788  00579C  8A84               	bsf	132,5,c	;volatile
  8789  00579E                     
  8790                           ; BSR set to: 14
  8791                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8792  00579E  8C84               	bsf	132,6,c	;volatile
  8793  0057A0                     
  8794                           ; BSR set to: 14
  8795                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8796  0057A0  9BA7               	bcf	167,5,b	;volatile
  8797  0057A2                     
  8798                           ; BSR set to: 14
  8799                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8800  0057A2  9DA7               	bcf	167,6,b	;volatile
  8801                           
  8802                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8803  0057A4  0E1D               	movlw	29
  8804  0057A6  6F1D               	movwf	29,b	;volatile
  8805                           
  8806                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8807  0057A8  0E1E               	movlw	30
  8808  0057AA  6F1C               	movwf	28,b	;volatile
  8809                           
  8810                           ;i2c.c: 18:   RD5PPS=0x1C;
  8811  0057AC  0E1C               	movlw	28
  8812  0057AE  6F6F               	movwf	111,b	;volatile
  8813                           
  8814                           ;i2c.c: 19:   RD6PPS=0x1B;
  8815  0057B0  0E1B               	movlw	27
  8816  0057B2  6F70               	movwf	112,b	;volatile
  8817  0057B4                     
  8818                           ; BSR set to: 14
  8819  0057B4  0012               	return		;funcret
  8820  0057B6                     __end_of_I2C_2_Master_Init:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _buggylight_init *****************
  8824 ;; Defined at:
  8825 ;;		line 13 in file "color.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		None
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 1
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_main
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text44
  8854  005938                     __ptext44:
  8855                           	callstack 0
  8856  005938                     _buggylight_init:
  8857                           	callstack 29
  8858  005938                     
  8859                           ;color.c: 15:     TRISHbits.TRISH1=0;
  8860  005938  9288               	bcf	136,1,c	;volatile
  8861                           
  8862                           ;color.c: 16:     TRISDbits.TRISD4=0;
  8863  00593A  9884               	bcf	132,4,c	;volatile
  8864                           
  8865                           ;color.c: 17:     TRISDbits.TRISD3=0;
  8866  00593C  9684               	bcf	132,3,c	;volatile
  8867                           
  8868                           ;color.c: 18:     TRISFbits.TRISF0=0;
  8869  00593E  9086               	bcf	134,0,c	;volatile
  8870                           
  8871                           ;color.c: 19:     TRISHbits.TRISH0=0;
  8872  005940  9088               	bcf	136,0,c	;volatile
  8873                           
  8874                           ;color.c: 21:     LATHbits.LATH1 = 0;
  8875  005942  9280               	bcf	128,1,c	;volatile
  8876                           
  8877                           ;color.c: 22:     LATDbits.LATD4 = 0;
  8878  005944  987C               	bcf	124,4,c	;volatile
  8879                           
  8880                           ;color.c: 23:     LATDbits.LATD3 = 0;
  8881  005946  967C               	bcf	124,3,c	;volatile
  8882                           
  8883                           ;color.c: 24:     LATFbits.LATF0 = 0;
  8884  005948  907E               	bcf	126,0,c	;volatile
  8885                           
  8886                           ;color.c: 25:     LATHbits.LATH0 = 0;
  8887  00594A  9080               	bcf	128,0,c	;volatile
  8888  00594C  0012               	return		;funcret
  8889  00594E                     __end_of_buggylight_init:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function _action *****************
  8893 ;; Defined at:
  8894 ;;		line 19 in file "movement.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  color           1    wreg     unsigned char 
  8897 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  8898 ;;		 -> main@motorL(10), 
  8899 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  8900 ;;		 -> main@motorR(10), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  color           1  200[BANK2 ] unsigned char 
  8903 ;;  buf           100  100[BANK2 ] unsigned char [100]
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;      Locals:         0       0       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Totals:         0       4       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;Total ram usage:      105 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 11
  8920 ;; This function calls:
  8921 ;;		_goback
  8922 ;;		_reverse_square
  8923 ;;		_sendStringSerial4
  8924 ;;		_short_reverse
  8925 ;;		_sprintf
  8926 ;;		_toggle_light
  8927 ;;		_turnLeft
  8928 ;;		_turnRight
  8929 ;; This function is called by:
  8930 ;;		_main
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text45
  8935  002DD8                     __ptext45:
  8936                           	callstack 0
  8937  002DD8                     _action:
  8938                           	callstack 19
  8939                           
  8940                           ;incstack = 0
  8941                           ;action@color stored from wreg
  8942  002DD8  0102               	movlb	2	; () banked
  8943  002DDA  6FC8               	movwf	action@color& (0+255),b
  8944  002DDC                     
  8945                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: {;movement.c: 23:     if (color != 0){
  8946  002DDC  0102               	movlb	2	; () banked
  8947  002DDE  51C8               	movf	action@color& (0+255),w,b
  8948  002DE0  B4D8               	btfsc	status,2,c
  8949  002DE2  EFF5  F016         	goto	u5511
  8950  002DE6  EFF7  F016         	goto	u5510
  8951  002DEA                     u5511:
  8952  002DEA  EF6F  F018         	goto	l640
  8953  002DEE                     u5510:
  8954  002DEE                     
  8955                           ; BSR set to: 2
  8956                           ;movement.c: 25:         char buf[100];;movement.c: 26:         sprintf(buf,"result: %d\
      +                          r\n", color);
  8957  002DEE  0E64               	movlw	low action@buf
  8958  002DF0  0100               	movlb	0	; () banked
  8959  002DF2  6F60               	movwf	sprintf@s& (0+255),b
  8960  002DF4  0E02               	movlw	high action@buf
  8961  002DF6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  8962  002DF8  0E24               	movlw	low STR_3
  8963  002DFA  6F62               	movwf	sprintf@fmt& (0+255),b
  8964  002DFC  0E0E               	movlw	high STR_3
  8965  002DFE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  8966  002E00  C2C8  F064         	movff	action@color,?_sprintf+4
  8967  002E04  6B65               	clrf	(?_sprintf+5)& (0+255),b
  8968  002E06  EC46  F029         	call	_sprintf	;wreg free
  8969  002E0A                     
  8970                           ;movement.c: 27:         sendStringSerial4(buf);
  8971  002E0A  0E64               	movlw	low action@buf
  8972  002E0C  6E02               	movwf	sendStringSerial4@string^0,c
  8973  002E0E  0E02               	movlw	high action@buf
  8974  002E10  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  8975  002E12  EC81  F02B         	call	_sendStringSerial4	;wreg free
  8976  002E16                     
  8977                           ;movement.c: 28:         if (color == 1){
  8978  002E16  0102               	movlb	2	; () banked
  8979  002E18  05C8               	decf	action@color& (0+255),w,b
  8980  002E1A  A4D8               	btfss	status,2,c
  8981  002E1C  EF12  F017         	goto	u5521
  8982  002E20  EF14  F017         	goto	u5520
  8983  002E24                     u5521:
  8984  002E24  EF38  F017         	goto	l5463
  8985  002E28                     u5520:
  8986  002E28                     
  8987                           ; BSR set to: 2
  8988                           ;movement.c: 29:             short_reverse(mL,mR);
  8989  002E28  C0E0  F026         	movff	action@mL,short_reverse@mL
  8990  002E2C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8991  002E30  C0E2  F028         	movff	action@mR,short_reverse@mR
  8992  002E34  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8993  002E38  EC96  F02A         	call	_short_reverse	;wreg free
  8994                           
  8995                           ;movement.c: 30:             turnRight(mL,mR,90);
  8996  002E3C  C0E0  F020         	movff	action@mL,turnRight@mL
  8997  002E40  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  8998  002E44  C0E2  F022         	movff	action@mR,turnRight@mR
  8999  002E48  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9000  002E4C  0E5A               	movlw	90
  9001  002E4E  6E24               	movwf	turnRight@angle_right^0,c
  9002  002E50  ECA9  F01F         	call	_turnRight	;wreg free
  9003  002E54                     
  9004                           ;movement.c: 31:             memory[array_index] = 1;
  9005  002E54  0100               	movlb	0	; () banked
  9006  002E56  51F9               	movf	_array_index& (0+255),w,b
  9007  002E58  0D02               	mullw	2
  9008  002E5A  0E3C               	movlw	low _memory
  9009  002E5C  24F3               	addwf	243,w,c
  9010  002E5E  6ED9               	movwf	fsr2l,c
  9011  002E60  0E03               	movlw	high _memory
  9012  002E62  20F4               	addwfc	prodh,w,c
  9013  002E64  6EDA               	movwf	fsr2h,c
  9014  002E66  0E01               	movlw	1
  9015  002E68  6EDE               	movwf	postinc2,c
  9016  002E6A  0E00               	movlw	0
  9017  002E6C  6EDD               	movwf	postdec2,c
  9018  002E6E                     
  9019                           ; BSR set to: 0
  9020                           ;movement.c: 32:             array_index++;
  9021  002E6E  2BF9               	incf	_array_index& (0+255),f,b
  9022  002E70                     l5463:
  9023                           
  9024                           ;movement.c: 34:         if (color == 2){
  9025  002E70  0E02               	movlw	2
  9026  002E72  0102               	movlb	2	; () banked
  9027  002E74  19C8               	xorwf	action@color& (0+255),w,b
  9028  002E76  A4D8               	btfss	status,2,c
  9029  002E78  EF40  F017         	goto	u5531
  9030  002E7C  EF42  F017         	goto	u5530
  9031  002E80                     u5531:
  9032  002E80  EF66  F017         	goto	l5471
  9033  002E84                     u5530:
  9034  002E84                     
  9035                           ; BSR set to: 2
  9036                           ;movement.c: 35:             short_reverse(mL,mR);
  9037  002E84  C0E0  F026         	movff	action@mL,short_reverse@mL
  9038  002E88  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9039  002E8C  C0E2  F028         	movff	action@mR,short_reverse@mR
  9040  002E90  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9041  002E94  EC96  F02A         	call	_short_reverse	;wreg free
  9042                           
  9043                           ;movement.c: 36:             turnLeft(mL,mR,90);
  9044  002E98  C0E0  F020         	movff	action@mL,turnLeft@mL
  9045  002E9C  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9046  002EA0  C0E2  F022         	movff	action@mR,turnLeft@mR
  9047  002EA4  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9048  002EA8  0E5A               	movlw	90
  9049  002EAA  6E24               	movwf	turnLeft@angle_left^0,c
  9050  002EAC  EC70  F020         	call	_turnLeft	;wreg free
  9051  002EB0                     
  9052                           ;movement.c: 37:             memory[array_index] = 2;
  9053  002EB0  0100               	movlb	0	; () banked
  9054  002EB2  51F9               	movf	_array_index& (0+255),w,b
  9055  002EB4  0D02               	mullw	2
  9056  002EB6  0E3C               	movlw	low _memory
  9057  002EB8  24F3               	addwf	243,w,c
  9058  002EBA  6ED9               	movwf	fsr2l,c
  9059  002EBC  0E03               	movlw	high _memory
  9060  002EBE  20F4               	addwfc	prodh,w,c
  9061  002EC0  6EDA               	movwf	fsr2h,c
  9062  002EC2  0E02               	movlw	2
  9063  002EC4  6EDE               	movwf	postinc2,c
  9064  002EC6  0E00               	movlw	0
  9065  002EC8  6EDD               	movwf	postdec2,c
  9066  002ECA                     
  9067                           ; BSR set to: 0
  9068                           ;movement.c: 38:             array_index++;
  9069  002ECA  2BF9               	incf	_array_index& (0+255),f,b
  9070  002ECC                     l5471:
  9071                           
  9072                           ;movement.c: 40:         if (color == 3){
  9073  002ECC  0E03               	movlw	3
  9074  002ECE  0102               	movlb	2	; () banked
  9075  002ED0  19C8               	xorwf	action@color& (0+255),w,b
  9076  002ED2  A4D8               	btfss	status,2,c
  9077  002ED4  EF6E  F017         	goto	u5541
  9078  002ED8  EF70  F017         	goto	u5540
  9079  002EDC                     u5541:
  9080  002EDC  EF94  F017         	goto	l5479
  9081  002EE0                     u5540:
  9082  002EE0                     
  9083                           ; BSR set to: 2
  9084                           ;movement.c: 41:             short_reverse(mL,mR);
  9085  002EE0  C0E0  F026         	movff	action@mL,short_reverse@mL
  9086  002EE4  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9087  002EE8  C0E2  F028         	movff	action@mR,short_reverse@mR
  9088  002EEC  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9089  002EF0  EC96  F02A         	call	_short_reverse	;wreg free
  9090                           
  9091                           ;movement.c: 42:             turnLeft(mL,mR,180);
  9092  002EF4  C0E0  F020         	movff	action@mL,turnLeft@mL
  9093  002EF8  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9094  002EFC  C0E2  F022         	movff	action@mR,turnLeft@mR
  9095  002F00  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9096  002F04  0EB4               	movlw	180
  9097  002F06  6E24               	movwf	turnLeft@angle_left^0,c
  9098  002F08  EC70  F020         	call	_turnLeft	;wreg free
  9099  002F0C                     
  9100                           ;movement.c: 43:             memory[array_index] = 3;
  9101  002F0C  0100               	movlb	0	; () banked
  9102  002F0E  51F9               	movf	_array_index& (0+255),w,b
  9103  002F10  0D02               	mullw	2
  9104  002F12  0E3C               	movlw	low _memory
  9105  002F14  24F3               	addwf	243,w,c
  9106  002F16  6ED9               	movwf	fsr2l,c
  9107  002F18  0E03               	movlw	high _memory
  9108  002F1A  20F4               	addwfc	prodh,w,c
  9109  002F1C  6EDA               	movwf	fsr2h,c
  9110  002F1E  0E03               	movlw	3
  9111  002F20  6EDE               	movwf	postinc2,c
  9112  002F22  0E00               	movlw	0
  9113  002F24  6EDD               	movwf	postdec2,c
  9114  002F26                     
  9115                           ; BSR set to: 0
  9116                           ;movement.c: 44:             array_index++;
  9117  002F26  2BF9               	incf	_array_index& (0+255),f,b
  9118  002F28                     l5479:
  9119                           
  9120                           ;movement.c: 46:         if (color == 4){
  9121  002F28  0E04               	movlw	4
  9122  002F2A  0102               	movlb	2	; () banked
  9123  002F2C  19C8               	xorwf	action@color& (0+255),w,b
  9124  002F2E  A4D8               	btfss	status,2,c
  9125  002F30  EF9C  F017         	goto	u5551
  9126  002F34  EF9E  F017         	goto	u5550
  9127  002F38                     u5551:
  9128  002F38  EFC2  F017         	goto	l5487
  9129  002F3C                     u5550:
  9130  002F3C                     
  9131                           ; BSR set to: 2
  9132                           ;movement.c: 47:             reverse_square(mL,mR);
  9133  002F3C  C0E0  F026         	movff	action@mL,reverse_square@mL
  9134  002F40  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9135  002F44  C0E2  F028         	movff	action@mR,reverse_square@mR
  9136  002F48  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9137  002F4C  ECB6  F02A         	call	_reverse_square	;wreg free
  9138                           
  9139                           ;movement.c: 48:             turnRight(mL,mR,90);
  9140  002F50  C0E0  F020         	movff	action@mL,turnRight@mL
  9141  002F54  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9142  002F58  C0E2  F022         	movff	action@mR,turnRight@mR
  9143  002F5C  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9144  002F60  0E5A               	movlw	90
  9145  002F62  6E24               	movwf	turnRight@angle_right^0,c
  9146  002F64  ECA9  F01F         	call	_turnRight	;wreg free
  9147  002F68                     
  9148                           ;movement.c: 49:             memory[array_index] = 4;
  9149  002F68  0100               	movlb	0	; () banked
  9150  002F6A  51F9               	movf	_array_index& (0+255),w,b
  9151  002F6C  0D02               	mullw	2
  9152  002F6E  0E3C               	movlw	low _memory
  9153  002F70  24F3               	addwf	243,w,c
  9154  002F72  6ED9               	movwf	fsr2l,c
  9155  002F74  0E03               	movlw	high _memory
  9156  002F76  20F4               	addwfc	prodh,w,c
  9157  002F78  6EDA               	movwf	fsr2h,c
  9158  002F7A  0E04               	movlw	4
  9159  002F7C  6EDE               	movwf	postinc2,c
  9160  002F7E  0E00               	movlw	0
  9161  002F80  6EDD               	movwf	postdec2,c
  9162  002F82                     
  9163                           ; BSR set to: 0
  9164                           ;movement.c: 50:             array_index++;
  9165  002F82  2BF9               	incf	_array_index& (0+255),f,b
  9166  002F84                     l5487:
  9167                           
  9168                           ;movement.c: 52:         if (color == 5){
  9169  002F84  0E05               	movlw	5
  9170  002F86  0102               	movlb	2	; () banked
  9171  002F88  19C8               	xorwf	action@color& (0+255),w,b
  9172  002F8A  A4D8               	btfss	status,2,c
  9173  002F8C  EFCA  F017         	goto	u5561
  9174  002F90  EFCC  F017         	goto	u5560
  9175  002F94                     u5561:
  9176  002F94  EFF0  F017         	goto	l5495
  9177  002F98                     u5560:
  9178  002F98                     
  9179                           ; BSR set to: 2
  9180                           ;movement.c: 53:             reverse_square(mL,mR);
  9181  002F98  C0E0  F026         	movff	action@mL,reverse_square@mL
  9182  002F9C  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9183  002FA0  C0E2  F028         	movff	action@mR,reverse_square@mR
  9184  002FA4  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9185  002FA8  ECB6  F02A         	call	_reverse_square	;wreg free
  9186                           
  9187                           ;movement.c: 54:             turnLeft(mL,mR,90);
  9188  002FAC  C0E0  F020         	movff	action@mL,turnLeft@mL
  9189  002FB0  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9190  002FB4  C0E2  F022         	movff	action@mR,turnLeft@mR
  9191  002FB8  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9192  002FBC  0E5A               	movlw	90
  9193  002FBE  6E24               	movwf	turnLeft@angle_left^0,c
  9194  002FC0  EC70  F020         	call	_turnLeft	;wreg free
  9195  002FC4                     
  9196                           ;movement.c: 55:             memory[array_index] = 5;
  9197  002FC4  0100               	movlb	0	; () banked
  9198  002FC6  51F9               	movf	_array_index& (0+255),w,b
  9199  002FC8  0D02               	mullw	2
  9200  002FCA  0E3C               	movlw	low _memory
  9201  002FCC  24F3               	addwf	243,w,c
  9202  002FCE  6ED9               	movwf	fsr2l,c
  9203  002FD0  0E03               	movlw	high _memory
  9204  002FD2  20F4               	addwfc	prodh,w,c
  9205  002FD4  6EDA               	movwf	fsr2h,c
  9206  002FD6  0E05               	movlw	5
  9207  002FD8  6EDE               	movwf	postinc2,c
  9208  002FDA  0E00               	movlw	0
  9209  002FDC  6EDD               	movwf	postdec2,c
  9210  002FDE                     
  9211                           ; BSR set to: 0
  9212                           ;movement.c: 56:             array_index++;
  9213  002FDE  2BF9               	incf	_array_index& (0+255),f,b
  9214  002FE0                     l5495:
  9215                           
  9216                           ;movement.c: 58:         if (color == 6){
  9217  002FE0  0E06               	movlw	6
  9218  002FE2  0102               	movlb	2	; () banked
  9219  002FE4  19C8               	xorwf	action@color& (0+255),w,b
  9220  002FE6  A4D8               	btfss	status,2,c
  9221  002FE8  EFF8  F017         	goto	u5571
  9222  002FEC  EFFA  F017         	goto	u5570
  9223  002FF0                     u5571:
  9224  002FF0  EF1E  F018         	goto	l5503
  9225  002FF4                     u5570:
  9226  002FF4                     
  9227                           ; BSR set to: 2
  9228                           ;movement.c: 59:             short_reverse(mL,mR);
  9229  002FF4  C0E0  F026         	movff	action@mL,short_reverse@mL
  9230  002FF8  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9231  002FFC  C0E2  F028         	movff	action@mR,short_reverse@mR
  9232  003000  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9233  003004  EC96  F02A         	call	_short_reverse	;wreg free
  9234                           
  9235                           ;movement.c: 60:             turnRight(mL,mR,135);
  9236  003008  C0E0  F020         	movff	action@mL,turnRight@mL
  9237  00300C  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9238  003010  C0E2  F022         	movff	action@mR,turnRight@mR
  9239  003014  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9240  003018  0E87               	movlw	135
  9241  00301A  6E24               	movwf	turnRight@angle_right^0,c
  9242  00301C  ECA9  F01F         	call	_turnRight	;wreg free
  9243  003020                     
  9244                           ;movement.c: 61:             memory[array_index] = 6;
  9245  003020  0100               	movlb	0	; () banked
  9246  003022  51F9               	movf	_array_index& (0+255),w,b
  9247  003024  0D02               	mullw	2
  9248  003026  0E3C               	movlw	low _memory
  9249  003028  24F3               	addwf	243,w,c
  9250  00302A  6ED9               	movwf	fsr2l,c
  9251  00302C  0E03               	movlw	high _memory
  9252  00302E  20F4               	addwfc	prodh,w,c
  9253  003030  6EDA               	movwf	fsr2h,c
  9254  003032  0E06               	movlw	6
  9255  003034  6EDE               	movwf	postinc2,c
  9256  003036  0E00               	movlw	0
  9257  003038  6EDD               	movwf	postdec2,c
  9258  00303A                     
  9259                           ; BSR set to: 0
  9260                           ;movement.c: 62:             array_index++;
  9261  00303A  2BF9               	incf	_array_index& (0+255),f,b
  9262  00303C                     l5503:
  9263                           
  9264                           ;movement.c: 64:         if (color == 7){
  9265  00303C  0E07               	movlw	7
  9266  00303E  0102               	movlb	2	; () banked
  9267  003040  19C8               	xorwf	action@color& (0+255),w,b
  9268  003042  A4D8               	btfss	status,2,c
  9269  003044  EF26  F018         	goto	u5581
  9270  003048  EF28  F018         	goto	u5580
  9271  00304C                     u5581:
  9272  00304C  EF4C  F018         	goto	l5511
  9273  003050                     u5580:
  9274  003050                     
  9275                           ; BSR set to: 2
  9276                           ;movement.c: 65:             short_reverse(mL,mR);
  9277  003050  C0E0  F026         	movff	action@mL,short_reverse@mL
  9278  003054  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9279  003058  C0E2  F028         	movff	action@mR,short_reverse@mR
  9280  00305C  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9281  003060  EC96  F02A         	call	_short_reverse	;wreg free
  9282                           
  9283                           ;movement.c: 66:             turnLeft(mL,mR,135);
  9284  003064  C0E0  F020         	movff	action@mL,turnLeft@mL
  9285  003068  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9286  00306C  C0E2  F022         	movff	action@mR,turnLeft@mR
  9287  003070  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9288  003074  0E87               	movlw	135
  9289  003076  6E24               	movwf	turnLeft@angle_left^0,c
  9290  003078  EC70  F020         	call	_turnLeft	;wreg free
  9291  00307C                     
  9292                           ;movement.c: 67:             memory[array_index] = 7;
  9293  00307C  0100               	movlb	0	; () banked
  9294  00307E  51F9               	movf	_array_index& (0+255),w,b
  9295  003080  0D02               	mullw	2
  9296  003082  0E3C               	movlw	low _memory
  9297  003084  24F3               	addwf	243,w,c
  9298  003086  6ED9               	movwf	fsr2l,c
  9299  003088  0E03               	movlw	high _memory
  9300  00308A  20F4               	addwfc	prodh,w,c
  9301  00308C  6EDA               	movwf	fsr2h,c
  9302  00308E  0E07               	movlw	7
  9303  003090  6EDE               	movwf	postinc2,c
  9304  003092  0E00               	movlw	0
  9305  003094  6EDD               	movwf	postdec2,c
  9306  003096                     
  9307                           ; BSR set to: 0
  9308                           ;movement.c: 68:             array_index++;
  9309  003096  2BF9               	incf	_array_index& (0+255),f,b
  9310  003098                     l5511:
  9311                           
  9312                           ;movement.c: 70:         if (color == 8){
  9313  003098  0E08               	movlw	8
  9314  00309A  0102               	movlb	2	; () banked
  9315  00309C  19C8               	xorwf	action@color& (0+255),w,b
  9316  00309E  A4D8               	btfss	status,2,c
  9317  0030A0  EF54  F018         	goto	u5591
  9318  0030A4  EF56  F018         	goto	u5590
  9319  0030A8                     u5591:
  9320  0030A8  EF6F  F018         	goto	l640
  9321  0030AC                     u5590:
  9322  0030AC                     
  9323                           ; BSR set to: 2
  9324                           ;movement.c: 71:             toggle_light(2,1);
  9325  0030AC  0E01               	movlw	1
  9326  0030AE  6E01               	movwf	toggle_light@toggletime^0,c
  9327  0030B0  0E02               	movlw	2
  9328  0030B2  ECE5  F019         	call	_toggle_light
  9329  0030B6                     
  9330                           ;movement.c: 72:             short_reverse(mL,mR);
  9331  0030B6  C0E0  F026         	movff	action@mL,short_reverse@mL
  9332  0030BA  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9333  0030BE  C0E2  F028         	movff	action@mR,short_reverse@mR
  9334  0030C2  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9335  0030C6  EC96  F02A         	call	_short_reverse	;wreg free
  9336  0030CA                     
  9337                           ;movement.c: 73:             goback(mL,mR);
  9338  0030CA  C0E0  F058         	movff	action@mL,goback@mL
  9339  0030CE  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9340  0030D2  C0E2  F05A         	movff	action@mR,goback@mR
  9341  0030D6  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9342  0030DA  EC3A  F015         	call	_goback	;wreg free
  9343  0030DE                     l640:
  9344  0030DE  0012               	return		;funcret
  9345  0030E0                     __end_of_action:
  9346                           	callstack 0
  9347                           
  9348 ;; *************** function _toggle_light *****************
  9349 ;; Defined at:
  9350 ;;		line 29 in file "color.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  lightnumber     1    wreg     unsigned char 
  9353 ;;  toggletime      1    0[COMRAM] unsigned char 
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9356 ;;  i               1    3[COMRAM] unsigned char 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		wreg, status,2, status,0
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9369 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;Total ram usage:        5 bytes
  9371 ;; Hardware stack levels used: 1
  9372 ;; Hardware stack levels required when called: 1
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		_calibrate_white
  9377 ;;		_detect_color
  9378 ;;		_amb_light_measure
  9379 ;;		_action
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text46
  9384  0033CA                     __ptext46:
  9385                           	callstack 0
  9386  0033CA                     _toggle_light:
  9387                           	callstack 27
  9388                           
  9389                           ;incstack = 0
  9390                           ;toggle_light@lightnumber stored from wreg
  9391  0033CA  6E05               	movwf	toggle_light@lightnumber^0,c
  9392  0033CC                     
  9393                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9394  0033CC  0E00               	movlw	0
  9395  0033CE  6E04               	movwf	toggle_light@i^0,c
  9396                           
  9397                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9398  0033D0  0E00               	movlw	0
  9399  0033D2  6E04               	movwf	toggle_light@i^0,c
  9400  0033D4  EF31  F01B         	goto	l74
  9401  0033D8                     l4527:
  9402                           
  9403                           ;color.c: 34:         if (lightnumber == 1){
  9404  0033D8  0405               	decf	toggle_light@lightnumber^0,w,c
  9405  0033DA  A4D8               	btfss	status,2,c
  9406  0033DC  EFF2  F019         	goto	u4341
  9407  0033E0  EFF4  F019         	goto	u4340
  9408  0033E4                     u4341:
  9409  0033E4  EF2C  F01A         	goto	l4535
  9410  0033E8                     u4340:
  9411  0033E8                     
  9412                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9413  0033E8  A280               	btfss	128,1,c	;volatile
  9414  0033EA  EFF9  F019         	goto	u4351
  9415  0033EE  EFFD  F019         	goto	u4350
  9416  0033F2                     u4351:
  9417  0033F2  6A02               	clrf	??_toggle_light^0,c
  9418  0033F4  2A02               	incf	??_toggle_light^0,f,c
  9419  0033F6  EFFE  F019         	goto	u4368
  9420  0033FA                     u4350:
  9421  0033FA  6A02               	clrf	??_toggle_light^0,c
  9422  0033FC                     u4368:
  9423  0033FC  4602               	rlncf	??_toggle_light^0,f,c
  9424  0033FE  5080               	movf	128,w,c	;volatile
  9425  003400  1802               	xorwf	??_toggle_light^0,w,c
  9426  003402  0BFD               	andlw	-3
  9427  003404  1802               	xorwf	??_toggle_light^0,w,c
  9428  003406  6E80               	movwf	128,c	;volatile
  9429  003408                     
  9430                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9431  003408  0E29               	movlw	41
  9432  00340A  6E03               	movwf	(??_toggle_light+1)^0,c
  9433  00340C  0E96               	movlw	150
  9434  00340E  6E02               	movwf	??_toggle_light^0,c
  9435  003410  0E7F               	movlw	127
  9436  003412                     u6037:
  9437  003412  2EE8               	decfsz	wreg,f,c
  9438  003414  D7FE               	bra	u6037
  9439  003416  2E02               	decfsz	??_toggle_light^0,f,c
  9440  003418  D7FC               	bra	u6037
  9441  00341A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9442  00341C  D7FA               	bra	u6037
  9443  00341E  F000               	nop	
  9444  003420                     
  9445                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9446  003420  A280               	btfss	128,1,c	;volatile
  9447  003422  EF15  F01A         	goto	u4371
  9448  003426  EF19  F01A         	goto	u4370
  9449  00342A                     u4371:
  9450  00342A  6A02               	clrf	??_toggle_light^0,c
  9451  00342C  2A02               	incf	??_toggle_light^0,f,c
  9452  00342E  EF1A  F01A         	goto	u4388
  9453  003432                     u4370:
  9454  003432  6A02               	clrf	??_toggle_light^0,c
  9455  003434                     u4388:
  9456  003434  4602               	rlncf	??_toggle_light^0,f,c
  9457  003436  5080               	movf	128,w,c	;volatile
  9458  003438  1802               	xorwf	??_toggle_light^0,w,c
  9459  00343A  0BFD               	andlw	-3
  9460  00343C  1802               	xorwf	??_toggle_light^0,w,c
  9461  00343E  6E80               	movwf	128,c	;volatile
  9462                           
  9463                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9464  003440  0E29               	movlw	41
  9465  003442  6E03               	movwf	(??_toggle_light+1)^0,c
  9466  003444  0E96               	movlw	150
  9467  003446  6E02               	movwf	??_toggle_light^0,c
  9468  003448  0E7F               	movlw	127
  9469  00344A                     u6047:
  9470  00344A  2EE8               	decfsz	wreg,f,c
  9471  00344C  D7FE               	bra	u6047
  9472  00344E  2E02               	decfsz	??_toggle_light^0,f,c
  9473  003450  D7FC               	bra	u6047
  9474  003452  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9475  003454  D7FA               	bra	u6047
  9476  003456  F000               	nop	
  9477  003458                     l4535:
  9478                           
  9479                           ;color.c: 40:         if (lightnumber == 2){
  9480  003458  0E02               	movlw	2
  9481  00345A  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9482  00345C  A4D8               	btfss	status,2,c
  9483  00345E  EF33  F01A         	goto	u4391
  9484  003462  EF35  F01A         	goto	u4390
  9485  003466                     u4391:
  9486  003466  EF6D  F01A         	goto	l4543
  9487  00346A                     u4390:
  9488  00346A                     
  9489                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9490  00346A  A87C               	btfss	124,4,c	;volatile
  9491  00346C  EF3A  F01A         	goto	u4401
  9492  003470  EF3E  F01A         	goto	u4400
  9493  003474                     u4401:
  9494  003474  6A02               	clrf	??_toggle_light^0,c
  9495  003476  2A02               	incf	??_toggle_light^0,f,c
  9496  003478  EF3F  F01A         	goto	u4418
  9497  00347C                     u4400:
  9498  00347C  6A02               	clrf	??_toggle_light^0,c
  9499  00347E                     u4418:
  9500  00347E  3A02               	swapf	??_toggle_light^0,f,c
  9501  003480  507C               	movf	124,w,c	;volatile
  9502  003482  1802               	xorwf	??_toggle_light^0,w,c
  9503  003484  0BEF               	andlw	-17
  9504  003486  1802               	xorwf	??_toggle_light^0,w,c
  9505  003488  6E7C               	movwf	124,c	;volatile
  9506  00348A                     
  9507                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9508  00348A  0E29               	movlw	41
  9509  00348C  6E03               	movwf	(??_toggle_light+1)^0,c
  9510  00348E  0E96               	movlw	150
  9511  003490  6E02               	movwf	??_toggle_light^0,c
  9512  003492  0E7F               	movlw	127
  9513  003494                     u6057:
  9514  003494  2EE8               	decfsz	wreg,f,c
  9515  003496  D7FE               	bra	u6057
  9516  003498  2E02               	decfsz	??_toggle_light^0,f,c
  9517  00349A  D7FC               	bra	u6057
  9518  00349C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9519  00349E  D7FA               	bra	u6057
  9520  0034A0  F000               	nop	
  9521  0034A2                     
  9522                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9523  0034A2  A87C               	btfss	124,4,c	;volatile
  9524  0034A4  EF56  F01A         	goto	u4421
  9525  0034A8  EF5A  F01A         	goto	u4420
  9526  0034AC                     u4421:
  9527  0034AC  6A02               	clrf	??_toggle_light^0,c
  9528  0034AE  2A02               	incf	??_toggle_light^0,f,c
  9529  0034B0  EF5B  F01A         	goto	u4438
  9530  0034B4                     u4420:
  9531  0034B4  6A02               	clrf	??_toggle_light^0,c
  9532  0034B6                     u4438:
  9533  0034B6  3A02               	swapf	??_toggle_light^0,f,c
  9534  0034B8  507C               	movf	124,w,c	;volatile
  9535  0034BA  1802               	xorwf	??_toggle_light^0,w,c
  9536  0034BC  0BEF               	andlw	-17
  9537  0034BE  1802               	xorwf	??_toggle_light^0,w,c
  9538  0034C0  6E7C               	movwf	124,c	;volatile
  9539                           
  9540                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9541  0034C2  0E29               	movlw	41
  9542  0034C4  6E03               	movwf	(??_toggle_light+1)^0,c
  9543  0034C6  0E96               	movlw	150
  9544  0034C8  6E02               	movwf	??_toggle_light^0,c
  9545  0034CA  0E7F               	movlw	127
  9546  0034CC                     u6067:
  9547  0034CC  2EE8               	decfsz	wreg,f,c
  9548  0034CE  D7FE               	bra	u6067
  9549  0034D0  2E02               	decfsz	??_toggle_light^0,f,c
  9550  0034D2  D7FC               	bra	u6067
  9551  0034D4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9552  0034D6  D7FA               	bra	u6067
  9553  0034D8  F000               	nop	
  9554  0034DA                     l4543:
  9555                           
  9556                           ;color.c: 46:         if (lightnumber == 3){
  9557  0034DA  0E03               	movlw	3
  9558  0034DC  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9559  0034DE  A4D8               	btfss	status,2,c
  9560  0034E0  EF74  F01A         	goto	u4441
  9561  0034E4  EF76  F01A         	goto	u4440
  9562  0034E8                     u4441:
  9563  0034E8  EFB2  F01A         	goto	l4551
  9564  0034EC                     u4440:
  9565  0034EC                     
  9566                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9567  0034EC  A67C               	btfss	124,3,c	;volatile
  9568  0034EE  EF7B  F01A         	goto	u4451
  9569  0034F2  EF7F  F01A         	goto	u4450
  9570  0034F6                     u4451:
  9571  0034F6  6A02               	clrf	??_toggle_light^0,c
  9572  0034F8  2A02               	incf	??_toggle_light^0,f,c
  9573  0034FA  EF80  F01A         	goto	u4468
  9574  0034FE                     u4450:
  9575  0034FE  6A02               	clrf	??_toggle_light^0,c
  9576  003500                     u4468:
  9577  003500  4602               	rlncf	??_toggle_light^0,f,c
  9578  003502  4602               	rlncf	??_toggle_light^0,f,c
  9579  003504  4602               	rlncf	??_toggle_light^0,f,c
  9580  003506  507C               	movf	124,w,c	;volatile
  9581  003508  1802               	xorwf	??_toggle_light^0,w,c
  9582  00350A  0BF7               	andlw	-9
  9583  00350C  1802               	xorwf	??_toggle_light^0,w,c
  9584  00350E  6E7C               	movwf	124,c	;volatile
  9585  003510                     
  9586                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9587  003510  0E29               	movlw	41
  9588  003512  6E03               	movwf	(??_toggle_light+1)^0,c
  9589  003514  0E96               	movlw	150
  9590  003516  6E02               	movwf	??_toggle_light^0,c
  9591  003518  0E7F               	movlw	127
  9592  00351A                     u6077:
  9593  00351A  2EE8               	decfsz	wreg,f,c
  9594  00351C  D7FE               	bra	u6077
  9595  00351E  2E02               	decfsz	??_toggle_light^0,f,c
  9596  003520  D7FC               	bra	u6077
  9597  003522  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9598  003524  D7FA               	bra	u6077
  9599  003526  F000               	nop	
  9600  003528                     
  9601                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9602  003528  A67C               	btfss	124,3,c	;volatile
  9603  00352A  EF99  F01A         	goto	u4471
  9604  00352E  EF9D  F01A         	goto	u4470
  9605  003532                     u4471:
  9606  003532  6A02               	clrf	??_toggle_light^0,c
  9607  003534  2A02               	incf	??_toggle_light^0,f,c
  9608  003536  EF9E  F01A         	goto	u4488
  9609  00353A                     u4470:
  9610  00353A  6A02               	clrf	??_toggle_light^0,c
  9611  00353C                     u4488:
  9612  00353C  4602               	rlncf	??_toggle_light^0,f,c
  9613  00353E  4602               	rlncf	??_toggle_light^0,f,c
  9614  003540  4602               	rlncf	??_toggle_light^0,f,c
  9615  003542  507C               	movf	124,w,c	;volatile
  9616  003544  1802               	xorwf	??_toggle_light^0,w,c
  9617  003546  0BF7               	andlw	-9
  9618  003548  1802               	xorwf	??_toggle_light^0,w,c
  9619  00354A  6E7C               	movwf	124,c	;volatile
  9620                           
  9621                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9622  00354C  0E29               	movlw	41
  9623  00354E  6E03               	movwf	(??_toggle_light+1)^0,c
  9624  003550  0E96               	movlw	150
  9625  003552  6E02               	movwf	??_toggle_light^0,c
  9626  003554  0E7F               	movlw	127
  9627  003556                     u6087:
  9628  003556  2EE8               	decfsz	wreg,f,c
  9629  003558  D7FE               	bra	u6087
  9630  00355A  2E02               	decfsz	??_toggle_light^0,f,c
  9631  00355C  D7FC               	bra	u6087
  9632  00355E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9633  003560  D7FA               	bra	u6087
  9634  003562  F000               	nop	
  9635  003564                     l4551:
  9636                           
  9637                           ;color.c: 52:         if (lightnumber == 4){
  9638  003564  0E04               	movlw	4
  9639  003566  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9640  003568  A4D8               	btfss	status,2,c
  9641  00356A  EFB9  F01A         	goto	u4491
  9642  00356E  EFBB  F01A         	goto	u4490
  9643  003572                     u4491:
  9644  003572  EFF1  F01A         	goto	l4559
  9645  003576                     u4490:
  9646  003576                     
  9647                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9648  003576  A07E               	btfss	126,0,c	;volatile
  9649  003578  EFC0  F01A         	goto	u4501
  9650  00357C  EFC4  F01A         	goto	u4500
  9651  003580                     u4501:
  9652  003580  6A02               	clrf	??_toggle_light^0,c
  9653  003582  2A02               	incf	??_toggle_light^0,f,c
  9654  003584  EFC5  F01A         	goto	u4518
  9655  003588                     u4500:
  9656  003588  6A02               	clrf	??_toggle_light^0,c
  9657  00358A                     u4518:
  9658  00358A  507E               	movf	126,w,c	;volatile
  9659  00358C  1802               	xorwf	??_toggle_light^0,w,c
  9660  00358E  0BFE               	andlw	-2
  9661  003590  1802               	xorwf	??_toggle_light^0,w,c
  9662  003592  6E7E               	movwf	126,c	;volatile
  9663  003594                     
  9664                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9665  003594  0E29               	movlw	41
  9666  003596  6E03               	movwf	(??_toggle_light+1)^0,c
  9667  003598  0E96               	movlw	150
  9668  00359A  6E02               	movwf	??_toggle_light^0,c
  9669  00359C  0E7F               	movlw	127
  9670  00359E                     u6097:
  9671  00359E  2EE8               	decfsz	wreg,f,c
  9672  0035A0  D7FE               	bra	u6097
  9673  0035A2  2E02               	decfsz	??_toggle_light^0,f,c
  9674  0035A4  D7FC               	bra	u6097
  9675  0035A6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9676  0035A8  D7FA               	bra	u6097
  9677  0035AA  F000               	nop	
  9678  0035AC                     
  9679                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9680  0035AC  A07E               	btfss	126,0,c	;volatile
  9681  0035AE  EFDB  F01A         	goto	u4521
  9682  0035B2  EFDF  F01A         	goto	u4520
  9683  0035B6                     u4521:
  9684  0035B6  6A02               	clrf	??_toggle_light^0,c
  9685  0035B8  2A02               	incf	??_toggle_light^0,f,c
  9686  0035BA  EFE0  F01A         	goto	u4538
  9687  0035BE                     u4520:
  9688  0035BE  6A02               	clrf	??_toggle_light^0,c
  9689  0035C0                     u4538:
  9690  0035C0  507E               	movf	126,w,c	;volatile
  9691  0035C2  1802               	xorwf	??_toggle_light^0,w,c
  9692  0035C4  0BFE               	andlw	-2
  9693  0035C6  1802               	xorwf	??_toggle_light^0,w,c
  9694  0035C8  6E7E               	movwf	126,c	;volatile
  9695                           
  9696                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9697  0035CA  0E29               	movlw	41
  9698  0035CC  6E03               	movwf	(??_toggle_light+1)^0,c
  9699  0035CE  0E96               	movlw	150
  9700  0035D0  6E02               	movwf	??_toggle_light^0,c
  9701  0035D2  0E7F               	movlw	127
  9702  0035D4                     u6107:
  9703  0035D4  2EE8               	decfsz	wreg,f,c
  9704  0035D6  D7FE               	bra	u6107
  9705  0035D8  2E02               	decfsz	??_toggle_light^0,f,c
  9706  0035DA  D7FC               	bra	u6107
  9707  0035DC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9708  0035DE  D7FA               	bra	u6107
  9709  0035E0  F000               	nop	
  9710  0035E2                     l4559:
  9711                           
  9712                           ;color.c: 58:         if (lightnumber == 3){
  9713  0035E2  0E03               	movlw	3
  9714  0035E4  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9715  0035E6  A4D8               	btfss	status,2,c
  9716  0035E8  EFF8  F01A         	goto	u4541
  9717  0035EC  EFFA  F01A         	goto	u4540
  9718  0035F0                     u4541:
  9719  0035F0  EF30  F01B         	goto	l4567
  9720  0035F4                     u4540:
  9721  0035F4                     
  9722                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9723  0035F4  A080               	btfss	128,0,c	;volatile
  9724  0035F6  EFFF  F01A         	goto	u4551
  9725  0035FA  EF03  F01B         	goto	u4550
  9726  0035FE                     u4551:
  9727  0035FE  6A02               	clrf	??_toggle_light^0,c
  9728  003600  2A02               	incf	??_toggle_light^0,f,c
  9729  003602  EF04  F01B         	goto	u4568
  9730  003606                     u4550:
  9731  003606  6A02               	clrf	??_toggle_light^0,c
  9732  003608                     u4568:
  9733  003608  5080               	movf	128,w,c	;volatile
  9734  00360A  1802               	xorwf	??_toggle_light^0,w,c
  9735  00360C  0BFE               	andlw	-2
  9736  00360E  1802               	xorwf	??_toggle_light^0,w,c
  9737  003610  6E80               	movwf	128,c	;volatile
  9738  003612                     
  9739                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9740  003612  0E29               	movlw	41
  9741  003614  6E03               	movwf	(??_toggle_light+1)^0,c
  9742  003616  0E96               	movlw	150
  9743  003618  6E02               	movwf	??_toggle_light^0,c
  9744  00361A  0E7F               	movlw	127
  9745  00361C                     u6117:
  9746  00361C  2EE8               	decfsz	wreg,f,c
  9747  00361E  D7FE               	bra	u6117
  9748  003620  2E02               	decfsz	??_toggle_light^0,f,c
  9749  003622  D7FC               	bra	u6117
  9750  003624  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9751  003626  D7FA               	bra	u6117
  9752  003628  F000               	nop	
  9753  00362A                     
  9754                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9755  00362A  A080               	btfss	128,0,c	;volatile
  9756  00362C  EF1A  F01B         	goto	u4571
  9757  003630  EF1E  F01B         	goto	u4570
  9758  003634                     u4571:
  9759  003634  6A02               	clrf	??_toggle_light^0,c
  9760  003636  2A02               	incf	??_toggle_light^0,f,c
  9761  003638  EF1F  F01B         	goto	u4588
  9762  00363C                     u4570:
  9763  00363C  6A02               	clrf	??_toggle_light^0,c
  9764  00363E                     u4588:
  9765  00363E  5080               	movf	128,w,c	;volatile
  9766  003640  1802               	xorwf	??_toggle_light^0,w,c
  9767  003642  0BFE               	andlw	-2
  9768  003644  1802               	xorwf	??_toggle_light^0,w,c
  9769  003646  6E80               	movwf	128,c	;volatile
  9770                           
  9771                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9772  003648  0E29               	movlw	41
  9773  00364A  6E03               	movwf	(??_toggle_light+1)^0,c
  9774  00364C  0E96               	movlw	150
  9775  00364E  6E02               	movwf	??_toggle_light^0,c
  9776  003650  0E7F               	movlw	127
  9777  003652                     u6127:
  9778  003652  2EE8               	decfsz	wreg,f,c
  9779  003654  D7FE               	bra	u6127
  9780  003656  2E02               	decfsz	??_toggle_light^0,f,c
  9781  003658  D7FC               	bra	u6127
  9782  00365A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9783  00365C  D7FA               	bra	u6127
  9784  00365E  F000               	nop	
  9785  003660                     l4567:
  9786                           
  9787                           ;color.c: 64:     }
  9788  003660  2A04               	incf	toggle_light@i^0,f,c
  9789  003662                     l74:
  9790  003662  5001               	movf	toggle_light@toggletime^0,w,c
  9791  003664  5C04               	subwf	toggle_light@i^0,w,c
  9792  003666  A0D8               	btfss	status,0,c
  9793  003668  EF38  F01B         	goto	u4591
  9794  00366C  EF3A  F01B         	goto	u4590
  9795  003670                     u4591:
  9796  003670  EFEC  F019         	goto	l4527
  9797  003674                     u4590:
  9798  003674  0012               	return		;funcret
  9799  003676                     __end_of_toggle_light:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function _short_reverse *****************
  9803 ;; Defined at:
  9804 ;;		line 199 in file "dc_motor.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  9807 ;;		 -> main@motorL(10), 
  9808 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  9809 ;;		 -> main@motorR(10), 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9824 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;Total ram usage:        6 bytes
  9826 ;; Hardware stack levels used: 1
  9827 ;; Hardware stack levels required when called: 5
  9828 ;; This function calls:
  9829 ;;		_fullSpeedBack
  9830 ;;		_stop
  9831 ;; This function is called by:
  9832 ;;		_action
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text47
  9837  00552C                     __ptext47:
  9838                           	callstack 0
  9839  00552C                     _short_reverse:
  9840                           	callstack 24
  9841  00552C                     
  9842                           ;dc_motor.c: 199: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 200: { fullSpeedBack(mL, mR);
  9843  00552C  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
  9844  005530  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
  9845  005534  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
  9846  005538  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
  9847  00553C  EC02  F027         	call	_fullSpeedBack	;wreg free
  9848  005540                     
  9849                           ;dc_motor.c: 201:     _delay((unsigned long)((300)*(64000000/4000.0)));
  9850  005540  0E19               	movlw	25
  9851  005542  6E2B               	movwf	(??_short_reverse+1)^0,c
  9852  005544  0E5A               	movlw	90
  9853  005546  6E2A               	movwf	??_short_reverse^0,c
  9854  005548  0EB2               	movlw	178
  9855  00554A                     u6137:
  9856  00554A  2EE8               	decfsz	wreg,f,c
  9857  00554C  D7FE               	bra	u6137
  9858  00554E  2E2A               	decfsz	??_short_reverse^0,f,c
  9859  005550  D7FC               	bra	u6137
  9860  005552  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
  9861  005554  D7FA               	bra	u6137
  9862  005556                     
  9863                           ;dc_motor.c: 202:     stop(mL,mR);
  9864  005556  C026  F01A         	movff	short_reverse@mL,stop@mL
  9865  00555A  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
  9866  00555E  C028  F01C         	movff	short_reverse@mR,stop@mR
  9867  005562  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
  9868  005566  EC62  F027         	call	_stop	;wreg free
  9869  00556A  0012               	return		;funcret
  9870  00556C                     __end_of_short_reverse:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _goback *****************
  9874 ;; Defined at:
  9875 ;;		line 123 in file "movement.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  mL              2   87[COMRAM] PTR struct DC_motor
  9878 ;;		 -> main@motorL(10), 
  9879 ;;  mR              2   89[COMRAM] PTR struct DC_motor
  9880 ;;		 -> main@motorR(10), 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  i               2  126[BANK0 ] unsigned int 
  9883 ;;  buf3          100  100[BANK1 ] unsigned char [100]
  9884 ;;  buf2          100    0[BANK2 ] unsigned char [100]
  9885 ;;  buf           100    0[BANK1 ] unsigned char [100]
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1    wreg      void 
  9888 ;; Registers used:
  9889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9896 ;;      Locals:         0       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;      Totals:         6       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;Total ram usage:      308 bytes
  9900 ;; Hardware stack levels used: 1
  9901 ;; Hardware stack levels required when called: 10
  9902 ;; This function calls:
  9903 ;;		_color_predict
  9904 ;;		_fullSpeedAhead
  9905 ;;		_reverse_square
  9906 ;;		_sendStringSerial4
  9907 ;;		_sprintf
  9908 ;;		_stop
  9909 ;;		_turnLeft
  9910 ;;		_turnRight
  9911 ;; This function is called by:
  9912 ;;		_action
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text48
  9917  002A74                     __ptext48:
  9918                           	callstack 0
  9919  002A74                     _goback:
  9920                           	callstack 19
  9921  002A74                     
  9922                           ;movement.c: 123: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 124:
      +                           { turnRight(mL,mR,180);
  9923  002A74  C058  F020         	movff	goback@mL,turnRight@mL
  9924  002A78  C059  F021         	movff	goback@mL+1,turnRight@mL+1
  9925  002A7C  C05A  F022         	movff	goback@mR,turnRight@mR
  9926  002A80  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
  9927  002A84  0EB4               	movlw	180
  9928  002A86  6E24               	movwf	turnRight@angle_right^0,c
  9929  002A88  ECA9  F01F         	call	_turnRight	;wreg free
  9930  002A8C                     
  9931                           ;movement.c: 125:     array_index--;
  9932  002A8C  0100               	movlb	0	; () banked
  9933  002A8E  07F9               	decf	_array_index& (0+255),f,b
  9934  002A90                     
  9935                           ; BSR set to: 0
  9936                           ;movement.c: 126:     char buf[100];;movement.c: 127:     sprintf(buf,"go back\r\n");
  9937  002A90  0E00               	movlw	low goback@buf
  9938  002A92  6F60               	movwf	sprintf@s& (0+255),b
  9939  002A94  0E01               	movlw	high goback@buf
  9940  002A96  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9941  002A98  0E31               	movlw	low STR_4
  9942  002A9A  6F62               	movwf	sprintf@fmt& (0+255),b
  9943  002A9C  0E0E               	movlw	high STR_4
  9944  002A9E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9945  002AA0  EC46  F029         	call	_sprintf	;wreg free
  9946  002AA4                     
  9947                           ;movement.c: 128:     sendStringSerial4(buf);
  9948  002AA4  0E00               	movlw	low goback@buf
  9949  002AA6  6E02               	movwf	sendStringSerial4@string^0,c
  9950  002AA8  0E01               	movlw	high goback@buf
  9951  002AAA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9952  002AAC  EC81  F02B         	call	_sendStringSerial4	;wreg free
  9953  002AB0                     l5233:
  9954                           
  9955                           ;movement.c: 130:         char buf3[100];;movement.c: 131:         sprintf(buf3,"repeat\
      +                          r\n");
  9956  002AB0  0E64               	movlw	low goback@buf3
  9957  002AB2  0100               	movlb	0	; () banked
  9958  002AB4  6F60               	movwf	sprintf@s& (0+255),b
  9959  002AB6  0E01               	movlw	high goback@buf3
  9960  002AB8  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9961  002ABA  0E3B               	movlw	low STR_5
  9962  002ABC  6F62               	movwf	sprintf@fmt& (0+255),b
  9963  002ABE  0E0E               	movlw	high STR_5
  9964  002AC0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9965  002AC2  EC46  F029         	call	_sprintf	;wreg free
  9966  002AC6                     
  9967                           ;movement.c: 132:         sendStringSerial4(buf3);
  9968  002AC6  0E64               	movlw	low goback@buf3
  9969  002AC8  6E02               	movwf	sendStringSerial4@string^0,c
  9970  002ACA  0E01               	movlw	high goback@buf3
  9971  002ACC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9972  002ACE  EC81  F02B         	call	_sendStringSerial4	;wreg free
  9973  002AD2                     
  9974                           ;movement.c: 133:         color_predict(array_index);
  9975  002AD2  0100               	movlb	0	; () banked
  9976  002AD4  51F9               	movf	_array_index& (0+255),w,b
  9977  002AD6  EC99  F02B         	call	_color_predict
  9978  002ADA                     
  9979                           ;movement.c: 134:         color_predict(memory[array_index]);
  9980  002ADA  0100               	movlb	0	; () banked
  9981  002ADC  51F9               	movf	_array_index& (0+255),w,b
  9982  002ADE  0D02               	mullw	2
  9983  002AE0  0E3C               	movlw	low _memory
  9984  002AE2  24F3               	addwf	243,w,c
  9985  002AE4  6ED9               	movwf	fsr2l,c
  9986  002AE6  0E03               	movlw	high _memory
  9987  002AE8  20F4               	addwfc	prodh,w,c
  9988  002AEA  6EDA               	movwf	fsr2h,c
  9989  002AEC  50DF               	movf	indf2,w,c
  9990  002AEE  EC99  F02B         	call	_color_predict
  9991  002AF2                     
  9992                           ;movement.c: 135:         color_predict(200);
  9993  002AF2  0EC8               	movlw	200
  9994  002AF4  EC99  F02B         	call	_color_predict
  9995  002AF8                     
  9996                           ;movement.c: 136:         fullSpeedAhead(mL,mR);
  9997  002AF8  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
  9998  002AFC  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  9999  002B00  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10000  002B04  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10001  002B08  ECC0  F027         	call	_fullSpeedAhead	;wreg free
 10002  002B0C                     
 10003                           ;movement.c: 137:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10004  002B0C  0E00               	movlw	0
 10005  002B0E  0100               	movlb	0	; () banked
 10006  002B10  6FDF               	movwf	(goback@i+1)& (0+255),b
 10007  002B12  0E00               	movlw	0
 10008  002B14  6FDE               	movwf	goback@i& (0+255),b
 10009  002B16  EF9C  F015         	goto	l5251
 10010  002B1A                     l5247:
 10011                           
 10012                           ; BSR set to: 0
 10013  002B1A  0E52               	movlw	82
 10014  002B1C  6E5D               	movwf	(??_goback+1)^0,c
 10015  002B1E  0E2B               	movlw	43
 10016  002B20  6E5C               	movwf	??_goback^0,c
 10017  002B22  0E00               	movlw	0
 10018  002B24                     u6147:
 10019  002B24  2EE8               	decfsz	wreg,f,c
 10020  002B26  D7FE               	bra	u6147
 10021  002B28  2E5C               	decfsz	??_goback^0,f,c
 10022  002B2A  D7FC               	bra	u6147
 10023  002B2C  2E5D               	decfsz	(??_goback+1)^0,f,c
 10024  002B2E  D7FA               	bra	u6147
 10025  002B30  D000               	nop2	
 10026  002B32  0100               	movlb	0	; () banked
 10027  002B34  4BDE               	infsnz	goback@i& (0+255),f,b
 10028  002B36  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10029  002B38                     l5251:
 10030                           
 10031                           ; BSR set to: 0
 10032  002B38  51F9               	movf	_array_index& (0+255),w,b
 10033  002B3A  0D02               	mullw	2
 10034  002B3C  0E3C               	movlw	low _memory
 10035  002B3E  24F3               	addwf	243,w,c
 10036  002B40  6ED9               	movwf	fsr2l,c
 10037  002B42  0E03               	movlw	high _memory
 10038  002B44  20F4               	addwfc	prodh,w,c
 10039  002B46  6EDA               	movwf	fsr2h,c
 10040  002B48  50DE               	movf	postinc2,w,c
 10041  002B4A  5DDE               	subwf	goback@i& (0+255),w,b
 10042  002B4C  50DE               	movf	postinc2,w,c
 10043  002B4E  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10044  002B50  A0D8               	btfss	status,0,c
 10045  002B52  EFAD  F015         	goto	u5311
 10046  002B56  EFAF  F015         	goto	u5310
 10047  002B5A                     u5311:
 10048  002B5A  EF8D  F015         	goto	l5247
 10049  002B5E                     u5310:
 10050  002B5E                     
 10051                           ; BSR set to: 0
 10052                           ;movement.c: 138:         stop(mL,mR);
 10053  002B5E  C058  F01A         	movff	goback@mL,stop@mL
 10054  002B62  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10055  002B66  C05A  F01C         	movff	goback@mR,stop@mR
 10056  002B6A  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10057  002B6E  EC62  F027         	call	_stop	;wreg free
 10058  002B72                     
 10059                           ;movement.c: 139:         if (array_index == 0){break;}
 10060  002B72  0100               	movlb	0	; () banked
 10061  002B74  51F9               	movf	_array_index& (0+255),w,b
 10062  002B76  A4D8               	btfss	status,2,c
 10063  002B78  EFC0  F015         	goto	u5321
 10064  002B7C  EFC2  F015         	goto	u5320
 10065  002B80                     u5321:
 10066  002B80  EFC4  F015         	goto	l5259
 10067  002B84                     u5320:
 10068  002B84  EFCF  F016         	goto	l5309
 10069  002B88                     l5259:
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;movement.c: 140:         array_index--;
 10073  002B88  07F9               	decf	_array_index& (0+255),f,b
 10074  002B8A                     
 10075                           ; BSR set to: 0
 10076                           ;movement.c: 141:         color_predict(array_index);
 10077  002B8A  51F9               	movf	_array_index& (0+255),w,b
 10078  002B8C  EC99  F02B         	call	_color_predict
 10079  002B90                     
 10080                           ;movement.c: 142:         color_predict(memory[array_index]);
 10081  002B90  0100               	movlb	0	; () banked
 10082  002B92  51F9               	movf	_array_index& (0+255),w,b
 10083  002B94  0D02               	mullw	2
 10084  002B96  0E3C               	movlw	low _memory
 10085  002B98  24F3               	addwf	243,w,c
 10086  002B9A  6ED9               	movwf	fsr2l,c
 10087  002B9C  0E03               	movlw	high _memory
 10088  002B9E  20F4               	addwfc	prodh,w,c
 10089  002BA0  6EDA               	movwf	fsr2h,c
 10090  002BA2  50DF               	movf	indf2,w,c
 10091  002BA4  EC99  F02B         	call	_color_predict
 10092  002BA8                     
 10093                           ;movement.c: 143:         color_predict(200);
 10094  002BA8  0EC8               	movlw	200
 10095  002BAA  EC99  F02B         	call	_color_predict
 10096  002BAE                     
 10097                           ;movement.c: 144:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10098  002BAE  0100               	movlb	0	; () banked
 10099  002BB0  51F9               	movf	_array_index& (0+255),w,b
 10100  002BB2  0D02               	mullw	2
 10101  002BB4  0E3C               	movlw	low _memory
 10102  002BB6  24F3               	addwf	243,w,c
 10103  002BB8  6ED9               	movwf	fsr2l,c
 10104  002BBA  0E03               	movlw	high _memory
 10105  002BBC  20F4               	addwfc	prodh,w,c
 10106  002BBE  6EDA               	movwf	fsr2h,c
 10107  002BC0  04DE               	decf	postinc2,w,c
 10108  002BC2  10DE               	iorwf	postinc2,w,c
 10109  002BC4  A4D8               	btfss	status,2,c
 10110  002BC6  EFE7  F015         	goto	u5331
 10111  002BCA  EFE9  F015         	goto	u5330
 10112  002BCE                     u5331:
 10113  002BCE  EFF9  F015         	goto	l5273
 10114  002BD2                     u5330:
 10115  002BD2                     
 10116                           ; BSR set to: 0
 10117  002BD2  C058  F020         	movff	goback@mL,turnLeft@mL
 10118  002BD6  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10119  002BDA  C05A  F022         	movff	goback@mR,turnLeft@mR
 10120  002BDE  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10121  002BE2  0E5A               	movlw	90
 10122  002BE4  6E24               	movwf	turnLeft@angle_left^0,c
 10123  002BE6  EC70  F020         	call	_turnLeft	;wreg free
 10124  002BEA                     l5271:
 10125  002BEA  0100               	movlb	0	; () banked
 10126  002BEC  07F9               	decf	_array_index& (0+255),f,b
 10127  002BEE  EF58  F015         	goto	l5233
 10128  002BF2                     l5273:
 10129                           
 10130                           ; BSR set to: 0
 10131  002BF2  51F9               	movf	_array_index& (0+255),w,b
 10132  002BF4  0D02               	mullw	2
 10133  002BF6  0E3C               	movlw	low _memory
 10134  002BF8  24F3               	addwf	243,w,c
 10135  002BFA  6ED9               	movwf	fsr2l,c
 10136  002BFC  0E03               	movlw	high _memory
 10137  002BFE  20F4               	addwfc	prodh,w,c
 10138  002C00  6EDA               	movwf	fsr2h,c
 10139  002C02  0E02               	movlw	2
 10140  002C04  18DE               	xorwf	postinc2,w,c
 10141  002C06  10DE               	iorwf	postinc2,w,c
 10142  002C08  A4D8               	btfss	status,2,c
 10143  002C0A  EF09  F016         	goto	u5341
 10144  002C0E  EF0B  F016         	goto	u5340
 10145  002C12                     u5341:
 10146  002C12  EF19  F016         	goto	l5279
 10147  002C16                     u5340:
 10148  002C16                     
 10149                           ; BSR set to: 0
 10150  002C16  C058  F020         	movff	goback@mL,turnRight@mL
 10151  002C1A  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10152  002C1E  C05A  F022         	movff	goback@mR,turnRight@mR
 10153  002C22  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10154  002C26  0E5A               	movlw	90
 10155  002C28  6E24               	movwf	turnRight@angle_right^0,c
 10156  002C2A  ECA9  F01F         	call	_turnRight	;wreg free
 10157  002C2E  EFF5  F015         	goto	l5271
 10158  002C32                     l5279:
 10159                           
 10160                           ; BSR set to: 0
 10161  002C32  51F9               	movf	_array_index& (0+255),w,b
 10162  002C34  0D02               	mullw	2
 10163  002C36  0E3C               	movlw	low _memory
 10164  002C38  24F3               	addwf	243,w,c
 10165  002C3A  6ED9               	movwf	fsr2l,c
 10166  002C3C  0E03               	movlw	high _memory
 10167  002C3E  20F4               	addwfc	prodh,w,c
 10168  002C40  6EDA               	movwf	fsr2h,c
 10169  002C42  0E03               	movlw	3
 10170  002C44  18DE               	xorwf	postinc2,w,c
 10171  002C46  10DE               	iorwf	postinc2,w,c
 10172  002C48  A4D8               	btfss	status,2,c
 10173  002C4A  EF29  F016         	goto	u5351
 10174  002C4E  EF2B  F016         	goto	u5350
 10175  002C52                     u5351:
 10176  002C52  EF39  F016         	goto	l5285
 10177  002C56                     u5350:
 10178  002C56                     
 10179                           ; BSR set to: 0
 10180  002C56  C058  F020         	movff	goback@mL,turnLeft@mL
 10181  002C5A  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10182  002C5E  C05A  F022         	movff	goback@mR,turnLeft@mR
 10183  002C62  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10184  002C66  0EB4               	movlw	180
 10185  002C68  6E24               	movwf	turnLeft@angle_left^0,c
 10186  002C6A  EC70  F020         	call	_turnLeft	;wreg free
 10187  002C6E  EFF5  F015         	goto	l5271
 10188  002C72                     l5285:
 10189                           
 10190                           ; BSR set to: 0
 10191  002C72  51F9               	movf	_array_index& (0+255),w,b
 10192  002C74  0D02               	mullw	2
 10193  002C76  0E3C               	movlw	low _memory
 10194  002C78  24F3               	addwf	243,w,c
 10195  002C7A  6ED9               	movwf	fsr2l,c
 10196  002C7C  0E03               	movlw	high _memory
 10197  002C7E  20F4               	addwfc	prodh,w,c
 10198  002C80  6EDA               	movwf	fsr2h,c
 10199  002C82  0E04               	movlw	4
 10200  002C84  18DE               	xorwf	postinc2,w,c
 10201  002C86  10DE               	iorwf	postinc2,w,c
 10202  002C88  A4D8               	btfss	status,2,c
 10203  002C8A  EF49  F016         	goto	u5361
 10204  002C8E  EF4B  F016         	goto	u5360
 10205  002C92                     u5361:
 10206  002C92  EF63  F016         	goto	l5291
 10207  002C96                     u5360:
 10208  002C96                     
 10209                           ; BSR set to: 0
 10210  002C96  C058  F026         	movff	goback@mL,reverse_square@mL
 10211  002C9A  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10212  002C9E  C05A  F028         	movff	goback@mR,reverse_square@mR
 10213  002CA2  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10214  002CA6  ECB6  F02A         	call	_reverse_square	;wreg free
 10215  002CAA  C058  F020         	movff	goback@mL,turnLeft@mL
 10216  002CAE  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10217  002CB2  C05A  F022         	movff	goback@mR,turnLeft@mR
 10218  002CB6  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10219  002CBA  0E5A               	movlw	90
 10220  002CBC  6E24               	movwf	turnLeft@angle_left^0,c
 10221  002CBE  EC70  F020         	call	_turnLeft	;wreg free
 10222  002CC2  EFF5  F015         	goto	l5271
 10223  002CC6                     l5291:
 10224                           
 10225                           ; BSR set to: 0
 10226  002CC6  51F9               	movf	_array_index& (0+255),w,b
 10227  002CC8  0D02               	mullw	2
 10228  002CCA  0E3C               	movlw	low _memory
 10229  002CCC  24F3               	addwf	243,w,c
 10230  002CCE  6ED9               	movwf	fsr2l,c
 10231  002CD0  0E03               	movlw	high _memory
 10232  002CD2  20F4               	addwfc	prodh,w,c
 10233  002CD4  6EDA               	movwf	fsr2h,c
 10234  002CD6  0E05               	movlw	5
 10235  002CD8  18DE               	xorwf	postinc2,w,c
 10236  002CDA  10DE               	iorwf	postinc2,w,c
 10237  002CDC  A4D8               	btfss	status,2,c
 10238  002CDE  EF73  F016         	goto	u5371
 10239  002CE2  EF75  F016         	goto	u5370
 10240  002CE6                     u5371:
 10241  002CE6  EF8D  F016         	goto	l5297
 10242  002CEA                     u5370:
 10243  002CEA                     
 10244                           ; BSR set to: 0
 10245  002CEA  C058  F026         	movff	goback@mL,reverse_square@mL
 10246  002CEE  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10247  002CF2  C05A  F028         	movff	goback@mR,reverse_square@mR
 10248  002CF6  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10249  002CFA  ECB6  F02A         	call	_reverse_square	;wreg free
 10250  002CFE  C058  F020         	movff	goback@mL,turnRight@mL
 10251  002D02  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10252  002D06  C05A  F022         	movff	goback@mR,turnRight@mR
 10253  002D0A  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10254  002D0E  0E5A               	movlw	90
 10255  002D10  6E24               	movwf	turnRight@angle_right^0,c
 10256  002D12  ECA9  F01F         	call	_turnRight	;wreg free
 10257  002D16  EFF5  F015         	goto	l5271
 10258  002D1A                     l5297:
 10259                           
 10260                           ; BSR set to: 0
 10261  002D1A  51F9               	movf	_array_index& (0+255),w,b
 10262  002D1C  0D02               	mullw	2
 10263  002D1E  0E3C               	movlw	low _memory
 10264  002D20  24F3               	addwf	243,w,c
 10265  002D22  6ED9               	movwf	fsr2l,c
 10266  002D24  0E03               	movlw	high _memory
 10267  002D26  20F4               	addwfc	prodh,w,c
 10268  002D28  6EDA               	movwf	fsr2h,c
 10269  002D2A  0E06               	movlw	6
 10270  002D2C  18DE               	xorwf	postinc2,w,c
 10271  002D2E  10DE               	iorwf	postinc2,w,c
 10272  002D30  A4D8               	btfss	status,2,c
 10273  002D32  EF9D  F016         	goto	u5381
 10274  002D36  EF9F  F016         	goto	u5380
 10275  002D3A                     u5381:
 10276  002D3A  EFAD  F016         	goto	l5303
 10277  002D3E                     u5380:
 10278  002D3E                     
 10279                           ; BSR set to: 0
 10280  002D3E  C058  F020         	movff	goback@mL,turnLeft@mL
 10281  002D42  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10282  002D46  C05A  F022         	movff	goback@mR,turnLeft@mR
 10283  002D4A  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10284  002D4E  0E87               	movlw	135
 10285  002D50  6E24               	movwf	turnLeft@angle_left^0,c
 10286  002D52  EC70  F020         	call	_turnLeft	;wreg free
 10287  002D56  EFF5  F015         	goto	l5271
 10288  002D5A                     l5303:
 10289                           
 10290                           ; BSR set to: 0
 10291  002D5A  51F9               	movf	_array_index& (0+255),w,b
 10292  002D5C  0D02               	mullw	2
 10293  002D5E  0E3C               	movlw	low _memory
 10294  002D60  24F3               	addwf	243,w,c
 10295  002D62  6ED9               	movwf	fsr2l,c
 10296  002D64  0E03               	movlw	high _memory
 10297  002D66  20F4               	addwfc	prodh,w,c
 10298  002D68  6EDA               	movwf	fsr2h,c
 10299  002D6A  0E07               	movlw	7
 10300  002D6C  18DE               	xorwf	postinc2,w,c
 10301  002D6E  10DE               	iorwf	postinc2,w,c
 10302  002D70  A4D8               	btfss	status,2,c
 10303  002D72  EFBD  F016         	goto	u5391
 10304  002D76  EFBF  F016         	goto	u5390
 10305  002D7A                     u5391:
 10306  002D7A  EFCD  F016         	goto	l663
 10307  002D7E                     u5390:
 10308  002D7E                     
 10309                           ; BSR set to: 0
 10310  002D7E  C058  F020         	movff	goback@mL,turnRight@mL
 10311  002D82  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10312  002D86  C05A  F022         	movff	goback@mR,turnRight@mR
 10313  002D8A  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10314  002D8E  0E87               	movlw	135
 10315  002D90  6E24               	movwf	turnRight@angle_right^0,c
 10316  002D92  ECA9  F01F         	call	_turnRight	;wreg free
 10317  002D96  EFF5  F015         	goto	l5271
 10318  002D9A                     l663:
 10319                           
 10320                           ; BSR set to: 0
 10321  002D9A  EF58  F015         	goto	l5233
 10322  002D9E                     l5309:
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;movement.c: 152:     char buf2[100];;movement.c: 153:     sprintf(buf2,"go back finish\
      +                          r\n");
 10326  002D9E  0E00               	movlw	low goback@buf2
 10327  002DA0  6F60               	movwf	sprintf@s& (0+255),b
 10328  002DA2  0E02               	movlw	high goback@buf2
 10329  002DA4  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10330  002DA6  0E05               	movlw	low STR_6
 10331  002DA8  6F62               	movwf	sprintf@fmt& (0+255),b
 10332  002DAA  0E0E               	movlw	high STR_6
 10333  002DAC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10334  002DAE  EC46  F029         	call	_sprintf	;wreg free
 10335  002DB2                     
 10336                           ;movement.c: 154:     sendStringSerial4(buf2);
 10337  002DB2  0E00               	movlw	low goback@buf2
 10338  002DB4  6E02               	movwf	sendStringSerial4@string^0,c
 10339  002DB6  0E02               	movlw	high goback@buf2
 10340  002DB8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10341  002DBA  EC81  F02B         	call	_sendStringSerial4	;wreg free
 10342  002DBE                     l5313:
 10343  002DBE  C058  F01A         	movff	goback@mL,stop@mL
 10344  002DC2  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10345  002DC6  C05A  F01C         	movff	goback@mR,stop@mR
 10346  002DCA  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10347  002DCE  EC62  F027         	call	_stop	;wreg free
 10348  002DD2  EFDF  F016         	goto	l5313
 10349  002DD6  0012               	return		;funcret
 10350  002DD8                     __end_of_goback:
 10351                           	callstack 0
 10352                           
 10353 ;; *************** function _turnRight *****************
 10354 ;; Defined at:
 10355 ;;		line 122 in file "dc_motor.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10358 ;;		 -> main@motorL(10), 
 10359 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10360 ;;		 -> main@motorR(10), 
 10361 ;;  angle_right     1   35[COMRAM] unsigned char 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  i               2   45[COMRAM] unsigned int 
 10364 ;;  i               2   43[COMRAM] unsigned int 
 10365 ;;  i               2   41[COMRAM] unsigned int 
 10366 ;;  delay           2   47[COMRAM] unsigned int 
 10367 ;;  delay_180       2   39[COMRAM] unsigned int 
 10368 ;;  delay_135       2   37[COMRAM] unsigned int 
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      void 
 10371 ;; Registers used:
 10372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 0/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10378 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10381 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10382 ;;Total ram usage:       18 bytes
 10383 ;; Hardware stack levels used: 1
 10384 ;; Hardware stack levels required when called: 4
 10385 ;; This function calls:
 10386 ;;		_setMotorPWM
 10387 ;;		_stop
 10388 ;; This function is called by:
 10389 ;;		_action
 10390 ;;		_goback
 10391 ;;		_test_action
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text49
 10396  003F52                     __ptext49:
 10397                           	callstack 0
 10398  003F52                     _turnRight:
 10399                           	callstack 25
 10400  003F52                     
 10401                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10402  003F52  EE20 F001          	lfsr	2,1
 10403  003F56  5020               	movf	turnRight@mL^0,w,c
 10404  003F58  26D9               	addwf	fsr2l,f,c
 10405  003F5A  5021               	movf	(turnRight@mL+1)^0,w,c
 10406  003F5C  22DA               	addwfc	fsr2h,f,c
 10407  003F5E  0E01               	movlw	1
 10408  003F60  6EDF               	movwf	indf2,c
 10409                           
 10410                           ;dc_motor.c: 125:     mR->direction=1;
 10411  003F62  EE20 F001          	lfsr	2,1
 10412  003F66  5022               	movf	turnRight@mR^0,w,c
 10413  003F68  26D9               	addwf	fsr2l,f,c
 10414  003F6A  5023               	movf	(turnRight@mR+1)^0,w,c
 10415  003F6C  22DA               	addwfc	fsr2h,f,c
 10416  003F6E  0E01               	movlw	1
 10417  003F70  6EDF               	movwf	indf2,c
 10418                           
 10419                           ;dc_motor.c: 126:     while (mL->power <25){
 10420  003F72  EFDA  F01F         	goto	l4667
 10421  003F76                     l4659:
 10422                           
 10423                           ;dc_motor.c: 127:         mL->power += 5;
 10424  003F76  C020  FFD9         	movff	turnRight@mL,fsr2l
 10425  003F7A  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10426  003F7E  0E05               	movlw	5
 10427  003F80  26DF               	addwf	indf2,f,c
 10428                           
 10429                           ;dc_motor.c: 128:         mR->power = 0;
 10430  003F82  C022  FFD9         	movff	turnRight@mR,fsr2l
 10431  003F86  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10432  003F8A  0E00               	movlw	0
 10433  003F8C  6EDF               	movwf	indf2,c
 10434  003F8E                     
 10435                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10436  003F8E  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10437  003F92  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10438  003F96  EC40  F01C         	call	_setMotorPWM	;wreg free
 10439  003F9A                     
 10440                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10441  003F9A  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10442  003F9E  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10443  003FA2  EC40  F01C         	call	_setMotorPWM	;wreg free
 10444  003FA6                     
 10445                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10446  003FA6  0ED0               	movlw	208
 10447  003FA8  6E25               	movwf	??_turnRight^0,c
 10448  003FAA  0ECA               	movlw	202
 10449  003FAC                     u6157:
 10450  003FAC  2EE8               	decfsz	wreg,f,c
 10451  003FAE  D7FE               	bra	u6157
 10452  003FB0  2E25               	decfsz	??_turnRight^0,f,c
 10453  003FB2  D7FC               	bra	u6157
 10454  003FB4                     l4667:
 10455                           
 10456                           ;dc_motor.c: 126:     while (mL->power <25){
 10457  003FB4  C020  FFD9         	movff	turnRight@mL,fsr2l
 10458  003FB8  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10459  003FBC  0E18               	movlw	24
 10460  003FBE  64DF               	cpfsgt	indf2,c
 10461  003FC0  EFE4  F01F         	goto	u4691
 10462  003FC4  EFE6  F01F         	goto	u4690
 10463  003FC8                     u4691:
 10464  003FC8  EFBB  F01F         	goto	l4659
 10465  003FCC                     u4690:
 10466  003FCC                     
 10467                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10468  003FCC  5024               	movf	turnRight@angle_right^0,w,c
 10469  003FCE  0100               	movlb	0	; () banked
 10470  003FD0  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10471  003FD2  CFF3 F030          	movff	prodl,turnRight@delay
 10472  003FD6  CFF4 F031          	movff	prodh,turnRight@delay+1
 10473  003FDA                     
 10474                           ; BSR set to: 0
 10475  003FDA  0E0F               	movlw	15
 10476  003FDC  2430               	addwf	turnRight@delay^0,w,c
 10477  003FDE  6E26               	movwf	turnRight@delay_135^0,c
 10478  003FE0  0E00               	movlw	0
 10479  003FE2  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10480  003FE4  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10481  003FE6                     
 10482                           ; BSR set to: 0
 10483  003FE6  0E0A               	movlw	10
 10484  003FE8  2430               	addwf	turnRight@delay^0,w,c
 10485  003FEA  6E28               	movwf	turnRight@delay_180^0,c
 10486  003FEC  0E00               	movlw	0
 10487  003FEE  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10488  003FF0  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10489  003FF2                     
 10490                           ; BSR set to: 0
 10491                           ;dc_motor.c: 136:     if (angle_right == 180){
 10492  003FF2  0EB4               	movlw	180
 10493  003FF4  1824               	xorwf	turnRight@angle_right^0,w,c
 10494  003FF6  A4D8               	btfss	status,2,c
 10495  003FF8  EF00  F020         	goto	u4701
 10496  003FFC  EF02  F020         	goto	u4700
 10497  004000                     u4701:
 10498  004000  EF1D  F020         	goto	l4683
 10499  004004                     u4700:
 10500  004004                     
 10501                           ; BSR set to: 0
 10502                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10503  004004  0E00               	movlw	0
 10504  004006  6E2B               	movwf	(turnRight@i+1)^0,c
 10505  004008  0E00               	movlw	0
 10506  00400A  6E2A               	movwf	turnRight@i^0,c
 10507  00400C  EF12  F020         	goto	l336
 10508  004010                     l4679:
 10509  004010  0E15               	movlw	21
 10510  004012  6E25               	movwf	??_turnRight^0,c
 10511  004014  0EC6               	movlw	198
 10512  004016                     u6167:
 10513  004016  2EE8               	decfsz	wreg,f,c
 10514  004018  D7FE               	bra	u6167
 10515  00401A  2E25               	decfsz	??_turnRight^0,f,c
 10516  00401C  D7FC               	bra	u6167
 10517  00401E  D000               	nop2	
 10518  004020  4A2A               	infsnz	turnRight@i^0,f,c
 10519  004022  2A2B               	incf	(turnRight@i+1)^0,f,c
 10520  004024                     l336:
 10521  004024  5028               	movf	turnRight@delay_180^0,w,c
 10522  004026  5C2A               	subwf	turnRight@i^0,w,c
 10523  004028  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10524  00402A  582B               	subwfb	(turnRight@i+1)^0,w,c
 10525  00402C  A0D8               	btfss	status,0,c
 10526  00402E  EF1B  F020         	goto	u4711
 10527  004032  EF1D  F020         	goto	u4710
 10528  004036                     u4711:
 10529  004036  EF08  F020         	goto	l4679
 10530  00403A                     u4710:
 10531  00403A                     l4683:
 10532                           
 10533                           ;dc_motor.c: 139:     if (angle_right == 135){
 10534  00403A  0E87               	movlw	135
 10535  00403C  1824               	xorwf	turnRight@angle_right^0,w,c
 10536  00403E  A4D8               	btfss	status,2,c
 10537  004040  EF24  F020         	goto	u4721
 10538  004044  EF26  F020         	goto	u4720
 10539  004048                     u4721:
 10540  004048  EF41  F020         	goto	l4691
 10541  00404C                     u4720:
 10542  00404C                     
 10543                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10544  00404C  0E00               	movlw	0
 10545  00404E  6E2D               	movwf	(turnRight@i_1357+1)^0,c
 10546  004050  0E00               	movlw	0
 10547  004052  6E2C               	movwf	turnRight@i_1357^0,c
 10548  004054  EF36  F020         	goto	l340
 10549  004058                     l4687:
 10550  004058  0E15               	movlw	21
 10551  00405A  6E25               	movwf	??_turnRight^0,c
 10552  00405C  0EC6               	movlw	198
 10553  00405E                     u6177:
 10554  00405E  2EE8               	decfsz	wreg,f,c
 10555  004060  D7FE               	bra	u6177
 10556  004062  2E25               	decfsz	??_turnRight^0,f,c
 10557  004064  D7FC               	bra	u6177
 10558  004066  D000               	nop2	
 10559  004068  4A2C               	infsnz	turnRight@i_1357^0,f,c
 10560  00406A  2A2D               	incf	(turnRight@i_1357+1)^0,f,c
 10561  00406C                     l340:
 10562  00406C  5026               	movf	turnRight@delay_135^0,w,c
 10563  00406E  5C2C               	subwf	turnRight@i_1357^0,w,c
 10564  004070  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10565  004072  582D               	subwfb	(turnRight@i_1357+1)^0,w,c
 10566  004074  A0D8               	btfss	status,0,c
 10567  004076  EF3F  F020         	goto	u4731
 10568  00407A  EF41  F020         	goto	u4730
 10569  00407E                     u4731:
 10570  00407E  EF2C  F020         	goto	l4687
 10571  004082                     u4730:
 10572  004082                     l4691:
 10573                           
 10574                           ;dc_motor.c: 142:     if (angle_right == 90){
 10575  004082  0E5A               	movlw	90
 10576  004084  1824               	xorwf	turnRight@angle_right^0,w,c
 10577  004086  A4D8               	btfss	status,2,c
 10578  004088  EF48  F020         	goto	u4741
 10579  00408C  EF4A  F020         	goto	u4740
 10580  004090                     u4741:
 10581  004090  EF65  F020         	goto	l4699
 10582  004094                     u4740:
 10583  004094                     
 10584                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10585  004094  0E00               	movlw	0
 10586  004096  6E2F               	movwf	(turnRight@i_1358+1)^0,c
 10587  004098  0E00               	movlw	0
 10588  00409A  6E2E               	movwf	turnRight@i_1358^0,c
 10589  00409C  EF5A  F020         	goto	l344
 10590  0040A0                     l4695:
 10591  0040A0  0E15               	movlw	21
 10592  0040A2  6E25               	movwf	??_turnRight^0,c
 10593  0040A4  0EC6               	movlw	198
 10594  0040A6                     u6187:
 10595  0040A6  2EE8               	decfsz	wreg,f,c
 10596  0040A8  D7FE               	bra	u6187
 10597  0040AA  2E25               	decfsz	??_turnRight^0,f,c
 10598  0040AC  D7FC               	bra	u6187
 10599  0040AE  D000               	nop2	
 10600  0040B0  4A2E               	infsnz	turnRight@i_1358^0,f,c
 10601  0040B2  2A2F               	incf	(turnRight@i_1358+1)^0,f,c
 10602  0040B4                     l344:
 10603  0040B4  5030               	movf	turnRight@delay^0,w,c
 10604  0040B6  5C2E               	subwf	turnRight@i_1358^0,w,c
 10605  0040B8  5031               	movf	(turnRight@delay+1)^0,w,c
 10606  0040BA  582F               	subwfb	(turnRight@i_1358+1)^0,w,c
 10607  0040BC  A0D8               	btfss	status,0,c
 10608  0040BE  EF63  F020         	goto	u4751
 10609  0040C2  EF65  F020         	goto	u4750
 10610  0040C6                     u4751:
 10611  0040C6  EF50  F020         	goto	l4695
 10612  0040CA                     u4750:
 10613  0040CA                     l4699:
 10614                           
 10615                           ;dc_motor.c: 145:     stop(mL,mR);
 10616  0040CA  C020  F01A         	movff	turnRight@mL,stop@mL
 10617  0040CE  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10618  0040D2  C022  F01C         	movff	turnRight@mR,stop@mR
 10619  0040D6  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10620  0040DA  EC62  F027         	call	_stop	;wreg free
 10621  0040DE  0012               	return		;funcret
 10622  0040E0                     __end_of_turnRight:
 10623                           	callstack 0
 10624                           
 10625 ;; *************** function _turnLeft *****************
 10626 ;; Defined at:
 10627 ;;		line 95 in file "dc_motor.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10630 ;;		 -> main@motorL(10), 
 10631 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10632 ;;		 -> main@motorR(10), 
 10633 ;;  angle_left      1   35[COMRAM] unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  i               2   45[COMRAM] unsigned int 
 10636 ;;  i               2   43[COMRAM] unsigned int 
 10637 ;;  i               2   41[COMRAM] unsigned int 
 10638 ;;  delay           2   47[COMRAM] unsigned int 
 10639 ;;  delay_180       2   39[COMRAM] unsigned int 
 10640 ;;  delay_135       2   37[COMRAM] unsigned int 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;Total ram usage:       18 bytes
 10655 ;; Hardware stack levels used: 1
 10656 ;; Hardware stack levels required when called: 4
 10657 ;; This function calls:
 10658 ;;		_setMotorPWM
 10659 ;;		_stop
 10660 ;; This function is called by:
 10661 ;;		_action
 10662 ;;		_goback
 10663 ;;		_test_action
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text50
 10668  0040E0                     __ptext50:
 10669                           	callstack 0
 10670  0040E0                     _turnLeft:
 10671                           	callstack 25
 10672  0040E0                     
 10673                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10674  0040E0  EE20 F001          	lfsr	2,1
 10675  0040E4  5020               	movf	turnLeft@mL^0,w,c
 10676  0040E6  26D9               	addwf	fsr2l,f,c
 10677  0040E8  5021               	movf	(turnLeft@mL+1)^0,w,c
 10678  0040EA  22DA               	addwfc	fsr2h,f,c
 10679  0040EC  0E01               	movlw	1
 10680  0040EE  6EDF               	movwf	indf2,c
 10681                           
 10682                           ;dc_motor.c: 98:       mR->direction=1;
 10683  0040F0  EE20 F001          	lfsr	2,1
 10684  0040F4  5022               	movf	turnLeft@mR^0,w,c
 10685  0040F6  26D9               	addwf	fsr2l,f,c
 10686  0040F8  5023               	movf	(turnLeft@mR+1)^0,w,c
 10687  0040FA  22DA               	addwfc	fsr2h,f,c
 10688  0040FC  0E01               	movlw	1
 10689  0040FE  6EDF               	movwf	indf2,c
 10690                           
 10691                           ;dc_motor.c: 99:       while (mR->power <25){
 10692  004100  EFA1  F020         	goto	l4623
 10693  004104                     l4615:
 10694                           
 10695                           ;dc_motor.c: 100:         mR->power += 5;
 10696  004104  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10697  004108  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10698  00410C  0E05               	movlw	5
 10699  00410E  26DF               	addwf	indf2,f,c
 10700                           
 10701                           ;dc_motor.c: 101:         mL->power = 0;
 10702  004110  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10703  004114  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10704  004118  0E00               	movlw	0
 10705  00411A  6EDF               	movwf	indf2,c
 10706  00411C                     
 10707                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10708  00411C  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10709  004120  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10710  004124  EC40  F01C         	call	_setMotorPWM	;wreg free
 10711  004128                     
 10712                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10713  004128  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10714  00412C  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10715  004130  EC40  F01C         	call	_setMotorPWM	;wreg free
 10716  004134                     
 10717                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10718  004134  0ED0               	movlw	208
 10719  004136  6E25               	movwf	??_turnLeft^0,c
 10720  004138  0ECA               	movlw	202
 10721  00413A                     u6197:
 10722  00413A  2EE8               	decfsz	wreg,f,c
 10723  00413C  D7FE               	bra	u6197
 10724  00413E  2E25               	decfsz	??_turnLeft^0,f,c
 10725  004140  D7FC               	bra	u6197
 10726  004142                     l4623:
 10727                           
 10728                           ;dc_motor.c: 99:       while (mR->power <25){
 10729  004142  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10730  004146  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10731  00414A  0E18               	movlw	24
 10732  00414C  64DF               	cpfsgt	indf2,c
 10733  00414E  EFAB  F020         	goto	u4621
 10734  004152  EFAD  F020         	goto	u4620
 10735  004156                     u4621:
 10736  004156  EF82  F020         	goto	l4615
 10737  00415A                     u4620:
 10738  00415A                     
 10739                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 10740  00415A  5024               	movf	turnLeft@angle_left^0,w,c
 10741  00415C  0100               	movlb	0	; () banked
 10742  00415E  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10743  004160  CFF3 F030          	movff	prodl,turnLeft@delay
 10744  004164  CFF4 F031          	movff	prodh,turnLeft@delay+1
 10745  004168                     
 10746                           ; BSR set to: 0
 10747  004168  0E0F               	movlw	15
 10748  00416A  2430               	addwf	turnLeft@delay^0,w,c
 10749  00416C  6E26               	movwf	turnLeft@delay_135^0,c
 10750  00416E  0E00               	movlw	0
 10751  004170  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10752  004172  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 10753  004174                     
 10754                           ; BSR set to: 0
 10755  004174  0E0A               	movlw	10
 10756  004176  2430               	addwf	turnLeft@delay^0,w,c
 10757  004178  6E28               	movwf	turnLeft@delay_180^0,c
 10758  00417A  0E00               	movlw	0
 10759  00417C  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10760  00417E  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 10761  004180                     
 10762                           ; BSR set to: 0
 10763                           ;dc_motor.c: 109:     if (angle_left == 180){
 10764  004180  0EB4               	movlw	180
 10765  004182  1824               	xorwf	turnLeft@angle_left^0,w,c
 10766  004184  A4D8               	btfss	status,2,c
 10767  004186  EFC7  F020         	goto	u4631
 10768  00418A  EFC9  F020         	goto	u4630
 10769  00418E                     u4631:
 10770  00418E  EFE4  F020         	goto	l4639
 10771  004192                     u4630:
 10772  004192                     
 10773                           ; BSR set to: 0
 10774                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10775  004192  0E00               	movlw	0
 10776  004194  6E2B               	movwf	(turnLeft@i+1)^0,c
 10777  004196  0E00               	movlw	0
 10778  004198  6E2A               	movwf	turnLeft@i^0,c
 10779  00419A  EFD9  F020         	goto	l318
 10780  00419E                     l4635:
 10781  00419E  0E15               	movlw	21
 10782  0041A0  6E25               	movwf	??_turnLeft^0,c
 10783  0041A2  0EC6               	movlw	198
 10784  0041A4                     u6207:
 10785  0041A4  2EE8               	decfsz	wreg,f,c
 10786  0041A6  D7FE               	bra	u6207
 10787  0041A8  2E25               	decfsz	??_turnLeft^0,f,c
 10788  0041AA  D7FC               	bra	u6207
 10789  0041AC  D000               	nop2	
 10790  0041AE  4A2A               	infsnz	turnLeft@i^0,f,c
 10791  0041B0  2A2B               	incf	(turnLeft@i+1)^0,f,c
 10792  0041B2                     l318:
 10793  0041B2  5028               	movf	turnLeft@delay_180^0,w,c
 10794  0041B4  5C2A               	subwf	turnLeft@i^0,w,c
 10795  0041B6  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 10796  0041B8  582B               	subwfb	(turnLeft@i+1)^0,w,c
 10797  0041BA  A0D8               	btfss	status,0,c
 10798  0041BC  EFE2  F020         	goto	u4641
 10799  0041C0  EFE4  F020         	goto	u4640
 10800  0041C4                     u4641:
 10801  0041C4  EFCF  F020         	goto	l4635
 10802  0041C8                     u4640:
 10803  0041C8                     l4639:
 10804                           
 10805                           ;dc_motor.c: 112:     if (angle_left == 135){
 10806  0041C8  0E87               	movlw	135
 10807  0041CA  1824               	xorwf	turnLeft@angle_left^0,w,c
 10808  0041CC  A4D8               	btfss	status,2,c
 10809  0041CE  EFEB  F020         	goto	u4651
 10810  0041D2  EFED  F020         	goto	u4650
 10811  0041D6                     u4651:
 10812  0041D6  EF08  F021         	goto	l4647
 10813  0041DA                     u4650:
 10814  0041DA                     
 10815                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10816  0041DA  0E00               	movlw	0
 10817  0041DC  6E2D               	movwf	(turnLeft@i_1332+1)^0,c
 10818  0041DE  0E00               	movlw	0
 10819  0041E0  6E2C               	movwf	turnLeft@i_1332^0,c
 10820  0041E2  EFFD  F020         	goto	l322
 10821  0041E6                     l4643:
 10822  0041E6  0E15               	movlw	21
 10823  0041E8  6E25               	movwf	??_turnLeft^0,c
 10824  0041EA  0EC6               	movlw	198
 10825  0041EC                     u6217:
 10826  0041EC  2EE8               	decfsz	wreg,f,c
 10827  0041EE  D7FE               	bra	u6217
 10828  0041F0  2E25               	decfsz	??_turnLeft^0,f,c
 10829  0041F2  D7FC               	bra	u6217
 10830  0041F4  D000               	nop2	
 10831  0041F6  4A2C               	infsnz	turnLeft@i_1332^0,f,c
 10832  0041F8  2A2D               	incf	(turnLeft@i_1332+1)^0,f,c
 10833  0041FA                     l322:
 10834  0041FA  5026               	movf	turnLeft@delay_135^0,w,c
 10835  0041FC  5C2C               	subwf	turnLeft@i_1332^0,w,c
 10836  0041FE  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 10837  004200  582D               	subwfb	(turnLeft@i_1332+1)^0,w,c
 10838  004202  A0D8               	btfss	status,0,c
 10839  004204  EF06  F021         	goto	u4661
 10840  004208  EF08  F021         	goto	u4660
 10841  00420C                     u4661:
 10842  00420C  EFF3  F020         	goto	l4643
 10843  004210                     u4660:
 10844  004210                     l4647:
 10845                           
 10846                           ;dc_motor.c: 115:     if (angle_left == 90){
 10847  004210  0E5A               	movlw	90
 10848  004212  1824               	xorwf	turnLeft@angle_left^0,w,c
 10849  004214  A4D8               	btfss	status,2,c
 10850  004216  EF0F  F021         	goto	u4671
 10851  00421A  EF11  F021         	goto	u4670
 10852  00421E                     u4671:
 10853  00421E  EF2C  F021         	goto	l4655
 10854  004222                     u4670:
 10855  004222                     
 10856                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10857  004222  0E00               	movlw	0
 10858  004224  6E2F               	movwf	(turnLeft@i_1333+1)^0,c
 10859  004226  0E00               	movlw	0
 10860  004228  6E2E               	movwf	turnLeft@i_1333^0,c
 10861  00422A  EF21  F021         	goto	l326
 10862  00422E                     l4651:
 10863  00422E  0E15               	movlw	21
 10864  004230  6E25               	movwf	??_turnLeft^0,c
 10865  004232  0EC6               	movlw	198
 10866  004234                     u6227:
 10867  004234  2EE8               	decfsz	wreg,f,c
 10868  004236  D7FE               	bra	u6227
 10869  004238  2E25               	decfsz	??_turnLeft^0,f,c
 10870  00423A  D7FC               	bra	u6227
 10871  00423C  D000               	nop2	
 10872  00423E  4A2E               	infsnz	turnLeft@i_1333^0,f,c
 10873  004240  2A2F               	incf	(turnLeft@i_1333+1)^0,f,c
 10874  004242                     l326:
 10875  004242  5030               	movf	turnLeft@delay^0,w,c
 10876  004244  5C2E               	subwf	turnLeft@i_1333^0,w,c
 10877  004246  5031               	movf	(turnLeft@delay+1)^0,w,c
 10878  004248  582F               	subwfb	(turnLeft@i_1333+1)^0,w,c
 10879  00424A  A0D8               	btfss	status,0,c
 10880  00424C  EF2A  F021         	goto	u4681
 10881  004250  EF2C  F021         	goto	u4680
 10882  004254                     u4681:
 10883  004254  EF17  F021         	goto	l4651
 10884  004258                     u4680:
 10885  004258                     l4655:
 10886                           
 10887                           ;dc_motor.c: 118:     stop(mL,mR);
 10888  004258  C020  F01A         	movff	turnLeft@mL,stop@mL
 10889  00425C  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 10890  004260  C022  F01C         	movff	turnLeft@mR,stop@mR
 10891  004264  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 10892  004268  EC62  F027         	call	_stop	;wreg free
 10893  00426C  0012               	return		;funcret
 10894  00426E                     __end_of_turnLeft:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _reverse_square *****************
 10898 ;; Defined at:
 10899 ;;		line 205 in file "dc_motor.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10902 ;;		 -> main@motorL(10), 
 10903 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10904 ;;		 -> main@motorR(10), 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;		None
 10907 ;; Return value:  Size  Location     Type
 10908 ;;                  1    wreg      void 
 10909 ;; Registers used:
 10910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10911 ;; Tracked objects:
 10912 ;;		On entry : 0/0
 10913 ;;		On exit  : 0/0
 10914 ;;		Unchanged: 0/0
 10915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10919 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;Total ram usage:        6 bytes
 10921 ;; Hardware stack levels used: 1
 10922 ;; Hardware stack levels required when called: 5
 10923 ;; This function calls:
 10924 ;;		_fullSpeedBack
 10925 ;;		_stop
 10926 ;; This function is called by:
 10927 ;;		_action
 10928 ;;		_goback
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           	psect	text51
 10933  00556C                     __ptext51:
 10934                           	callstack 0
 10935  00556C                     _reverse_square:
 10936                           	callstack 24
 10937  00556C                     
 10938                           ;dc_motor.c: 205: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 206: { fullSpeedBack(mL, mR);
 10939  00556C  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10940  005570  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10941  005574  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10942  005578  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10943  00557C  EC02  F027         	call	_fullSpeedBack	;wreg free
 10944  005580                     
 10945                           ;dc_motor.c: 207:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 10946  005580  0E7A               	movlw	122
 10947  005582  6E2B               	movwf	(??_reverse_square+1)^0,c
 10948  005584  0EC1               	movlw	193
 10949  005586  6E2A               	movwf	??_reverse_square^0,c
 10950  005588  0E82               	movlw	130
 10951  00558A                     u6237:
 10952  00558A  2EE8               	decfsz	wreg,f,c
 10953  00558C  D7FE               	bra	u6237
 10954  00558E  2E2A               	decfsz	??_reverse_square^0,f,c
 10955  005590  D7FC               	bra	u6237
 10956  005592  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10957  005594  D7FA               	bra	u6237
 10958  005596                     
 10959                           ;dc_motor.c: 208:     stop(mL,mR);
 10960  005596  C026  F01A         	movff	reverse_square@mL,stop@mL
 10961  00559A  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10962  00559E  C028  F01C         	movff	reverse_square@mR,stop@mR
 10963  0055A2  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10964  0055A6  EC62  F027         	call	_stop	;wreg free
 10965  0055AA  0012               	return		;funcret
 10966  0055AC                     __end_of_reverse_square:
 10967                           	callstack 0
 10968                           
 10969 ;; *************** function _fullSpeedBack *****************
 10970 ;; Defined at:
 10971 ;;		line 168 in file "dc_motor.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10974 ;;		 -> main@motorL(10), 
 10975 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10976 ;;		 -> main@motorR(10), 
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  1    wreg      void 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10992 ;;Total ram usage:        6 bytes
 10993 ;; Hardware stack levels used: 1
 10994 ;; Hardware stack levels required when called: 4
 10995 ;; This function calls:
 10996 ;;		_setMotorPWM
 10997 ;;		_stop
 10998 ;; This function is called by:
 10999 ;;		_short_reverse
 11000 ;;		_reverse_square
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text52
 11005  004E04                     __ptext52:
 11006                           	callstack 0
 11007  004E04                     _fullSpeedBack:
 11008                           	callstack 24
 11009  004E04                     
 11010                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11011  004E04  EE20 F001          	lfsr	2,1
 11012  004E08  5020               	movf	fullSpeedBack@mL^0,w,c
 11013  004E0A  26D9               	addwf	fsr2l,f,c
 11014  004E0C  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11015  004E0E  22DA               	addwfc	fsr2h,f,c
 11016  004E10  0E00               	movlw	0
 11017  004E12  6EDF               	movwf	indf2,c
 11018                           
 11019                           ;dc_motor.c: 171:     mR->direction=0;
 11020  004E14  EE20 F001          	lfsr	2,1
 11021  004E18  5022               	movf	fullSpeedBack@mR^0,w,c
 11022  004E1A  26D9               	addwf	fsr2l,f,c
 11023  004E1C  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11024  004E1E  22DA               	addwfc	fsr2h,f,c
 11025  004E20  0E00               	movlw	0
 11026  004E22  6EDF               	movwf	indf2,c
 11027                           
 11028                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11029  004E24  EF33  F027         	goto	l4439
 11030  004E28                     l4431:
 11031                           
 11032                           ;dc_motor.c: 173:         mL->power += 10;
 11033  004E28  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11034  004E2C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11035  004E30  0E0A               	movlw	10
 11036  004E32  26DF               	addwf	indf2,f,c
 11037                           
 11038                           ;dc_motor.c: 174:         mR->power += 10;
 11039  004E34  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11040  004E38  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11041  004E3C  0E0A               	movlw	10
 11042  004E3E  26DF               	addwf	indf2,f,c
 11043  004E40                     
 11044                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11045  004E40  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11046  004E44  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11047  004E48  EC40  F01C         	call	_setMotorPWM	;wreg free
 11048  004E4C                     
 11049                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11050  004E4C  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11051  004E50  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11052  004E54  EC40  F01C         	call	_setMotorPWM	;wreg free
 11053  004E58                     
 11054                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11055  004E58  0ED0               	movlw	208
 11056  004E5A  6E24               	movwf	??_fullSpeedBack^0,c
 11057  004E5C  0ECA               	movlw	202
 11058  004E5E                     u6247:
 11059  004E5E  2EE8               	decfsz	wreg,f,c
 11060  004E60  D7FE               	bra	u6247
 11061  004E62  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11062  004E64  D7FC               	bra	u6247
 11063  004E66                     l4439:
 11064                           
 11065                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11066  004E66  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11067  004E6A  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11068  004E6E  0E32               	movlw	50
 11069  004E70  60DF               	cpfslt	indf2,c
 11070  004E72  EF3D  F027         	goto	u4161
 11071  004E76  EF3F  F027         	goto	u4160
 11072  004E7A                     u4161:
 11073  004E7A  EF4B  F027         	goto	l4443
 11074  004E7E                     u4160:
 11075  004E7E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11076  004E82  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11077  004E86  0E31               	movlw	49
 11078  004E88  64DF               	cpfsgt	indf2,c
 11079  004E8A  EF49  F027         	goto	u4171
 11080  004E8E  EF4B  F027         	goto	u4170
 11081  004E92                     u4171:
 11082  004E92  EF14  F027         	goto	l4431
 11083  004E96                     u4170:
 11084  004E96                     l4443:
 11085                           
 11086                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11087  004E96  0E29               	movlw	41
 11088  004E98  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11089  004E9A  0E96               	movlw	150
 11090  004E9C  6E24               	movwf	??_fullSpeedBack^0,c
 11091  004E9E  0E7F               	movlw	127
 11092  004EA0                     u6257:
 11093  004EA0  2EE8               	decfsz	wreg,f,c
 11094  004EA2  D7FE               	bra	u6257
 11095  004EA4  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11096  004EA6  D7FC               	bra	u6257
 11097  004EA8  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11098  004EAA  D7FA               	bra	u6257
 11099  004EAC  F000               	nop	
 11100  004EAE                     
 11101                           ;dc_motor.c: 180:     stop(mL,mR);
 11102  004EAE  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11103  004EB2  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11104  004EB6  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11105  004EBA  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11106  004EBE  EC62  F027         	call	_stop	;wreg free
 11107  004EC2  0012               	return		;funcret
 11108  004EC4                     __end_of_fullSpeedBack:
 11109                           	callstack 0
 11110                           
 11111 ;; *************** function _stop *****************
 11112 ;; Defined at:
 11113 ;;		line 82 in file "dc_motor.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11116 ;;		 -> main@motorL(10), 
 11117 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11118 ;;		 -> main@motorR(10), 
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;		None
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11134 ;;Total ram usage:        6 bytes
 11135 ;; Hardware stack levels used: 1
 11136 ;; Hardware stack levels required when called: 3
 11137 ;; This function calls:
 11138 ;;		_setMotorPWM
 11139 ;; This function is called by:
 11140 ;;		_turnLeft
 11141 ;;		_turnRight
 11142 ;;		_fullSpeedBack
 11143 ;;		_short_reverse
 11144 ;;		_reverse_square
 11145 ;;		_main
 11146 ;;		_goback
 11147 ;;		_test_function
 11148 ;;		_fullSpeedAhead_test
 11149 ;;		_halfSpeedBack
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text53
 11154  004EC4                     __ptext53:
 11155                           	callstack 0
 11156  004EC4                     _stop:
 11157                           	callstack 26
 11158  004EC4                     
 11159                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11160  004EC4  EF9B  F027         	goto	l4201
 11161  004EC8                     l4187:
 11162                           
 11163                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11164  004EC8  C01A  FFD9         	movff	stop@mL,fsr2l
 11165  004ECC  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11166  004ED0  50DF               	movf	indf2,w,c
 11167  004ED2  B4D8               	btfsc	status,2,c
 11168  004ED4  EF6E  F027         	goto	u3841
 11169  004ED8  EF70  F027         	goto	u3840
 11170  004EDC                     u3841:
 11171  004EDC  EF76  F027         	goto	l4191
 11172  004EE0                     u3840:
 11173  004EE0  C01A  FFD9         	movff	stop@mL,fsr2l
 11174  004EE4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11175  004EE8  0E05               	movlw	5
 11176  004EEA  5EDF               	subwf	indf2,f,c
 11177  004EEC                     l4191:
 11178                           
 11179                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11180  004EEC  C01C  FFD9         	movff	stop@mR,fsr2l
 11181  004EF0  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11182  004EF4  50DF               	movf	indf2,w,c
 11183  004EF6  B4D8               	btfsc	status,2,c
 11184  004EF8  EF80  F027         	goto	u3851
 11185  004EFC  EF82  F027         	goto	u3850
 11186  004F00                     u3851:
 11187  004F00  EF88  F027         	goto	l4195
 11188  004F04                     u3850:
 11189  004F04  C01C  FFD9         	movff	stop@mR,fsr2l
 11190  004F08  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11191  004F0C  0E05               	movlw	5
 11192  004F0E  5EDF               	subwf	indf2,f,c
 11193  004F10                     l4195:
 11194                           
 11195                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11196  004F10  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11197  004F14  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11198  004F18  EC40  F01C         	call	_setMotorPWM	;wreg free
 11199  004F1C                     
 11200                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11201  004F1C  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11202  004F20  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11203  004F24  EC40  F01C         	call	_setMotorPWM	;wreg free
 11204  004F28                     
 11205                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11206  004F28  0ED0               	movlw	208
 11207  004F2A  6E1E               	movwf	??_stop^0,c
 11208  004F2C  0ECA               	movlw	202
 11209  004F2E                     u6267:
 11210  004F2E  2EE8               	decfsz	wreg,f,c
 11211  004F30  D7FE               	bra	u6267
 11212  004F32  2E1E               	decfsz	??_stop^0,f,c
 11213  004F34  D7FC               	bra	u6267
 11214  004F36                     l4201:
 11215                           
 11216                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11217  004F36  C01A  FFD9         	movff	stop@mL,fsr2l
 11218  004F3A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11219  004F3E  50DF               	movf	indf2,w,c
 11220  004F40  A4D8               	btfss	status,2,c
 11221  004F42  EFA5  F027         	goto	u3861
 11222  004F46  EFA7  F027         	goto	u3860
 11223  004F4A                     u3861:
 11224  004F4A  EF64  F027         	goto	l4187
 11225  004F4E                     u3860:
 11226  004F4E  C01C  FFD9         	movff	stop@mR,fsr2l
 11227  004F52  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11228  004F56  50DF               	movf	indf2,w,c
 11229  004F58  A4D8               	btfss	status,2,c
 11230  004F5A  EFB1  F027         	goto	u3871
 11231  004F5E  EFB3  F027         	goto	u3870
 11232  004F62                     u3871:
 11233  004F62  EF64  F027         	goto	l4187
 11234  004F66                     u3870:
 11235  004F66                     
 11236                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11237  004F66  0E29               	movlw	41
 11238  004F68  6E1F               	movwf	(??_stop+1)^0,c
 11239  004F6A  0E96               	movlw	150
 11240  004F6C  6E1E               	movwf	??_stop^0,c
 11241  004F6E  0E7F               	movlw	127
 11242  004F70                     u6277:
 11243  004F70  2EE8               	decfsz	wreg,f,c
 11244  004F72  D7FE               	bra	u6277
 11245  004F74  2E1E               	decfsz	??_stop^0,f,c
 11246  004F76  D7FC               	bra	u6277
 11247  004F78  2E1F               	decfsz	(??_stop+1)^0,f,c
 11248  004F7A  D7FA               	bra	u6277
 11249  004F7C  F000               	nop	
 11250  004F7E  0012               	return		;funcret
 11251  004F80                     __end_of_stop:
 11252                           	callstack 0
 11253                           
 11254 ;; *************** function _fullSpeedAhead *****************
 11255 ;; Defined at:
 11256 ;;		line 149 in file "dc_motor.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11259 ;;		 -> main@motorL(10), 
 11260 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11261 ;;		 -> main@motorR(10), 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;Total ram usage:        5 bytes
 11278 ;; Hardware stack levels used: 1
 11279 ;; Hardware stack levels required when called: 3
 11280 ;; This function calls:
 11281 ;;		_setMotorPWM
 11282 ;; This function is called by:
 11283 ;;		_main
 11284 ;;		_short_burst_back
 11285 ;;		_goback
 11286 ;;		_test_function
 11287 ;;		_fullSpeedAhead_test
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text54
 11292  004F80                     __ptext54:
 11293                           	callstack 0
 11294  004F80                     _fullSpeedAhead:
 11295                           	callstack 26
 11296  004F80                     
 11297                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11298  004F80  EE20 F001          	lfsr	2,1
 11299  004F84  501A               	movf	fullSpeedAhead@mL^0,w,c
 11300  004F86  26D9               	addwf	fsr2l,f,c
 11301  004F88  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11302  004F8A  22DA               	addwfc	fsr2h,f,c
 11303  004F8C  0E01               	movlw	1
 11304  004F8E  6EDF               	movwf	indf2,c
 11305                           
 11306                           ;dc_motor.c: 152:     mR->direction=1;
 11307  004F90  EE20 F001          	lfsr	2,1
 11308  004F94  501C               	movf	fullSpeedAhead@mR^0,w,c
 11309  004F96  26D9               	addwf	fsr2l,f,c
 11310  004F98  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11311  004F9A  22DA               	addwfc	fsr2h,f,c
 11312  004F9C  0E01               	movlw	1
 11313  004F9E  6EDF               	movwf	indf2,c
 11314                           
 11315                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11316  004FA0  EFF1  F027         	goto	l4711
 11317  004FA4                     l4703:
 11318                           
 11319                           ;dc_motor.c: 154:         mL->power += 10;
 11320  004FA4  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11321  004FA8  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11322  004FAC  0E0A               	movlw	10
 11323  004FAE  26DF               	addwf	indf2,f,c
 11324                           
 11325                           ;dc_motor.c: 155:         mR->power += 10;
 11326  004FB0  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11327  004FB4  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11328  004FB8  0E0A               	movlw	10
 11329  004FBA  26DF               	addwf	indf2,f,c
 11330  004FBC                     
 11331                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11332  004FBC  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11333  004FC0  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11334  004FC4  EC40  F01C         	call	_setMotorPWM	;wreg free
 11335  004FC8                     
 11336                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11337  004FC8  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11338  004FCC  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11339  004FD0  EC40  F01C         	call	_setMotorPWM	;wreg free
 11340  004FD4                     
 11341                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11342  004FD4  0ED0               	movlw	208
 11343  004FD6  6E1E               	movwf	??_fullSpeedAhead^0,c
 11344  004FD8  0ECA               	movlw	202
 11345  004FDA                     u6287:
 11346  004FDA  2EE8               	decfsz	wreg,f,c
 11347  004FDC  D7FE               	bra	u6287
 11348  004FDE  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11349  004FE0  D7FC               	bra	u6287
 11350  004FE2                     l4711:
 11351                           
 11352                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11353  004FE2  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11354  004FE6  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11355  004FEA  0E14               	movlw	20
 11356  004FEC  60DF               	cpfslt	indf2,c
 11357  004FEE  EFFB  F027         	goto	u4761
 11358  004FF2  EFFD  F027         	goto	u4760
 11359  004FF6                     u4761:
 11360  004FF6  EF09  F028         	goto	l355
 11361  004FFA                     u4760:
 11362  004FFA  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11363  004FFE  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11364  005002  0E13               	movlw	19
 11365  005004  64DF               	cpfsgt	indf2,c
 11366  005006  EF07  F028         	goto	u4771
 11367  00500A  EF09  F028         	goto	u4770
 11368  00500E                     u4771:
 11369  00500E  EFD2  F027         	goto	l4703
 11370  005012                     u4770:
 11371  005012                     l355:
 11372  005012  0012               	return		;funcret
 11373  005014                     __end_of_fullSpeedAhead:
 11374                           	callstack 0
 11375                           
 11376 ;; *************** function _setMotorPWM *****************
 11377 ;; Defined at:
 11378 ;;		line 59 in file "dc_motor.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11381 ;;		 -> main@motorR(10), main@motorL(10), 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  PWMduty         2   23[COMRAM] int 
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      void 
 11386 ;; Registers used:
 11387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11395 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11396 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11397 ;;Total ram usage:       11 bytes
 11398 ;; Hardware stack levels used: 1
 11399 ;; Hardware stack levels required when called: 2
 11400 ;; This function calls:
 11401 ;;		___awdiv
 11402 ;;		___wmul
 11403 ;; This function is called by:
 11404 ;;		_stop
 11405 ;;		_turnLeft
 11406 ;;		_turnRight
 11407 ;;		_fullSpeedAhead
 11408 ;;		_fullSpeedBack
 11409 ;;		_halfSpeedBack
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text55
 11414  003880                     __ptext55:
 11415                           	callstack 0
 11416  003880                     _setMotorPWM:
 11417                           	callstack 26
 11418  003880                     
 11419                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11420  003880  EE20 F001          	lfsr	2,1
 11421  003884  500F               	movf	setMotorPWM@m^0,w,c
 11422  003886  26D9               	addwf	fsr2l,f,c
 11423  003888  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11424  00388A  22DA               	addwfc	fsr2h,f,c
 11425  00388C  50DF               	movf	indf2,w,c
 11426  00388E  B4D8               	btfsc	status,2,c
 11427  003890  EF4C  F01C         	goto	u3351
 11428  003894  EF4E  F01C         	goto	u3350
 11429  003898                     u3351:
 11430  003898  EF7F  F01C         	goto	l3901
 11431  00389C                     u3350:
 11432  00389C                     
 11433                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11434  00389C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11435  0038A0  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11436  0038A4  50DF               	movf	indf2,w,c
 11437  0038A6  6E11               	movwf	??_setMotorPWM^0,c
 11438  0038A8  5011               	movf	??_setMotorPWM^0,w,c
 11439  0038AA  6E01               	movwf	___wmul@multiplier^0,c
 11440  0038AC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11441  0038AE  EE20 F007          	lfsr	2,7
 11442  0038B2  500F               	movf	setMotorPWM@m^0,w,c
 11443  0038B4  26D9               	addwf	fsr2l,f,c
 11444  0038B6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11445  0038B8  22DA               	addwfc	fsr2h,f,c
 11446  0038BA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11447  0038BE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11448  0038C2  ECEF  F02B         	call	___wmul	;wreg free
 11449  0038C6  C001  F007         	movff	?___wmul,___awdiv@dividend
 11450  0038CA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11451  0038CE  0E00               	movlw	0
 11452  0038D0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11453  0038D2  0E64               	movlw	100
 11454  0038D4  6E09               	movwf	___awdiv@divisor^0,c
 11455  0038D6  ECA0  F026         	call	___awdiv	;wreg free
 11456  0038DA  EE20 F007          	lfsr	2,7
 11457  0038DE  500F               	movf	setMotorPWM@m^0,w,c
 11458  0038E0  26D9               	addwf	fsr2l,f,c
 11459  0038E2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11460  0038E4  22DA               	addwfc	fsr2h,f,c
 11461  0038E6  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11462  0038EA  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11463  0038EE  5007               	movf	?___awdiv^0,w,c
 11464  0038F0  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11465  0038F2  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11466  0038F4  5008               	movf	(?___awdiv+1)^0,w,c
 11467  0038F6  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11468  0038F8  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11469                           
 11470                           ;dc_motor.c: 66:  }
 11471  0038FA  EFA2  F01C         	goto	l3903
 11472  0038FE                     l3901:
 11473                           
 11474                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11475  0038FE  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11476  003902  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11477  003906  50DF               	movf	indf2,w,c
 11478  003908  6E11               	movwf	??_setMotorPWM^0,c
 11479  00390A  5011               	movf	??_setMotorPWM^0,w,c
 11480  00390C  6E01               	movwf	___wmul@multiplier^0,c
 11481  00390E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11482  003910  EE20 F007          	lfsr	2,7
 11483  003914  500F               	movf	setMotorPWM@m^0,w,c
 11484  003916  26D9               	addwf	fsr2l,f,c
 11485  003918  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11486  00391A  22DA               	addwfc	fsr2h,f,c
 11487  00391C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11488  003920  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11489  003924  ECEF  F02B         	call	___wmul	;wreg free
 11490  003928  C001  F007         	movff	?___wmul,___awdiv@dividend
 11491  00392C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11492  003930  0E00               	movlw	0
 11493  003932  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11494  003934  0E64               	movlw	100
 11495  003936  6E09               	movwf	___awdiv@divisor^0,c
 11496  003938  ECA0  F026         	call	___awdiv	;wreg free
 11497  00393C  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11498  003940  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11499  003944                     l3903:
 11500                           
 11501                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11502  003944  EE20 F002          	lfsr	2,2
 11503  003948  500F               	movf	setMotorPWM@m^0,w,c
 11504  00394A  26D9               	addwf	fsr2l,f,c
 11505  00394C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11506  00394E  22DA               	addwfc	fsr2h,f,c
 11507  003950  CFDE F011          	movff	postinc2,??_setMotorPWM
 11508  003954  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11509  003958  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11510  00395C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11511  003960  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11512  003964                     
 11513                           ;dc_motor.c: 74:  if (m->direction){
 11514  003964  EE20 F001          	lfsr	2,1
 11515  003968  500F               	movf	setMotorPWM@m^0,w,c
 11516  00396A  26D9               	addwf	fsr2l,f,c
 11517  00396C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11518  00396E  22DA               	addwfc	fsr2h,f,c
 11519  003970  50DF               	movf	indf2,w,c
 11520  003972  B4D8               	btfsc	status,2,c
 11521  003974  EFBE  F01C         	goto	u3361
 11522  003978  EFC0  F01C         	goto	u3360
 11523  00397C                     u3361:
 11524  00397C  EFF5  F01C         	goto	l3909
 11525  003980                     u3360:
 11526  003980                     
 11527                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11528  003980  EE20 F004          	lfsr	2,4
 11529  003984  500F               	movf	setMotorPWM@m^0,w,c
 11530  003986  26D9               	addwf	fsr2l,f,c
 11531  003988  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11532  00398A  22DA               	addwfc	fsr2h,f,c
 11533  00398C  CFDE F011          	movff	postinc2,??_setMotorPWM
 11534  003990  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11535  003994  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11536  003998  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11537  00399C  EE10 F004          	lfsr	1,4
 11538  0039A0  500F               	movf	setMotorPWM@m^0,w,c
 11539  0039A2  26E1               	addwf	fsr1l,f,c
 11540  0039A4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11541  0039A6  22E2               	addwfc	fsr1h,f,c
 11542  0039A8  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11543  0039AC  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11544  0039B0  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11545  0039B4  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11546  0039B8  50E7               	movf	indf1,w,c
 11547  0039BA  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11548  0039BC  EE10 F006          	lfsr	1,6
 11549  0039C0  500F               	movf	setMotorPWM@m^0,w,c
 11550  0039C2  26E1               	addwf	fsr1l,f,c
 11551  0039C4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11552  0039C6  22E2               	addwfc	fsr1h,f,c
 11553  0039C8  50E7               	movf	indf1,w,c
 11554  0039CA  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11555  0039CC  0E01               	movlw	1
 11556  0039CE  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11557  0039D0  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11558  0039D2  EFED  F01C         	goto	u3374
 11559  0039D6                     u3375:
 11560  0039D6  90D8               	bcf	status,0,c
 11561  0039D8  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11562  0039DA                     u3374:
 11563  0039DA  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11564  0039DC  EFEB  F01C         	goto	u3375
 11565  0039E0  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11566  0039E2  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11567  0039E4  6EDF               	movwf	indf2,c
 11568                           
 11569                           ;dc_motor.c: 76:  } else {
 11570  0039E6  EF29  F01D         	goto	l303
 11571  0039EA                     l3909:
 11572                           
 11573                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11574  0039EA  EE20 F004          	lfsr	2,4
 11575  0039EE  500F               	movf	setMotorPWM@m^0,w,c
 11576  0039F0  26D9               	addwf	fsr2l,f,c
 11577  0039F2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11578  0039F4  22DA               	addwfc	fsr2h,f,c
 11579  0039F6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11580  0039FA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11581  0039FE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11582  003A02  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11583  003A06  EE10 F004          	lfsr	1,4
 11584  003A0A  500F               	movf	setMotorPWM@m^0,w,c
 11585  003A0C  26E1               	addwf	fsr1l,f,c
 11586  003A0E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11587  003A10  22E2               	addwfc	fsr1h,f,c
 11588  003A12  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11589  003A16  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11590  003A1A  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11591  003A1E  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11592  003A22  50E7               	movf	indf1,w,c
 11593  003A24  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11594  003A26  EE10 F006          	lfsr	1,6
 11595  003A2A  500F               	movf	setMotorPWM@m^0,w,c
 11596  003A2C  26E1               	addwf	fsr1l,f,c
 11597  003A2E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11598  003A30  22E2               	addwfc	fsr1h,f,c
 11599  003A32  50E7               	movf	indf1,w,c
 11600  003A34  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11601  003A36  0E01               	movlw	1
 11602  003A38  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11603  003A3A  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11604  003A3C  EF22  F01D         	goto	u3384
 11605  003A40                     u3385:
 11606  003A40  90D8               	bcf	status,0,c
 11607  003A42  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11608  003A44                     u3384:
 11609  003A44  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11610  003A46  EF20  F01D         	goto	u3385
 11611  003A4A  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11612  003A4C  0AFF               	xorlw	255
 11613  003A4E  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11614  003A50  6EDF               	movwf	indf2,c
 11615  003A52                     l303:
 11616  003A52  0012               	return		;funcret
 11617  003A54                     __end_of_setMotorPWM:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function ___wmul *****************
 11621 ;; Defined at:
 11622 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  multiplier      2    0[COMRAM] unsigned int 
 11625 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  product         2    4[COMRAM] unsigned int 
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  2    0[COMRAM] unsigned int 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, status,0, prodl, prodh
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11641 ;;Total ram usage:        6 bytes
 11642 ;; Hardware stack levels used: 1
 11643 ;; Hardware stack levels required when called: 1
 11644 ;; This function calls:
 11645 ;;		Nothing
 11646 ;; This function is called by:
 11647 ;;		_setMotorPWM
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text56
 11652  0057DE                     __ptext56:
 11653                           	callstack 0
 11654  0057DE                     ___wmul:
 11655                           	callstack 26
 11656  0057DE  5001               	movf	___wmul@multiplier^0,w,c
 11657  0057E0  0203               	mulwf	___wmul@multiplicand^0,c
 11658  0057E2  CFF3 F005          	movff	prodl,___wmul@product
 11659  0057E6  CFF4 F006          	movff	prodh,___wmul@product+1
 11660  0057EA  5001               	movf	___wmul@multiplier^0,w,c
 11661  0057EC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11662  0057EE  50F3               	movf	243,w,c
 11663  0057F0  2606               	addwf	(___wmul@product+1)^0,f,c
 11664  0057F2  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11665  0057F4  0203               	mulwf	___wmul@multiplicand^0,c
 11666  0057F6  50F3               	movf	243,w,c
 11667  0057F8  2606               	addwf	(___wmul@product+1)^0,f,c
 11668  0057FA  C005  F001         	movff	___wmul@product,?___wmul
 11669  0057FE  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11670  005802  0012               	return		;funcret
 11671  005804                     __end_of___wmul:
 11672                           	callstack 0
 11673                           
 11674 ;; *************** function ___awdiv *****************
 11675 ;; Defined at:
 11676 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  dividend        2    6[COMRAM] int 
 11679 ;;  divisor         2    8[COMRAM] int 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  quotient        2   12[COMRAM] int 
 11682 ;;  sign            1   11[COMRAM] unsigned char 
 11683 ;;  counter         1   10[COMRAM] unsigned char 
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  2    6[COMRAM] int 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2, status,0
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;Total ram usage:        8 bytes
 11698 ;; Hardware stack levels used: 1
 11699 ;; Hardware stack levels required when called: 1
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_setMotorPWM
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           	psect	text57
 11708  004D40                     __ptext57:
 11709                           	callstack 0
 11710  004D40                     ___awdiv:
 11711                           	callstack 26
 11712  004D40  0E00               	movlw	0
 11713  004D42  6E0C               	movwf	___awdiv@sign^0,c
 11714  004D44  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11715  004D46  EFA9  F026         	goto	u3120
 11716  004D4A  EFA7  F026         	goto	u3121
 11717  004D4E                     u3121:
 11718  004D4E  EFAF  F026         	goto	l3795
 11719  004D52                     u3120:
 11720  004D52  6C09               	negf	___awdiv@divisor^0,c
 11721  004D54  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11722  004D56  B0D8               	btfsc	status,0,c
 11723  004D58  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11724  004D5A  0E01               	movlw	1
 11725  004D5C  6E0C               	movwf	___awdiv@sign^0,c
 11726  004D5E                     l3795:
 11727  004D5E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11728  004D60  EFB6  F026         	goto	u3130
 11729  004D64  EFB4  F026         	goto	u3131
 11730  004D68                     u3131:
 11731  004D68  EFBC  F026         	goto	l3801
 11732  004D6C                     u3130:
 11733  004D6C  6C07               	negf	___awdiv@dividend^0,c
 11734  004D6E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11735  004D70  B0D8               	btfsc	status,0,c
 11736  004D72  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11737  004D74  0E01               	movlw	1
 11738  004D76  1A0C               	xorwf	___awdiv@sign^0,f,c
 11739  004D78                     l3801:
 11740  004D78  0E00               	movlw	0
 11741  004D7A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11742  004D7C  0E00               	movlw	0
 11743  004D7E  6E0D               	movwf	___awdiv@quotient^0,c
 11744  004D80  5009               	movf	___awdiv@divisor^0,w,c
 11745  004D82  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11746  004D84  B4D8               	btfsc	status,2,c
 11747  004D86  EFC7  F026         	goto	u3141
 11748  004D8A  EFC9  F026         	goto	u3140
 11749  004D8E                     u3141:
 11750  004D8E  EFF1  F026         	goto	l3823
 11751  004D92                     u3140:
 11752  004D92  0E01               	movlw	1
 11753  004D94  6E0B               	movwf	___awdiv@counter^0,c
 11754  004D96  EFD1  F026         	goto	l3809
 11755  004D9A                     l3807:
 11756  004D9A  90D8               	bcf	status,0,c
 11757  004D9C  3609               	rlcf	___awdiv@divisor^0,f,c
 11758  004D9E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11759  004DA0  2A0B               	incf	___awdiv@counter^0,f,c
 11760  004DA2                     l3809:
 11761  004DA2  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11762  004DA4  EFD6  F026         	goto	u3151
 11763  004DA8  EFD8  F026         	goto	u3150
 11764  004DAC                     u3151:
 11765  004DAC  EFCD  F026         	goto	l3807
 11766  004DB0                     u3150:
 11767  004DB0                     l3811:
 11768  004DB0  90D8               	bcf	status,0,c
 11769  004DB2  360D               	rlcf	___awdiv@quotient^0,f,c
 11770  004DB4  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11771  004DB6  5009               	movf	___awdiv@divisor^0,w,c
 11772  004DB8  5C07               	subwf	___awdiv@dividend^0,w,c
 11773  004DBA  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11774  004DBC  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11775  004DBE  A0D8               	btfss	status,0,c
 11776  004DC0  EFE4  F026         	goto	u3161
 11777  004DC4  EFE6  F026         	goto	u3160
 11778  004DC8                     u3161:
 11779  004DC8  EFEB  F026         	goto	l3819
 11780  004DCC                     u3160:
 11781  004DCC  5009               	movf	___awdiv@divisor^0,w,c
 11782  004DCE  5E07               	subwf	___awdiv@dividend^0,f,c
 11783  004DD0  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11784  004DD2  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11785  004DD4  800D               	bsf	___awdiv@quotient^0,0,c
 11786  004DD6                     l3819:
 11787  004DD6  90D8               	bcf	status,0,c
 11788  004DD8  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11789  004DDA  3209               	rrcf	___awdiv@divisor^0,f,c
 11790  004DDC  2E0B               	decfsz	___awdiv@counter^0,f,c
 11791  004DDE  EFD8  F026         	goto	l3811
 11792  004DE2                     l3823:
 11793  004DE2  500C               	movf	___awdiv@sign^0,w,c
 11794  004DE4  B4D8               	btfsc	status,2,c
 11795  004DE6  EFF7  F026         	goto	u3171
 11796  004DEA  EFF9  F026         	goto	u3170
 11797  004DEE                     u3171:
 11798  004DEE  EFFD  F026         	goto	l3827
 11799  004DF2                     u3170:
 11800  004DF2  6C0D               	negf	___awdiv@quotient^0,c
 11801  004DF4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11802  004DF6  B0D8               	btfsc	status,0,c
 11803  004DF8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11804  004DFA                     l3827:
 11805  004DFA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11806  004DFE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11807  004E02  0012               	return		;funcret
 11808  004E04                     __end_of___awdiv:
 11809                           	callstack 0
 11810                           
 11811 ;; *************** function _color_predict *****************
 11812 ;; Defined at:
 11813 ;;		line 250 in file "color.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  color           1    wreg     unsigned char 
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;  color           1  125[BANK0 ] unsigned char 
 11818 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11829 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;Total ram usage:      101 bytes
 11833 ;; Hardware stack levels used: 1
 11834 ;; Hardware stack levels required when called: 9
 11835 ;; This function calls:
 11836 ;;		_sendStringSerial4
 11837 ;;		_sprintf
 11838 ;; This function is called by:
 11839 ;;		_color_data_collection
 11840 ;;		_main
 11841 ;;		_goback
 11842 ;;		_test_function
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text58
 11847  005732                     __ptext58:
 11848                           	callstack 0
 11849  005732                     _color_predict:
 11850                           	callstack 20
 11851                           
 11852                           ;incstack = 0
 11853                           ;color_predict@color stored from wreg
 11854  005732  0100               	movlb	0	; () banked
 11855  005734  6FDD               	movwf	color_predict@color& (0+255),b
 11856  005736                     
 11857                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 11858  005736  0E79               	movlw	low color_predict@buf
 11859  005738  0100               	movlb	0	; () banked
 11860  00573A  6F60               	movwf	sprintf@s& (0+255),b
 11861  00573C  0E00               	movlw	high color_predict@buf
 11862  00573E  6F61               	movwf	(sprintf@s+1)& (0+255),b
 11863  005740  0E1E               	movlw	low (STR_1+8)
 11864  005742  6F62               	movwf	sprintf@fmt& (0+255),b
 11865  005744  0E0E               	movlw	high (STR_1+8)
 11866  005746  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 11867  005748  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 11868  00574C  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11869  00574E  EC46  F029         	call	_sprintf	;wreg free
 11870  005752                     
 11871                           ;color.c: 254:     sendStringSerial4(buf);
 11872  005752  0E79               	movlw	low color_predict@buf
 11873  005754  6E02               	movwf	sendStringSerial4@string^0,c
 11874  005756  0E00               	movlw	high color_predict@buf
 11875  005758  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 11876  00575A  EC81  F02B         	call	_sendStringSerial4	;wreg free
 11877  00575E  0012               	return		;funcret
 11878  005760                     __end_of_color_predict:
 11879                           	callstack 0
 11880                           
 11881 ;; *************** function _sprintf *****************
 11882 ;; Defined at:
 11883 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  s               2    0[BANK0 ] PTR unsigned char 
 11886 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 11887 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 11888 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11889 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 11890 ;;		 -> STR_2(6), STR_1(14), 
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  f              11   14[BANK0 ] struct _IO_FILE
 11893 ;;  ap              2   12[BANK0 ] PTR void [1]
 11894 ;;		 -> ?_sprintf(2), 
 11895 ;;  ret             2    0        int 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  2    0[BANK0 ] int 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11905 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11906 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11909 ;;Total ram usage:       25 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 8
 11912 ;; This function calls:
 11913 ;;		_vfprintf
 11914 ;; This function is called by:
 11915 ;;		_color_display
 11916 ;;		_color_predict
 11917 ;;		_action
 11918 ;;		_goback
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text59
 11923  00528C                     __ptext59:
 11924                           	callstack 0
 11925  00528C                     _sprintf:
 11926                           	callstack 20
 11927  00528C  0E64               	movlw	low (?_sprintf+4)
 11928  00528E  0100               	movlb	0	; () banked
 11929  005290  6F6C               	movwf	sprintf@ap& (0+255),b
 11930  005292  0E00               	movlw	high (?_sprintf+4)
 11931  005294  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 11932  005296  C060  F06E         	movff	sprintf@s,sprintf@f
 11933  00529A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 11934  00529E                     
 11935                           ; BSR set to: 0
 11936  00529E  0E00               	movlw	0
 11937  0052A0  6F72               	movwf	(sprintf@f+4)& (0+255),b
 11938  0052A2  0E00               	movlw	0
 11939  0052A4  6F71               	movwf	(sprintf@f+3)& (0+255),b
 11940  0052A6                     
 11941                           ; BSR set to: 0
 11942  0052A6  0E00               	movlw	0
 11943  0052A8  6F78               	movwf	(sprintf@f+10)& (0+255),b
 11944  0052AA  0E00               	movlw	0
 11945  0052AC  6F77               	movwf	(sprintf@f+9)& (0+255),b
 11946  0052AE                     
 11947                           ; BSR set to: 0
 11948  0052AE  0E6E               	movlw	low sprintf@f
 11949  0052B0  6E50               	movwf	vfprintf@fp^0,c
 11950  0052B2  0E00               	movlw	high sprintf@f
 11951  0052B4  6E51               	movwf	(vfprintf@fp+1)^0,c
 11952  0052B6  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 11953  0052BA  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 11954  0052BE  0E6C               	movlw	low sprintf@ap
 11955  0052C0  6E54               	movwf	vfprintf@ap^0,c
 11956  0052C2  0E00               	movlw	high sprintf@ap
 11957  0052C4  6E55               	movwf	(vfprintf@ap+1)^0,c
 11958  0052C6  ECB6  F028         	call	_vfprintf	;wreg free
 11959  0052CA  0100               	movlb	0	; () banked
 11960  0052CC  5171               	movf	(sprintf@f+3)& (0+255),w,b
 11961  0052CE  2560               	addwf	sprintf@s& (0+255),w,b
 11962  0052D0  6ED9               	movwf	fsr2l,c
 11963  0052D2  5172               	movf	(sprintf@f+4)& (0+255),w,b
 11964  0052D4  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 11965  0052D6  6EDA               	movwf	fsr2h,c
 11966  0052D8  0E00               	movlw	0
 11967  0052DA  6EDF               	movwf	indf2,c
 11968  0052DC                     
 11969                           ; BSR set to: 0
 11970  0052DC  0012               	return		;funcret
 11971  0052DE                     __end_of_sprintf:
 11972                           	callstack 0
 11973                           
 11974 ;; *************** function _vfprintf *****************
 11975 ;; Defined at:
 11976 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11977 ;; Parameters:    Size  Location     Type
 11978 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 11979 ;;		 -> sprintf@f(11), 
 11980 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 11981 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 11982 ;;		 -> STR_2(6), STR_1(14), 
 11983 ;;  ap              2   83[COMRAM] PTR PTR void 
 11984 ;;		 -> sprintf@ap(2), 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 11987 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 11988 ;;		 -> STR_2(6), STR_1(14), 
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  2   79[COMRAM] int 
 11991 ;; Registers used:
 11992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12002 ;;Total ram usage:        8 bytes
 12003 ;; Hardware stack levels used: 1
 12004 ;; Hardware stack levels required when called: 7
 12005 ;; This function calls:
 12006 ;;		_vfpfcnvrt
 12007 ;; This function is called by:
 12008 ;;		_sprintf
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           	psect	text60
 12013  00516C                     __ptext60:
 12014                           	callstack 0
 12015  00516C                     _vfprintf:
 12016                           	callstack 20
 12017  00516C                     
 12018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12019  00516C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12020  005170  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12021  005174                     
 12022                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12023  005174  0E00               	movlw	0
 12024  005176  0102               	movlb	2	; () banked
 12025  005178  6FE2               	movwf	(_nout+1)& (0+255),b
 12026  00517A  0E00               	movlw	0
 12027  00517C  6FE1               	movwf	_nout& (0+255),b
 12028                           
 12029                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12030  00517E  EFD4  F028         	goto	l4383
 12031  005182                     l4381:
 12032                           
 12033                           ; BSR set to: 2
 12034                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12035  005182  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12036  005186  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12037  00518A  0E56               	movlw	low vfprintf@cfmt
 12038  00518C  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12039  00518E  0E00               	movlw	high vfprintf@cfmt
 12040  005190  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12041  005192  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12042  005196  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12043  00519A  EC04  F01E         	call	_vfpfcnvrt	;wreg free
 12044  00519E  5040               	movf	?_vfpfcnvrt^0,w,c
 12045  0051A0  0102               	movlb	2	; () banked
 12046  0051A2  27E1               	addwf	_nout& (0+255),f,b
 12047  0051A4  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12048  0051A6  23E2               	addwfc	(_nout+1)& (0+255),f,b
 12049  0051A8                     l4383:
 12050                           
 12051                           ; BSR set to: 2
 12052                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12053  0051A8  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12054  0051AC  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12055  0051B0                     	if	0	;tblptru may be non-zero
 12056  0051B0                     	endif
 12057  0051B0                     	if	0	;tblptru may be non-zero
 12058  0051B0                     	endif
 12059  0051B0  0008               	tblrd		*
 12060  0051B2  50F5               	movf	tablat,w,c
 12061  0051B4  0900               	iorlw	0
 12062  0051B6  A4D8               	btfss	status,2,c
 12063  0051B8  EFE0  F028         	goto	u4141
 12064  0051BC  EFE2  F028         	goto	u4140
 12065  0051C0                     u4141:
 12066  0051C0  EFC1  F028         	goto	l4381
 12067  0051C4                     u4140:
 12068  0051C4                     
 12069                           ; BSR set to: 2
 12070                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12071  0051C4  C2E1  F050         	movff	_nout,?_vfprintf
 12072  0051C8  C2E2  F051         	movff	_nout+1,?_vfprintf+1
 12073  0051CC                     
 12074                           ; BSR set to: 2
 12075  0051CC  0012               	return		;funcret
 12076  0051CE                     __end_of_vfprintf:
 12077                           	callstack 0
 12078                           
 12079 ;; *************** function _vfpfcnvrt *****************
 12080 ;; Defined at:
 12081 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12084 ;;		 -> sprintf@f(11), 
 12085 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12086 ;;		 -> vfprintf@cfmt(2), 
 12087 ;;  ap              2   67[COMRAM] PTR PTR void 
 12088 ;;		 -> sprintf@ap(2), 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  ll              8   71[COMRAM] long long 
 12091 ;;  llu             8    0        unsigned long long 
 12092 ;;  f               4    0        unsigned long long 
 12093 ;;  vp              3    0        PTR void 
 12094 ;;  ct              3    0        unsigned char [3]
 12095 ;;  cp              3    0        PTR unsigned char 
 12096 ;;  i               2    0        int 
 12097 ;;  done            2    0        int 
 12098 ;;  c               1    0        unsigned char 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  2   63[COMRAM] int 
 12101 ;; Registers used:
 12102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12109 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12111 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12112 ;;Total ram usage:       16 bytes
 12113 ;; Hardware stack levels used: 1
 12114 ;; Hardware stack levels required when called: 6
 12115 ;; This function calls:
 12116 ;;		_dtoa
 12117 ;;		_fputc
 12118 ;; This function is called by:
 12119 ;;		_vfprintf
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text61
 12124  003C08                     __ptext61:
 12125                           	callstack 0
 12126  003C08                     _vfpfcnvrt:
 12127                           	callstack 20
 12128  003C08                     
 12129                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12130  003C08  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12131  003C0C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12132  003C10  CFDE FFF6          	movff	postinc2,tblptrl
 12133  003C14  CFDD FFF7          	movff	postdec2,tblptrh
 12134  003C18                     	if	0	;tblptru may be non-zero
 12135  003C18                     	endif
 12136  003C18                     	if	0	;tblptru may be non-zero
 12137  003C18                     	endif
 12138  003C18  0008               	tblrd		*
 12139  003C1A  50F5               	movf	tablat,w,c
 12140  003C1C  0A25               	xorlw	37
 12141  003C1E  A4D8               	btfss	status,2,c
 12142  003C20  EF14  F01E         	goto	u3781
 12143  003C24  EF16  F01E         	goto	u3780
 12144  003C28                     u3781:
 12145  003C28  EFC2  F01E         	goto	l4147
 12146  003C2C                     u3780:
 12147  003C2C                     
 12148                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12149  003C2C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12150  003C30  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12151  003C34  2ADE               	incf	postinc2,f,c
 12152  003C36  0E00               	movlw	0
 12153  003C38  22DD               	addwfc	postdec2,f,c
 12154  003C3A                     
 12155                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12156  003C3A  0E00               	movlw	0
 12157  003C3C  0102               	movlb	2	; () banked
 12158  003C3E  6FE4               	movwf	(_width+1)& (0+255),b
 12159  003C40  0E00               	movlw	0
 12160  003C42  6FE3               	movwf	_width& (0+255),b
 12161  003C44  C2E3  F0F6         	movff	_width,_flags
 12162  003C48  C2E4  F0F7         	movff	_width+1,_flags+1
 12163  003C4C                     
 12164                           ; BSR set to: 2
 12165                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12166  003C4C  69E5               	setf	_prec& (0+255),b
 12167  003C4E  69E6               	setf	(_prec+1)& (0+255),b
 12168  003C50                     
 12169                           ; BSR set to: 2
 12170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12171  003C50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12172  003C54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12173  003C58  CFDE FFF6          	movff	postinc2,tblptrl
 12174  003C5C  CFDD FFF7          	movff	postdec2,tblptrh
 12175  003C60                     	if	0	;tblptru may be non-zero
 12176  003C60                     	endif
 12177  003C60                     	if	0	;tblptru may be non-zero
 12178  003C60                     	endif
 12179  003C60  0008               	tblrd		*
 12180  003C62  50F5               	movf	tablat,w,c
 12181  003C64  0A64               	xorlw	100
 12182  003C66  B4D8               	btfsc	status,2,c
 12183  003C68  EF38  F01E         	goto	u3791
 12184  003C6C  EF3A  F01E         	goto	u3790
 12185  003C70                     u3791:
 12186  003C70  EF4C  F01E         	goto	l4125
 12187  003C74                     u3790:
 12188  003C74                     
 12189                           ; BSR set to: 2
 12190  003C74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12191  003C78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12192  003C7C  CFDE FFF6          	movff	postinc2,tblptrl
 12193  003C80  CFDD FFF7          	movff	postdec2,tblptrh
 12194  003C84                     	if	0	;tblptru may be non-zero
 12195  003C84                     	endif
 12196  003C84                     	if	0	;tblptru may be non-zero
 12197  003C84                     	endif
 12198  003C84  0008               	tblrd		*
 12199  003C86  50F5               	movf	tablat,w,c
 12200  003C88  0A69               	xorlw	105
 12201  003C8A  A4D8               	btfss	status,2,c
 12202  003C8C  EF4A  F01E         	goto	u3801
 12203  003C90  EF4C  F01E         	goto	u3800
 12204  003C94                     u3801:
 12205  003C94  EF8C  F01E         	goto	l4131
 12206  003C98                     u3800:
 12207  003C98                     l4125:
 12208                           
 12209                           ; BSR set to: 2
 12210                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12211  003C98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12212  003C9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12213  003CA0  2ADE               	incf	postinc2,f,c
 12214  003CA2  0E00               	movlw	0
 12215  003CA4  22DD               	addwfc	postdec2,f,c
 12216                           
 12217                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12218  003CA6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12219  003CAA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12220  003CAE  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12221  003CB2  0E02               	movlw	2
 12222  003CB4  26DE               	addwf	postinc2,f,c
 12223  003CB6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12224  003CBA  0E00               	movlw	0
 12225  003CBC  22DD               	addwfc	postdec2,f,c
 12226  003CBE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12227  003CC2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12228  003CC6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12229  003CCA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12230  003CCE  0E00               	movlw	0
 12231  003CD0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12232  003CD2  0EFF               	movlw	-1
 12233  003CD4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12234  003CD6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12235  003CD8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12236  003CDA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12237  003CDC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12238  003CDE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12239  003CE0                     
 12240                           ; BSR set to: 2
 12241                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12242  003CE0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12243  003CE4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12244  003CE8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12245  003CEC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12246  003CF0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12247  003CF4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12248  003CF8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12249  003CFC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12250  003D00  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12251  003D04  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12252  003D08  EC70  F018         	call	_dtoa	;wreg free
 12253  003D0C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12254  003D10  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12255  003D14  EFDD  F01E         	goto	l1541
 12256  003D18                     l4131:
 12257                           
 12258                           ; BSR set to: 2
 12259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12260  003D18  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12261  003D1C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12262  003D20  CFDE FFF6          	movff	postinc2,tblptrl
 12263  003D24  CFDD FFF7          	movff	postdec2,tblptrh
 12264  003D28                     	if	0	;tblptru may be non-zero
 12265  003D28                     	endif
 12266  003D28                     	if	0	;tblptru may be non-zero
 12267  003D28                     	endif
 12268  003D28  0008               	tblrd		*
 12269  003D2A  50F5               	movf	tablat,w,c
 12270  003D2C  0A25               	xorlw	37
 12271  003D2E  A4D8               	btfss	status,2,c
 12272  003D30  EF9C  F01E         	goto	u3811
 12273  003D34  EF9E  F01E         	goto	u3810
 12274  003D38                     u3811:
 12275  003D38  EFB5  F01E         	goto	l4141
 12276  003D3C                     u3810:
 12277  003D3C                     
 12278                           ; BSR set to: 2
 12279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12280  003D3C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12281  003D40  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12282  003D44  2ADE               	incf	postinc2,f,c
 12283  003D46  0E00               	movlw	0
 12284  003D48  22DD               	addwfc	postdec2,f,c
 12285  003D4A                     
 12286                           ; BSR set to: 2
 12287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12288  003D4A  0E00               	movlw	0
 12289  003D4C  6E02               	movwf	(fputc@c+1)^0,c
 12290  003D4E  0E25               	movlw	37
 12291  003D50  6E01               	movwf	fputc@c^0,c
 12292  003D52  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12293  003D56  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12294  003D5A  EC75  F025         	call	_fputc	;wreg free
 12295  003D5E                     l4137:
 12296                           
 12297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12298  003D5E  0E00               	movlw	0
 12299  003D60  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12300  003D62  0E01               	movlw	1
 12301  003D64  6E40               	movwf	?_vfpfcnvrt^0,c
 12302  003D66  EFDD  F01E         	goto	l1541
 12303  003D6A                     l4141:
 12304                           
 12305                           ; BSR set to: 2
 12306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12307  003D6A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12308  003D6E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12309  003D72  2ADE               	incf	postinc2,f,c
 12310  003D74  0E00               	movlw	0
 12311  003D76  22DD               	addwfc	postdec2,f,c
 12312  003D78                     
 12313                           ; BSR set to: 2
 12314                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12315  003D78  0E00               	movlw	0
 12316  003D7A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12317  003D7C  0E00               	movlw	0
 12318  003D7E  6E40               	movwf	?_vfpfcnvrt^0,c
 12319  003D80  EFDD  F01E         	goto	l1541
 12320  003D84                     l4147:
 12321                           
 12322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12323  003D84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12324  003D88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12325  003D8C  CFDE FFF6          	movff	postinc2,tblptrl
 12326  003D90  CFDD FFF7          	movff	postdec2,tblptrh
 12327  003D94                     	if	0	;tblptru may be non-zero
 12328  003D94                     	endif
 12329  003D94                     	if	0	;tblptru may be non-zero
 12330  003D94                     	endif
 12331  003D94  0008               	tblrd		*
 12332  003D96  50F5               	movf	tablat,w,c
 12333  003D98  6E01               	movwf	fputc@c^0,c
 12334  003D9A  6A02               	clrf	(fputc@c+1)^0,c
 12335  003D9C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12336  003DA0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12337  003DA4  EC75  F025         	call	_fputc	;wreg free
 12338  003DA8                     
 12339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12340  003DA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12341  003DAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12342  003DB0  2ADE               	incf	postinc2,f,c
 12343  003DB2  0E00               	movlw	0
 12344  003DB4  22DD               	addwfc	postdec2,f,c
 12345  003DB6  EFAF  F01E         	goto	l4137
 12346  003DBA                     l1541:
 12347  003DBA  0012               	return		;funcret
 12348  003DBC                     __end_of_vfpfcnvrt:
 12349                           	callstack 0
 12350                           
 12351 ;; *************** function _dtoa *****************
 12352 ;; Defined at:
 12353 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12356 ;;		 -> sprintf@f(11), 
 12357 ;;  d               8   29[COMRAM] long long 
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  n               8   53[COMRAM] long long 
 12360 ;;  i               2   61[COMRAM] int 
 12361 ;;  s               2   51[COMRAM] int 
 12362 ;;  w               2   49[COMRAM] int 
 12363 ;;  p               2   47[COMRAM] int 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  2   27[COMRAM] int 
 12366 ;; Registers used:
 12367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12373 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12374 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12375 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12376 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;Total ram usage:       36 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 5
 12380 ;; This function calls:
 12381 ;;		___aodiv
 12382 ;;		___aomod
 12383 ;;		_abs
 12384 ;;		_pad
 12385 ;; This function is called by:
 12386 ;;		_vfpfcnvrt
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text62
 12391  0030E0                     __ptext62:
 12392                           	callstack 0
 12393  0030E0                     _dtoa:
 12394                           	callstack 20
 12395  0030E0                     
 12396                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12397  0030E0  C01E  F036         	movff	dtoa@d,dtoa@n
 12398  0030E4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12399  0030E8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12400  0030EC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12401  0030F0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12402  0030F4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12403  0030F8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12404  0030FC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12405  003100                     
 12406                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12407  003100  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12408  003102  EF85  F018         	goto	u3181
 12409  003106  EF88  F018         	goto	u3180
 12410  00310A                     u3181:
 12411  00310A  0E01               	movlw	1
 12412  00310C  EF89  F018         	goto	u3190
 12413  003110                     u3180:
 12414  003110  0E00               	movlw	0
 12415  003112                     u3190:
 12416  003112  6E34               	movwf	dtoa@s^0,c
 12417  003114  6A35               	clrf	(dtoa@s+1)^0,c
 12418                           
 12419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12420  003116  5034               	movf	dtoa@s^0,w,c
 12421  003118  1035               	iorwf	(dtoa@s+1)^0,w,c
 12422  00311A  B4D8               	btfsc	status,2,c
 12423  00311C  EF92  F018         	goto	u3201
 12424  003120  EF94  F018         	goto	u3200
 12425  003124                     u3201:
 12426  003124  EFA4  F018         	goto	l3837
 12427  003128                     u3200:
 12428  003128                     
 12429                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12430  003128  1E3D               	comf	(dtoa@n+7)^0,f,c
 12431  00312A  1E3C               	comf	(dtoa@n+6)^0,f,c
 12432  00312C  1E3B               	comf	(dtoa@n+5)^0,f,c
 12433  00312E  1E3A               	comf	(dtoa@n+4)^0,f,c
 12434  003130  1E39               	comf	(dtoa@n+3)^0,f,c
 12435  003132  1E38               	comf	(dtoa@n+2)^0,f,c
 12436  003134  1E37               	comf	(dtoa@n+1)^0,f,c
 12437  003136  6C36               	negf	dtoa@n^0,c
 12438  003138  0E00               	movlw	0
 12439  00313A  2237               	addwfc	(dtoa@n+1)^0,f,c
 12440  00313C  2238               	addwfc	(dtoa@n+2)^0,f,c
 12441  00313E  2239               	addwfc	(dtoa@n+3)^0,f,c
 12442  003140  223A               	addwfc	(dtoa@n+4)^0,f,c
 12443  003142  223B               	addwfc	(dtoa@n+5)^0,f,c
 12444  003144  223C               	addwfc	(dtoa@n+6)^0,f,c
 12445  003146  223D               	addwfc	(dtoa@n+7)^0,f,c
 12446  003148                     l3837:
 12447                           
 12448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12449  003148  0102               	movlb	2	; () banked
 12450  00314A  BFE6               	btfsc	(_prec+1)& (0+255),7,b
 12451  00314C  EFAA  F018         	goto	u3211
 12452  003150  EFAC  F018         	goto	u3210
 12453  003154                     u3211:
 12454  003154  EFAE  F018         	goto	l3841
 12455  003158                     u3210:
 12456  003158                     
 12457                           ; BSR set to: 2
 12458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12459  003158  0100               	movlb	0	; () banked
 12460  00315A  93F6               	bcf	_flags& (0+255),1,b
 12461  00315C                     l3841:
 12462                           
 12463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12464  00315C  0102               	movlb	2	; () banked
 12465  00315E  BFE6               	btfsc	(_prec+1)& (0+255),7,b
 12466  003160  EFBC  F018         	goto	u3220
 12467  003164  51E6               	movf	(_prec+1)& (0+255),w,b
 12468  003166  E106               	bnz	u3221
 12469  003168  05E5               	decf	_prec& (0+255),w,b
 12470  00316A  B0D8               	btfsc	status,0,c
 12471  00316C  EFBA  F018         	goto	u3221
 12472  003170  EFBC  F018         	goto	u3220
 12473  003174                     u3221:
 12474  003174  EFC2  F018         	goto	l1514
 12475  003178                     u3220:
 12476  003178                     
 12477                           ; BSR set to: 2
 12478  003178  0E00               	movlw	0
 12479  00317A  6E31               	movwf	(dtoa@p+1)^0,c
 12480  00317C  0E01               	movlw	1
 12481  00317E  6E30               	movwf	dtoa@p^0,c
 12482  003180  EFC6  F018         	goto	l1516
 12483  003184                     l1514:
 12484                           
 12485                           ; BSR set to: 2
 12486  003184  C2E5  F030         	movff	_prec,dtoa@p
 12487  003188  C2E6  F031         	movff	_prec+1,dtoa@p+1
 12488  00318C                     l1516:
 12489                           
 12490                           ; BSR set to: 2
 12491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12492  00318C  C2E3  F032         	movff	_width,dtoa@w
 12493  003190  C2E4  F033         	movff	_width+1,dtoa@w+1
 12494  003194                     
 12495                           ; BSR set to: 2
 12496                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12497  003194  5034               	movf	dtoa@s^0,w,c
 12498  003196  1035               	iorwf	(dtoa@s+1)^0,w,c
 12499  003198  A4D8               	btfss	status,2,c
 12500  00319A  EFD1  F018         	goto	u3231
 12501  00319E  EFD3  F018         	goto	u3230
 12502  0031A2                     u3231:
 12503  0031A2  EFDB  F018         	goto	l3849
 12504  0031A6                     u3230:
 12505  0031A6                     
 12506                           ; BSR set to: 2
 12507  0031A6  0100               	movlb	0	; () banked
 12508  0031A8  A5F6               	btfss	_flags& (0+255),2,b
 12509  0031AA  EFD9  F018         	goto	u3241
 12510  0031AE  EFDB  F018         	goto	u3240
 12511  0031B2                     u3241:
 12512  0031B2  EFDE  F018         	goto	l3851
 12513  0031B6                     u3240:
 12514  0031B6                     l3849:
 12515                           
 12516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12517  0031B6  0632               	decf	dtoa@w^0,f,c
 12518  0031B8  A0D8               	btfss	status,0,c
 12519  0031BA  0633               	decf	(dtoa@w+1)^0,f,c
 12520  0031BC                     l3851:
 12521                           
 12522                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12523  0031BC  0E00               	movlw	0
 12524  0031BE  6E3F               	movwf	(dtoa@i+1)^0,c
 12525  0031C0  0E1F               	movlw	31
 12526  0031C2  6E3E               	movwf	dtoa@i^0,c
 12527  0031C4                     
 12528                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12529  0031C4  0E00               	movlw	0
 12530  0031C6  0103               	movlb	3	; () banked
 12531  0031C8  6F97               	movwf	(_dbuf+31)& (0+255),b
 12532                           
 12533                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12534  0031CA  EF63  F019         	goto	l3865
 12535  0031CE                     l3855:
 12536                           
 12537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12538  0031CE  063E               	decf	dtoa@i^0,f,c
 12539  0031D0  A0D8               	btfss	status,0,c
 12540  0031D2  063F               	decf	(dtoa@i+1)^0,f,c
 12541  0031D4                     
 12542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12543  0031D4  0E78               	movlw	low _dbuf
 12544  0031D6  243E               	addwf	dtoa@i^0,w,c
 12545  0031D8  6ED9               	movwf	fsr2l,c
 12546  0031DA  0E03               	movlw	high _dbuf
 12547  0031DC  203F               	addwfc	(dtoa@i+1)^0,w,c
 12548  0031DE  6EDA               	movwf	fsr2h,c
 12549  0031E0  C036  F001         	movff	dtoa@n,___aomod@dividend
 12550  0031E4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12551  0031E8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12552  0031EC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12553  0031F0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12554  0031F4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12555  0031F8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12556  0031FC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12557  003200  0E0A               	movlw	10
 12558  003202  6E09               	movwf	___aomod@divisor^0,c
 12559  003204  0E00               	movlw	0
 12560  003206  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12561  003208  0E00               	movlw	0
 12562  00320A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12563  00320C  0E00               	movlw	0
 12564  00320E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12565  003210  0E00               	movlw	0
 12566  003212  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12567  003214  0E00               	movlw	0
 12568  003216  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12569  003218  0E00               	movlw	0
 12570  00321A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12571  00321C  0E00               	movlw	0
 12572  00321E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12573  003220  ECC0  F022         	call	___aomod	;wreg free
 12574  003224  C001  F026         	movff	?___aomod,??_dtoa
 12575  003228  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12576  00322C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12577  003230  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12578  003234  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12579  003238  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12580  00323C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12581  003240  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12582  003244  C026  F013         	movff	??_dtoa,abs@a
 12583  003248  C028  F014         	movff	??_dtoa+2,abs@a+1
 12584  00324C  ECD6  F02A         	call	_abs	;wreg free
 12585  003250  5013               	movf	?_abs^0,w,c
 12586  003252  0F30               	addlw	48
 12587  003254  6EDF               	movwf	indf2,c
 12588  003256                     
 12589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12590  003256  0630               	decf	dtoa@p^0,f,c
 12591  003258  A0D8               	btfss	status,0,c
 12592  00325A  0631               	decf	(dtoa@p+1)^0,f,c
 12593  00325C                     
 12594                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12595  00325C  0632               	decf	dtoa@w^0,f,c
 12596  00325E  A0D8               	btfss	status,0,c
 12597  003260  0633               	decf	(dtoa@w+1)^0,f,c
 12598  003262                     
 12599                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12600  003262  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12601  003266  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12602  00326A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12603  00326E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12604  003272  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12605  003276  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12606  00327A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12607  00327E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12608  003282  0E0A               	movlw	10
 12609  003284  6E09               	movwf	___aodiv@divisor^0,c
 12610  003286  0E00               	movlw	0
 12611  003288  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12612  00328A  0E00               	movlw	0
 12613  00328C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12614  00328E  0E00               	movlw	0
 12615  003290  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12616  003292  0E00               	movlw	0
 12617  003294  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12618  003296  0E00               	movlw	0
 12619  003298  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12620  00329A  0E00               	movlw	0
 12621  00329C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12622  00329E  0E00               	movlw	0
 12623  0032A0  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12624  0032A2  ECFC  F021         	call	___aodiv	;wreg free
 12625  0032A6  C001  F036         	movff	?___aodiv,dtoa@n
 12626  0032AA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12627  0032AE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12628  0032B2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12629  0032B6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12630  0032BA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12631  0032BE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12632  0032C2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12633  0032C6                     l3865:
 12634                           
 12635                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12636  0032C6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12637  0032C8  EF6E  F019         	goto	u3251
 12638  0032CC  503F               	movf	(dtoa@i+1)^0,w,c
 12639  0032CE  E108               	bnz	u3250
 12640  0032D0  043E               	decf	dtoa@i^0,w,c
 12641  0032D2  A0D8               	btfss	status,0,c
 12642  0032D4  EF6E  F019         	goto	u3251
 12643  0032D8  EF70  F019         	goto	u3250
 12644  0032DC                     u3251:
 12645  0032DC  EFA1  F019         	goto	l3875
 12646  0032E0                     u3250:
 12647  0032E0  5036               	movf	dtoa@n^0,w,c
 12648  0032E2  1037               	iorwf	(dtoa@n+1)^0,w,c
 12649  0032E4  1038               	iorwf	(dtoa@n+2)^0,w,c
 12650  0032E6  1039               	iorwf	(dtoa@n+3)^0,w,c
 12651  0032E8  103A               	iorwf	(dtoa@n+4)^0,w,c
 12652  0032EA  103B               	iorwf	(dtoa@n+5)^0,w,c
 12653  0032EC  103C               	iorwf	(dtoa@n+6)^0,w,c
 12654  0032EE  103D               	iorwf	(dtoa@n+7)^0,w,c
 12655  0032F0  A4D8               	btfss	status,2,c
 12656  0032F2  EF7D  F019         	goto	u3261
 12657  0032F6  EF7F  F019         	goto	u3260
 12658  0032FA                     u3261:
 12659  0032FA  EFE7  F018         	goto	l3855
 12660  0032FE                     u3260:
 12661  0032FE  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12662  003300  EF8C  F019         	goto	u3270
 12663  003304  5031               	movf	(dtoa@p+1)^0,w,c
 12664  003306  E106               	bnz	u3271
 12665  003308  0430               	decf	dtoa@p^0,w,c
 12666  00330A  B0D8               	btfsc	status,0,c
 12667  00330C  EF8A  F019         	goto	u3271
 12668  003310  EF8C  F019         	goto	u3270
 12669  003314                     u3271:
 12670  003314  EFE7  F018         	goto	l3855
 12671  003318                     u3270:
 12672  003318  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12673  00331A  EF97  F019         	goto	u3281
 12674  00331E  5033               	movf	(dtoa@w+1)^0,w,c
 12675  003320  E108               	bnz	u3280
 12676  003322  0432               	decf	dtoa@w^0,w,c
 12677  003324  A0D8               	btfss	status,0,c
 12678  003326  EF97  F019         	goto	u3281
 12679  00332A  EF99  F019         	goto	u3280
 12680  00332E                     u3281:
 12681  00332E  EFA1  F019         	goto	l3875
 12682  003332                     u3280:
 12683  003332  0100               	movlb	0	; () banked
 12684  003334  B3F6               	btfsc	_flags& (0+255),1,b
 12685  003336  EF9F  F019         	goto	u3291
 12686  00333A  EFA1  F019         	goto	u3290
 12687  00333E                     u3291:
 12688  00333E  EFE7  F018         	goto	l3855
 12689  003342                     u3290:
 12690  003342                     l3875:
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12693  003342  5034               	movf	dtoa@s^0,w,c
 12694  003344  1035               	iorwf	(dtoa@s+1)^0,w,c
 12695  003346  A4D8               	btfss	status,2,c
 12696  003348  EFA8  F019         	goto	u3301
 12697  00334C  EFAA  F019         	goto	u3300
 12698  003350                     u3301:
 12699  003350  EFB2  F019         	goto	l3879
 12700  003354                     u3300:
 12701  003354  0100               	movlb	0	; () banked
 12702  003356  A5F6               	btfss	_flags& (0+255),2,b
 12703  003358  EFB0  F019         	goto	u3311
 12704  00335C  EFB2  F019         	goto	u3310
 12705  003360                     u3311:
 12706  003360  EFD0  F019         	goto	l3889
 12707  003364                     u3310:
 12708  003364                     l3879:
 12709                           
 12710                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12711  003364  063E               	decf	dtoa@i^0,f,c
 12712  003366  A0D8               	btfss	status,0,c
 12713  003368  063F               	decf	(dtoa@i+1)^0,f,c
 12714  00336A                     
 12715                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12716  00336A  5034               	movf	dtoa@s^0,w,c
 12717  00336C  1035               	iorwf	(dtoa@s+1)^0,w,c
 12718  00336E  A4D8               	btfss	status,2,c
 12719  003370  EFBC  F019         	goto	u3321
 12720  003374  EFBE  F019         	goto	u3320
 12721  003378                     u3321:
 12722  003378  EFC4  F019         	goto	l3885
 12723  00337C                     u3320:
 12724  00337C  0E00               	movlw	0
 12725  00337E  6E2F               	movwf	(_dtoa$2910+1)^0,c
 12726  003380  0E2B               	movlw	43
 12727  003382  6E2E               	movwf	_dtoa$2910^0,c
 12728  003384  EFC8  F019         	goto	l3887
 12729  003388                     l3885:
 12730  003388  0E00               	movlw	0
 12731  00338A  6E2F               	movwf	(_dtoa$2910+1)^0,c
 12732  00338C  0E2D               	movlw	45
 12733  00338E  6E2E               	movwf	_dtoa$2910^0,c
 12734  003390                     l3887:
 12735  003390  0E78               	movlw	low _dbuf
 12736  003392  243E               	addwf	dtoa@i^0,w,c
 12737  003394  6ED9               	movwf	fsr2l,c
 12738  003396  0E03               	movlw	high _dbuf
 12739  003398  203F               	addwfc	(dtoa@i+1)^0,w,c
 12740  00339A  6EDA               	movwf	fsr2h,c
 12741  00339C  C02E  FFDF         	movff	_dtoa$2910,indf2
 12742  0033A0                     l3889:
 12743                           
 12744                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12745  0033A0  C01C  F011         	movff	dtoa@fp,pad@fp
 12746  0033A4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12747  0033A8  0E78               	movlw	low _dbuf
 12748  0033AA  243E               	addwf	dtoa@i^0,w,c
 12749  0033AC  6E13               	movwf	pad@buf^0,c
 12750  0033AE  0E03               	movlw	high _dbuf
 12751  0033B0  203F               	addwfc	(dtoa@i+1)^0,w,c
 12752  0033B2  6E14               	movwf	(pad@buf+1)^0,c
 12753  0033B4  C032  F015         	movff	dtoa@w,pad@p
 12754  0033B8  C033  F016         	movff	dtoa@w+1,pad@p+1
 12755  0033BC  EC3D  F026         	call	_pad	;wreg free
 12756  0033C0  C011  F01C         	movff	?_pad,?_dtoa
 12757  0033C4  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12758  0033C8  0012               	return		;funcret
 12759  0033CA                     __end_of_dtoa:
 12760                           	callstack 0
 12761                           
 12762 ;; *************** function _pad *****************
 12763 ;; Defined at:
 12764 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12767 ;;		 -> sprintf@f(11), 
 12768 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12769 ;;		 -> dbuf(32), 
 12770 ;;  p               2   20[COMRAM] int 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;  w               2   25[COMRAM] int 
 12773 ;;  i               2   23[COMRAM] int 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  2   16[COMRAM] int 
 12776 ;; Registers used:
 12777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12786 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12787 ;;Total ram usage:       11 bytes
 12788 ;; Hardware stack levels used: 1
 12789 ;; Hardware stack levels required when called: 4
 12790 ;; This function calls:
 12791 ;;		_fputc
 12792 ;;		_fputs
 12793 ;;		_strlen
 12794 ;; This function is called by:
 12795 ;;		_dtoa
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text63
 12800  004C7A                     __ptext63:
 12801                           	callstack 0
 12802  004C7A                     _pad:
 12803                           	callstack 20
 12804  004C7A                     
 12805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12806  004C7A  0100               	movlb	0	; () banked
 12807  004C7C  A1F6               	btfss	_flags& (0+255),0,b
 12808  004C7E  EF43  F026         	goto	u3071
 12809  004C82  EF45  F026         	goto	u3070
 12810  004C86                     u3071:
 12811  004C86  EF4F  F026         	goto	l3759
 12812  004C8A                     u3070:
 12813  004C8A                     
 12814                           ; BSR set to: 0
 12815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12816  004C8A  C013  F00A         	movff	pad@buf,fputs@s
 12817  004C8E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12818  004C92  C011  F00C         	movff	pad@fp,fputs@fp
 12819  004C96  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12820  004C9A  EC32  F02A         	call	_fputs	;wreg free
 12821  004C9E                     l3759:
 12822                           
 12823                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12824  004C9E  BE16               	btfsc	(pad@p+1)^0,7,c
 12825  004CA0  EF54  F026         	goto	u3081
 12826  004CA4  EF56  F026         	goto	u3080
 12827  004CA8                     u3081:
 12828  004CA8  EF5C  F026         	goto	l3763
 12829  004CAC                     u3080:
 12830  004CAC  C015  F01A         	movff	pad@p,pad@w
 12831  004CB0  C016  F01B         	movff	pad@p+1,pad@w+1
 12832  004CB4  EF60  F026         	goto	l1503
 12833  004CB8                     l3763:
 12834  004CB8  0E00               	movlw	0
 12835  004CBA  6E1B               	movwf	(pad@w+1)^0,c
 12836  004CBC  0E00               	movlw	0
 12837  004CBE  6E1A               	movwf	pad@w^0,c
 12838  004CC0                     l1503:
 12839                           
 12840                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12841  004CC0  0E00               	movlw	0
 12842  004CC2  6E19               	movwf	(pad@i+1)^0,c
 12843  004CC4  0E00               	movlw	0
 12844  004CC6  6E18               	movwf	pad@i^0,c
 12845                           
 12846                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12847  004CC8  EF72  F026         	goto	l3769
 12848  004CCC                     l3765:
 12849                           
 12850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12851  004CCC  0E00               	movlw	0
 12852  004CCE  6E02               	movwf	(fputc@c+1)^0,c
 12853  004CD0  0E20               	movlw	32
 12854  004CD2  6E01               	movwf	fputc@c^0,c
 12855  004CD4  C011  F003         	movff	pad@fp,fputc@fp
 12856  004CD8  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12857  004CDC  EC75  F025         	call	_fputc	;wreg free
 12858  004CE0                     
 12859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12860  004CE0  4A18               	infsnz	pad@i^0,f,c
 12861  004CE2  2A19               	incf	(pad@i+1)^0,f,c
 12862  004CE4                     l3769:
 12863                           
 12864                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12865  004CE4  501A               	movf	pad@w^0,w,c
 12866  004CE6  5C18               	subwf	pad@i^0,w,c
 12867  004CE8  5019               	movf	(pad@i+1)^0,w,c
 12868  004CEA  0A80               	xorlw	128
 12869  004CEC  6E17               	movwf	??_pad^0,c
 12870  004CEE  501B               	movf	(pad@w+1)^0,w,c
 12871  004CF0  0A80               	xorlw	128
 12872  004CF2  5817               	subwfb	??_pad^0,w,c
 12873  004CF4  A0D8               	btfss	status,0,c
 12874  004CF6  EF7F  F026         	goto	u3091
 12875  004CFA  EF81  F026         	goto	u3090
 12876  004CFE                     u3091:
 12877  004CFE  EF66  F026         	goto	l3765
 12878  004D02                     u3090:
 12879  004D02                     
 12880                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12881  004D02  0100               	movlb	0	; () banked
 12882  004D04  B1F6               	btfsc	_flags& (0+255),0,b
 12883  004D06  EF87  F026         	goto	u3101
 12884  004D0A  EF89  F026         	goto	u3100
 12885  004D0E                     u3101:
 12886  004D0E  EF93  F026         	goto	l3773
 12887  004D12                     u3100:
 12888  004D12                     
 12889                           ; BSR set to: 0
 12890                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12891  004D12  C013  F00A         	movff	pad@buf,fputs@s
 12892  004D16  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12893  004D1A  C011  F00C         	movff	pad@fp,fputs@fp
 12894  004D1E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12895  004D22  EC32  F02A         	call	_fputs	;wreg free
 12896  004D26                     l3773:
 12897                           
 12898                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12899  004D26  C013  F001         	movff	pad@buf,strlen@s
 12900  004D2A  C014  F002         	movff	pad@buf+1,strlen@s+1
 12901  004D2E  EC4C  F02B         	call	_strlen	;wreg free
 12902  004D32  501A               	movf	pad@w^0,w,c
 12903  004D34  2401               	addwf	?_strlen^0,w,c
 12904  004D36  6E11               	movwf	?_pad^0,c
 12905  004D38  501B               	movf	(pad@w+1)^0,w,c
 12906  004D3A  2002               	addwfc	(?_strlen+1)^0,w,c
 12907  004D3C  6E12               	movwf	(?_pad+1)^0,c
 12908  004D3E  0012               	return		;funcret
 12909  004D40                     __end_of_pad:
 12910                           	callstack 0
 12911                           
 12912 ;; *************** function _strlen *****************
 12913 ;; Defined at:
 12914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12917 ;;		 -> dbuf(32), 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12920 ;;		 -> dbuf(32), 
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  2    0[COMRAM] unsigned int 
 12923 ;; Registers used:
 12924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12934 ;;Total ram usage:        4 bytes
 12935 ;; Hardware stack levels used: 1
 12936 ;; Hardware stack levels required when called: 1
 12937 ;; This function calls:
 12938 ;;		Nothing
 12939 ;; This function is called by:
 12940 ;;		_pad
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text64
 12945  005698                     __ptext64:
 12946                           	callstack 0
 12947  005698                     _strlen:
 12948                           	callstack 22
 12949  005698  C001  F003         	movff	strlen@s,strlen@a
 12950  00569C  C002  F004         	movff	strlen@s+1,strlen@a+1
 12951  0056A0  EF54  F02B         	goto	l3669
 12952  0056A4                     l3667:
 12953  0056A4  4A01               	infsnz	strlen@s^0,f,c
 12954  0056A6  2A02               	incf	(strlen@s+1)^0,f,c
 12955  0056A8                     l3669:
 12956  0056A8  C001  FFD9         	movff	strlen@s,fsr2l
 12957  0056AC  C002  FFDA         	movff	strlen@s+1,fsr2h
 12958  0056B0  50DF               	movf	indf2,w,c
 12959  0056B2  A4D8               	btfss	status,2,c
 12960  0056B4  EF5E  F02B         	goto	u2931
 12961  0056B8  EF60  F02B         	goto	u2930
 12962  0056BC                     u2931:
 12963  0056BC  EF52  F02B         	goto	l3667
 12964  0056C0                     u2930:
 12965  0056C0  5003               	movf	strlen@a^0,w,c
 12966  0056C2  5C01               	subwf	strlen@s^0,w,c
 12967  0056C4  6E01               	movwf	?_strlen^0,c
 12968  0056C6  5004               	movf	(strlen@a+1)^0,w,c
 12969  0056C8  5802               	subwfb	(strlen@s+1)^0,w,c
 12970  0056CA  6E02               	movwf	(?_strlen+1)^0,c
 12971  0056CC  0012               	return		;funcret
 12972  0056CE                     __end_of_strlen:
 12973                           	callstack 0
 12974                           
 12975 ;; *************** function _fputs *****************
 12976 ;; Defined at:
 12977 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12980 ;;		 -> dbuf(32), 
 12981 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12982 ;;		 -> sprintf@f(11), 
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;  i               2   14[COMRAM] int 
 12985 ;;  c               1   13[COMRAM] unsigned char 
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  2    9[COMRAM] int 
 12988 ;; Registers used:
 12989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12998 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12999 ;;Total ram usage:        7 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; Hardware stack levels required when called: 3
 13002 ;; This function calls:
 13003 ;;		_fputc
 13004 ;; This function is called by:
 13005 ;;		_pad
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text65
 13010  005464                     __ptext65:
 13011                           	callstack 0
 13012  005464                     _fputs:
 13013                           	callstack 20
 13014  005464  0E00               	movlw	0
 13015  005466  6E10               	movwf	(fputs@i+1)^0,c
 13016  005468  0E00               	movlw	0
 13017  00546A  6E0F               	movwf	fputs@i^0,c
 13018  00546C  EF43  F02A         	goto	l3663
 13019  005470                     l3659:
 13020  005470  C00E  F001         	movff	fputs@c,fputc@c
 13021  005474  6A02               	clrf	(fputc@c+1)^0,c
 13022  005476  C00C  F003         	movff	fputs@fp,fputc@fp
 13023  00547A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13024  00547E  EC75  F025         	call	_fputc	;wreg free
 13025  005482  4A0F               	infsnz	fputs@i^0,f,c
 13026  005484  2A10               	incf	(fputs@i+1)^0,f,c
 13027  005486                     l3663:
 13028  005486  500F               	movf	fputs@i^0,w,c
 13029  005488  240A               	addwf	fputs@s^0,w,c
 13030  00548A  6ED9               	movwf	fsr2l,c
 13031  00548C  5010               	movf	(fputs@i+1)^0,w,c
 13032  00548E  200B               	addwfc	(fputs@s+1)^0,w,c
 13033  005490  6EDA               	movwf	fsr2h,c
 13034  005492  50DF               	movf	indf2,w,c
 13035  005494  6E0E               	movwf	fputs@c^0,c
 13036  005496  500E               	movf	fputs@c^0,w,c
 13037  005498  A4D8               	btfss	status,2,c
 13038  00549A  EF51  F02A         	goto	u2921
 13039  00549E  EF53  F02A         	goto	u2920
 13040  0054A2                     u2921:
 13041  0054A2  EF38  F02A         	goto	l3659
 13042  0054A6                     u2920:
 13043  0054A6  0012               	return		;funcret
 13044  0054A8                     __end_of_fputs:
 13045                           	callstack 0
 13046                           
 13047 ;; *************** function _fputc *****************
 13048 ;; Defined at:
 13049 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;  c               2    0[COMRAM] int 
 13052 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13053 ;;		 -> sprintf@f(11), 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  2    0[COMRAM] int 
 13058 ;; Registers used:
 13059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13067 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;Total ram usage:        9 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 2
 13072 ;; This function calls:
 13073 ;;		_putch
 13074 ;; This function is called by:
 13075 ;;		_pad
 13076 ;;		_vfpfcnvrt
 13077 ;;		_fputs
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           	psect	text66
 13082  004AEA                     __ptext66:
 13083                           	callstack 0
 13084  004AEA                     _fputc:
 13085                           	callstack 23
 13086  004AEA  5003               	movf	fputc@fp^0,w,c
 13087  004AEC  1004               	iorwf	(fputc@fp+1)^0,w,c
 13088  004AEE  B4D8               	btfsc	status,2,c
 13089  004AF0  EF7C  F025         	goto	u2881
 13090  004AF4  EF7E  F025         	goto	u2880
 13091  004AF8                     u2881:
 13092  004AF8  EF87  F025         	goto	l3647
 13093  004AFC                     u2880:
 13094  004AFC  5003               	movf	fputc@fp^0,w,c
 13095  004AFE  1004               	iorwf	(fputc@fp+1)^0,w,c
 13096  004B00  A4D8               	btfss	status,2,c
 13097  004B02  EF85  F025         	goto	u2891
 13098  004B06  EF87  F025         	goto	u2890
 13099  004B0A                     u2891:
 13100  004B0A  EF8C  F025         	goto	l3649
 13101  004B0E                     u2890:
 13102  004B0E                     l3647:
 13103  004B0E  5001               	movf	fputc@c^0,w,c
 13104  004B10  ECC3  F02C         	call	_putch
 13105  004B14  EFD9  F025         	goto	l1567
 13106  004B18                     l3649:
 13107  004B18  EE20 F009          	lfsr	2,9
 13108  004B1C  5003               	movf	fputc@fp^0,w,c
 13109  004B1E  26D9               	addwf	fsr2l,f,c
 13110  004B20  5004               	movf	(fputc@fp+1)^0,w,c
 13111  004B22  22DA               	addwfc	fsr2h,f,c
 13112  004B24  50DE               	movf	postinc2,w,c
 13113  004B26  10DE               	iorwf	postinc2,w,c
 13114  004B28  B4D8               	btfsc	status,2,c
 13115  004B2A  EF99  F025         	goto	u2901
 13116  004B2E  EF9B  F025         	goto	u2900
 13117  004B32                     u2901:
 13118  004B32  EFB6  F025         	goto	l3653
 13119  004B36                     u2900:
 13120  004B36  EE20 F009          	lfsr	2,9
 13121  004B3A  5003               	movf	fputc@fp^0,w,c
 13122  004B3C  26D9               	addwf	fsr2l,f,c
 13123  004B3E  5004               	movf	(fputc@fp+1)^0,w,c
 13124  004B40  22DA               	addwfc	fsr2h,f,c
 13125  004B42  EE10 F003          	lfsr	1,3
 13126  004B46  5003               	movf	fputc@fp^0,w,c
 13127  004B48  26E1               	addwf	fsr1l,f,c
 13128  004B4A  5004               	movf	(fputc@fp+1)^0,w,c
 13129  004B4C  22E2               	addwfc	fsr1h,f,c
 13130  004B4E  50DE               	movf	postinc2,w,c
 13131  004B50  5CE6               	subwf	postinc1,w,c
 13132  004B52  50E6               	movf	postinc1,w,c
 13133  004B54  0A80               	xorlw	128
 13134  004B56  6E09               	movwf	(??_fputc+4)^0,c
 13135  004B58  50DE               	movf	postinc2,w,c
 13136  004B5A  0A80               	xorlw	128
 13137  004B5C  5809               	subwfb	(??_fputc+4)^0,w,c
 13138  004B5E  B0D8               	btfsc	status,0,c
 13139  004B60  EFB4  F025         	goto	u2911
 13140  004B64  EFB6  F025         	goto	u2910
 13141  004B68                     u2911:
 13142  004B68  EFD9  F025         	goto	l1567
 13143  004B6C                     u2910:
 13144  004B6C                     l3653:
 13145  004B6C  EE20 F003          	lfsr	2,3
 13146  004B70  5003               	movf	fputc@fp^0,w,c
 13147  004B72  26D9               	addwf	fsr2l,f,c
 13148  004B74  5004               	movf	(fputc@fp+1)^0,w,c
 13149  004B76  22DA               	addwfc	fsr2h,f,c
 13150  004B78  CFDE F005          	movff	postinc2,??_fputc
 13151  004B7C  CFDD F006          	movff	postdec2,??_fputc+1
 13152  004B80  C003  FFD9         	movff	fputc@fp,fsr2l
 13153  004B84  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13154  004B88  CFDE F007          	movff	postinc2,??_fputc+2
 13155  004B8C  CFDD F008          	movff	postdec2,??_fputc+3
 13156  004B90  5005               	movf	??_fputc^0,w,c
 13157  004B92  2407               	addwf	(??_fputc+2)^0,w,c
 13158  004B94  6ED9               	movwf	fsr2l,c
 13159  004B96  5006               	movf	(??_fputc+1)^0,w,c
 13160  004B98  2008               	addwfc	(??_fputc+3)^0,w,c
 13161  004B9A  6EDA               	movwf	fsr2h,c
 13162  004B9C  C001  FFDF         	movff	fputc@c,indf2
 13163  004BA0  EE20 F003          	lfsr	2,3
 13164  004BA4  5003               	movf	fputc@fp^0,w,c
 13165  004BA6  26D9               	addwf	fsr2l,f,c
 13166  004BA8  5004               	movf	(fputc@fp+1)^0,w,c
 13167  004BAA  22DA               	addwfc	fsr2h,f,c
 13168  004BAC  2ADE               	incf	postinc2,f,c
 13169  004BAE  0E00               	movlw	0
 13170  004BB0  22DD               	addwfc	postdec2,f,c
 13171  004BB2                     l1567:
 13172  004BB2  0012               	return		;funcret
 13173  004BB4                     __end_of_fputc:
 13174                           	callstack 0
 13175                           
 13176 ;; *************** function _putch *****************
 13177 ;; Defined at:
 13178 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  c               1    wreg     unsigned char 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  c               1    0[COMRAM] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used: 1
 13198 ;; Hardware stack levels required when called: 1
 13199 ;; This function calls:
 13200 ;;		Nothing
 13201 ;; This function is called by:
 13202 ;;		_fputc
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text67
 13207  005986                     __ptext67:
 13208                           	callstack 0
 13209  005986                     _putch:
 13210                           	callstack 23
 13211  005986  0012               	return		;funcret
 13212  005988                     __end_of_putch:
 13213                           	callstack 0
 13214                           
 13215 ;; *************** function _abs *****************
 13216 ;; Defined at:
 13217 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;  a               2   18[COMRAM] int 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;		None
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  2   18[COMRAM] int 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2, status,0
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13235 ;;Total ram usage:        4 bytes
 13236 ;; Hardware stack levels used: 1
 13237 ;; Hardware stack levels required when called: 1
 13238 ;; This function calls:
 13239 ;;		Nothing
 13240 ;; This function is called by:
 13241 ;;		_dtoa
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           	psect	text68
 13246  0055AC                     __ptext68:
 13247                           	callstack 0
 13248  0055AC                     _abs:
 13249                           	callstack 23
 13250  0055AC  BE14               	btfsc	(abs@a+1)^0,7,c
 13251  0055AE  EFE3  F02A         	goto	u3110
 13252  0055B2  5014               	movf	(abs@a+1)^0,w,c
 13253  0055B4  E106               	bnz	u3111
 13254  0055B6  0413               	decf	abs@a^0,w,c
 13255  0055B8  B0D8               	btfsc	status,0,c
 13256  0055BA  EFE1  F02A         	goto	u3111
 13257  0055BE  EFE3  F02A         	goto	u3110
 13258  0055C2                     u3111:
 13259  0055C2  EFF1  F02A         	goto	l1552
 13260  0055C6                     u3110:
 13261  0055C6  C013  F015         	movff	abs@a,??_abs
 13262  0055CA  C014  F016         	movff	abs@a+1,??_abs+1
 13263  0055CE  1E15               	comf	??_abs^0,f,c
 13264  0055D0  1E16               	comf	(??_abs+1)^0,f,c
 13265  0055D2  4A15               	infsnz	??_abs^0,f,c
 13266  0055D4  2A16               	incf	(??_abs+1)^0,f,c
 13267  0055D6  C015  F013         	movff	??_abs,?_abs
 13268  0055DA  C016  F014         	movff	??_abs+1,?_abs+1
 13269  0055DE  EFF5  F02A         	goto	l1555
 13270  0055E2                     l1552:
 13271  0055E2  C013  F013         	movff	abs@a,?_abs
 13272  0055E6  C014  F014         	movff	abs@a+1,?_abs+1
 13273  0055EA                     l1555:
 13274  0055EA  0012               	return		;funcret
 13275  0055EC                     __end_of_abs:
 13276                           	callstack 0
 13277                           
 13278 ;; *************** function ___aomod *****************
 13279 ;; Defined at:
 13280 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  dividend        8    0[COMRAM] long long 
 13283 ;;  divisor         8    8[COMRAM] long long 
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;  sign            1   17[COMRAM] unsigned char 
 13286 ;;  counter         1   16[COMRAM] unsigned char 
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  8    0[COMRAM] long long 
 13289 ;; Registers used:
 13290 ;;		wreg, status,2, status,0
 13291 ;; Tracked objects:
 13292 ;;		On entry : 0/0
 13293 ;;		On exit  : 0/0
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13296 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13299 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13300 ;;Total ram usage:       18 bytes
 13301 ;; Hardware stack levels used: 1
 13302 ;; Hardware stack levels required when called: 1
 13303 ;; This function calls:
 13304 ;;		Nothing
 13305 ;; This function is called by:
 13306 ;;		_dtoa
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text69
 13311  004580                     __ptext69:
 13312                           	callstack 0
 13313  004580                     ___aomod:
 13314                           	callstack 23
 13315  004580  0E00               	movlw	0
 13316  004582  6E12               	movwf	___aomod@sign^0,c
 13317  004584  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13318  004586  EFC9  F022         	goto	u3010
 13319  00458A  EFC7  F022         	goto	u3011
 13320  00458E                     u3011:
 13321  00458E  EFDB  F022         	goto	l3727
 13322  004592                     u3010:
 13323  004592  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13324  004594  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13325  004596  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13326  004598  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13327  00459A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13328  00459C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13329  00459E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13330  0045A0  6C01               	negf	___aomod@dividend^0,c
 13331  0045A2  0E00               	movlw	0
 13332  0045A4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13333  0045A6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13334  0045A8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13335  0045AA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13336  0045AC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13337  0045AE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13338  0045B0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13339  0045B2  0E01               	movlw	1
 13340  0045B4  6E12               	movwf	___aomod@sign^0,c
 13341  0045B6                     l3727:
 13342  0045B6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13343  0045B8  EFE2  F022         	goto	u3020
 13344  0045BC  EFE0  F022         	goto	u3021
 13345  0045C0                     u3021:
 13346  0045C0  EFF2  F022         	goto	l3731
 13347  0045C4                     u3020:
 13348  0045C4  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13349  0045C6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13350  0045C8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13351  0045CA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13352  0045CC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13353  0045CE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13354  0045D0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13355  0045D2  6C09               	negf	___aomod@divisor^0,c
 13356  0045D4  0E00               	movlw	0
 13357  0045D6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13358  0045D8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13359  0045DA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13360  0045DC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13361  0045DE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13362  0045E0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13363  0045E2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13364  0045E4                     l3731:
 13365  0045E4  5009               	movf	___aomod@divisor^0,w,c
 13366  0045E6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13367  0045E8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13368  0045EA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13369  0045EC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13370  0045EE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13371  0045F0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13372  0045F2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13373  0045F4  B4D8               	btfsc	status,2,c
 13374  0045F6  EFFF  F022         	goto	u3031
 13375  0045FA  EF01  F023         	goto	u3030
 13376  0045FE                     u3031:
 13377  0045FE  EF49  F023         	goto	l3747
 13378  004602                     u3030:
 13379  004602  0E01               	movlw	1
 13380  004604  6E11               	movwf	___aomod@counter^0,c
 13381  004606  EF0F  F023         	goto	l3737
 13382  00460A                     l3735:
 13383  00460A  90D8               	bcf	status,0,c
 13384  00460C  3609               	rlcf	___aomod@divisor^0,f,c
 13385  00460E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13386  004610  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13387  004612  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13388  004614  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13389  004616  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13390  004618  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13391  00461A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13392  00461C  2A11               	incf	___aomod@counter^0,f,c
 13393  00461E                     l3737:
 13394  00461E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13395  004620  EF14  F023         	goto	u3041
 13396  004624  EF16  F023         	goto	u3040
 13397  004628                     u3041:
 13398  004628  EF05  F023         	goto	l3735
 13399  00462C                     u3040:
 13400  00462C                     l3739:
 13401  00462C  5009               	movf	___aomod@divisor^0,w,c
 13402  00462E  5C01               	subwf	___aomod@dividend^0,w,c
 13403  004630  500A               	movf	(___aomod@divisor+1)^0,w,c
 13404  004632  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13405  004634  500B               	movf	(___aomod@divisor+2)^0,w,c
 13406  004636  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13407  004638  500C               	movf	(___aomod@divisor+3)^0,w,c
 13408  00463A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13409  00463C  500D               	movf	(___aomod@divisor+4)^0,w,c
 13410  00463E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13411  004640  500E               	movf	(___aomod@divisor+5)^0,w,c
 13412  004642  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13413  004644  500F               	movf	(___aomod@divisor+6)^0,w,c
 13414  004646  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13415  004648  5010               	movf	(___aomod@divisor+7)^0,w,c
 13416  00464A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13417  00464C  A0D8               	btfss	status,0,c
 13418  00464E  EF2B  F023         	goto	u3051
 13419  004652  EF2D  F023         	goto	u3050
 13420  004656                     u3051:
 13421  004656  EF3D  F023         	goto	l3743
 13422  00465A                     u3050:
 13423  00465A  5009               	movf	___aomod@divisor^0,w,c
 13424  00465C  5E01               	subwf	___aomod@dividend^0,f,c
 13425  00465E  500A               	movf	(___aomod@divisor+1)^0,w,c
 13426  004660  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13427  004662  500B               	movf	(___aomod@divisor+2)^0,w,c
 13428  004664  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13429  004666  500C               	movf	(___aomod@divisor+3)^0,w,c
 13430  004668  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13431  00466A  500D               	movf	(___aomod@divisor+4)^0,w,c
 13432  00466C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13433  00466E  500E               	movf	(___aomod@divisor+5)^0,w,c
 13434  004670  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13435  004672  500F               	movf	(___aomod@divisor+6)^0,w,c
 13436  004674  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13437  004676  5010               	movf	(___aomod@divisor+7)^0,w,c
 13438  004678  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13439  00467A                     l3743:
 13440  00467A  90D8               	bcf	status,0,c
 13441  00467C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13442  00467E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13443  004680  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13444  004682  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13445  004684  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13446  004686  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13447  004688  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13448  00468A  3209               	rrcf	___aomod@divisor^0,f,c
 13449  00468C  2E11               	decfsz	___aomod@counter^0,f,c
 13450  00468E  EF16  F023         	goto	l3739
 13451  004692                     l3747:
 13452  004692  5012               	movf	___aomod@sign^0,w,c
 13453  004694  B4D8               	btfsc	status,2,c
 13454  004696  EF4F  F023         	goto	u3061
 13455  00469A  EF51  F023         	goto	u3060
 13456  00469E                     u3061:
 13457  00469E  EF61  F023         	goto	l3751
 13458  0046A2                     u3060:
 13459  0046A2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13460  0046A4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13461  0046A6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13462  0046A8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13463  0046AA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13464  0046AC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13465  0046AE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13466  0046B0  6C01               	negf	___aomod@dividend^0,c
 13467  0046B2  0E00               	movlw	0
 13468  0046B4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13469  0046B6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13470  0046B8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13471  0046BA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13472  0046BC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13473  0046BE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13474  0046C0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13475  0046C2                     l3751:
 13476  0046C2  C001  F001         	movff	___aomod@dividend,?___aomod
 13477  0046C6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13478  0046CA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13479  0046CE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13480  0046D2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13481  0046D6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13482  0046DA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13483  0046DE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13484  0046E2  0012               	return		;funcret
 13485  0046E4                     __end_of___aomod:
 13486                           	callstack 0
 13487                           
 13488 ;; *************** function ___aodiv *****************
 13489 ;; Defined at:
 13490 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  dividend        8    0[COMRAM] long long 
 13493 ;;  divisor         8    8[COMRAM] long long 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;  quotient        8   18[COMRAM] long long 
 13496 ;;  sign            1   17[COMRAM] unsigned char 
 13497 ;;  counter         1   16[COMRAM] unsigned char 
 13498 ;; Return value:  Size  Location     Type
 13499 ;;                  8    0[COMRAM] long long 
 13500 ;; Registers used:
 13501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13502 ;; Tracked objects:
 13503 ;;		On entry : 0/0
 13504 ;;		On exit  : 0/0
 13505 ;;		Unchanged: 0/0
 13506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13507 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13508 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13510 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13511 ;;Total ram usage:       26 bytes
 13512 ;; Hardware stack levels used: 1
 13513 ;; Hardware stack levels required when called: 1
 13514 ;; This function calls:
 13515 ;;		Nothing
 13516 ;; This function is called by:
 13517 ;;		_dtoa
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text70
 13522  0043F8                     __ptext70:
 13523                           	callstack 0
 13524  0043F8                     ___aodiv:
 13525                           	callstack 23
 13526  0043F8  0E00               	movlw	0
 13527  0043FA  6E12               	movwf	___aodiv@sign^0,c
 13528  0043FC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13529  0043FE  EF05  F022         	goto	u2940
 13530  004402  EF03  F022         	goto	u2941
 13531  004406                     u2941:
 13532  004406  EF17  F022         	goto	l3683
 13533  00440A                     u2940:
 13534  00440A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13535  00440C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13536  00440E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13537  004410  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13538  004412  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13539  004414  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13540  004416  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13541  004418  6C09               	negf	___aodiv@divisor^0,c
 13542  00441A  0E00               	movlw	0
 13543  00441C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13544  00441E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13545  004420  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13546  004422  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13547  004424  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13548  004426  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13549  004428  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13550  00442A  0E01               	movlw	1
 13551  00442C  6E12               	movwf	___aodiv@sign^0,c
 13552  00442E                     l3683:
 13553  00442E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13554  004430  EF1E  F022         	goto	u2950
 13555  004434  EF1C  F022         	goto	u2951
 13556  004438                     u2951:
 13557  004438  EF30  F022         	goto	l3689
 13558  00443C                     u2950:
 13559  00443C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13560  00443E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13561  004440  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13562  004442  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13563  004444  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13564  004446  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13565  004448  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13566  00444A  6C01               	negf	___aodiv@dividend^0,c
 13567  00444C  0E00               	movlw	0
 13568  00444E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13569  004450  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13570  004452  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13571  004454  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13572  004456  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13573  004458  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13574  00445A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13575  00445C  0E01               	movlw	1
 13576  00445E  1A12               	xorwf	___aodiv@sign^0,f,c
 13577  004460                     l3689:
 13578  004460  EE20  F013         	lfsr	2,___aodiv@quotient
 13579  004464  0E07               	movlw	7
 13580  004466                     u2961:
 13581  004466  6ADE               	clrf	postinc2,c
 13582  004468  06E8               	decf	wreg,f,c
 13583  00446A  E2FD               	bc	u2961
 13584  00446C  5009               	movf	___aodiv@divisor^0,w,c
 13585  00446E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13586  004470  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13587  004472  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13588  004474  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13589  004476  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13590  004478  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13591  00447A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13592  00447C  B4D8               	btfsc	status,2,c
 13593  00447E  EF43  F022         	goto	u2971
 13594  004482  EF45  F022         	goto	u2970
 13595  004486                     u2971:
 13596  004486  EF97  F022         	goto	l3711
 13597  00448A                     u2970:
 13598  00448A  0E01               	movlw	1
 13599  00448C  6E11               	movwf	___aodiv@counter^0,c
 13600  00448E  EF53  F022         	goto	l3697
 13601  004492                     l3695:
 13602  004492  90D8               	bcf	status,0,c
 13603  004494  3609               	rlcf	___aodiv@divisor^0,f,c
 13604  004496  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13605  004498  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13606  00449A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13607  00449C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13608  00449E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13609  0044A0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13610  0044A2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13611  0044A4  2A11               	incf	___aodiv@counter^0,f,c
 13612  0044A6                     l3697:
 13613  0044A6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13614  0044A8  EF58  F022         	goto	u2981
 13615  0044AC  EF5A  F022         	goto	u2980
 13616  0044B0                     u2981:
 13617  0044B0  EF49  F022         	goto	l3695
 13618  0044B4                     u2980:
 13619  0044B4                     l3699:
 13620  0044B4  90D8               	bcf	status,0,c
 13621  0044B6  3613               	rlcf	___aodiv@quotient^0,f,c
 13622  0044B8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13623  0044BA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13624  0044BC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13625  0044BE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13626  0044C0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13627  0044C2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13628  0044C4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13629  0044C6  5009               	movf	___aodiv@divisor^0,w,c
 13630  0044C8  5C01               	subwf	___aodiv@dividend^0,w,c
 13631  0044CA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13632  0044CC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13633  0044CE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13634  0044D0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13635  0044D2  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13636  0044D4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13637  0044D6  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13638  0044D8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13639  0044DA  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13640  0044DC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13641  0044DE  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13642  0044E0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13643  0044E2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13644  0044E4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13645  0044E6  A0D8               	btfss	status,0,c
 13646  0044E8  EF78  F022         	goto	u2991
 13647  0044EC  EF7A  F022         	goto	u2990
 13648  0044F0                     u2991:
 13649  0044F0  EF8B  F022         	goto	l3707
 13650  0044F4                     u2990:
 13651  0044F4  5009               	movf	___aodiv@divisor^0,w,c
 13652  0044F6  5E01               	subwf	___aodiv@dividend^0,f,c
 13653  0044F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13654  0044FA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13655  0044FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13656  0044FE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13657  004500  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13658  004502  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13659  004504  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13660  004506  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13661  004508  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13662  00450A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13663  00450C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13664  00450E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13665  004510  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13666  004512  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13667  004514  8013               	bsf	___aodiv@quotient^0,0,c
 13668  004516                     l3707:
 13669  004516  90D8               	bcf	status,0,c
 13670  004518  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13671  00451A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13672  00451C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13673  00451E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13674  004520  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13675  004522  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13676  004524  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13677  004526  3209               	rrcf	___aodiv@divisor^0,f,c
 13678  004528  2E11               	decfsz	___aodiv@counter^0,f,c
 13679  00452A  EF5A  F022         	goto	l3699
 13680  00452E                     l3711:
 13681  00452E  5012               	movf	___aodiv@sign^0,w,c
 13682  004530  B4D8               	btfsc	status,2,c
 13683  004532  EF9D  F022         	goto	u3001
 13684  004536  EF9F  F022         	goto	u3000
 13685  00453A                     u3001:
 13686  00453A  EFAF  F022         	goto	l3715
 13687  00453E                     u3000:
 13688  00453E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13689  004540  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13690  004542  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13691  004544  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13692  004546  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13693  004548  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13694  00454A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13695  00454C  6C13               	negf	___aodiv@quotient^0,c
 13696  00454E  0E00               	movlw	0
 13697  004550  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13698  004552  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13699  004554  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13700  004556  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13701  004558  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13702  00455A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13703  00455C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13704  00455E                     l3715:
 13705  00455E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13706  004562  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13707  004566  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13708  00456A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13709  00456E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13710  004572  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13711  004576  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13712  00457A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13713  00457E  0012               	return		;funcret
 13714  004580                     __end_of___aodiv:
 13715                           	callstack 0
 13716                           
 13717 ;; *************** function _sendStringSerial4 *****************
 13718 ;; Defined at:
 13719 ;;		line 36 in file "serial.c"
 13720 ;; Parameters:    Size  Location     Type
 13721 ;;  string          2    1[COMRAM] PTR unsigned char 
 13722 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 13723 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      void 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13739 ;;Total ram usage:        2 bytes
 13740 ;; Hardware stack levels used: 1
 13741 ;; Hardware stack levels required when called: 2
 13742 ;; This function calls:
 13743 ;;		_sendCharSerial4
 13744 ;; This function is called by:
 13745 ;;		_color_display
 13746 ;;		_color_predict
 13747 ;;		_action
 13748 ;;		_goback
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text71
 13753  005702                     __ptext71:
 13754                           	callstack 0
 13755  005702                     _sendStringSerial4:
 13756                           	callstack 26
 13757  005702                     
 13758                           ;serial.c: 38:     while(*string != 0){
 13759  005702  EF8C  F02B         	goto	l4427
 13760  005706                     l4423:
 13761                           
 13762                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13763  005706  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13764  00570A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13765  00570E  50DF               	movf	indf2,w,c
 13766  005710  EC90  F02C         	call	_sendCharSerial4
 13767  005714  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13768  005716  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13769  005718                     l4427:
 13770                           
 13771                           ;serial.c: 38:     while(*string != 0){
 13772  005718  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13773  00571C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13774  005720  50DF               	movf	indf2,w,c
 13775  005722  A4D8               	btfss	status,2,c
 13776  005724  EF96  F02B         	goto	u4151
 13777  005728  EF98  F02B         	goto	u4150
 13778  00572C                     u4151:
 13779  00572C  EF83  F02B         	goto	l4423
 13780  005730                     u4150:
 13781  005730  0012               	return		;funcret
 13782  005732                     __end_of_sendStringSerial4:
 13783                           	callstack 0
 13784                           
 13785 ;; *************** function _sendCharSerial4 *****************
 13786 ;; Defined at:
 13787 ;;		line 29 in file "serial.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;  charToSend      1    wreg     unsigned char 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;  charToSend      1    0[COMRAM] unsigned char 
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		wreg
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13805 ;;Total ram usage:        1 bytes
 13806 ;; Hardware stack levels used: 1
 13807 ;; Hardware stack levels required when called: 1
 13808 ;; This function calls:
 13809 ;;		Nothing
 13810 ;; This function is called by:
 13811 ;;		_sendStringSerial4
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           	psect	text72
 13816  005920                     __ptext72:
 13817                           	callstack 0
 13818  005920                     _sendCharSerial4:
 13819                           	callstack 26
 13820                           
 13821                           ;incstack = 0
 13822                           ;sendCharSerial4@charToSend stored from wreg
 13823  005920  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13824  005922                     l426:
 13825  005922  010E               	movlb	14	; () banked
 13826  005924  A537               	btfss	55,2,b	;volatile
 13827  005926  EF97  F02C         	goto	u3881
 13828  00592A  EF99  F02C         	goto	u3880
 13829  00592E                     u3881:
 13830  00592E  EF91  F02C         	goto	l426
 13831  005932                     u3880:
 13832  005932                     
 13833                           ; BSR set to: 14
 13834                           ;serial.c: 31:     TX4REG = charToSend;
 13835  005932  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 13836  005936                     
 13837                           ; BSR set to: 14
 13838  005936  0012               	return		;funcret
 13839  005938                     __end_of_sendCharSerial4:
 13840                           	callstack 0
 13841                           
 13842 ;; *************** function _Timer0_init *****************
 13843 ;; Defined at:
 13844 ;;		line 7 in file "timers.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;		None
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;		None
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  1    wreg      void 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13862 ;;Total ram usage:        0 bytes
 13863 ;; Hardware stack levels used: 1
 13864 ;; Hardware stack levels required when called: 1
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_main
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           	psect	text73
 13873  005902                     __ptext73:
 13874                           	callstack 0
 13875  005902                     _Timer0_init:
 13876                           	callstack 29
 13877  005902                     
 13878                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13879  005902  50D6               	movf	214,w,c	;volatile
 13880  005904  0B1F               	andlw	-225
 13881  005906  0940               	iorlw	64
 13882  005908  6ED6               	movwf	214,c	;volatile
 13883  00590A                     
 13884                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13885  00590A  88D6               	bsf	214,4,c	;volatile
 13886                           
 13887                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13888  00590C  50D6               	movf	214,w,c	;volatile
 13889  00590E  0BF0               	andlw	-16
 13890  005910  0908               	iorlw	8
 13891  005912  6ED6               	movwf	214,c	;volatile
 13892  005914                     
 13893                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13894  005914  88D5               	bsf	213,4,c	;volatile
 13895                           
 13896                           ;timers.c: 16:     TMR0H=0b00001011;
 13897  005916  0E0B               	movlw	11
 13898  005918  6ED4               	movwf	212,c	;volatile
 13899                           
 13900                           ;timers.c: 17:     TMR0L=0b11011011;
 13901  00591A  0EDB               	movlw	219
 13902  00591C  6ED3               	movwf	211,c	;volatile
 13903  00591E  0012               	return		;funcret
 13904  005920                     __end_of_Timer0_init:
 13905                           	callstack 0
 13906                           
 13907 ;; *************** function _Interrupts_init *****************
 13908 ;; Defined at:
 13909 ;;		line 9 in file "interrupts.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;		None
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;		None
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  1    wreg      void 
 13916 ;; Registers used:
 13917 ;;		None
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13927 ;;Total ram usage:        0 bytes
 13928 ;; Hardware stack levels used: 1
 13929 ;; Hardware stack levels required when called: 1
 13930 ;; This function calls:
 13931 ;;		Nothing
 13932 ;; This function is called by:
 13933 ;;		_main
 13934 ;; This function uses a non-reentrant model
 13935 ;;
 13936                           
 13937                           	psect	text74
 13938  00595A                     __ptext74:
 13939                           	callstack 0
 13940  00595A                     _Interrupts_init:
 13941                           	callstack 29
 13942  00595A  8EF2               	bsf	242,7,c	;volatile
 13943                           
 13944                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13945  00595C  8AF2               	bsf	242,5,c	;volatile
 13946                           
 13947                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13948  00595E  8CF2               	bsf	242,6,c	;volatile
 13949                           
 13950                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13951  005960  010E               	movlb	14	; () banked
 13952  005962  8B29               	bsf	41,5,b	;volatile
 13953  005964                     
 13954                           ; BSR set to: 14
 13955  005964  0012               	return		;funcret
 13956  005966                     __end_of_Interrupts_init:
 13957                           	callstack 0
 13958                           
 13959 ;; *************** function _HighISR *****************
 13960 ;; Defined at:
 13961 ;;		line 21 in file "interrupts.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;		None
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		status,2, status,0
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13979 ;;Total ram usage:        0 bytes
 13980 ;; Hardware stack levels used: 1
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		Interrupt level 2
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	intcode
 13989  000008                     __pintcode:
 13990                           	callstack 0
 13991  000008                     _HighISR:
 13992                           	callstack 19
 13993                           
 13994                           ; BSR set to: 14
 13995                           ;incstack = 0
 13996  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13997  00000A                     
 13998                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 13999  00000A  010E               	movlb	14	; () banked
 14000  00000C  AB33               	btfss	51,5,b	;volatile
 14001  00000E  EF0B  F000         	goto	i2u567_41
 14002  000012  EF0D  F000         	goto	i2u567_40
 14003  000016                     i2u567_41:
 14004  000016  EF12  F000         	goto	i2l693
 14005  00001A                     i2u567_40:
 14006  00001A                     
 14007                           ; BSR set to: 14
 14008                           ;interrupts.c: 24:         second ++;
 14009  00001A  0102               	movlb	2	; () banked
 14010  00001C  4BEB               	infsnz	_second& (0+255),f,b
 14011  00001E  2BEC               	incf	(_second+1)& (0+255),f,b
 14012  000020                     
 14013                           ; BSR set to: 2
 14014                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14015  000020  010E               	movlb	14	; () banked
 14016  000022  9B33               	bcf	51,5,b	;volatile
 14017  000024                     i2l693:
 14018                           
 14019                           ; BSR set to: 14
 14020  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14021  000026  0011               	retfie		f
 14022  000028                     __end_of_HighISR:
 14023                           	callstack 0
 14024                           
 14025                           	psect	rparam
 14026  0000                     
 14027                           	psect	temp
 14028  00005F                     btemp:
 14029                           	callstack 0
 14030  00005F                     	ds	1
 14031  0000                     int$flags	set	btemp
 14032  0000                     wtemp8	set	btemp+1
 14033  0000                     ttemp5	set	btemp+1
 14034  0000                     ttemp6	set	btemp+4
 14035  0000                     ttemp7	set	btemp+8
 14036                           
 14037                           	psect	idloc
 14038                           
 14039                           ;Config register IDLOC0 @ 0x200000
 14040                           ;	unspecified, using default values
 14041  200000                     	org	2097152
 14042  200000  0FFF               	dw	4095
 14043                           
 14044                           ;Config register IDLOC1 @ 0x200002
 14045                           ;	unspecified, using default values
 14046  200002                     	org	2097154
 14047  200002  0FFF               	dw	4095
 14048                           
 14049                           ;Config register IDLOC2 @ 0x200004
 14050                           ;	unspecified, using default values
 14051  200004                     	org	2097156
 14052  200004  0FFF               	dw	4095
 14053                           
 14054                           ;Config register IDLOC3 @ 0x200006
 14055                           ;	unspecified, using default values
 14056  200006                     	org	2097158
 14057  200006  0FFF               	dw	4095
 14058                           
 14059                           ;Config register IDLOC4 @ 0x200008
 14060                           ;	unspecified, using default values
 14061  200008                     	org	2097160
 14062  200008  0FFF               	dw	4095
 14063                           
 14064                           ;Config register IDLOC5 @ 0x20000A
 14065                           ;	unspecified, using default values
 14066  20000A                     	org	2097162
 14067  20000A  0FFF               	dw	4095
 14068                           
 14069                           ;Config register IDLOC6 @ 0x20000C
 14070                           ;	unspecified, using default values
 14071  20000C                     	org	2097164
 14072  20000C  0FFF               	dw	4095
 14073                           
 14074                           ;Config register IDLOC7 @ 0x20000E
 14075                           ;	unspecified, using default values
 14076  20000E                     	org	2097166
 14077  20000E  0FFF               	dw	4095
 14078                           
 14079                           	psect	config
 14080                           
 14081                           ;Config register CONFIG1L @ 0x300000
 14082                           ;	External Oscillator mode Selection bits
 14083                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14084                           ;	Power-up default value for COSC bits
 14085                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14086  300000                     	org	3145728
 14087  300000  AA                 	db	170
 14088                           
 14089                           ;Config register CONFIG1H @ 0x300001
 14090                           ;	unspecified, using default values
 14091                           ;	Clock Out Enable bit
 14092                           ;	CLKOUTEN = 0x1, unprogrammed default
 14093                           ;	Clock Switch Enable bit
 14094                           ;	CSWEN = 0x1, unprogrammed default
 14095                           ;	Fail-Safe Clock Monitor Enable bit
 14096                           ;	FCMEN = 0x1, unprogrammed default
 14097  300001                     	org	3145729
 14098  300001  FF                 	db	255
 14099                           
 14100                           ;Config register CONFIG2L @ 0x300002
 14101                           ;	unspecified, using default values
 14102                           ;	Master Clear Enable bit
 14103                           ;	MCLRE = 0x1, unprogrammed default
 14104                           ;	Power-up Timer Enable bit
 14105                           ;	PWRTE = 0x1, unprogrammed default
 14106                           ;	Low-power BOR enable bit
 14107                           ;	LPBOREN = 0x1, unprogrammed default
 14108                           ;	Brown-out Reset Enable bits
 14109                           ;	BOREN = 0x3, unprogrammed default
 14110  300002                     	org	3145730
 14111  300002  FF                 	db	255
 14112                           
 14113                           ;Config register CONFIG2H @ 0x300003
 14114                           ;	unspecified, using default values
 14115                           ;	Brown Out Reset Voltage selection bits
 14116                           ;	BORV = 0x3, unprogrammed default
 14117                           ;	ZCD Disable bit
 14118                           ;	ZCD = 0x1, unprogrammed default
 14119                           ;	PPSLOCK bit One-Way Set Enable bit
 14120                           ;	PPS1WAY = 0x1, unprogrammed default
 14121                           ;	Stack Full/Underflow Reset Enable bit
 14122                           ;	STVREN = 0x1, unprogrammed default
 14123                           ;	Debugger Enable bit
 14124                           ;	DEBUG = 0x1, unprogrammed default
 14125                           ;	Extended Instruction Set Enable bit
 14126                           ;	XINST = 0x1, unprogrammed default
 14127  300003                     	org	3145731
 14128  300003  FF                 	db	255
 14129                           
 14130                           ;Config register CONFIG3L @ 0x300004
 14131                           ;	WDT Period Select bits
 14132                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14133                           ;	WDT operating mode
 14134                           ;	WDTE = OFF, WDT Disabled
 14135  300004                     	org	3145732
 14136  300004  9F                 	db	159
 14137                           
 14138                           ;Config register CONFIG3H @ 0x300005
 14139                           ;	unspecified, using default values
 14140                           ;	WDT Window Select bits
 14141                           ;	WDTCWS = 0x7, unprogrammed default
 14142                           ;	WDT input clock selector
 14143                           ;	WDTCCS = 0x7, unprogrammed default
 14144  300005                     	org	3145733
 14145  300005  FF                 	db	255
 14146                           
 14147                           ;Config register CONFIG4L @ 0x300006
 14148                           ;	unspecified, using default values
 14149                           ;	Write Protection Block 0
 14150                           ;	WRT0 = 0x1, unprogrammed default
 14151                           ;	Write Protection Block 1
 14152                           ;	WRT1 = 0x1, unprogrammed default
 14153                           ;	Write Protection Block 2
 14154                           ;	WRT2 = 0x1, unprogrammed default
 14155                           ;	Write Protection Block 3
 14156                           ;	WRT3 = 0x1, unprogrammed default
 14157                           ;	Write Protection Block 3
 14158                           ;	WRT4 = 0x1, unprogrammed default
 14159                           ;	Write Protection Block 3
 14160                           ;	WRT5 = 0x1, unprogrammed default
 14161                           ;	Write Protection Block 3
 14162                           ;	WRT6 = 0x1, unprogrammed default
 14163                           ;	Write Protection Block 3
 14164                           ;	WRT7 = 0x1, unprogrammed default
 14165  300006                     	org	3145734
 14166  300006  FF                 	db	255
 14167                           
 14168                           ;Config register CONFIG4H @ 0x300007
 14169                           ;	unspecified, using default values
 14170                           ;	Configuration Register Write Protection bit
 14171                           ;	WRTC = 0x1, unprogrammed default
 14172                           ;	Boot Block Write Protection bit
 14173                           ;	WRTB = 0x1, unprogrammed default
 14174                           ;	Data EEPROM Write Protection bit
 14175                           ;	WRTD = 0x1, unprogrammed default
 14176                           ;	Scanner Enable bit
 14177                           ;	SCANE = 0x1, unprogrammed default
 14178                           ;	Low Voltage Programming Enable bit
 14179                           ;	LVP = 0x1, unprogrammed default
 14180  300007                     	org	3145735
 14181  300007  FF                 	db	255
 14182                           
 14183                           ;Config register CONFIG5L @ 0x300008
 14184                           ;	unspecified, using default values
 14185                           ;	UserNVM Program Memory Code Protection bit
 14186                           ;	CP = 0x1, unprogrammed default
 14187                           ;	DataNVM Memory Code Protection bit
 14188                           ;	CPD = 0x1, unprogrammed default
 14189  300008                     	org	3145736
 14190  300008  FF                 	db	255
 14191                           
 14192                           ;Config register CONFIG5H @ 0x300009
 14193                           ;	unspecified, using default values
 14194  300009                     	org	3145737
 14195  300009  FF                 	db	255
 14196                           
 14197                           ;Config register CONFIG6L @ 0x30000A
 14198                           ;	unspecified, using default values
 14199                           ;	Table Read Protection Block 0
 14200                           ;	EBTR0 = 0x1, unprogrammed default
 14201                           ;	Table Read Protection Block 1
 14202                           ;	EBTR1 = 0x1, unprogrammed default
 14203                           ;	Table Read Protection Block 2
 14204                           ;	EBTR2 = 0x1, unprogrammed default
 14205                           ;	Table Read Protection Block 3
 14206                           ;	EBTR3 = 0x1, unprogrammed default
 14207                           ;	Table Read Protection Block 4
 14208                           ;	EBTR4 = 0x1, unprogrammed default
 14209                           ;	Table Read Protection Block 5
 14210                           ;	EBTR5 = 0x1, unprogrammed default
 14211                           ;	Table Read Protection Block 6
 14212                           ;	EBTR6 = 0x1, unprogrammed default
 14213                           ;	Table Read Protection Block 7
 14214                           ;	EBTR7 = 0x1, unprogrammed default
 14215  30000A                     	org	3145738
 14216  30000A  FF                 	db	255
 14217                           
 14218                           ;Config register CONFIG6H @ 0x30000B
 14219                           ;	unspecified, using default values
 14220                           ;	Boot Block Table Read Protection bit
 14221                           ;	EBTRB = 0x1, unprogrammed default
 14222  30000B                     	org	3145739
 14223  30000B  FF                 	db	255
 14224                           tosu	equ	0xFFF
 14225                           tosh	equ	0xFFE
 14226                           tosl	equ	0xFFD
 14227                           stkptr	equ	0xFFC
 14228                           pclatu	equ	0xFFB
 14229                           pclath	equ	0xFFA
 14230                           pcl	equ	0xFF9
 14231                           tblptru	equ	0xFF8
 14232                           tblptrh	equ	0xFF7
 14233                           tblptrl	equ	0xFF6
 14234                           tablat	equ	0xFF5
 14235                           prodh	equ	0xFF4
 14236                           prodl	equ	0xFF3
 14237                           indf0	equ	0xFEF
 14238                           postinc0	equ	0xFEE
 14239                           postdec0	equ	0xFED
 14240                           preinc0	equ	0xFEC
 14241                           plusw0	equ	0xFEB
 14242                           fsr0h	equ	0xFEA
 14243                           fsr0l	equ	0xFE9
 14244                           wreg	equ	0xFE8
 14245                           indf1	equ	0xFE7
 14246                           postinc1	equ	0xFE6
 14247                           postdec1	equ	0xFE5
 14248                           preinc1	equ	0xFE4
 14249                           plusw1	equ	0xFE3
 14250                           fsr1h	equ	0xFE2
 14251                           fsr1l	equ	0xFE1
 14252                           bsr	equ	0xFE0
 14253                           indf2	equ	0xFDF
 14254                           postinc2	equ	0xFDE
 14255                           postdec2	equ	0xFDD
 14256                           preinc2	equ	0xFDC
 14257                           plusw2	equ	0xFDB
 14258                           fsr2h	equ	0xFDA
 14259                           fsr2l	equ	0xFD9
 14260                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    150     160
    BANK1           256    256     256
    BANK2           256    201     238
    BANK3           256      0     152
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK3[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2828$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2828$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    halfSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_fullSpeedAhead
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _action->_goback

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_action
    _action->_goback

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  327781
                                            200 BANK1     56    56      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26930
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  108972
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26644
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4    3319
                                             30 COMRAM     6     2      4
                     _fullSpeedAhead
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                             105   101      4  105991
                                            128 BANK0      4     0      4
                                            100 BANK2    101   101      0
                             _goback
                     _reverse_square
                  _sendStringSerial4
                      _short_reverse
                            _sprintf
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11781
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                             308   304      4   54169
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                                              0 BANK1    200   200      0
                                              0 BANK2    100   100      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9201
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    9885
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11477
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6746
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3123
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2187
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _sendStringSerial4
       _sprintf
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _sendStringSerial4
     _short_reverse
       _fullSpeedBack
       _stop
     _sprintf
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _short_burst_back
     _fullSpeedAhead
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      98      11       59.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C9      EE       9       93.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     96      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     384      57        0.0%
DATA                 0      0     384       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 20:53:26 2022

                ?_short_reverse 0026                  _color_read_Red 52DE                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 537E  
                 _color_predict 5732                              l71 594C                              l82 3674  
                            l74 3662                              l91 532C                              l85 5700  
                            l94 53CC                              l88 58E2                              l97 537C  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 53CE  
              _color_read_Green 532E               ??_Interrupts_init 0001                             l100 541C  
                           l103 528A                             l112 58A2                             l106 5842  
                           l203 57B4                             l115 5882                             l212 5982  
                           l132 50FE                             l221 5958                             l109 5822  
                           l141 387E                             l206 57B6                             l118 5862  
                           l303 3A52                             l311 4F7E                             l215 596E  
                           l224 54E8                             l160 1A40                             l209 57DC  
                           l129 3F50                             l138 575E                             l322 41FA  
                           l218 5978                             l163 5622                             l340 406C  
                           l172 480A                             l164 5624                             l326 4242  
                           l318 41B2                             l175 4C76                             l344 40B4  
                           l336 4024                             l176 4C78                             l168 508E  
                           l329 426C                             l417 5900                             l426 5922  
                           l435 5730                             l355 5012                             l347 40DE  
                           l380 55AA                             l429 5936                             l293 552A  
                           l366 4EC2                             l704 591E                             l640 30DE  
                           l296 4AE8                             l377 556A                             l628 578A  
                           l646 58C2                             l663 2D9A                             l920 46E2  
                           l907 457E                             l687 5964                             l793 5802  
             verify_color@color 009A                ?_calibrate_white 000C        __end_of_distance_measure 4C7A  
                           _abs 55AC                             _pad 4C7A                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
               __end_of_LED_OFF 5844                    ___fltol@exp1 0065                            l1024 4E02  
                          ?_abs 0013                            l1063 4A16                            l1321 1C30  
                          l1090 4912                            l1058 49D0                            l1330 1F00  
                          l1322 1C1E                            l1411 232A                            l1067 5696  
                          l1323 1BE4                            l1414 21BC                            l1503 4CC0  
                          l1407 1FC6                            l1424 22EC                            l1416 2234  
                          l1417 2222                            l4001 1BFE                            l1506 4D02  
                          l1514 3184                            l1338 1D4A                            l1451 3C06  
                          l1347 1E1A                            l4011 1C3E                            l4003 1C02  
                          l1363 5462                            l1508 4D3E                            l1516 318C  
                          l1380 2896                            l1348 1E08                            l1541 3DBA  
                          l4101 1ED8                            l4021 1C80                            l4013 1C4E  
                          l4005 1C10                            l1534 33C8                            l1462 3B9E  
                          l1375 2A72                            l1455 3B42                            l4103 1EDA  
                          l4031 1CAE                            l4023 1C8E                            l4007 1C12  
                          l1552 55E2                            l1448 3AAA                            l4121 3C50  
                          l4113 3C08                            l4201 4F36                            l1377 28D2  
                          l4105 1EE0                            l4041 1D1A                            l4033 1CB8  
                          l4025 1C9A                            l4017 1C62                            l4009 1C1C  
                          l5001 369C                            l1386 2918                            l1555 55EA  
                          l4131 3D18                            l4123 3C74                            l4115 3C2C  
                          l1547 51C4                            l4203 4F4E                            l4211 1F02  
                          l4107 1EEE                            l4043 1D2A                            l4027 1C9E  
                          l4019 1C72                            l4035 1CBE                            l5011 36FC  
                          l5003 36A0                            l1548 51CC                            l1476 52DC  
                          l1388 2990                            l4133 3D3C                            l4141 3D6A  
                          l4125 3C98                            l4117 3C3A                            l4205 4F66  
                          l1389 297E                            l4301 21DA                            l4221 1F3E  
                          l4213 1F0E                            l4109 1EF0                            l4061 1DAC  
                          l4053 1D84                            l4037 1CE4                            l4045 1D3A  
                          l4029 1CAC                            l1469 565E                            l5021 3760  
                          l5013 3700                            l5005 36B8                            l5101 150E  
                          l4207 5922                            l1567 4BB2                            l1575 54A6  
                          l4143 3D78                            l4135 3D4A                            l4127 3CE0  
                          l4119 3C4C                            l4311 2244                            l4303 21DE  
                          l4231 1F70                            l4223 1F4E                            l4215 1F1C  
                          l4063 1DB4                            l4055 1D8E                            l4047 1D60  
                          l4039 1D18                            l4071 1DD8                            l5031 37C4  
                          l5023 3764                            l5015 3718                            l5007 36CC  
                          l5111 16AA                            l5103 152A                            l4209 5932  
                          l4137 3D5E                            l4161 5954                            l4321 22A6  
                          l4313 2250                            l4305 21EC                            l4241 1FB0  
                          l4233 1F7E                            l4225 1F54                            l4217 1F1E  
                          l4081 1E2A                            l4073 1DDC                            l4065 1DB8  
                          l4057 1D9C                            l4049 1D70                            l5041 3828  
                          l5033 37DC                            l5025 377C                            l5017 3730  
                          l5009 36E4                            l5121 17D2                            l5113 16D8  
                          l5105 15D2                            l5201 4BF4                            l1578 5986  
                          l1586 26D8                            l4147 3D84                            l4411 529E  
                          l4155 597A                            l4163 5970                            l4171 54AA  
                          l4403 53CE                            l4331 230E                            l4323 22BA  
                          l4315 225E                            l4307 221A                            l4251 1FFA  
                          l4243 1FB6                            l4235 1F80                            l4227 1F64  
                          l4219 1F2E                            l4091 1E90                            l4083 1E36  
                          l4075 1DEA                            l4067 1DC8                            l4059 1D9E  
                          l5043 3840                            l5035 37E0                            l5027 3794  
                          l5019 3748                            l5131 18D2                            l5123 17E8  
                          l5115 17A6                            l5107 15EE                            l5051 0E94  
                          l5203 4BF8                            l4421 5702                            l3701 44C6  
                          l4149 3DA8                            l4413 52A6                            l5221 5540  
                          l4157 597E                            l4165 5974                            l4181 54E6  
                          l4173 54AE                            l4405 5414                            l4333 2310  
                          l4325 22D4                            l4317 2288                            l4261 204A  
                          l4253 2006                            l4245 1FD6                            l4237 1F90  
                          l4229 1F6A                            l4093 1EA0                            l4085 1E44  
                          l4077 1E00                            l4069 1DCA                            l4341 541E  
                          l4501 2408                            l5045 3858                            l5037 37F8  
                          l5029 37AC                            l5141 1924                            l5133 18E8  
                          l5125 18A8                            l5117 17B0                            l5109 1696  
                          l5061 0F76                            l5053 0E98                            l5205 4C3E  
                          l4423 5706                            l3703 44F4                            l3711 452E  
                          l1599 56CC                            l4415 52AE                            l4191 4EEC  
                          l4431 4E28                            l5311 2DB2                            l5303 2D5A  
                          l5231 2AA4                            l5223 5556                            l4159 5950  
                          l4175 54B6                            l4167 5966                            l4351 4952  
                          l4327 22F0                            l4335 2316                            l4319 228C  
                          l4271 208C                            l4263 2056                            l4255 2010  
                          l4247 1FE6                            l4239 1FA0                            l4095 1EC0  
                          l4087 1E7E                            l4343 542E                            l4511 2596  
                          l4503 2424                            l5047 385C                            l5039 3810  
                          l5151 19BC                            l5135 18FE                            l5127 18B2  
                          l5143 1928                            l5119 17BA                            l5071 110E  
                          l5063 101E                            l5055 0EB2                            l5207 4C5A  
                          l4425 5714                            l3713 453E                            l3705 4514  
                          l3721 4584                            l4417 52CA                            l4409 528C  
                          l3801 4D78                            l4193 4F04                            l4185 4EC4  
                          l4441 4E7E                            l4433 4E40                            l5313 2DBE  
                          l5305 2D7E                            l5241 2AF2                            l5233 2AB0  
                          l5225 2A74                            l5321 56DC                            l4177 54BE  
                          l4169 596A                            l4361 49BE                            l4353 4980  
                          l4337 231A                            l4329 2300                            l4281 20EE  
                          l4273 2098                            l4265 2062                            l4257 2026  
                          l4097 1EC4                            l4089 1E80                            l4521 26C8  
                          l4513 25C8                            l5161 1A3C                            l5153 19EA  
                          l5145 1956                            l5137 1906                            l5129 18BC  
                          l5081 11F6                            l5073 1112                            l5065 1032  
                          l5057 0EBE                            l5049 0E46                            l5209 4C72  
                          l5401 42A2                            l4427 5718                            l3715 455E  
                          l3707 4516                            l3731 45E4                            l3723 4592  
                          l3651 4B36                            l3643 4AEA                            l3811 4DB0  
                          l3803 4D80                            l4195 4F10                            l4187 4EC8  
                          l4443 4E96                            l4435 4E4C                            l5251 2B38  
                          l5243 2AF8                            l5235 2AC6                            l5227 2A8C  
                          l5219 552C                            l4531 3408                            l5315 5938  
                          l5323 56EC                            l4179 54E4                            l4363 4A0E  
                          l4355 4990                            l4347 4914                            l4291 2184  
                          l4283 20FA                            l4275 20A8                            l4267 2070  
                          l4259 2032                            l4371 5676                            l4099 1ED2  
                          l4515 2634                            l4507 245C                            l5171 470C  
                          l4603 55EC                            l5155 1A18                            l5147 1986  
                          l5139 191C                            l5091 1382                            l5083 129E  
                          l5075 112C                            l5067 10DA                            l5059 0F5A  
                          l5411 42EC                            l5403 42B6                            l5331 504E  
                          l3709 4528                            l3741 465A                            l3733 4602  
                          l3725 45B2                            l3653 4B6C                            l3645 4AFC  
                          l3661 5482                            l4381 5182                            l3821 4DDC  
                          l3813 4DB6                            l3805 4D92                            l3901 38FE  
                          l4701 4F80                            l4197 4F1C                            l4189 4EE0  
                          l4445 4EAE                            l4437 4E58                            l4429 4E04  
                          l4621 4134                            l4613 40E0                            l5261 2B8A  
                          l5309 2D9E                            l5253 2B5E                            l5245 2B0C  
                          l5237 2AD2                            l5229 2A90                            l4541 34A2  
                          l4533 3420                            l4525 33CC                            l5501 303A  
                          l5325 56F6                            l5317 56CE                            l4461 4878  
                          l4453 4838                            l4365 4A14                            l4357 499E  
                          l4349 4942                            l4293 21A2                            l4285 2116  
                          l4277 20C2                            l4269 207C                            l4373 5686  
                          l4517 2668                            l4509 252A                            l5181 476C  
                          l5173 4724                            l5165 46E4                            l4605 55F2  
                          l5157 1A1E                            l5149 19B6                            l5093 139C  
                          l5085 12BA                            l5077 1138                            l5069 10F6  
                          l5413 42F8                            l5405 42CA                            l5341 508C  
                          l5333 5066                            ?_pad 0011                            l3751 46C2  
                          l3743 467A                            l3735 460A                            l3727 45B6  
                          l3719 4580                            l3647 4B0E                            l3663 5486  
                          l3671 56C0                            l3831 30E0                            l4383 51A8  
                          l3815 4DCC                            l3807 4D9A                            l3823 4DE2  
                          l3903 3944                            l4703 4FA4                            l4711 4FE2  
                          l4199 4F28                            l4439 4E66                            l4631 4180  
                          l4615 4104                            l4623 4142                            l5271 2BEA  
                          l5263 2B90                            l5255 2B72                            l5247 2B1A  
                          l5239 2ADA                            l4551 3564                            l4543 34DA  
                          l4535 3458                            l4527 33D8                            l5511 3098  
                          l5503 303C                            l5319 56D2                            l5351 5526  
                          l4471 48A8                            l4463 4886                            l4455 4862  
                          l4447 480C                            l4359 49B0                            l4295 21AC  
                          l4287 2140                            l4279 20D2                            l3911 1A42  
                          l4519 26A4                            l5183 4778                            l5175 4730  
                          l5167 46FE                            l4391 537E                            l4607 5608  
                          l5159 1A32                            l5095 13A8                            l5087 1362  
                          l5079 11DA                            l5423 4342                            l5415 430C  
                          l5407 42DC                            l5335 5086                            l5327 5018  
                          l3681 442A                            l3745 468C                            l3737 461E  
                          l3729 45C4                            l3649 4B18                            l3657 5464  
                          l3665 5698                            l3761 4CAC                            l3841 315C  
                          l3833 3100                            l4377 516C                            l3825 4DF2  
                          l3817 4DD4                            l3809 4DA2                            l3905 3964  
                          l4713 4FFA                            l4705 4FBC                            l4641 41DA  
                          l4633 4192                            l4625 415A                            l4617 411C  
                          l5281 2C56                            l5273 2BF2                            l5265 2BA8  
                          l5249 2B32                            l4561 35F4                            l4553 3576  
                          l4545 34EC                            l4537 346A                            l4529 33E8  
                          l5513 30AC                            l5505 3050                            l5353 5528  
                          l5345 54EA                            l5361 4A48                            l4801 28C0  
                          l4721 26DA                            l4481 48D2                            l4473 48B2  
                          l4457 4864                            l4449 4824                            l4297 21BA  
                          l4289 2176                            l4369 5660                            l3921 1A7E  
                          l3913 1A4E                            l5185 4790                            l5177 4748  
                          l5169 4708                            l4393 53C4                            l4385 52DE  
                          l4609 561E                            l5097 144A                            l5089 137E  
                          l5193 4BB4                            l5441 43D2                            l5433 437A  
                          l5425 434E                            l5417 4324                            l5409 42E0  
                          l5329 5030                            l3691 446C                            l3683 442E  
                          l3675 43F8                            l3739 462C                            l3747 4692  
                          l3659 5470                            l3667 56A4                            l3771 4D12  
                          l3763 4CB8                            l3755 4C7A                            l3851 31BC  
                          l3843 3178                            l3835 3128                            l4379 5174  
                          l3827 4DFA                            l3819 4DD6                            l3907 3980  
                          l4707 4FC8                            l4715 556C                            l4651 422E  
                          l4643 41E6                            l4635 419E                            l4627 4168  
                          l4619 4128                            l5291 2CC6                            l5275 2C16  
                          l5267 2BAE                            l5259 2B88                            l4563 3612  
                          l4555 3594                            l4547 3510                            l4539 348A  
                          l5515 30B6                            l5507 307C                            l5451 2DEE  
                          l5347 54FA                            l5363 4A5C                            l5355 4A18  
                          l5371 58EE                            l4811 2908                            l4803 28D0  
                          l4731 2716                            l4723 26E6                            l4483 48E2  
                          l4459 4874                            l4299 21CC                            l3931 1AAE  
                          l3923 1A8E                            l3915 1A5C                            l4491 232C  
                          l5187 47F8                            l5179 4754                            l4571 5824  
                          l4387 5324                            l5099 1466                            l5195 4BCA  
                          l5443 43EC                            l5435 438E                            l5427 4354  
                          l5419 432A                            l3693 448A                            l3685 443C  
                          l3677 43FC                            l3749 46A2                            l3669 56A8  
                          l3773 4D26                            l3765 4CCC                            l3757 4C8A  
                          l3861 325C                            l3853 31C4                            l3845 3194  
                          l3837 3148                            l3781 57DE                            l3909 39EA  
                          l4709 4FD4                            l4717 5580                            l4653 423E  
                          l4645 41F6                            l4637 41AE                            l4629 4174  
                          l4661 3F8E                            l5293 2CEA                            l5285 2C72  
                          l5269 2BD2                            l4565 362A                            l4557 35AC  
                          l4549 3528                            l5517 30CA                            l5509 3096  
                          l5461 2E6E                            l5453 2E0A                            l5349 5512  
                          l5365 4A6C                            l5357 4A24                            l5373 58F0  
                          l5445 5760                            l4581 588A                            l4821 2948  
                          l4813 2916                            l4805 28E2                            l4741 2746  
                          l4733 2726                            l4725 26F4                            l4901 3BF6  
                          l4485 48F2                            l4469 489E                            l3941 1AD8  
                          l3933 1AC0                            l3925 1A90                            l3917 1A5E  
                          l4493 234C                            l5189 4802                            l4573 582A  
                          l4397 532E                            l5197 4BCE                            l5437 43AE  
                          l5429 4364                            l5605 513C                            l5391 595A  
                          l3695 4492                            l3687 445C                            l3679 440A  
                          l3767 4CE0                            l3759 4C9E                            l3871 3318  
                          l3863 3262                            l3855 31CE                            l3847 31A6  
                          l3839 3158                            l3791 4D52                            l3783 57FA  
                          l4719 5596                            l4655 4258                            l4647 4210  
                          l4639 41C8                            l4671 3FDA                            l4663 3F9A  
                          l5287 2C96                            l5279 2C32                            l4567 3660  
                          l4559 35E2                            l5471 2ECC                            l5463 2E70  
                          l5455 2E16                            l4911 579E                            l5367 4A80  
                          l5359 4A34                            l5375 58FA                            l5447 5774  
                          l4831 29BA                            l4823 2976                            l4807 28F8  
                          l4815 2928                            l4751 277C                            l4743 274C  
                          l4735 2728                            l4727 26F6                            l4487 4902  
                          l4479 48C6                            l3943 1AE8                            l3951 1B12  
                          l3935 1AC2                            l3919 1A6E                            l3927 1A98  
                          l4495 2394                            l4583 5864                            l4575 5804  
                          l4399 5374                            l4591 5090                            l5199 4BE8  
                          l5439 43BE                            l5385 5902                            l3697 44A6  
                          l3689 4460                            l3777 55AC                            l3769 4CE4  
                          l3881 336A                            l3873 3332                            l3857 31D4  
                          l3865 32C6                            l3849 31B6                            l3793 4D5A  
                          l4649 4222                            l4681 4020                            l4673 3FE6  
                          l4665 3FA6                            l4657 3F52                            l5297 2D1A  
                          l5481 2F3C                            l5473 2EE0                            l5465 2E84  
                          l5457 2E28                            l5449 2DDC                            l4913 57A0  
                          l4905 578C                            l5377 58FC                            l5369 58E4  
                          l5393 58A4                            l4841 2A32                            l4833 29E4  
                          l4817 2936                            l4809 28FE                            l4761 27BC  
                          l4753 278C                            l4745 275A                            l4729 2706  
                          l4737 2730                            l3961 1B4A                            l3953 1B22  
                          l3945 1AF8                            l3937 1AC8                            l3929 1AA8  
                          l4497 23A8                            l4585 586A                            l4577 580A  
                          l4593 50F2                            l4569 522E                            l5387 590A  
                          l3699 44B4                            l3779 55C6                            l3883 337C  
                          l3867 32E0                            l3875 3342                            l3859 3256  
                          l4595 5736                            l3795 4D5E                            l3787 4D40  
                          l4691 4082                            l4683 403A                            l4675 3FF2  
                          l4659 3F76                            l4667 3FB4                            l5299 2D3E  
                          l5491 2FC4                            l5483 2F68                            l5475 2F0C  
                          l5467 2EB0                            l5459 2E54                            l4915 57A2  
                          l4907 5796                            l5379 58FE                            l4579 5884  
                          l4851 2A68                            l4843 2A4E                            l4827 29A0  
                          l4835 29E8                            l4819 293A                            l4763 27CC  
                          l4771 27EC                            l4755 278E                            l4747 275C  
                          l4739 2740                            l3971 1B5E                            l3963 1B4E  
                          l3955 1B34                            l3947 1B08                            l3939 1AD6  
                          l4499 23E4                            l4587 5844                            l4931 3E06  
                          l5395 4272                            l5389 5914                            l3885 3388  
                          l3877 3354                            l3869 32FE                            l4597 5752  
                          l3797 4D6C                            l3789 4D44                            l4693 4094  
                          l4685 404C                            l4677 4004                            l4669 3FCC  
                          l5493 2FDE                            l5485 2F82                            l5477 2F26  
                          l5469 2ECA                            l4909 579C                            l3893 57B6  
                          l4917 58C6                            l4845 2A52                            l4837 2A02  
                          l4829 29AC                            l4781 282A                            l4773 27FC  
                          l4765 27D4                            l4749 276C                            l4757 2796  
                          l4861 3A66                            l3981 1B72                            l3973 1B62  
                          l3965 1B52                            l3957 1B42                            l3949 1B0A  
                          l4589 584A                            l4933 3E12                            l4925 3DDE  
                          l5397 4284                            l5581 5104                            l3887 3390  
                          l3879 3364                            l3799 4D74                            l4695 40A0  
                          l4687 4058                            l4679 4010                            l5495 2FE0  
                          l5487 2F84                            l5479 2F28                            l3895 57C6  
                          l4847 2A60                            l4839 2A18                            l4791 2872  
                          l4783 283A                            l4775 27FC                            l4767 27D8  
                          l4759 27A6                            l4871 3AE4                            l4863 3A74  
                          l3991 1B86                            l3983 1B76                            l3975 1B66  
                          l3967 1B56                            l3959 1B46                            l4599 5626  
                          l4951 3E6E                            l4943 3E3A                            l4935 3E18  
                          l4927 3DE2                            l4919 3DBC                            l5399 4296  
                          l5591 5120                            l5583 5108                            l3889 33A0  
                          l3897 3880                            l4697 40B0                            l4689 4068  
                          l5497 2FF4                            l5489 2F98                            l4849 2A66  
                          l4793 2886                            l4785 284A                            l4881 3B38  
                          l4873 3AEC                            l4865 3ABA                            l3993 1BB0  
                          l3985 1B7A                            l3977 1B6A                            l3969 1B5A  
                          l4961 3E96                            l4953 3E74                            l4945 3E3E  
                          l4937 3E32                            l4929 3DFA                            l5593 5124  
                          l5585 5114                            l3899 389C                            l4699 40CA  
                          l5499 3020                            l4795 2894                            l4787 285A  
                          l4779 2810                            l4891 3BAE                            l4883 3B74  
                          l4875 3AF8                            l4867 3AD0                            l4859 3A56  
                          l3995 1BCC                            l3987 1B7E                            l3979 1B6E  
                          l4971 3ED0                            l4963 3E9A                            l4955 3E8E  
                          l4947 3E56                            l5595 5128                            l5587 5118  
                          l5579 5100                            l4797 28A0                            l4789 2862  
                          l4893 3BB2                            l4885 3B80                            l4877 3B2A  
                          l3997 1BDC                            l3989 1B82                            l4981 3EF6  
                          l4973 3EEA                            l4965 3EB2                            l4949 3E62  
                          l5597 513C                            l5589 511C                            l4799 28BE  
                          l4895 3BD6                            l4887 3B8E                            l4879 3B2C  
                          l3999 1BF2                            l4991 3F46                            l4983 3F0E  
                          l4967 3EBE                            l5599 513C                            l4897 3BE6  
                          l4889 3BAC                            l4993 3F4C                            l4985 3F1A  
                          l4969 3ECA                            l4899 3BF4                            l4995 3676  
                          l4987 3F26                            l4979 3EF2                            l4997 367A  
                          l4989 3F2C                            l4999 3684                            STR_1 0E16  
                          STR_2 0E1E                            STR_3 0E24                            STR_4 0E31  
                          STR_5 0E3B                            STR_6 0E05                            u3000 453E  
                          u3001 453A                            u3010 4592                            u3011 458E  
                          u3020 45C4                            u3100 4D12                            u3021 45C0  
                          u3101 4D0E                            u3030 4602                            u3110 55C6  
                          u3031 45FE                            u3111 55C2                            u3040 462C  
                          u3200 3128                            u3120 4D52                            u4000 21EC  
                  _BAUD4CONbits 000EE9                            u3041 4628                            u3201 3124  
                          u3121 4D4E                            u4001 21E8                            _LATE 000F7D  
                          u3050 465A                            u3210 3158                            u3130 4D6C  
                          u4010 221A                            u3051 4656                            u3211 3154  
                          u3131 4D68                            u4011 2216                            _LATG 000F7F  
                          u3060 46A2                            u3300 3354                            u3220 3178  
                          u3140 4D92                            u4100 499E                            u4020 2230  
                          u3061 469E                            u3301 3350                            u3221 3174  
                          u3141 4D8E                            u4101 499A                            u4021 222C  
                          u3070 4C8A                            u3310 3364                            u3230 31A6  
                          u3150 4DB0                            u4110 49BE                            u4030 2244  
                          u3071 4C86                            u3311 3360                            u3231 31A2  
                          u3151 4DAC                            u4111 49BA                            u4031 2240  
                          u3080 4CAC                            u3320 337C                            u3240 31B6  
                          u3160 4DCC                            u5000 2A60                            u4200 4886  
                          u4120 4A0E                            u4040 225E                            u3400 1A6E  
                          u3081 4CA8                            u3321 3378                            u3241 31B2  
                          u3161 4DC8                            u5001 2A5C                            u4201 4882  
                          u4121 4A0A                            u4041 225A                            u3401 1A6A  
                          u3090 4D02                            u3250 32E0                            u3170 4DF2  
                          u3330 57C6                            u5010 3A66                            u4210 489A  
                          u4050 22A6                            u4130 5676                            u3410 1A7E  
                          _T2PR 000FBC                            u3091 4CFE                            u3251 32DC  
                          u3171 4DEE                            u3331 57C2                            u5011 3A62  
                          u4211 4896                            u4051 22A2                            u4131 5672  
                          u3411 1A7A                            u3260 32FE                            u3180 3110  
                          u4140 51C4                            u3340 57DC                            u5100 3BF4  
                          u5020 3A74                            u4220 48C2                            u4060 22D4  
                          u3500 1BCA                            u3420 1AC0                            u4300 252A  
                          u3261 32FA                            u3181 310A                            u4141 51C0  
                          u3341 57D8                            u5101 3BF0                            u5021 3A70  
                          u4221 48BE                            u4061 22D0                            u3421 1ABC  
                          u4301 2526                            u4150 5730                            u3270 3318  
                          u3190 3112                            u3350 389C                            u5030 3AD0  
                          u4230 48E2                            u4070 230E                            u3510 1BF2  
                          u3430 1AD6                            u4310 25C8                            u5110 3E32  
                          u4151 572C                            u3271 3314                            u3351 3898  
                          u5031 3ACC                            u4231 48DE                            u4071 230A  
                          u3511 1BEE                            u3431 1AD2                            u4311 25C4  
                          u5111 3E2E                            u3280 3332                            u3360 3980  
                          u4160 4E7E                            u4400 347C                            u5040 3B26  
                          u4240 48F2                            u4080 4942                            u3600 1D2A  
                          u3520 1C10                            u3440 1AE8                            u4320 2688  
                          u5120 3E8E                            u5200 18D2                            u3281 332E  
                          u3361 397C                            u4161 4E7A                            u4401 3474  
                          u5041 3B22                            u4241 48EE                            u4081 493E  
                          u3601 1D26                            u3521 1C0C                            u3441 1AE4  
                          u5121 3E8A                            u5201 18CE                            u3290 3342  
                          u4170 4E96                            u5050 3B70                            u4090 4980  
                          u3610 1D60                            u3530 1C30                            u3450 1AF8  
                          u4330 26A4                            u4250 236C                            u5130 3EEA  
                          u5210 18E8                            u3291 333E                            u4171 4E92  
                          u5051 3B6C                            u4091 497C                            u3611 1D5C  
                          u3531 1C2C                            u3451 1AF4                            u4331 26A0  
                          u5131 3EE6                            u5211 18E4                            u2900 4B36  
                          u4500 3588                            u4420 34B4                            u4340 33E8  
                          u5060 3B8E                            u4180 4824                            u3700 1E2A  
                          u3620 1D70                            u3540 1C3E                            u3460 1B34  
                          u4260 2394                            u5140 3F46                            u5220 18FE  
                          u5300 4C72                            u2901 4B32                            u4501 3580  
                          u4421 34AC                            u4341 33E4                            u5061 3B8A  
                          u4181 4820                            u3701 1E26                            u3621 1D6C  
                          u3541 1C3A                            u3461 1B30                            u4325 267E  
                          u4261 2390                            u5141 3F42                            u5221 18FA  
                          u5301 4C6E                            u2910 4B6C                            u3374 39DA  
                          u5310 2B5E                            u4350 33FA                            u5070 3B9E  
                          u4190 4858                            u3710 1E44                            u3630 1D9C  
                          u3550 1C4E                            u3470 1B42                            u3390 1A5C  
                          u4270 23C8                            u5230 191C                            u5150 16D8  
                          u2911 4B68                            u3375 39D6                            u5311 2B5A  
                          u4351 33F2                            u6007 5894                            u5071 3B9A  
                          u3711 1E40                            u3631 1D98                            u3551 1C4A  
                          u3471 1B3E                            u3391 1A58                            u4255 2362  
                          u5231 1918                            u5151 16D4                            u2920 54A6  
                          u3800 3C98                            u3384 3A44                            u5320 2B84  
                          u4520 35BE                            u4440 34EC                            u5080 3BAC  
                          u3720 1E7E                            u3640 1DAC                            u3560 1C80  
                          u3480 1BB0                            u4280 23E4                            u4600 5608  
                          u5240 1956                            u5160 17A6                            u5400 5086  
                          u2921 54A2                            u3801 3C94                            u3385 3A40  
                          u5321 2B80                            u4521 35B6                            u4441 34E8  
                          u6017 577E                            u5081 3BA8                            u3721 1E7A  
                          u3641 1DA8                            u3561 1C7C                            u3481 1BAC  
                          u4281 23E0                            u4601 5604                            u5241 1952  
                          u5161 17A2                            u5401 5082                            u2930 56C0  
                          u3810 3D3C                            u5330 2BD2                            u4450 34FE  
                          u4418 347E                            u4370 3432                            u5090 3BE6  
                          u3730 1E90                            u3650 1DC8                            u3570 1C8E  
                          u3490 1BC8                            u4290 2424                            u4610 561E  
                          u5250 1986                            u5170 17D2              verify_color@color2 0098  
                          u2931 56BC                            u3811 3D38                            u5331 2BCE  
                          u6107 35D4                            u4451 34F6                            u4371 342A  
                          u6027 56E2                            u5091 3BE2                            u4195 484E  
                          u3731 1E8C                            u3651 1DC4                            u3571 1C8A  
                          u3491 1BC2                            u4291 2420                            u4275 23BE  
                          u4611 561A                            u5251 1982                            u5171 17CE  
                          u2940 440A                            u4620 415A                            u4700 4004  
                          u5340 2C16                            u4540 35F4                            u3820 54D2  
                          u3900 1F2E                            u3740 1EA0                            u3660 1DD8  
                          u3580 1CAC                            u5260 19B6                            u5180 17E8  
                          u5500 43BE                            u2941 4406                            u4621 4156  
                          u4701 4000                            u5341 2C12                            u6117 361C  
                          u4541 35F0                            u6037 3412                            u3821 54CA  
                          u3901 1F2A                            u3741 1E9C                            u3661 1DD4  
                          u3581 1CA8                            u5261 19B2                            u5181 17E4  
                          u5501 43BA                            u2950 443C                            u4630 4192  
                          u4710 403A                            u5350 2C56                            u4550 3606  
                          u4518 358A                            u4470 353A                            u4438 34B6  
                          u4390 346A                            u5510 2DEE                            u3910 1F3E  
                          u3750 1EC0                            u3670 1DEA                            u3590 1CE4  
                          u5270 19EA                            u5190 18A8                            u5430 4296  
                          u2951 4438                            u6207 41A4                            u4631 418E  
                          u4711 4036                            u5351 2C52                            u6127 3652  
                          u4551 35FE                            u4471 3532                            u4391 3466  
                          u6047 344A                            u5511 2DEA                            u3911 1F3A  
                          u3751 1EBC                            u3671 1DE6                            u3591 1CE0  
                          u5271 19E6                            u5191 18A4                            u5431 4292  
                          u2880 4AFC                            u3840 4EE0                            u4640 41C8  
                          u4720 404C                            u5360 2C96                            u4368 33FC  
                          u5520 2E28                            u4800 2716                            u3920 1F7E  
                          u3760 1ED2                            u3680 1E00                            u5280 1A18  
                          u5440 42B6                            u2961 4466                            u2881 4AF8  
                          u3841 4EDC                            u6217 41EC                            u4641 41C4  
                          u4721 4048                            u5361 2C92                            u6137 554A  
                          u6057 3494                            u5521 2E24                            u4801 2712  
                          u3921 1F7A                            u3761 1ECE                            u3681 1DFC  
                          u5281 1A14                            u5441 42B2                            u2970 448A  
                          u2890 4B0E                            u3850 4F04                            u4650 41DA  
                          u4730 4082                            u5370 2CEA                            u4570 363C  
                          u4538 35C0                            u4490 3576                            u5530 2E84  
                          u4810 275A                            u3930 1F90                            u3770 1EEE  
                          u3690 1E16                            u5290 1A32                            u5450 42DC  
                          u2971 4486                            u2891 4B0A                            u3851 4F00  
                          u6227 4234                            u4651 41D6                            u4731 407E  
                          u5371 2CE6                            u6147 2B24                            u4571 3634  
                          u4491 3572                            u6067 34CC                            u5531 2E80  
                          u4811 2756                            u3931 1F8C                            u3771 1EEA  
                          u3691 1E12                            u5291 1A2E                            u5451 42D8  
                          u2980 44B4                            u3780 3C2C                            u3860 4F4E  
                          u4660 4210                            u4740 4094                            u5380 2D3E  
                          u4468 3500                            u4388 3434                            u5540 2EE0  
                          u4900 28F8                            u4820 276C                            u3940 1FA0  
                          u5460 430C                            u2981 44B0                            u3781 3C28  
                          u3861 4F4A                            u6237 558A                            u4661 420C  
                          u4741 4090                            u6157 3FAC                            u5381 2D3A  
                          u6077 351A                            u5541 2EDC                            u4901 28F4  
                          u4821 2768                            u3941 1F9C                            u5461 4308  
                          u2990 44F4                            u3790 3C74                            u3870 4F66  
                          u4670 4222                            u4750 40CA                            u5390 2D7E  
                          u4590 3674                            u5550 2F3C                            u4910 2916  
                          u4830 277C                            u3838 54D4                            u3950 1FD6  
                          u5470 433E                            u2991 44F0                            u3791 3C70  
                          u3871 4F62                            u6247 4E5E                            u4671 421E  
                          u4751 40C6                            u6167 4016                            u5391 2D7A  
                          u4591 3670                            u6087 3556                            u5551 2F38  
                          u4911 2912                            u4831 2778                            u3951 1FD2  
                          u5471 433A                            u3880 5932                            u4760 4FFA  
                          u4680 4258                            u4568 3608                            u4488 353C  
                          u5560 2F98                            u4920 2936                            u4840 27BC  
                          u3960 1FE6                            u5480 4364                            u3881 592E  
                          u4761 4FF6                            u6257 4EA0                            u4681 4254  
                          u6177 405E                            u6097 359E                            u5561 2F94  
                          u4921 2932                            u4841 27B8                            u3961 1FE2  
                          u5481 4360                            u4770 5012                            u4690 3FCC  
                          u5570 2FF4                            u4930 2948                            u4850 27FC  
                          u3970 2160                            u3890 1F1C                            u5490 4376  
                          u4771 500E                            u6267 4F2E                            u6187 40A6  
                          u4691 3FC8                            u5571 2FF0                            u4931 2944  
                          u4851 27F8                            u3891 1F18                            u5491 4372  
                          u4588 363E                            u5580 3050                            u4940 2976  
                          u4860 2872                            u4780 26F4                            u3980 21BA  
                          u6277 4F70                            u6197 413A                            u5581 304C  
                          u4941 2972                            u4861 286E                            u4781 26F0  
                          u3981 21B6                            u5590 30AC                            u4950 298C  
                          u4870 2894                            u4790 2706                            u3990 21DA  
                          u6287 4FDA                            u5591 30A8                            u4951 2988  
                          u4871 2890                            u4791 2702                            u3991 21D6  
                          u3975 2156                            u5807 111E                            u4960 29A0  
                          u4880 28BE                            u4961 299C                            u4881 28BA  
                          u5817 138E                            u4970 29BA                            u4890 28E2  
                          u4971 29B6                            u4891 28DE                            u5907 37EA  
                          u5827 3DEC                            u5747 5024                            u4980 2A02  
                          u4981 29FE                            u5917 3866                            u5837 3E48  
                          u5757 505A                            u4990 2A32                            u4991 2A2E  
                          u5927 5814                            u5847 3EA4                            u5767 43DE  
                          u5937 5834                            u5857 3F00                            u5777 4BDA  
                          u5947 5854                            u5867 368E                            u5787 0EA4  
                          u5957 5874                            u5877 36AA                            u5797 1102  
                          u5967 4718                            u5887 370A                            u5977 473C  
                          u5897 376E                            u5987 4760                            u5997 4784  
                          abs@a 0013                            _dbuf 0378                            _main 5100  
                          _dtoa 30E0                            _prec 02E5                            _nout 02E1  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 4EC4                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 532E                 __end_of_HighISR 0028  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 4580  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1F02                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 46E4                 __end_of___fldiv 2A74                 __end_of___awdiv 4E04  
               __end_of___flneg 5698                 __end_of___flmul 232C                 __end_of___flsub 5464  
               __end_of___fltol 4914                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5864                           _LED_C 5884                           _LED_G 5844  
                         _LED_R 5804                           i2l693 0024                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5938      __end_of_I2C_2_Master_Start 5984         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 595A                 __end_of_compare 5626                    compare@lower 006A  
                         _flags 00F6                           _color 00F8                    compare@upper 006E  
                         _fputc 4AEA                           _fputs 5464                           pad@fp 0011  
                         _width 02E3                           _putch 5986                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5660                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 52DE                color_display@buf 0079         __end_of_color_read_Blue 53CE  
         _I2C_2_Master_RepStart 5966                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 51CE                    __end_of_main 516C                    __end_of_dtoa 33CA  
          __end_of_detect_color 1A42                    __end_of_stop 4F80          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4                          ??_main 005F                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
               _buggylight_init 5938                       ??_LED_OFF 0001          _initDCmotors_parameter 4A18  
                  ?_setMotorPWM 000F                          ?_fputc 0001                          ?_fputs 000A  
              ___awdiv@dividend 0007                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5643 000A  
                        i2l5645 001A                          i2l5647 0020              turnLeft@angle_left 0024  
                     ??_HighISR 0001        __end_of_color_click_init 5702                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 3C08  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 4914                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 57DE                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2DD8                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 2A74                   compare@result 0070                          _memory 033C  
                        clear_0 51FE                          clear_1 520A                          clear_2 5216  
              ___awdiv@quotient 000D                          _second 02EB                          _motorL 02D3  
                        _motorR 02C9                          isa$std 000001                          pad@buf 0013  
                        _roundf 232C                          dtoa@fp 001C                          _strlen 5698  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 58C4  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 51CE                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                __end_of_turnLeft 426E  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                      __accesstop 0060  
       __end_of__initialization 521C                   verify_color@m 0092                   verify_color@w 0094  
      __end_of_color_read_Clear 541E                      ___flneg@f1 0001        __end_of_color_read_Green 537E  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5884                   __end_of_LED_C 58A4                   __end_of_LED_G 5864  
                 __end_of_LED_R 5824                ?_color_read_Blue 0005                 _Interrupts_init 595A  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4E04                    __pidataBANK0 5984  
                  __pidataBANK2 5988         __end_of_buggylight_init 594E            turnRight@angle_right 0024  
         _distance_measure$3276 0074                   __end_of_fputc 4BB4               detect_color@color 008B  
                 __end_of_fputs 54A8                   __end_of_putch 5988                   __end_of_toint 0E05  
           __end_of_Timer0_init 5920                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001               ?_distance_measure 006A  
            ??_distance_measure 0070                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00F6                      __pbssBANK2 02C9  
                    __pbssBANK3 0300                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 58C4                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 00E0                         ?_goback 0058                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5824  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E              short_burst_back@mL 001F  
            short_burst_back@mR 0021                    _detect_color 0E46   __end_of_color_data_collection 3F52  
       __end_of_Interrupts_init 5966          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 58E4              _I2C_2_Master_Start 597A  
                    _initUSART4 58E4              _I2C_2_Master_Write 594E                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00F2                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5902         sendStringSerial4@string 0002  
                       ___aodiv 43F8                         ___fladd 1A42                         ___aomod 4580  
                       ___fldiv 26DA                         ___awdiv 4D40                         ___flneg 5660  
                       ___flmul 1F02                         ___flsub 541E                         ___fltol 480C  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00       distance_measure@threshold 007A  
                       __pcinit 51CE                         __ramtop 0E00                      _read_color 522E  
                     ?_turnLeft 0020                         __ptext0 5100                         __ptext1 5014  
                       __ptext2 426E                         __ptext3 4BB4                         __ptext4 0E46  
                       __ptext5 55EC                         __ptext6 3DBC                         __ptext7 522E  
                       __ptext8 5090                         __ptext9 3676                         _compare 55EC  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 5626                   _RxBufWriteCnt 00FD  
                       goback@i 00DE          distance_measure@CC_amb 0078          distance_measure@CG_amb 0072  
                       _sprintf 528C                         main@rgb 01C8            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 521C              setMotorPWM@PWMduty 0018  
               _CALIBRATION_135 00FF                 _CALIBRATION_180 02ED                         fputc@fp 0003  
         __end_of_test_function 43F8                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 00EA                 test_function@mR 00EC                 ??_fullSpeedBack 0024  
                    ??_pin_init 0001              ??_color_click_init 0005                _short_burst_back 5760  
             __end_of_vfpfcnvrt 3DBC           __end_of_short_reverse 556C                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 54EA  
                    ??_turnLeft 0025  __end_of_initDCmotors_parameter 4AEA                       _PORTFbits 000F8E  
      test_function@stop_signal 00F4               __end_of_turnRight 40E0                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
                    goback@buf2 0200                      goback@buf3 0164        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 02E9                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 0364                    _EUSART4TXbuf 0300               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0092  
         __end_of_color_display 5100                      main@motorL 01EC                      main@motorR 01F6  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 007F  
                detect_color@BC 007B                  detect_color@BG 0089                  detect_color@GB 0083  
                detect_color@GG 0085                  detect_color@BR 0087                  detect_color@GR 007D  
                detect_color@RB 0081                  detect_color@RG 0079                  detect_color@RR 008C  
         __end_of_color_predict 5760                  __end_of___flge 4A18                  _fullSpeedAhead 4F80  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5804                  __end_of_action 30E0                     ?_read_color 000C  
                __end_of_goback 2DD8                  __end_of_roundf 26DA              turnRight@delay_135 0026  
            turnRight@delay_180 0028                  __end_of_strlen 56CE             color_read_Clear@tmp 000A  
           start_initialization 51CE                     __end_of_abs 55EC                     __end_of_pad 4D40  
                 _TxBufWriteCnt 00FB               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
                _reverse_square 556C         __end_of_initDCmotorsPWM 552C                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 5014                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 005E                        ??_goback 005C                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK0 00FE                     __pdataBANK2 02ED  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                        ?_LED_OFF 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                   __pcstackBANK2 0200                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 55AC                       _dtoa$2910 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                 turnRight@i_1357 002C  
               turnRight@i_1358 002E                  turnLeft@i_1332 002C                  turnLeft@i_1333 002E  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 57B6               _I2C_2_Master_Init 578C  
             _I2C_2_Master_Read 54A8               _I2C_2_Master_Stop 5970          toggle_light@toggletime 0001  
                  _RxBufReadCnt 00FC        __end_of_short_burst_back 578C                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001                       action@buf 0264  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 5702  
         _color_data_collection 3DBC             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                 ?_reverse_square 0026                        _PIE0bits 000E29  
            ?_sendStringSerial4 0002                        _PIE4bits 000E2D                     turnRight@mL 0020  
                   turnRight@mR 0022                        _PIR0bits 000E33                        _PIR4bits 000E37  
                      i2u567_40 001A                        i2u567_41 0016                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                     _array_index 00F9                       _vfpfcnvrt 3C08  
     __end_of_I2C_2_Master_Idle 57DE            __end_of_toggle_light 3676       __end_of_I2C_2_Master_Init 57B6  
     __end_of_I2C_2_Master_Read 54EA               ___wmul@multiplier 0001                       goback@buf 0100  
     __end_of_I2C_2_Master_Stop 597A                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 5090          test_function@amb_light 00F0                       main@white 01D0  
             ??_color_read_Blue 0007                       _stop_move 02E7                   detect_color@m 0071  
                 detect_color@w 0073                    _TxBufReadCnt 00FA                       _turnRight 3F52  
               _calibrate_white 3676       __end_of_sendStringSerial4 5732               _amb_light_measure 46E4  
 __end_of_I2C_2_Master_RepStart 5970              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3A54  
                    roundf@F527 02DD                _distance_measure 4BB4                    ??_initUSART4 0001  
            ?_amb_light_measure 006A                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 4EC4  
                  __Lsmallconst 0E00            compare@value2compare 006C             ??_amb_light_measure 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 02C8                      sprintf@fmt 0062                        ___xxtofl 3A54  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5902  
                    ?_turnRight 0020                        __ptext10 52DE                        __ptext11 532E  
                      __ptext20 541E                        __ptext12 537E                        __ptext21 1A42  
                      __ptext13 5804                        __ptext30 26DA                        __ptext22 5660  
                      __ptext14 5824                        __ptext31 5884                        __ptext23 1F02  
                      __ptext15 5844                        __ptext40 5970                        __ptext32 5760  
                      __ptext24 4914                        __ptext16 5864                        __ptext41 597A  
                      __ptext33 58A4                        __ptext25 480C                        __ptext17 46E4  
                      __ptext50 40E0                        __ptext42 57B6                        __ptext34 58E4  
                      __ptext26 53CE                        __ptext18 5626                        __ptext51 556C  
                      __ptext43 578C                        __ptext35 4A18                        __ptext27 5966  
                      __ptext19 232C                        __ptext60 516C                        __ptext52 4E04  
                      __ptext44 5938                        __ptext36 54EA                        __ptext28 54A8  
                      __ptext61 3C08                        __ptext53 4EC4                        __ptext45 2DD8  
                      __ptext37 56CE                        __ptext29 3A54                        __ptext70 43F8  
                      __ptext62 30E0                        __ptext54 4F80                        __ptext46 33CA  
                      __ptext38 58C4                        __ptext71 5702                        __ptext63 4C7A  
                      __ptext55 3880                        __ptext47 552C                        __ptext39 594E  
                      __ptext72 5920                        __ptext64 5698                        __ptext56 57DE  
                      __ptext48 2A74                        __ptext73 5902                        __ptext65 5464  
                      __ptext57 4D40                        __ptext49 3F52                        __ptext74 595A  
                      __ptext66 4AEA                        __ptext58 5732                        __ptext67 5986  
                      __ptext59 528C                        __ptext68 55AC                        __ptext69 4580  
     __end_of_amb_light_measure 480C                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A                  turnRight@delay 0030          test_function@test_code 00F5  
                 turnLeft@delay 0030                        action@mL 00E0                        action@mR 00E2  
                    turnLeft@mL 0020                      turnLeft@mR 0022              __end_of_read_color 528C  
                      _pin_init 58A4                      turnRight@i 002A                        isa$xinst 000000  
          distance_measure@stop 007C                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FE                        goback@mL 0058                        goback@mR 005A  
                      _vfprintf 516C                        _turnLeft 40E0                ___aomod@dividend 0001  
       __end_of_calibrate_white 3880                      _INTCONbits 000FF2                     _setMotorPWM 3880  
                 ?_detect_color 0071                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C               ??_buggylight_init 0001  
              ??_fullSpeedAhead 001E                   _test_function 426E                       turnLeft@i 002A  
              reverse_square@mL 0026                reverse_square@mR 0028                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                   _short_reverse 552C                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                _color_click_init 56CE  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$3275 008E  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 006A  
            distance_measure@mR 006C                  ??_detect_color 0075                     ??_turnRight 0025  
             ?_short_burst_back 001F                   ___fladd@signs 000D                ??_reverse_square 002A  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012              ??_short_burst_back 0023  
               _sendCharSerial4 5920                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                    _toggle_light 33CA                    ___aomod@sign 0012  
                  _verify_color 5014                     _roundf$3277 004F                     _roundf$3278 0049  
                 _color_display 5090  
