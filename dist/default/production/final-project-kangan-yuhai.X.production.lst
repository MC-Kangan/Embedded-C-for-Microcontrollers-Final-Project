

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 16 16:29:04 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  005D8E                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _SENSITIVITY
   136  005D8E  0159               	dw	345
   137                           
   138                           	psect	smallconst
   139  000E00                     __psmallconst:
   140                           	callstack 0
   141  000E00  00                 	db	0
   142  000E01  0000               	dw	0
   143  000E03  4B00               	dw	19200
   144  000E05                     __end_of_toint:
   145                           	callstack 0
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISEbits	set	3973
   151  0000                     _LATHbits	set	3968
   152  0000                     _SSP2CON2bits	set	3802
   153  0000                     _LATG	set	3967
   154  0000                     _LATE	set	3965
   155  0000                     _RX4PPS	set	3605
   156  0000                     _SSP2CLKPPS	set	3612
   157  0000                     _SSP2DATPPS	set	3613
   158  0000                     _ANSELDbits	set	3751
   159  0000                     _ANSELFbits	set	3764
   160  0000                     _TRISFbits	set	3974
   161  0000                     _PORTFbits	set	3982
   162  0000                     _T2PR	set	4028
   163  0000                     _T2CONbits	set	4029
   164  0000                     _TRISHbits	set	3976
   165  0000                     _TRISGbits	set	3975
   166  0000                     _PWM7DCH	set	4000
   167  0000                     _PWM6DCH	set	4003
   168  0000                     _SSP2BUF	set	3797
   169  0000                     _SSP2ADD	set	3798
   170  0000                     _SSP2CON1bits	set	3801
   171  0000                     _LATAbits	set	3961
   172  0000                     _LATFbits	set	3966
   173  0000                     _LATGbits	set	3967
   174  0000                     _TRISAbits	set	3969
   175  0000                     _TRISCbits	set	3971
   176  0000                     _TRISDbits	set	3972
   177  0000                     _LATCbits	set	3963
   178  0000                     _LATDbits	set	3964
   179  0000                     _RC4REG	set	3811
   180  0000                     _SP4BRGL	set	3813
   181  0000                     _TX4STAbits	set	3816
   182  0000                     _BAUD4CONbits	set	3817
   183  0000                     _SSP2CON2	set	3802
   184  0000                     _SSP2STAT	set	3800
   185  0000                     _PIE0bits	set	3625
   186  0000                     _PIR4bits	set	3639
   187  0000                     _RC0PPS	set	3682
   188  0000                     _RC7PPS	set	3689
   189  0000                     _RD5PPS	set	3695
   190  0000                     _RE2PPS	set	3700
   191  0000                     _RD6PPS	set	3696
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON0bits	set	4053
   195  0000                     _T2CLKCONbits	set	4031
   196  0000                     _T2HLTbits	set	4030
   197  0000                     _PWM6CONbits	set	4004
   198  0000                     _PWM7CONbits	set	4001
   199  0000                     _T0CON1bits	set	4054
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PIR0bits	set	3635
   202  000E05                     STR_1:
   203                           
   204                           ; BSR set to: 14
   205  000E05  25                 	db	37
   206  000E06  64                 	db	100	;'d'
   207  000E07  09                 	db	9
   208  000E08  25                 	db	37
   209  000E09  64                 	db	100	;'d'
   210  000E0A  09                 	db	9
   211  000E0B  25                 	db	37
   212  000E0C  64                 	db	100	;'d'
   213  000E0D  09                 	db	9
   214  000E0E  25                 	db	37
   215  000E0F  64                 	db	100	;'d'
   216  000E10  0D                 	db	13
   217  000E11  0A                 	db	10
   218  000E12  00                 	db	0
   219  000E13  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  0059A4                     __pcinit:
   225                           	callstack 0
   226  0059A4                     start_initialization:
   227                           	callstack 0
   228  0059A4                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (2 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  0059A4  0E8E               	movlw	low __pidataBANK0
   234  0059A6  6EF6               	movwf	tblptrl,c
   235  0059A8  0E5D               	movlw	high __pidataBANK0
   236  0059AA  6EF7               	movwf	tblptrh,c
   237  0059AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  0059AE  6EF8               	movwf	tblptru,c
   239  0059B0  0009               	tblrd		*+	;fetch initializer
   240  0059B2  CFF5 F0FE          	movff	tablat,__pdataBANK0
   241  0059B6  0009               	tblrd		*+	;fetch initializer
   242  0059B8  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   243                           
   244                           ; Clear objects allocated to BANK1 (102 bytes)
   245  0059BC  EE01  F000         	lfsr	0,__pbssBANK1
   246  0059C0  0E66               	movlw	102
   247  0059C2                     clear_0:
   248  0059C2  6AEE               	clrf	postinc0,c
   249  0059C4  06E8               	decf	wreg,f,c
   250  0059C6  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (4 bytes)
   253  0059C8  0100               	movlb	0
   254  0059CA  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   255  0059CC  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   256  0059CE  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   257  0059D0  6BFA               	clrf	__pbssBANK0& (0+255),b
   258  0059D2                     end_of_initialization:
   259                           	callstack 0
   260  0059D2                     __end_of__initialization:
   261                           	callstack 0
   262  0059D2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  0059D4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  0059D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   265  0059D8  6EF8               	movwf	tblptru,c
   266  0059DA  0E0E               	movlw	high __Lsmallconst
   267  0059DC  6EF7               	movwf	tblptrh,c
   268  0059DE  0100               	movlb	0
   269  0059E0  EF37  F01B         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssBANK0
   272  0000FA                     __pbssBANK0:
   273                           	callstack 0
   274  0000FA                     _prec:
   275                           	callstack 0
   276  0000FA                     	ds	2
   277  0000FC                     _flags:
   278                           	callstack 0
   279  0000FC                     	ds	2
   280                           
   281                           	psect	dataBANK0
   282  0000FE                     __pdataBANK0:
   283                           	callstack 0
   284  0000FE                     _SENSITIVITY:
   285                           	callstack 0
   286  0000FE                     	ds	2
   287                           
   288                           	psect	bssBANK1
   289  000100                     __pbssBANK1:
   290                           	callstack 0
   291  000100                     _memory:
   292                           	callstack 0
   293  000100                     	ds	40
   294  000128                     _motorR:
   295                           	callstack 0
   296  000128                     	ds	9
   297  000131                     _motorL:
   298                           	callstack 0
   299  000131                     	ds	9
   300  00013A                     roundf@F527:
   301                           	callstack 0
   302  00013A                     	ds	4
   303  00013E                     _nout:
   304                           	callstack 0
   305  00013E                     	ds	2
   306  000140                     _width:
   307                           	callstack 0
   308  000140                     	ds	2
   309  000142                     _centisecond:
   310                           	callstack 0
   311  000142                     	ds	2
   312  000144                     _color:
   313                           	callstack 0
   314  000144                     	ds	1
   315  000145                     _array_index:
   316                           	callstack 0
   317  000145                     	ds	1
   318  000146                     _dbuf:
   319                           	callstack 0
   320  000146                     	ds	32
   321                           
   322                           	psect	cstackBANK1
   323  000166                     __pcstackBANK1:
   324                           	callstack 0
   325  000166                     main@amb:
   326                           	callstack 0
   327                           
   328                           ; 8 bytes @ 0x0
   329  000166                     	ds	8
   330  00016E                     main@amb_light:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x8
   334  00016E                     	ds	2
   335  000170                     main@stop_signal:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xA
   339  000170                     	ds	1
   340  000171                     main@start_time:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xB
   344  000171                     	ds	2
   345  000173                     main@stop_time:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xD
   349  000173                     	ds	2
   350  000175                     main@accident:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xF
   354  000175                     	ds	1
   355  000176                     main@rgb:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x10
   359  000176                     	ds	8
   360  00017E                     main@white:
   361                           	callstack 0
   362                           
   363                           ; 28 bytes @ 0x18
   364  00017E                     	ds	28
   365  00019A                     main@motorL:
   366                           	callstack 0
   367                           
   368                           ; 9 bytes @ 0x34
   369  00019A                     	ds	9
   370  0001A3                     main@motorR:
   371                           	callstack 0
   372                           
   373                           ; 9 bytes @ 0x3D
   374  0001A3                     	ds	9
   375                           
   376                           	psect	cstackBANK0
   377  000060                     __pcstackBANK0:
   378                           	callstack 0
   379  000060                     ??___fltol:
   380  000060                     ?_sprintf:
   381                           	callstack 0
   382  000060                     sprintf@s:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000060                     	ds	2
   387  000062                     sprintf@fmt:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391  000062                     	ds	2
   392  000064                     ___fltol@sign1:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x4
   396  000064                     	ds	1
   397  000065                     ___fltol@exp1:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401  000065                     	ds	1
   402  000066                     ?_lroundf:
   403                           	callstack 0
   404  000066                     lroundf@x:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x6
   408  000066                     	ds	4
   409  00006A                     ?_amb_light_measure:
   410                           	callstack 0
   411  00006A                     compare@lower:
   412                           	callstack 0
   413  00006A                     amb_light_measure@amb:
   414                           	callstack 0
   415  00006A                     distance_measure@mL:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA
   419  00006A                     	ds	2
   420  00006C                     ??_amb_light_measure:
   421  00006C                     compare@value2compare:
   422                           	callstack 0
   423  00006C                     distance_measure@mR:
   424                           	callstack 0
   425  00006C                     sprintf@ap:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xC
   429  00006C                     	ds	2
   430  00006E                     compare@upper:
   431                           	callstack 0
   432  00006E                     amb_light_measure@upper_bound:
   433                           	callstack 0
   434  00006E                     distance_measure@amb_light:
   435                           	callstack 0
   436  00006E                     sprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 11 bytes @ 0xE
   440  00006E                     	ds	2
   441  000070                     ??_distance_measure:
   442  000070                     compare@result:
   443                           	callstack 0
   444  000070                     amb_light_measure@CC_amb_ave:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x10
   448  000070                     	ds	1
   449  000071                     detect_color@m:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x11
   453  000071                     	ds	1
   454  000072                     amb_light_measure@CC_amb_1:
   455                           	callstack 0
   456  000072                     distance_measure@CG_amb:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x12
   460  000072                     	ds	1
   461  000073                     detect_color@w:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x13
   465  000073                     	ds	1
   466  000074                     amb_light_measure@CC_amb_2:
   467                           	callstack 0
   468  000074                     _distance_measure$2950:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x14
   472  000074                     	ds	1
   473  000075                     ??_detect_color:
   474                           
   475                           ; 1 bytes @ 0x15
   476  000075                     	ds	1
   477  000076                     amb_light_measure@CC_amb_3:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x16
   481  000076                     	ds	2
   482  000078                     ?_setup:
   483                           	callstack 0
   484  000078                     distance_measure@CC_amb:
   485                           	callstack 0
   486  000078                     setup@white:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  000078                     	ds	1
   491  000079                     detect_color@RG:
   492                           	callstack 0
   493  000079                     color_display@buf:
   494                           	callstack 0
   495  000079                     color_predict@buf:
   496                           	callstack 0
   497                           
   498                           ; 100 bytes @ 0x19
   499  000079                     	ds	1
   500  00007A                     distance_measure@threshold:
   501                           	callstack 0
   502  00007A                     setup@amb:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00007A                     	ds	1
   507  00007B                     detect_color@BC:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1B
   511  00007B                     	ds	1
   512  00007C                     distance_measure@stop:
   513                           	callstack 0
   514  00007C                     setup@mL:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1C
   518  00007C                     	ds	1
   519  00007D                     detect_color@GR:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1D
   523  00007D                     	ds	1
   524  00007E                     setup@mR:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1E
   528  00007E                     	ds	1
   529  00007F                     detect_color@BB:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1F
   533  00007F                     	ds	1
   534  000080                     ??_setup:
   535                           
   536                           ; 1 bytes @ 0x20
   537  000080                     	ds	1
   538  000081                     detect_color@RB:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x21
   542  000081                     	ds	1
   543  000082                     setup@amb_light:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x22
   547  000082                     	ds	1
   548  000083                     detect_color@GB:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x23
   552  000083                     	ds	2
   553  000085                     detect_color@BR:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x25
   557  000085                     	ds	2
   558  000087                     detect_color@GG:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x27
   562  000087                     	ds	2
   563  000089                     detect_color@color:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x29
   567  000089                     	ds	1
   568  00008A                     detect_color@RR:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2A
   572  00008A                     	ds	2
   573  00008C                     detect_color@BG:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2C
   577  00008C                     	ds	2
   578  00008E                     _detect_color$2949:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x2E
   582  00008E                     	ds	4
   583  000092                     verify_color@m:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x32
   587  000092                     	ds	2
   588  000094                     verify_color@w:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x34
   592  000094                     	ds	2
   593  000096                     ??_verify_color:
   594                           
   595                           ; 1 bytes @ 0x36
   596  000096                     	ds	2
   597  000098                     verify_color@color2:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x38
   601  000098                     	ds	2
   602  00009A                     verify_color@color:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x3A
   606  00009A                     	ds	67
   607  0000DD                     color_predict@color:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x7D
   611  0000DD                     	ds	1
   612  0000DE                     color_data_collection@i:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x7E
   616  0000DE                     	ds	2
   617  0000E0                     color_data_collection@j:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x80
   621  0000E0                     	ds	2
   622  0000E2                     color_data_collection@k:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x82
   626  0000E2                     	ds	2
   627  0000E4                     color_data_collection@x:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x84
   631  0000E4                     	ds	2
   632  0000E6                     test_function@m:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x86
   636  0000E6                     	ds	2
   637  0000E8                     test_function@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x88
   641  0000E8                     	ds	2
   642  0000EA                     test_function@mL:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x8A
   646  0000EA                     	ds	2
   647  0000EC                     test_function@mR:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x8C
   651  0000EC                     	ds	2
   652  0000EE                     ??_test_function:
   653                           
   654                           ; 1 bytes @ 0x8E
   655  0000EE                     	ds	2
   656  0000F0                     test_function@amb_light:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x90
   660  0000F0                     	ds	2
   661  0000F2                     test_function@complete:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x92
   665  0000F2                     	ds	1
   666  0000F3                     test_function@color:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x93
   670  0000F3                     	ds	1
   671  0000F4                     test_function@stop_signal:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x94
   675  0000F4                     	ds	1
   676  0000F5                     test_function@test_code:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x95
   680  0000F5                     	ds	1
   681  0000F6                     ??_main:
   682                           
   683                           ; 1 bytes @ 0x96
   684  0000F6                     	ds	4
   685                           
   686                           	psect	cstackCOMRAM
   687  000001                     __pcstackCOMRAM:
   688                           	callstack 0
   689  000001                     ??_LED_OFF:
   690  000001                     ??_LED_R:
   691  000001                     ??_LED_C:
   692  000001                     ??_LED_B:
   693  000001                     ??_LED_G:
   694  000001                     ??_I2C_2_Master_Idle:
   695  000001                     ?_strlen:
   696                           	callstack 0
   697  000001                     ?___wmul:
   698                           	callstack 0
   699  000001                     ?___fladd:
   700                           	callstack 0
   701  000001                     ?___flneg:
   702                           	callstack 0
   703  000001                     ?___xxtofl:
   704                           	callstack 0
   705  000001                     ?___aodiv:
   706                           	callstack 0
   707  000001                     ?___aomod:
   708                           	callstack 0
   709  000001                     toggle_light@toggletime:
   710                           	callstack 0
   711  000001                     sendCharSerial4@charToSend:
   712                           	callstack 0
   713  000001                     initDCmotorsPWM@PWMperiod:
   714                           	callstack 0
   715  000001                     initDCmotors_parameter@motorL:
   716                           	callstack 0
   717  000001                     ___wmul@multiplier:
   718                           	callstack 0
   719  000001                     fputc@c:
   720                           	callstack 0
   721  000001                     strlen@s:
   722                           	callstack 0
   723  000001                     ___flge@ff1:
   724                           	callstack 0
   725  000001                     ___flneg@f1:
   726                           	callstack 0
   727  000001                     ___fladd@b:
   728                           	callstack 0
   729  000001                     ___xxtofl@val:
   730                           	callstack 0
   731  000001                     ___aodiv@dividend:
   732                           	callstack 0
   733  000001                     ___aomod@dividend:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x0
   737  000001                     	ds	1
   738  000002                     ??_I2C_2_Master_Read:
   739  000002                     ??_toggle_light:
   740  000002                     I2C_2_Master_Write@data_byte:
   741                           	callstack 0
   742  000002                     sendStringSerial4@string:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x1
   746  000002                     	ds	1
   747  000003                     color_writetoaddr@value:
   748                           	callstack 0
   749  000003                     I2C_2_Master_Read@ack:
   750                           	callstack 0
   751  000003                     initDCmotors_parameter@motorR:
   752                           	callstack 0
   753  000003                     ___wmul@multiplicand:
   754                           	callstack 0
   755  000003                     fputc@fp:
   756                           	callstack 0
   757  000003                     strlen@a:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x2
   761  000003                     	ds	1
   762  000004                     toggle_light@i:
   763                           	callstack 0
   764  000004                     color_writetoaddr@address:
   765                           	callstack 0
   766  000004                     I2C_2_Master_Read@tmp:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x3
   770  000004                     	ds	1
   771  000005                     ??_fputc:
   772  000005                     ??_color_click_init:
   773  000005                     ??___xxtofl:
   774  000005                     ?_color_read_Red:
   775                           	callstack 0
   776  000005                     ?_color_read_Blue:
   777                           	callstack 0
   778  000005                     ?_color_read_Green:
   779                           	callstack 0
   780  000005                     ?_color_read_Clear:
   781                           	callstack 0
   782  000005                     toggle_light@lightnumber:
   783                           	callstack 0
   784  000005                     ___wmul@product:
   785                           	callstack 0
   786  000005                     ___flge@ff2:
   787                           	callstack 0
   788  000005                     ___fladd@a:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000005                     	ds	2
   793  000007                     ??_color_read_Red:
   794  000007                     ??_color_read_Blue:
   795  000007                     ??_color_read_Green:
   796  000007                     ??_color_read_Clear:
   797  000007                     ?___awdiv:
   798                           	callstack 0
   799  000007                     ___awdiv@dividend:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x6
   803  000007                     	ds	2
   804  000009                     ??___fladd:
   805  000009                     ??___flge:
   806  000009                     ___xxtofl@sign:
   807                           	callstack 0
   808  000009                     ___awdiv@divisor:
   809                           	callstack 0
   810  000009                     ___aodiv@divisor:
   811                           	callstack 0
   812  000009                     ___aomod@divisor:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x8
   816  000009                     	ds	1
   817  00000A                     ___xxtofl@exp:
   818                           	callstack 0
   819  00000A                     color_read_Red@tmp:
   820                           	callstack 0
   821  00000A                     color_read_Blue@tmp:
   822                           	callstack 0
   823  00000A                     color_read_Green@tmp:
   824                           	callstack 0
   825  00000A                     color_read_Clear@tmp:
   826                           	callstack 0
   827  00000A                     fputs@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x9
   831  00000A                     	ds	1
   832  00000B                     ___awdiv@counter:
   833                           	callstack 0
   834  00000B                     ___xxtofl@arg:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0xA
   838  00000B                     	ds	1
   839  00000C                     ___awdiv@sign:
   840                           	callstack 0
   841  00000C                     read_color@m:
   842                           	callstack 0
   843  00000C                     calibrate_white@w:
   844                           	callstack 0
   845  00000C                     fputs@fp:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0xB
   849  00000C                     	ds	1
   850  00000D                     ___fladd@signs:
   851                           	callstack 0
   852  00000D                     ___awdiv@quotient:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0xC
   856  00000D                     	ds	1
   857  00000E                     ??_calibrate_white:
   858  00000E                     ___fladd@aexp:
   859                           	callstack 0
   860  00000E                     fputs@c:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00000E                     	ds	1
   865  00000F                     ?___fldiv:
   866                           	callstack 0
   867  00000F                     ___fladd@bexp:
   868                           	callstack 0
   869  00000F                     setMotorPWM@m:
   870                           	callstack 0
   871  00000F                     fputs@i:
   872                           	callstack 0
   873  00000F                     ___fldiv@b:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0xE
   877  00000F                     	ds	1
   878  000010                     ___fladd@grs:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0xF
   882  000010                     	ds	1
   883  000011                     ??_setMotorPWM:
   884  000011                     ?_pad:
   885                           	callstack 0
   886  000011                     ?___flsub:
   887                           	callstack 0
   888  000011                     ___aodiv@counter:
   889                           	callstack 0
   890  000011                     ___aomod@counter:
   891                           	callstack 0
   892  000011                     pad@fp:
   893                           	callstack 0
   894  000011                     ___flsub@b:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x10
   898  000011                     	ds	1
   899  000012                     ___aodiv@sign:
   900                           	callstack 0
   901  000012                     ___aomod@sign:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x11
   905  000012                     	ds	1
   906  000013                     ?_abs:
   907                           	callstack 0
   908  000013                     pad@buf:
   909                           	callstack 0
   910  000013                     abs@a:
   911                           	callstack 0
   912  000013                     ___fldiv@a:
   913                           	callstack 0
   914  000013                     ___aodiv@quotient:
   915                           	callstack 0
   916                           
   917                           ; 8 bytes @ 0x12
   918  000013                     	ds	2
   919  000015                     ??_abs:
   920  000015                     pad@p:
   921                           	callstack 0
   922  000015                     ___flsub@a:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x14
   926  000015                     	ds	2
   927  000017                     ??___fldiv:
   928  000017                     ??_pad:
   929                           
   930                           ; 1 bytes @ 0x16
   931  000017                     	ds	1
   932  000018                     setMotorPWM@PWMduty:
   933                           	callstack 0
   934  000018                     pad@i:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x17
   938  000018                     	ds	1
   939  000019                     
   940                           ; 1 bytes @ 0x18
   941  000019                     	ds	1
   942  00001A                     stop@mL:
   943                           	callstack 0
   944  00001A                     fullSpeedAhead@mL:
   945                           	callstack 0
   946  00001A                     pad@w:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x19
   950  00001A                     	ds	1
   951  00001B                     ___fldiv@rem:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x1A
   955  00001B                     	ds	1
   956  00001C                     ?_dtoa:
   957                           	callstack 0
   958  00001C                     stop@mR:
   959                           	callstack 0
   960  00001C                     fullSpeedAhead@mR:
   961                           	callstack 0
   962  00001C                     dtoa@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966  00001C                     	ds	2
   967  00001E                     ??_stop:
   968  00001E                     ??_fullSpeedAhead:
   969  00001E                     dtoa@d:
   970                           	callstack 0
   971                           
   972                           ; 8 bytes @ 0x1D
   973  00001E                     	ds	1
   974  00001F                     ___fldiv@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x1E
   978  00001F                     	ds	1
   979  000020                     turn45@mL:
   980                           	callstack 0
   981  000020                     fullSpeedBack@mL:
   982                           	callstack 0
   983  000020                     short_burst@mL:
   984                           	callstack 0
   985  000020                     ___fldiv@new_exp:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x1F
   989  000020                     	ds	2
   990  000022                     turn45@mR:
   991                           	callstack 0
   992  000022                     fullSpeedBack@mR:
   993                           	callstack 0
   994  000022                     short_burst@mR:
   995                           	callstack 0
   996  000022                     ___fldiv@grs:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x21
  1000  000022                     	ds	2
  1001  000024                     ??_short_burst:
  1002  000024                     turn45@turn_time:
  1003                           	callstack 0
  1004  000024                     fullSpeedBack@instruction:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x23
  1008  000024                     	ds	1
  1009  000025                     ??_fullSpeedBack:
  1010  000025                     turn45@direction:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x24
  1014  000025                     	ds	1
  1015  000026                     ??_turn45:
  1016  000026                     ??_dtoa:
  1017  000026                     ___fldiv@bexp:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x25
  1021  000026                     	ds	1
  1022  000027                     ___fldiv@aexp:
  1023                           	callstack 0
  1024  000027                     turn45@i_1334:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x26
  1028  000027                     	ds	1
  1029  000028                     ?___flmul:
  1030                           	callstack 0
  1031  000028                     ___flmul@b:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x27
  1035  000028                     	ds	1
  1036  000029                     turn45@i_1336:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x28
  1040  000029                     	ds	2
  1041  00002B                     turn45@i:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x2A
  1045  00002B                     	ds	1
  1046  00002C                     goback@mL:
  1047                           	callstack 0
  1048  00002C                     test_action@mL:
  1049                           	callstack 0
  1050  00002C                     ___flmul@a:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x2B
  1054  00002C                     	ds	2
  1055  00002E                     goback@mR:
  1056                           	callstack 0
  1057  00002E                     test_action@mR:
  1058                           	callstack 0
  1059  00002E                     _dtoa$2621:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2D
  1063  00002E                     	ds	2
  1064  000030                     ??_goback:
  1065  000030                     ??___flmul:
  1066  000030                     ??_test_action:
  1067  000030                     dtoa@p:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2F
  1071  000030                     	ds	2
  1072  000032                     goback@i:
  1073                           	callstack 0
  1074  000032                     calibration_motor@mL:
  1075                           	callstack 0
  1076  000032                     dtoa@w:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x31
  1080  000032                     	ds	2
  1081  000034                     ___flmul@sign:
  1082                           	callstack 0
  1083  000034                     turning_action@mL:
  1084                           	callstack 0
  1085  000034                     calibration_motor@mR:
  1086                           	callstack 0
  1087  000034                     dtoa@s:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x33
  1091  000034                     	ds	1
  1092  000035                     ___flmul@grs:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x34
  1096  000035                     	ds	1
  1097  000036                     ??_calibration_motor:
  1098  000036                     turning_action@mR:
  1099                           	callstack 0
  1100  000036                     dtoa@n:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x35
  1104  000036                     	ds	2
  1105  000038                     turning_action@color:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x37
  1109  000038                     	ds	1
  1110  000039                     ___flmul@aexp:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x38
  1114  000039                     	ds	1
  1115  00003A                     ___flmul@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x39
  1119  00003A                     	ds	1
  1120  00003B                     ___flmul@prod:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x3A
  1124  00003B                     	ds	3
  1125  00003E                     dtoa@i:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3D
  1129  00003E                     	ds	1
  1130  00003F                     ___flmul@temp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x3E
  1134  00003F                     	ds	1
  1135  000040                     ?_vfpfcnvrt:
  1136                           	callstack 0
  1137  000040                     vfpfcnvrt@fp:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x3F
  1141  000040                     	ds	1
  1142  000041                     ?_roundf:
  1143                           	callstack 0
  1144  000041                     roundf@x:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x40
  1148  000041                     	ds	1
  1149  000042                     vfpfcnvrt@fmt:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x41
  1153  000042                     	ds	2
  1154  000044                     vfpfcnvrt@ap:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x43
  1158  000044                     	ds	1
  1159  000045                     ??_roundf:
  1160                           
  1161                           ; 1 bytes @ 0x44
  1162  000045                     	ds	1
  1163  000046                     ??_vfpfcnvrt:
  1164                           
  1165                           ; 1 bytes @ 0x45
  1166  000046                     	ds	2
  1167  000048                     vfpfcnvrt@ll:
  1168                           	callstack 0
  1169                           
  1170                           ; 8 bytes @ 0x47
  1171  000048                     	ds	1
  1172  000049                     _roundf$2952:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x48
  1176  000049                     	ds	4
  1177  00004D                     roundf@e:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x4C
  1181  00004D                     	ds	2
  1182  00004F                     _roundf$2951:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x4E
  1186  00004F                     	ds	1
  1187  000050                     ?_vfprintf:
  1188                           	callstack 0
  1189  000050                     vfprintf@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x4F
  1193  000050                     	ds	2
  1194  000052                     vfprintf@fmt:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x51
  1198  000052                     	ds	1
  1199  000053                     roundf@u:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x52
  1203  000053                     	ds	1
  1204  000054                     vfprintf@ap:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x53
  1208  000054                     	ds	2
  1209  000056                     vfprintf@cfmt:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x55
  1213  000056                     	ds	1
  1214  000057                     roundf@y:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x56
  1218  000057                     	ds	1
  1219  000058                     color_display@m:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x57
  1223  000058                     	ds	2
  1224  00005A                     color_data_collection@m:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x59
  1228  00005A                     	ds	1
  1229  00005B                     ?___fltol:
  1230                           	callstack 0
  1231  00005B                     ___fltol@f1:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x5A
  1235  00005B                     	ds	1
  1236  00005C                     ??_color_data_collection:
  1237                           
  1238                           ; 1 bytes @ 0x5B
  1239  00005C                     	ds	3
  1240  00005F                     
  1241                           ; 1 bytes @ 0x5E
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 27 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  white          28   24[BANK1 ] struct white_card
  1252 ;;  motorR          9   61[BANK1 ] struct DC_motor
  1253 ;;  motorL          9   52[BANK1 ] struct DC_motor
  1254 ;;  rgb             8   16[BANK1 ] struct color_rgb
  1255 ;;  amb             8    0[BANK1 ] struct color_rgb
  1256 ;;  stop_time       2   13[BANK1 ] unsigned int 
  1257 ;;  start_time      2   11[BANK1 ] unsigned int 
  1258 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1259 ;;  accident        1   15[BANK1 ] unsigned char 
  1260 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Totals:         0       4      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;Total ram usage:       74 bytes
  1275 ;; Hardware stack levels required when called: 12
  1276 ;; This function calls:
  1277 ;;		_I2C_2_Master_Init
  1278 ;;		_Interrupts_init
  1279 ;;		_Timer0_init
  1280 ;;		_color_click_init
  1281 ;;		_color_predict
  1282 ;;		_detect_color
  1283 ;;		_distance_measure
  1284 ;;		_fullSpeedAhead
  1285 ;;		_goback
  1286 ;;		_initDCmotorsPWM
  1287 ;;		_initDCmotors_parameter
  1288 ;;		_initUSART4
  1289 ;;		_pin_init
  1290 ;;		_setup
  1291 ;;		_short_burst
  1292 ;;		_stop
  1293 ;;		_test_function
  1294 ;;		_turning_action
  1295 ;;		_verify_color
  1296 ;; This function is called by:
  1297 ;;		Startup code after reset
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text0
  1302  00366E                     __ptext0:
  1303                           	callstack 0
  1304  00366E                     _main:
  1305                           	callstack 19
  1306  00366E                     
  1307                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 34:     I2C_2_Master_Init();
  1308  00366E  ECE6  F02D         	call	_I2C_2_Master_Init	;wreg free
  1309  003672                     
  1310                           ;main.c: 35:     color_click_init();
  1311  003672  EC9D  F02D         	call	_color_click_init	;wreg free
  1312  003676                     
  1313                           ;main.c: 36:     initDCmotorsPWM(199);
  1314  003676  0E00               	movlw	0
  1315  003678  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1316  00367A  0EC7               	movlw	199
  1317  00367C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1318  00367E  ECB1  F02C         	call	_initDCmotorsPWM	;wreg free
  1319  003682                     
  1320                           ;main.c: 37:     initUSART4();
  1321  003682  EC82  F02E         	call	_initUSART4	;wreg free
  1322  003686                     
  1323                           ;main.c: 38:     Timer0_init();
  1324  003686  EC91  F02E         	call	_Timer0_init	;wreg free
  1325  00368A                     
  1326                           ;main.c: 39:     Interrupts_init();
  1327  00368A  ECB2  F02E         	call	_Interrupts_init	;wreg free
  1328  00368E                     
  1329                           ;main.c: 40:     pin_init();
  1330  00368E  EC83  F02D         	call	_pin_init	;wreg free
  1331  003692                     
  1332                           ;main.c: 41:     initDCmotors_parameter(&motorL, &motorR);
  1333  003692  0E9A               	movlw	low main@motorL
  1334  003694  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1335  003696  0E01               	movlw	high main@motorL
  1336  003698  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1337  00369A  0EA3               	movlw	low main@motorR
  1338  00369C  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1339  00369E  0E01               	movlw	high main@motorR
  1340  0036A0  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1341  0036A2  ECD4  F027         	call	_initDCmotors_parameter	;wreg free
  1342  0036A6                     
  1343                           ;main.c: 43:     unsigned char stop_signal = 0;
  1344  0036A6  0E00               	movlw	0
  1345  0036A8  0101               	movlb	1	; () banked
  1346  0036AA  6F70               	movwf	main@stop_signal& (0+255),b
  1347  0036AC                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 45:     unsigned char accident = 0;
  1350  0036AC  0E00               	movlw	0
  1351  0036AE  6F75               	movwf	main@accident& (0+255),b
  1352  0036B0                     
  1353                           ; BSR set to: 1
  1354                           ;main.c: 52:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1355  0036B0  0E7E               	movlw	low main@white
  1356  0036B2  0100               	movlb	0	; () banked
  1357  0036B4  6F78               	movwf	setup@white& (0+255),b
  1358  0036B6  0E01               	movlw	high main@white
  1359  0036B8  6F79               	movwf	(setup@white+1)& (0+255),b
  1360  0036BA  0E66               	movlw	low main@amb
  1361  0036BC  6F7A               	movwf	setup@amb& (0+255),b
  1362  0036BE  0E01               	movlw	high main@amb
  1363  0036C0  6F7B               	movwf	(setup@amb+1)& (0+255),b
  1364  0036C2  0E9A               	movlw	low main@motorL
  1365  0036C4  6F7C               	movwf	setup@mL& (0+255),b
  1366  0036C6  0E01               	movlw	high main@motorL
  1367  0036C8  6F7D               	movwf	(setup@mL+1)& (0+255),b
  1368  0036CA  0EA3               	movlw	low main@motorR
  1369  0036CC  6F7E               	movwf	setup@mR& (0+255),b
  1370  0036CE  0E01               	movlw	high main@motorR
  1371  0036D0  6F7F               	movwf	(setup@mR+1)& (0+255),b
  1372  0036D2  ECD7  F023         	call	_setup	;wreg free
  1373  0036D6  C078  F16E         	movff	?_setup,main@amb_light
  1374  0036DA  C079  F16F         	movff	?_setup+1,main@amb_light+1
  1375  0036DE                     l5386:
  1376                           
  1377                           ;main.c: 59:             T0CON0bits.T0EN=1;
  1378  0036DE  8ED5               	bsf	213,7,c	;volatile
  1379  0036E0                     
  1380                           ;main.c: 60:             start_time = centisecond;
  1381  0036E0  C142  F171         	movff	_centisecond,main@start_time
  1382  0036E4  C143  F172         	movff	_centisecond+1,main@start_time+1
  1383                           
  1384                           ;main.c: 61:             while (stop_signal == 0){
  1385  0036E8  EF91  F01B         	goto	l5394
  1386  0036EC                     l5390:
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;main.c: 62:                 fullSpeedAhead(&motorL, &motorR);
  1390  0036EC  0E9A               	movlw	low main@motorL
  1391  0036EE  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1392  0036F0  0E01               	movlw	high main@motorL
  1393  0036F2  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1394  0036F4  0EA3               	movlw	low main@motorR
  1395  0036F6  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1396  0036F8  0E01               	movlw	high main@motorR
  1397  0036FA  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1398  0036FC  EC68  F029         	call	_fullSpeedAhead	;wreg free
  1399  003700                     
  1400                           ;main.c: 63:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1401  003700  0E9A               	movlw	low main@motorL
  1402  003702  0100               	movlb	0	; () banked
  1403  003704  6F6A               	movwf	distance_measure@mL& (0+255),b
  1404  003706  0E01               	movlw	high main@motorL
  1405  003708  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1406  00370A  0EA3               	movlw	low main@motorR
  1407  00370C  6F6C               	movwf	distance_measure@mR& (0+255),b
  1408  00370E  0E01               	movlw	high main@motorR
  1409  003710  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1410  003712  C16E  F06E         	movff	main@amb_light,distance_measure@amb_light
  1411  003716  C16F  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1412  00371A  ECA2  F028         	call	_distance_measure	;wreg free
  1413  00371E  0101               	movlb	1	; () banked
  1414  003720  6F70               	movwf	main@stop_signal& (0+255),b
  1415  003722                     l5394:
  1416                           
  1417                           ;main.c: 61:             while (stop_signal == 0){
  1418  003722  0101               	movlb	1	; () banked
  1419  003724  5170               	movf	main@stop_signal& (0+255),w,b
  1420  003726  B4D8               	btfsc	status,2,c
  1421  003728  EF98  F01B         	goto	u5851
  1422  00372C  EF9A  F01B         	goto	u5850
  1423  003730                     u5851:
  1424  003730  EF76  F01B         	goto	l5390
  1425  003734                     u5850:
  1426  003734                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 65:             stop_time = centisecond;
  1429  003734  C142  F173         	movff	_centisecond,main@stop_time
  1430  003738  C143  F174         	movff	_centisecond+1,main@stop_time+1
  1431  00373C                     
  1432                           ; BSR set to: 1
  1433                           ;main.c: 66:             if ((stop_time-start_time)>10){
  1434  00373C  5171               	movf	main@start_time& (0+255),w,b
  1435  00373E  5D73               	subwf	main@stop_time& (0+255),w,b
  1436  003740  0100               	movlb	0	; () banked
  1437  003742  6FF6               	movwf	??_main& (0+255),b
  1438  003744  0101               	movlb	1	; () banked
  1439  003746  5172               	movf	(main@start_time+1)& (0+255),w,b
  1440  003748  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1441  00374A  0100               	movlb	0	; () banked
  1442  00374C  6FF7               	movwf	(??_main+1)& (0+255),b
  1443  00374E  51F7               	movf	(??_main+1)& (0+255),w,b
  1444  003750  E109               	bnz	u5860
  1445  003752  0E0B               	movlw	11
  1446  003754  5DF6               	subwf	??_main& (0+255),w,b
  1447  003756  A0D8               	btfss	status,0,c
  1448  003758  EFB0  F01B         	goto	u5861
  1449  00375C  EFB2  F01B         	goto	u5860
  1450  003760                     u5861:
  1451  003760  EFD4  F01B         	goto	l5402
  1452  003764                     u5860:
  1453  003764                     
  1454                           ; BSR set to: 0
  1455                           ;main.c: 67:                 memory[array_index] = (stop_time-start_time-3);
  1456  003764  0EFD               	movlw	253
  1457  003766  6FF6               	movwf	??_main& (0+255),b
  1458  003768  0EFF               	movlw	255
  1459  00376A  6FF7               	movwf	(??_main+1)& (0+255),b
  1460  00376C  0101               	movlb	1	; () banked
  1461  00376E  5171               	movf	main@start_time& (0+255),w,b
  1462  003770  5D73               	subwf	main@stop_time& (0+255),w,b
  1463  003772  0100               	movlb	0	; () banked
  1464  003774  6FF8               	movwf	(??_main+2)& (0+255),b
  1465  003776  0101               	movlb	1	; () banked
  1466  003778  5172               	movf	(main@start_time+1)& (0+255),w,b
  1467  00377A  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1468  00377C  0100               	movlb	0	; () banked
  1469  00377E  6FF9               	movwf	(??_main+3)& (0+255),b
  1470  003780  51F6               	movf	??_main& (0+255),w,b
  1471  003782  27F8               	addwf	(??_main+2)& (0+255),f,b
  1472  003784  51F7               	movf	(??_main+1)& (0+255),w,b
  1473  003786  23F9               	addwfc	(??_main+3)& (0+255),f,b
  1474  003788  0101               	movlb	1	; () banked
  1475  00378A  5145               	movf	_array_index& (0+255),w,b
  1476  00378C  0D02               	mullw	2
  1477  00378E  0E00               	movlw	low _memory
  1478  003790  24F3               	addwf	243,w,c
  1479  003792  6ED9               	movwf	fsr2l,c
  1480  003794  0E01               	movlw	high _memory
  1481  003796  20F4               	addwfc	prodh,w,c
  1482  003798  6EDA               	movwf	fsr2h,c
  1483  00379A  C0F8  FFDE         	movff	??_main+2,postinc2
  1484  00379E  C0F9  FFDD         	movff	??_main+3,postdec2
  1485  0037A2                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 68:                 array_index++;
  1488  0037A2  2B45               	incf	_array_index& (0+255),f,b
  1489                           
  1490                           ;main.c: 69:             }
  1491  0037A4  EFEF  F01B         	goto	l5412
  1492  0037A8                     l5402:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 71:                 accident++;
  1496  0037A8  0101               	movlb	1	; () banked
  1497  0037AA  2B75               	incf	main@accident& (0+255),f,b
  1498  0037AC                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 72:                 color_predict(accident);
  1501  0037AC  5175               	movf	main@accident& (0+255),w,b
  1502  0037AE  ECCF  F02D         	call	_color_predict
  1503  0037B2                     
  1504                           ;main.c: 73:                 if (accident >= 5){
  1505  0037B2  0E04               	movlw	4
  1506  0037B4  0101               	movlb	1	; () banked
  1507  0037B6  6575               	cpfsgt	main@accident& (0+255),b
  1508  0037B8  EFE0  F01B         	goto	u5871
  1509  0037BC  EFE2  F01B         	goto	u5870
  1510  0037C0                     u5871:
  1511  0037C0  EFEF  F01B         	goto	l5412
  1512  0037C4                     u5870:
  1513  0037C4                     
  1514                           ; BSR set to: 1
  1515                           ;main.c: 74:                     goback(&motorL, &motorR);
  1516  0037C4  0E9A               	movlw	low main@motorL
  1517  0037C6  6E2C               	movwf	goback@mL^0,c
  1518  0037C8  0E01               	movlw	high main@motorL
  1519  0037CA  6E2D               	movwf	(goback@mL+1)^0,c
  1520  0037CC  0EA3               	movlw	low main@motorR
  1521  0037CE  6E2E               	movwf	goback@mR^0,c
  1522  0037D0  0E01               	movlw	high main@motorR
  1523  0037D2  6E2F               	movwf	(goback@mR+1)^0,c
  1524  0037D4  EC58  F013         	call	_goback	;wreg free
  1525  0037D8                     
  1526                           ;main.c: 75:                     accident = 0;
  1527  0037D8  0E00               	movlw	0
  1528  0037DA  0101               	movlb	1	; () banked
  1529  0037DC  6F75               	movwf	main@accident& (0+255),b
  1530  0037DE                     l5412:
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;main.c: 78:             stop(&motorL, &motorR);
  1534  0037DE  0E9A               	movlw	low main@motorL
  1535  0037E0  6E1A               	movwf	stop@mL^0,c
  1536  0037E2  0E01               	movlw	high main@motorL
  1537  0037E4  6E1B               	movwf	(stop@mL+1)^0,c
  1538  0037E6  0EA3               	movlw	low main@motorR
  1539  0037E8  6E1C               	movwf	stop@mR^0,c
  1540  0037EA  0E01               	movlw	high main@motorR
  1541  0037EC  6E1D               	movwf	(stop@mR+1)^0,c
  1542  0037EE  EC2C  F02A         	call	_stop	;wreg free
  1543  0037F2                     
  1544                           ;main.c: 79:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1545  0037F2  0E52               	movlw	82
  1546  0037F4  0100               	movlb	0	; () banked
  1547  0037F6  6FF7               	movwf	(??_main+1)& (0+255),b
  1548  0037F8  0E2B               	movlw	43
  1549  0037FA  6FF6               	movwf	??_main& (0+255),b
  1550  0037FC  0E00               	movlw	0
  1551  0037FE                     u5907:
  1552  0037FE  2EE8               	decfsz	wreg,f,c
  1553  003800  D7FE               	bra	u5907
  1554  003802  2FF6               	decfsz	??_main& (0+255),f,b
  1555  003804  D7FC               	bra	u5907
  1556  003806  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1557  003808  D7FA               	bra	u5907
  1558  00380A  F000               	nop	
  1559  00380C                     
  1560                           ;main.c: 80:             short_burst(&motorL, &motorR);
  1561  00380C  0E9A               	movlw	low main@motorL
  1562  00380E  6E20               	movwf	short_burst@mL^0,c
  1563  003810  0E01               	movlw	high main@motorL
  1564  003812  6E21               	movwf	(short_burst@mL+1)^0,c
  1565  003814  0EA3               	movlw	low main@motorR
  1566  003816  6E22               	movwf	short_burst@mR^0,c
  1567  003818  0E01               	movlw	high main@motorR
  1568  00381A  6E23               	movwf	(short_burst@mR+1)^0,c
  1569  00381C  EC6F  F02C         	call	_short_burst	;wreg free
  1570  003820                     
  1571                           ;main.c: 81:             color = detect_color(&rgb, &white);
  1572  003820  0E76               	movlw	low main@rgb
  1573  003822  0100               	movlb	0	; () banked
  1574  003824  6F71               	movwf	detect_color@m& (0+255),b
  1575  003826  0E01               	movlw	high main@rgb
  1576  003828  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1577  00382A  0E7E               	movlw	low main@white
  1578  00382C  6F73               	movwf	detect_color@w& (0+255),b
  1579  00382E  0E01               	movlw	high main@white
  1580  003830  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1581  003832  EC0A  F007         	call	_detect_color	;wreg free
  1582  003836  0101               	movlb	1	; () banked
  1583  003838  6F44               	movwf	_color& (0+255),b
  1584  00383A                     
  1585                           ; BSR set to: 1
  1586                           ;main.c: 82:             color = verify_color(color, &rgb, &white);
  1587  00383A  0E76               	movlw	low main@rgb
  1588  00383C  0100               	movlb	0	; () banked
  1589  00383E  6F92               	movwf	verify_color@m& (0+255),b
  1590  003840  0E01               	movlw	high main@rgb
  1591  003842  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1592  003844  0E7E               	movlw	low main@white
  1593  003846  6F94               	movwf	verify_color@w& (0+255),b
  1594  003848  0E01               	movlw	high main@white
  1595  00384A  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1596  00384C  0101               	movlb	1	; () banked
  1597  00384E  5144               	movf	_color& (0+255),w,b
  1598  003850  EC8B  F02A         	call	_verify_color
  1599  003854  0101               	movlb	1	; () banked
  1600  003856  6F44               	movwf	_color& (0+255),b
  1601  003858                     
  1602                           ; BSR set to: 1
  1603                           ;main.c: 83:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1604  003858  5144               	movf	_color& (0+255),w,b
  1605  00385A  B4D8               	btfsc	status,2,c
  1606  00385C  EF32  F01C         	goto	u5881
  1607  003860  EF34  F01C         	goto	u5880
  1608  003864                     u5881:
  1609  003864  EF42  F01C         	goto	l5428
  1610  003868                     u5880:
  1611  003868                     
  1612                           ; BSR set to: 1
  1613  003868  0E9A               	movlw	low main@motorL
  1614  00386A  6E34               	movwf	turning_action@mL^0,c
  1615  00386C  0E01               	movlw	high main@motorL
  1616  00386E  6E35               	movwf	(turning_action@mL+1)^0,c
  1617  003870  0EA3               	movlw	low main@motorR
  1618  003872  6E36               	movwf	turning_action@mR^0,c
  1619  003874  0E01               	movlw	high main@motorR
  1620  003876  6E37               	movwf	(turning_action@mR+1)^0,c
  1621  003878  5144               	movf	_color& (0+255),w,b
  1622  00387A  ECF7  F016         	call	_turning_action
  1623  00387E  0E00               	movlw	0
  1624  003880  0101               	movlb	1	; () banked
  1625  003882  6F44               	movwf	_color& (0+255),b
  1626  003884                     l5428:
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;main.c: 84:             stop_signal = 0;
  1630  003884  0E00               	movlw	0
  1631  003886  6F70               	movwf	main@stop_signal& (0+255),b
  1632  003888  EF6F  F01B         	goto	l5386
  1633  00388C  EF18  F000         	goto	start
  1634  003890                     __end_of_main:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _verify_color *****************
  1638 ;; Defined at:
  1639 ;;		line 345 in file "color.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  color           1    wreg     unsigned char 
  1642 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1643 ;;		 -> main@rgb(8), 
  1644 ;;  w               2   52[BANK0 ] PTR struct white_card
  1645 ;;		 -> main@white(28), 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  color           1   58[BANK0 ] unsigned char 
  1648 ;;  color2          2   56[BANK0 ] unsigned int 
  1649 ;;  color3          2    0        unsigned int 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      unsigned char 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;Total ram usage:        9 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 6
  1666 ;; This function calls:
  1667 ;;		_detect_color
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text1
  1674  005516                     __ptext1:
  1675                           	callstack 0
  1676  005516                     _verify_color:
  1677                           	callstack 24
  1678                           
  1679                           ; BSR set to: 1
  1680                           ;incstack = 0
  1681                           ;verify_color@color stored from wreg
  1682  005516  0100               	movlb	0	; () banked
  1683  005518  6F9A               	movwf	verify_color@color& (0+255),b
  1684  00551A                     
  1685                           ;color.c: 345: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 346: {;color.c: 347:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1686  00551A  0E05               	movlw	5
  1687  00551C  0100               	movlb	0	; () banked
  1688  00551E  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1689  005520  0E0F               	movlw	15
  1690  005522  6F96               	movwf	??_verify_color& (0+255),b
  1691  005524  0EF1               	movlw	241
  1692  005526                     u5917:
  1693  005526  2EE8               	decfsz	wreg,f,c
  1694  005528  D7FE               	bra	u5917
  1695  00552A  2F96               	decfsz	??_verify_color& (0+255),f,b
  1696  00552C  D7FC               	bra	u5917
  1697  00552E  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1698  005530  D7FA               	bra	u5917
  1699  005532                     
  1700                           ;color.c: 348:     unsigned int color2, color3;;color.c: 349:     color2 = detect_color(
      +                          m,w);
  1701  005532  C092  F071         	movff	verify_color@m,detect_color@m
  1702  005536  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1703  00553A  C094  F073         	movff	verify_color@w,detect_color@w
  1704  00553E  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1705  005542  EC0A  F007         	call	_detect_color	;wreg free
  1706  005546  0100               	movlb	0	; () banked
  1707  005548  6F96               	movwf	??_verify_color& (0+255),b
  1708  00554A  5196               	movf	??_verify_color& (0+255),w,b
  1709  00554C  6F98               	movwf	verify_color@color2& (0+255),b
  1710  00554E  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1711  005550                     
  1712                           ; BSR set to: 0
  1713                           ;color.c: 350:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1714  005550  0E05               	movlw	5
  1715  005552  0100               	movlb	0	; () banked
  1716  005554  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1717  005556  0E0F               	movlw	15
  1718  005558  6F96               	movwf	??_verify_color& (0+255),b
  1719  00555A  0EF1               	movlw	241
  1720  00555C                     u5927:
  1721  00555C  2EE8               	decfsz	wreg,f,c
  1722  00555E  D7FE               	bra	u5927
  1723  005560  2F96               	decfsz	??_verify_color& (0+255),f,b
  1724  005562  D7FC               	bra	u5927
  1725  005564  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1726  005566  D7FA               	bra	u5927
  1727  005568                     
  1728                           ;color.c: 352:     if (color == color2){return color;}
  1729  005568  0100               	movlb	0	; () banked
  1730  00556A  519A               	movf	verify_color@color& (0+255),w,b
  1731  00556C  6F96               	movwf	??_verify_color& (0+255),b
  1732  00556E  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1733  005570  5198               	movf	verify_color@color2& (0+255),w,b
  1734  005572  1996               	xorwf	??_verify_color& (0+255),w,b
  1735  005574  E107               	bnz	u5561
  1736  005576  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1737  005578  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1738  00557A  A4D8               	btfss	status,2,c
  1739  00557C  EFC2  F02A         	goto	u5561
  1740  005580  EFC4  F02A         	goto	u5560
  1741  005584                     u5561:
  1742  005584  EFC7  F02A         	goto	l5142
  1743  005588                     u5560:
  1744  005588                     
  1745                           ; BSR set to: 0
  1746  005588  519A               	movf	verify_color@color& (0+255),w,b
  1747  00558A  EFC8  F02A         	goto	l141
  1748  00558E                     l5142:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;color.c: 355:         return color;}
  1752  00558E  0E00               	movlw	0
  1753  005590                     l141:
  1754                           
  1755                           ; BSR set to: 0
  1756  005590  0012               	return		;funcret
  1757  005592                     __end_of_verify_color:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _turning_action *****************
  1761 ;; Defined at:
  1762 ;;		line 18 in file "movement.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  color           1    wreg     unsigned char 
  1765 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  1766 ;;		 -> main@motorL(9), 
  1767 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  1768 ;;		 -> main@motorR(9), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  color           1   55[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;Total ram usage:        5 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 6
  1787 ;; This function calls:
  1788 ;;		_fullSpeedBack
  1789 ;;		_goback
  1790 ;;		_toggle_light
  1791 ;;		_turn45
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text2
  1798  002DEE                     __ptext2:
  1799                           	callstack 0
  1800  002DEE                     _turning_action:
  1801                           	callstack 24
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;incstack = 0
  1805                           ;turning_action@color stored from wreg
  1806  002DEE  6E38               	movwf	turning_action@color^0,c
  1807  002DF0                     
  1808                           ;movement.c: 18: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 19: { if (color != 0){
  1809  002DF0  5038               	movf	turning_action@color^0,w,c
  1810  002DF2  B4D8               	btfsc	status,2,c
  1811  002DF4  EFFE  F016         	goto	u5761
  1812  002DF8  EF00  F017         	goto	u5760
  1813  002DFC                     u5761:
  1814  002DFC  EF6E  F018         	goto	l460
  1815  002E00                     u5760:
  1816  002E00                     
  1817                           ;movement.c: 20:         if (color == 1){
  1818  002E00  0438               	decf	turning_action@color^0,w,c
  1819  002E02  A4D8               	btfss	status,2,c
  1820  002E04  EF06  F017         	goto	u5771
  1821  002E08  EF08  F017         	goto	u5770
  1822  002E0C                     u5771:
  1823  002E0C  EF30  F017         	goto	l5302
  1824  002E10                     u5770:
  1825  002E10                     
  1826                           ;movement.c: 21:             fullSpeedBack(mL,mR,1);
  1827  002E10  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1828  002E14  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1829  002E18  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1830  002E1C  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1831  002E20  0E01               	movlw	1
  1832  002E22  6E24               	movwf	fullSpeedBack@instruction^0,c
  1833  002E24  EC83  F024         	call	_fullSpeedBack	;wreg free
  1834                           
  1835                           ;movement.c: 22:             turn45(mL,mR,2,2);
  1836  002E28  C034  F020         	movff	turning_action@mL,turn45@mL
  1837  002E2C  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1838  002E30  C036  F022         	movff	turning_action@mR,turn45@mR
  1839  002E34  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1840  002E38  0E02               	movlw	2
  1841  002E3A  6E24               	movwf	turn45@turn_time^0,c
  1842  002E3C  0E02               	movlw	2
  1843  002E3E  6E25               	movwf	turn45@direction^0,c
  1844  002E40  ECC4  F020         	call	_turn45	;wreg free
  1845  002E44                     
  1846                           ;movement.c: 23:             memory[array_index] = 1;
  1847  002E44  0101               	movlb	1	; () banked
  1848  002E46  5145               	movf	_array_index& (0+255),w,b
  1849  002E48  0D02               	mullw	2
  1850  002E4A  0E00               	movlw	low _memory
  1851  002E4C  24F3               	addwf	243,w,c
  1852  002E4E  6ED9               	movwf	fsr2l,c
  1853  002E50  0E01               	movlw	high _memory
  1854  002E52  20F4               	addwfc	prodh,w,c
  1855  002E54  6EDA               	movwf	fsr2h,c
  1856  002E56  0E01               	movlw	1
  1857  002E58  6EDE               	movwf	postinc2,c
  1858  002E5A  0E00               	movlw	0
  1859  002E5C  6EDD               	movwf	postdec2,c
  1860  002E5E                     
  1861                           ; BSR set to: 1
  1862                           ;movement.c: 24:             array_index++;
  1863  002E5E  2B45               	incf	_array_index& (0+255),f,b
  1864  002E60                     l5302:
  1865                           
  1866                           ;movement.c: 26:         if (color == 2){
  1867  002E60  0E02               	movlw	2
  1868  002E62  1838               	xorwf	turning_action@color^0,w,c
  1869  002E64  A4D8               	btfss	status,2,c
  1870  002E66  EF37  F017         	goto	u5781
  1871  002E6A  EF39  F017         	goto	u5780
  1872  002E6E                     u5781:
  1873  002E6E  EF61  F017         	goto	l5310
  1874  002E72                     u5780:
  1875  002E72                     
  1876                           ;movement.c: 27:             fullSpeedBack(mL,mR,1);
  1877  002E72  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1878  002E76  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1879  002E7A  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1880  002E7E  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1881  002E82  0E01               	movlw	1
  1882  002E84  6E24               	movwf	fullSpeedBack@instruction^0,c
  1883  002E86  EC83  F024         	call	_fullSpeedBack	;wreg free
  1884                           
  1885                           ;movement.c: 28:             turn45(mL,mR,2,1);
  1886  002E8A  C034  F020         	movff	turning_action@mL,turn45@mL
  1887  002E8E  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1888  002E92  C036  F022         	movff	turning_action@mR,turn45@mR
  1889  002E96  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1890  002E9A  0E02               	movlw	2
  1891  002E9C  6E24               	movwf	turn45@turn_time^0,c
  1892  002E9E  0E01               	movlw	1
  1893  002EA0  6E25               	movwf	turn45@direction^0,c
  1894  002EA2  ECC4  F020         	call	_turn45	;wreg free
  1895  002EA6                     
  1896                           ;movement.c: 29:             memory[array_index] = 2;
  1897  002EA6  0101               	movlb	1	; () banked
  1898  002EA8  5145               	movf	_array_index& (0+255),w,b
  1899  002EAA  0D02               	mullw	2
  1900  002EAC  0E00               	movlw	low _memory
  1901  002EAE  24F3               	addwf	243,w,c
  1902  002EB0  6ED9               	movwf	fsr2l,c
  1903  002EB2  0E01               	movlw	high _memory
  1904  002EB4  20F4               	addwfc	prodh,w,c
  1905  002EB6  6EDA               	movwf	fsr2h,c
  1906  002EB8  0E02               	movlw	2
  1907  002EBA  6EDE               	movwf	postinc2,c
  1908  002EBC  0E00               	movlw	0
  1909  002EBE  6EDD               	movwf	postdec2,c
  1910  002EC0                     
  1911                           ; BSR set to: 1
  1912                           ;movement.c: 30:             array_index++;
  1913  002EC0  2B45               	incf	_array_index& (0+255),f,b
  1914  002EC2                     l5310:
  1915                           
  1916                           ;movement.c: 32:         if (color == 3){
  1917  002EC2  0E03               	movlw	3
  1918  002EC4  1838               	xorwf	turning_action@color^0,w,c
  1919  002EC6  A4D8               	btfss	status,2,c
  1920  002EC8  EF68  F017         	goto	u5791
  1921  002ECC  EF6A  F017         	goto	u5790
  1922  002ED0                     u5791:
  1923  002ED0  EF92  F017         	goto	l5318
  1924  002ED4                     u5790:
  1925  002ED4                     
  1926                           ;movement.c: 33:             fullSpeedBack(mL,mR,1);
  1927  002ED4  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1928  002ED8  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1929  002EDC  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1930  002EE0  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1931  002EE4  0E01               	movlw	1
  1932  002EE6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1933  002EE8  EC83  F024         	call	_fullSpeedBack	;wreg free
  1934                           
  1935                           ;movement.c: 34:             turn45(mL,mR,4,1);
  1936  002EEC  C034  F020         	movff	turning_action@mL,turn45@mL
  1937  002EF0  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1938  002EF4  C036  F022         	movff	turning_action@mR,turn45@mR
  1939  002EF8  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1940  002EFC  0E04               	movlw	4
  1941  002EFE  6E24               	movwf	turn45@turn_time^0,c
  1942  002F00  0E01               	movlw	1
  1943  002F02  6E25               	movwf	turn45@direction^0,c
  1944  002F04  ECC4  F020         	call	_turn45	;wreg free
  1945  002F08                     
  1946                           ;movement.c: 35:             memory[array_index] = 3;
  1947  002F08  0101               	movlb	1	; () banked
  1948  002F0A  5145               	movf	_array_index& (0+255),w,b
  1949  002F0C  0D02               	mullw	2
  1950  002F0E  0E00               	movlw	low _memory
  1951  002F10  24F3               	addwf	243,w,c
  1952  002F12  6ED9               	movwf	fsr2l,c
  1953  002F14  0E01               	movlw	high _memory
  1954  002F16  20F4               	addwfc	prodh,w,c
  1955  002F18  6EDA               	movwf	fsr2h,c
  1956  002F1A  0E03               	movlw	3
  1957  002F1C  6EDE               	movwf	postinc2,c
  1958  002F1E  0E00               	movlw	0
  1959  002F20  6EDD               	movwf	postdec2,c
  1960  002F22                     
  1961                           ; BSR set to: 1
  1962                           ;movement.c: 36:             array_index++;
  1963  002F22  2B45               	incf	_array_index& (0+255),f,b
  1964  002F24                     l5318:
  1965                           
  1966                           ;movement.c: 38:         if (color == 4){
  1967  002F24  0E04               	movlw	4
  1968  002F26  1838               	xorwf	turning_action@color^0,w,c
  1969  002F28  A4D8               	btfss	status,2,c
  1970  002F2A  EF99  F017         	goto	u5801
  1971  002F2E  EF9B  F017         	goto	u5800
  1972  002F32                     u5801:
  1973  002F32  EFC3  F017         	goto	l5326
  1974  002F36                     u5800:
  1975  002F36                     
  1976                           ;movement.c: 39:             fullSpeedBack(mL,mR,3);
  1977  002F36  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1978  002F3A  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1979  002F3E  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1980  002F42  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1981  002F46  0E03               	movlw	3
  1982  002F48  6E24               	movwf	fullSpeedBack@instruction^0,c
  1983  002F4A  EC83  F024         	call	_fullSpeedBack	;wreg free
  1984                           
  1985                           ;movement.c: 40:             turn45(mL,mR,2,2);
  1986  002F4E  C034  F020         	movff	turning_action@mL,turn45@mL
  1987  002F52  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1988  002F56  C036  F022         	movff	turning_action@mR,turn45@mR
  1989  002F5A  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1990  002F5E  0E02               	movlw	2
  1991  002F60  6E24               	movwf	turn45@turn_time^0,c
  1992  002F62  0E02               	movlw	2
  1993  002F64  6E25               	movwf	turn45@direction^0,c
  1994  002F66  ECC4  F020         	call	_turn45	;wreg free
  1995  002F6A                     
  1996                           ;movement.c: 41:             memory[array_index] = 4;
  1997  002F6A  0101               	movlb	1	; () banked
  1998  002F6C  5145               	movf	_array_index& (0+255),w,b
  1999  002F6E  0D02               	mullw	2
  2000  002F70  0E00               	movlw	low _memory
  2001  002F72  24F3               	addwf	243,w,c
  2002  002F74  6ED9               	movwf	fsr2l,c
  2003  002F76  0E01               	movlw	high _memory
  2004  002F78  20F4               	addwfc	prodh,w,c
  2005  002F7A  6EDA               	movwf	fsr2h,c
  2006  002F7C  0E04               	movlw	4
  2007  002F7E  6EDE               	movwf	postinc2,c
  2008  002F80  0E00               	movlw	0
  2009  002F82  6EDD               	movwf	postdec2,c
  2010  002F84                     
  2011                           ; BSR set to: 1
  2012                           ;movement.c: 42:             array_index++;
  2013  002F84  2B45               	incf	_array_index& (0+255),f,b
  2014  002F86                     l5326:
  2015                           
  2016                           ;movement.c: 44:         if (color == 5){
  2017  002F86  0E05               	movlw	5
  2018  002F88  1838               	xorwf	turning_action@color^0,w,c
  2019  002F8A  A4D8               	btfss	status,2,c
  2020  002F8C  EFCA  F017         	goto	u5811
  2021  002F90  EFCC  F017         	goto	u5810
  2022  002F94                     u5811:
  2023  002F94  EFF4  F017         	goto	l5334
  2024  002F98                     u5810:
  2025  002F98                     
  2026                           ;movement.c: 45:             fullSpeedBack(mL,mR,3);
  2027  002F98  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2028  002F9C  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2029  002FA0  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2030  002FA4  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2031  002FA8  0E03               	movlw	3
  2032  002FAA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2033  002FAC  EC83  F024         	call	_fullSpeedBack	;wreg free
  2034                           
  2035                           ;movement.c: 46:             turn45(mL,mR,2,1);
  2036  002FB0  C034  F020         	movff	turning_action@mL,turn45@mL
  2037  002FB4  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2038  002FB8  C036  F022         	movff	turning_action@mR,turn45@mR
  2039  002FBC  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2040  002FC0  0E02               	movlw	2
  2041  002FC2  6E24               	movwf	turn45@turn_time^0,c
  2042  002FC4  0E01               	movlw	1
  2043  002FC6  6E25               	movwf	turn45@direction^0,c
  2044  002FC8  ECC4  F020         	call	_turn45	;wreg free
  2045  002FCC                     
  2046                           ;movement.c: 47:             memory[array_index] = 5;
  2047  002FCC  0101               	movlb	1	; () banked
  2048  002FCE  5145               	movf	_array_index& (0+255),w,b
  2049  002FD0  0D02               	mullw	2
  2050  002FD2  0E00               	movlw	low _memory
  2051  002FD4  24F3               	addwf	243,w,c
  2052  002FD6  6ED9               	movwf	fsr2l,c
  2053  002FD8  0E01               	movlw	high _memory
  2054  002FDA  20F4               	addwfc	prodh,w,c
  2055  002FDC  6EDA               	movwf	fsr2h,c
  2056  002FDE  0E05               	movlw	5
  2057  002FE0  6EDE               	movwf	postinc2,c
  2058  002FE2  0E00               	movlw	0
  2059  002FE4  6EDD               	movwf	postdec2,c
  2060  002FE6                     
  2061                           ; BSR set to: 1
  2062                           ;movement.c: 48:             array_index++;
  2063  002FE6  2B45               	incf	_array_index& (0+255),f,b
  2064  002FE8                     l5334:
  2065                           
  2066                           ;movement.c: 50:         if (color == 6){
  2067  002FE8  0E06               	movlw	6
  2068  002FEA  1838               	xorwf	turning_action@color^0,w,c
  2069  002FEC  A4D8               	btfss	status,2,c
  2070  002FEE  EFFB  F017         	goto	u5821
  2071  002FF2  EFFD  F017         	goto	u5820
  2072  002FF6                     u5821:
  2073  002FF6  EF25  F018         	goto	l5342
  2074  002FFA                     u5820:
  2075  002FFA                     
  2076                           ;movement.c: 51:             fullSpeedBack(mL,mR,1);
  2077  002FFA  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2078  002FFE  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2079  003002  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2080  003006  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2081  00300A  0E01               	movlw	1
  2082  00300C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2083  00300E  EC83  F024         	call	_fullSpeedBack	;wreg free
  2084                           
  2085                           ;movement.c: 52:             turn45(mL,mR,3,2);
  2086  003012  C034  F020         	movff	turning_action@mL,turn45@mL
  2087  003016  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2088  00301A  C036  F022         	movff	turning_action@mR,turn45@mR
  2089  00301E  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2090  003022  0E03               	movlw	3
  2091  003024  6E24               	movwf	turn45@turn_time^0,c
  2092  003026  0E02               	movlw	2
  2093  003028  6E25               	movwf	turn45@direction^0,c
  2094  00302A  ECC4  F020         	call	_turn45	;wreg free
  2095  00302E                     
  2096                           ;movement.c: 53:             memory[array_index] = 6;
  2097  00302E  0101               	movlb	1	; () banked
  2098  003030  5145               	movf	_array_index& (0+255),w,b
  2099  003032  0D02               	mullw	2
  2100  003034  0E00               	movlw	low _memory
  2101  003036  24F3               	addwf	243,w,c
  2102  003038  6ED9               	movwf	fsr2l,c
  2103  00303A  0E01               	movlw	high _memory
  2104  00303C  20F4               	addwfc	prodh,w,c
  2105  00303E  6EDA               	movwf	fsr2h,c
  2106  003040  0E06               	movlw	6
  2107  003042  6EDE               	movwf	postinc2,c
  2108  003044  0E00               	movlw	0
  2109  003046  6EDD               	movwf	postdec2,c
  2110  003048                     
  2111                           ; BSR set to: 1
  2112                           ;movement.c: 54:             array_index++;
  2113  003048  2B45               	incf	_array_index& (0+255),f,b
  2114  00304A                     l5342:
  2115                           
  2116                           ;movement.c: 56:         if (color == 7){
  2117  00304A  0E07               	movlw	7
  2118  00304C  1838               	xorwf	turning_action@color^0,w,c
  2119  00304E  A4D8               	btfss	status,2,c
  2120  003050  EF2C  F018         	goto	u5831
  2121  003054  EF2E  F018         	goto	u5830
  2122  003058                     u5831:
  2123  003058  EF56  F018         	goto	l5350
  2124  00305C                     u5830:
  2125  00305C                     
  2126                           ;movement.c: 57:             fullSpeedBack(mL,mR,1);
  2127  00305C  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2128  003060  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2129  003064  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2130  003068  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2131  00306C  0E01               	movlw	1
  2132  00306E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2133  003070  EC83  F024         	call	_fullSpeedBack	;wreg free
  2134                           
  2135                           ;movement.c: 58:             turn45(mL,mR,3,1);
  2136  003074  C034  F020         	movff	turning_action@mL,turn45@mL
  2137  003078  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2138  00307C  C036  F022         	movff	turning_action@mR,turn45@mR
  2139  003080  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2140  003084  0E03               	movlw	3
  2141  003086  6E24               	movwf	turn45@turn_time^0,c
  2142  003088  0E01               	movlw	1
  2143  00308A  6E25               	movwf	turn45@direction^0,c
  2144  00308C  ECC4  F020         	call	_turn45	;wreg free
  2145  003090                     
  2146                           ;movement.c: 59:             memory[array_index] = 7;
  2147  003090  0101               	movlb	1	; () banked
  2148  003092  5145               	movf	_array_index& (0+255),w,b
  2149  003094  0D02               	mullw	2
  2150  003096  0E00               	movlw	low _memory
  2151  003098  24F3               	addwf	243,w,c
  2152  00309A  6ED9               	movwf	fsr2l,c
  2153  00309C  0E01               	movlw	high _memory
  2154  00309E  20F4               	addwfc	prodh,w,c
  2155  0030A0  6EDA               	movwf	fsr2h,c
  2156  0030A2  0E07               	movlw	7
  2157  0030A4  6EDE               	movwf	postinc2,c
  2158  0030A6  0E00               	movlw	0
  2159  0030A8  6EDD               	movwf	postdec2,c
  2160  0030AA                     
  2161                           ; BSR set to: 1
  2162                           ;movement.c: 60:             array_index++;
  2163  0030AA  2B45               	incf	_array_index& (0+255),f,b
  2164  0030AC                     l5350:
  2165                           
  2166                           ;movement.c: 62:         if (color == 8){
  2167  0030AC  0E08               	movlw	8
  2168  0030AE  1838               	xorwf	turning_action@color^0,w,c
  2169  0030B0  A4D8               	btfss	status,2,c
  2170  0030B2  EF5D  F018         	goto	u5841
  2171  0030B6  EF5F  F018         	goto	u5840
  2172  0030BA                     u5841:
  2173  0030BA  EF6E  F018         	goto	l460
  2174  0030BE                     u5840:
  2175  0030BE                     
  2176                           ;movement.c: 63:             toggle_light(2,1);
  2177  0030BE  0E01               	movlw	1
  2178  0030C0  6E01               	movwf	toggle_light@toggletime^0,c
  2179  0030C2  0E02               	movlw	2
  2180  0030C4  ECE1  F019         	call	_toggle_light
  2181  0030C8                     
  2182                           ;movement.c: 64:             goback(mL,mR);
  2183  0030C8  C034  F02C         	movff	turning_action@mL,goback@mL
  2184  0030CC  C035  F02D         	movff	turning_action@mL+1,goback@mL+1
  2185  0030D0  C036  F02E         	movff	turning_action@mR,goback@mR
  2186  0030D4  C037  F02F         	movff	turning_action@mR+1,goback@mR+1
  2187  0030D8  EC58  F013         	call	_goback	;wreg free
  2188  0030DC                     l460:
  2189  0030DC  0012               	return		;funcret
  2190  0030DE                     __end_of_turning_action:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _goback *****************
  2194 ;; Defined at:
  2195 ;;		line 69 in file "movement.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  2198 ;;		 -> main@motorL(9), 
  2199 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  2200 ;;		 -> main@motorR(9), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  i               2   49[COMRAM] unsigned int 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;Total ram usage:        8 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 5
  2219 ;; This function calls:
  2220 ;;		_fullSpeedAhead
  2221 ;;		_fullSpeedBack
  2222 ;;		_stop
  2223 ;;		_turn45
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;;		_turning_action
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text3
  2231  0026B0                     __ptext3:
  2232                           	callstack 0
  2233  0026B0                     _goback:
  2234                           	callstack 24
  2235  0026B0                     
  2236                           ;movement.c: 69: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 70: {
      +                           fullSpeedBack(mL,mR,1);
  2237  0026B0  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2238  0026B4  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2239  0026B8  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2240  0026BC  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2241  0026C0  0E01               	movlw	1
  2242  0026C2  6E24               	movwf	fullSpeedBack@instruction^0,c
  2243  0026C4  EC83  F024         	call	_fullSpeedBack	;wreg free
  2244                           
  2245                           ;movement.c: 71:     turn45(mL,mR,4,1);
  2246  0026C8  C02C  F020         	movff	goback@mL,turn45@mL
  2247  0026CC  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2248  0026D0  C02E  F022         	movff	goback@mR,turn45@mR
  2249  0026D4  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2250  0026D8  0E04               	movlw	4
  2251  0026DA  6E24               	movwf	turn45@turn_time^0,c
  2252  0026DC  0E01               	movlw	1
  2253  0026DE  6E25               	movwf	turn45@direction^0,c
  2254  0026E0  ECC4  F020         	call	_turn45	;wreg free
  2255                           
  2256                           ;movement.c: 72:     fullSpeedBack(mL,mR,2);
  2257  0026E4  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2258  0026E8  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2259  0026EC  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2260  0026F0  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2261  0026F4  0E02               	movlw	2
  2262  0026F6  6E24               	movwf	fullSpeedBack@instruction^0,c
  2263  0026F8  EC83  F024         	call	_fullSpeedBack	;wreg free
  2264  0026FC                     l4944:
  2265                           
  2266                           ;movement.c: 73:     array_index--;
  2267  0026FC  0101               	movlb	1	; () banked
  2268  0026FE  0745               	decf	_array_index& (0+255),f,b
  2269  002700                     l4946:
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;movement.c: 75:         fullSpeedAhead(mL,mR);
  2273  002700  C02C  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2274  002704  C02D  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2275  002708  C02E  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2276  00270C  C02F  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2277  002710  EC68  F029         	call	_fullSpeedAhead	;wreg free
  2278  002714                     
  2279                           ;movement.c: 76:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2280  002714  0E00               	movlw	0
  2281  002716  6E33               	movwf	(goback@i+1)^0,c
  2282  002718  0E00               	movlw	0
  2283  00271A  6E32               	movwf	goback@i^0,c
  2284  00271C  EF9E  F013         	goto	l4954
  2285  002720                     l4950:
  2286                           
  2287                           ; BSR set to: 1
  2288  002720  0E09               	movlw	9
  2289  002722  6E31               	movwf	(??_goback+1)^0,c
  2290  002724  0E1E               	movlw	30
  2291  002726  6E30               	movwf	??_goback^0,c
  2292  002728  0EE4               	movlw	228
  2293  00272A                     u5937:
  2294  00272A  2EE8               	decfsz	wreg,f,c
  2295  00272C  D7FE               	bra	u5937
  2296  00272E  2E30               	decfsz	??_goback^0,f,c
  2297  002730  D7FC               	bra	u5937
  2298  002732  2E31               	decfsz	(??_goback+1)^0,f,c
  2299  002734  D7FA               	bra	u5937
  2300  002736  D000               	nop2	
  2301  002738  4A32               	infsnz	goback@i^0,f,c
  2302  00273A  2A33               	incf	(goback@i+1)^0,f,c
  2303  00273C                     l4954:
  2304  00273C  0101               	movlb	1	; () banked
  2305  00273E  5145               	movf	_array_index& (0+255),w,b
  2306  002740  0D02               	mullw	2
  2307  002742  0E00               	movlw	low _memory
  2308  002744  24F3               	addwf	243,w,c
  2309  002746  6ED9               	movwf	fsr2l,c
  2310  002748  0E01               	movlw	high _memory
  2311  00274A  20F4               	addwfc	prodh,w,c
  2312  00274C  6EDA               	movwf	fsr2h,c
  2313  00274E  50DE               	movf	postinc2,w,c
  2314  002750  5C32               	subwf	goback@i^0,w,c
  2315  002752  50DE               	movf	postinc2,w,c
  2316  002754  5833               	subwfb	(goback@i+1)^0,w,c
  2317  002756  A0D8               	btfss	status,0,c
  2318  002758  EFB0  F013         	goto	u5351
  2319  00275C  EFB2  F013         	goto	u5350
  2320  002760                     u5351:
  2321  002760  EF90  F013         	goto	l4950
  2322  002764                     u5350:
  2323  002764                     
  2324                           ; BSR set to: 1
  2325                           ;movement.c: 77:         stop(mL,mR);
  2326  002764  C02C  F01A         	movff	goback@mL,stop@mL
  2327  002768  C02D  F01B         	movff	goback@mL+1,stop@mL+1
  2328  00276C  C02E  F01C         	movff	goback@mR,stop@mR
  2329  002770  C02F  F01D         	movff	goback@mR+1,stop@mR+1
  2330  002774  EC2C  F02A         	call	_stop	;wreg free
  2331  002778                     
  2332                           ;movement.c: 78:         if (array_index == 0){break;}
  2333  002778  0101               	movlb	1	; () banked
  2334  00277A  5145               	movf	_array_index& (0+255),w,b
  2335  00277C  A4D8               	btfss	status,2,c
  2336  00277E  EFC3  F013         	goto	u5361
  2337  002782  EFC5  F013         	goto	u5360
  2338  002786                     u5361:
  2339  002786  EFC7  F013         	goto	l4962
  2340  00278A                     u5360:
  2341  00278A  EF0B  F015         	goto	l469
  2342  00278E                     l4962:
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;movement.c: 79:         array_index--;
  2346  00278E  0745               	decf	_array_index& (0+255),f,b
  2347  002790                     
  2348                           ; BSR set to: 1
  2349                           ;movement.c: 80:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2350  002790  5145               	movf	_array_index& (0+255),w,b
  2351  002792  0D02               	mullw	2
  2352  002794  0E00               	movlw	low _memory
  2353  002796  24F3               	addwf	243,w,c
  2354  002798  6ED9               	movwf	fsr2l,c
  2355  00279A  0E01               	movlw	high _memory
  2356  00279C  20F4               	addwfc	prodh,w,c
  2357  00279E  6EDA               	movwf	fsr2h,c
  2358  0027A0  04DE               	decf	postinc2,w,c
  2359  0027A2  10DE               	iorwf	postinc2,w,c
  2360  0027A4  A4D8               	btfss	status,2,c
  2361  0027A6  EFD7  F013         	goto	u5371
  2362  0027AA  EFD9  F013         	goto	u5370
  2363  0027AE                     u5371:
  2364  0027AE  EFF5  F013         	goto	l4970
  2365  0027B2                     u5370:
  2366  0027B2                     
  2367                           ; BSR set to: 1
  2368  0027B2  C02C  F020         	movff	goback@mL,turn45@mL
  2369  0027B6  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2370  0027BA  C02E  F022         	movff	goback@mR,turn45@mR
  2371  0027BE  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2372  0027C2  0E02               	movlw	2
  2373  0027C4  6E24               	movwf	turn45@turn_time^0,c
  2374  0027C6  0E01               	movlw	1
  2375  0027C8  6E25               	movwf	turn45@direction^0,c
  2376  0027CA  ECC4  F020         	call	_turn45	;wreg free
  2377  0027CE  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2378  0027D2  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2379  0027D6  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2380  0027DA  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2381  0027DE  0E02               	movlw	2
  2382  0027E0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2383  0027E2  EC83  F024         	call	_fullSpeedBack	;wreg free
  2384  0027E6  EF7E  F013         	goto	l4944
  2385  0027EA                     l4970:
  2386                           
  2387                           ; BSR set to: 1
  2388  0027EA  5145               	movf	_array_index& (0+255),w,b
  2389  0027EC  0D02               	mullw	2
  2390  0027EE  0E00               	movlw	low _memory
  2391  0027F0  24F3               	addwf	243,w,c
  2392  0027F2  6ED9               	movwf	fsr2l,c
  2393  0027F4  0E01               	movlw	high _memory
  2394  0027F6  20F4               	addwfc	prodh,w,c
  2395  0027F8  6EDA               	movwf	fsr2h,c
  2396  0027FA  0E02               	movlw	2
  2397  0027FC  18DE               	xorwf	postinc2,w,c
  2398  0027FE  10DE               	iorwf	postinc2,w,c
  2399  002800  A4D8               	btfss	status,2,c
  2400  002802  EF05  F014         	goto	u5381
  2401  002806  EF07  F014         	goto	u5380
  2402  00280A                     u5381:
  2403  00280A  EF23  F014         	goto	l4976
  2404  00280E                     u5380:
  2405  00280E                     
  2406                           ; BSR set to: 1
  2407  00280E  C02C  F020         	movff	goback@mL,turn45@mL
  2408  002812  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2409  002816  C02E  F022         	movff	goback@mR,turn45@mR
  2410  00281A  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2411  00281E  0E02               	movlw	2
  2412  002820  6E24               	movwf	turn45@turn_time^0,c
  2413  002822  0E02               	movlw	2
  2414  002824  6E25               	movwf	turn45@direction^0,c
  2415  002826  ECC4  F020         	call	_turn45	;wreg free
  2416  00282A  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2417  00282E  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2418  002832  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2419  002836  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2420  00283A  0E02               	movlw	2
  2421  00283C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2422  00283E  EC83  F024         	call	_fullSpeedBack	;wreg free
  2423  002842  EF7E  F013         	goto	l4944
  2424  002846                     l4976:
  2425                           
  2426                           ; BSR set to: 1
  2427  002846  5145               	movf	_array_index& (0+255),w,b
  2428  002848  0D02               	mullw	2
  2429  00284A  0E00               	movlw	low _memory
  2430  00284C  24F3               	addwf	243,w,c
  2431  00284E  6ED9               	movwf	fsr2l,c
  2432  002850  0E01               	movlw	high _memory
  2433  002852  20F4               	addwfc	prodh,w,c
  2434  002854  6EDA               	movwf	fsr2h,c
  2435  002856  0E03               	movlw	3
  2436  002858  18DE               	xorwf	postinc2,w,c
  2437  00285A  10DE               	iorwf	postinc2,w,c
  2438  00285C  A4D8               	btfss	status,2,c
  2439  00285E  EF33  F014         	goto	u5391
  2440  002862  EF35  F014         	goto	u5390
  2441  002866                     u5391:
  2442  002866  EF51  F014         	goto	l4982
  2443  00286A                     u5390:
  2444  00286A                     
  2445                           ; BSR set to: 1
  2446  00286A  C02C  F020         	movff	goback@mL,turn45@mL
  2447  00286E  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2448  002872  C02E  F022         	movff	goback@mR,turn45@mR
  2449  002876  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2450  00287A  0E04               	movlw	4
  2451  00287C  6E24               	movwf	turn45@turn_time^0,c
  2452  00287E  0E01               	movlw	1
  2453  002880  6E25               	movwf	turn45@direction^0,c
  2454  002882  ECC4  F020         	call	_turn45	;wreg free
  2455  002886  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2456  00288A  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2457  00288E  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2458  002892  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2459  002896  0E02               	movlw	2
  2460  002898  6E24               	movwf	fullSpeedBack@instruction^0,c
  2461  00289A  EC83  F024         	call	_fullSpeedBack	;wreg free
  2462  00289E  EF7E  F013         	goto	l4944
  2463  0028A2                     l4982:
  2464                           
  2465                           ; BSR set to: 1
  2466  0028A2  5145               	movf	_array_index& (0+255),w,b
  2467  0028A4  0D02               	mullw	2
  2468  0028A6  0E00               	movlw	low _memory
  2469  0028A8  24F3               	addwf	243,w,c
  2470  0028AA  6ED9               	movwf	fsr2l,c
  2471  0028AC  0E01               	movlw	high _memory
  2472  0028AE  20F4               	addwfc	prodh,w,c
  2473  0028B0  6EDA               	movwf	fsr2h,c
  2474  0028B2  0E04               	movlw	4
  2475  0028B4  18DE               	xorwf	postinc2,w,c
  2476  0028B6  10DE               	iorwf	postinc2,w,c
  2477  0028B8  A4D8               	btfss	status,2,c
  2478  0028BA  EF61  F014         	goto	u5401
  2479  0028BE  EF63  F014         	goto	u5400
  2480  0028C2                     u5401:
  2481  0028C2  EF7F  F014         	goto	l4988
  2482  0028C6                     u5400:
  2483  0028C6                     
  2484                           ; BSR set to: 1
  2485  0028C6  C02C  F020         	movff	goback@mL,turn45@mL
  2486  0028CA  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2487  0028CE  C02E  F022         	movff	goback@mR,turn45@mR
  2488  0028D2  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2489  0028D6  0E02               	movlw	2
  2490  0028D8  6E24               	movwf	turn45@turn_time^0,c
  2491  0028DA  0E01               	movlw	1
  2492  0028DC  6E25               	movwf	turn45@direction^0,c
  2493  0028DE  ECC4  F020         	call	_turn45	;wreg free
  2494  0028E2  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2495  0028E6  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2496  0028EA  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2497  0028EE  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2498  0028F2  0E03               	movlw	3
  2499  0028F4  6E24               	movwf	fullSpeedBack@instruction^0,c
  2500  0028F6  EC83  F024         	call	_fullSpeedBack	;wreg free
  2501  0028FA  EF7E  F013         	goto	l4944
  2502  0028FE                     l4988:
  2503                           
  2504                           ; BSR set to: 1
  2505  0028FE  5145               	movf	_array_index& (0+255),w,b
  2506  002900  0D02               	mullw	2
  2507  002902  0E00               	movlw	low _memory
  2508  002904  24F3               	addwf	243,w,c
  2509  002906  6ED9               	movwf	fsr2l,c
  2510  002908  0E01               	movlw	high _memory
  2511  00290A  20F4               	addwfc	prodh,w,c
  2512  00290C  6EDA               	movwf	fsr2h,c
  2513  00290E  0E05               	movlw	5
  2514  002910  18DE               	xorwf	postinc2,w,c
  2515  002912  10DE               	iorwf	postinc2,w,c
  2516  002914  A4D8               	btfss	status,2,c
  2517  002916  EF8F  F014         	goto	u5411
  2518  00291A  EF91  F014         	goto	u5410
  2519  00291E                     u5411:
  2520  00291E  EFAD  F014         	goto	l4994
  2521  002922                     u5410:
  2522  002922                     
  2523                           ; BSR set to: 1
  2524  002922  C02C  F020         	movff	goback@mL,turn45@mL
  2525  002926  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2526  00292A  C02E  F022         	movff	goback@mR,turn45@mR
  2527  00292E  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2528  002932  0E02               	movlw	2
  2529  002934  6E24               	movwf	turn45@turn_time^0,c
  2530  002936  0E02               	movlw	2
  2531  002938  6E25               	movwf	turn45@direction^0,c
  2532  00293A  ECC4  F020         	call	_turn45	;wreg free
  2533  00293E  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2534  002942  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2535  002946  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2536  00294A  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2537  00294E  0E03               	movlw	3
  2538  002950  6E24               	movwf	fullSpeedBack@instruction^0,c
  2539  002952  EC83  F024         	call	_fullSpeedBack	;wreg free
  2540  002956  EF7E  F013         	goto	l4944
  2541  00295A                     l4994:
  2542                           
  2543                           ; BSR set to: 1
  2544  00295A  5145               	movf	_array_index& (0+255),w,b
  2545  00295C  0D02               	mullw	2
  2546  00295E  0E00               	movlw	low _memory
  2547  002960  24F3               	addwf	243,w,c
  2548  002962  6ED9               	movwf	fsr2l,c
  2549  002964  0E01               	movlw	high _memory
  2550  002966  20F4               	addwfc	prodh,w,c
  2551  002968  6EDA               	movwf	fsr2h,c
  2552  00296A  0E06               	movlw	6
  2553  00296C  18DE               	xorwf	postinc2,w,c
  2554  00296E  10DE               	iorwf	postinc2,w,c
  2555  002970  A4D8               	btfss	status,2,c
  2556  002972  EFBD  F014         	goto	u5421
  2557  002976  EFBF  F014         	goto	u5420
  2558  00297A                     u5421:
  2559  00297A  EFDB  F014         	goto	l5000
  2560  00297E                     u5420:
  2561  00297E                     
  2562                           ; BSR set to: 1
  2563  00297E  C02C  F020         	movff	goback@mL,turn45@mL
  2564  002982  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2565  002986  C02E  F022         	movff	goback@mR,turn45@mR
  2566  00298A  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2567  00298E  0E03               	movlw	3
  2568  002990  6E24               	movwf	turn45@turn_time^0,c
  2569  002992  0E01               	movlw	1
  2570  002994  6E25               	movwf	turn45@direction^0,c
  2571  002996  ECC4  F020         	call	_turn45	;wreg free
  2572  00299A  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2573  00299E  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2574  0029A2  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2575  0029A6  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2576  0029AA  0E02               	movlw	2
  2577  0029AC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2578  0029AE  EC83  F024         	call	_fullSpeedBack	;wreg free
  2579  0029B2  EF7E  F013         	goto	l4944
  2580  0029B6                     l5000:
  2581                           
  2582                           ; BSR set to: 1
  2583  0029B6  5145               	movf	_array_index& (0+255),w,b
  2584  0029B8  0D02               	mullw	2
  2585  0029BA  0E00               	movlw	low _memory
  2586  0029BC  24F3               	addwf	243,w,c
  2587  0029BE  6ED9               	movwf	fsr2l,c
  2588  0029C0  0E01               	movlw	high _memory
  2589  0029C2  20F4               	addwfc	prodh,w,c
  2590  0029C4  6EDA               	movwf	fsr2h,c
  2591  0029C6  0E07               	movlw	7
  2592  0029C8  18DE               	xorwf	postinc2,w,c
  2593  0029CA  10DE               	iorwf	postinc2,w,c
  2594  0029CC  A4D8               	btfss	status,2,c
  2595  0029CE  EFEB  F014         	goto	u5431
  2596  0029D2  EFED  F014         	goto	u5430
  2597  0029D6                     u5431:
  2598  0029D6  EF09  F015         	goto	l477
  2599  0029DA                     u5430:
  2600  0029DA                     
  2601                           ; BSR set to: 1
  2602  0029DA  C02C  F020         	movff	goback@mL,turn45@mL
  2603  0029DE  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2604  0029E2  C02E  F022         	movff	goback@mR,turn45@mR
  2605  0029E6  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2606  0029EA  0E03               	movlw	3
  2607  0029EC  6E24               	movwf	turn45@turn_time^0,c
  2608  0029EE  0E02               	movlw	2
  2609  0029F0  6E25               	movwf	turn45@direction^0,c
  2610  0029F2  ECC4  F020         	call	_turn45	;wreg free
  2611  0029F6  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2612  0029FA  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2613  0029FE  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2614  002A02  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2615  002A06  0E02               	movlw	2
  2616  002A08  6E24               	movwf	fullSpeedBack@instruction^0,c
  2617  002A0A  EC83  F024         	call	_fullSpeedBack	;wreg free
  2618  002A0E  EF7E  F013         	goto	l4944
  2619  002A12                     l477:
  2620                           
  2621                           ; BSR set to: 1
  2622  002A12  EF80  F013         	goto	l4946
  2623  002A16                     l469:
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;movement.c: 88:     LATDbits.LATD7 = 1;
  2627  002A16  8E7C               	bsf	124,7,c	;volatile
  2628                           
  2629                           ;movement.c: 89:     while(PORTFbits.RF2){
  2630  002A18  EF22  F015         	goto	l483
  2631  002A1C                     l5006:
  2632                           
  2633                           ;movement.c: 90:         stop(mL,mR);
  2634  002A1C  C02C  F01A         	movff	goback@mL,stop@mL
  2635  002A20  C02D  F01B         	movff	goback@mL+1,stop@mL+1
  2636  002A24  C02E  F01C         	movff	goback@mR,stop@mR
  2637  002A28  C02F  F01D         	movff	goback@mR+1,stop@mR+1
  2638  002A2C  EC2C  F02A         	call	_stop	;wreg free
  2639  002A30                     
  2640                           ;movement.c: 91:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2641  002A30  B48E               	btfsc	142,2,c	;volatile
  2642  002A32  EF1D  F015         	goto	u5441
  2643  002A36  EF1F  F015         	goto	u5440
  2644  002A3A                     u5441:
  2645  002A3A  EF22  F015         	goto	l483
  2646  002A3E                     u5440:
  2647  002A3E  9E7C               	bcf	124,7,c	;volatile
  2648  002A40  EF29  F015         	goto	l487
  2649  002A44                     l483:
  2650                           
  2651                           ;movement.c: 89:     while(PORTFbits.RF2){
  2652  002A44  B48E               	btfsc	142,2,c	;volatile
  2653  002A46  EF27  F015         	goto	u5451
  2654  002A4A  EF29  F015         	goto	u5450
  2655  002A4E                     u5451:
  2656  002A4E  EF0E  F015         	goto	l5006
  2657  002A52                     u5450:
  2658  002A52                     l487:
  2659  002A52  0012               	return		;funcret
  2660  002A54                     __end_of_goback:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _fullSpeedBack *****************
  2664 ;; Defined at:
  2665 ;;		line 140 in file "dc_motor.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2668 ;;		 -> main@motorL(9), 
  2669 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2670 ;;		 -> main@motorR(9), 
  2671 ;;  instruction     1   35[COMRAM] unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2683 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;Total ram usage:        7 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 4
  2690 ;; This function calls:
  2691 ;;		_setMotorPWM
  2692 ;;		_stop
  2693 ;; This function is called by:
  2694 ;;		_turning_action
  2695 ;;		_goback
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text4
  2700  004906                     __ptext4:
  2701                           	callstack 0
  2702  004906                     _fullSpeedBack:
  2703                           	callstack 24
  2704  004906                     
  2705                           ;dc_motor.c: 140: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 141: {;dc_motor.c: 142:     mL->direction=0;
  2706  004906  EE20 F001          	lfsr	2,1
  2707  00490A  5020               	movf	fullSpeedBack@mL^0,w,c
  2708  00490C  26D9               	addwf	fsr2l,f,c
  2709  00490E  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2710  004910  22DA               	addwfc	fsr2h,f,c
  2711  004912  0E00               	movlw	0
  2712  004914  6EDF               	movwf	indf2,c
  2713                           
  2714                           ;dc_motor.c: 143:     mR->direction=0;
  2715  004916  EE20 F001          	lfsr	2,1
  2716  00491A  5022               	movf	fullSpeedBack@mR^0,w,c
  2717  00491C  26D9               	addwf	fsr2l,f,c
  2718  00491E  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2719  004920  22DA               	addwfc	fsr2h,f,c
  2720  004922  0E00               	movlw	0
  2721  004924  6EDF               	movwf	indf2,c
  2722                           
  2723                           ;dc_motor.c: 144:     while (mL->power<44 || mR->power<44){
  2724  004926  EFCD  F024         	goto	l4486
  2725  00492A                     l4472:
  2726                           
  2727                           ;dc_motor.c: 145:         if (mL->power<44) {mL->power += 2;}
  2728  00492A  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2729  00492E  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2730  004932  0E2C               	movlw	44
  2731  004934  60DF               	cpfslt	indf2,c
  2732  004936  EF9F  F024         	goto	u4791
  2733  00493A  EFA1  F024         	goto	u4790
  2734  00493E                     u4791:
  2735  00493E  EFA7  F024         	goto	l4476
  2736  004942                     u4790:
  2737  004942  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2738  004946  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2739  00494A  0E02               	movlw	2
  2740  00494C  26DF               	addwf	indf2,f,c
  2741  00494E                     l4476:
  2742                           
  2743                           ;dc_motor.c: 146:         if (mR->power<44) {mR->power += 2;}
  2744  00494E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2745  004952  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2746  004956  0E2C               	movlw	44
  2747  004958  60DF               	cpfslt	indf2,c
  2748  00495A  EFB1  F024         	goto	u4801
  2749  00495E  EFB3  F024         	goto	u4800
  2750  004962                     u4801:
  2751  004962  EFB9  F024         	goto	l4480
  2752  004966                     u4800:
  2753  004966  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2754  00496A  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2755  00496E  0E02               	movlw	2
  2756  004970  26DF               	addwf	indf2,f,c
  2757  004972                     l4480:
  2758                           
  2759                           ;dc_motor.c: 147:         setMotorPWM(mL);
  2760  004972  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2761  004976  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2762  00497A  EC4D  F01D         	call	_setMotorPWM	;wreg free
  2763  00497E                     
  2764                           ;dc_motor.c: 148:         setMotorPWM(mR);
  2765  00497E  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2766  004982  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2767  004986  EC4D  F01D         	call	_setMotorPWM	;wreg free
  2768  00498A                     
  2769                           ;dc_motor.c: 149:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2770  00498A  0E68               	movlw	104
  2771  00498C  6E25               	movwf	??_fullSpeedBack^0,c
  2772  00498E  0EE4               	movlw	228
  2773  004990                     u5947:
  2774  004990  2EE8               	decfsz	wreg,f,c
  2775  004992  D7FE               	bra	u5947
  2776  004994  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2777  004996  D7FC               	bra	u5947
  2778  004998  D000               	nop2	
  2779  00499A                     l4486:
  2780                           
  2781                           ;dc_motor.c: 144:     while (mL->power<44 || mR->power<44){
  2782  00499A  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2783  00499E  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2784  0049A2  0E2B               	movlw	43
  2785  0049A4  64DF               	cpfsgt	indf2,c
  2786  0049A6  EFD7  F024         	goto	u4811
  2787  0049AA  EFD9  F024         	goto	u4810
  2788  0049AE                     u4811:
  2789  0049AE  EF95  F024         	goto	l4472
  2790  0049B2                     u4810:
  2791  0049B2  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2792  0049B6  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2793  0049BA  0E2B               	movlw	43
  2794  0049BC  64DF               	cpfsgt	indf2,c
  2795  0049BE  EFE3  F024         	goto	u4821
  2796  0049C2  EFE5  F024         	goto	u4820
  2797  0049C6                     u4821:
  2798  0049C6  EF95  F024         	goto	l4472
  2799  0049CA                     u4820:
  2800  0049CA                     
  2801                           ;dc_motor.c: 152:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2802  0049CA  0424               	decf	fullSpeedBack@instruction^0,w,c
  2803  0049CC  A4D8               	btfss	status,2,c
  2804  0049CE  EFEB  F024         	goto	u4831
  2805  0049D2  EFED  F024         	goto	u4830
  2806  0049D6                     u4831:
  2807  0049D6  EFF8  F024         	goto	l4494
  2808  0049DA                     u4830:
  2809  0049DA  0E31               	movlw	49
  2810  0049DC  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2811  0049DE  0EB4               	movlw	180
  2812  0049E0  6E25               	movwf	??_fullSpeedBack^0,c
  2813  0049E2  0E66               	movlw	102
  2814  0049E4                     u5957:
  2815  0049E4  2EE8               	decfsz	wreg,f,c
  2816  0049E6  D7FE               	bra	u5957
  2817  0049E8  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2818  0049EA  D7FC               	bra	u5957
  2819  0049EC  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2820  0049EE  D7FA               	bra	u5957
  2821  0049F0                     l4494:
  2822                           
  2823                           ;dc_motor.c: 153:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2824  0049F0  0E02               	movlw	2
  2825  0049F2  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2826  0049F4  A4D8               	btfss	status,2,c
  2827  0049F6  EFFF  F024         	goto	u4841
  2828  0049FA  EF01  F025         	goto	u4840
  2829  0049FE                     u4841:
  2830  0049FE  EF0D  F025         	goto	l4498
  2831  004A02                     u4840:
  2832  004A02  0E52               	movlw	82
  2833  004A04  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2834  004A06  0E2B               	movlw	43
  2835  004A08  6E25               	movwf	??_fullSpeedBack^0,c
  2836  004A0A  0E00               	movlw	0
  2837  004A0C                     u5967:
  2838  004A0C  2EE8               	decfsz	wreg,f,c
  2839  004A0E  D7FE               	bra	u5967
  2840  004A10  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2841  004A12  D7FC               	bra	u5967
  2842  004A14  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2843  004A16  D7FA               	bra	u5967
  2844  004A18  D000               	nop2	
  2845  004A1A                     l4498:
  2846                           
  2847                           ;dc_motor.c: 154:     if (instruction == 3) {_delay((unsigned long)((1900)*(64000000/400
      +                          0.0)));}
  2848  004A1A  0E03               	movlw	3
  2849  004A1C  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2850  004A1E  A4D8               	btfss	status,2,c
  2851  004A20  EF14  F025         	goto	u4851
  2852  004A24  EF16  F025         	goto	u4850
  2853  004A28                     u4851:
  2854  004A28  EF21  F025         	goto	l4502
  2855  004A2C                     u4850:
  2856  004A2C  0E9B               	movlw	155
  2857  004A2E  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2858  004A30  0E39               	movlw	57
  2859  004A32  6E25               	movwf	??_fullSpeedBack^0,c
  2860  004A34  0E1C               	movlw	28
  2861  004A36                     u5977:
  2862  004A36  2EE8               	decfsz	wreg,f,c
  2863  004A38  D7FE               	bra	u5977
  2864  004A3A  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2865  004A3C  D7FC               	bra	u5977
  2866  004A3E  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2867  004A40  D7FA               	bra	u5977
  2868  004A42                     l4502:
  2869                           
  2870                           ;dc_motor.c: 155:     stop(mL,mR);
  2871  004A42  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2872  004A46  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2873  004A4A  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2874  004A4E  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2875  004A52  EC2C  F02A         	call	_stop	;wreg free
  2876  004A56  0012               	return		;funcret
  2877  004A58                     __end_of_fullSpeedBack:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _test_function *****************
  2881 ;; Defined at:
  2882 ;;		line 84 in file "test_and_calibration.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  test_code       1    wreg     unsigned char 
  2885 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  2886 ;;		 -> main@rgb(8), 
  2887 ;;  w               2  136[BANK0 ] PTR struct white_card
  2888 ;;		 -> main@white(28), 
  2889 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  2890 ;;		 -> main@motorL(9), 
  2891 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  2892 ;;		 -> main@motorR(9), 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  test_code       1  149[BANK0 ] unsigned char 
  2895 ;;  amb_light       2  144[BANK0 ] unsigned int 
  2896 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  2897 ;;  color           1  147[BANK0 ] unsigned char 
  2898 ;;  complete        1  146[BANK0 ] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;Total ram usage:       16 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 11
  2915 ;; This function calls:
  2916 ;;		_LED_C
  2917 ;;		_amb_light_measure
  2918 ;;		_calibrate_white
  2919 ;;		_color_data_collection
  2920 ;;		_color_display
  2921 ;;		_color_predict
  2922 ;;		_detect_color
  2923 ;;		_distance_measure
  2924 ;;		_fullSpeedAhead
  2925 ;;		_read_color
  2926 ;;		_stop
  2927 ;;		_test_action
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text5
  2934  003FD8                     __ptext5:
  2935                           	callstack 0
  2936  003FD8                     _test_function:
  2937                           	callstack 19
  2938                           
  2939                           ;incstack = 0
  2940                           ;test_function@test_code stored from wreg
  2941  003FD8  0100               	movlb	0	; () banked
  2942  003FDA  6FF5               	movwf	test_function@test_code& (0+255),b
  2943  003FDC                     
  2944                           ;test_and_calibration.c: 84: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 85: {;test_and_calibration.c: 86:     unsigned char complete = 0;
  2945  003FDC  0E00               	movlw	0
  2946  003FDE  0100               	movlb	0	; () banked
  2947  003FE0  6FF2               	movwf	test_function@complete& (0+255),b
  2948                           
  2949                           ;test_and_calibration.c: 88:     unsigned char stop_signal = 0;
  2950  003FE2  0E00               	movlw	0
  2951  003FE4  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2952                           
  2953                           ;test_and_calibration.c: 89:     unsigned int amb_light = 0;
  2954  003FE6  0E00               	movlw	0
  2955  003FE8  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  2956  003FEA  0E00               	movlw	0
  2957  003FEC  6FF0               	movwf	test_function@amb_light& (0+255),b
  2958  003FEE                     
  2959                           ; BSR set to: 0
  2960                           ;test_and_calibration.c: 91:     if (test_code == 2){calibrate_white(w);}
  2961  003FEE  0E02               	movlw	2
  2962  003FF0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2963  003FF2  A4D8               	btfss	status,2,c
  2964  003FF4  EFFE  F01F         	goto	u5671
  2965  003FF8  EF00  F020         	goto	u5670
  2966  003FFC                     u5671:
  2967  003FFC  EF06  F020         	goto	l5238
  2968  004000                     u5670:
  2969  004000                     
  2970                           ; BSR set to: 0
  2971  004000  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  2972  004004  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2973  004008  EC48  F01C         	call	_calibrate_white	;wreg free
  2974  00400C                     l5238:
  2975                           
  2976                           ;test_and_calibration.c: 92:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2977  00400C  0E04               	movlw	4
  2978  00400E  0100               	movlb	0	; () banked
  2979  004010  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2980  004012  A4D8               	btfss	status,2,c
  2981  004014  EF0E  F020         	goto	u5681
  2982  004018  EF10  F020         	goto	u5680
  2983  00401C                     u5681:
  2984  00401C  EF1A  F020         	goto	l5242
  2985  004020                     u5680:
  2986  004020                     
  2987                           ; BSR set to: 0
  2988  004020  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  2989  004024  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2990  004028  ECC3  F025         	call	_amb_light_measure	;wreg free
  2991  00402C  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  2992  004030  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2993  004034                     l5242:
  2994                           
  2995                           ;test_and_calibration.c: 96:         if (test_code == 1){
  2996  004034  0100               	movlb	0	; () banked
  2997  004036  05F5               	decf	test_function@test_code& (0+255),w,b
  2998  004038  A4D8               	btfss	status,2,c
  2999  00403A  EF21  F020         	goto	u5691
  3000  00403E  EF23  F020         	goto	u5690
  3001  004042                     u5691:
  3002  004042  EF31  F020         	goto	l5250
  3003  004046                     u5690:
  3004  004046                     
  3005                           ; BSR set to: 0
  3006                           ;test_and_calibration.c: 97:             LED_C();
  3007  004046  EC62  F02E         	call	_LED_C	;wreg free
  3008  00404A                     
  3009                           ;test_and_calibration.c: 98:             read_color(m);
  3010  00404A  C0E6  F00C         	movff	test_function@m,read_color@m
  3011  00404E  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  3012  004052  EC32  F02B         	call	_read_color	;wreg free
  3013  004056                     
  3014                           ;test_and_calibration.c: 99:             color_display(m);
  3015  004056  C0E6  F058         	movff	test_function@m,color_display@m
  3016  00405A  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  3017  00405E  ECC9  F02A         	call	_color_display	;wreg free
  3018  004062                     l5250:
  3019                           
  3020                           ;test_and_calibration.c: 102:         if (test_code == 2){
  3021  004062  0E02               	movlw	2
  3022  004064  0100               	movlb	0	; () banked
  3023  004066  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3024  004068  A4D8               	btfss	status,2,c
  3025  00406A  EF39  F020         	goto	u5701
  3026  00406E  EF3B  F020         	goto	u5700
  3027  004072                     u5701:
  3028  004072  EF4A  F020         	goto	l5256
  3029  004076                     u5700:
  3030  004076                     
  3031                           ; BSR set to: 0
  3032                           ;test_and_calibration.c: 103:             color = detect_color(m,w);
  3033  004076  C0E6  F071         	movff	test_function@m,detect_color@m
  3034  00407A  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  3035  00407E  C0E8  F073         	movff	test_function@w,detect_color@w
  3036  004082  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  3037  004086  EC0A  F007         	call	_detect_color	;wreg free
  3038  00408A  0100               	movlb	0	; () banked
  3039  00408C  6FF3               	movwf	test_function@color& (0+255),b
  3040  00408E                     
  3041                           ; BSR set to: 0
  3042                           ;test_and_calibration.c: 105:             color_predict(color);
  3043  00408E  51F3               	movf	test_function@color& (0+255),w,b
  3044  004090  ECCF  F02D         	call	_color_predict
  3045  004094                     l5256:
  3046                           
  3047                           ;test_and_calibration.c: 108:         if (test_code == 3){
  3048  004094  0E03               	movlw	3
  3049  004096  0100               	movlb	0	; () banked
  3050  004098  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3051  00409A  A4D8               	btfss	status,2,c
  3052  00409C  EF52  F020         	goto	u5711
  3053  0040A0  EF54  F020         	goto	u5710
  3054  0040A4                     u5711:
  3055  0040A4  EF67  F020         	goto	l5266
  3056  0040A8                     u5710:
  3057  0040A8  EF5F  F020         	goto	l5264
  3058  0040AC                     l5260:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;test_and_calibration.c: 110:                 color_data_collection(m);
  3062  0040AC  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  3063  0040B0  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3064  0040B4  EC96  F021         	call	_color_data_collection	;wreg free
  3065  0040B8                     
  3066                           ;test_and_calibration.c: 111:                 complete = 1;
  3067  0040B8  0E01               	movlw	1
  3068  0040BA  0100               	movlb	0	; () banked
  3069  0040BC  6FF2               	movwf	test_function@complete& (0+255),b
  3070  0040BE                     l5264:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;test_and_calibration.c: 109:             while (complete == 0){
  3074  0040BE  51F2               	movf	test_function@complete& (0+255),w,b
  3075  0040C0  B4D8               	btfsc	status,2,c
  3076  0040C2  EF65  F020         	goto	u5721
  3077  0040C6  EF67  F020         	goto	u5720
  3078  0040CA                     u5721:
  3079  0040CA  EF56  F020         	goto	l5260
  3080  0040CE                     u5720:
  3081  0040CE                     l5266:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;test_and_calibration.c: 115:         if (test_code == 4){
  3085  0040CE  0E04               	movlw	4
  3086  0040D0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3087  0040D2  A4D8               	btfss	status,2,c
  3088  0040D4  EF6E  F020         	goto	u5731
  3089  0040D8  EF70  F020         	goto	u5730
  3090  0040DC                     u5731:
  3091  0040DC  EFAE  F020         	goto	l5282
  3092  0040E0                     u5730:
  3093  0040E0  EF8C  F020         	goto	l5274
  3094  0040E4                     l5270:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;test_and_calibration.c: 117:                 fullSpeedAhead(mL, mR);
  3098  0040E4  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3099  0040E8  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3100  0040EC  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3101  0040F0  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3102  0040F4  EC68  F029         	call	_fullSpeedAhead	;wreg free
  3103  0040F8                     
  3104                           ;test_and_calibration.c: 118:                 stop_signal = distance_measure(mL, mR, amb
      +                          _light);
  3105  0040F8  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  3106  0040FC  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  3107  004100  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  3108  004104  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  3109  004108  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  3110  00410C  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  3111  004110  ECA2  F028         	call	_distance_measure	;wreg free
  3112  004114  0100               	movlb	0	; () banked
  3113  004116  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3114  004118                     l5274:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;test_and_calibration.c: 116:             while (stop_signal == 0){
  3118  004118  51F4               	movf	test_function@stop_signal& (0+255),w,b
  3119  00411A  B4D8               	btfsc	status,2,c
  3120  00411C  EF92  F020         	goto	u5741
  3121  004120  EF94  F020         	goto	u5740
  3122  004124                     u5741:
  3123  004124  EF72  F020         	goto	l5270
  3124  004128                     u5740:
  3125  004128                     
  3126                           ; BSR set to: 0
  3127                           ;test_and_calibration.c: 120:             stop(mL, mR);
  3128  004128  C0EA  F01A         	movff	test_function@mL,stop@mL
  3129  00412C  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  3130  004130  C0EC  F01C         	movff	test_function@mR,stop@mR
  3131  004134  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  3132  004138  EC2C  F02A         	call	_stop	;wreg free
  3133  00413C                     
  3134                           ;test_and_calibration.c: 121:             _delay((unsigned long)((1000)*(64000000/4000.0
      +                          )));
  3135  00413C  0E52               	movlw	82
  3136  00413E  0100               	movlb	0	; () banked
  3137  004140  6FEF               	movwf	(??_test_function+1)& (0+255),b
  3138  004142  0E2B               	movlw	43
  3139  004144  6FEE               	movwf	??_test_function& (0+255),b
  3140  004146  0E00               	movlw	0
  3141  004148                     u5987:
  3142  004148  2EE8               	decfsz	wreg,f,c
  3143  00414A  D7FE               	bra	u5987
  3144  00414C  2FEE               	decfsz	??_test_function& (0+255),f,b
  3145  00414E  D7FC               	bra	u5987
  3146  004150  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  3147  004152  D7FA               	bra	u5987
  3148  004154  F000               	nop	
  3149  004156                     
  3150                           ;test_and_calibration.c: 122:             stop_signal = 0;
  3151  004156  0E00               	movlw	0
  3152  004158  0100               	movlb	0	; () banked
  3153  00415A  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3154  00415C                     l5282:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;test_and_calibration.c: 125:         if (test_code == 5){
  3158  00415C  0E05               	movlw	5
  3159  00415E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3160  004160  A4D8               	btfss	status,2,c
  3161  004162  EFB5  F020         	goto	u5751
  3162  004166  EFB7  F020         	goto	u5750
  3163  00416A                     u5751:
  3164  00416A  EF1A  F020         	goto	l5242
  3165  00416E                     u5750:
  3166  00416E                     
  3167                           ; BSR set to: 0
  3168                           ;test_and_calibration.c: 126:             test_action(mL,mR);
  3169  00416E  C0EA  F02C         	movff	test_function@mL,test_action@mL
  3170  004172  C0EB  F02D         	movff	test_function@mL+1,test_action@mL+1
  3171  004176  C0EC  F02E         	movff	test_function@mR,test_action@mR
  3172  00417A  C0ED  F02F         	movff	test_function@mR+1,test_action@mR+1
  3173  00417E  EC2C  F025         	call	_test_action	;wreg free
  3174  004182  EF1A  F020         	goto	l5242
  3175  004186  0012               	return		;funcret
  3176  004188                     __end_of_test_function:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _distance_measure *****************
  3180 ;; Defined at:
  3181 ;;		line 381 in file "color.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  3184 ;;		 -> main@motorL(9), 
  3185 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  3186 ;;		 -> main@motorR(9), 
  3187 ;;  amb_light       2   14[BANK0 ] unsigned int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  threshold       2   26[BANK0 ] unsigned int 
  3190 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  3191 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  3192 ;;  stop            1   28[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3202 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;Total ram usage:       19 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 5
  3209 ;; This function calls:
  3210 ;;		_LED_C
  3211 ;;		___flmul
  3212 ;;		___xxtofl
  3213 ;;		_color_read_Clear
  3214 ;;		_color_read_Green
  3215 ;;		_lroundf
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;;		_test_function
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text6
  3223  005144                     __ptext6:
  3224                           	callstack 0
  3225  005144                     _distance_measure:
  3226                           	callstack 24
  3227  005144  0E00               	movlw	0
  3228  005146  0100               	movlb	0	; () banked
  3229  005148  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  3230  00514A  0E00               	movlw	0
  3231  00514C  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  3232                           
  3233                           ;color.c: 384:     unsigned char stop = 0;
  3234  00514E  0E00               	movlw	0
  3235  005150  6F7C               	movwf	distance_measure@stop& (0+255),b
  3236                           
  3237                           ;color.c: 385:     unsigned int threshold = 0;
  3238  005152  0E00               	movlw	0
  3239  005154  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  3240  005156  0E00               	movlw	0
  3241  005158  6F7A               	movwf	distance_measure@threshold& (0+255),b
  3242  00515A                     
  3243                           ; BSR set to: 0
  3244                           ;color.c: 386:     LED_C();
  3245  00515A  EC62  F02E         	call	_LED_C	;wreg free
  3246  00515E                     
  3247                           ;color.c: 387:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3248  00515E  0E09               	movlw	9
  3249  005160  0100               	movlb	0	; () banked
  3250  005162  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  3251  005164  0E1E               	movlw	30
  3252  005166  6F70               	movwf	??_distance_measure& (0+255),b
  3253  005168  0EE4               	movlw	228
  3254  00516A                     u5997:
  3255  00516A  2EE8               	decfsz	wreg,f,c
  3256  00516C  D7FE               	bra	u5997
  3257  00516E  2F70               	decfsz	??_distance_measure& (0+255),f,b
  3258  005170  D7FC               	bra	u5997
  3259  005172  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  3260  005174  D7FA               	bra	u5997
  3261  005176  F000               	nop	
  3262  005178                     
  3263                           ;color.c: 388:     CC_amb = color_read_Clear();
  3264  005178  EC02  F02C         	call	_color_read_Clear	;wreg free
  3265  00517C  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  3266  005180  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  3267  005184  ECB2  F02B         	call	_color_read_Green	;wreg free
  3268  005188                     
  3269                           ;color.c: 390:     threshold = lroundf((float)amb_light * 1.1);
  3270  005188  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  3271  00518C  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  3272  005190  6A03               	clrf	(___xxtofl@val+2)^0,c
  3273  005192  6A04               	clrf	(___xxtofl@val+3)^0,c
  3274  005194  0E00               	movlw	0
  3275  005196  EC12  F01F         	call	___xxtofl
  3276  00519A  C001  F028         	movff	?___xxtofl,___flmul@b
  3277  00519E  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3278  0051A2  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3279  0051A6  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3280  0051AA  0ECD               	movlw	205
  3281  0051AC  6E2C               	movwf	___flmul@a^0,c
  3282  0051AE  0ECC               	movlw	204
  3283  0051B0  6E2D               	movwf	(___flmul@a+1)^0,c
  3284  0051B2  0E8C               	movlw	140
  3285  0051B4  6E2E               	movwf	(___flmul@a+2)^0,c
  3286  0051B6  0E3F               	movlw	63
  3287  0051B8  6E2F               	movwf	(___flmul@a+3)^0,c
  3288  0051BA  EC6C  F00F         	call	___flmul	;wreg free
  3289  0051BE  C028  F074         	movff	?___flmul,_distance_measure$2950
  3290  0051C2  C029  F075         	movff	?___flmul+1,_distance_measure$2950+1
  3291  0051C6  C02A  F076         	movff	?___flmul+2,_distance_measure$2950+2
  3292  0051CA  C02B  F077         	movff	?___flmul+3,_distance_measure$2950+3
  3293  0051CE                     
  3294                           ;color.c: 390:     threshold = lroundf((float)amb_light * 1.1);
  3295  0051CE  C074  F066         	movff	_distance_measure$2950,lroundf@x
  3296  0051D2  C075  F067         	movff	_distance_measure$2950+1,lroundf@x+1
  3297  0051D6  C076  F068         	movff	_distance_measure$2950+2,lroundf@x+2
  3298  0051DA  C077  F069         	movff	_distance_measure$2950+3,lroundf@x+3
  3299  0051DE  EC2F  F02D         	call	_lroundf	;wreg free
  3300  0051E2  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  3301  0051E6  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  3302  0051EA                     
  3303                           ;color.c: 393:     if (CC_amb >= threshold){stop = 1;}
  3304  0051EA  0100               	movlb	0	; () banked
  3305  0051EC  517A               	movf	distance_measure@threshold& (0+255),w,b
  3306  0051EE  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  3307  0051F0  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  3308  0051F2  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  3309  0051F4  A0D8               	btfss	status,0,c
  3310  0051F6  EFFF  F028         	goto	u5341
  3311  0051FA  EF01  F029         	goto	u5340
  3312  0051FE                     u5341:
  3313  0051FE  EF03  F029         	goto	l148
  3314  005202                     u5340:
  3315  005202                     
  3316                           ; BSR set to: 0
  3317  005202  0E01               	movlw	1
  3318  005204  6F7C               	movwf	distance_measure@stop& (0+255),b
  3319  005206                     l148:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;color.c: 394:     return stop;
  3323  005206  517C               	movf	distance_measure@stop& (0+255),w,b
  3324  005208                     
  3325                           ; BSR set to: 0
  3326  005208  0012               	return		;funcret
  3327  00520A                     __end_of_distance_measure:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _detect_color *****************
  3331 ;; Defined at:
  3332 ;;		line 270 in file "color.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  3335 ;;		 -> main@rgb(8), 
  3336 ;;  w               2   19[BANK0 ] PTR struct white_card
  3337 ;;		 -> main@white(28), 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  BG              2   44[BANK0 ] unsigned int 
  3340 ;;  RR              2   42[BANK0 ] unsigned int 
  3341 ;;  GG              2   39[BANK0 ] unsigned int 
  3342 ;;  BR              2   37[BANK0 ] unsigned int 
  3343 ;;  GB              2   35[BANK0 ] unsigned int 
  3344 ;;  RB              2   33[BANK0 ] unsigned int 
  3345 ;;  BB              2   31[BANK0 ] unsigned int 
  3346 ;;  GR              2   29[BANK0 ] unsigned int 
  3347 ;;  BC              2   27[BANK0 ] unsigned int 
  3348 ;;  RG              2   25[BANK0 ] unsigned int 
  3349 ;;  color           1   41[BANK0 ] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      unsigned char 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:       33 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 5
  3366 ;; This function calls:
  3367 ;;		_LED_B
  3368 ;;		_LED_G
  3369 ;;		_LED_R
  3370 ;;		___fldiv
  3371 ;;		___flmul
  3372 ;;		___xxtofl
  3373 ;;		_compare
  3374 ;;		_lroundf
  3375 ;;		_read_color
  3376 ;;		_toggle_light
  3377 ;; This function is called by:
  3378 ;;		_verify_color
  3379 ;;		_main
  3380 ;;		_test_function
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text7
  3385  000E14                     __ptext7:
  3386                           	callstack 0
  3387  000E14                     _detect_color:
  3388                           	callstack 24
  3389  000E14  0E00               	movlw	0
  3390  000E16  0100               	movlb	0	; () banked
  3391  000E18  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  3392  000E1A  0E00               	movlw	0
  3393  000E1C  6F79               	movwf	detect_color@RG& (0+255),b
  3394  000E1E  0E00               	movlw	0
  3395  000E20  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  3396  000E22  0E00               	movlw	0
  3397  000E24  6F81               	movwf	detect_color@RB& (0+255),b
  3398  000E26  0E00               	movlw	0
  3399  000E28  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  3400  000E2A  0E00               	movlw	0
  3401  000E2C  6F7D               	movwf	detect_color@GR& (0+255),b
  3402  000E2E  0E00               	movlw	0
  3403  000E30  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  3404  000E32  0E00               	movlw	0
  3405  000E34  6F87               	movwf	detect_color@GG& (0+255),b
  3406  000E36  0E00               	movlw	0
  3407  000E38  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  3408  000E3A  0E00               	movlw	0
  3409  000E3C  6F83               	movwf	detect_color@GB& (0+255),b
  3410  000E3E  0E00               	movlw	0
  3411  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  3412  000E42  0E00               	movlw	0
  3413  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  3414  000E46  0E00               	movlw	0
  3415  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  3416  000E4A  0E00               	movlw	0
  3417  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  3418  000E4E  0E00               	movlw	0
  3419  000E50  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  3420  000E52  0E00               	movlw	0
  3421  000E54  6F7F               	movwf	detect_color@BB& (0+255),b
  3422  000E56  0E00               	movlw	0
  3423  000E58  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  3424  000E5A  0E00               	movlw	0
  3425  000E5C  6F7B               	movwf	detect_color@BC& (0+255),b
  3426                           
  3427                           ;color.c: 276:     unsigned char color = 0;
  3428  000E5E  0E00               	movlw	0
  3429  000E60  6F89               	movwf	detect_color@color& (0+255),b
  3430  000E62                     
  3431                           ; BSR set to: 0
  3432                           ;color.c: 278:     LED_R();
  3433  000E62  EC22  F02E         	call	_LED_R	;wreg free
  3434  000E66                     
  3435                           ;color.c: 279:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3436  000E66  0E09               	movlw	9
  3437  000E68  0100               	movlb	0	; () banked
  3438  000E6A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3439  000E6C  0E1E               	movlw	30
  3440  000E6E  6F75               	movwf	??_detect_color& (0+255),b
  3441  000E70  0EE4               	movlw	228
  3442  000E72                     u6007:
  3443  000E72  2EE8               	decfsz	wreg,f,c
  3444  000E74  D7FE               	bra	u6007
  3445  000E76  2F75               	decfsz	??_detect_color& (0+255),f,b
  3446  000E78  D7FC               	bra	u6007
  3447  000E7A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3448  000E7C  D7FA               	bra	u6007
  3449  000E7E  F000               	nop	
  3450  000E80                     
  3451                           ;color.c: 280:     read_color(m);
  3452  000E80  C071  F00C         	movff	detect_color@m,read_color@m
  3453  000E84  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3454  000E88  EC32  F02B         	call	_read_color	;wreg free
  3455  000E8C                     
  3456                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3457  000E8C  C073  FFD9         	movff	detect_color@w,fsr2l
  3458  000E90  C074  FFDA         	movff	detect_color@w+1,fsr2h
  3459  000E94  CFDE F075          	movff	postinc2,??_detect_color
  3460  000E98  CFDD F076          	movff	postdec2,??_detect_color+1
  3461  000E9C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3462  000EA0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3463  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3464  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3465  000EA8  0E00               	movlw	0
  3466  000EAA  EC12  F01F         	call	___xxtofl
  3467  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3468  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3469  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3470  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3471  000EBE  C071  FFD9         	movff	detect_color@m,fsr2l
  3472  000EC2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3473  000EC6  CFDE F077          	movff	postinc2,??_detect_color+2
  3474  000ECA  CFDD F078          	movff	postdec2,??_detect_color+3
  3475  000ECE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3476  000ED2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3477  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3478  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3479  000EDA  0E00               	movlw	0
  3480  000EDC  EC12  F01F         	call	___xxtofl
  3481  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3482  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3483  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3484  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3485  000EF0  EC2A  F015         	call	___fldiv	;wreg free
  3486  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3487  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3488  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3489  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3490  000F04  0E00               	movlw	0
  3491  000F06  6E2C               	movwf	___flmul@a^0,c
  3492  000F08  0E00               	movlw	0
  3493  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3494  000F0C  0EC8               	movlw	200
  3495  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3496  000F10  0E42               	movlw	66
  3497  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3498  000F14  EC6C  F00F         	call	___flmul	;wreg free
  3499  000F18  C028  F08E         	movff	?___flmul,_detect_color$2949
  3500  000F1C  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3501  000F20  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3502  000F24  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3503  000F28                     
  3504                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3505  000F28  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3506  000F2C  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3507  000F30  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3508  000F34  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3509  000F38  EC2F  F02D         	call	_lroundf	;wreg free
  3510  000F3C  C066  F08A         	movff	?_lroundf,detect_color@RR
  3511  000F40  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  3512  000F44  0100               	movlb	0	; () banked
  3513  000F46  EE20 F002          	lfsr	2,2
  3514  000F4A  5173               	movf	detect_color@w& (0+255),w,b
  3515  000F4C  26D9               	addwf	fsr2l,f,c
  3516  000F4E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3517  000F50  22DA               	addwfc	fsr2h,f,c
  3518  000F52  CFDE F075          	movff	postinc2,??_detect_color
  3519  000F56  CFDD F076          	movff	postdec2,??_detect_color+1
  3520  000F5A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3521  000F5E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3522  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3523  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3524  000F66  0E00               	movlw	0
  3525  000F68  EC12  F01F         	call	___xxtofl
  3526  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3527  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3528  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3529  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3530  000F7C  0100               	movlb	0	; () banked
  3531  000F7E  EE20 F002          	lfsr	2,2
  3532  000F82  5171               	movf	detect_color@m& (0+255),w,b
  3533  000F84  26D9               	addwf	fsr2l,f,c
  3534  000F86  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3535  000F88  22DA               	addwfc	fsr2h,f,c
  3536  000F8A  CFDE F077          	movff	postinc2,??_detect_color+2
  3537  000F8E  CFDD F078          	movff	postdec2,??_detect_color+3
  3538  000F92  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3539  000F96  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3540  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3541  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3542  000F9E  0E00               	movlw	0
  3543  000FA0  EC12  F01F         	call	___xxtofl
  3544  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3545  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3546  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3547  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3548  000FB4  EC2A  F015         	call	___fldiv	;wreg free
  3549  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3550  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3551  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3552  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3553  000FC8  0E00               	movlw	0
  3554  000FCA  6E2C               	movwf	___flmul@a^0,c
  3555  000FCC  0E00               	movlw	0
  3556  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3557  000FD0  0EC8               	movlw	200
  3558  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3559  000FD4  0E42               	movlw	66
  3560  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3561  000FD8  EC6C  F00F         	call	___flmul	;wreg free
  3562  000FDC  C028  F08E         	movff	?___flmul,_detect_color$2949
  3563  000FE0  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3564  000FE4  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3565  000FE8  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3566  000FEC  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3567  000FF0  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3568  000FF4  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3569  000FF8  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3570  000FFC  EC2F  F02D         	call	_lroundf	;wreg free
  3571  001000  0100               	movlb	0	; () banked
  3572  001002  EE20 F004          	lfsr	2,4
  3573  001006  5173               	movf	detect_color@w& (0+255),w,b
  3574  001008  26D9               	addwf	fsr2l,f,c
  3575  00100A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3576  00100C  22DA               	addwfc	fsr2h,f,c
  3577  00100E  CFDE F075          	movff	postinc2,??_detect_color
  3578  001012  CFDD F076          	movff	postdec2,??_detect_color+1
  3579  001016  C075  F001         	movff	??_detect_color,___xxtofl@val
  3580  00101A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3581  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3582  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  3583  001022  0E00               	movlw	0
  3584  001024  EC12  F01F         	call	___xxtofl
  3585  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  3586  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3587  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3588  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3589  001038  0100               	movlb	0	; () banked
  3590  00103A  EE20 F004          	lfsr	2,4
  3591  00103E  5171               	movf	detect_color@m& (0+255),w,b
  3592  001040  26D9               	addwf	fsr2l,f,c
  3593  001042  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3594  001044  22DA               	addwfc	fsr2h,f,c
  3595  001046  CFDE F077          	movff	postinc2,??_detect_color+2
  3596  00104A  CFDD F078          	movff	postdec2,??_detect_color+3
  3597  00104E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3598  001052  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3599  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  3600  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  3601  00105A  0E00               	movlw	0
  3602  00105C  EC12  F01F         	call	___xxtofl
  3603  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3604  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3605  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3606  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3607  001070  EC2A  F015         	call	___fldiv	;wreg free
  3608  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  3609  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3610  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3611  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3612  001084  0E00               	movlw	0
  3613  001086  6E2C               	movwf	___flmul@a^0,c
  3614  001088  0E00               	movlw	0
  3615  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  3616  00108C  0EC8               	movlw	200
  3617  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  3618  001090  0E42               	movlw	66
  3619  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  3620  001094  EC6C  F00F         	call	___flmul	;wreg free
  3621  001098  C028  F08E         	movff	?___flmul,_detect_color$2949
  3622  00109C  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3623  0010A0  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3624  0010A4  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3625  0010A8  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3626  0010AC  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3627  0010B0  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3628  0010B4  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3629  0010B8  EC2F  F02D         	call	_lroundf	;wreg free
  3630  0010BC  C066  F081         	movff	?_lroundf,detect_color@RB
  3631  0010C0  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  3632  0010C4                     
  3633                           ;color.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3634  0010C4  0E05               	movlw	5
  3635  0010C6  0100               	movlb	0	; () banked
  3636  0010C8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3637  0010CA  0E0F               	movlw	15
  3638  0010CC  6F75               	movwf	??_detect_color& (0+255),b
  3639  0010CE  0EF1               	movlw	241
  3640  0010D0                     u6017:
  3641  0010D0  2EE8               	decfsz	wreg,f,c
  3642  0010D2  D7FE               	bra	u6017
  3643  0010D4  2F75               	decfsz	??_detect_color& (0+255),f,b
  3644  0010D6  D7FC               	bra	u6017
  3645  0010D8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3646  0010DA  D7FA               	bra	u6017
  3647  0010DC                     
  3648                           ;color.c: 289:     LED_G();
  3649  0010DC  EC42  F02E         	call	_LED_G	;wreg free
  3650  0010E0                     
  3651                           ;color.c: 290:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3652  0010E0  0E09               	movlw	9
  3653  0010E2  0100               	movlb	0	; () banked
  3654  0010E4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3655  0010E6  0E1E               	movlw	30
  3656  0010E8  6F75               	movwf	??_detect_color& (0+255),b
  3657  0010EA  0EE4               	movlw	228
  3658  0010EC                     u6027:
  3659  0010EC  2EE8               	decfsz	wreg,f,c
  3660  0010EE  D7FE               	bra	u6027
  3661  0010F0  2F75               	decfsz	??_detect_color& (0+255),f,b
  3662  0010F2  D7FC               	bra	u6027
  3663  0010F4  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3664  0010F6  D7FA               	bra	u6027
  3665  0010F8  F000               	nop	
  3666  0010FA                     
  3667                           ;color.c: 291:     read_color(m);
  3668  0010FA  C071  F00C         	movff	detect_color@m,read_color@m
  3669  0010FE  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3670  001102  EC32  F02B         	call	_read_color	;wreg free
  3671  001106                     
  3672                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3673  001106  0100               	movlb	0	; () banked
  3674  001108  EE20 F006          	lfsr	2,6
  3675  00110C  5173               	movf	detect_color@w& (0+255),w,b
  3676  00110E  26D9               	addwf	fsr2l,f,c
  3677  001110  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3678  001112  22DA               	addwfc	fsr2h,f,c
  3679  001114  CFDE F075          	movff	postinc2,??_detect_color
  3680  001118  CFDD F076          	movff	postdec2,??_detect_color+1
  3681  00111C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3682  001120  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3683  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  3684  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  3685  001128  0E00               	movlw	0
  3686  00112A  EC12  F01F         	call	___xxtofl
  3687  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3688  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3689  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3690  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3691  00113E  C071  FFD9         	movff	detect_color@m,fsr2l
  3692  001142  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3693  001146  CFDE F077          	movff	postinc2,??_detect_color+2
  3694  00114A  CFDD F078          	movff	postdec2,??_detect_color+3
  3695  00114E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3696  001152  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3697  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  3698  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  3699  00115A  0E00               	movlw	0
  3700  00115C  EC12  F01F         	call	___xxtofl
  3701  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3702  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3703  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3704  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3705  001170  EC2A  F015         	call	___fldiv	;wreg free
  3706  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  3707  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3708  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3709  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3710  001184  0E00               	movlw	0
  3711  001186  6E2C               	movwf	___flmul@a^0,c
  3712  001188  0E00               	movlw	0
  3713  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  3714  00118C  0EC8               	movlw	200
  3715  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  3716  001190  0E42               	movlw	66
  3717  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  3718  001194  EC6C  F00F         	call	___flmul	;wreg free
  3719  001198  C028  F08E         	movff	?___flmul,_detect_color$2949
  3720  00119C  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3721  0011A0  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3722  0011A4  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3723  0011A8                     
  3724                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3725  0011A8  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3726  0011AC  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3727  0011B0  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3728  0011B4  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3729  0011B8  EC2F  F02D         	call	_lroundf	;wreg free
  3730  0011BC  C066  F07D         	movff	?_lroundf,detect_color@GR
  3731  0011C0  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  3732  0011C4  0100               	movlb	0	; () banked
  3733  0011C6  EE20 F008          	lfsr	2,8
  3734  0011CA  5173               	movf	detect_color@w& (0+255),w,b
  3735  0011CC  26D9               	addwf	fsr2l,f,c
  3736  0011CE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3737  0011D0  22DA               	addwfc	fsr2h,f,c
  3738  0011D2  CFDE F075          	movff	postinc2,??_detect_color
  3739  0011D6  CFDD F076          	movff	postdec2,??_detect_color+1
  3740  0011DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3741  0011DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3742  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3743  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3744  0011E6  0E00               	movlw	0
  3745  0011E8  EC12  F01F         	call	___xxtofl
  3746  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3747  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3748  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3749  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3750  0011FC  0100               	movlb	0	; () banked
  3751  0011FE  EE20 F002          	lfsr	2,2
  3752  001202  5171               	movf	detect_color@m& (0+255),w,b
  3753  001204  26D9               	addwf	fsr2l,f,c
  3754  001206  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3755  001208  22DA               	addwfc	fsr2h,f,c
  3756  00120A  CFDE F077          	movff	postinc2,??_detect_color+2
  3757  00120E  CFDD F078          	movff	postdec2,??_detect_color+3
  3758  001212  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3759  001216  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3760  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3761  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3762  00121E  0E00               	movlw	0
  3763  001220  EC12  F01F         	call	___xxtofl
  3764  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3765  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3766  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3767  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3768  001234  EC2A  F015         	call	___fldiv	;wreg free
  3769  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  3770  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3771  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3772  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3773  001248  0E00               	movlw	0
  3774  00124A  6E2C               	movwf	___flmul@a^0,c
  3775  00124C  0E00               	movlw	0
  3776  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  3777  001250  0EC8               	movlw	200
  3778  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  3779  001254  0E42               	movlw	66
  3780  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  3781  001258  EC6C  F00F         	call	___flmul	;wreg free
  3782  00125C  C028  F08E         	movff	?___flmul,_detect_color$2949
  3783  001260  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3784  001264  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3785  001268  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3786  00126C  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3787  001270  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3788  001274  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3789  001278  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3790  00127C  EC2F  F02D         	call	_lroundf	;wreg free
  3791  001280  C066  F087         	movff	?_lroundf,detect_color@GG
  3792  001284  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  3793  001288  0100               	movlb	0	; () banked
  3794  00128A  EE20 F00A          	lfsr	2,10
  3795  00128E  5173               	movf	detect_color@w& (0+255),w,b
  3796  001290  26D9               	addwf	fsr2l,f,c
  3797  001292  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3798  001294  22DA               	addwfc	fsr2h,f,c
  3799  001296  CFDE F075          	movff	postinc2,??_detect_color
  3800  00129A  CFDD F076          	movff	postdec2,??_detect_color+1
  3801  00129E  C075  F001         	movff	??_detect_color,___xxtofl@val
  3802  0012A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3803  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3804  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3805  0012AA  0E00               	movlw	0
  3806  0012AC  EC12  F01F         	call	___xxtofl
  3807  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3808  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3809  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3810  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3811  0012C0  0100               	movlb	0	; () banked
  3812  0012C2  EE20 F004          	lfsr	2,4
  3813  0012C6  5171               	movf	detect_color@m& (0+255),w,b
  3814  0012C8  26D9               	addwf	fsr2l,f,c
  3815  0012CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3816  0012CC  22DA               	addwfc	fsr2h,f,c
  3817  0012CE  CFDE F077          	movff	postinc2,??_detect_color+2
  3818  0012D2  CFDD F078          	movff	postdec2,??_detect_color+3
  3819  0012D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3820  0012DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3821  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3822  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3823  0012E2  0E00               	movlw	0
  3824  0012E4  EC12  F01F         	call	___xxtofl
  3825  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3826  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3827  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3828  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3829  0012F8  EC2A  F015         	call	___fldiv	;wreg free
  3830  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3831  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3832  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3833  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3834  00130C  0E00               	movlw	0
  3835  00130E  6E2C               	movwf	___flmul@a^0,c
  3836  001310  0E00               	movlw	0
  3837  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  3838  001314  0EC8               	movlw	200
  3839  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  3840  001318  0E42               	movlw	66
  3841  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  3842  00131C  EC6C  F00F         	call	___flmul	;wreg free
  3843  001320  C028  F08E         	movff	?___flmul,_detect_color$2949
  3844  001324  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3845  001328  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3846  00132C  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3847  001330  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3848  001334  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3849  001338  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3850  00133C  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3851  001340  EC2F  F02D         	call	_lroundf	;wreg free
  3852  001344  C066  F083         	movff	?_lroundf,detect_color@GB
  3853  001348  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  3854  00134C                     
  3855                           ;color.c: 299:     LED_B();
  3856  00134C  EC52  F02E         	call	_LED_B	;wreg free
  3857  001350                     
  3858                           ;color.c: 300:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3859  001350  0E09               	movlw	9
  3860  001352  0100               	movlb	0	; () banked
  3861  001354  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3862  001356  0E1E               	movlw	30
  3863  001358  6F75               	movwf	??_detect_color& (0+255),b
  3864  00135A  0EE4               	movlw	228
  3865  00135C                     u6037:
  3866  00135C  2EE8               	decfsz	wreg,f,c
  3867  00135E  D7FE               	bra	u6037
  3868  001360  2F75               	decfsz	??_detect_color& (0+255),f,b
  3869  001362  D7FC               	bra	u6037
  3870  001364  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3871  001366  D7FA               	bra	u6037
  3872  001368  F000               	nop	
  3873  00136A                     
  3874                           ;color.c: 301:     read_color(m);
  3875  00136A  C071  F00C         	movff	detect_color@m,read_color@m
  3876  00136E  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3877  001372  EC32  F02B         	call	_read_color	;wreg free
  3878  001376                     
  3879                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3880  001376  0100               	movlb	0	; () banked
  3881  001378  EE20 F00C          	lfsr	2,12
  3882  00137C  5173               	movf	detect_color@w& (0+255),w,b
  3883  00137E  26D9               	addwf	fsr2l,f,c
  3884  001380  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3885  001382  22DA               	addwfc	fsr2h,f,c
  3886  001384  CFDE F075          	movff	postinc2,??_detect_color
  3887  001388  CFDD F076          	movff	postdec2,??_detect_color+1
  3888  00138C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3889  001390  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3890  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  3891  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  3892  001398  0E00               	movlw	0
  3893  00139A  EC12  F01F         	call	___xxtofl
  3894  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3895  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3896  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3897  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3898  0013AE  C071  FFD9         	movff	detect_color@m,fsr2l
  3899  0013B2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3900  0013B6  CFDE F077          	movff	postinc2,??_detect_color+2
  3901  0013BA  CFDD F078          	movff	postdec2,??_detect_color+3
  3902  0013BE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3903  0013C2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3904  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3905  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3906  0013CA  0E00               	movlw	0
  3907  0013CC  EC12  F01F         	call	___xxtofl
  3908  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3909  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3910  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3911  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3912  0013E0  EC2A  F015         	call	___fldiv	;wreg free
  3913  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  3914  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3915  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3916  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3917  0013F4  0E00               	movlw	0
  3918  0013F6  6E2C               	movwf	___flmul@a^0,c
  3919  0013F8  0E00               	movlw	0
  3920  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  3921  0013FC  0EC8               	movlw	200
  3922  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  3923  001400  0E42               	movlw	66
  3924  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  3925  001404  EC6C  F00F         	call	___flmul	;wreg free
  3926  001408  C028  F08E         	movff	?___flmul,_detect_color$2949
  3927  00140C  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3928  001410  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3929  001414  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3930  001418                     
  3931                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3932  001418  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3933  00141C  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3934  001420  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3935  001424  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3936  001428  EC2F  F02D         	call	_lroundf	;wreg free
  3937  00142C  C066  F085         	movff	?_lroundf,detect_color@BR
  3938  001430  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  3939  001434  0100               	movlb	0	; () banked
  3940  001436  EE20 F00E          	lfsr	2,14
  3941  00143A  5173               	movf	detect_color@w& (0+255),w,b
  3942  00143C  26D9               	addwf	fsr2l,f,c
  3943  00143E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3944  001440  22DA               	addwfc	fsr2h,f,c
  3945  001442  CFDE F075          	movff	postinc2,??_detect_color
  3946  001446  CFDD F076          	movff	postdec2,??_detect_color+1
  3947  00144A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3948  00144E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3949  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  3950  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  3951  001456  0E00               	movlw	0
  3952  001458  EC12  F01F         	call	___xxtofl
  3953  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3954  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3955  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3956  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3957  00146C  0100               	movlb	0	; () banked
  3958  00146E  EE20 F002          	lfsr	2,2
  3959  001472  5171               	movf	detect_color@m& (0+255),w,b
  3960  001474  26D9               	addwf	fsr2l,f,c
  3961  001476  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3962  001478  22DA               	addwfc	fsr2h,f,c
  3963  00147A  CFDE F077          	movff	postinc2,??_detect_color+2
  3964  00147E  CFDD F078          	movff	postdec2,??_detect_color+3
  3965  001482  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3966  001486  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3967  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3968  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3969  00148E  0E00               	movlw	0
  3970  001490  EC12  F01F         	call	___xxtofl
  3971  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3972  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3973  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3974  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3975  0014A4  EC2A  F015         	call	___fldiv	;wreg free
  3976  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  3977  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3978  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3979  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3980  0014B8  0E00               	movlw	0
  3981  0014BA  6E2C               	movwf	___flmul@a^0,c
  3982  0014BC  0E00               	movlw	0
  3983  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  3984  0014C0  0EC8               	movlw	200
  3985  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  3986  0014C4  0E42               	movlw	66
  3987  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  3988  0014C8  EC6C  F00F         	call	___flmul	;wreg free
  3989  0014CC  C028  F08E         	movff	?___flmul,_detect_color$2949
  3990  0014D0  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  3991  0014D4  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  3992  0014D8  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  3993  0014DC  C08E  F066         	movff	_detect_color$2949,lroundf@x
  3994  0014E0  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  3995  0014E4  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  3996  0014E8  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  3997  0014EC  EC2F  F02D         	call	_lroundf	;wreg free
  3998  0014F0  C066  F08C         	movff	?_lroundf,detect_color@BG
  3999  0014F4  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  4000  0014F8  0100               	movlb	0	; () banked
  4001  0014FA  EE20 F010          	lfsr	2,16
  4002  0014FE  5173               	movf	detect_color@w& (0+255),w,b
  4003  001500  26D9               	addwf	fsr2l,f,c
  4004  001502  5174               	movf	(detect_color@w+1)& (0+255),w,b
  4005  001504  22DA               	addwfc	fsr2h,f,c
  4006  001506  CFDE F075          	movff	postinc2,??_detect_color
  4007  00150A  CFDD F076          	movff	postdec2,??_detect_color+1
  4008  00150E  C075  F001         	movff	??_detect_color,___xxtofl@val
  4009  001512  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4010  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  4011  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  4012  00151A  0E00               	movlw	0
  4013  00151C  EC12  F01F         	call	___xxtofl
  4014  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  4015  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4016  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4017  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4018  001530  0100               	movlb	0	; () banked
  4019  001532  EE20 F004          	lfsr	2,4
  4020  001536  5171               	movf	detect_color@m& (0+255),w,b
  4021  001538  26D9               	addwf	fsr2l,f,c
  4022  00153A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  4023  00153C  22DA               	addwfc	fsr2h,f,c
  4024  00153E  CFDE F077          	movff	postinc2,??_detect_color+2
  4025  001542  CFDD F078          	movff	postdec2,??_detect_color+3
  4026  001546  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  4027  00154A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4028  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4029  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  4030  001552  0E00               	movlw	0
  4031  001554  EC12  F01F         	call	___xxtofl
  4032  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4033  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4034  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4035  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4036  001568  EC2A  F015         	call	___fldiv	;wreg free
  4037  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  4038  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4039  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4040  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4041  00157C  0E00               	movlw	0
  4042  00157E  6E2C               	movwf	___flmul@a^0,c
  4043  001580  0E00               	movlw	0
  4044  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  4045  001584  0EC8               	movlw	200
  4046  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  4047  001588  0E42               	movlw	66
  4048  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  4049  00158C  EC6C  F00F         	call	___flmul	;wreg free
  4050  001590  C028  F08E         	movff	?___flmul,_detect_color$2949
  4051  001594  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  4052  001598  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  4053  00159C  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  4054  0015A0  C08E  F066         	movff	_detect_color$2949,lroundf@x
  4055  0015A4  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  4056  0015A8  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  4057  0015AC  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  4058  0015B0  EC2F  F02D         	call	_lroundf	;wreg free
  4059  0015B4  C066  F07F         	movff	?_lroundf,detect_color@BB
  4060  0015B8  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  4061  0015BC                     
  4062                           ;color.c: 303:     BC = lroundf((float)(m->C)/(w->BC)*100);
  4063  0015BC  0100               	movlb	0	; () banked
  4064  0015BE  EE20 F01A          	lfsr	2,26
  4065  0015C2  5173               	movf	detect_color@w& (0+255),w,b
  4066  0015C4  26D9               	addwf	fsr2l,f,c
  4067  0015C6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  4068  0015C8  22DA               	addwfc	fsr2h,f,c
  4069  0015CA  CFDE F075          	movff	postinc2,??_detect_color
  4070  0015CE  CFDD F076          	movff	postdec2,??_detect_color+1
  4071  0015D2  C075  F001         	movff	??_detect_color,___xxtofl@val
  4072  0015D6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4073  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  4074  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  4075  0015DE  0E00               	movlw	0
  4076  0015E0  EC12  F01F         	call	___xxtofl
  4077  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  4078  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4079  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4080  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4081  0015F4  0100               	movlb	0	; () banked
  4082  0015F6  EE20 F006          	lfsr	2,6
  4083  0015FA  5171               	movf	detect_color@m& (0+255),w,b
  4084  0015FC  26D9               	addwf	fsr2l,f,c
  4085  0015FE  5172               	movf	(detect_color@m+1)& (0+255),w,b
  4086  001600  22DA               	addwfc	fsr2h,f,c
  4087  001602  CFDE F077          	movff	postinc2,??_detect_color+2
  4088  001606  CFDD F078          	movff	postdec2,??_detect_color+3
  4089  00160A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  4090  00160E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4091  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  4092  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  4093  001616  0E00               	movlw	0
  4094  001618  EC12  F01F         	call	___xxtofl
  4095  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4096  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4097  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4098  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4099  00162C  EC2A  F015         	call	___fldiv	;wreg free
  4100  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  4101  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4102  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4103  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4104  001640  0E00               	movlw	0
  4105  001642  6E2C               	movwf	___flmul@a^0,c
  4106  001644  0E00               	movlw	0
  4107  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  4108  001648  0EC8               	movlw	200
  4109  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  4110  00164C  0E42               	movlw	66
  4111  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  4112  001650  EC6C  F00F         	call	___flmul	;wreg free
  4113  001654  C028  F08E         	movff	?___flmul,_detect_color$2949
  4114  001658  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  4115  00165C  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  4116  001660  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  4117  001664  C08E  F066         	movff	_detect_color$2949,lroundf@x
  4118  001668  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  4119  00166C  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  4120  001670  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  4121  001674  EC2F  F02D         	call	_lroundf	;wreg free
  4122  001678                     
  4123                           ;color.c: 309:     if (compare(0, RR, 45)){
  4124  001678  0E00               	movlw	0
  4125  00167A  0100               	movlb	0	; () banked
  4126  00167C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4127  00167E  0E00               	movlw	0
  4128  001680  6F6A               	movwf	compare@lower& (0+255),b
  4129  001682  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4130  001686  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4131  00168A  0E00               	movlw	0
  4132  00168C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4133  00168E  0E2D               	movlw	45
  4134  001690  6F6E               	movwf	compare@upper& (0+255),b
  4135  001692  EC12  F02D         	call	_compare	;wreg free
  4136  001696  0900               	iorlw	0
  4137  001698  B4D8               	btfsc	status,2,c
  4138  00169A  EF51  F00B         	goto	u5191
  4139  00169E  EF53  F00B         	goto	u5190
  4140  0016A2                     u5191:
  4141  0016A2  EFC4  F00B         	goto	l4846
  4142  0016A6                     u5190:
  4143  0016A6                     
  4144                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4145  0016A6  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  4146  0016AA  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4147  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4148  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4149  0016B2  0E00               	movlw	0
  4150  0016B4  EC12  F01F         	call	___xxtofl
  4151  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4152  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4153  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4154  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4155  0016C8  0100               	movlb	0	; () banked
  4156  0016CA  518C               	movf	detect_color@BG& (0+255),w,b
  4157  0016CC  2587               	addwf	detect_color@GG& (0+255),w,b
  4158  0016CE  6F75               	movwf	??_detect_color& (0+255),b
  4159  0016D0  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  4160  0016D2  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4161  0016D4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  4162  0016D6  C075  F001         	movff	??_detect_color,___xxtofl@val
  4163  0016DA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4164  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4165  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4166  0016E2  0E00               	movlw	0
  4167  0016E4  EC12  F01F         	call	___xxtofl
  4168  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4169  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4170  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4171  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4172  0016F8  EC2A  F015         	call	___fldiv	;wreg free
  4173  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  4174  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4175  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4176  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4177  00170C  0E00               	movlw	0
  4178  00170E  6E2C               	movwf	___flmul@a^0,c
  4179  001710  0E00               	movlw	0
  4180  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  4181  001714  0E48               	movlw	72
  4182  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  4183  001718  0E43               	movlw	67
  4184  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  4185  00171C  EC6C  F00F         	call	___flmul	;wreg free
  4186  001720  C028  F08E         	movff	?___flmul,_detect_color$2949
  4187  001724  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  4188  001728  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  4189  00172C  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  4190                           
  4191                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4192  001730  0E00               	movlw	0
  4193  001732  0100               	movlb	0	; () banked
  4194  001734  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4195  001736  0E00               	movlw	0
  4196  001738  6F6A               	movwf	compare@lower& (0+255),b
  4197  00173A  C08E  F066         	movff	_detect_color$2949,lroundf@x
  4198  00173E  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  4199  001742  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  4200  001746  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  4201  00174A  EC2F  F02D         	call	_lroundf	;wreg free
  4202  00174E  C066  F06C         	movff	?_lroundf,compare@value2compare
  4203  001752  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4204  001756  0E01               	movlw	1
  4205  001758  0100               	movlb	0	; () banked
  4206  00175A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4207  00175C  0ED3               	movlw	211
  4208  00175E  6F6E               	movwf	compare@upper& (0+255),b
  4209  001760  EC12  F02D         	call	_compare	;wreg free
  4210  001764  0900               	iorlw	0
  4211  001766  B4D8               	btfsc	status,2,c
  4212  001768  EFB8  F00B         	goto	u5201
  4213  00176C  EFBA  F00B         	goto	u5200
  4214  001770                     u5201:
  4215  001770  EFBF  F00B         	goto	l4844
  4216  001774                     u5200:
  4217  001774  0E03               	movlw	3
  4218  001776  0100               	movlb	0	; () banked
  4219  001778  6F89               	movwf	detect_color@color& (0+255),b
  4220  00177A  EF7F  F00C         	goto	l4872
  4221  00177E                     l4844:
  4222  00177E  0E02               	movlw	2
  4223  001780  0100               	movlb	0	; () banked
  4224  001782  6F89               	movwf	detect_color@color& (0+255),b
  4225  001784  EF7F  F00C         	goto	l4872
  4226  001788                     l4846:
  4227                           
  4228                           ;color.c: 314:         if (GG <= 30 && GB <= 30){
  4229  001788  0100               	movlb	0	; () banked
  4230  00178A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4231  00178C  E107               	bnz	u5211
  4232  00178E  0E1F               	movlw	31
  4233  001790  5D87               	subwf	detect_color@GG& (0+255),w,b
  4234  001792  B0D8               	btfsc	status,0,c
  4235  001794  EFCE  F00B         	goto	u5211
  4236  001798  EFD0  F00B         	goto	u5210
  4237  00179C                     u5211:
  4238  00179C  EF45  F00C         	goto	l4856
  4239  0017A0                     u5210:
  4240  0017A0                     
  4241                           ; BSR set to: 0
  4242  0017A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4243  0017A2  E107               	bnz	u5221
  4244  0017A4  0E1F               	movlw	31
  4245  0017A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4246  0017A8  B0D8               	btfsc	status,0,c
  4247  0017AA  EFD9  F00B         	goto	u5221
  4248  0017AE  EFDB  F00B         	goto	u5220
  4249  0017B2                     u5221:
  4250  0017B2  EF45  F00C         	goto	l4856
  4251  0017B6                     u5220:
  4252  0017B6                     
  4253                           ; BSR set to: 0
  4254                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4255  0017B6  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  4256  0017BA  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4257  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4258  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4259  0017C2  0E00               	movlw	0
  4260  0017C4  EC12  F01F         	call	___xxtofl
  4261  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4262  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4263  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4264  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4265  0017D8  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  4266  0017DC  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4267  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  4268  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  4269  0017E4  0E00               	movlw	0
  4270  0017E6  EC12  F01F         	call	___xxtofl
  4271  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4272  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4273  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4274  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4275  0017FA  EC2A  F015         	call	___fldiv	;wreg free
  4276  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  4277  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4278  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4279  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4280  00180E  0E00               	movlw	0
  4281  001810  6E2C               	movwf	___flmul@a^0,c
  4282  001812  0E00               	movlw	0
  4283  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  4284  001816  0EFA               	movlw	250
  4285  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  4286  00181A  0E43               	movlw	67
  4287  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  4288  00181E  EC6C  F00F         	call	___flmul	;wreg free
  4289  001822  C028  F08E         	movff	?___flmul,_detect_color$2949
  4290  001826  C029  F08F         	movff	?___flmul+1,_detect_color$2949+1
  4291  00182A  C02A  F090         	movff	?___flmul+2,_detect_color$2949+2
  4292  00182E  C02B  F091         	movff	?___flmul+3,_detect_color$2949+3
  4293                           
  4294                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4295  001832  0E00               	movlw	0
  4296  001834  0100               	movlb	0	; () banked
  4297  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4298  001838  0E00               	movlw	0
  4299  00183A  6F6A               	movwf	compare@lower& (0+255),b
  4300  00183C  C08E  F066         	movff	_detect_color$2949,lroundf@x
  4301  001840  C08F  F067         	movff	_detect_color$2949+1,lroundf@x+1
  4302  001844  C090  F068         	movff	_detect_color$2949+2,lroundf@x+2
  4303  001848  C091  F069         	movff	_detect_color$2949+3,lroundf@x+3
  4304  00184C  EC2F  F02D         	call	_lroundf	;wreg free
  4305  001850  C066  F06C         	movff	?_lroundf,compare@value2compare
  4306  001854  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4307  001858  0E00               	movlw	0
  4308  00185A  0100               	movlb	0	; () banked
  4309  00185C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4310  00185E  0E96               	movlw	150
  4311  001860  6F6E               	movwf	compare@upper& (0+255),b
  4312  001862  EC12  F02D         	call	_compare	;wreg free
  4313  001866  0900               	iorlw	0
  4314  001868  B4D8               	btfsc	status,2,c
  4315  00186A  EF39  F00C         	goto	u5231
  4316  00186E  EF3B  F00C         	goto	u5230
  4317  001872                     u5231:
  4318  001872  EF40  F00C         	goto	l4854
  4319  001876                     u5230:
  4320  001876  0E01               	movlw	1
  4321  001878  0100               	movlb	0	; () banked
  4322  00187A  6F89               	movwf	detect_color@color& (0+255),b
  4323  00187C  EF7F  F00C         	goto	l4872
  4324  001880                     l4854:
  4325  001880  0E06               	movlw	6
  4326  001882  0100               	movlb	0	; () banked
  4327  001884  6F89               	movwf	detect_color@color& (0+255),b
  4328  001886  EF7F  F00C         	goto	l4872
  4329  00188A                     l4856:
  4330                           
  4331                           ; BSR set to: 0
  4332  00188A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4333  00188C  E109               	bnz	u5240
  4334  00188E  0E1F               	movlw	31
  4335  001890  5D87               	subwf	detect_color@GG& (0+255),w,b
  4336  001892  A0D8               	btfss	status,0,c
  4337  001894  EF4E  F00C         	goto	u5241
  4338  001898  EF50  F00C         	goto	u5240
  4339  00189C                     u5241:
  4340  00189C  EF7D  F00C         	goto	l4870
  4341  0018A0                     u5240:
  4342  0018A0                     
  4343                           ; BSR set to: 0
  4344  0018A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4345  0018A2  E109               	bnz	u5250
  4346  0018A4  0E1F               	movlw	31
  4347  0018A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4348  0018A8  A0D8               	btfss	status,0,c
  4349  0018AA  EF59  F00C         	goto	u5251
  4350  0018AE  EF5B  F00C         	goto	u5250
  4351  0018B2                     u5251:
  4352  0018B2  EF7D  F00C         	goto	l4870
  4353  0018B6                     u5250:
  4354  0018B6                     
  4355                           ; BSR set to: 0
  4356                           ;color.c: 321:             if (BG >= BR) {color = 7;}
  4357  0018B6  5185               	movf	detect_color@BR& (0+255),w,b
  4358  0018B8  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4359  0018BA  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  4360  0018BC  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  4361  0018BE  A0D8               	btfss	status,0,c
  4362  0018C0  EF64  F00C         	goto	u5261
  4363  0018C4  EF66  F00C         	goto	u5260
  4364  0018C8                     u5261:
  4365  0018C8  EF6A  F00C         	goto	l4864
  4366  0018CC                     u5260:
  4367  0018CC                     
  4368                           ; BSR set to: 0
  4369  0018CC  0E07               	movlw	7
  4370  0018CE  6F89               	movwf	detect_color@color& (0+255),b
  4371  0018D0  EF7F  F00C         	goto	l4872
  4372  0018D4                     l4864:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;color.c: 323:                 if (BG < 48){color = 4;}
  4376  0018D4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  4377  0018D6  E107               	bnz	u5271
  4378  0018D8  0E30               	movlw	48
  4379  0018DA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4380  0018DC  B0D8               	btfsc	status,0,c
  4381  0018DE  EF73  F00C         	goto	u5271
  4382  0018E2  EF75  F00C         	goto	u5270
  4383  0018E6                     u5271:
  4384  0018E6  EF79  F00C         	goto	l4868
  4385  0018EA                     u5270:
  4386  0018EA                     
  4387                           ; BSR set to: 0
  4388  0018EA  0E04               	movlw	4
  4389  0018EC  6F89               	movwf	detect_color@color& (0+255),b
  4390  0018EE  EF7F  F00C         	goto	l4872
  4391  0018F2                     l4868:
  4392                           
  4393                           ; BSR set to: 0
  4394  0018F2  0E05               	movlw	5
  4395  0018F4  6F89               	movwf	detect_color@color& (0+255),b
  4396  0018F6  EF7F  F00C         	goto	l4872
  4397  0018FA                     l4870:
  4398                           
  4399                           ; BSR set to: 0
  4400  0018FA  0E00               	movlw	0
  4401  0018FC  6F89               	movwf	detect_color@color& (0+255),b
  4402  0018FE                     l4872:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;color.c: 330:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4406  0018FE  0E00               	movlw	0
  4407  001900  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4408  001902  0E5A               	movlw	90
  4409  001904  6F6A               	movwf	compare@lower& (0+255),b
  4410  001906  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4411  00190A  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4412  00190E  90D8               	bcf	status,0,c
  4413  001910  358A               	rlcf	detect_color@RR& (0+255),w,b
  4414  001912  6F6E               	movwf	compare@upper& (0+255),b
  4415  001914  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4416  001916  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4417  001918  EC12  F02D         	call	_compare	;wreg free
  4418  00191C  0900               	iorlw	0
  4419  00191E  B4D8               	btfsc	status,2,c
  4420  001920  EF94  F00C         	goto	u5281
  4421  001924  EF96  F00C         	goto	u5280
  4422  001928                     u5281:
  4423  001928  EFC9  F00C         	goto	l4880
  4424  00192C                     u5280:
  4425  00192C  0E00               	movlw	0
  4426  00192E  0100               	movlb	0	; () banked
  4427  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4428  001932  0E5A               	movlw	90
  4429  001934  6F6A               	movwf	compare@lower& (0+255),b
  4430  001936  C081  F06C         	movff	detect_color@RB,compare@value2compare
  4431  00193A  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4432  00193E  90D8               	bcf	status,0,c
  4433  001940  3581               	rlcf	detect_color@RB& (0+255),w,b
  4434  001942  6F6E               	movwf	compare@upper& (0+255),b
  4435  001944  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4436  001946  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4437  001948  EC12  F02D         	call	_compare	;wreg free
  4438  00194C  0900               	iorlw	0
  4439  00194E  B4D8               	btfsc	status,2,c
  4440  001950  EFAC  F00C         	goto	u5291
  4441  001954  EFAE  F00C         	goto	u5290
  4442  001958                     u5291:
  4443  001958  EFC9  F00C         	goto	l4880
  4444  00195C                     u5290:
  4445  00195C  0E00               	movlw	0
  4446  00195E  0100               	movlb	0	; () banked
  4447  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4448  001962  0E5A               	movlw	90
  4449  001964  6F6A               	movwf	compare@lower& (0+255),b
  4450  001966  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  4451  00196A  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4452  00196E  90D8               	bcf	status,0,c
  4453  001970  358C               	rlcf	detect_color@BG& (0+255),w,b
  4454  001972  6F6E               	movwf	compare@upper& (0+255),b
  4455  001974  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4456  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4457  001978  EC12  F02D         	call	_compare	;wreg free
  4458  00197C  0900               	iorlw	0
  4459  00197E  B4D8               	btfsc	status,2,c
  4460  001980  EFC4  F00C         	goto	u5301
  4461  001984  EFC6  F00C         	goto	u5300
  4462  001988                     u5301:
  4463  001988  EFC9  F00C         	goto	l4880
  4464  00198C                     u5300:
  4465  00198C  0E08               	movlw	8
  4466  00198E  0100               	movlb	0	; () banked
  4467  001990  6F89               	movwf	detect_color@color& (0+255),b
  4468  001992                     l4880:
  4469                           
  4470                           ;color.c: 331:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  4471  001992  0E00               	movlw	0
  4472  001994  0100               	movlb	0	; () banked
  4473  001996  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4474  001998  0E00               	movlw	0
  4475  00199A  6F6A               	movwf	compare@lower& (0+255),b
  4476  00199C  C085  F06C         	movff	detect_color@BR,compare@value2compare
  4477  0019A0  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4478  0019A4  0E00               	movlw	0
  4479  0019A6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4480  0019A8  0E19               	movlw	25
  4481  0019AA  6F6E               	movwf	compare@upper& (0+255),b
  4482  0019AC  EC12  F02D         	call	_compare	;wreg free
  4483  0019B0  0900               	iorlw	0
  4484  0019B2  B4D8               	btfsc	status,2,c
  4485  0019B4  EFDE  F00C         	goto	u5311
  4486  0019B8  EFE0  F00C         	goto	u5310
  4487  0019BC                     u5311:
  4488  0019BC  EFFA  F00C         	goto	l4886
  4489  0019C0                     u5310:
  4490  0019C0  0E00               	movlw	0
  4491  0019C2  0100               	movlb	0	; () banked
  4492  0019C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4493  0019C6  0E00               	movlw	0
  4494  0019C8  6F6A               	movwf	compare@lower& (0+255),b
  4495  0019CA  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4496  0019CE  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4497  0019D2  0E00               	movlw	0
  4498  0019D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4499  0019D6  0E1E               	movlw	30
  4500  0019D8  6F6E               	movwf	compare@upper& (0+255),b
  4501  0019DA  EC12  F02D         	call	_compare	;wreg free
  4502  0019DE  0900               	iorlw	0
  4503  0019E0  B4D8               	btfsc	status,2,c
  4504  0019E2  EFF5  F00C         	goto	u5321
  4505  0019E6  EFF7  F00C         	goto	u5320
  4506  0019EA                     u5321:
  4507  0019EA  EFFA  F00C         	goto	l4886
  4508  0019EE                     u5320:
  4509  0019EE  0E00               	movlw	0
  4510  0019F0  0100               	movlb	0	; () banked
  4511  0019F2  6F89               	movwf	detect_color@color& (0+255),b
  4512  0019F4                     l4886:
  4513                           
  4514                           ;color.c: 333:     if (color == 8) {toggle_light(2,1);}
  4515  0019F4  0E08               	movlw	8
  4516  0019F6  0100               	movlb	0	; () banked
  4517  0019F8  1989               	xorwf	detect_color@color& (0+255),w,b
  4518  0019FA  A4D8               	btfss	status,2,c
  4519  0019FC  EF02  F00D         	goto	u5331
  4520  001A00  EF04  F00D         	goto	u5330
  4521  001A04                     u5331:
  4522  001A04  EF09  F00D         	goto	l4890
  4523  001A08                     u5330:
  4524  001A08                     
  4525                           ; BSR set to: 0
  4526  001A08  0E01               	movlw	1
  4527  001A0A  6E01               	movwf	toggle_light@toggletime^0,c
  4528  001A0C  0E02               	movlw	2
  4529  001A0E  ECE1  F019         	call	_toggle_light
  4530  001A12                     l4890:
  4531                           
  4532                           ;color.c: 334:     return color;
  4533  001A12  0100               	movlb	0	; () banked
  4534  001A14  5189               	movf	detect_color@color& (0+255),w,b
  4535  001A16                     
  4536                           ; BSR set to: 0
  4537  001A16  0012               	return		;funcret
  4538  001A18                     __end_of_detect_color:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _compare *****************
  4542 ;; Defined at:
  4543 ;;		line 337 in file "color.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  lower           2   10[BANK0 ] unsigned int 
  4546 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4547 ;;  upper           2   14[BANK0 ] unsigned int 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  result          1   16[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      unsigned char 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;Total ram usage:        7 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 1
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_detect_color
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text8
  4574  005A24                     __ptext8:
  4575                           	callstack 0
  4576  005A24                     _compare:
  4577                           	callstack 27
  4578  005A24                     
  4579                           ;color.c: 337: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 338: {;color.c: 339:     unsigned char result = 0;
  4580  005A24  0E00               	movlw	0
  4581  005A26  0100               	movlb	0	; () banked
  4582  005A28  6F70               	movwf	compare@result& (0+255),b
  4583  005A2A                     
  4584                           ; BSR set to: 0
  4585                           ;color.c: 340:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4586  005A2A  516C               	movf	compare@value2compare& (0+255),w,b
  4587  005A2C  5D6A               	subwf	compare@lower& (0+255),w,b
  4588  005A2E  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4589  005A30  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4590  005A32  B0D8               	btfsc	status,0,c
  4591  005A34  EF1E  F02D         	goto	u4771
  4592  005A38  EF20  F02D         	goto	u4770
  4593  005A3C                     u4771:
  4594  005A3C  EF2D  F02D         	goto	l136
  4595  005A40                     u4770:
  4596  005A40                     
  4597                           ; BSR set to: 0
  4598  005A40  516C               	movf	compare@value2compare& (0+255),w,b
  4599  005A42  5D6E               	subwf	compare@upper& (0+255),w,b
  4600  005A44  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4601  005A46  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4602  005A48  A0D8               	btfss	status,0,c
  4603  005A4A  EF29  F02D         	goto	u4781
  4604  005A4E  EF2B  F02D         	goto	u4780
  4605  005A52                     u4781:
  4606  005A52  EF2D  F02D         	goto	l136
  4607  005A56                     u4780:
  4608  005A56                     
  4609                           ; BSR set to: 0
  4610  005A56  0E01               	movlw	1
  4611  005A58  6F70               	movwf	compare@result& (0+255),b
  4612  005A5A                     l136:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;color.c: 341:     return result;
  4616  005A5A  5170               	movf	compare@result& (0+255),w,b
  4617  005A5C                     
  4618                           ; BSR set to: 0
  4619  005A5C  0012               	return		;funcret
  4620  005A5E                     __end_of_compare:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _color_data_collection *****************
  4624 ;; Defined at:
  4625 ;;		line 32 in file "test_and_calibration.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4628 ;;		 -> main@rgb(8), 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  x               2  132[BANK0 ] int 
  4631 ;;  k               2  130[BANK0 ] int 
  4632 ;;  j               2  128[BANK0 ] int 
  4633 ;;  i               2  126[BANK0 ] int 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;Total ram usage:       12 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 10
  4650 ;; This function calls:
  4651 ;;		_LED_B
  4652 ;;		_LED_C
  4653 ;;		_LED_G
  4654 ;;		_LED_R
  4655 ;;		_color_display
  4656 ;;		_color_predict
  4657 ;;		_read_color
  4658 ;; This function is called by:
  4659 ;;		_test_function
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text9
  4664  00432C                     __ptext9:
  4665                           	callstack 0
  4666  00432C                     _color_data_collection:
  4667                           	callstack 19
  4668  00432C                     
  4669                           ;test_and_calibration.c: 32: void color_data_collection(struct color_rgb *m);test_and_ca
      +                          libration.c: 33: {;test_and_calibration.c: 34:     int i = 0; int j = 0; int k = 0; int 
      +                          x = 0;
  4670  00432C  0E00               	movlw	0
  4671  00432E  0100               	movlb	0	; () banked
  4672  004330  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4673  004332  0E00               	movlw	0
  4674  004334  6FDE               	movwf	color_data_collection@i& (0+255),b
  4675  004336  0E00               	movlw	0
  4676  004338  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4677  00433A  0E00               	movlw	0
  4678  00433C  6FE2               	movwf	color_data_collection@k& (0+255),b
  4679  00433E  0E00               	movlw	0
  4680  004340  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4681  004342  0E00               	movlw	0
  4682  004344  6FE4               	movwf	color_data_collection@x& (0+255),b
  4683                           
  4684                           ;test_and_calibration.c: 35:     for (i = 0; i < 1; ++i){
  4685  004346  0E00               	movlw	0
  4686  004348  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4687  00434A  0E00               	movlw	0
  4688  00434C  6FDE               	movwf	color_data_collection@i& (0+255),b
  4689  00434E                     l5046:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;test_and_calibration.c: 36:         LED_C();
  4693  00434E  EC62  F02E         	call	_LED_C	;wreg free
  4694  004352                     
  4695                           ;test_and_calibration.c: 37:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4696  004352  0E09               	movlw	9
  4697  004354  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4698  004356  0E1E               	movlw	30
  4699  004358  6E5C               	movwf	??_color_data_collection^0,c
  4700  00435A  0EE4               	movlw	228
  4701  00435C                     u6047:
  4702  00435C  2EE8               	decfsz	wreg,f,c
  4703  00435E  D7FE               	bra	u6047
  4704  004360  2E5C               	decfsz	??_color_data_collection^0,f,c
  4705  004362  D7FC               	bra	u6047
  4706  004364  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4707  004366  D7FA               	bra	u6047
  4708  004368  D000               	nop2	
  4709  00436A                     
  4710                           ;test_and_calibration.c: 38:         read_color(m);
  4711  00436A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4712  00436E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4713  004372  EC32  F02B         	call	_read_color	;wreg free
  4714  004376                     
  4715                           ;test_and_calibration.c: 39:         color_display(m);
  4716  004376  C05A  F058         	movff	color_data_collection@m,color_display@m
  4717  00437A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4718  00437E  ECC9  F02A         	call	_color_display	;wreg free
  4719  004382                     
  4720                           ;test_and_calibration.c: 40:     }
  4721  004382  0100               	movlb	0	; () banked
  4722  004384  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4723  004386  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4724  004388                     
  4725                           ; BSR set to: 0
  4726  004388  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4727  00438A  EFCF  F021         	goto	u5521
  4728  00438E  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4729  004390  E108               	bnz	u5520
  4730  004392  05DE               	decf	color_data_collection@i& (0+255),w,b
  4731  004394  A0D8               	btfss	status,0,c
  4732  004396  EFCF  F021         	goto	u5521
  4733  00439A  EFD1  F021         	goto	u5520
  4734  00439E                     u5521:
  4735  00439E  EFA7  F021         	goto	l5046
  4736  0043A2                     u5520:
  4737  0043A2                     
  4738                           ; BSR set to: 0
  4739                           ;test_and_calibration.c: 42:     for (j = 0; j < 1; ++j){
  4740  0043A2  0E00               	movlw	0
  4741  0043A4  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  4742  0043A6  0E00               	movlw	0
  4743  0043A8  6FE0               	movwf	color_data_collection@j& (0+255),b
  4744  0043AA                     l5064:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;test_and_calibration.c: 43:         LED_R();
  4748  0043AA  EC22  F02E         	call	_LED_R	;wreg free
  4749  0043AE                     
  4750                           ;test_and_calibration.c: 44:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4751  0043AE  0E09               	movlw	9
  4752  0043B0  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4753  0043B2  0E1E               	movlw	30
  4754  0043B4  6E5C               	movwf	??_color_data_collection^0,c
  4755  0043B6  0EE4               	movlw	228
  4756  0043B8                     u6057:
  4757  0043B8  2EE8               	decfsz	wreg,f,c
  4758  0043BA  D7FE               	bra	u6057
  4759  0043BC  2E5C               	decfsz	??_color_data_collection^0,f,c
  4760  0043BE  D7FC               	bra	u6057
  4761  0043C0  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4762  0043C2  D7FA               	bra	u6057
  4763  0043C4  D000               	nop2	
  4764  0043C6                     
  4765                           ;test_and_calibration.c: 45:         read_color(m);
  4766  0043C6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4767  0043CA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4768  0043CE  EC32  F02B         	call	_read_color	;wreg free
  4769  0043D2                     
  4770                           ;test_and_calibration.c: 46:         color_display(m);
  4771  0043D2  C05A  F058         	movff	color_data_collection@m,color_display@m
  4772  0043D6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4773  0043DA  ECC9  F02A         	call	_color_display	;wreg free
  4774  0043DE                     
  4775                           ;test_and_calibration.c: 47:     }
  4776  0043DE  0100               	movlb	0	; () banked
  4777  0043E0  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  4778  0043E2  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  4779  0043E4                     
  4780                           ; BSR set to: 0
  4781  0043E4  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  4782  0043E6  EFFD  F021         	goto	u5531
  4783  0043EA  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  4784  0043EC  E108               	bnz	u5530
  4785  0043EE  05E0               	decf	color_data_collection@j& (0+255),w,b
  4786  0043F0  A0D8               	btfss	status,0,c
  4787  0043F2  EFFD  F021         	goto	u5531
  4788  0043F6  EFFF  F021         	goto	u5530
  4789  0043FA                     u5531:
  4790  0043FA  EFD5  F021         	goto	l5064
  4791  0043FE                     u5530:
  4792  0043FE                     
  4793                           ; BSR set to: 0
  4794                           ;test_and_calibration.c: 49:     for (k = 0; k < 1; ++k){
  4795  0043FE  0E00               	movlw	0
  4796  004400  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4797  004402  0E00               	movlw	0
  4798  004404  6FE2               	movwf	color_data_collection@k& (0+255),b
  4799  004406                     l5082:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;test_and_calibration.c: 50:         LED_G();
  4803  004406  EC42  F02E         	call	_LED_G	;wreg free
  4804  00440A                     
  4805                           ;test_and_calibration.c: 51:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4806  00440A  0E09               	movlw	9
  4807  00440C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4808  00440E  0E1E               	movlw	30
  4809  004410  6E5C               	movwf	??_color_data_collection^0,c
  4810  004412  0EE4               	movlw	228
  4811  004414                     u6067:
  4812  004414  2EE8               	decfsz	wreg,f,c
  4813  004416  D7FE               	bra	u6067
  4814  004418  2E5C               	decfsz	??_color_data_collection^0,f,c
  4815  00441A  D7FC               	bra	u6067
  4816  00441C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4817  00441E  D7FA               	bra	u6067
  4818  004420  D000               	nop2	
  4819  004422                     
  4820                           ;test_and_calibration.c: 52:         read_color(m);
  4821  004422  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4822  004426  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4823  00442A  EC32  F02B         	call	_read_color	;wreg free
  4824  00442E                     
  4825                           ;test_and_calibration.c: 53:         color_display(m);
  4826  00442E  C05A  F058         	movff	color_data_collection@m,color_display@m
  4827  004432  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4828  004436  ECC9  F02A         	call	_color_display	;wreg free
  4829  00443A                     
  4830                           ;test_and_calibration.c: 54:     }
  4831  00443A  0100               	movlb	0	; () banked
  4832  00443C  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  4833  00443E  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  4834  004440                     
  4835                           ; BSR set to: 0
  4836  004440  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  4837  004442  EF2B  F022         	goto	u5541
  4838  004446  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  4839  004448  E108               	bnz	u5540
  4840  00444A  05E2               	decf	color_data_collection@k& (0+255),w,b
  4841  00444C  A0D8               	btfss	status,0,c
  4842  00444E  EF2B  F022         	goto	u5541
  4843  004452  EF2D  F022         	goto	u5540
  4844  004456                     u5541:
  4845  004456  EF03  F022         	goto	l5082
  4846  00445A                     u5540:
  4847  00445A                     
  4848                           ; BSR set to: 0
  4849                           ;test_and_calibration.c: 56:     for (x = 0; x < 1; ++x){
  4850  00445A  0E00               	movlw	0
  4851  00445C  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4852  00445E  0E00               	movlw	0
  4853  004460  6FE4               	movwf	color_data_collection@x& (0+255),b
  4854  004462                     l5100:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;test_and_calibration.c: 57:         LED_B();
  4858  004462  EC52  F02E         	call	_LED_B	;wreg free
  4859  004466                     
  4860                           ;test_and_calibration.c: 58:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4861  004466  0E09               	movlw	9
  4862  004468  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4863  00446A  0E1E               	movlw	30
  4864  00446C  6E5C               	movwf	??_color_data_collection^0,c
  4865  00446E  0EE4               	movlw	228
  4866  004470                     u6077:
  4867  004470  2EE8               	decfsz	wreg,f,c
  4868  004472  D7FE               	bra	u6077
  4869  004474  2E5C               	decfsz	??_color_data_collection^0,f,c
  4870  004476  D7FC               	bra	u6077
  4871  004478  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4872  00447A  D7FA               	bra	u6077
  4873  00447C  D000               	nop2	
  4874  00447E                     
  4875                           ;test_and_calibration.c: 59:         read_color(m);
  4876  00447E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4877  004482  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4878  004486  EC32  F02B         	call	_read_color	;wreg free
  4879  00448A                     
  4880                           ;test_and_calibration.c: 60:         color_display(m);
  4881  00448A  C05A  F058         	movff	color_data_collection@m,color_display@m
  4882  00448E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4883  004492  ECC9  F02A         	call	_color_display	;wreg free
  4884  004496                     
  4885                           ;test_and_calibration.c: 61:     }
  4886  004496  0100               	movlb	0	; () banked
  4887  004498  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  4888  00449A  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  4889  00449C                     
  4890                           ; BSR set to: 0
  4891  00449C  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  4892  00449E  EF59  F022         	goto	u5551
  4893  0044A2  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  4894  0044A4  E108               	bnz	u5550
  4895  0044A6  05E4               	decf	color_data_collection@x& (0+255),w,b
  4896  0044A8  A0D8               	btfss	status,0,c
  4897  0044AA  EF59  F022         	goto	u5551
  4898  0044AE  EF5B  F022         	goto	u5550
  4899  0044B2                     u5551:
  4900  0044B2  EF31  F022         	goto	l5100
  4901  0044B6                     u5550:
  4902  0044B6                     
  4903                           ; BSR set to: 0
  4904                           ;test_and_calibration.c: 62:     color_predict(1);
  4905  0044B6  0E01               	movlw	1
  4906  0044B8  ECCF  F02D         	call	_color_predict
  4907  0044BC                     
  4908                           ;test_and_calibration.c: 63:     LED_C();
  4909  0044BC  EC62  F02E         	call	_LED_C	;wreg free
  4910  0044C0  0012               	return		;funcret
  4911  0044C2                     __end_of_color_data_collection:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _read_color *****************
  4915 ;; Defined at:
  4916 ;;		line 167 in file "color.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4919 ;;		 -> main@rgb(8), 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;Total ram usage:        2 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 4
  4938 ;; This function calls:
  4939 ;;		_color_read_Blue
  4940 ;;		_color_read_Clear
  4941 ;;		_color_read_Green
  4942 ;;		_color_read_Red
  4943 ;; This function is called by:
  4944 ;;		_detect_color
  4945 ;;		_color_data_collection
  4946 ;;		_test_function
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text10
  4951  005664                     __ptext10:
  4952                           	callstack 0
  4953  005664                     _read_color:
  4954                           	callstack 24
  4955  005664                     
  4956                           ;color.c: 167: void read_color (struct color_rgb *m);color.c: 168: {;color.c: 169:     m
      +                          ->R = color_read_Red();
  4957  005664  EC8A  F02B         	call	_color_read_Red	;wreg free
  4958  005668  C00C  FFD9         	movff	read_color@m,fsr2l
  4959  00566C  C00D  FFDA         	movff	read_color@m+1,fsr2h
  4960  005670  C005  FFDE         	movff	?_color_read_Red,postinc2
  4961  005674  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4962                           
  4963                           ;color.c: 170:     m->B = color_read_Blue();
  4964  005678  ECDA  F02B         	call	_color_read_Blue	;wreg free
  4965  00567C  EE20 F004          	lfsr	2,4
  4966  005680  500C               	movf	read_color@m^0,w,c
  4967  005682  26D9               	addwf	fsr2l,f,c
  4968  005684  500D               	movf	(read_color@m+1)^0,w,c
  4969  005686  22DA               	addwfc	fsr2h,f,c
  4970  005688  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4971  00568C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4972                           
  4973                           ;color.c: 171:     m->G = color_read_Green();
  4974  005690  ECB2  F02B         	call	_color_read_Green	;wreg free
  4975  005694  EE20 F002          	lfsr	2,2
  4976  005698  500C               	movf	read_color@m^0,w,c
  4977  00569A  26D9               	addwf	fsr2l,f,c
  4978  00569C  500D               	movf	(read_color@m+1)^0,w,c
  4979  00569E  22DA               	addwfc	fsr2h,f,c
  4980  0056A0  C005  FFDE         	movff	?_color_read_Green,postinc2
  4981  0056A4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4982                           
  4983                           ;color.c: 172:     m->C = color_read_Clear();
  4984  0056A8  EC02  F02C         	call	_color_read_Clear	;wreg free
  4985  0056AC  EE20 F006          	lfsr	2,6
  4986  0056B0  500C               	movf	read_color@m^0,w,c
  4987  0056B2  26D9               	addwf	fsr2l,f,c
  4988  0056B4  500D               	movf	(read_color@m+1)^0,w,c
  4989  0056B6  22DA               	addwfc	fsr2h,f,c
  4990  0056B8  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4991  0056BC  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4992  0056C0  0012               	return		;funcret
  4993  0056C2                     __end_of_read_color:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _color_predict *****************
  4997 ;; Defined at:
  4998 ;;		line 230 in file "color.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  color           1    wreg     unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  color           1  125[BANK0 ] unsigned char 
  5003 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;Total ram usage:      101 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 9
  5020 ;; This function calls:
  5021 ;;		_sendStringSerial4
  5022 ;;		_sprintf
  5023 ;; This function is called by:
  5024 ;;		_main
  5025 ;;		_color_data_collection
  5026 ;;		_test_function
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text11
  5031  005B9E                     __ptext11:
  5032                           	callstack 0
  5033  005B9E                     _color_predict:
  5034                           	callstack 20
  5035                           
  5036                           ;incstack = 0
  5037                           ;color_predict@color stored from wreg
  5038  005B9E  0100               	movlb	0	; () banked
  5039  005BA0  6FDD               	movwf	color_predict@color& (0+255),b
  5040  005BA2                     
  5041                           ;color.c: 230: void color_predict(unsigned char color);color.c: 231: {;color.c: 232:    
      +                           char buf[100];;color.c: 233:     sprintf(buf,"\t%d\r\n", color);
  5042  005BA2  0E79               	movlw	low color_predict@buf
  5043  005BA4  0100               	movlb	0	; () banked
  5044  005BA6  6F60               	movwf	sprintf@s& (0+255),b
  5045  005BA8  0E00               	movlw	high color_predict@buf
  5046  005BAA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5047  005BAC  0E0D               	movlw	low (STR_1+8)
  5048  005BAE  6F62               	movwf	sprintf@fmt& (0+255),b
  5049  005BB0  0E0E               	movlw	high (STR_1+8)
  5050  005BB2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5051  005BB4  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5052  005BB8  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5053  005BBA  EC61  F02B         	call	_sprintf	;wreg free
  5054  005BBE                     
  5055                           ;color.c: 234:     sendStringSerial4(buf);
  5056  005BBE  0E79               	movlw	low color_predict@buf
  5057  005BC0  6E02               	movwf	sendStringSerial4@string^0,c
  5058  005BC2  0E00               	movlw	high color_predict@buf
  5059  005BC4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5060  005BC6  ECB7  F02D         	call	_sendStringSerial4	;wreg free
  5061  005BCA  0012               	return		;funcret
  5062  005BCC                     __end_of_color_predict:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _color_display *****************
  5066 ;; Defined at:
  5067 ;;		line 222 in file "color.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5070 ;;		 -> main@rgb(8), 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;Total ram usage:      102 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 9
  5089 ;; This function calls:
  5090 ;;		_sendStringSerial4
  5091 ;;		_sprintf
  5092 ;; This function is called by:
  5093 ;;		_color_data_collection
  5094 ;;		_test_function
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text12
  5099  005592                     __ptext12:
  5100                           	callstack 0
  5101  005592                     _color_display:
  5102                           	callstack 20
  5103  005592                     
  5104                           ;color.c: 222: void color_display(struct color_rgb *m);color.c: 223: {;color.c: 224:    
      +                           char buf[100];;color.c: 225:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5105  005592  0E79               	movlw	low color_display@buf
  5106  005594  0100               	movlb	0	; () banked
  5107  005596  6F60               	movwf	sprintf@s& (0+255),b
  5108  005598  0E00               	movlw	high color_display@buf
  5109  00559A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5110  00559C  0E05               	movlw	low STR_1
  5111  00559E  6F62               	movwf	sprintf@fmt& (0+255),b
  5112  0055A0  0E0E               	movlw	high STR_1
  5113  0055A2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5114  0055A4  C058  FFD9         	movff	color_display@m,fsr2l
  5115  0055A8  C059  FFDA         	movff	color_display@m+1,fsr2h
  5116  0055AC  CFDE F064          	movff	postinc2,?_sprintf+4
  5117  0055B0  CFDD F065          	movff	postdec2,?_sprintf+5
  5118  0055B4  EE20 F002          	lfsr	2,2
  5119  0055B8  5058               	movf	color_display@m^0,w,c
  5120  0055BA  26D9               	addwf	fsr2l,f,c
  5121  0055BC  5059               	movf	(color_display@m+1)^0,w,c
  5122  0055BE  22DA               	addwfc	fsr2h,f,c
  5123  0055C0  CFDE F066          	movff	postinc2,?_sprintf+6
  5124  0055C4  CFDD F067          	movff	postdec2,?_sprintf+7
  5125  0055C8  EE20 F004          	lfsr	2,4
  5126  0055CC  5058               	movf	color_display@m^0,w,c
  5127  0055CE  26D9               	addwf	fsr2l,f,c
  5128  0055D0  5059               	movf	(color_display@m+1)^0,w,c
  5129  0055D2  22DA               	addwfc	fsr2h,f,c
  5130  0055D4  CFDE F068          	movff	postinc2,?_sprintf+8
  5131  0055D8  CFDD F069          	movff	postdec2,?_sprintf+9
  5132  0055DC  EE20 F006          	lfsr	2,6
  5133  0055E0  5058               	movf	color_display@m^0,w,c
  5134  0055E2  26D9               	addwf	fsr2l,f,c
  5135  0055E4  5059               	movf	(color_display@m+1)^0,w,c
  5136  0055E6  22DA               	addwfc	fsr2h,f,c
  5137  0055E8  CFDE F06A          	movff	postinc2,?_sprintf+10
  5138  0055EC  CFDD F06B          	movff	postdec2,?_sprintf+11
  5139  0055F0  EC61  F02B         	call	_sprintf	;wreg free
  5140  0055F4                     
  5141                           ;color.c: 226:     sendStringSerial4(buf);
  5142  0055F4  0E79               	movlw	low color_display@buf
  5143  0055F6  6E02               	movwf	sendStringSerial4@string^0,c
  5144  0055F8  0E00               	movlw	high color_display@buf
  5145  0055FA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5146  0055FC  ECB7  F02D         	call	_sendStringSerial4	;wreg free
  5147  005600  0012               	return		;funcret
  5148  005602                     __end_of_color_display:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _sprintf *****************
  5152 ;; Defined at:
  5153 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5156 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  5157 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5158 ;;		 -> STR_2(6), STR_1(14), 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5161 ;;  ap              2   12[BANK0 ] PTR void [1]
  5162 ;;		 -> ?_sprintf(2), 
  5163 ;;  ret             2    0        int 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    0[BANK0 ] int 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5173 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;Total ram usage:       25 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 8
  5180 ;; This function calls:
  5181 ;;		_vfprintf
  5182 ;; This function is called by:
  5183 ;;		_color_display
  5184 ;;		_color_predict
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text13
  5189  0056C2                     __ptext13:
  5190                           	callstack 0
  5191  0056C2                     _sprintf:
  5192                           	callstack 20
  5193  0056C2  0E64               	movlw	low (?_sprintf+4)
  5194  0056C4  0100               	movlb	0	; () banked
  5195  0056C6  6F6C               	movwf	sprintf@ap& (0+255),b
  5196  0056C8  0E00               	movlw	high (?_sprintf+4)
  5197  0056CA  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5198  0056CC  C060  F06E         	movff	sprintf@s,sprintf@f
  5199  0056D0  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5200  0056D4                     
  5201                           ; BSR set to: 0
  5202  0056D4  0E00               	movlw	0
  5203  0056D6  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5204  0056D8  0E00               	movlw	0
  5205  0056DA  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5206  0056DC                     
  5207                           ; BSR set to: 0
  5208  0056DC  0E00               	movlw	0
  5209  0056DE  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5210  0056E0  0E00               	movlw	0
  5211  0056E2  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5212  0056E4                     
  5213                           ; BSR set to: 0
  5214  0056E4  0E6E               	movlw	low sprintf@f
  5215  0056E6  6E50               	movwf	vfprintf@fp^0,c
  5216  0056E8  0E00               	movlw	high sprintf@f
  5217  0056EA  6E51               	movwf	(vfprintf@fp+1)^0,c
  5218  0056EC  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5219  0056F0  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5220  0056F4  0E6C               	movlw	low sprintf@ap
  5221  0056F6  6E54               	movwf	vfprintf@ap^0,c
  5222  0056F8  0E00               	movlw	high sprintf@ap
  5223  0056FA  6E55               	movwf	(vfprintf@ap+1)^0,c
  5224  0056FC  EC01  F02B         	call	_vfprintf	;wreg free
  5225  005700  0100               	movlb	0	; () banked
  5226  005702  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5227  005704  2560               	addwf	sprintf@s& (0+255),w,b
  5228  005706  6ED9               	movwf	fsr2l,c
  5229  005708  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5230  00570A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5231  00570C  6EDA               	movwf	fsr2h,c
  5232  00570E  0E00               	movlw	0
  5233  005710  6EDF               	movwf	indf2,c
  5234  005712                     
  5235                           ; BSR set to: 0
  5236  005712  0012               	return		;funcret
  5237  005714                     __end_of_sprintf:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _vfprintf *****************
  5241 ;; Defined at:
  5242 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5245 ;;		 -> sprintf@f(11), 
  5246 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5247 ;;		 -> STR_2(6), STR_1(14), 
  5248 ;;  ap              2   83[COMRAM] PTR PTR void 
  5249 ;;		 -> sprintf@ap(2), 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5252 ;;		 -> STR_2(6), STR_1(14), 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  2   79[COMRAM] int 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;Total ram usage:        8 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 7
  5269 ;; This function calls:
  5270 ;;		_vfpfcnvrt
  5271 ;; This function is called by:
  5272 ;;		_sprintf
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text14
  5277  005602                     __ptext14:
  5278                           	callstack 0
  5279  005602                     _vfprintf:
  5280                           	callstack 20
  5281  005602                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5283  005602  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5284  005606  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5285  00560A                     
  5286                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5287  00560A  0E00               	movlw	0
  5288  00560C  0101               	movlb	1	; () banked
  5289  00560E  6F3F               	movwf	(_nout+1)& (0+255),b
  5290  005610  0E00               	movlw	0
  5291  005612  6F3E               	movwf	_nout& (0+255),b
  5292                           
  5293                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5294  005614  EF1F  F02B         	goto	l4186
  5295  005618                     l4184:
  5296                           
  5297                           ; BSR set to: 1
  5298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5299  005618  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5300  00561C  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5301  005620  0E56               	movlw	low vfprintf@cfmt
  5302  005622  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5303  005624  0E00               	movlw	high vfprintf@cfmt
  5304  005626  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5305  005628  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5306  00562C  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5307  005630  EC37  F01E         	call	_vfpfcnvrt	;wreg free
  5308  005634  5040               	movf	?_vfpfcnvrt^0,w,c
  5309  005636  0101               	movlb	1	; () banked
  5310  005638  273E               	addwf	_nout& (0+255),f,b
  5311  00563A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5312  00563C  233F               	addwfc	(_nout+1)& (0+255),f,b
  5313  00563E                     l4186:
  5314                           
  5315                           ; BSR set to: 1
  5316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5317  00563E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5318  005642  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5319  005646                     	if	0	;tblptru may be non-zero
  5320  005646                     	endif
  5321  005646                     	if	0	;tblptru may be non-zero
  5322  005646                     	endif
  5323  005646  0008               	tblrd		*
  5324  005648  50F5               	movf	tablat,w,c
  5325  00564A  0900               	iorlw	0
  5326  00564C  A4D8               	btfss	status,2,c
  5327  00564E  EF2B  F02B         	goto	u4221
  5328  005652  EF2D  F02B         	goto	u4220
  5329  005656                     u4221:
  5330  005656  EF0C  F02B         	goto	l4184
  5331  00565A                     u4220:
  5332  00565A                     
  5333                           ; BSR set to: 1
  5334                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5335  00565A  C13E  F050         	movff	_nout,?_vfprintf
  5336  00565E  C13F  F051         	movff	_nout+1,?_vfprintf+1
  5337  005662                     
  5338                           ; BSR set to: 1
  5339  005662  0012               	return		;funcret
  5340  005664                     __end_of_vfprintf:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _vfpfcnvrt *****************
  5344 ;; Defined at:
  5345 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5348 ;;		 -> sprintf@f(11), 
  5349 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5350 ;;		 -> vfprintf@cfmt(2), 
  5351 ;;  ap              2   67[COMRAM] PTR PTR void 
  5352 ;;		 -> sprintf@ap(2), 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  ll              8   71[COMRAM] long long 
  5355 ;;  llu             8    0        unsigned long long 
  5356 ;;  f               4    0        unsigned long long 
  5357 ;;  vp              3    0        PTR void 
  5358 ;;  ct              3    0        unsigned char [3]
  5359 ;;  cp              3    0        PTR unsigned char 
  5360 ;;  i               2    0        int 
  5361 ;;  done            2    0        int 
  5362 ;;  c               1    0        unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2   63[COMRAM] int 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;Total ram usage:       16 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; Hardware stack levels required when called: 6
  5379 ;; This function calls:
  5380 ;;		_dtoa
  5381 ;;		_fputc
  5382 ;; This function is called by:
  5383 ;;		_vfprintf
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text15
  5388  003C6E                     __ptext15:
  5389                           	callstack 0
  5390  003C6E                     _vfpfcnvrt:
  5391                           	callstack 20
  5392  003C6E                     
  5393                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5394  003C6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5395  003C72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5396  003C76  CFDE FFF6          	movff	postinc2,tblptrl
  5397  003C7A  CFDD FFF7          	movff	postdec2,tblptrh
  5398  003C7E                     	if	0	;tblptru may be non-zero
  5399  003C7E                     	endif
  5400  003C7E                     	if	0	;tblptru may be non-zero
  5401  003C7E                     	endif
  5402  003C7E  0008               	tblrd		*
  5403  003C80  50F5               	movf	tablat,w,c
  5404  003C82  0A25               	xorlw	37
  5405  003C84  A4D8               	btfss	status,2,c
  5406  003C86  EF47  F01E         	goto	u3861
  5407  003C8A  EF49  F01E         	goto	u3860
  5408  003C8E                     u3861:
  5409  003C8E  EFF6  F01E         	goto	l3950
  5410  003C92                     u3860:
  5411  003C92                     
  5412                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5413  003C92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5414  003C96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5415  003C9A  2ADE               	incf	postinc2,f,c
  5416  003C9C  0E00               	movlw	0
  5417  003C9E  22DD               	addwfc	postdec2,f,c
  5418  003CA0                     
  5419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5420  003CA0  0E00               	movlw	0
  5421  003CA2  0101               	movlb	1	; () banked
  5422  003CA4  6F41               	movwf	(_width+1)& (0+255),b
  5423  003CA6  0E00               	movlw	0
  5424  003CA8  6F40               	movwf	_width& (0+255),b
  5425  003CAA  C140  F0FC         	movff	_width,_flags
  5426  003CAE  C141  F0FD         	movff	_width+1,_flags+1
  5427  003CB2                     
  5428                           ; BSR set to: 1
  5429                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5430  003CB2  0100               	movlb	0	; () banked
  5431  003CB4  69FA               	setf	_prec& (0+255),b
  5432  003CB6  69FB               	setf	(_prec+1)& (0+255),b
  5433  003CB8                     
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5436  003CB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5437  003CBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5438  003CC0  CFDE FFF6          	movff	postinc2,tblptrl
  5439  003CC4  CFDD FFF7          	movff	postdec2,tblptrh
  5440  003CC8                     	if	0	;tblptru may be non-zero
  5441  003CC8                     	endif
  5442  003CC8                     	if	0	;tblptru may be non-zero
  5443  003CC8                     	endif
  5444  003CC8  0008               	tblrd		*
  5445  003CCA  50F5               	movf	tablat,w,c
  5446  003CCC  0A64               	xorlw	100
  5447  003CCE  B4D8               	btfsc	status,2,c
  5448  003CD0  EF6C  F01E         	goto	u3871
  5449  003CD4  EF6E  F01E         	goto	u3870
  5450  003CD8                     u3871:
  5451  003CD8  EF80  F01E         	goto	l3928
  5452  003CDC                     u3870:
  5453  003CDC                     
  5454                           ; BSR set to: 0
  5455  003CDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5456  003CE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5457  003CE4  CFDE FFF6          	movff	postinc2,tblptrl
  5458  003CE8  CFDD FFF7          	movff	postdec2,tblptrh
  5459  003CEC                     	if	0	;tblptru may be non-zero
  5460  003CEC                     	endif
  5461  003CEC                     	if	0	;tblptru may be non-zero
  5462  003CEC                     	endif
  5463  003CEC  0008               	tblrd		*
  5464  003CEE  50F5               	movf	tablat,w,c
  5465  003CF0  0A69               	xorlw	105
  5466  003CF2  A4D8               	btfss	status,2,c
  5467  003CF4  EF7E  F01E         	goto	u3881
  5468  003CF8  EF80  F01E         	goto	u3880
  5469  003CFC                     u3881:
  5470  003CFC  EFC0  F01E         	goto	l3934
  5471  003D00                     u3880:
  5472  003D00                     l3928:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5476  003D00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5477  003D04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5478  003D08  2ADE               	incf	postinc2,f,c
  5479  003D0A  0E00               	movlw	0
  5480  003D0C  22DD               	addwfc	postdec2,f,c
  5481                           
  5482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5483  003D0E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5484  003D12  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5485  003D16  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5486  003D1A  0E02               	movlw	2
  5487  003D1C  26DE               	addwf	postinc2,f,c
  5488  003D1E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5489  003D22  0E00               	movlw	0
  5490  003D24  22DD               	addwfc	postdec2,f,c
  5491  003D26  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5492  003D2A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5493  003D2E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5494  003D32  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5495  003D36  0E00               	movlw	0
  5496  003D38  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5497  003D3A  0EFF               	movlw	-1
  5498  003D3C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5499  003D3E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5500  003D40  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5501  003D42  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5502  003D44  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5503  003D46  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5504  003D48                     
  5505                           ; BSR set to: 0
  5506                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5507  003D48  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5508  003D4C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5509  003D50  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5510  003D54  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5511  003D58  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5512  003D5C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5513  003D60  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5514  003D64  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5515  003D68  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5516  003D6C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5517  003D70  EC6F  F018         	call	_dtoa	;wreg free
  5518  003D74  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5519  003D78  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5520  003D7C  EF11  F01F         	goto	l1388
  5521  003D80                     l3934:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5525  003D80  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5526  003D84  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5527  003D88  CFDE FFF6          	movff	postinc2,tblptrl
  5528  003D8C  CFDD FFF7          	movff	postdec2,tblptrh
  5529  003D90                     	if	0	;tblptru may be non-zero
  5530  003D90                     	endif
  5531  003D90                     	if	0	;tblptru may be non-zero
  5532  003D90                     	endif
  5533  003D90  0008               	tblrd		*
  5534  003D92  50F5               	movf	tablat,w,c
  5535  003D94  0A25               	xorlw	37
  5536  003D96  A4D8               	btfss	status,2,c
  5537  003D98  EFD0  F01E         	goto	u3891
  5538  003D9C  EFD2  F01E         	goto	u3890
  5539  003DA0                     u3891:
  5540  003DA0  EFE9  F01E         	goto	l3944
  5541  003DA4                     u3890:
  5542  003DA4                     
  5543                           ; BSR set to: 0
  5544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5545  003DA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5546  003DA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5547  003DAC  2ADE               	incf	postinc2,f,c
  5548  003DAE  0E00               	movlw	0
  5549  003DB0  22DD               	addwfc	postdec2,f,c
  5550  003DB2                     
  5551                           ; BSR set to: 0
  5552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5553  003DB2  0E00               	movlw	0
  5554  003DB4  6E02               	movwf	(fputc@c+1)^0,c
  5555  003DB6  0E25               	movlw	37
  5556  003DB8  6E01               	movwf	fputc@c^0,c
  5557  003DBA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5558  003DBE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5559  003DC2  EC3D  F028         	call	_fputc	;wreg free
  5560  003DC6                     l3940:
  5561                           
  5562                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5563  003DC6  0E00               	movlw	0
  5564  003DC8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5565  003DCA  0E01               	movlw	1
  5566  003DCC  6E40               	movwf	?_vfpfcnvrt^0,c
  5567  003DCE  EF11  F01F         	goto	l1388
  5568  003DD2                     l3944:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5572  003DD2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5573  003DD6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5574  003DDA  2ADE               	incf	postinc2,f,c
  5575  003DDC  0E00               	movlw	0
  5576  003DDE  22DD               	addwfc	postdec2,f,c
  5577  003DE0                     
  5578                           ; BSR set to: 0
  5579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5580  003DE0  0E00               	movlw	0
  5581  003DE2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5582  003DE4  0E00               	movlw	0
  5583  003DE6  6E40               	movwf	?_vfpfcnvrt^0,c
  5584  003DE8  EF11  F01F         	goto	l1388
  5585  003DEC                     l3950:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5588  003DEC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5589  003DF0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5590  003DF4  CFDE FFF6          	movff	postinc2,tblptrl
  5591  003DF8  CFDD FFF7          	movff	postdec2,tblptrh
  5592  003DFC                     	if	0	;tblptru may be non-zero
  5593  003DFC                     	endif
  5594  003DFC                     	if	0	;tblptru may be non-zero
  5595  003DFC                     	endif
  5596  003DFC  0008               	tblrd		*
  5597  003DFE  50F5               	movf	tablat,w,c
  5598  003E00  6E01               	movwf	fputc@c^0,c
  5599  003E02  6A02               	clrf	(fputc@c+1)^0,c
  5600  003E04  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5601  003E08  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5602  003E0C  EC3D  F028         	call	_fputc	;wreg free
  5603  003E10                     
  5604                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5605  003E10  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5606  003E14  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5607  003E18  2ADE               	incf	postinc2,f,c
  5608  003E1A  0E00               	movlw	0
  5609  003E1C  22DD               	addwfc	postdec2,f,c
  5610  003E1E  EFE3  F01E         	goto	l3940
  5611  003E22                     l1388:
  5612  003E22  0012               	return		;funcret
  5613  003E24                     __end_of_vfpfcnvrt:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function _dtoa *****************
  5617 ;; Defined at:
  5618 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5621 ;;		 -> sprintf@f(11), 
  5622 ;;  d               8   29[COMRAM] long long 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  n               8   53[COMRAM] long long 
  5625 ;;  i               2   61[COMRAM] int 
  5626 ;;  s               2   51[COMRAM] int 
  5627 ;;  w               2   49[COMRAM] int 
  5628 ;;  p               2   47[COMRAM] int 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  2   27[COMRAM] int 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5638 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;Total ram usage:       36 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 5
  5645 ;; This function calls:
  5646 ;;		___aodiv
  5647 ;;		___aomod
  5648 ;;		_abs
  5649 ;;		_pad
  5650 ;; This function is called by:
  5651 ;;		_vfpfcnvrt
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text16
  5656  0030DE                     __ptext16:
  5657                           	callstack 0
  5658  0030DE                     _dtoa:
  5659                           	callstack 20
  5660  0030DE                     
  5661                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5662  0030DE  C01E  F036         	movff	dtoa@d,dtoa@n
  5663  0030E2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5664  0030E6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5665  0030EA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5666  0030EE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5667  0030F2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5668  0030F6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5669  0030FA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5670  0030FE                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5672  0030FE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5673  003100  EF84  F018         	goto	u3261
  5674  003104  EF87  F018         	goto	u3260
  5675  003108                     u3261:
  5676  003108  0E01               	movlw	1
  5677  00310A  EF88  F018         	goto	u3270
  5678  00310E                     u3260:
  5679  00310E  0E00               	movlw	0
  5680  003110                     u3270:
  5681  003110  6E34               	movwf	dtoa@s^0,c
  5682  003112  6A35               	clrf	(dtoa@s+1)^0,c
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5685  003114  5034               	movf	dtoa@s^0,w,c
  5686  003116  1035               	iorwf	(dtoa@s+1)^0,w,c
  5687  003118  B4D8               	btfsc	status,2,c
  5688  00311A  EF91  F018         	goto	u3281
  5689  00311E  EF93  F018         	goto	u3280
  5690  003122                     u3281:
  5691  003122  EFA3  F018         	goto	l3640
  5692  003126                     u3280:
  5693  003126                     
  5694                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5695  003126  1E3D               	comf	(dtoa@n+7)^0,f,c
  5696  003128  1E3C               	comf	(dtoa@n+6)^0,f,c
  5697  00312A  1E3B               	comf	(dtoa@n+5)^0,f,c
  5698  00312C  1E3A               	comf	(dtoa@n+4)^0,f,c
  5699  00312E  1E39               	comf	(dtoa@n+3)^0,f,c
  5700  003130  1E38               	comf	(dtoa@n+2)^0,f,c
  5701  003132  1E37               	comf	(dtoa@n+1)^0,f,c
  5702  003134  6C36               	negf	dtoa@n^0,c
  5703  003136  0E00               	movlw	0
  5704  003138  2237               	addwfc	(dtoa@n+1)^0,f,c
  5705  00313A  2238               	addwfc	(dtoa@n+2)^0,f,c
  5706  00313C  2239               	addwfc	(dtoa@n+3)^0,f,c
  5707  00313E  223A               	addwfc	(dtoa@n+4)^0,f,c
  5708  003140  223B               	addwfc	(dtoa@n+5)^0,f,c
  5709  003142  223C               	addwfc	(dtoa@n+6)^0,f,c
  5710  003144  223D               	addwfc	(dtoa@n+7)^0,f,c
  5711  003146                     l3640:
  5712                           
  5713                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5714  003146  0100               	movlb	0	; () banked
  5715  003148  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5716  00314A  EFA9  F018         	goto	u3291
  5717  00314E  EFAB  F018         	goto	u3290
  5718  003152                     u3291:
  5719  003152  EFAC  F018         	goto	l3644
  5720  003156                     u3290:
  5721  003156                     
  5722                           ; BSR set to: 0
  5723                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5724  003156  93FC               	bcf	_flags& (0+255),1,b
  5725  003158                     l3644:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5729  003158  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5730  00315A  EFB9  F018         	goto	u3300
  5731  00315E  51FB               	movf	(_prec+1)& (0+255),w,b
  5732  003160  E106               	bnz	u3301
  5733  003162  05FA               	decf	_prec& (0+255),w,b
  5734  003164  B0D8               	btfsc	status,0,c
  5735  003166  EFB7  F018         	goto	u3301
  5736  00316A  EFB9  F018         	goto	u3300
  5737  00316E                     u3301:
  5738  00316E  EFBF  F018         	goto	l1361
  5739  003172                     u3300:
  5740  003172                     
  5741                           ; BSR set to: 0
  5742  003172  0E00               	movlw	0
  5743  003174  6E31               	movwf	(dtoa@p+1)^0,c
  5744  003176  0E01               	movlw	1
  5745  003178  6E30               	movwf	dtoa@p^0,c
  5746  00317A  EFC3  F018         	goto	l1363
  5747  00317E                     l1361:
  5748                           
  5749                           ; BSR set to: 0
  5750  00317E  C0FA  F030         	movff	_prec,dtoa@p
  5751  003182  C0FB  F031         	movff	_prec+1,dtoa@p+1
  5752  003186                     l1363:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5756  003186  C140  F032         	movff	_width,dtoa@w
  5757  00318A  C141  F033         	movff	_width+1,dtoa@w+1
  5758  00318E                     
  5759                           ; BSR set to: 0
  5760                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5761  00318E  5034               	movf	dtoa@s^0,w,c
  5762  003190  1035               	iorwf	(dtoa@s+1)^0,w,c
  5763  003192  A4D8               	btfss	status,2,c
  5764  003194  EFCE  F018         	goto	u3311
  5765  003198  EFD0  F018         	goto	u3310
  5766  00319C                     u3311:
  5767  00319C  EFD7  F018         	goto	l3652
  5768  0031A0                     u3310:
  5769  0031A0                     
  5770                           ; BSR set to: 0
  5771  0031A0  A5FC               	btfss	_flags& (0+255),2,b
  5772  0031A2  EFD5  F018         	goto	u3321
  5773  0031A6  EFD7  F018         	goto	u3320
  5774  0031AA                     u3321:
  5775  0031AA  EFDA  F018         	goto	l3654
  5776  0031AE                     u3320:
  5777  0031AE                     l3652:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5781  0031AE  0632               	decf	dtoa@w^0,f,c
  5782  0031B0  A0D8               	btfss	status,0,c
  5783  0031B2  0633               	decf	(dtoa@w+1)^0,f,c
  5784  0031B4                     l3654:
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5788  0031B4  0E00               	movlw	0
  5789  0031B6  6E3F               	movwf	(dtoa@i+1)^0,c
  5790  0031B8  0E1F               	movlw	31
  5791  0031BA  6E3E               	movwf	dtoa@i^0,c
  5792  0031BC                     
  5793                           ; BSR set to: 0
  5794                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5795  0031BC  0E00               	movlw	0
  5796  0031BE  0101               	movlb	1	; () banked
  5797  0031C0  6F65               	movwf	(_dbuf+31)& (0+255),b
  5798                           
  5799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5800  0031C2  EF5F  F019         	goto	l3668
  5801  0031C6                     l3658:
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5804  0031C6  063E               	decf	dtoa@i^0,f,c
  5805  0031C8  A0D8               	btfss	status,0,c
  5806  0031CA  063F               	decf	(dtoa@i+1)^0,f,c
  5807  0031CC                     
  5808                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5809  0031CC  0E46               	movlw	low _dbuf
  5810  0031CE  243E               	addwf	dtoa@i^0,w,c
  5811  0031D0  6ED9               	movwf	fsr2l,c
  5812  0031D2  0E01               	movlw	high _dbuf
  5813  0031D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  5814  0031D6  6EDA               	movwf	fsr2h,c
  5815  0031D8  C036  F001         	movff	dtoa@n,___aomod@dividend
  5816  0031DC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5817  0031E0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5818  0031E4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5819  0031E8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5820  0031EC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5821  0031F0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5822  0031F4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5823  0031F8  0E0A               	movlw	10
  5824  0031FA  6E09               	movwf	___aomod@divisor^0,c
  5825  0031FC  0E00               	movlw	0
  5826  0031FE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5827  003200  0E00               	movlw	0
  5828  003202  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5829  003204  0E00               	movlw	0
  5830  003206  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5831  003208  0E00               	movlw	0
  5832  00320A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5833  00320C  0E00               	movlw	0
  5834  00320E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5835  003210  0E00               	movlw	0
  5836  003212  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5837  003214  0E00               	movlw	0
  5838  003216  6E10               	movwf	(___aomod@divisor+7)^0,c
  5839  003218  EC25  F023         	call	___aomod	;wreg free
  5840  00321C  C001  F026         	movff	?___aomod,??_dtoa
  5841  003220  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5842  003224  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5843  003228  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5844  00322C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5845  003230  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5846  003234  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5847  003238  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5848  00323C  C026  F013         	movff	??_dtoa,abs@a
  5849  003240  C028  F014         	movff	??_dtoa+2,abs@a+1
  5850  003244  ECF2  F02C         	call	_abs	;wreg free
  5851  003248  5013               	movf	?_abs^0,w,c
  5852  00324A  0F30               	addlw	48
  5853  00324C  6EDF               	movwf	indf2,c
  5854  00324E                     
  5855                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5856  00324E  0630               	decf	dtoa@p^0,f,c
  5857  003250  A0D8               	btfss	status,0,c
  5858  003252  0631               	decf	(dtoa@p+1)^0,f,c
  5859  003254                     
  5860                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5861  003254  0632               	decf	dtoa@w^0,f,c
  5862  003256  A0D8               	btfss	status,0,c
  5863  003258  0633               	decf	(dtoa@w+1)^0,f,c
  5864  00325A                     
  5865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5866  00325A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5867  00325E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5868  003262  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5869  003266  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5870  00326A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5871  00326E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5872  003272  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5873  003276  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5874  00327A  0E0A               	movlw	10
  5875  00327C  6E09               	movwf	___aodiv@divisor^0,c
  5876  00327E  0E00               	movlw	0
  5877  003280  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5878  003282  0E00               	movlw	0
  5879  003284  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5880  003286  0E00               	movlw	0
  5881  003288  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5882  00328A  0E00               	movlw	0
  5883  00328C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5884  00328E  0E00               	movlw	0
  5885  003290  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5886  003292  0E00               	movlw	0
  5887  003294  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5888  003296  0E00               	movlw	0
  5889  003298  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5890  00329A  EC61  F022         	call	___aodiv	;wreg free
  5891  00329E  C001  F036         	movff	?___aodiv,dtoa@n
  5892  0032A2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5893  0032A6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5894  0032AA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5895  0032AE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5896  0032B2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5897  0032B6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5898  0032BA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5899  0032BE                     l3668:
  5900                           
  5901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5902  0032BE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5903  0032C0  EF6A  F019         	goto	u3331
  5904  0032C4  503F               	movf	(dtoa@i+1)^0,w,c
  5905  0032C6  E108               	bnz	u3330
  5906  0032C8  043E               	decf	dtoa@i^0,w,c
  5907  0032CA  A0D8               	btfss	status,0,c
  5908  0032CC  EF6A  F019         	goto	u3331
  5909  0032D0  EF6C  F019         	goto	u3330
  5910  0032D4                     u3331:
  5911  0032D4  EF9D  F019         	goto	l3678
  5912  0032D8                     u3330:
  5913  0032D8  5036               	movf	dtoa@n^0,w,c
  5914  0032DA  1037               	iorwf	(dtoa@n+1)^0,w,c
  5915  0032DC  1038               	iorwf	(dtoa@n+2)^0,w,c
  5916  0032DE  1039               	iorwf	(dtoa@n+3)^0,w,c
  5917  0032E0  103A               	iorwf	(dtoa@n+4)^0,w,c
  5918  0032E2  103B               	iorwf	(dtoa@n+5)^0,w,c
  5919  0032E4  103C               	iorwf	(dtoa@n+6)^0,w,c
  5920  0032E6  103D               	iorwf	(dtoa@n+7)^0,w,c
  5921  0032E8  A4D8               	btfss	status,2,c
  5922  0032EA  EF79  F019         	goto	u3341
  5923  0032EE  EF7B  F019         	goto	u3340
  5924  0032F2                     u3341:
  5925  0032F2  EFE3  F018         	goto	l3658
  5926  0032F6                     u3340:
  5927  0032F6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5928  0032F8  EF88  F019         	goto	u3350
  5929  0032FC  5031               	movf	(dtoa@p+1)^0,w,c
  5930  0032FE  E106               	bnz	u3351
  5931  003300  0430               	decf	dtoa@p^0,w,c
  5932  003302  B0D8               	btfsc	status,0,c
  5933  003304  EF86  F019         	goto	u3351
  5934  003308  EF88  F019         	goto	u3350
  5935  00330C                     u3351:
  5936  00330C  EFE3  F018         	goto	l3658
  5937  003310                     u3350:
  5938  003310  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5939  003312  EF93  F019         	goto	u3361
  5940  003316  5033               	movf	(dtoa@w+1)^0,w,c
  5941  003318  E108               	bnz	u3360
  5942  00331A  0432               	decf	dtoa@w^0,w,c
  5943  00331C  A0D8               	btfss	status,0,c
  5944  00331E  EF93  F019         	goto	u3361
  5945  003322  EF95  F019         	goto	u3360
  5946  003326                     u3361:
  5947  003326  EF9D  F019         	goto	l3678
  5948  00332A                     u3360:
  5949  00332A  0100               	movlb	0	; () banked
  5950  00332C  B3FC               	btfsc	_flags& (0+255),1,b
  5951  00332E  EF9B  F019         	goto	u3371
  5952  003332  EF9D  F019         	goto	u3370
  5953  003336                     u3371:
  5954  003336  EFE3  F018         	goto	l3658
  5955  00333A                     u3370:
  5956  00333A                     l3678:
  5957                           
  5958                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5959  00333A  5034               	movf	dtoa@s^0,w,c
  5960  00333C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5961  00333E  A4D8               	btfss	status,2,c
  5962  003340  EFA4  F019         	goto	u3381
  5963  003344  EFA6  F019         	goto	u3380
  5964  003348                     u3381:
  5965  003348  EFAE  F019         	goto	l3682
  5966  00334C                     u3380:
  5967  00334C  0100               	movlb	0	; () banked
  5968  00334E  A5FC               	btfss	_flags& (0+255),2,b
  5969  003350  EFAC  F019         	goto	u3391
  5970  003354  EFAE  F019         	goto	u3390
  5971  003358                     u3391:
  5972  003358  EFCC  F019         	goto	l3692
  5973  00335C                     u3390:
  5974  00335C                     l3682:
  5975                           
  5976                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5977  00335C  063E               	decf	dtoa@i^0,f,c
  5978  00335E  A0D8               	btfss	status,0,c
  5979  003360  063F               	decf	(dtoa@i+1)^0,f,c
  5980  003362                     
  5981                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5982  003362  5034               	movf	dtoa@s^0,w,c
  5983  003364  1035               	iorwf	(dtoa@s+1)^0,w,c
  5984  003366  A4D8               	btfss	status,2,c
  5985  003368  EFB8  F019         	goto	u3401
  5986  00336C  EFBA  F019         	goto	u3400
  5987  003370                     u3401:
  5988  003370  EFC0  F019         	goto	l3688
  5989  003374                     u3400:
  5990  003374  0E00               	movlw	0
  5991  003376  6E2F               	movwf	(_dtoa$2621+1)^0,c
  5992  003378  0E2B               	movlw	43
  5993  00337A  6E2E               	movwf	_dtoa$2621^0,c
  5994  00337C  EFC4  F019         	goto	l3690
  5995  003380                     l3688:
  5996  003380  0E00               	movlw	0
  5997  003382  6E2F               	movwf	(_dtoa$2621+1)^0,c
  5998  003384  0E2D               	movlw	45
  5999  003386  6E2E               	movwf	_dtoa$2621^0,c
  6000  003388                     l3690:
  6001  003388  0E46               	movlw	low _dbuf
  6002  00338A  243E               	addwf	dtoa@i^0,w,c
  6003  00338C  6ED9               	movwf	fsr2l,c
  6004  00338E  0E01               	movlw	high _dbuf
  6005  003390  203F               	addwfc	(dtoa@i+1)^0,w,c
  6006  003392  6EDA               	movwf	fsr2h,c
  6007  003394  C02E  FFDF         	movff	_dtoa$2621,indf2
  6008  003398                     l3692:
  6009                           
  6010                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6011  003398  C01C  F011         	movff	dtoa@fp,pad@fp
  6012  00339C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6013  0033A0  0E46               	movlw	low _dbuf
  6014  0033A2  243E               	addwf	dtoa@i^0,w,c
  6015  0033A4  6E13               	movwf	pad@buf^0,c
  6016  0033A6  0E01               	movlw	high _dbuf
  6017  0033A8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6018  0033AA  6E14               	movwf	(pad@buf+1)^0,c
  6019  0033AC  C032  F015         	movff	dtoa@w,pad@p
  6020  0033B0  C033  F016         	movff	dtoa@w+1,pad@p+1
  6021  0033B4  EC05  F029         	call	_pad	;wreg free
  6022  0033B8  C011  F01C         	movff	?_pad,?_dtoa
  6023  0033BC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6024  0033C0  0012               	return		;funcret
  6025  0033C2                     __end_of_dtoa:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function _pad *****************
  6029 ;; Defined at:
  6030 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6033 ;;		 -> sprintf@f(11), 
  6034 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6035 ;;		 -> dbuf(32), 
  6036 ;;  p               2   20[COMRAM] int 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  w               2   25[COMRAM] int 
  6039 ;;  i               2   23[COMRAM] int 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  2   16[COMRAM] int 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6049 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;Total ram usage:       11 bytes
  6054 ;; Hardware stack levels used: 1
  6055 ;; Hardware stack levels required when called: 4
  6056 ;; This function calls:
  6057 ;;		_fputc
  6058 ;;		_fputs
  6059 ;;		_strlen
  6060 ;; This function is called by:
  6061 ;;		_dtoa
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text17
  6066  00520A                     __ptext17:
  6067                           	callstack 0
  6068  00520A                     _pad:
  6069                           	callstack 20
  6070  00520A                     
  6071                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6072  00520A  0100               	movlb	0	; () banked
  6073  00520C  A1FC               	btfss	_flags& (0+255),0,b
  6074  00520E  EF0B  F029         	goto	u3151
  6075  005212  EF0D  F029         	goto	u3150
  6076  005216                     u3151:
  6077  005216  EF17  F029         	goto	l3562
  6078  00521A                     u3150:
  6079  00521A                     
  6080                           ; BSR set to: 0
  6081                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6082  00521A  C013  F00A         	movff	pad@buf,fputs@s
  6083  00521E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6084  005222  C011  F00C         	movff	pad@fp,fputs@fp
  6085  005226  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6086  00522A  EC4D  F02C         	call	_fputs	;wreg free
  6087  00522E                     l3562:
  6088                           
  6089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6090  00522E  BE16               	btfsc	(pad@p+1)^0,7,c
  6091  005230  EF1C  F029         	goto	u3161
  6092  005234  EF1E  F029         	goto	u3160
  6093  005238                     u3161:
  6094  005238  EF24  F029         	goto	l3566
  6095  00523C                     u3160:
  6096  00523C  C015  F01A         	movff	pad@p,pad@w
  6097  005240  C016  F01B         	movff	pad@p+1,pad@w+1
  6098  005244  EF28  F029         	goto	l1350
  6099  005248                     l3566:
  6100  005248  0E00               	movlw	0
  6101  00524A  6E1B               	movwf	(pad@w+1)^0,c
  6102  00524C  0E00               	movlw	0
  6103  00524E  6E1A               	movwf	pad@w^0,c
  6104  005250                     l1350:
  6105                           
  6106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6107  005250  0E00               	movlw	0
  6108  005252  6E19               	movwf	(pad@i+1)^0,c
  6109  005254  0E00               	movlw	0
  6110  005256  6E18               	movwf	pad@i^0,c
  6111                           
  6112                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6113  005258  EF3A  F029         	goto	l3572
  6114  00525C                     l3568:
  6115                           
  6116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6117  00525C  0E00               	movlw	0
  6118  00525E  6E02               	movwf	(fputc@c+1)^0,c
  6119  005260  0E20               	movlw	32
  6120  005262  6E01               	movwf	fputc@c^0,c
  6121  005264  C011  F003         	movff	pad@fp,fputc@fp
  6122  005268  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6123  00526C  EC3D  F028         	call	_fputc	;wreg free
  6124  005270                     
  6125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6126  005270  4A18               	infsnz	pad@i^0,f,c
  6127  005272  2A19               	incf	(pad@i+1)^0,f,c
  6128  005274                     l3572:
  6129                           
  6130                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6131  005274  501A               	movf	pad@w^0,w,c
  6132  005276  5C18               	subwf	pad@i^0,w,c
  6133  005278  5019               	movf	(pad@i+1)^0,w,c
  6134  00527A  0A80               	xorlw	128
  6135  00527C  6E17               	movwf	??_pad^0,c
  6136  00527E  501B               	movf	(pad@w+1)^0,w,c
  6137  005280  0A80               	xorlw	128
  6138  005282  5817               	subwfb	??_pad^0,w,c
  6139  005284  A0D8               	btfss	status,0,c
  6140  005286  EF47  F029         	goto	u3171
  6141  00528A  EF49  F029         	goto	u3170
  6142  00528E                     u3171:
  6143  00528E  EF2E  F029         	goto	l3568
  6144  005292                     u3170:
  6145  005292                     
  6146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6147  005292  0100               	movlb	0	; () banked
  6148  005294  B1FC               	btfsc	_flags& (0+255),0,b
  6149  005296  EF4F  F029         	goto	u3181
  6150  00529A  EF51  F029         	goto	u3180
  6151  00529E                     u3181:
  6152  00529E  EF5B  F029         	goto	l3576
  6153  0052A2                     u3180:
  6154  0052A2                     
  6155                           ; BSR set to: 0
  6156                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6157  0052A2  C013  F00A         	movff	pad@buf,fputs@s
  6158  0052A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6159  0052AA  C011  F00C         	movff	pad@fp,fputs@fp
  6160  0052AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6161  0052B2  EC4D  F02C         	call	_fputs	;wreg free
  6162  0052B6                     l3576:
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6165  0052B6  C013  F001         	movff	pad@buf,strlen@s
  6166  0052BA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6167  0052BE  EC68  F02D         	call	_strlen	;wreg free
  6168  0052C2  501A               	movf	pad@w^0,w,c
  6169  0052C4  2401               	addwf	?_strlen^0,w,c
  6170  0052C6  6E11               	movwf	?_pad^0,c
  6171  0052C8  501B               	movf	(pad@w+1)^0,w,c
  6172  0052CA  2002               	addwfc	(?_strlen+1)^0,w,c
  6173  0052CC  6E12               	movwf	(?_pad+1)^0,c
  6174  0052CE  0012               	return		;funcret
  6175  0052D0                     __end_of_pad:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function _strlen *****************
  6179 ;; Defined at:
  6180 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6183 ;;		 -> dbuf(32), 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6186 ;;		 -> dbuf(32), 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  2    0[COMRAM] unsigned int 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;Total ram usage:        4 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 1
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_pad
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text18
  6211  005AD0                     __ptext18:
  6212                           	callstack 0
  6213  005AD0                     _strlen:
  6214                           	callstack 22
  6215  005AD0  C001  F003         	movff	strlen@s,strlen@a
  6216  005AD4  C002  F004         	movff	strlen@s+1,strlen@a+1
  6217  005AD8  EF70  F02D         	goto	l3472
  6218  005ADC                     l3470:
  6219  005ADC  4A01               	infsnz	strlen@s^0,f,c
  6220  005ADE  2A02               	incf	(strlen@s+1)^0,f,c
  6221  005AE0                     l3472:
  6222  005AE0  C001  FFD9         	movff	strlen@s,fsr2l
  6223  005AE4  C002  FFDA         	movff	strlen@s+1,fsr2h
  6224  005AE8  50DF               	movf	indf2,w,c
  6225  005AEA  A4D8               	btfss	status,2,c
  6226  005AEC  EF7A  F02D         	goto	u3011
  6227  005AF0  EF7C  F02D         	goto	u3010
  6228  005AF4                     u3011:
  6229  005AF4  EF6E  F02D         	goto	l3470
  6230  005AF8                     u3010:
  6231  005AF8  5003               	movf	strlen@a^0,w,c
  6232  005AFA  5C01               	subwf	strlen@s^0,w,c
  6233  005AFC  6E01               	movwf	?_strlen^0,c
  6234  005AFE  5004               	movf	(strlen@a+1)^0,w,c
  6235  005B00  5802               	subwfb	(strlen@s+1)^0,w,c
  6236  005B02  6E02               	movwf	(?_strlen+1)^0,c
  6237  005B04  0012               	return		;funcret
  6238  005B06                     __end_of_strlen:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _fputs *****************
  6242 ;; Defined at:
  6243 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6246 ;;		 -> dbuf(32), 
  6247 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6248 ;;		 -> sprintf@f(11), 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  i               2   14[COMRAM] int 
  6251 ;;  c               1   13[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  2    9[COMRAM] int 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;Total ram usage:        7 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 3
  6268 ;; This function calls:
  6269 ;;		_fputc
  6270 ;; This function is called by:
  6271 ;;		_pad
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text19
  6276  00589A                     __ptext19:
  6277                           	callstack 0
  6278  00589A                     _fputs:
  6279                           	callstack 20
  6280  00589A  0E00               	movlw	0
  6281  00589C  6E10               	movwf	(fputs@i+1)^0,c
  6282  00589E  0E00               	movlw	0
  6283  0058A0  6E0F               	movwf	fputs@i^0,c
  6284  0058A2  EF5E  F02C         	goto	l3466
  6285  0058A6                     l3462:
  6286  0058A6  C00E  F001         	movff	fputs@c,fputc@c
  6287  0058AA  6A02               	clrf	(fputc@c+1)^0,c
  6288  0058AC  C00C  F003         	movff	fputs@fp,fputc@fp
  6289  0058B0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6290  0058B4  EC3D  F028         	call	_fputc	;wreg free
  6291  0058B8  4A0F               	infsnz	fputs@i^0,f,c
  6292  0058BA  2A10               	incf	(fputs@i+1)^0,f,c
  6293  0058BC                     l3466:
  6294  0058BC  500F               	movf	fputs@i^0,w,c
  6295  0058BE  240A               	addwf	fputs@s^0,w,c
  6296  0058C0  6ED9               	movwf	fsr2l,c
  6297  0058C2  5010               	movf	(fputs@i+1)^0,w,c
  6298  0058C4  200B               	addwfc	(fputs@s+1)^0,w,c
  6299  0058C6  6EDA               	movwf	fsr2h,c
  6300  0058C8  50DF               	movf	indf2,w,c
  6301  0058CA  6E0E               	movwf	fputs@c^0,c
  6302  0058CC  500E               	movf	fputs@c^0,w,c
  6303  0058CE  A4D8               	btfss	status,2,c
  6304  0058D0  EF6C  F02C         	goto	u3001
  6305  0058D4  EF6E  F02C         	goto	u3000
  6306  0058D8                     u3001:
  6307  0058D8  EF53  F02C         	goto	l3462
  6308  0058DC                     u3000:
  6309  0058DC  0012               	return		;funcret
  6310  0058DE                     __end_of_fputs:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _fputc *****************
  6314 ;; Defined at:
  6315 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  c               2    0[COMRAM] int 
  6318 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6319 ;;		 -> sprintf@f(11), 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  2    0[COMRAM] int 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;Total ram usage:        9 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 2
  6338 ;; This function calls:
  6339 ;;		_putch
  6340 ;; This function is called by:
  6341 ;;		_pad
  6342 ;;		_vfpfcnvrt
  6343 ;;		_fputs
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text20
  6348  00507A                     __ptext20:
  6349                           	callstack 0
  6350  00507A                     _fputc:
  6351                           	callstack 23
  6352  00507A  5003               	movf	fputc@fp^0,w,c
  6353  00507C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6354  00507E  B4D8               	btfsc	status,2,c
  6355  005080  EF44  F028         	goto	u2961
  6356  005084  EF46  F028         	goto	u2960
  6357  005088                     u2961:
  6358  005088  EF4F  F028         	goto	l3450
  6359  00508C                     u2960:
  6360  00508C  5003               	movf	fputc@fp^0,w,c
  6361  00508E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6362  005090  A4D8               	btfss	status,2,c
  6363  005092  EF4D  F028         	goto	u2971
  6364  005096  EF4F  F028         	goto	u2970
  6365  00509A                     u2971:
  6366  00509A  EF54  F028         	goto	l3452
  6367  00509E                     u2970:
  6368  00509E                     l3450:
  6369  00509E  5001               	movf	fputc@c^0,w,c
  6370  0050A0  ECC8  F02E         	call	_putch
  6371  0050A4  EFA1  F028         	goto	l1414
  6372  0050A8                     l3452:
  6373  0050A8  EE20 F009          	lfsr	2,9
  6374  0050AC  5003               	movf	fputc@fp^0,w,c
  6375  0050AE  26D9               	addwf	fsr2l,f,c
  6376  0050B0  5004               	movf	(fputc@fp+1)^0,w,c
  6377  0050B2  22DA               	addwfc	fsr2h,f,c
  6378  0050B4  50DE               	movf	postinc2,w,c
  6379  0050B6  10DE               	iorwf	postinc2,w,c
  6380  0050B8  B4D8               	btfsc	status,2,c
  6381  0050BA  EF61  F028         	goto	u2981
  6382  0050BE  EF63  F028         	goto	u2980
  6383  0050C2                     u2981:
  6384  0050C2  EF7E  F028         	goto	l3456
  6385  0050C6                     u2980:
  6386  0050C6  EE20 F009          	lfsr	2,9
  6387  0050CA  5003               	movf	fputc@fp^0,w,c
  6388  0050CC  26D9               	addwf	fsr2l,f,c
  6389  0050CE  5004               	movf	(fputc@fp+1)^0,w,c
  6390  0050D0  22DA               	addwfc	fsr2h,f,c
  6391  0050D2  EE10 F003          	lfsr	1,3
  6392  0050D6  5003               	movf	fputc@fp^0,w,c
  6393  0050D8  26E1               	addwf	fsr1l,f,c
  6394  0050DA  5004               	movf	(fputc@fp+1)^0,w,c
  6395  0050DC  22E2               	addwfc	fsr1h,f,c
  6396  0050DE  50DE               	movf	postinc2,w,c
  6397  0050E0  5CE6               	subwf	postinc1,w,c
  6398  0050E2  50E6               	movf	postinc1,w,c
  6399  0050E4  0A80               	xorlw	128
  6400  0050E6  6E09               	movwf	(??_fputc+4)^0,c
  6401  0050E8  50DE               	movf	postinc2,w,c
  6402  0050EA  0A80               	xorlw	128
  6403  0050EC  5809               	subwfb	(??_fputc+4)^0,w,c
  6404  0050EE  B0D8               	btfsc	status,0,c
  6405  0050F0  EF7C  F028         	goto	u2991
  6406  0050F4  EF7E  F028         	goto	u2990
  6407  0050F8                     u2991:
  6408  0050F8  EFA1  F028         	goto	l1414
  6409  0050FC                     u2990:
  6410  0050FC                     l3456:
  6411  0050FC  EE20 F003          	lfsr	2,3
  6412  005100  5003               	movf	fputc@fp^0,w,c
  6413  005102  26D9               	addwf	fsr2l,f,c
  6414  005104  5004               	movf	(fputc@fp+1)^0,w,c
  6415  005106  22DA               	addwfc	fsr2h,f,c
  6416  005108  CFDE F005          	movff	postinc2,??_fputc
  6417  00510C  CFDD F006          	movff	postdec2,??_fputc+1
  6418  005110  C003  FFD9         	movff	fputc@fp,fsr2l
  6419  005114  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6420  005118  CFDE F007          	movff	postinc2,??_fputc+2
  6421  00511C  CFDD F008          	movff	postdec2,??_fputc+3
  6422  005120  5005               	movf	??_fputc^0,w,c
  6423  005122  2407               	addwf	(??_fputc+2)^0,w,c
  6424  005124  6ED9               	movwf	fsr2l,c
  6425  005126  5006               	movf	(??_fputc+1)^0,w,c
  6426  005128  2008               	addwfc	(??_fputc+3)^0,w,c
  6427  00512A  6EDA               	movwf	fsr2h,c
  6428  00512C  C001  FFDF         	movff	fputc@c,indf2
  6429  005130  EE20 F003          	lfsr	2,3
  6430  005134  5003               	movf	fputc@fp^0,w,c
  6431  005136  26D9               	addwf	fsr2l,f,c
  6432  005138  5004               	movf	(fputc@fp+1)^0,w,c
  6433  00513A  22DA               	addwfc	fsr2h,f,c
  6434  00513C  2ADE               	incf	postinc2,f,c
  6435  00513E  0E00               	movlw	0
  6436  005140  22DD               	addwfc	postdec2,f,c
  6437  005142                     l1414:
  6438  005142  0012               	return		;funcret
  6439  005144                     __end_of_fputc:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _putch *****************
  6443 ;; Defined at:
  6444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  c               1    wreg     unsigned char 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  c               1    0[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_fputc
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text21
  6473  005D90                     __ptext21:
  6474                           	callstack 0
  6475  005D90                     _putch:
  6476                           	callstack 23
  6477  005D90  0012               	return		;funcret
  6478  005D92                     __end_of_putch:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _abs *****************
  6482 ;; Defined at:
  6483 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  a               2   18[COMRAM] int 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2   18[COMRAM] int 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;Total ram usage:        4 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; Hardware stack levels required when called: 1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_dtoa
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text22
  6512  0059E4                     __ptext22:
  6513                           	callstack 0
  6514  0059E4                     _abs:
  6515                           	callstack 23
  6516  0059E4  BE14               	btfsc	(abs@a+1)^0,7,c
  6517  0059E6  EFFF  F02C         	goto	u3190
  6518  0059EA  5014               	movf	(abs@a+1)^0,w,c
  6519  0059EC  E106               	bnz	u3191
  6520  0059EE  0413               	decf	abs@a^0,w,c
  6521  0059F0  B0D8               	btfsc	status,0,c
  6522  0059F2  EFFD  F02C         	goto	u3191
  6523  0059F6  EFFF  F02C         	goto	u3190
  6524  0059FA                     u3191:
  6525  0059FA  EF0D  F02D         	goto	l1399
  6526  0059FE                     u3190:
  6527  0059FE  C013  F015         	movff	abs@a,??_abs
  6528  005A02  C014  F016         	movff	abs@a+1,??_abs+1
  6529  005A06  1E15               	comf	??_abs^0,f,c
  6530  005A08  1E16               	comf	(??_abs+1)^0,f,c
  6531  005A0A  4A15               	infsnz	??_abs^0,f,c
  6532  005A0C  2A16               	incf	(??_abs+1)^0,f,c
  6533  005A0E  C015  F013         	movff	??_abs,?_abs
  6534  005A12  C016  F014         	movff	??_abs+1,?_abs+1
  6535  005A16  EF11  F02D         	goto	l1402
  6536  005A1A                     l1399:
  6537  005A1A  C013  F013         	movff	abs@a,?_abs
  6538  005A1E  C014  F014         	movff	abs@a+1,?_abs+1
  6539  005A22                     l1402:
  6540  005A22  0012               	return		;funcret
  6541  005A24                     __end_of_abs:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function ___aomod *****************
  6545 ;; Defined at:
  6546 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  dividend        8    0[COMRAM] long long 
  6549 ;;  divisor         8    8[COMRAM] long long 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  sign            1   17[COMRAM] unsigned char 
  6552 ;;  counter         1   16[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  8    0[COMRAM] long long 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6562 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;Total ram usage:       18 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 1
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_dtoa
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text23
  6577  00464A                     __ptext23:
  6578                           	callstack 0
  6579  00464A                     ___aomod:
  6580                           	callstack 23
  6581  00464A  0E00               	movlw	0
  6582  00464C  6E12               	movwf	___aomod@sign^0,c
  6583  00464E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6584  004650  EF2E  F023         	goto	u3090
  6585  004654  EF2C  F023         	goto	u3091
  6586  004658                     u3091:
  6587  004658  EF40  F023         	goto	l3530
  6588  00465C                     u3090:
  6589  00465C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6590  00465E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6591  004660  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6592  004662  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6593  004664  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6594  004666  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6595  004668  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6596  00466A  6C01               	negf	___aomod@dividend^0,c
  6597  00466C  0E00               	movlw	0
  6598  00466E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6599  004670  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6600  004672  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6601  004674  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6602  004676  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6603  004678  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6604  00467A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6605  00467C  0E01               	movlw	1
  6606  00467E  6E12               	movwf	___aomod@sign^0,c
  6607  004680                     l3530:
  6608  004680  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6609  004682  EF47  F023         	goto	u3100
  6610  004686  EF45  F023         	goto	u3101
  6611  00468A                     u3101:
  6612  00468A  EF57  F023         	goto	l3534
  6613  00468E                     u3100:
  6614  00468E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6615  004690  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6616  004692  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6617  004694  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6618  004696  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6619  004698  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6620  00469A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6621  00469C  6C09               	negf	___aomod@divisor^0,c
  6622  00469E  0E00               	movlw	0
  6623  0046A0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6624  0046A2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6625  0046A4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6626  0046A6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6627  0046A8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6628  0046AA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6629  0046AC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6630  0046AE                     l3534:
  6631  0046AE  5009               	movf	___aomod@divisor^0,w,c
  6632  0046B0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6633  0046B2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6634  0046B4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6635  0046B6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6636  0046B8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6637  0046BA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6638  0046BC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6639  0046BE  B4D8               	btfsc	status,2,c
  6640  0046C0  EF64  F023         	goto	u3111
  6641  0046C4  EF66  F023         	goto	u3110
  6642  0046C8                     u3111:
  6643  0046C8  EFAE  F023         	goto	l3550
  6644  0046CC                     u3110:
  6645  0046CC  0E01               	movlw	1
  6646  0046CE  6E11               	movwf	___aomod@counter^0,c
  6647  0046D0  EF74  F023         	goto	l3540
  6648  0046D4                     l3538:
  6649  0046D4  90D8               	bcf	status,0,c
  6650  0046D6  3609               	rlcf	___aomod@divisor^0,f,c
  6651  0046D8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6652  0046DA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6653  0046DC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6654  0046DE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6655  0046E0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6656  0046E2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6657  0046E4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6658  0046E6  2A11               	incf	___aomod@counter^0,f,c
  6659  0046E8                     l3540:
  6660  0046E8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6661  0046EA  EF79  F023         	goto	u3121
  6662  0046EE  EF7B  F023         	goto	u3120
  6663  0046F2                     u3121:
  6664  0046F2  EF6A  F023         	goto	l3538
  6665  0046F6                     u3120:
  6666  0046F6                     l3542:
  6667  0046F6  5009               	movf	___aomod@divisor^0,w,c
  6668  0046F8  5C01               	subwf	___aomod@dividend^0,w,c
  6669  0046FA  500A               	movf	(___aomod@divisor+1)^0,w,c
  6670  0046FC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6671  0046FE  500B               	movf	(___aomod@divisor+2)^0,w,c
  6672  004700  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6673  004702  500C               	movf	(___aomod@divisor+3)^0,w,c
  6674  004704  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6675  004706  500D               	movf	(___aomod@divisor+4)^0,w,c
  6676  004708  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6677  00470A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6678  00470C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6679  00470E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6680  004710  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6681  004712  5010               	movf	(___aomod@divisor+7)^0,w,c
  6682  004714  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6683  004716  A0D8               	btfss	status,0,c
  6684  004718  EF90  F023         	goto	u3131
  6685  00471C  EF92  F023         	goto	u3130
  6686  004720                     u3131:
  6687  004720  EFA2  F023         	goto	l3546
  6688  004724                     u3130:
  6689  004724  5009               	movf	___aomod@divisor^0,w,c
  6690  004726  5E01               	subwf	___aomod@dividend^0,f,c
  6691  004728  500A               	movf	(___aomod@divisor+1)^0,w,c
  6692  00472A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6693  00472C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6694  00472E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6695  004730  500C               	movf	(___aomod@divisor+3)^0,w,c
  6696  004732  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6697  004734  500D               	movf	(___aomod@divisor+4)^0,w,c
  6698  004736  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6699  004738  500E               	movf	(___aomod@divisor+5)^0,w,c
  6700  00473A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6701  00473C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6702  00473E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6703  004740  5010               	movf	(___aomod@divisor+7)^0,w,c
  6704  004742  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6705  004744                     l3546:
  6706  004744  90D8               	bcf	status,0,c
  6707  004746  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6708  004748  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6709  00474A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6710  00474C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6711  00474E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6712  004750  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6713  004752  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6714  004754  3209               	rrcf	___aomod@divisor^0,f,c
  6715  004756  2E11               	decfsz	___aomod@counter^0,f,c
  6716  004758  EF7B  F023         	goto	l3542
  6717  00475C                     l3550:
  6718  00475C  5012               	movf	___aomod@sign^0,w,c
  6719  00475E  B4D8               	btfsc	status,2,c
  6720  004760  EFB4  F023         	goto	u3141
  6721  004764  EFB6  F023         	goto	u3140
  6722  004768                     u3141:
  6723  004768  EFC6  F023         	goto	l3554
  6724  00476C                     u3140:
  6725  00476C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6726  00476E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6727  004770  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6728  004772  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6729  004774  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6730  004776  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6731  004778  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6732  00477A  6C01               	negf	___aomod@dividend^0,c
  6733  00477C  0E00               	movlw	0
  6734  00477E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6735  004780  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6736  004782  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6737  004784  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6738  004786  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6739  004788  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6740  00478A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6741  00478C                     l3554:
  6742  00478C  C001  F001         	movff	___aomod@dividend,?___aomod
  6743  004790  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6744  004794  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6745  004798  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6746  00479C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6747  0047A0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6748  0047A4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6749  0047A8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6750  0047AC  0012               	return		;funcret
  6751  0047AE                     __end_of___aomod:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function ___aodiv *****************
  6755 ;; Defined at:
  6756 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  dividend        8    0[COMRAM] long long 
  6759 ;;  divisor         8    8[COMRAM] long long 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  quotient        8   18[COMRAM] long long 
  6762 ;;  sign            1   17[COMRAM] unsigned char 
  6763 ;;  counter         1   16[COMRAM] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  8    0[COMRAM] long long 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6773 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;Total ram usage:       26 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; Hardware stack levels required when called: 1
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_dtoa
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text24
  6788  0044C2                     __ptext24:
  6789                           	callstack 0
  6790  0044C2                     ___aodiv:
  6791                           	callstack 23
  6792  0044C2  0E00               	movlw	0
  6793  0044C4  6E12               	movwf	___aodiv@sign^0,c
  6794  0044C6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6795  0044C8  EF6A  F022         	goto	u3020
  6796  0044CC  EF68  F022         	goto	u3021
  6797  0044D0                     u3021:
  6798  0044D0  EF7C  F022         	goto	l3486
  6799  0044D4                     u3020:
  6800  0044D4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6801  0044D6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6802  0044D8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6803  0044DA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6804  0044DC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6805  0044DE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6806  0044E0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6807  0044E2  6C09               	negf	___aodiv@divisor^0,c
  6808  0044E4  0E00               	movlw	0
  6809  0044E6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6810  0044E8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6811  0044EA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6812  0044EC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6813  0044EE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6814  0044F0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6815  0044F2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6816  0044F4  0E01               	movlw	1
  6817  0044F6  6E12               	movwf	___aodiv@sign^0,c
  6818  0044F8                     l3486:
  6819  0044F8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6820  0044FA  EF83  F022         	goto	u3030
  6821  0044FE  EF81  F022         	goto	u3031
  6822  004502                     u3031:
  6823  004502  EF95  F022         	goto	l3492
  6824  004506                     u3030:
  6825  004506  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6826  004508  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6827  00450A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6828  00450C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6829  00450E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6830  004510  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6831  004512  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6832  004514  6C01               	negf	___aodiv@dividend^0,c
  6833  004516  0E00               	movlw	0
  6834  004518  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6835  00451A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6836  00451C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6837  00451E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6838  004520  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6839  004522  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6840  004524  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6841  004526  0E01               	movlw	1
  6842  004528  1A12               	xorwf	___aodiv@sign^0,f,c
  6843  00452A                     l3492:
  6844  00452A  EE20  F013         	lfsr	2,___aodiv@quotient
  6845  00452E  0E07               	movlw	7
  6846  004530                     u3041:
  6847  004530  6ADE               	clrf	postinc2,c
  6848  004532  06E8               	decf	wreg,f,c
  6849  004534  E2FD               	bc	u3041
  6850  004536  5009               	movf	___aodiv@divisor^0,w,c
  6851  004538  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6852  00453A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6853  00453C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6854  00453E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6855  004540  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6856  004542  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6857  004544  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6858  004546  B4D8               	btfsc	status,2,c
  6859  004548  EFA8  F022         	goto	u3051
  6860  00454C  EFAA  F022         	goto	u3050
  6861  004550                     u3051:
  6862  004550  EFFC  F022         	goto	l3514
  6863  004554                     u3050:
  6864  004554  0E01               	movlw	1
  6865  004556  6E11               	movwf	___aodiv@counter^0,c
  6866  004558  EFB8  F022         	goto	l3500
  6867  00455C                     l3498:
  6868  00455C  90D8               	bcf	status,0,c
  6869  00455E  3609               	rlcf	___aodiv@divisor^0,f,c
  6870  004560  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6871  004562  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6872  004564  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6873  004566  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6874  004568  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6875  00456A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6876  00456C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6877  00456E  2A11               	incf	___aodiv@counter^0,f,c
  6878  004570                     l3500:
  6879  004570  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6880  004572  EFBD  F022         	goto	u3061
  6881  004576  EFBF  F022         	goto	u3060
  6882  00457A                     u3061:
  6883  00457A  EFAE  F022         	goto	l3498
  6884  00457E                     u3060:
  6885  00457E                     l3502:
  6886  00457E  90D8               	bcf	status,0,c
  6887  004580  3613               	rlcf	___aodiv@quotient^0,f,c
  6888  004582  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6889  004584  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6890  004586  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6891  004588  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6892  00458A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6893  00458C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6894  00458E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6895  004590  5009               	movf	___aodiv@divisor^0,w,c
  6896  004592  5C01               	subwf	___aodiv@dividend^0,w,c
  6897  004594  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6898  004596  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6899  004598  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6900  00459A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6901  00459C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6902  00459E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6903  0045A0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6904  0045A2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6905  0045A4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6906  0045A6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6907  0045A8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6908  0045AA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6909  0045AC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6910  0045AE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6911  0045B0  A0D8               	btfss	status,0,c
  6912  0045B2  EFDD  F022         	goto	u3071
  6913  0045B6  EFDF  F022         	goto	u3070
  6914  0045BA                     u3071:
  6915  0045BA  EFF0  F022         	goto	l3510
  6916  0045BE                     u3070:
  6917  0045BE  5009               	movf	___aodiv@divisor^0,w,c
  6918  0045C0  5E01               	subwf	___aodiv@dividend^0,f,c
  6919  0045C2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6920  0045C4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6921  0045C6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6922  0045C8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6923  0045CA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6924  0045CC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6925  0045CE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6926  0045D0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6927  0045D2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6928  0045D4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6929  0045D6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6930  0045D8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6931  0045DA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6932  0045DC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6933  0045DE  8013               	bsf	___aodiv@quotient^0,0,c
  6934  0045E0                     l3510:
  6935  0045E0  90D8               	bcf	status,0,c
  6936  0045E2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6937  0045E4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6938  0045E6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6939  0045E8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6940  0045EA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6941  0045EC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6942  0045EE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6943  0045F0  3209               	rrcf	___aodiv@divisor^0,f,c
  6944  0045F2  2E11               	decfsz	___aodiv@counter^0,f,c
  6945  0045F4  EFBF  F022         	goto	l3502
  6946  0045F8                     l3514:
  6947  0045F8  5012               	movf	___aodiv@sign^0,w,c
  6948  0045FA  B4D8               	btfsc	status,2,c
  6949  0045FC  EF02  F023         	goto	u3081
  6950  004600  EF04  F023         	goto	u3080
  6951  004604                     u3081:
  6952  004604  EF14  F023         	goto	l3518
  6953  004608                     u3080:
  6954  004608  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6955  00460A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6956  00460C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6957  00460E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6958  004610  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6959  004612  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6960  004614  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6961  004616  6C13               	negf	___aodiv@quotient^0,c
  6962  004618  0E00               	movlw	0
  6963  00461A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6964  00461C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6965  00461E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6966  004620  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6967  004622  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6968  004624  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6969  004626  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6970  004628                     l3518:
  6971  004628  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6972  00462C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6973  004630  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6974  004634  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6975  004638  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6976  00463C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6977  004640  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6978  004644  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6979  004648  0012               	return		;funcret
  6980  00464A                     __end_of___aodiv:
  6981                           	callstack 0
  6982                           
  6983 ;; *************** function _sendStringSerial4 *****************
  6984 ;; Defined at:
  6985 ;;		line 35 in file "serial.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  string          2    1[COMRAM] PTR unsigned char 
  6988 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:        2 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 2
  7007 ;; This function calls:
  7008 ;;		_sendCharSerial4
  7009 ;; This function is called by:
  7010 ;;		_color_display
  7011 ;;		_color_predict
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text25
  7016  005B6E                     __ptext25:
  7017                           	callstack 0
  7018  005B6E                     _sendStringSerial4:
  7019                           	callstack 26
  7020  005B6E                     
  7021                           ;serial.c: 37:     while(*string != 0){
  7022  005B6E  EFC2  F02D         	goto	l4230
  7023  005B72                     l4226:
  7024                           
  7025                           ;serial.c: 38:   sendCharSerial4(*string++);}
  7026  005B72  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7027  005B76  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7028  005B7A  50DF               	movf	indf2,w,c
  7029  005B7C  ECA0  F02E         	call	_sendCharSerial4
  7030  005B80  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7031  005B82  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7032  005B84                     l4230:
  7033                           
  7034                           ;serial.c: 37:     while(*string != 0){
  7035  005B84  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7036  005B88  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7037  005B8C  50DF               	movf	indf2,w,c
  7038  005B8E  A4D8               	btfss	status,2,c
  7039  005B90  EFCC  F02D         	goto	u4231
  7040  005B94  EFCE  F02D         	goto	u4230
  7041  005B98                     u4231:
  7042  005B98  EFB9  F02D         	goto	l4226
  7043  005B9C                     u4230:
  7044  005B9C  0012               	return		;funcret
  7045  005B9E                     __end_of_sendStringSerial4:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _sendCharSerial4 *****************
  7049 ;; Defined at:
  7050 ;;		line 29 in file "serial.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  charToSend      1    wreg     unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  charToSend      1    0[COMRAM] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        1 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_sendStringSerial4
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text26
  7079  005D40                     __ptext26:
  7080                           	callstack 0
  7081  005D40                     _sendCharSerial4:
  7082                           	callstack 26
  7083                           
  7084                           ;incstack = 0
  7085                           ;sendCharSerial4@charToSend stored from wreg
  7086  005D40  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7087  005D42                     l340:
  7088  005D42  010E               	movlb	14	; () banked
  7089  005D44  A537               	btfss	55,2,b	;volatile
  7090  005D46  EFA7  F02E         	goto	u3961
  7091  005D4A  EFA9  F02E         	goto	u3960
  7092  005D4E                     u3961:
  7093  005D4E  EFA1  F02E         	goto	l340
  7094  005D52                     u3960:
  7095  005D52                     
  7096                           ; BSR set to: 14
  7097                           ;serial.c: 31:     TX4REG = charToSend;
  7098  005D52  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7099  005D56                     
  7100                           ; BSR set to: 14
  7101  005D56  0012               	return		;funcret
  7102  005D58                     __end_of_sendCharSerial4:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _short_burst *****************
  7106 ;; Defined at:
  7107 ;;		line 11 in file "movement.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7110 ;;		 -> main@motorL(9), 
  7111 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7112 ;;		 -> main@motorR(9), 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;		None
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;Total ram usage:        6 bytes
  7129 ;; Hardware stack levels used: 1
  7130 ;; Hardware stack levels required when called: 4
  7131 ;; This function calls:
  7132 ;;		_fullSpeedAhead
  7133 ;;		_stop
  7134 ;; This function is called by:
  7135 ;;		_main
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text27
  7140  0058DE                     __ptext27:
  7141                           	callstack 0
  7142  0058DE                     _short_burst:
  7143                           	callstack 26
  7144  0058DE                     
  7145                           ;movement.c: 11: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          12: {;movement.c: 13:     fullSpeedAhead(mL,mR);
  7146  0058DE  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7147  0058E2  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7148  0058E6  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7149  0058EA  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7150  0058EE  EC68  F029         	call	_fullSpeedAhead	;wreg free
  7151  0058F2                     
  7152                           ;movement.c: 14:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7153  0058F2  0E21               	movlw	33
  7154  0058F4  6E25               	movwf	(??_short_burst+1)^0,c
  7155  0058F6  0E78               	movlw	120
  7156  0058F8  6E24               	movwf	??_short_burst^0,c
  7157  0058FA  0E98               	movlw	152
  7158  0058FC                     u6087:
  7159  0058FC  2EE8               	decfsz	wreg,f,c
  7160  0058FE  D7FE               	bra	u6087
  7161  005900  2E24               	decfsz	??_short_burst^0,f,c
  7162  005902  D7FC               	bra	u6087
  7163  005904  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7164  005906  D7FA               	bra	u6087
  7165  005908  D000               	nop2	
  7166  00590A                     
  7167                           ;movement.c: 15:     stop(mL,mR);
  7168  00590A  C020  F01A         	movff	short_burst@mL,stop@mL
  7169  00590E  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7170  005912  C022  F01C         	movff	short_burst@mR,stop@mR
  7171  005916  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7172  00591A  EC2C  F02A         	call	_stop	;wreg free
  7173  00591E  0012               	return		;funcret
  7174  005920                     __end_of_short_burst:
  7175                           	callstack 0
  7176                           
  7177 ;; *************** function _setup *****************
  7178 ;; Defined at:
  7179 ;;		line 9 in file "test_and_calibration.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  white           2   24[BANK0 ] PTR struct white_card
  7182 ;;		 -> main@white(28), 
  7183 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7184 ;;		 -> main@amb(8), 
  7185 ;;  mL              2   28[BANK0 ] PTR struct DC_motor
  7186 ;;		 -> main@motorL(9), 
  7187 ;;  mR              2   30[BANK0 ] PTR struct DC_motor
  7188 ;;		 -> main@motorR(9), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  amb_light       2   34[BANK0 ] unsigned int 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  2   24[BANK0 ] unsigned int 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7200 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;Total ram usage:       12 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; Hardware stack levels required when called: 7
  7207 ;; This function calls:
  7208 ;;		_LED_OFF
  7209 ;;		_amb_light_measure
  7210 ;;		_calibrate_white
  7211 ;;		_calibration_motor
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text28
  7218  0047AE                     __ptext28:
  7219                           	callstack 0
  7220  0047AE                     _setup:
  7221                           	callstack 23
  7222  0047AE                     
  7223                           ;test_and_calibration.c: 9: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 10: {;test_and_ca
      +                          libration.c: 11:     unsigned int amb_light = 0;
  7224  0047AE  0E00               	movlw	0
  7225  0047B0  0100               	movlb	0	; () banked
  7226  0047B2  6F83               	movwf	(setup@amb_light+1)& (0+255),b
  7227  0047B4  0E00               	movlw	0
  7228  0047B6  6F82               	movwf	setup@amb_light& (0+255),b
  7229  0047B8                     
  7230                           ; BSR set to: 0
  7231                           ;test_and_calibration.c: 12:     LED_OFF();
  7232  0047B8  EC32  F02E         	call	_LED_OFF	;wreg free
  7233  0047BC                     
  7234                           ;test_and_calibration.c: 13:     LATDbits.LATD7 = 1;
  7235  0047BC  8E7C               	bsf	124,7,c	;volatile
  7236  0047BE                     
  7237                           ;test_and_calibration.c: 14:     LATHbits.LATH3 = 1;
  7238  0047BE  8680               	bsf	128,3,c	;volatile
  7239  0047C0                     l574:
  7240  0047C0  B48E               	btfsc	142,2,c	;volatile
  7241  0047C2  EFE5  F023         	goto	u5571
  7242  0047C6  EFE7  F023         	goto	u5570
  7243  0047CA                     u5571:
  7244  0047CA  EFE0  F023         	goto	l574
  7245  0047CE                     u5570:
  7246  0047CE                     
  7247                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7248  0047CE  B48E               	btfsc	142,2,c	;volatile
  7249  0047D0  EFEC  F023         	goto	u5581
  7250  0047D4  EFEE  F023         	goto	u5580
  7251  0047D8                     u5581:
  7252  0047D8  EF01  F024         	goto	l578
  7253  0047DC                     u5580:
  7254  0047DC  C078  F00C         	movff	setup@white,calibrate_white@w
  7255  0047E0  C079  F00D         	movff	setup@white+1,calibrate_white@w+1
  7256  0047E4  EC48  F01C         	call	_calibrate_white	;wreg free
  7257  0047E8  9E7C               	bcf	124,7,c	;volatile
  7258  0047EA  0E29               	movlw	41
  7259  0047EC  0100               	movlb	0	; () banked
  7260  0047EE  6F81               	movwf	(??_setup+1)& (0+255),b
  7261  0047F0  0E96               	movlw	150
  7262  0047F2  6F80               	movwf	??_setup& (0+255),b
  7263  0047F4  0E7F               	movlw	127
  7264  0047F6                     u6097:
  7265  0047F6  2EE8               	decfsz	wreg,f,c
  7266  0047F8  D7FE               	bra	u6097
  7267  0047FA  2F80               	decfsz	??_setup& (0+255),f,b
  7268  0047FC  D7FC               	bra	u6097
  7269  0047FE  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7270  004800  D7FA               	bra	u6097
  7271  004802                     l578:
  7272  004802  B68E               	btfsc	142,3,c	;volatile
  7273  004804  EF06  F024         	goto	u5591
  7274  004808  EF08  F024         	goto	u5590
  7275  00480C                     u5591:
  7276  00480C  EF01  F024         	goto	l578
  7277  004810                     u5590:
  7278  004810                     
  7279                           ;test_and_calibration.c: 20:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7280  004810  B68E               	btfsc	142,3,c	;volatile
  7281  004812  EF0D  F024         	goto	u5601
  7282  004816  EF0F  F024         	goto	u5600
  7283  00481A                     u5601:
  7284  00481A  EF49  F024         	goto	l5214
  7285  00481E                     u5600:
  7286  00481E  C07A  F06A         	movff	setup@amb,amb_light_measure@amb
  7287  004822  C07B  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7288  004826  ECC3  F025         	call	_amb_light_measure	;wreg free
  7289  00482A  C06A  F082         	movff	?_amb_light_measure,setup@amb_light
  7290  00482E  C06B  F083         	movff	?_amb_light_measure+1,setup@amb_light+1
  7291  004832  9680               	bcf	128,3,c	;volatile
  7292  004834  0E29               	movlw	41
  7293  004836  0100               	movlb	0	; () banked
  7294  004838  6F81               	movwf	(??_setup+1)& (0+255),b
  7295  00483A  0E96               	movlw	150
  7296  00483C  6F80               	movwf	??_setup& (0+255),b
  7297  00483E  0E7F               	movlw	127
  7298  004840                     u6107:
  7299  004840  2EE8               	decfsz	wreg,f,c
  7300  004842  D7FE               	bra	u6107
  7301  004844  2F80               	decfsz	??_setup& (0+255),f,b
  7302  004846  D7FC               	bra	u6107
  7303  004848  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7304  00484A  D7FA               	bra	u6107
  7305  00484C  EF49  F024         	goto	l5214
  7306  004850                     l584:
  7307  004850  8E7C               	bsf	124,7,c	;volatile
  7308  004852  A680               	btfss	128,3,c	;volatile
  7309  004854  EF2E  F024         	goto	u5611
  7310  004858  EF33  F024         	goto	u5610
  7311  00485C                     u5611:
  7312  00485C  0100               	movlb	0	; () banked
  7313  00485E  6B80               	clrf	??_setup& (0+255),b
  7314  004860  2B80               	incf	??_setup& (0+255),f,b
  7315  004862  EF35  F024         	goto	u5628
  7316  004866                     u5610:
  7317  004866  0100               	movlb	0	; () banked
  7318  004868  6B80               	clrf	??_setup& (0+255),b
  7319  00486A                     u5628:
  7320  00486A  4780               	rlncf	??_setup& (0+255),f,b
  7321  00486C  4780               	rlncf	??_setup& (0+255),f,b
  7322  00486E  4780               	rlncf	??_setup& (0+255),f,b
  7323  004870  5080               	movf	128,w,c	;volatile
  7324  004872  1980               	xorwf	??_setup& (0+255),w,b
  7325  004874  0BF7               	andlw	-9
  7326  004876  1980               	xorwf	??_setup& (0+255),w,b
  7327  004878  6E80               	movwf	128,c	;volatile
  7328  00487A                     
  7329                           ; BSR set to: 0
  7330  00487A  0E11               	movlw	17
  7331  00487C  0100               	movlb	0	; () banked
  7332  00487E  6F81               	movwf	(??_setup+1)& (0+255),b
  7333  004880  0E3C               	movlw	60
  7334  004882  6F80               	movwf	??_setup& (0+255),b
  7335  004884  0ECB               	movlw	203
  7336  004886                     u6117:
  7337  004886  2EE8               	decfsz	wreg,f,c
  7338  004888  D7FE               	bra	u6117
  7339  00488A  2F80               	decfsz	??_setup& (0+255),f,b
  7340  00488C  D7FC               	bra	u6117
  7341  00488E  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7342  004890  D7FA               	bra	u6117
  7343  004892                     l5214:
  7344  004892  A68E               	btfss	142,3,c	;volatile
  7345  004894  EF4E  F024         	goto	u5631
  7346  004898  EF50  F024         	goto	u5630
  7347  00489C                     u5631:
  7348  00489C  EF57  F024         	goto	l587
  7349  0048A0                     u5630:
  7350  0048A0  B48E               	btfsc	142,2,c	;volatile
  7351  0048A2  EF55  F024         	goto	u5641
  7352  0048A6  EF57  F024         	goto	u5640
  7353  0048AA                     u5641:
  7354  0048AA  EF28  F024         	goto	l584
  7355  0048AE                     u5640:
  7356  0048AE                     l587:
  7357                           
  7358                           ;test_and_calibration.c: 25:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7359  0048AE  B68E               	btfsc	142,3,c	;volatile
  7360  0048B0  EF5C  F024         	goto	u5651
  7361  0048B4  EF5E  F024         	goto	u5650
  7362  0048B8                     u5651:
  7363  0048B8  EF69  F024         	goto	l5222
  7364  0048BC                     u5650:
  7365  0048BC  C07C  F032         	movff	setup@mL,calibration_motor@mL
  7366  0048C0  C07D  F033         	movff	setup@mL+1,calibration_motor@mL+1
  7367  0048C4  C07E  F034         	movff	setup@mR,calibration_motor@mR
  7368  0048C8  C07F  F035         	movff	setup@mR+1,calibration_motor@mR+1
  7369  0048CC  EC5D  F027         	call	_calibration_motor	;wreg free
  7370  0048D0  9E7C               	bcf	124,7,c	;volatile
  7371  0048D2                     l5222:
  7372                           
  7373                           ;test_and_calibration.c: 26:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7374  0048D2  B48E               	btfsc	142,2,c	;volatile
  7375  0048D4  EF6E  F024         	goto	u5661
  7376  0048D8  EF70  F024         	goto	u5660
  7377  0048DC                     u5661:
  7378  0048DC  EF49  F024         	goto	l5214
  7379  0048E0                     u5660:
  7380  0048E0  9E7C               	bcf	124,7,c	;volatile
  7381  0048E2  9680               	bcf	128,3,c	;volatile
  7382  0048E4  0E29               	movlw	41
  7383  0048E6  0100               	movlb	0	; () banked
  7384  0048E8  6F81               	movwf	(??_setup+1)& (0+255),b
  7385  0048EA  0E96               	movlw	150
  7386  0048EC  6F80               	movwf	??_setup& (0+255),b
  7387  0048EE  0E7F               	movlw	127
  7388  0048F0                     u6127:
  7389  0048F0  2EE8               	decfsz	wreg,f,c
  7390  0048F2  D7FE               	bra	u6127
  7391  0048F4  2F80               	decfsz	??_setup& (0+255),f,b
  7392  0048F6  D7FC               	bra	u6127
  7393  0048F8  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7394  0048FA  D7FA               	bra	u6127
  7395  0048FC  C082  F078         	movff	setup@amb_light,?_setup
  7396  004900  C083  F079         	movff	setup@amb_light+1,?_setup+1
  7397  004904  0012               	return		;funcret
  7398  004906                     __end_of_setup:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _calibration_motor *****************
  7402 ;; Defined at:
  7403 ;;		line 131 in file "test_and_calibration.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  7406 ;;		 -> main@motorL(9), 
  7407 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  7408 ;;		 -> main@motorR(9), 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;Total ram usage:        6 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 6
  7427 ;; This function calls:
  7428 ;;		_test_action
  7429 ;; This function is called by:
  7430 ;;		_setup
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text29
  7435  004EBA                     __ptext29:
  7436                           	callstack 0
  7437  004EBA                     _calibration_motor:
  7438                           	callstack 23
  7439  004EBA                     l628:
  7440                           
  7441                           ;test_and_calibration.c: 134:         LATDbits.LATD7 = 1;
  7442  004EBA  8E7C               	bsf	124,7,c	;volatile
  7443                           
  7444                           ;test_and_calibration.c: 135:         LATHbits.LATH3 = 1;
  7445  004EBC  8680               	bsf	128,3,c	;volatile
  7446                           
  7447                           ;test_and_calibration.c: 137:         if (!PORTFbits.RF2) {
  7448  004EBE  B48E               	btfsc	142,2,c	;volatile
  7449  004EC0  EF64  F027         	goto	u5461
  7450  004EC4  EF66  F027         	goto	u5460
  7451  004EC8                     u5461:
  7452  004EC8  EF92  F027         	goto	l629
  7453  004ECC                     u5460:
  7454  004ECC                     
  7455                           ;test_and_calibration.c: 138:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7456  004ECC  0E19               	movlw	25
  7457  004ECE  6E37               	movwf	(??_calibration_motor+1)^0,c
  7458  004ED0  0E5A               	movlw	90
  7459  004ED2  6E36               	movwf	??_calibration_motor^0,c
  7460  004ED4  0EB2               	movlw	178
  7461  004ED6                     u6137:
  7462  004ED6  2EE8               	decfsz	wreg,f,c
  7463  004ED8  D7FE               	bra	u6137
  7464  004EDA  2E36               	decfsz	??_calibration_motor^0,f,c
  7465  004EDC  D7FC               	bra	u6137
  7466  004EDE  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7467  004EE0  D7FA               	bra	u6137
  7468  004EE2                     
  7469                           ;test_and_calibration.c: 139:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7470  004EE2  B48E               	btfsc	142,2,c	;volatile
  7471  004EE4  EF76  F027         	goto	u5471
  7472  004EE8  EF78  F027         	goto	u5470
  7473  004EEC                     u5471:
  7474  004EEC  EF89  F027         	goto	l5022
  7475  004EF0                     u5470:
  7476  004EF0  9E7C               	bcf	124,7,c	;volatile
  7477  004EF2  0E19               	movlw	25
  7478  004EF4  6E37               	movwf	(??_calibration_motor+1)^0,c
  7479  004EF6  0E5A               	movlw	90
  7480  004EF8  6E36               	movwf	??_calibration_motor^0,c
  7481  004EFA  0EB2               	movlw	178
  7482  004EFC                     u6147:
  7483  004EFC  2EE8               	decfsz	wreg,f,c
  7484  004EFE  D7FE               	bra	u6147
  7485  004F00  2E36               	decfsz	??_calibration_motor^0,f,c
  7486  004F02  D7FC               	bra	u6147
  7487  004F04  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7488  004F06  D7FA               	bra	u6147
  7489  004F08  0E05               	movlw	5
  7490  004F0A  0100               	movlb	0	; () banked
  7491  004F0C  27FE               	addwf	_SENSITIVITY& (0+255),f,b
  7492  004F0E  0E00               	movlw	0
  7493  004F10  23FF               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7494  004F12                     l5022:
  7495                           
  7496                           ;test_and_calibration.c: 140:             if (!PORTFbits.RF3){break;}
  7497  004F12  B68E               	btfsc	142,3,c	;volatile
  7498  004F14  EF8E  F027         	goto	u5481
  7499  004F18  EF90  F027         	goto	u5480
  7500  004F1C                     u5481:
  7501  004F1C  EF92  F027         	goto	l629
  7502  004F20                     u5480:
  7503  004F20  EFC7  F027         	goto	l632
  7504  004F24                     l629:
  7505                           
  7506                           ;test_and_calibration.c: 142:         if (!PORTFbits.RF3) {
  7507  004F24  B68E               	btfsc	142,3,c	;volatile
  7508  004F26  EF97  F027         	goto	u5491
  7509  004F2A  EF99  F027         	goto	u5490
  7510  004F2E                     u5491:
  7511  004F2E  EF5D  F027         	goto	l628
  7512  004F32                     u5490:
  7513  004F32                     
  7514                           ;test_and_calibration.c: 143:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7515  004F32  0E19               	movlw	25
  7516  004F34  6E37               	movwf	(??_calibration_motor+1)^0,c
  7517  004F36  0E5A               	movlw	90
  7518  004F38  6E36               	movwf	??_calibration_motor^0,c
  7519  004F3A  0EB2               	movlw	178
  7520  004F3C                     u6157:
  7521  004F3C  2EE8               	decfsz	wreg,f,c
  7522  004F3E  D7FE               	bra	u6157
  7523  004F40  2E36               	decfsz	??_calibration_motor^0,f,c
  7524  004F42  D7FC               	bra	u6157
  7525  004F44  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7526  004F46  D7FA               	bra	u6157
  7527  004F48                     
  7528                           ;test_and_calibration.c: 144:             if (!PORTFbits.RF2){break;}
  7529  004F48  B48E               	btfsc	142,2,c	;volatile
  7530  004F4A  EFA9  F027         	goto	u5501
  7531  004F4E  EFAB  F027         	goto	u5500
  7532  004F52                     u5501:
  7533  004F52  EFAD  F027         	goto	l634
  7534  004F56                     u5500:
  7535  004F56  EFC7  F027         	goto	l632
  7536  004F5A                     l634:
  7537                           
  7538                           ;test_and_calibration.c: 145:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7539  004F5A  B68E               	btfsc	142,3,c	;volatile
  7540  004F5C  EFB2  F027         	goto	u5511
  7541  004F60  EFB4  F027         	goto	u5510
  7542  004F64                     u5511:
  7543  004F64  EF5D  F027         	goto	l628
  7544  004F68                     u5510:
  7545  004F68  9680               	bcf	128,3,c	;volatile
  7546  004F6A  0E19               	movlw	25
  7547  004F6C  6E37               	movwf	(??_calibration_motor+1)^0,c
  7548  004F6E  0E5A               	movlw	90
  7549  004F70  6E36               	movwf	??_calibration_motor^0,c
  7550  004F72  0EB2               	movlw	178
  7551  004F74                     u6167:
  7552  004F74  2EE8               	decfsz	wreg,f,c
  7553  004F76  D7FE               	bra	u6167
  7554  004F78  2E36               	decfsz	??_calibration_motor^0,f,c
  7555  004F7A  D7FC               	bra	u6167
  7556  004F7C  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7557  004F7E  D7FA               	bra	u6167
  7558  004F80  0E05               	movlw	5
  7559  004F82  0100               	movlb	0	; () banked
  7560  004F84  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
  7561  004F86  0E00               	movlw	0
  7562  004F88  5BFF               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7563  004F8A  EF5D  F027         	goto	l628
  7564  004F8E                     l632:
  7565                           
  7566                           ;test_and_calibration.c: 148:     LATDbits.LATD7 = 0;
  7567  004F8E  9E7C               	bcf	124,7,c	;volatile
  7568                           
  7569                           ;test_and_calibration.c: 149:     LATHbits.LATH3 = 0;
  7570  004F90  9680               	bcf	128,3,c	;volatile
  7571  004F92                     
  7572                           ;test_and_calibration.c: 150:     test_action(mL, mR);
  7573  004F92  C032  F02C         	movff	calibration_motor@mL,test_action@mL
  7574  004F96  C033  F02D         	movff	calibration_motor@mL+1,test_action@mL+1
  7575  004F9A  C034  F02E         	movff	calibration_motor@mR,test_action@mR
  7576  004F9E  C035  F02F         	movff	calibration_motor@mR+1,test_action@mR+1
  7577  004FA2  EC2C  F025         	call	_test_action	;wreg free
  7578  004FA6  0012               	return		;funcret
  7579  004FA8                     __end_of_calibration_motor:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _test_action *****************
  7583 ;; Defined at:
  7584 ;;		line 66 in file "test_and_calibration.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  7587 ;;		 -> main@motorL(9), 
  7588 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  7589 ;;		 -> main@motorR(9), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        6 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		_fullSpeedAhead
  7610 ;;		_stop
  7611 ;;		_turn45
  7612 ;; This function is called by:
  7613 ;;		_test_function
  7614 ;;		_calibration_motor
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text30
  7619  004A58                     __ptext30:
  7620                           	callstack 0
  7621  004A58                     _test_action:
  7622                           	callstack 24
  7623  004A58                     
  7624                           ;test_and_calibration.c: 66: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 67: {;test_and_calibration.c: 68:     stop(mL,mR);
  7625  004A58  C02C  F01A         	movff	test_action@mL,stop@mL
  7626  004A5C  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7627  004A60  C02E  F01C         	movff	test_action@mR,stop@mR
  7628  004A64  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7629  004A68  EC2C  F02A         	call	_stop	;wreg free
  7630  004A6C                     
  7631                           ;test_and_calibration.c: 69:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7632  004A6C  0EA3               	movlw	163
  7633  004A6E  6E31               	movwf	(??_test_action+1)^0,c
  7634  004A70  0E57               	movlw	87
  7635  004A72  6E30               	movwf	??_test_action^0,c
  7636  004A74  0E02               	movlw	2
  7637  004A76                     u6177:
  7638  004A76  2EE8               	decfsz	wreg,f,c
  7639  004A78  D7FE               	bra	u6177
  7640  004A7A  2E30               	decfsz	??_test_action^0,f,c
  7641  004A7C  D7FC               	bra	u6177
  7642  004A7E  2E31               	decfsz	(??_test_action+1)^0,f,c
  7643  004A80  D7FA               	bra	u6177
  7644  004A82  D000               	nop2	
  7645  004A84                     
  7646                           ;test_and_calibration.c: 70:     turn45(mL,mR,8,1);
  7647  004A84  C02C  F020         	movff	test_action@mL,turn45@mL
  7648  004A88  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7649  004A8C  C02E  F022         	movff	test_action@mR,turn45@mR
  7650  004A90  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7651  004A94  0E08               	movlw	8
  7652  004A96  6E24               	movwf	turn45@turn_time^0,c
  7653  004A98  0E01               	movlw	1
  7654  004A9A  6E25               	movwf	turn45@direction^0,c
  7655  004A9C  ECC4  F020         	call	_turn45	;wreg free
  7656  004AA0                     
  7657                           ;test_and_calibration.c: 71:     stop(mL,mR);
  7658  004AA0  C02C  F01A         	movff	test_action@mL,stop@mL
  7659  004AA4  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7660  004AA8  C02E  F01C         	movff	test_action@mR,stop@mR
  7661  004AAC  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7662  004AB0  EC2C  F02A         	call	_stop	;wreg free
  7663  004AB4                     
  7664                           ;test_and_calibration.c: 72:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7665  004AB4  0EA3               	movlw	163
  7666  004AB6  6E31               	movwf	(??_test_action+1)^0,c
  7667  004AB8  0E57               	movlw	87
  7668  004ABA  6E30               	movwf	??_test_action^0,c
  7669  004ABC  0E02               	movlw	2
  7670  004ABE                     u6187:
  7671  004ABE  2EE8               	decfsz	wreg,f,c
  7672  004AC0  D7FE               	bra	u6187
  7673  004AC2  2E30               	decfsz	??_test_action^0,f,c
  7674  004AC4  D7FC               	bra	u6187
  7675  004AC6  2E31               	decfsz	(??_test_action+1)^0,f,c
  7676  004AC8  D7FA               	bra	u6187
  7677  004ACA  D000               	nop2	
  7678                           
  7679                           ;test_and_calibration.c: 73:     turn45(mL,mR,8,2);
  7680  004ACC  C02C  F020         	movff	test_action@mL,turn45@mL
  7681  004AD0  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7682  004AD4  C02E  F022         	movff	test_action@mR,turn45@mR
  7683  004AD8  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7684  004ADC  0E08               	movlw	8
  7685  004ADE  6E24               	movwf	turn45@turn_time^0,c
  7686  004AE0  0E02               	movlw	2
  7687  004AE2  6E25               	movwf	turn45@direction^0,c
  7688  004AE4  ECC4  F020         	call	_turn45	;wreg free
  7689                           
  7690                           ;test_and_calibration.c: 74:     fullSpeedAhead(mL,mR);
  7691  004AE8  C02C  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7692  004AEC  C02D  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7693  004AF0  C02E  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7694  004AF4  C02F  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7695  004AF8  EC68  F029         	call	_fullSpeedAhead	;wreg free
  7696  004AFC                     
  7697                           ;test_and_calibration.c: 75:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7698  004AFC  0EF4               	movlw	244
  7699  004AFE  6E31               	movwf	(??_test_action+1)^0,c
  7700  004B00  0E82               	movlw	130
  7701  004B02  6E30               	movwf	??_test_action^0,c
  7702  004B04  0E05               	movlw	5
  7703  004B06                     u6197:
  7704  004B06  2EE8               	decfsz	wreg,f,c
  7705  004B08  D7FE               	bra	u6197
  7706  004B0A  2E30               	decfsz	??_test_action^0,f,c
  7707  004B0C  D7FC               	bra	u6197
  7708  004B0E  2E31               	decfsz	(??_test_action+1)^0,f,c
  7709  004B10  D7FA               	bra	u6197
  7710  004B12  F000               	nop	
  7711  004B14                     
  7712                           ;test_and_calibration.c: 76:     stop(mL,mR);
  7713  004B14  C02C  F01A         	movff	test_action@mL,stop@mL
  7714  004B18  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7715  004B1C  C02E  F01C         	movff	test_action@mR,stop@mR
  7716  004B20  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7717  004B24  EC2C  F02A         	call	_stop	;wreg free
  7718  004B28                     
  7719                           ;test_and_calibration.c: 77:     turn45(mL,mR,4,1);
  7720  004B28  C02C  F020         	movff	test_action@mL,turn45@mL
  7721  004B2C  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7722  004B30  C02E  F022         	movff	test_action@mR,turn45@mR
  7723  004B34  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7724  004B38  0E04               	movlw	4
  7725  004B3A  6E24               	movwf	turn45@turn_time^0,c
  7726  004B3C  0E01               	movlw	1
  7727  004B3E  6E25               	movwf	turn45@direction^0,c
  7728  004B40  ECC4  F020         	call	_turn45	;wreg free
  7729  004B44                     
  7730                           ;test_and_calibration.c: 78:     fullSpeedAhead(mL,mR);
  7731  004B44  C02C  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7732  004B48  C02D  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7733  004B4C  C02E  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7734  004B50  C02F  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7735  004B54  EC68  F029         	call	_fullSpeedAhead	;wreg free
  7736                           
  7737                           ;test_and_calibration.c: 79:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7738  004B58  0EF4               	movlw	244
  7739  004B5A  6E31               	movwf	(??_test_action+1)^0,c
  7740  004B5C  0E82               	movlw	130
  7741  004B5E  6E30               	movwf	??_test_action^0,c
  7742  004B60  0E05               	movlw	5
  7743  004B62                     u6207:
  7744  004B62  2EE8               	decfsz	wreg,f,c
  7745  004B64  D7FE               	bra	u6207
  7746  004B66  2E30               	decfsz	??_test_action^0,f,c
  7747  004B68  D7FC               	bra	u6207
  7748  004B6A  2E31               	decfsz	(??_test_action+1)^0,f,c
  7749  004B6C  D7FA               	bra	u6207
  7750  004B6E  F000               	nop	
  7751  004B70                     
  7752                           ;test_and_calibration.c: 80:     stop(mL,mR);
  7753  004B70  C02C  F01A         	movff	test_action@mL,stop@mL
  7754  004B74  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7755  004B78  C02E  F01C         	movff	test_action@mR,stop@mR
  7756  004B7C  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7757  004B80  EC2C  F02A         	call	_stop	;wreg free
  7758  004B84  0012               	return		;funcret
  7759  004B86                     __end_of_test_action:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _turn45 *****************
  7763 ;; Defined at:
  7764 ;;		line 92 in file "dc_motor.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7767 ;;		 -> main@motorL(9), 
  7768 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7769 ;;		 -> main@motorR(9), 
  7770 ;;  turn_time       1   35[COMRAM] unsigned char 
  7771 ;;  direction       1   36[COMRAM] unsigned char 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  i               2   40[COMRAM] unsigned int 
  7774 ;;  i               2   38[COMRAM] unsigned int 
  7775 ;;  i               1   42[COMRAM] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7785 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;Total ram usage:       12 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 4
  7792 ;; This function calls:
  7793 ;;		_setMotorPWM
  7794 ;;		_stop
  7795 ;; This function is called by:
  7796 ;;		_turning_action
  7797 ;;		_goback
  7798 ;;		_test_action
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text31
  7803  004188                     __ptext31:
  7804                           	callstack 0
  7805  004188                     _turn45:
  7806                           	callstack 25
  7807  004188                     
  7808                           ;dc_motor.c: 92: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 93: {;dc_motor.c: 95:     unsigned char i =
      +                           0;
  7809  004188  0E00               	movlw	0
  7810  00418A  6E2B               	movwf	turn45@i^0,c
  7811                           
  7812                           ;dc_motor.c: 96:     for (i = 0; i < turn_time; i++){
  7813  00418C  0E00               	movlw	0
  7814  00418E  6E2B               	movwf	turn45@i^0,c
  7815  004190  EF8C  F021         	goto	l4282
  7816  004194                     l4234:
  7817                           
  7818                           ;dc_motor.c: 97:         mL->direction=1;
  7819  004194  EE20 F001          	lfsr	2,1
  7820  004198  5020               	movf	turn45@mL^0,w,c
  7821  00419A  26D9               	addwf	fsr2l,f,c
  7822  00419C  5021               	movf	(turn45@mL+1)^0,w,c
  7823  00419E  22DA               	addwfc	fsr2h,f,c
  7824  0041A0  0E01               	movlw	1
  7825  0041A2  6EDF               	movwf	indf2,c
  7826                           
  7827                           ;dc_motor.c: 98:         mR->direction=1;
  7828  0041A4  EE20 F001          	lfsr	2,1
  7829  0041A8  5022               	movf	turn45@mR^0,w,c
  7830  0041AA  26D9               	addwf	fsr2l,f,c
  7831  0041AC  5023               	movf	(turn45@mR+1)^0,w,c
  7832  0041AE  22DA               	addwfc	fsr2h,f,c
  7833  0041B0  0E01               	movlw	1
  7834  0041B2  6EDF               	movwf	indf2,c
  7835  0041B4                     
  7836                           ;dc_motor.c: 99:         if (direction == 1){
  7837  0041B4  0425               	decf	turn45@direction^0,w,c
  7838  0041B6  A4D8               	btfss	status,2,c
  7839  0041B8  EFE0  F020         	goto	u4241
  7840  0041BC  EFE2  F020         	goto	u4240
  7841  0041C0                     u4241:
  7842  0041C0  EF37  F021         	goto	l4258
  7843  0041C4                     u4240:
  7844  0041C4  EF03  F021         	goto	l4248
  7845  0041C8                     l4240:
  7846                           
  7847                           ;dc_motor.c: 101:                 mR->power += 5;
  7848  0041C8  C022  FFD9         	movff	turn45@mR,fsr2l
  7849  0041CC  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7850  0041D0  0E05               	movlw	5
  7851  0041D2  26DF               	addwf	indf2,f,c
  7852                           
  7853                           ;dc_motor.c: 102:                 mL->power = 0;
  7854  0041D4  C020  FFD9         	movff	turn45@mL,fsr2l
  7855  0041D8  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7856  0041DC  0E00               	movlw	0
  7857  0041DE  6EDF               	movwf	indf2,c
  7858  0041E0                     
  7859                           ;dc_motor.c: 103:                 setMotorPWM(mL);
  7860  0041E0  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7861  0041E4  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7862  0041E8  EC4D  F01D         	call	_setMotorPWM	;wreg free
  7863  0041EC                     
  7864                           ;dc_motor.c: 104:                 setMotorPWM(mR);
  7865  0041EC  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7866  0041F0  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7867  0041F4  EC4D  F01D         	call	_setMotorPWM	;wreg free
  7868  0041F8                     
  7869                           ;dc_motor.c: 105:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7870  0041F8  0ED0               	movlw	208
  7871  0041FA  6E26               	movwf	??_turn45^0,c
  7872  0041FC  0ECA               	movlw	202
  7873  0041FE                     u6217:
  7874  0041FE  2EE8               	decfsz	wreg,f,c
  7875  004200  D7FE               	bra	u6217
  7876  004202  2E26               	decfsz	??_turn45^0,f,c
  7877  004204  D7FC               	bra	u6217
  7878  004206                     l4248:
  7879                           
  7880                           ;dc_motor.c: 100:             while (mR->power <30){
  7881  004206  C022  FFD9         	movff	turn45@mR,fsr2l
  7882  00420A  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7883  00420E  0E1D               	movlw	29
  7884  004210  64DF               	cpfsgt	indf2,c
  7885  004212  EF0D  F021         	goto	u4251
  7886  004216  EF0F  F021         	goto	u4250
  7887  00421A                     u4251:
  7888  00421A  EFE4  F020         	goto	l4240
  7889  00421E                     u4250:
  7890  00421E                     
  7891                           ;dc_motor.c: 107:             for(unsigned int i = 0; i<SENSITIVITY; i++){_delay((unsign
      +                          ed long)((1)*(64000000/4000.0)));}
  7892  00421E  0E00               	movlw	0
  7893  004220  6E28               	movwf	(turn45@i_1334+1)^0,c
  7894  004222  0E00               	movlw	0
  7895  004224  6E27               	movwf	turn45@i_1334^0,c
  7896  004226  EF1F  F021         	goto	l277
  7897  00422A                     l4252:
  7898                           
  7899                           ; BSR set to: 0
  7900  00422A  0E15               	movlw	21
  7901  00422C  6E26               	movwf	??_turn45^0,c
  7902  00422E  0EC6               	movlw	198
  7903  004230                     u6227:
  7904  004230  2EE8               	decfsz	wreg,f,c
  7905  004232  D7FE               	bra	u6227
  7906  004234  2E26               	decfsz	??_turn45^0,f,c
  7907  004236  D7FC               	bra	u6227
  7908  004238  D000               	nop2	
  7909  00423A  4A27               	infsnz	turn45@i_1334^0,f,c
  7910  00423C  2A28               	incf	(turn45@i_1334+1)^0,f,c
  7911  00423E                     l277:
  7912  00423E  0100               	movlb	0	; () banked
  7913  004240  51FE               	movf	_SENSITIVITY& (0+255),w,b
  7914  004242  5C27               	subwf	turn45@i_1334^0,w,c
  7915  004244  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  7916  004246  5828               	subwfb	(turn45@i_1334+1)^0,w,c
  7917  004248  A0D8               	btfss	status,0,c
  7918  00424A  EF29  F021         	goto	u4261
  7919  00424E  EF2B  F021         	goto	u4260
  7920  004252                     u4261:
  7921  004252  EF15  F021         	goto	l4252
  7922  004256                     u4260:
  7923  004256                     l4256:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;dc_motor.c: 108:             stop(mL,mR);
  7927  004256  C020  F01A         	movff	turn45@mL,stop@mL
  7928  00425A  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  7929  00425E  C022  F01C         	movff	turn45@mR,stop@mR
  7930  004262  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  7931  004266  EC2C  F02A         	call	_stop	;wreg free
  7932                           
  7933                           ;dc_motor.c: 109:         }
  7934  00426A  EF8B  F021         	goto	l4280
  7935  00426E                     l4258:
  7936  00426E  0E02               	movlw	2
  7937  004270  1825               	xorwf	turn45@direction^0,w,c
  7938  004272  A4D8               	btfss	status,2,c
  7939  004274  EF3E  F021         	goto	u4271
  7940  004278  EF40  F021         	goto	u4270
  7941  00427C                     u4271:
  7942  00427C  EF8B  F021         	goto	l4280
  7943  004280                     u4270:
  7944  004280  EF61  F021         	goto	l4270
  7945  004284                     l4262:
  7946                           
  7947                           ;dc_motor.c: 112:                 mL->power += 5;
  7948  004284  C020  FFD9         	movff	turn45@mL,fsr2l
  7949  004288  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7950  00428C  0E05               	movlw	5
  7951  00428E  26DF               	addwf	indf2,f,c
  7952                           
  7953                           ;dc_motor.c: 113:                 mR->power = 0;
  7954  004290  C022  FFD9         	movff	turn45@mR,fsr2l
  7955  004294  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7956  004298  0E00               	movlw	0
  7957  00429A  6EDF               	movwf	indf2,c
  7958  00429C                     
  7959                           ;dc_motor.c: 114:                 setMotorPWM(mL);
  7960  00429C  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7961  0042A0  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7962  0042A4  EC4D  F01D         	call	_setMotorPWM	;wreg free
  7963  0042A8                     
  7964                           ;dc_motor.c: 115:                 setMotorPWM(mR);
  7965  0042A8  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7966  0042AC  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7967  0042B0  EC4D  F01D         	call	_setMotorPWM	;wreg free
  7968  0042B4                     
  7969                           ;dc_motor.c: 116:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7970  0042B4  0ED0               	movlw	208
  7971  0042B6  6E26               	movwf	??_turn45^0,c
  7972  0042B8  0ECA               	movlw	202
  7973  0042BA                     u6237:
  7974  0042BA  2EE8               	decfsz	wreg,f,c
  7975  0042BC  D7FE               	bra	u6237
  7976  0042BE  2E26               	decfsz	??_turn45^0,f,c
  7977  0042C0  D7FC               	bra	u6237
  7978  0042C2                     l4270:
  7979                           
  7980                           ;dc_motor.c: 111:             while (mL->power <30){
  7981  0042C2  C020  FFD9         	movff	turn45@mL,fsr2l
  7982  0042C6  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7983  0042CA  0E1D               	movlw	29
  7984  0042CC  64DF               	cpfsgt	indf2,c
  7985  0042CE  EF6B  F021         	goto	u4281
  7986  0042D2  EF6D  F021         	goto	u4280
  7987  0042D6                     u4281:
  7988  0042D6  EF42  F021         	goto	l4262
  7989  0042DA                     u4280:
  7990  0042DA                     
  7991                           ;dc_motor.c: 118:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  7992  0042DA  0E00               	movlw	0
  7993  0042DC  6E2A               	movwf	(turn45@i_1336+1)^0,c
  7994  0042DE  0E00               	movlw	0
  7995  0042E0  6E29               	movwf	turn45@i_1336^0,c
  7996  0042E2  EF7D  F021         	goto	l285
  7997  0042E6                     l4274:
  7998                           
  7999                           ; BSR set to: 0
  8000  0042E6  0E15               	movlw	21
  8001  0042E8  6E26               	movwf	??_turn45^0,c
  8002  0042EA  0EC6               	movlw	198
  8003  0042EC                     u6247:
  8004  0042EC  2EE8               	decfsz	wreg,f,c
  8005  0042EE  D7FE               	bra	u6247
  8006  0042F0  2E26               	decfsz	??_turn45^0,f,c
  8007  0042F2  D7FC               	bra	u6247
  8008  0042F4  D000               	nop2	
  8009  0042F6  4A29               	infsnz	turn45@i_1336^0,f,c
  8010  0042F8  2A2A               	incf	(turn45@i_1336+1)^0,f,c
  8011  0042FA                     l285:
  8012  0042FA  0100               	movlb	0	; () banked
  8013  0042FC  51FE               	movf	_SENSITIVITY& (0+255),w,b
  8014  0042FE  5C29               	subwf	turn45@i_1336^0,w,c
  8015  004300  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  8016  004302  582A               	subwfb	(turn45@i_1336+1)^0,w,c
  8017  004304  A0D8               	btfss	status,0,c
  8018  004306  EF87  F021         	goto	u4291
  8019  00430A  EF89  F021         	goto	u4290
  8020  00430E                     u4291:
  8021  00430E  EF73  F021         	goto	l4274
  8022  004312                     u4290:
  8023  004312  EF2B  F021         	goto	l4256
  8024  004316                     l4280:
  8025                           
  8026                           ;dc_motor.c: 121:     }
  8027  004316  2A2B               	incf	turn45@i^0,f,c
  8028  004318                     l4282:
  8029  004318  5024               	movf	turn45@turn_time^0,w,c
  8030  00431A  5C2B               	subwf	turn45@i^0,w,c
  8031  00431C  A0D8               	btfss	status,0,c
  8032  00431E  EF93  F021         	goto	u4301
  8033  004322  EF95  F021         	goto	u4300
  8034  004326                     u4301:
  8035  004326  EFCA  F020         	goto	l4234
  8036  00432A                     u4300:
  8037  00432A  0012               	return		;funcret
  8038  00432C                     __end_of_turn45:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _stop *****************
  8042 ;; Defined at:
  8043 ;;		line 80 in file "dc_motor.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8046 ;;		 -> main@motorL(9), 
  8047 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8048 ;;		 -> main@motorR(9), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;Total ram usage:        6 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; Hardware stack levels required when called: 3
  8067 ;; This function calls:
  8068 ;;		_setMotorPWM
  8069 ;; This function is called by:
  8070 ;;		_turn45
  8071 ;;		_fullSpeedBack
  8072 ;;		_main
  8073 ;;		_short_burst
  8074 ;;		_goback
  8075 ;;		_test_action
  8076 ;;		_test_function
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text32
  8081  005458                     __ptext32:
  8082                           	callstack 0
  8083  005458                     _stop:
  8084                           	callstack 25
  8085  005458                     
  8086                           ;dc_motor.c: 80: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 81: {;d
      +                          c_motor.c: 82:     while (mL->power >0 || mR->power >0){
  8087  005458  EF66  F02A         	goto	l4004
  8088  00545C                     l3990:
  8089                           
  8090                           ;dc_motor.c: 83:         if (mL->power !=0){mL->power -= 2;}
  8091  00545C  C01A  FFD9         	movff	stop@mL,fsr2l
  8092  005460  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8093  005464  50DF               	movf	indf2,w,c
  8094  005466  B4D8               	btfsc	status,2,c
  8095  005468  EF38  F02A         	goto	u3921
  8096  00546C  EF3A  F02A         	goto	u3920
  8097  005470                     u3921:
  8098  005470  EF40  F02A         	goto	l3994
  8099  005474                     u3920:
  8100  005474  C01A  FFD9         	movff	stop@mL,fsr2l
  8101  005478  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8102  00547C  0E02               	movlw	2
  8103  00547E  5EDF               	subwf	indf2,f,c
  8104  005480                     l3994:
  8105                           
  8106                           ;dc_motor.c: 84:         if (mR->power !=0){mR->power -= 2;}
  8107  005480  C01C  FFD9         	movff	stop@mR,fsr2l
  8108  005484  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8109  005488  50DF               	movf	indf2,w,c
  8110  00548A  B4D8               	btfsc	status,2,c
  8111  00548C  EF4A  F02A         	goto	u3931
  8112  005490  EF4C  F02A         	goto	u3930
  8113  005494                     u3931:
  8114  005494  EF52  F02A         	goto	l3998
  8115  005498                     u3930:
  8116  005498  C01C  FFD9         	movff	stop@mR,fsr2l
  8117  00549C  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8118  0054A0  0E02               	movlw	2
  8119  0054A2  5EDF               	subwf	indf2,f,c
  8120  0054A4                     l3998:
  8121                           
  8122                           ;dc_motor.c: 85:         setMotorPWM(mL);
  8123  0054A4  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8124  0054A8  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8125  0054AC  EC4D  F01D         	call	_setMotorPWM	;wreg free
  8126  0054B0                     
  8127                           ;dc_motor.c: 86:         setMotorPWM(mR);
  8128  0054B0  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8129  0054B4  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8130  0054B8  EC4D  F01D         	call	_setMotorPWM	;wreg free
  8131  0054BC                     
  8132                           ;dc_motor.c: 87:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8133  0054BC  0E68               	movlw	104
  8134  0054BE  6E1E               	movwf	??_stop^0,c
  8135  0054C0  0EE4               	movlw	228
  8136  0054C2                     u6257:
  8137  0054C2  2EE8               	decfsz	wreg,f,c
  8138  0054C4  D7FE               	bra	u6257
  8139  0054C6  2E1E               	decfsz	??_stop^0,f,c
  8140  0054C8  D7FC               	bra	u6257
  8141  0054CA  D000               	nop2	
  8142  0054CC                     l4004:
  8143                           
  8144                           ;dc_motor.c: 82:     while (mL->power >0 || mR->power >0){
  8145  0054CC  C01A  FFD9         	movff	stop@mL,fsr2l
  8146  0054D0  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8147  0054D4  50DF               	movf	indf2,w,c
  8148  0054D6  A4D8               	btfss	status,2,c
  8149  0054D8  EF70  F02A         	goto	u3941
  8150  0054DC  EF72  F02A         	goto	u3940
  8151  0054E0                     u3941:
  8152  0054E0  EF2E  F02A         	goto	l3990
  8153  0054E4                     u3940:
  8154  0054E4  C01C  FFD9         	movff	stop@mR,fsr2l
  8155  0054E8  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8156  0054EC  50DF               	movf	indf2,w,c
  8157  0054EE  A4D8               	btfss	status,2,c
  8158  0054F0  EF7C  F02A         	goto	u3951
  8159  0054F4  EF7E  F02A         	goto	u3950
  8160  0054F8                     u3951:
  8161  0054F8  EF2E  F02A         	goto	l3990
  8162  0054FC                     u3950:
  8163  0054FC                     
  8164                           ;dc_motor.c: 89:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8165  0054FC  0E29               	movlw	41
  8166  0054FE  6E1F               	movwf	(??_stop+1)^0,c
  8167  005500  0E96               	movlw	150
  8168  005502  6E1E               	movwf	??_stop^0,c
  8169  005504  0E7F               	movlw	127
  8170  005506                     u6267:
  8171  005506  2EE8               	decfsz	wreg,f,c
  8172  005508  D7FE               	bra	u6267
  8173  00550A  2E1E               	decfsz	??_stop^0,f,c
  8174  00550C  D7FC               	bra	u6267
  8175  00550E  2E1F               	decfsz	(??_stop+1)^0,f,c
  8176  005510  D7FA               	bra	u6267
  8177  005512  F000               	nop	
  8178  005514  0012               	return		;funcret
  8179  005516                     __end_of_stop:
  8180                           	callstack 0
  8181                           
  8182 ;; *************** function _fullSpeedAhead *****************
  8183 ;; Defined at:
  8184 ;;		line 125 in file "dc_motor.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8187 ;;		 -> main@motorL(9), 
  8188 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8189 ;;		 -> main@motorR(9), 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;Total ram usage:        5 bytes
  8206 ;; Hardware stack levels used: 1
  8207 ;; Hardware stack levels required when called: 3
  8208 ;; This function calls:
  8209 ;;		_setMotorPWM
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;;		_short_burst
  8213 ;;		_goback
  8214 ;;		_test_action
  8215 ;;		_test_function
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text33
  8220  0052D0                     __ptext33:
  8221                           	callstack 0
  8222  0052D0                     _fullSpeedAhead:
  8223                           	callstack 25
  8224  0052D0                     
  8225                           ;dc_motor.c: 125: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 126: {;dc_motor.c: 127:     mL->direction=1;
  8226  0052D0  EE20 F001          	lfsr	2,1
  8227  0052D4  501A               	movf	fullSpeedAhead@mL^0,w,c
  8228  0052D6  26D9               	addwf	fsr2l,f,c
  8229  0052D8  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8230  0052DA  22DA               	addwfc	fsr2h,f,c
  8231  0052DC  0E01               	movlw	1
  8232  0052DE  6EDF               	movwf	indf2,c
  8233                           
  8234                           ;dc_motor.c: 128:     mR->direction=1;
  8235  0052E0  EE20 F001          	lfsr	2,1
  8236  0052E4  501C               	movf	fullSpeedAhead@mR^0,w,c
  8237  0052E6  26D9               	addwf	fsr2l,f,c
  8238  0052E8  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8239  0052EA  22DA               	addwfc	fsr2h,f,c
  8240  0052EC  0E01               	movlw	1
  8241  0052EE  6EDF               	movwf	indf2,c
  8242                           
  8243                           ;dc_motor.c: 129:     while (mL->power<30 || mR->power<30){
  8244  0052F0  EFB1  F029         	goto	l4300
  8245  0052F4                     l4286:
  8246                           
  8247                           ;dc_motor.c: 130:         if (mL->power<30) {mL->power += 2;}
  8248  0052F4  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8249  0052F8  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8250  0052FC  0E1E               	movlw	30
  8251  0052FE  60DF               	cpfslt	indf2,c
  8252  005300  EF84  F029         	goto	u4311
  8253  005304  EF86  F029         	goto	u4310
  8254  005308                     u4311:
  8255  005308  EF8C  F029         	goto	l4290
  8256  00530C                     u4310:
  8257  00530C  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8258  005310  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8259  005314  0E02               	movlw	2
  8260  005316  26DF               	addwf	indf2,f,c
  8261  005318                     l4290:
  8262                           
  8263                           ;dc_motor.c: 131:         if (mR->power<30) {mR->power += 2;}
  8264  005318  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8265  00531C  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8266  005320  0E1E               	movlw	30
  8267  005322  60DF               	cpfslt	indf2,c
  8268  005324  EF96  F029         	goto	u4321
  8269  005328  EF98  F029         	goto	u4320
  8270  00532C                     u4321:
  8271  00532C  EF9E  F029         	goto	l4294
  8272  005330                     u4320:
  8273  005330  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8274  005334  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8275  005338  0E02               	movlw	2
  8276  00533A  26DF               	addwf	indf2,f,c
  8277  00533C                     l4294:
  8278                           
  8279                           ;dc_motor.c: 132:         setMotorPWM(mL);
  8280  00533C  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8281  005340  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8282  005344  EC4D  F01D         	call	_setMotorPWM	;wreg free
  8283  005348                     
  8284                           ;dc_motor.c: 133:         setMotorPWM(mR);
  8285  005348  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8286  00534C  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8287  005350  EC4D  F01D         	call	_setMotorPWM	;wreg free
  8288  005354                     
  8289                           ;dc_motor.c: 134:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8290  005354  0ED0               	movlw	208
  8291  005356  6E1E               	movwf	??_fullSpeedAhead^0,c
  8292  005358  0ECA               	movlw	202
  8293  00535A                     u6277:
  8294  00535A  2EE8               	decfsz	wreg,f,c
  8295  00535C  D7FE               	bra	u6277
  8296  00535E  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8297  005360  D7FC               	bra	u6277
  8298  005362                     l4300:
  8299                           
  8300                           ;dc_motor.c: 129:     while (mL->power<30 || mR->power<30){
  8301  005362  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8302  005366  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8303  00536A  0E1D               	movlw	29
  8304  00536C  64DF               	cpfsgt	indf2,c
  8305  00536E  EFBB  F029         	goto	u4331
  8306  005372  EFBD  F029         	goto	u4330
  8307  005376                     u4331:
  8308  005376  EF7A  F029         	goto	l4286
  8309  00537A                     u4330:
  8310  00537A  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8311  00537E  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8312  005382  0E1D               	movlw	29
  8313  005384  64DF               	cpfsgt	indf2,c
  8314  005386  EFC7  F029         	goto	u4341
  8315  00538A  EFC9  F029         	goto	u4340
  8316  00538E                     u4341:
  8317  00538E  EF7A  F029         	goto	l4286
  8318  005392                     u4340:
  8319  005392  0012               	return		;funcret
  8320  005394                     __end_of_fullSpeedAhead:
  8321                           	callstack 0
  8322                           
  8323 ;; *************** function _setMotorPWM *****************
  8324 ;; Defined at:
  8325 ;;		line 60 in file "dc_motor.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8328 ;;		 -> main@motorR(9), main@motorL(9), 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  PWMduty         2   23[COMRAM] int 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;Total ram usage:       11 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 2
  8347 ;; This function calls:
  8348 ;;		___awdiv
  8349 ;;		___wmul
  8350 ;; This function is called by:
  8351 ;;		_stop
  8352 ;;		_turn45
  8353 ;;		_fullSpeedAhead
  8354 ;;		_fullSpeedBack
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text34
  8359  003A9A                     __ptext34:
  8360                           	callstack 0
  8361  003A9A                     _setMotorPWM:
  8362                           	callstack 25
  8363  003A9A                     
  8364                           ;dc_motor.c: 60: void setMotorPWM(struct DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
  8365  003A9A  EE20 F001          	lfsr	2,1
  8366  003A9E  500F               	movf	setMotorPWM@m^0,w,c
  8367  003AA0  26D9               	addwf	fsr2l,f,c
  8368  003AA2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8369  003AA4  22DA               	addwfc	fsr2h,f,c
  8370  003AA6  50DF               	movf	indf2,w,c
  8371  003AA8  B4D8               	btfsc	status,2,c
  8372  003AAA  EF59  F01D         	goto	u3431
  8373  003AAE  EF5B  F01D         	goto	u3430
  8374  003AB2                     u3431:
  8375  003AB2  EF8C  F01D         	goto	l3704
  8376  003AB6                     u3430:
  8377  003AB6                     
  8378                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8379  003AB6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8380  003ABA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8381  003ABE  50DF               	movf	indf2,w,c
  8382  003AC0  6E11               	movwf	??_setMotorPWM^0,c
  8383  003AC2  5011               	movf	??_setMotorPWM^0,w,c
  8384  003AC4  6E01               	movwf	___wmul@multiplier^0,c
  8385  003AC6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8386  003AC8  EE20 F007          	lfsr	2,7
  8387  003ACC  500F               	movf	setMotorPWM@m^0,w,c
  8388  003ACE  26D9               	addwf	fsr2l,f,c
  8389  003AD0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8390  003AD2  22DA               	addwfc	fsr2h,f,c
  8391  003AD4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8392  003AD8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8393  003ADC  EC0F  F02E         	call	___wmul	;wreg free
  8394  003AE0  C001  F007         	movff	?___wmul,___awdiv@dividend
  8395  003AE4  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8396  003AE8  0E00               	movlw	0
  8397  003AEA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8398  003AEC  0E64               	movlw	100
  8399  003AEE  6E09               	movwf	___awdiv@divisor^0,c
  8400  003AF0  ECCA  F029         	call	___awdiv	;wreg free
  8401  003AF4  EE20 F007          	lfsr	2,7
  8402  003AF8  500F               	movf	setMotorPWM@m^0,w,c
  8403  003AFA  26D9               	addwf	fsr2l,f,c
  8404  003AFC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8405  003AFE  22DA               	addwfc	fsr2h,f,c
  8406  003B00  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8407  003B04  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8408  003B08  5007               	movf	?___awdiv^0,w,c
  8409  003B0A  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8410  003B0C  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8411  003B0E  5008               	movf	(?___awdiv+1)^0,w,c
  8412  003B10  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8413  003B12  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8414                           
  8415                           ;dc_motor.c: 66:  }
  8416  003B14  EFAF  F01D         	goto	l3706
  8417  003B18                     l3704:
  8418                           
  8419                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8420  003B18  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8421  003B1C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8422  003B20  50DF               	movf	indf2,w,c
  8423  003B22  6E11               	movwf	??_setMotorPWM^0,c
  8424  003B24  5011               	movf	??_setMotorPWM^0,w,c
  8425  003B26  6E01               	movwf	___wmul@multiplier^0,c
  8426  003B28  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8427  003B2A  EE20 F007          	lfsr	2,7
  8428  003B2E  500F               	movf	setMotorPWM@m^0,w,c
  8429  003B30  26D9               	addwf	fsr2l,f,c
  8430  003B32  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8431  003B34  22DA               	addwfc	fsr2h,f,c
  8432  003B36  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8433  003B3A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8434  003B3E  EC0F  F02E         	call	___wmul	;wreg free
  8435  003B42  C001  F007         	movff	?___wmul,___awdiv@dividend
  8436  003B46  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8437  003B4A  0E00               	movlw	0
  8438  003B4C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8439  003B4E  0E64               	movlw	100
  8440  003B50  6E09               	movwf	___awdiv@divisor^0,c
  8441  003B52  ECCA  F029         	call	___awdiv	;wreg free
  8442  003B56  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8443  003B5A  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8444  003B5E                     l3706:
  8445                           
  8446                           ;dc_motor.c: 71:  *(m->dutyHighByte) = PWMduty;
  8447  003B5E  EE20 F002          	lfsr	2,2
  8448  003B62  500F               	movf	setMotorPWM@m^0,w,c
  8449  003B64  26D9               	addwf	fsr2l,f,c
  8450  003B66  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8451  003B68  22DA               	addwfc	fsr2h,f,c
  8452  003B6A  CFDE F011          	movff	postinc2,??_setMotorPWM
  8453  003B6E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8454  003B72  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8455  003B76  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8456  003B7A  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8457  003B7E                     
  8458                           ;dc_motor.c: 72:  if (m->direction){
  8459  003B7E  EE20 F001          	lfsr	2,1
  8460  003B82  500F               	movf	setMotorPWM@m^0,w,c
  8461  003B84  26D9               	addwf	fsr2l,f,c
  8462  003B86  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8463  003B88  22DA               	addwfc	fsr2h,f,c
  8464  003B8A  50DF               	movf	indf2,w,c
  8465  003B8C  B4D8               	btfsc	status,2,c
  8466  003B8E  EFCB  F01D         	goto	u3441
  8467  003B92  EFCD  F01D         	goto	u3440
  8468  003B96                     u3441:
  8469  003B96  EF02  F01E         	goto	l3712
  8470  003B9A                     u3440:
  8471  003B9A                     
  8472                           ;dc_motor.c: 73:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8473  003B9A  EE20 F004          	lfsr	2,4
  8474  003B9E  500F               	movf	setMotorPWM@m^0,w,c
  8475  003BA0  26D9               	addwf	fsr2l,f,c
  8476  003BA2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8477  003BA4  22DA               	addwfc	fsr2h,f,c
  8478  003BA6  CFDE F011          	movff	postinc2,??_setMotorPWM
  8479  003BAA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8480  003BAE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8481  003BB2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8482  003BB6  EE10 F004          	lfsr	1,4
  8483  003BBA  500F               	movf	setMotorPWM@m^0,w,c
  8484  003BBC  26E1               	addwf	fsr1l,f,c
  8485  003BBE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8486  003BC0  22E2               	addwfc	fsr1h,f,c
  8487  003BC2  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8488  003BC6  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8489  003BCA  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8490  003BCE  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8491  003BD2  50E7               	movf	indf1,w,c
  8492  003BD4  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8493  003BD6  EE10 F006          	lfsr	1,6
  8494  003BDA  500F               	movf	setMotorPWM@m^0,w,c
  8495  003BDC  26E1               	addwf	fsr1l,f,c
  8496  003BDE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8497  003BE0  22E2               	addwfc	fsr1h,f,c
  8498  003BE2  50E7               	movf	indf1,w,c
  8499  003BE4  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8500  003BE6  0E01               	movlw	1
  8501  003BE8  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8502  003BEA  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8503  003BEC  EFFA  F01D         	goto	u3454
  8504  003BF0                     u3455:
  8505  003BF0  90D8               	bcf	status,0,c
  8506  003BF2  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8507  003BF4                     u3454:
  8508  003BF4  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8509  003BF6  EFF8  F01D         	goto	u3455
  8510  003BFA  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8511  003BFC  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8512  003BFE  6EDF               	movwf	indf2,c
  8513                           
  8514                           ;dc_motor.c: 74:  } else {
  8515  003C00  EF36  F01E         	goto	l260
  8516  003C04                     l3712:
  8517                           
  8518                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8519  003C04  EE20 F004          	lfsr	2,4
  8520  003C08  500F               	movf	setMotorPWM@m^0,w,c
  8521  003C0A  26D9               	addwf	fsr2l,f,c
  8522  003C0C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8523  003C0E  22DA               	addwfc	fsr2h,f,c
  8524  003C10  CFDE F011          	movff	postinc2,??_setMotorPWM
  8525  003C14  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8526  003C18  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8527  003C1C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8528  003C20  EE10 F004          	lfsr	1,4
  8529  003C24  500F               	movf	setMotorPWM@m^0,w,c
  8530  003C26  26E1               	addwf	fsr1l,f,c
  8531  003C28  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8532  003C2A  22E2               	addwfc	fsr1h,f,c
  8533  003C2C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8534  003C30  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8535  003C34  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8536  003C38  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8537  003C3C  50E7               	movf	indf1,w,c
  8538  003C3E  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8539  003C40  EE10 F006          	lfsr	1,6
  8540  003C44  500F               	movf	setMotorPWM@m^0,w,c
  8541  003C46  26E1               	addwf	fsr1l,f,c
  8542  003C48  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8543  003C4A  22E2               	addwfc	fsr1h,f,c
  8544  003C4C  50E7               	movf	indf1,w,c
  8545  003C4E  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8546  003C50  0E01               	movlw	1
  8547  003C52  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8548  003C54  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8549  003C56  EF2F  F01E         	goto	u3464
  8550  003C5A                     u3465:
  8551  003C5A  90D8               	bcf	status,0,c
  8552  003C5C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8553  003C5E                     u3464:
  8554  003C5E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8555  003C60  EF2D  F01E         	goto	u3465
  8556  003C64  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8557  003C66  0AFF               	xorlw	255
  8558  003C68  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8559  003C6A  6EDF               	movwf	indf2,c
  8560  003C6C                     l260:
  8561  003C6C  0012               	return		;funcret
  8562  003C6E                     __end_of_setMotorPWM:
  8563                           	callstack 0
  8564                           
  8565 ;; *************** function ___wmul *****************
  8566 ;; Defined at:
  8567 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  multiplier      2    0[COMRAM] unsigned int 
  8570 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  product         2    4[COMRAM] unsigned int 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  2    0[COMRAM] unsigned int 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, prodl, prodh
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;Total ram usage:        6 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 1
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_setMotorPWM
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text35
  8597  005C1E                     __ptext35:
  8598                           	callstack 0
  8599  005C1E                     ___wmul:
  8600                           	callstack 25
  8601  005C1E  5001               	movf	___wmul@multiplier^0,w,c
  8602  005C20  0203               	mulwf	___wmul@multiplicand^0,c
  8603  005C22  CFF3 F005          	movff	prodl,___wmul@product
  8604  005C26  CFF4 F006          	movff	prodh,___wmul@product+1
  8605  005C2A  5001               	movf	___wmul@multiplier^0,w,c
  8606  005C2C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8607  005C2E  50F3               	movf	243,w,c
  8608  005C30  2606               	addwf	(___wmul@product+1)^0,f,c
  8609  005C32  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8610  005C34  0203               	mulwf	___wmul@multiplicand^0,c
  8611  005C36  50F3               	movf	243,w,c
  8612  005C38  2606               	addwf	(___wmul@product+1)^0,f,c
  8613  005C3A  C005  F001         	movff	___wmul@product,?___wmul
  8614  005C3E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8615  005C42  0012               	return		;funcret
  8616  005C44                     __end_of___wmul:
  8617                           	callstack 0
  8618                           
  8619 ;; *************** function ___awdiv *****************
  8620 ;; Defined at:
  8621 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  dividend        2    6[COMRAM] int 
  8624 ;;  divisor         2    8[COMRAM] int 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  quotient        2   12[COMRAM] int 
  8627 ;;  sign            1   11[COMRAM] unsigned char 
  8628 ;;  counter         1   10[COMRAM] unsigned char 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  2    6[COMRAM] int 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8642 ;;Total ram usage:        8 bytes
  8643 ;; Hardware stack levels used: 1
  8644 ;; Hardware stack levels required when called: 1
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_setMotorPWM
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text36
  8653  005394                     __ptext36:
  8654                           	callstack 0
  8655  005394                     ___awdiv:
  8656                           	callstack 25
  8657  005394  0E00               	movlw	0
  8658  005396  6E0C               	movwf	___awdiv@sign^0,c
  8659  005398  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8660  00539A  EFD3  F029         	goto	u3200
  8661  00539E  EFD1  F029         	goto	u3201
  8662  0053A2                     u3201:
  8663  0053A2  EFD9  F029         	goto	l3598
  8664  0053A6                     u3200:
  8665  0053A6  6C09               	negf	___awdiv@divisor^0,c
  8666  0053A8  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8667  0053AA  B0D8               	btfsc	status,0,c
  8668  0053AC  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8669  0053AE  0E01               	movlw	1
  8670  0053B0  6E0C               	movwf	___awdiv@sign^0,c
  8671  0053B2                     l3598:
  8672  0053B2  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8673  0053B4  EFE0  F029         	goto	u3210
  8674  0053B8  EFDE  F029         	goto	u3211
  8675  0053BC                     u3211:
  8676  0053BC  EFE6  F029         	goto	l3604
  8677  0053C0                     u3210:
  8678  0053C0  6C07               	negf	___awdiv@dividend^0,c
  8679  0053C2  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8680  0053C4  B0D8               	btfsc	status,0,c
  8681  0053C6  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8682  0053C8  0E01               	movlw	1
  8683  0053CA  1A0C               	xorwf	___awdiv@sign^0,f,c
  8684  0053CC                     l3604:
  8685  0053CC  0E00               	movlw	0
  8686  0053CE  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8687  0053D0  0E00               	movlw	0
  8688  0053D2  6E0D               	movwf	___awdiv@quotient^0,c
  8689  0053D4  5009               	movf	___awdiv@divisor^0,w,c
  8690  0053D6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8691  0053D8  B4D8               	btfsc	status,2,c
  8692  0053DA  EFF1  F029         	goto	u3221
  8693  0053DE  EFF3  F029         	goto	u3220
  8694  0053E2                     u3221:
  8695  0053E2  EF1B  F02A         	goto	l3626
  8696  0053E6                     u3220:
  8697  0053E6  0E01               	movlw	1
  8698  0053E8  6E0B               	movwf	___awdiv@counter^0,c
  8699  0053EA  EFFB  F029         	goto	l3612
  8700  0053EE                     l3610:
  8701  0053EE  90D8               	bcf	status,0,c
  8702  0053F0  3609               	rlcf	___awdiv@divisor^0,f,c
  8703  0053F2  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8704  0053F4  2A0B               	incf	___awdiv@counter^0,f,c
  8705  0053F6                     l3612:
  8706  0053F6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8707  0053F8  EF00  F02A         	goto	u3231
  8708  0053FC  EF02  F02A         	goto	u3230
  8709  005400                     u3231:
  8710  005400  EFF7  F029         	goto	l3610
  8711  005404                     u3230:
  8712  005404                     l3614:
  8713  005404  90D8               	bcf	status,0,c
  8714  005406  360D               	rlcf	___awdiv@quotient^0,f,c
  8715  005408  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8716  00540A  5009               	movf	___awdiv@divisor^0,w,c
  8717  00540C  5C07               	subwf	___awdiv@dividend^0,w,c
  8718  00540E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8719  005410  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8720  005412  A0D8               	btfss	status,0,c
  8721  005414  EF0E  F02A         	goto	u3241
  8722  005418  EF10  F02A         	goto	u3240
  8723  00541C                     u3241:
  8724  00541C  EF15  F02A         	goto	l3622
  8725  005420                     u3240:
  8726  005420  5009               	movf	___awdiv@divisor^0,w,c
  8727  005422  5E07               	subwf	___awdiv@dividend^0,f,c
  8728  005424  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8729  005426  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8730  005428  800D               	bsf	___awdiv@quotient^0,0,c
  8731  00542A                     l3622:
  8732  00542A  90D8               	bcf	status,0,c
  8733  00542C  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8734  00542E  3209               	rrcf	___awdiv@divisor^0,f,c
  8735  005430  2E0B               	decfsz	___awdiv@counter^0,f,c
  8736  005432  EF02  F02A         	goto	l3614
  8737  005436                     l3626:
  8738  005436  500C               	movf	___awdiv@sign^0,w,c
  8739  005438  B4D8               	btfsc	status,2,c
  8740  00543A  EF21  F02A         	goto	u3251
  8741  00543E  EF23  F02A         	goto	u3250
  8742  005442                     u3251:
  8743  005442  EF27  F02A         	goto	l3630
  8744  005446                     u3250:
  8745  005446  6C0D               	negf	___awdiv@quotient^0,c
  8746  005448  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8747  00544A  B0D8               	btfsc	status,0,c
  8748  00544C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8749  00544E                     l3630:
  8750  00544E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8751  005452  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8752  005456  0012               	return		;funcret
  8753  005458                     __end_of___awdiv:
  8754                           	callstack 0
  8755                           
  8756 ;; *************** function _calibrate_white *****************
  8757 ;; Defined at:
  8758 ;;		line 238 in file "color.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  w               2   11[COMRAM] PTR struct white_card
  8761 ;;		 -> main@white(28), 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;Total ram usage:        4 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; Hardware stack levels required when called: 4
  8780 ;; This function calls:
  8781 ;;		_LED_B
  8782 ;;		_LED_C
  8783 ;;		_LED_G
  8784 ;;		_LED_OFF
  8785 ;;		_LED_R
  8786 ;;		_color_read_Blue
  8787 ;;		_color_read_Clear
  8788 ;;		_color_read_Green
  8789 ;;		_color_read_Red
  8790 ;;		_toggle_light
  8791 ;; This function is called by:
  8792 ;;		_setup
  8793 ;;		_test_function
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text37
  8798  003890                     __ptext37:
  8799                           	callstack 0
  8800  003890                     _calibrate_white:
  8801                           	callstack 25
  8802  003890                     
  8803                           ;color.c: 238: void calibrate_white(struct white_card *w);color.c: 239: {;color.c: 240: 
      +                              LED_OFF();
  8804  003890  EC32  F02E         	call	_LED_OFF	;wreg free
  8805  003894                     
  8806                           ;color.c: 241:     toggle_light(1,2);
  8807  003894  0E02               	movlw	2
  8808  003896  6E01               	movwf	toggle_light@toggletime^0,c
  8809  003898  0E01               	movlw	1
  8810  00389A  ECE1  F019         	call	_toggle_light
  8811  00389E                     
  8812                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8813  00389E  0E29               	movlw	41
  8814  0038A0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8815  0038A2  0E96               	movlw	150
  8816  0038A4  6E0E               	movwf	??_calibrate_white^0,c
  8817  0038A6  0E7F               	movlw	127
  8818  0038A8                     u6287:
  8819  0038A8  2EE8               	decfsz	wreg,f,c
  8820  0038AA  D7FE               	bra	u6287
  8821  0038AC  2E0E               	decfsz	??_calibrate_white^0,f,c
  8822  0038AE  D7FC               	bra	u6287
  8823  0038B0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8824  0038B2  D7FA               	bra	u6287
  8825  0038B4  F000               	nop	
  8826  0038B6                     
  8827                           ;color.c: 244:     LED_R();
  8828  0038B6  EC22  F02E         	call	_LED_R	;wreg free
  8829  0038BA                     
  8830                           ;color.c: 245:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8831  0038BA  0E09               	movlw	9
  8832  0038BC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8833  0038BE  0E1E               	movlw	30
  8834  0038C0  6E0E               	movwf	??_calibrate_white^0,c
  8835  0038C2  0EE4               	movlw	228
  8836  0038C4                     u6297:
  8837  0038C4  2EE8               	decfsz	wreg,f,c
  8838  0038C6  D7FE               	bra	u6297
  8839  0038C8  2E0E               	decfsz	??_calibrate_white^0,f,c
  8840  0038CA  D7FC               	bra	u6297
  8841  0038CC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8842  0038CE  D7FA               	bra	u6297
  8843  0038D0  D000               	nop2	
  8844  0038D2                     
  8845                           ;color.c: 246:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8846  0038D2  EC8A  F02B         	call	_color_read_Red	;wreg free
  8847  0038D6  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8848  0038DA  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8849  0038DE  C005  FFDE         	movff	?_color_read_Red,postinc2
  8850  0038E2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8851  0038E6  ECB2  F02B         	call	_color_read_Green	;wreg free
  8852  0038EA  EE20 F002          	lfsr	2,2
  8853  0038EE  500C               	movf	calibrate_white@w^0,w,c
  8854  0038F0  26D9               	addwf	fsr2l,f,c
  8855  0038F2  500D               	movf	(calibrate_white@w+1)^0,w,c
  8856  0038F4  22DA               	addwfc	fsr2h,f,c
  8857  0038F6  C005  FFDE         	movff	?_color_read_Green,postinc2
  8858  0038FA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8859  0038FE  ECDA  F02B         	call	_color_read_Blue	;wreg free
  8860  003902  EE20 F004          	lfsr	2,4
  8861  003906  500C               	movf	calibrate_white@w^0,w,c
  8862  003908  26D9               	addwf	fsr2l,f,c
  8863  00390A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8864  00390C  22DA               	addwfc	fsr2h,f,c
  8865  00390E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8866  003912  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8867  003916                     
  8868                           ;color.c: 249:     LED_G();
  8869  003916  EC42  F02E         	call	_LED_G	;wreg free
  8870  00391A                     
  8871                           ;color.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8872  00391A  0E09               	movlw	9
  8873  00391C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8874  00391E  0E1E               	movlw	30
  8875  003920  6E0E               	movwf	??_calibrate_white^0,c
  8876  003922  0EE4               	movlw	228
  8877  003924                     u6307:
  8878  003924  2EE8               	decfsz	wreg,f,c
  8879  003926  D7FE               	bra	u6307
  8880  003928  2E0E               	decfsz	??_calibrate_white^0,f,c
  8881  00392A  D7FC               	bra	u6307
  8882  00392C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8883  00392E  D7FA               	bra	u6307
  8884  003930  D000               	nop2	
  8885  003932                     
  8886                           ;color.c: 251:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8887  003932  EC8A  F02B         	call	_color_read_Red	;wreg free
  8888  003936  EE20 F006          	lfsr	2,6
  8889  00393A  500C               	movf	calibrate_white@w^0,w,c
  8890  00393C  26D9               	addwf	fsr2l,f,c
  8891  00393E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8892  003940  22DA               	addwfc	fsr2h,f,c
  8893  003942  C005  FFDE         	movff	?_color_read_Red,postinc2
  8894  003946  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8895  00394A  ECB2  F02B         	call	_color_read_Green	;wreg free
  8896  00394E  EE20 F008          	lfsr	2,8
  8897  003952  500C               	movf	calibrate_white@w^0,w,c
  8898  003954  26D9               	addwf	fsr2l,f,c
  8899  003956  500D               	movf	(calibrate_white@w+1)^0,w,c
  8900  003958  22DA               	addwfc	fsr2h,f,c
  8901  00395A  C005  FFDE         	movff	?_color_read_Green,postinc2
  8902  00395E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8903  003962  ECDA  F02B         	call	_color_read_Blue	;wreg free
  8904  003966  EE20 F00A          	lfsr	2,10
  8905  00396A  500C               	movf	calibrate_white@w^0,w,c
  8906  00396C  26D9               	addwf	fsr2l,f,c
  8907  00396E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8908  003970  22DA               	addwfc	fsr2h,f,c
  8909  003972  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8910  003976  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8911  00397A                     
  8912                           ;color.c: 255:     LED_B();
  8913  00397A  EC52  F02E         	call	_LED_B	;wreg free
  8914  00397E                     
  8915                           ;color.c: 256:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8916  00397E  0E09               	movlw	9
  8917  003980  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8918  003982  0E1E               	movlw	30
  8919  003984  6E0E               	movwf	??_calibrate_white^0,c
  8920  003986  0EE4               	movlw	228
  8921  003988                     u6317:
  8922  003988  2EE8               	decfsz	wreg,f,c
  8923  00398A  D7FE               	bra	u6317
  8924  00398C  2E0E               	decfsz	??_calibrate_white^0,f,c
  8925  00398E  D7FC               	bra	u6317
  8926  003990  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8927  003992  D7FA               	bra	u6317
  8928  003994  D000               	nop2	
  8929  003996                     
  8930                           ;color.c: 257:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  8931  003996  EC8A  F02B         	call	_color_read_Red	;wreg free
  8932  00399A  EE20 F00C          	lfsr	2,12
  8933  00399E  500C               	movf	calibrate_white@w^0,w,c
  8934  0039A0  26D9               	addwf	fsr2l,f,c
  8935  0039A2  500D               	movf	(calibrate_white@w+1)^0,w,c
  8936  0039A4  22DA               	addwfc	fsr2h,f,c
  8937  0039A6  C005  FFDE         	movff	?_color_read_Red,postinc2
  8938  0039AA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8939  0039AE  ECB2  F02B         	call	_color_read_Green	;wreg free
  8940  0039B2  EE20 F00E          	lfsr	2,14
  8941  0039B6  500C               	movf	calibrate_white@w^0,w,c
  8942  0039B8  26D9               	addwf	fsr2l,f,c
  8943  0039BA  500D               	movf	(calibrate_white@w+1)^0,w,c
  8944  0039BC  22DA               	addwfc	fsr2h,f,c
  8945  0039BE  C005  FFDE         	movff	?_color_read_Green,postinc2
  8946  0039C2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8947  0039C6  ECDA  F02B         	call	_color_read_Blue	;wreg free
  8948  0039CA  EE20 F010          	lfsr	2,16
  8949  0039CE  500C               	movf	calibrate_white@w^0,w,c
  8950  0039D0  26D9               	addwf	fsr2l,f,c
  8951  0039D2  500D               	movf	(calibrate_white@w+1)^0,w,c
  8952  0039D4  22DA               	addwfc	fsr2h,f,c
  8953  0039D6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8954  0039DA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8955  0039DE  EC02  F02C         	call	_color_read_Clear	;wreg free
  8956  0039E2  EE20 F01A          	lfsr	2,26
  8957  0039E6  500C               	movf	calibrate_white@w^0,w,c
  8958  0039E8  26D9               	addwf	fsr2l,f,c
  8959  0039EA  500D               	movf	(calibrate_white@w+1)^0,w,c
  8960  0039EC  22DA               	addwfc	fsr2h,f,c
  8961  0039EE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8962  0039F2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8963  0039F6                     
  8964                           ;color.c: 260:     LED_C();
  8965  0039F6  EC62  F02E         	call	_LED_C	;wreg free
  8966  0039FA                     
  8967                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8968  0039FA  0E09               	movlw	9
  8969  0039FC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8970  0039FE  0E1E               	movlw	30
  8971  003A00  6E0E               	movwf	??_calibrate_white^0,c
  8972  003A02  0EE4               	movlw	228
  8973  003A04                     u6327:
  8974  003A04  2EE8               	decfsz	wreg,f,c
  8975  003A06  D7FE               	bra	u6327
  8976  003A08  2E0E               	decfsz	??_calibrate_white^0,f,c
  8977  003A0A  D7FC               	bra	u6327
  8978  003A0C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8979  003A0E  D7FA               	bra	u6327
  8980  003A10  D000               	nop2	
  8981  003A12                     
  8982                           ;color.c: 262:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  8983  003A12  EC8A  F02B         	call	_color_read_Red	;wreg free
  8984  003A16  EE20 F012          	lfsr	2,18
  8985  003A1A  500C               	movf	calibrate_white@w^0,w,c
  8986  003A1C  26D9               	addwf	fsr2l,f,c
  8987  003A1E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8988  003A20  22DA               	addwfc	fsr2h,f,c
  8989  003A22  C005  FFDE         	movff	?_color_read_Red,postinc2
  8990  003A26  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8991  003A2A  ECB2  F02B         	call	_color_read_Green	;wreg free
  8992  003A2E  EE20 F014          	lfsr	2,20
  8993  003A32  500C               	movf	calibrate_white@w^0,w,c
  8994  003A34  26D9               	addwf	fsr2l,f,c
  8995  003A36  500D               	movf	(calibrate_white@w+1)^0,w,c
  8996  003A38  22DA               	addwfc	fsr2h,f,c
  8997  003A3A  C005  FFDE         	movff	?_color_read_Green,postinc2
  8998  003A3E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8999  003A42  ECDA  F02B         	call	_color_read_Blue	;wreg free
  9000  003A46  EE20 F016          	lfsr	2,22
  9001  003A4A  500C               	movf	calibrate_white@w^0,w,c
  9002  003A4C  26D9               	addwf	fsr2l,f,c
  9003  003A4E  500D               	movf	(calibrate_white@w+1)^0,w,c
  9004  003A50  22DA               	addwfc	fsr2h,f,c
  9005  003A52  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9006  003A56  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9007  003A5A  EC02  F02C         	call	_color_read_Clear	;wreg free
  9008  003A5E  EE20 F018          	lfsr	2,24
  9009  003A62  500C               	movf	calibrate_white@w^0,w,c
  9010  003A64  26D9               	addwf	fsr2l,f,c
  9011  003A66  500D               	movf	(calibrate_white@w+1)^0,w,c
  9012  003A68  22DA               	addwfc	fsr2h,f,c
  9013  003A6A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9014  003A6E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9015  003A72                     
  9016                           ;color.c: 264:     LED_OFF();
  9017  003A72  EC32  F02E         	call	_LED_OFF	;wreg free
  9018  003A76                     
  9019                           ;color.c: 265:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9020  003A76  0E29               	movlw	41
  9021  003A78  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9022  003A7A  0E96               	movlw	150
  9023  003A7C  6E0E               	movwf	??_calibrate_white^0,c
  9024  003A7E  0E7F               	movlw	127
  9025  003A80                     u6337:
  9026  003A80  2EE8               	decfsz	wreg,f,c
  9027  003A82  D7FE               	bra	u6337
  9028  003A84  2E0E               	decfsz	??_calibrate_white^0,f,c
  9029  003A86  D7FC               	bra	u6337
  9030  003A88  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9031  003A8A  D7FA               	bra	u6337
  9032  003A8C  F000               	nop	
  9033                           
  9034                           ;color.c: 266:     toggle_light(1,2);
  9035  003A8E  0E02               	movlw	2
  9036  003A90  6E01               	movwf	toggle_light@toggletime^0,c
  9037  003A92  0E01               	movlw	1
  9038  003A94  ECE1  F019         	call	_toggle_light
  9039  003A98  0012               	return		;funcret
  9040  003A9A                     __end_of_calibrate_white:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _color_read_Red *****************
  9044 ;; Defined at:
  9045 ;;		line 111 in file "color.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;		None
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  tmp             2    9[COMRAM] unsigned int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    4[COMRAM] unsigned int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:        7 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 3
  9066 ;; This function calls:
  9067 ;;		_I2C_2_Master_Read
  9068 ;;		_I2C_2_Master_RepStart
  9069 ;;		_I2C_2_Master_Start
  9070 ;;		_I2C_2_Master_Stop
  9071 ;;		_I2C_2_Master_Write
  9072 ;; This function is called by:
  9073 ;;		_read_color
  9074 ;;		_calibrate_white
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text38
  9079  005714                     __ptext38:
  9080                           	callstack 0
  9081  005714                     _color_read_Red:
  9082                           	callstack 24
  9083  005714                     
  9084                           ;color.c: 113:  unsigned int tmp;;color.c: 114:  I2C_2_Master_Start();
  9085  005714  ECC2  F02E         	call	_I2C_2_Master_Start	;wreg free
  9086                           
  9087                           ;color.c: 115:  I2C_2_Master_Write(0x52 | 0x00);
  9088  005718  0E52               	movlw	82
  9089  00571A  ECAC  F02E         	call	_I2C_2_Master_Write
  9090                           
  9091                           ;color.c: 116:  I2C_2_Master_Write(0xA0 | 0x16);
  9092  00571E  0EB6               	movlw	182
  9093  005720  ECAC  F02E         	call	_I2C_2_Master_Write
  9094                           
  9095                           ;color.c: 117:  I2C_2_Master_RepStart();
  9096  005724  ECB8  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9097                           
  9098                           ;color.c: 118:  I2C_2_Master_Write(0x52 | 0x01);
  9099  005728  0E53               	movlw	83
  9100  00572A  ECAC  F02E         	call	_I2C_2_Master_Write
  9101                           
  9102                           ;color.c: 119:  tmp=I2C_2_Master_Read(1);
  9103  00572E  0E01               	movlw	1
  9104  005730  EC90  F02C         	call	_I2C_2_Master_Read
  9105  005734  6E07               	movwf	??_color_read_Red^0,c
  9106  005736  5007               	movf	??_color_read_Red^0,w,c
  9107  005738  6E0A               	movwf	color_read_Red@tmp^0,c
  9108  00573A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9109                           
  9110                           ;color.c: 120:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9111  00573C  0E00               	movlw	0
  9112  00573E  EC90  F02C         	call	_I2C_2_Master_Read
  9113  005742  6E07               	movwf	??_color_read_Red^0,c
  9114  005744  5007               	movf	??_color_read_Red^0,w,c
  9115  005746  6E09               	movwf	(??_color_read_Red+2)^0,c
  9116  005748  6A08               	clrf	(??_color_read_Red+1)^0,c
  9117  00574A  500A               	movf	color_read_Red@tmp^0,w,c
  9118  00574C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9119  00574E  6E0A               	movwf	color_read_Red@tmp^0,c
  9120  005750  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9121  005752  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9122  005754  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9123                           
  9124                           ;color.c: 121:  I2C_2_Master_Stop();
  9125  005756  ECBD  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9126  00575A                     
  9127                           ;color.c: 122:  return tmp;
  9128  00575A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9129  00575E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9130  005762  0012               	return		;funcret
  9131  005764                     __end_of_color_read_Red:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function _color_read_Green *****************
  9135 ;; Defined at:
  9136 ;;		line 139 in file "color.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  tmp             2    9[COMRAM] unsigned int 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  2    4[COMRAM] unsigned int 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;Total ram usage:        7 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 3
  9157 ;; This function calls:
  9158 ;;		_I2C_2_Master_Read
  9159 ;;		_I2C_2_Master_RepStart
  9160 ;;		_I2C_2_Master_Start
  9161 ;;		_I2C_2_Master_Stop
  9162 ;;		_I2C_2_Master_Write
  9163 ;; This function is called by:
  9164 ;;		_read_color
  9165 ;;		_calibrate_white
  9166 ;;		_distance_measure
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           	psect	text39
  9171  005764                     __ptext39:
  9172                           	callstack 0
  9173  005764                     _color_read_Green:
  9174                           	callstack 24
  9175  005764                     
  9176                           ;color.c: 141:  unsigned int tmp;;color.c: 142:  I2C_2_Master_Start();
  9177  005764  ECC2  F02E         	call	_I2C_2_Master_Start	;wreg free
  9178                           
  9179                           ;color.c: 143:  I2C_2_Master_Write(0x52 | 0x00);
  9180  005768  0E52               	movlw	82
  9181  00576A  ECAC  F02E         	call	_I2C_2_Master_Write
  9182                           
  9183                           ;color.c: 144:  I2C_2_Master_Write(0xA0 | 0x18);
  9184  00576E  0EB8               	movlw	184
  9185  005770  ECAC  F02E         	call	_I2C_2_Master_Write
  9186                           
  9187                           ;color.c: 145:  I2C_2_Master_RepStart();
  9188  005774  ECB8  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9189                           
  9190                           ;color.c: 146:  I2C_2_Master_Write(0x52 | 0x01);
  9191  005778  0E53               	movlw	83
  9192  00577A  ECAC  F02E         	call	_I2C_2_Master_Write
  9193                           
  9194                           ;color.c: 147:  tmp=I2C_2_Master_Read(1);
  9195  00577E  0E01               	movlw	1
  9196  005780  EC90  F02C         	call	_I2C_2_Master_Read
  9197  005784  6E07               	movwf	??_color_read_Green^0,c
  9198  005786  5007               	movf	??_color_read_Green^0,w,c
  9199  005788  6E0A               	movwf	color_read_Green@tmp^0,c
  9200  00578A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9201                           
  9202                           ;color.c: 148:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9203  00578C  0E00               	movlw	0
  9204  00578E  EC90  F02C         	call	_I2C_2_Master_Read
  9205  005792  6E07               	movwf	??_color_read_Green^0,c
  9206  005794  5007               	movf	??_color_read_Green^0,w,c
  9207  005796  6E09               	movwf	(??_color_read_Green+2)^0,c
  9208  005798  6A08               	clrf	(??_color_read_Green+1)^0,c
  9209  00579A  500A               	movf	color_read_Green@tmp^0,w,c
  9210  00579C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9211  00579E  6E0A               	movwf	color_read_Green@tmp^0,c
  9212  0057A0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9213  0057A2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9214  0057A4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9215                           
  9216                           ;color.c: 149:  I2C_2_Master_Stop();
  9217  0057A6  ECBD  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9218  0057AA                     
  9219                           ;color.c: 150:  return tmp;
  9220  0057AA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9221  0057AE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9222  0057B2  0012               	return		;funcret
  9223  0057B4                     __end_of_color_read_Green:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function _color_read_Blue *****************
  9227 ;; Defined at:
  9228 ;;		line 125 in file "color.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;  tmp             2    9[COMRAM] unsigned int 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  2    4[COMRAM] unsigned int 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2, status,0, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;Total ram usage:        7 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 3
  9249 ;; This function calls:
  9250 ;;		_I2C_2_Master_Read
  9251 ;;		_I2C_2_Master_RepStart
  9252 ;;		_I2C_2_Master_Start
  9253 ;;		_I2C_2_Master_Stop
  9254 ;;		_I2C_2_Master_Write
  9255 ;; This function is called by:
  9256 ;;		_read_color
  9257 ;;		_calibrate_white
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text40
  9262  0057B4                     __ptext40:
  9263                           	callstack 0
  9264  0057B4                     _color_read_Blue:
  9265                           	callstack 24
  9266  0057B4                     
  9267                           ;color.c: 127:  unsigned int tmp;;color.c: 128:  I2C_2_Master_Start();
  9268  0057B4  ECC2  F02E         	call	_I2C_2_Master_Start	;wreg free
  9269                           
  9270                           ;color.c: 129:  I2C_2_Master_Write(0x52 | 0x00);
  9271  0057B8  0E52               	movlw	82
  9272  0057BA  ECAC  F02E         	call	_I2C_2_Master_Write
  9273                           
  9274                           ;color.c: 130:  I2C_2_Master_Write(0xA0 | 0x1A);
  9275  0057BE  0EBA               	movlw	186
  9276  0057C0  ECAC  F02E         	call	_I2C_2_Master_Write
  9277                           
  9278                           ;color.c: 131:  I2C_2_Master_RepStart();
  9279  0057C4  ECB8  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9280                           
  9281                           ;color.c: 132:  I2C_2_Master_Write(0x52 | 0x01);
  9282  0057C8  0E53               	movlw	83
  9283  0057CA  ECAC  F02E         	call	_I2C_2_Master_Write
  9284                           
  9285                           ;color.c: 133:  tmp=I2C_2_Master_Read(1);
  9286  0057CE  0E01               	movlw	1
  9287  0057D0  EC90  F02C         	call	_I2C_2_Master_Read
  9288  0057D4  6E07               	movwf	??_color_read_Blue^0,c
  9289  0057D6  5007               	movf	??_color_read_Blue^0,w,c
  9290  0057D8  6E0A               	movwf	color_read_Blue@tmp^0,c
  9291  0057DA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9292                           
  9293                           ;color.c: 134:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9294  0057DC  0E00               	movlw	0
  9295  0057DE  EC90  F02C         	call	_I2C_2_Master_Read
  9296  0057E2  6E07               	movwf	??_color_read_Blue^0,c
  9297  0057E4  5007               	movf	??_color_read_Blue^0,w,c
  9298  0057E6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9299  0057E8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9300  0057EA  500A               	movf	color_read_Blue@tmp^0,w,c
  9301  0057EC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9302  0057EE  6E0A               	movwf	color_read_Blue@tmp^0,c
  9303  0057F0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9304  0057F2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9305  0057F4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9306                           
  9307                           ;color.c: 135:  I2C_2_Master_Stop();
  9308  0057F6  ECBD  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9309  0057FA                     
  9310                           ;color.c: 136:  return tmp;
  9311  0057FA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9312  0057FE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9313  005802  0012               	return		;funcret
  9314  005804                     __end_of_color_read_Blue:
  9315                           	callstack 0
  9316                           
  9317 ;; *************** function _LED_R *****************
  9318 ;; Defined at:
  9319 ;;		line 184 in file "color.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9337 ;;Total ram usage:        2 bytes
  9338 ;; Hardware stack levels used: 1
  9339 ;; Hardware stack levels required when called: 1
  9340 ;; This function calls:
  9341 ;;		Nothing
  9342 ;; This function is called by:
  9343 ;;		_calibrate_white
  9344 ;;		_detect_color
  9345 ;;		_color_data_collection
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           	psect	text41
  9350  005C44                     __ptext41:
  9351                           	callstack 0
  9352  005C44                     _LED_R:
  9353                           	callstack 27
  9354  005C44                     
  9355                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9356  005C44  827F               	bsf	127,1,c	;volatile
  9357                           
  9358                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9359  005C46  9E7E               	bcf	126,7,c	;volatile
  9360                           
  9361                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9362  005C48  9879               	bcf	121,4,c	;volatile
  9363  005C4A                     
  9364                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9365  005C4A  0E11               	movlw	17
  9366  005C4C  6E02               	movwf	(??_LED_R+1)^0,c
  9367  005C4E  0E3C               	movlw	60
  9368  005C50  6E01               	movwf	??_LED_R^0,c
  9369  005C52  0ECB               	movlw	203
  9370  005C54                     u6347:
  9371  005C54  2EE8               	decfsz	wreg,f,c
  9372  005C56  D7FE               	bra	u6347
  9373  005C58  2E01               	decfsz	??_LED_R^0,f,c
  9374  005C5A  D7FC               	bra	u6347
  9375  005C5C  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9376  005C5E  D7FA               	bra	u6347
  9377  005C60  F000               	nop	
  9378  005C62  0012               	return		;funcret
  9379  005C64                     __end_of_LED_R:
  9380                           	callstack 0
  9381                           
  9382 ;; *************** function _LED_OFF *****************
  9383 ;; Defined at:
  9384 ;;		line 175 in file "color.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;Total ram usage:        2 bytes
  9403 ;; Hardware stack levels used: 1
  9404 ;; Hardware stack levels required when called: 1
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_calibrate_white
  9409 ;;		_setup
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text42
  9414  005C64                     __ptext42:
  9415                           	callstack 0
  9416  005C64                     _LED_OFF:
  9417                           	callstack 27
  9418  005C64                     
  9419                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9420  005C64  927F               	bcf	127,1,c	;volatile
  9421                           
  9422                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9423  005C66  9E7E               	bcf	126,7,c	;volatile
  9424                           
  9425                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9426  005C68  9879               	bcf	121,4,c	;volatile
  9427  005C6A                     
  9428                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9429  005C6A  0E11               	movlw	17
  9430  005C6C  6E02               	movwf	(??_LED_OFF+1)^0,c
  9431  005C6E  0E3C               	movlw	60
  9432  005C70  6E01               	movwf	??_LED_OFF^0,c
  9433  005C72  0ECB               	movlw	203
  9434  005C74                     u6357:
  9435  005C74  2EE8               	decfsz	wreg,f,c
  9436  005C76  D7FE               	bra	u6357
  9437  005C78  2E01               	decfsz	??_LED_OFF^0,f,c
  9438  005C7A  D7FC               	bra	u6357
  9439  005C7C  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9440  005C7E  D7FA               	bra	u6357
  9441  005C80  F000               	nop	
  9442  005C82  0012               	return		;funcret
  9443  005C84                     __end_of_LED_OFF:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _LED_G *****************
  9447 ;; Defined at:
  9448 ;;		line 211 in file "color.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;Total ram usage:        2 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; Hardware stack levels required when called: 1
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_calibrate_white
  9473 ;;		_detect_color
  9474 ;;		_color_data_collection
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text43
  9479  005C84                     __ptext43:
  9480                           	callstack 0
  9481  005C84                     _LED_G:
  9482                           	callstack 27
  9483  005C84                     
  9484                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9485  005C84  927F               	bcf	127,1,c	;volatile
  9486                           
  9487                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9488  005C86  9E7E               	bcf	126,7,c	;volatile
  9489                           
  9490                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9491  005C88  8879               	bsf	121,4,c	;volatile
  9492  005C8A                     
  9493                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9494  005C8A  0E11               	movlw	17
  9495  005C8C  6E02               	movwf	(??_LED_G+1)^0,c
  9496  005C8E  0E3C               	movlw	60
  9497  005C90  6E01               	movwf	??_LED_G^0,c
  9498  005C92  0ECB               	movlw	203
  9499  005C94                     u6367:
  9500  005C94  2EE8               	decfsz	wreg,f,c
  9501  005C96  D7FE               	bra	u6367
  9502  005C98  2E01               	decfsz	??_LED_G^0,f,c
  9503  005C9A  D7FC               	bra	u6367
  9504  005C9C  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9505  005C9E  D7FA               	bra	u6367
  9506  005CA0  F000               	nop	
  9507  005CA2  0012               	return		;funcret
  9508  005CA4                     __end_of_LED_G:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _LED_B *****************
  9512 ;; Defined at:
  9513 ;;		line 202 in file "color.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;		None
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		wreg
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;Total ram usage:        2 bytes
  9532 ;; Hardware stack levels used: 1
  9533 ;; Hardware stack levels required when called: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_calibrate_white
  9538 ;;		_detect_color
  9539 ;;		_color_data_collection
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text44
  9544  005CA4                     __ptext44:
  9545                           	callstack 0
  9546  005CA4                     _LED_B:
  9547                           	callstack 27
  9548  005CA4                     
  9549                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9550  005CA4  927F               	bcf	127,1,c	;volatile
  9551                           
  9552                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9553  005CA6  8E7E               	bsf	126,7,c	;volatile
  9554                           
  9555                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9556  005CA8  9879               	bcf	121,4,c	;volatile
  9557  005CAA                     
  9558                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9559  005CAA  0E11               	movlw	17
  9560  005CAC  6E02               	movwf	(??_LED_B+1)^0,c
  9561  005CAE  0E3C               	movlw	60
  9562  005CB0  6E01               	movwf	??_LED_B^0,c
  9563  005CB2  0ECB               	movlw	203
  9564  005CB4                     u6377:
  9565  005CB4  2EE8               	decfsz	wreg,f,c
  9566  005CB6  D7FE               	bra	u6377
  9567  005CB8  2E01               	decfsz	??_LED_B^0,f,c
  9568  005CBA  D7FC               	bra	u6377
  9569  005CBC  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9570  005CBE  D7FA               	bra	u6377
  9571  005CC0  F000               	nop	
  9572  005CC2  0012               	return		;funcret
  9573  005CC4                     __end_of_LED_B:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function _amb_light_measure *****************
  9577 ;; Defined at:
  9578 ;;		line 358 in file "color.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9581 ;;		 -> main@rgb(8), main@amb(8), 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9584 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9585 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9586 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9587 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  2   10[BANK0 ] unsigned int 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;Total ram usage:       14 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; Hardware stack levels required when called: 5
  9604 ;; This function calls:
  9605 ;;		_LED_C
  9606 ;;		___fldiv
  9607 ;;		___xxtofl
  9608 ;;		_color_read_Clear
  9609 ;;		_lroundf
  9610 ;;		_toggle_light
  9611 ;; This function is called by:
  9612 ;;		_setup
  9613 ;;		_test_function
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text45
  9618  004B86                     __ptext45:
  9619                           	callstack 0
  9620  004B86                     _amb_light_measure:
  9621                           	callstack 24
  9622  004B86  0E00               	movlw	0
  9623  004B88  0100               	movlb	0	; () banked
  9624  004B8A  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9625  004B8C  0E00               	movlw	0
  9626  004B8E  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9627  004B90  0E00               	movlw	0
  9628  004B92  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9629  004B94  0E00               	movlw	0
  9630  004B96  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9631  004B98  0E00               	movlw	0
  9632  004B9A  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9633  004B9C  0E00               	movlw	0
  9634  004B9E  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9635  004BA0                     
  9636                           ; BSR set to: 0
  9637                           ;color.c: 361:     toggle_light(2,2);
  9638  004BA0  0E02               	movlw	2
  9639  004BA2  6E01               	movwf	toggle_light@toggletime^0,c
  9640  004BA4  0E02               	movlw	2
  9641  004BA6  ECE1  F019         	call	_toggle_light
  9642  004BAA                     
  9643                           ;color.c: 362:     LED_C();
  9644  004BAA  EC62  F02E         	call	_LED_C	;wreg free
  9645  004BAE                     
  9646                           ;color.c: 363:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9647  004BAE  0E29               	movlw	41
  9648  004BB0  0100               	movlb	0	; () banked
  9649  004BB2  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9650  004BB4  0E96               	movlw	150
  9651  004BB6  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9652  004BB8  0E7F               	movlw	127
  9653  004BBA                     u6387:
  9654  004BBA  2EE8               	decfsz	wreg,f,c
  9655  004BBC  D7FE               	bra	u6387
  9656  004BBE  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9657  004BC0  D7FC               	bra	u6387
  9658  004BC2  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9659  004BC4  D7FA               	bra	u6387
  9660  004BC6                     
  9661                           ;color.c: 365:     CC_amb_1 = color_read_Clear();
  9662  004BC6  EC02  F02C         	call	_color_read_Clear	;wreg free
  9663  004BCA  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9664  004BCE  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9665  004BD2                     
  9666                           ;color.c: 366:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9667  004BD2  0E11               	movlw	17
  9668  004BD4  0100               	movlb	0	; () banked
  9669  004BD6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9670  004BD8  0E3C               	movlw	60
  9671  004BDA  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9672  004BDC  0ECB               	movlw	203
  9673  004BDE                     u6397:
  9674  004BDE  2EE8               	decfsz	wreg,f,c
  9675  004BE0  D7FE               	bra	u6397
  9676  004BE2  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9677  004BE4  D7FC               	bra	u6397
  9678  004BE6  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9679  004BE8  D7FA               	bra	u6397
  9680  004BEA                     
  9681                           ;color.c: 368:     CC_amb_2 = color_read_Clear();
  9682  004BEA  EC02  F02C         	call	_color_read_Clear	;wreg free
  9683  004BEE  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9684  004BF2  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9685  004BF6                     
  9686                           ;color.c: 369:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9687  004BF6  0E11               	movlw	17
  9688  004BF8  0100               	movlb	0	; () banked
  9689  004BFA  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9690  004BFC  0E3C               	movlw	60
  9691  004BFE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9692  004C00  0ECB               	movlw	203
  9693  004C02                     u6407:
  9694  004C02  2EE8               	decfsz	wreg,f,c
  9695  004C04  D7FE               	bra	u6407
  9696  004C06  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9697  004C08  D7FC               	bra	u6407
  9698  004C0A  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9699  004C0C  D7FA               	bra	u6407
  9700  004C0E                     
  9701                           ;color.c: 371:     CC_amb_3 = color_read_Clear();
  9702  004C0E  EC02  F02C         	call	_color_read_Clear	;wreg free
  9703  004C12  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9704  004C16  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9705  004C1A                     
  9706                           ;color.c: 372:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9707  004C1A  0E11               	movlw	17
  9708  004C1C  0100               	movlb	0	; () banked
  9709  004C1E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9710  004C20  0E3C               	movlw	60
  9711  004C22  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9712  004C24  0ECB               	movlw	203
  9713  004C26                     u6417:
  9714  004C26  2EE8               	decfsz	wreg,f,c
  9715  004C28  D7FE               	bra	u6417
  9716  004C2A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9717  004C2C  D7FC               	bra	u6417
  9718  004C2E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9719  004C30  D7FA               	bra	u6417
  9720  004C32                     
  9721                           ;color.c: 374:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9722  004C32  0100               	movlb	0	; () banked
  9723  004C34  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9724  004C36  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9725  004C38  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9726  004C3A  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9727  004C3C  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9728  004C3E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9729  004C40  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9730  004C42  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9731  004C44  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9732  004C46  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9733  004C48  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9734  004C4C  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9735  004C50  6A03               	clrf	(___xxtofl@val+2)^0,c
  9736  004C52  6A04               	clrf	(___xxtofl@val+3)^0,c
  9737  004C54  0E00               	movlw	0
  9738  004C56  EC12  F01F         	call	___xxtofl
  9739  004C5A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9740  004C5E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9741  004C62  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9742  004C66  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9743  004C6A  0E00               	movlw	0
  9744  004C6C  6E13               	movwf	___fldiv@a^0,c
  9745  004C6E  0E00               	movlw	0
  9746  004C70  6E14               	movwf	(___fldiv@a+1)^0,c
  9747  004C72  0E40               	movlw	64
  9748  004C74  6E15               	movwf	(___fldiv@a+2)^0,c
  9749  004C76  0E40               	movlw	64
  9750  004C78  6E16               	movwf	(___fldiv@a+3)^0,c
  9751  004C7A  EC2A  F015         	call	___fldiv	;wreg free
  9752  004C7E  C00F  F066         	movff	?___fldiv,lroundf@x
  9753  004C82  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9754  004C86  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9755  004C8A  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9756  004C8E  EC2F  F02D         	call	_lroundf	;wreg free
  9757  004C92  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9758  004C96  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9759  004C9A                     
  9760                           ;color.c: 376:     toggle_light(2,2);
  9761  004C9A  0E02               	movlw	2
  9762  004C9C  6E01               	movwf	toggle_light@toggletime^0,c
  9763  004C9E  0E02               	movlw	2
  9764  004CA0  ECE1  F019         	call	_toggle_light
  9765  004CA4                     
  9766                           ;color.c: 378:     return CC_amb_ave;
  9767  004CA4  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9768  004CA8  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9769  004CAC  0012               	return		;funcret
  9770  004CAE                     __end_of_amb_light_measure:
  9771                           	callstack 0
  9772                           
  9773 ;; *************** function _toggle_light *****************
  9774 ;; Defined at:
  9775 ;;		line 49 in file "color.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  lightnumber     1    wreg     unsigned char 
  9778 ;;  toggletime      1    0[COMRAM] unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9781 ;;  i               1    3[COMRAM] unsigned char 
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;Total ram usage:        5 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_calibrate_white
  9802 ;;		_detect_color
  9803 ;;		_amb_light_measure
  9804 ;;		_turning_action
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text46
  9809  0033C2                     __ptext46:
  9810                           	callstack 0
  9811  0033C2                     _toggle_light:
  9812                           	callstack 27
  9813                           
  9814                           ;incstack = 0
  9815                           ;toggle_light@lightnumber stored from wreg
  9816  0033C2  6E05               	movwf	toggle_light@lightnumber^0,c
  9817  0033C4                     
  9818                           ;color.c: 49: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 50: {;color.c: 51:     unsigned char i = 0;
  9819  0033C4  0E00               	movlw	0
  9820  0033C6  6E04               	movwf	toggle_light@i^0,c
  9821                           
  9822                           ;color.c: 53:     for (i = 0; i < toggletime; i++){
  9823  0033C8  0E00               	movlw	0
  9824  0033CA  6E04               	movwf	toggle_light@i^0,c
  9825  0033CC  EF2D  F01B         	goto	l60
  9826  0033D0                     l4384:
  9827                           
  9828                           ;color.c: 54:         if (lightnumber == 1){
  9829  0033D0  0405               	decf	toggle_light@lightnumber^0,w,c
  9830  0033D2  A4D8               	btfss	status,2,c
  9831  0033D4  EFEE  F019         	goto	u4511
  9832  0033D8  EFF0  F019         	goto	u4510
  9833  0033DC                     u4511:
  9834  0033DC  EF28  F01A         	goto	l4392
  9835  0033E0                     u4510:
  9836  0033E0                     
  9837                           ;color.c: 55:             LATHbits.LATH1 = !LATHbits.LATH1;
  9838  0033E0  A280               	btfss	128,1,c	;volatile
  9839  0033E2  EFF5  F019         	goto	u4521
  9840  0033E6  EFF9  F019         	goto	u4520
  9841  0033EA                     u4521:
  9842  0033EA  6A02               	clrf	??_toggle_light^0,c
  9843  0033EC  2A02               	incf	??_toggle_light^0,f,c
  9844  0033EE  EFFA  F019         	goto	u4538
  9845  0033F2                     u4520:
  9846  0033F2  6A02               	clrf	??_toggle_light^0,c
  9847  0033F4                     u4538:
  9848  0033F4  4602               	rlncf	??_toggle_light^0,f,c
  9849  0033F6  5080               	movf	128,w,c	;volatile
  9850  0033F8  1802               	xorwf	??_toggle_light^0,w,c
  9851  0033FA  0BFD               	andlw	-3
  9852  0033FC  1802               	xorwf	??_toggle_light^0,w,c
  9853  0033FE  6E80               	movwf	128,c	;volatile
  9854  003400                     
  9855                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9856  003400  0E29               	movlw	41
  9857  003402  6E03               	movwf	(??_toggle_light+1)^0,c
  9858  003404  0E96               	movlw	150
  9859  003406  6E02               	movwf	??_toggle_light^0,c
  9860  003408  0E7F               	movlw	127
  9861  00340A                     u6427:
  9862  00340A  2EE8               	decfsz	wreg,f,c
  9863  00340C  D7FE               	bra	u6427
  9864  00340E  2E02               	decfsz	??_toggle_light^0,f,c
  9865  003410  D7FC               	bra	u6427
  9866  003412  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9867  003414  D7FA               	bra	u6427
  9868  003416  F000               	nop	
  9869  003418                     
  9870                           ;color.c: 57:             LATHbits.LATH1 = !LATHbits.LATH1;
  9871  003418  A280               	btfss	128,1,c	;volatile
  9872  00341A  EF11  F01A         	goto	u4541
  9873  00341E  EF15  F01A         	goto	u4540
  9874  003422                     u4541:
  9875  003422  6A02               	clrf	??_toggle_light^0,c
  9876  003424  2A02               	incf	??_toggle_light^0,f,c
  9877  003426  EF16  F01A         	goto	u4558
  9878  00342A                     u4540:
  9879  00342A  6A02               	clrf	??_toggle_light^0,c
  9880  00342C                     u4558:
  9881  00342C  4602               	rlncf	??_toggle_light^0,f,c
  9882  00342E  5080               	movf	128,w,c	;volatile
  9883  003430  1802               	xorwf	??_toggle_light^0,w,c
  9884  003432  0BFD               	andlw	-3
  9885  003434  1802               	xorwf	??_toggle_light^0,w,c
  9886  003436  6E80               	movwf	128,c	;volatile
  9887                           
  9888                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9889  003438  0E29               	movlw	41
  9890  00343A  6E03               	movwf	(??_toggle_light+1)^0,c
  9891  00343C  0E96               	movlw	150
  9892  00343E  6E02               	movwf	??_toggle_light^0,c
  9893  003440  0E7F               	movlw	127
  9894  003442                     u6437:
  9895  003442  2EE8               	decfsz	wreg,f,c
  9896  003444  D7FE               	bra	u6437
  9897  003446  2E02               	decfsz	??_toggle_light^0,f,c
  9898  003448  D7FC               	bra	u6437
  9899  00344A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9900  00344C  D7FA               	bra	u6437
  9901  00344E  F000               	nop	
  9902  003450                     l4392:
  9903                           
  9904                           ;color.c: 60:         if (lightnumber == 2){
  9905  003450  0E02               	movlw	2
  9906  003452  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9907  003454  A4D8               	btfss	status,2,c
  9908  003456  EF2F  F01A         	goto	u4561
  9909  00345A  EF31  F01A         	goto	u4560
  9910  00345E                     u4561:
  9911  00345E  EF69  F01A         	goto	l4400
  9912  003462                     u4560:
  9913  003462                     
  9914                           ;color.c: 61:             LATDbits.LATD4 = !LATDbits.LATD4;
  9915  003462  A87C               	btfss	124,4,c	;volatile
  9916  003464  EF36  F01A         	goto	u4571
  9917  003468  EF3A  F01A         	goto	u4570
  9918  00346C                     u4571:
  9919  00346C  6A02               	clrf	??_toggle_light^0,c
  9920  00346E  2A02               	incf	??_toggle_light^0,f,c
  9921  003470  EF3B  F01A         	goto	u4588
  9922  003474                     u4570:
  9923  003474  6A02               	clrf	??_toggle_light^0,c
  9924  003476                     u4588:
  9925  003476  3A02               	swapf	??_toggle_light^0,f,c
  9926  003478  507C               	movf	124,w,c	;volatile
  9927  00347A  1802               	xorwf	??_toggle_light^0,w,c
  9928  00347C  0BEF               	andlw	-17
  9929  00347E  1802               	xorwf	??_toggle_light^0,w,c
  9930  003480  6E7C               	movwf	124,c	;volatile
  9931  003482                     
  9932                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9933  003482  0E29               	movlw	41
  9934  003484  6E03               	movwf	(??_toggle_light+1)^0,c
  9935  003486  0E96               	movlw	150
  9936  003488  6E02               	movwf	??_toggle_light^0,c
  9937  00348A  0E7F               	movlw	127
  9938  00348C                     u6447:
  9939  00348C  2EE8               	decfsz	wreg,f,c
  9940  00348E  D7FE               	bra	u6447
  9941  003490  2E02               	decfsz	??_toggle_light^0,f,c
  9942  003492  D7FC               	bra	u6447
  9943  003494  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9944  003496  D7FA               	bra	u6447
  9945  003498  F000               	nop	
  9946  00349A                     
  9947                           ;color.c: 63:             LATDbits.LATD4 = !LATDbits.LATD4;
  9948  00349A  A87C               	btfss	124,4,c	;volatile
  9949  00349C  EF52  F01A         	goto	u4591
  9950  0034A0  EF56  F01A         	goto	u4590
  9951  0034A4                     u4591:
  9952  0034A4  6A02               	clrf	??_toggle_light^0,c
  9953  0034A6  2A02               	incf	??_toggle_light^0,f,c
  9954  0034A8  EF57  F01A         	goto	u4608
  9955  0034AC                     u4590:
  9956  0034AC  6A02               	clrf	??_toggle_light^0,c
  9957  0034AE                     u4608:
  9958  0034AE  3A02               	swapf	??_toggle_light^0,f,c
  9959  0034B0  507C               	movf	124,w,c	;volatile
  9960  0034B2  1802               	xorwf	??_toggle_light^0,w,c
  9961  0034B4  0BEF               	andlw	-17
  9962  0034B6  1802               	xorwf	??_toggle_light^0,w,c
  9963  0034B8  6E7C               	movwf	124,c	;volatile
  9964                           
  9965                           ;color.c: 64:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9966  0034BA  0E29               	movlw	41
  9967  0034BC  6E03               	movwf	(??_toggle_light+1)^0,c
  9968  0034BE  0E96               	movlw	150
  9969  0034C0  6E02               	movwf	??_toggle_light^0,c
  9970  0034C2  0E7F               	movlw	127
  9971  0034C4                     u6457:
  9972  0034C4  2EE8               	decfsz	wreg,f,c
  9973  0034C6  D7FE               	bra	u6457
  9974  0034C8  2E02               	decfsz	??_toggle_light^0,f,c
  9975  0034CA  D7FC               	bra	u6457
  9976  0034CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9977  0034CE  D7FA               	bra	u6457
  9978  0034D0  F000               	nop	
  9979  0034D2                     l4400:
  9980                           
  9981                           ;color.c: 66:         if (lightnumber == 3){
  9982  0034D2  0E03               	movlw	3
  9983  0034D4  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9984  0034D6  A4D8               	btfss	status,2,c
  9985  0034D8  EF70  F01A         	goto	u4611
  9986  0034DC  EF72  F01A         	goto	u4610
  9987  0034E0                     u4611:
  9988  0034E0  EFAE  F01A         	goto	l4408
  9989  0034E4                     u4610:
  9990  0034E4                     
  9991                           ;color.c: 67:             LATDbits.LATD3 = !LATDbits.LATD3;
  9992  0034E4  A67C               	btfss	124,3,c	;volatile
  9993  0034E6  EF77  F01A         	goto	u4621
  9994  0034EA  EF7B  F01A         	goto	u4620
  9995  0034EE                     u4621:
  9996  0034EE  6A02               	clrf	??_toggle_light^0,c
  9997  0034F0  2A02               	incf	??_toggle_light^0,f,c
  9998  0034F2  EF7C  F01A         	goto	u4638
  9999  0034F6                     u4620:
 10000  0034F6  6A02               	clrf	??_toggle_light^0,c
 10001  0034F8                     u4638:
 10002  0034F8  4602               	rlncf	??_toggle_light^0,f,c
 10003  0034FA  4602               	rlncf	??_toggle_light^0,f,c
 10004  0034FC  4602               	rlncf	??_toggle_light^0,f,c
 10005  0034FE  507C               	movf	124,w,c	;volatile
 10006  003500  1802               	xorwf	??_toggle_light^0,w,c
 10007  003502  0BF7               	andlw	-9
 10008  003504  1802               	xorwf	??_toggle_light^0,w,c
 10009  003506  6E7C               	movwf	124,c	;volatile
 10010  003508                     
 10011                           ;color.c: 68:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10012  003508  0E29               	movlw	41
 10013  00350A  6E03               	movwf	(??_toggle_light+1)^0,c
 10014  00350C  0E96               	movlw	150
 10015  00350E  6E02               	movwf	??_toggle_light^0,c
 10016  003510  0E7F               	movlw	127
 10017  003512                     u6467:
 10018  003512  2EE8               	decfsz	wreg,f,c
 10019  003514  D7FE               	bra	u6467
 10020  003516  2E02               	decfsz	??_toggle_light^0,f,c
 10021  003518  D7FC               	bra	u6467
 10022  00351A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10023  00351C  D7FA               	bra	u6467
 10024  00351E  F000               	nop	
 10025  003520                     
 10026                           ;color.c: 69:             LATDbits.LATD3 = !LATDbits.LATD3;
 10027  003520  A67C               	btfss	124,3,c	;volatile
 10028  003522  EF95  F01A         	goto	u4641
 10029  003526  EF99  F01A         	goto	u4640
 10030  00352A                     u4641:
 10031  00352A  6A02               	clrf	??_toggle_light^0,c
 10032  00352C  2A02               	incf	??_toggle_light^0,f,c
 10033  00352E  EF9A  F01A         	goto	u4658
 10034  003532                     u4640:
 10035  003532  6A02               	clrf	??_toggle_light^0,c
 10036  003534                     u4658:
 10037  003534  4602               	rlncf	??_toggle_light^0,f,c
 10038  003536  4602               	rlncf	??_toggle_light^0,f,c
 10039  003538  4602               	rlncf	??_toggle_light^0,f,c
 10040  00353A  507C               	movf	124,w,c	;volatile
 10041  00353C  1802               	xorwf	??_toggle_light^0,w,c
 10042  00353E  0BF7               	andlw	-9
 10043  003540  1802               	xorwf	??_toggle_light^0,w,c
 10044  003542  6E7C               	movwf	124,c	;volatile
 10045                           
 10046                           ;color.c: 70:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10047  003544  0E29               	movlw	41
 10048  003546  6E03               	movwf	(??_toggle_light+1)^0,c
 10049  003548  0E96               	movlw	150
 10050  00354A  6E02               	movwf	??_toggle_light^0,c
 10051  00354C  0E7F               	movlw	127
 10052  00354E                     u6477:
 10053  00354E  2EE8               	decfsz	wreg,f,c
 10054  003550  D7FE               	bra	u6477
 10055  003552  2E02               	decfsz	??_toggle_light^0,f,c
 10056  003554  D7FC               	bra	u6477
 10057  003556  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10058  003558  D7FA               	bra	u6477
 10059  00355A  F000               	nop	
 10060  00355C                     l4408:
 10061                           
 10062                           ;color.c: 72:         if (lightnumber == 4){
 10063  00355C  0E04               	movlw	4
 10064  00355E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10065  003560  A4D8               	btfss	status,2,c
 10066  003562  EFB5  F01A         	goto	u4661
 10067  003566  EFB7  F01A         	goto	u4660
 10068  00356A                     u4661:
 10069  00356A  EFED  F01A         	goto	l4416
 10070  00356E                     u4660:
 10071  00356E                     
 10072                           ;color.c: 73:             LATFbits.LATF0 = !LATFbits.LATF0;
 10073  00356E  A07E               	btfss	126,0,c	;volatile
 10074  003570  EFBC  F01A         	goto	u4671
 10075  003574  EFC0  F01A         	goto	u4670
 10076  003578                     u4671:
 10077  003578  6A02               	clrf	??_toggle_light^0,c
 10078  00357A  2A02               	incf	??_toggle_light^0,f,c
 10079  00357C  EFC1  F01A         	goto	u4688
 10080  003580                     u4670:
 10081  003580  6A02               	clrf	??_toggle_light^0,c
 10082  003582                     u4688:
 10083  003582  507E               	movf	126,w,c	;volatile
 10084  003584  1802               	xorwf	??_toggle_light^0,w,c
 10085  003586  0BFE               	andlw	-2
 10086  003588  1802               	xorwf	??_toggle_light^0,w,c
 10087  00358A  6E7E               	movwf	126,c	;volatile
 10088  00358C                     
 10089                           ;color.c: 74:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10090  00358C  0E29               	movlw	41
 10091  00358E  6E03               	movwf	(??_toggle_light+1)^0,c
 10092  003590  0E96               	movlw	150
 10093  003592  6E02               	movwf	??_toggle_light^0,c
 10094  003594  0E7F               	movlw	127
 10095  003596                     u6487:
 10096  003596  2EE8               	decfsz	wreg,f,c
 10097  003598  D7FE               	bra	u6487
 10098  00359A  2E02               	decfsz	??_toggle_light^0,f,c
 10099  00359C  D7FC               	bra	u6487
 10100  00359E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10101  0035A0  D7FA               	bra	u6487
 10102  0035A2  F000               	nop	
 10103  0035A4                     
 10104                           ;color.c: 75:             LATFbits.LATF0 = !LATFbits.LATF0;
 10105  0035A4  A07E               	btfss	126,0,c	;volatile
 10106  0035A6  EFD7  F01A         	goto	u4691
 10107  0035AA  EFDB  F01A         	goto	u4690
 10108  0035AE                     u4691:
 10109  0035AE  6A02               	clrf	??_toggle_light^0,c
 10110  0035B0  2A02               	incf	??_toggle_light^0,f,c
 10111  0035B2  EFDC  F01A         	goto	u4708
 10112  0035B6                     u4690:
 10113  0035B6  6A02               	clrf	??_toggle_light^0,c
 10114  0035B8                     u4708:
 10115  0035B8  507E               	movf	126,w,c	;volatile
 10116  0035BA  1802               	xorwf	??_toggle_light^0,w,c
 10117  0035BC  0BFE               	andlw	-2
 10118  0035BE  1802               	xorwf	??_toggle_light^0,w,c
 10119  0035C0  6E7E               	movwf	126,c	;volatile
 10120                           
 10121                           ;color.c: 76:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10122  0035C2  0E29               	movlw	41
 10123  0035C4  6E03               	movwf	(??_toggle_light+1)^0,c
 10124  0035C6  0E96               	movlw	150
 10125  0035C8  6E02               	movwf	??_toggle_light^0,c
 10126  0035CA  0E7F               	movlw	127
 10127  0035CC                     u6497:
 10128  0035CC  2EE8               	decfsz	wreg,f,c
 10129  0035CE  D7FE               	bra	u6497
 10130  0035D0  2E02               	decfsz	??_toggle_light^0,f,c
 10131  0035D2  D7FC               	bra	u6497
 10132  0035D4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10133  0035D6  D7FA               	bra	u6497
 10134  0035D8  F000               	nop	
 10135  0035DA                     l4416:
 10136                           
 10137                           ;color.c: 78:         if (lightnumber == 3){
 10138  0035DA  0E03               	movlw	3
 10139  0035DC  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10140  0035DE  A4D8               	btfss	status,2,c
 10141  0035E0  EFF4  F01A         	goto	u4711
 10142  0035E4  EFF6  F01A         	goto	u4710
 10143  0035E8                     u4711:
 10144  0035E8  EF2C  F01B         	goto	l4424
 10145  0035EC                     u4710:
 10146  0035EC                     
 10147                           ;color.c: 79:             LATHbits.LATH0 = !LATHbits.LATH0;
 10148  0035EC  A080               	btfss	128,0,c	;volatile
 10149  0035EE  EFFB  F01A         	goto	u4721
 10150  0035F2  EFFF  F01A         	goto	u4720
 10151  0035F6                     u4721:
 10152  0035F6  6A02               	clrf	??_toggle_light^0,c
 10153  0035F8  2A02               	incf	??_toggle_light^0,f,c
 10154  0035FA  EF00  F01B         	goto	u4738
 10155  0035FE                     u4720:
 10156  0035FE  6A02               	clrf	??_toggle_light^0,c
 10157  003600                     u4738:
 10158  003600  5080               	movf	128,w,c	;volatile
 10159  003602  1802               	xorwf	??_toggle_light^0,w,c
 10160  003604  0BFE               	andlw	-2
 10161  003606  1802               	xorwf	??_toggle_light^0,w,c
 10162  003608  6E80               	movwf	128,c	;volatile
 10163  00360A                     
 10164                           ;color.c: 80:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10165  00360A  0E29               	movlw	41
 10166  00360C  6E03               	movwf	(??_toggle_light+1)^0,c
 10167  00360E  0E96               	movlw	150
 10168  003610  6E02               	movwf	??_toggle_light^0,c
 10169  003612  0E7F               	movlw	127
 10170  003614                     u6507:
 10171  003614  2EE8               	decfsz	wreg,f,c
 10172  003616  D7FE               	bra	u6507
 10173  003618  2E02               	decfsz	??_toggle_light^0,f,c
 10174  00361A  D7FC               	bra	u6507
 10175  00361C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10176  00361E  D7FA               	bra	u6507
 10177  003620  F000               	nop	
 10178  003622                     
 10179                           ;color.c: 81:             LATHbits.LATH0 = !LATHbits.LATH0;
 10180  003622  A080               	btfss	128,0,c	;volatile
 10181  003624  EF16  F01B         	goto	u4741
 10182  003628  EF1A  F01B         	goto	u4740
 10183  00362C                     u4741:
 10184  00362C  6A02               	clrf	??_toggle_light^0,c
 10185  00362E  2A02               	incf	??_toggle_light^0,f,c
 10186  003630  EF1B  F01B         	goto	u4758
 10187  003634                     u4740:
 10188  003634  6A02               	clrf	??_toggle_light^0,c
 10189  003636                     u4758:
 10190  003636  5080               	movf	128,w,c	;volatile
 10191  003638  1802               	xorwf	??_toggle_light^0,w,c
 10192  00363A  0BFE               	andlw	-2
 10193  00363C  1802               	xorwf	??_toggle_light^0,w,c
 10194  00363E  6E80               	movwf	128,c	;volatile
 10195                           
 10196                           ;color.c: 82:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10197  003640  0E29               	movlw	41
 10198  003642  6E03               	movwf	(??_toggle_light+1)^0,c
 10199  003644  0E96               	movlw	150
 10200  003646  6E02               	movwf	??_toggle_light^0,c
 10201  003648  0E7F               	movlw	127
 10202  00364A                     u6517:
 10203  00364A  2EE8               	decfsz	wreg,f,c
 10204  00364C  D7FE               	bra	u6517
 10205  00364E  2E02               	decfsz	??_toggle_light^0,f,c
 10206  003650  D7FC               	bra	u6517
 10207  003652  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10208  003654  D7FA               	bra	u6517
 10209  003656  F000               	nop	
 10210  003658                     l4424:
 10211                           
 10212                           ;color.c: 84:     }
 10213  003658  2A04               	incf	toggle_light@i^0,f,c
 10214  00365A                     l60:
 10215  00365A  5001               	movf	toggle_light@toggletime^0,w,c
 10216  00365C  5C04               	subwf	toggle_light@i^0,w,c
 10217  00365E  A0D8               	btfss	status,0,c
 10218  003660  EF34  F01B         	goto	u4761
 10219  003664  EF36  F01B         	goto	u4760
 10220  003668                     u4761:
 10221  003668  EFE8  F019         	goto	l4384
 10222  00366C                     u4760:
 10223  00366C  0012               	return		;funcret
 10224  00366E                     __end_of_toggle_light:
 10225                           	callstack 0
 10226                           
 10227 ;; *************** function _lroundf *****************
 10228 ;; Defined at:
 10229 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;  x               4    6[BANK0 ] float 
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;		None
 10234 ;; Return value:  Size  Location     Type
 10235 ;;                  4    6[BANK0 ] long 
 10236 ;; Registers used:
 10237 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10247 ;;Total ram usage:        4 bytes
 10248 ;; Hardware stack levels used: 1
 10249 ;; Hardware stack levels required when called: 4
 10250 ;; This function calls:
 10251 ;;		___fltol
 10252 ;;		_roundf
 10253 ;; This function is called by:
 10254 ;;		_detect_color
 10255 ;;		_amb_light_measure
 10256 ;;		_distance_measure
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text47
 10261  005A5E                     __ptext47:
 10262                           	callstack 0
 10263  005A5E                     _lroundf:
 10264                           	callstack 24
 10265  005A5E  C066  F041         	movff	lroundf@x,roundf@x
 10266  005A62  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10267  005A66  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10268  005A6A  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10269  005A6E  EC81  F011         	call	_roundf	;wreg free
 10270  005A72  C041  F05B         	movff	?_roundf,___fltol@f1
 10271  005A76  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10272  005A7A  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10273  005A7E  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10274  005A82  EC57  F026         	call	___fltol	;wreg free
 10275  005A86  C05B  F066         	movff	?___fltol,?_lroundf
 10276  005A8A  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10277  005A8E  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10278  005A92  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10279  005A96  0012               	return		;funcret
 10280  005A98                     __end_of_lroundf:
 10281                           	callstack 0
 10282                           
 10283 ;; *************** function _roundf *****************
 10284 ;; Defined at:
 10285 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  x               4   64[COMRAM] float 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  y               4   86[COMRAM] float 
 10290 ;;  u               4   82[COMRAM] struct .
 10291 ;;  e               2   76[COMRAM] int 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  4   64[COMRAM] float 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;Total ram usage:       26 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 3
 10308 ;; This function calls:
 10309 ;;		___fladd
 10310 ;;		___flge
 10311 ;;		___flmul
 10312 ;;		___flneg
 10313 ;;		___flsub
 10314 ;; This function is called by:
 10315 ;;		_lroundf
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text48
 10320  002302                     __ptext48:
 10321                           	callstack 0
 10322  002302                     _roundf:
 10323                           	callstack 24
 10324  002302  C13A  F053         	movff	roundf@F527,roundf@u
 10325  002306  C13B  F054         	movff	roundf@F527+1,roundf@u+1
 10326  00230A  C13C  F055         	movff	roundf@F527+2,roundf@u+2
 10327  00230E  C13D  F056         	movff	roundf@F527+3,roundf@u+3
 10328  002312  C041  F053         	movff	roundf@x,roundf@u
 10329  002316  C042  F054         	movff	roundf@x+1,roundf@u+1
 10330  00231A  C043  F055         	movff	roundf@x+2,roundf@u+2
 10331  00231E  C044  F056         	movff	roundf@x+3,roundf@u+3
 10332  002322  C053  F045         	movff	roundf@u,??_roundf
 10333  002326  C054  F046         	movff	roundf@u+1,??_roundf+1
 10334  00232A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10335  00232E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10336  002332  0E18               	movlw	24
 10337  002334  EFA1  F011         	goto	u4420
 10338  002338                     u4425:
 10339  002338  90D8               	bcf	status,0,c
 10340  00233A  3248               	rrcf	(??_roundf+3)^0,f,c
 10341  00233C  3247               	rrcf	(??_roundf+2)^0,f,c
 10342  00233E  3246               	rrcf	(??_roundf+1)^0,f,c
 10343  002340  3245               	rrcf	??_roundf^0,f,c
 10344  002342                     u4420:
 10345  002342  2EE8               	decfsz	wreg,f,c
 10346  002344  EF9C  F011         	goto	u4425
 10347  002348  5045               	movf	??_roundf^0,w,c
 10348  00234A  6E4D               	movwf	roundf@e^0,c
 10349  00234C  6A4E               	clrf	(roundf@e+1)^0,c
 10350  00234E  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10351  002350  EFB3  F011         	goto	u4431
 10352  002354  504E               	movf	(roundf@e+1)^0,w,c
 10353  002356  E109               	bnz	u4430
 10354  002358  0E96               	movlw	150
 10355  00235A  5C4D               	subwf	roundf@e^0,w,c
 10356  00235C  A0D8               	btfss	status,0,c
 10357  00235E  EFB3  F011         	goto	u4431
 10358  002362  EFB5  F011         	goto	u4430
 10359  002366                     u4431:
 10360  002366  EFBF  F011         	goto	l4354
 10361  00236A                     u4430:
 10362  00236A  C041  F041         	movff	roundf@x,?_roundf
 10363  00236E  C042  F042         	movff	roundf@x+1,?_roundf+1
 10364  002372  C043  F043         	movff	roundf@x+2,?_roundf+2
 10365  002376  C044  F044         	movff	roundf@x+3,?_roundf+3
 10366  00237A  EF57  F013         	goto	l1433
 10367  00237E                     l4354:
 10368  00237E  C053  F045         	movff	roundf@u,??_roundf
 10369  002382  C054  F046         	movff	roundf@u+1,??_roundf+1
 10370  002386  C055  F047         	movff	roundf@u+2,??_roundf+2
 10371  00238A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10372  00238E  0E20               	movlw	32
 10373  002390  EFCF  F011         	goto	u4440
 10374  002394                     u4445:
 10375  002394  90D8               	bcf	status,0,c
 10376  002396  3248               	rrcf	(??_roundf+3)^0,f,c
 10377  002398  3247               	rrcf	(??_roundf+2)^0,f,c
 10378  00239A  3246               	rrcf	(??_roundf+1)^0,f,c
 10379  00239C  3245               	rrcf	??_roundf^0,f,c
 10380  00239E                     u4440:
 10381  00239E  2EE8               	decfsz	wreg,f,c
 10382  0023A0  EFCA  F011         	goto	u4445
 10383  0023A4  5045               	movf	??_roundf^0,w,c
 10384  0023A6  1046               	iorwf	(??_roundf+1)^0,w,c
 10385  0023A8  1047               	iorwf	(??_roundf+2)^0,w,c
 10386  0023AA  1048               	iorwf	(??_roundf+3)^0,w,c
 10387  0023AC  B4D8               	btfsc	status,2,c
 10388  0023AE  EFDB  F011         	goto	u4451
 10389  0023B2  EFDD  F011         	goto	u4450
 10390  0023B6                     u4451:
 10391  0023B6  EFEF  F011         	goto	l4358
 10392  0023BA                     u4450:
 10393  0023BA  C041  F001         	movff	roundf@x,___flneg@f1
 10394  0023BE  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10395  0023C2  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10396  0023C6  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10397  0023CA  EC4C  F02D         	call	___flneg	;wreg free
 10398  0023CE  C001  F041         	movff	?___flneg,roundf@x
 10399  0023D2  C002  F042         	movff	?___flneg+1,roundf@x+1
 10400  0023D6  C003  F043         	movff	?___flneg+2,roundf@x+2
 10401  0023DA  C004  F044         	movff	?___flneg+3,roundf@x+3
 10402  0023DE                     l4358:
 10403  0023DE  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10404  0023E0  EFFD  F011         	goto	u4460
 10405  0023E4  504E               	movf	(roundf@e+1)^0,w,c
 10406  0023E6  E107               	bnz	u4461
 10407  0023E8  0E7E               	movlw	126
 10408  0023EA  5C4D               	subwf	roundf@e^0,w,c
 10409  0023EC  B0D8               	btfsc	status,0,c
 10410  0023EE  EFFB  F011         	goto	u4461
 10411  0023F2  EFFD  F011         	goto	u4460
 10412  0023F6                     u4461:
 10413  0023F6  EF19  F012         	goto	l4364
 10414  0023FA                     u4460:
 10415  0023FA  C053  F028         	movff	roundf@u,___flmul@b
 10416  0023FE  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10417  002402  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10418  002406  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10419  00240A  0E00               	movlw	0
 10420  00240C  6E2C               	movwf	___flmul@a^0,c
 10421  00240E  0E00               	movlw	0
 10422  002410  6E2D               	movwf	(___flmul@a+1)^0,c
 10423  002412  0E00               	movlw	0
 10424  002414  6E2E               	movwf	(___flmul@a+2)^0,c
 10425  002416  0E00               	movlw	0
 10426  002418  6E2F               	movwf	(___flmul@a+3)^0,c
 10427  00241A  EC6C  F00F         	call	___flmul	;wreg free
 10428  00241E  C028  F041         	movff	?___flmul,?_roundf
 10429  002422  C029  F042         	movff	?___flmul+1,?_roundf+1
 10430  002426  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10431  00242A  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10432  00242E  EF57  F013         	goto	l1433
 10433  002432                     l4364:
 10434  002432  0E00               	movlw	0
 10435  002434  6E05               	movwf	___fladd@a^0,c
 10436  002436  0E00               	movlw	0
 10437  002438  6E06               	movwf	(___fladd@a+1)^0,c
 10438  00243A  0E00               	movlw	0
 10439  00243C  6E07               	movwf	(___fladd@a+2)^0,c
 10440  00243E  0E4B               	movlw	75
 10441  002440  6E08               	movwf	(___fladd@a+3)^0,c
 10442  002442  C041  F001         	movff	roundf@x,___fladd@b
 10443  002446  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10444  00244A  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10445  00244E  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10446  002452  EC0C  F00D         	call	___fladd	;wreg free
 10447  002456  C001  F04F         	movff	?___fladd,_roundf$2951
 10448  00245A  C002  F050         	movff	?___fladd+1,_roundf$2951+1
 10449  00245E  C003  F051         	movff	?___fladd+2,_roundf$2951+2
 10450  002462  C004  F052         	movff	?___fladd+3,_roundf$2951+3
 10451  002466  0E00               	movlw	0
 10452  002468  6E05               	movwf	___fladd@a^0,c
 10453  00246A  0E00               	movlw	0
 10454  00246C  6E06               	movwf	(___fladd@a+1)^0,c
 10455  00246E  0E00               	movlw	0
 10456  002470  6E07               	movwf	(___fladd@a+2)^0,c
 10457  002472  0ECB               	movlw	203
 10458  002474  6E08               	movwf	(___fladd@a+3)^0,c
 10459  002476  C04F  F001         	movff	_roundf$2951,___fladd@b
 10460  00247A  C050  F002         	movff	_roundf$2951+1,___fladd@b+1
 10461  00247E  C051  F003         	movff	_roundf$2951+2,___fladd@b+2
 10462  002482  C052  F004         	movff	_roundf$2951+3,___fladd@b+3
 10463  002486  EC0C  F00D         	call	___fladd	;wreg free
 10464  00248A  C001  F049         	movff	?___fladd,_roundf$2952
 10465  00248E  C002  F04A         	movff	?___fladd+1,_roundf$2952+1
 10466  002492  C003  F04B         	movff	?___fladd+2,_roundf$2952+2
 10467  002496  C004  F04C         	movff	?___fladd+3,_roundf$2952+3
 10468  00249A  C049  F011         	movff	_roundf$2952,___flsub@b
 10469  00249E  C04A  F012         	movff	_roundf$2952+1,___flsub@b+1
 10470  0024A2  C04B  F013         	movff	_roundf$2952+2,___flsub@b+2
 10471  0024A6  C04C  F014         	movff	_roundf$2952+3,___flsub@b+3
 10472  0024AA  C041  F015         	movff	roundf@x,___flsub@a
 10473  0024AE  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10474  0024B2  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10475  0024B6  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10476  0024BA  EC2A  F02C         	call	___flsub	;wreg free
 10477  0024BE  C011  F057         	movff	?___flsub,roundf@y
 10478  0024C2  C012  F058         	movff	?___flsub+1,roundf@y+1
 10479  0024C6  C013  F059         	movff	?___flsub+2,roundf@y+2
 10480  0024CA  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10481  0024CE  0E00               	movlw	0
 10482  0024D0  6E01               	movwf	___flge@ff1^0,c
 10483  0024D2  0E00               	movlw	0
 10484  0024D4  6E02               	movwf	(___flge@ff1+1)^0,c
 10485  0024D6  0E00               	movlw	0
 10486  0024D8  6E03               	movwf	(___flge@ff1+2)^0,c
 10487  0024DA  0E3F               	movlw	63
 10488  0024DC  6E04               	movwf	(___flge@ff1+3)^0,c
 10489  0024DE  C057  F005         	movff	roundf@y,___flge@ff2
 10490  0024E2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10491  0024E6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10492  0024EA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10493  0024EE  ECDB  F026         	call	___flge	;wreg free
 10494  0024F2  B0D8               	btfsc	status,0,c
 10495  0024F4  EF7E  F012         	goto	u4471
 10496  0024F8  EF80  F012         	goto	u4470
 10497  0024FC                     u4471:
 10498  0024FC  EFB6  F012         	goto	l4368
 10499  002500                     u4470:
 10500  002500  C041  F005         	movff	roundf@x,___fladd@a
 10501  002504  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10502  002508  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10503  00250C  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10504  002510  C057  F001         	movff	roundf@y,___fladd@b
 10505  002514  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10506  002518  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10507  00251C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10508  002520  EC0C  F00D         	call	___fladd	;wreg free
 10509  002524  C001  F04F         	movff	?___fladd,_roundf$2951
 10510  002528  C002  F050         	movff	?___fladd+1,_roundf$2951+1
 10511  00252C  C003  F051         	movff	?___fladd+2,_roundf$2951+2
 10512  002530  C004  F052         	movff	?___fladd+3,_roundf$2951+3
 10513  002534  C04F  F001         	movff	_roundf$2951,___fladd@b
 10514  002538  C050  F002         	movff	_roundf$2951+1,___fladd@b+1
 10515  00253C  C051  F003         	movff	_roundf$2951+2,___fladd@b+2
 10516  002540  C052  F004         	movff	_roundf$2951+3,___fladd@b+3
 10517  002544  0E00               	movlw	0
 10518  002546  6E05               	movwf	___fladd@a^0,c
 10519  002548  0E00               	movlw	0
 10520  00254A  6E06               	movwf	(___fladd@a+1)^0,c
 10521  00254C  0E80               	movlw	128
 10522  00254E  6E07               	movwf	(___fladd@a+2)^0,c
 10523  002550  0EBF               	movlw	191
 10524  002552  6E08               	movwf	(___fladd@a+3)^0,c
 10525  002554  EC0C  F00D         	call	___fladd	;wreg free
 10526  002558  C001  F057         	movff	?___fladd,roundf@y
 10527  00255C  C002  F058         	movff	?___fladd+1,roundf@y+1
 10528  002560  C003  F059         	movff	?___fladd+2,roundf@y+2
 10529  002564  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10530  002568  EF1F  F013         	goto	l4374
 10531  00256C                     l4368:
 10532  00256C  0E00               	movlw	0
 10533  00256E  6E01               	movwf	___flge@ff1^0,c
 10534  002570  0E00               	movlw	0
 10535  002572  6E02               	movwf	(___flge@ff1+1)^0,c
 10536  002574  0E00               	movlw	0
 10537  002576  6E03               	movwf	(___flge@ff1+2)^0,c
 10538  002578  0EBF               	movlw	191
 10539  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
 10540  00257C  C057  F005         	movff	roundf@y,___flge@ff2
 10541  002580  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10542  002584  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10543  002588  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10544  00258C  ECDB  F026         	call	___flge	;wreg free
 10545  002590  A0D8               	btfss	status,0,c
 10546  002592  EFCD  F012         	goto	u4481
 10547  002596  EFCF  F012         	goto	u4480
 10548  00259A                     u4481:
 10549  00259A  EF05  F013         	goto	l4372
 10550  00259E                     u4480:
 10551  00259E  C041  F005         	movff	roundf@x,___fladd@a
 10552  0025A2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10553  0025A6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10554  0025AA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10555  0025AE  C057  F001         	movff	roundf@y,___fladd@b
 10556  0025B2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10557  0025B6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10558  0025BA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10559  0025BE  EC0C  F00D         	call	___fladd	;wreg free
 10560  0025C2  C001  F04F         	movff	?___fladd,_roundf$2951
 10561  0025C6  C002  F050         	movff	?___fladd+1,_roundf$2951+1
 10562  0025CA  C003  F051         	movff	?___fladd+2,_roundf$2951+2
 10563  0025CE  C004  F052         	movff	?___fladd+3,_roundf$2951+3
 10564  0025D2  C04F  F001         	movff	_roundf$2951,___fladd@b
 10565  0025D6  C050  F002         	movff	_roundf$2951+1,___fladd@b+1
 10566  0025DA  C051  F003         	movff	_roundf$2951+2,___fladd@b+2
 10567  0025DE  C052  F004         	movff	_roundf$2951+3,___fladd@b+3
 10568  0025E2  0E00               	movlw	0
 10569  0025E4  6E05               	movwf	___fladd@a^0,c
 10570  0025E6  0E00               	movlw	0
 10571  0025E8  6E06               	movwf	(___fladd@a+1)^0,c
 10572  0025EA  0E80               	movlw	128
 10573  0025EC  6E07               	movwf	(___fladd@a+2)^0,c
 10574  0025EE  0E3F               	movlw	63
 10575  0025F0  6E08               	movwf	(___fladd@a+3)^0,c
 10576  0025F2  EC0C  F00D         	call	___fladd	;wreg free
 10577  0025F6  C001  F057         	movff	?___fladd,roundf@y
 10578  0025FA  C002  F058         	movff	?___fladd+1,roundf@y+1
 10579  0025FE  C003  F059         	movff	?___fladd+2,roundf@y+2
 10580  002602  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10581  002606  EF1F  F013         	goto	l4374
 10582  00260A                     l4372:
 10583  00260A  C057  F001         	movff	roundf@y,___fladd@b
 10584  00260E  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10585  002612  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10586  002616  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10587  00261A  C041  F005         	movff	roundf@x,___fladd@a
 10588  00261E  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10589  002622  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10590  002626  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10591  00262A  EC0C  F00D         	call	___fladd	;wreg free
 10592  00262E  C001  F057         	movff	?___fladd,roundf@y
 10593  002632  C002  F058         	movff	?___fladd+1,roundf@y+1
 10594  002636  C003  F059         	movff	?___fladd+2,roundf@y+2
 10595  00263A  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10596  00263E                     l4374:
 10597  00263E  C053  F045         	movff	roundf@u,??_roundf
 10598  002642  C054  F046         	movff	roundf@u+1,??_roundf+1
 10599  002646  C055  F047         	movff	roundf@u+2,??_roundf+2
 10600  00264A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10601  00264E  0E20               	movlw	32
 10602  002650  EF2F  F013         	goto	u4490
 10603  002654                     u4495:
 10604  002654  90D8               	bcf	status,0,c
 10605  002656  3248               	rrcf	(??_roundf+3)^0,f,c
 10606  002658  3247               	rrcf	(??_roundf+2)^0,f,c
 10607  00265A  3246               	rrcf	(??_roundf+1)^0,f,c
 10608  00265C  3245               	rrcf	??_roundf^0,f,c
 10609  00265E                     u4490:
 10610  00265E  2EE8               	decfsz	wreg,f,c
 10611  002660  EF2A  F013         	goto	u4495
 10612  002664  5045               	movf	??_roundf^0,w,c
 10613  002666  1046               	iorwf	(??_roundf+1)^0,w,c
 10614  002668  1047               	iorwf	(??_roundf+2)^0,w,c
 10615  00266A  1048               	iorwf	(??_roundf+3)^0,w,c
 10616  00266C  B4D8               	btfsc	status,2,c
 10617  00266E  EF3B  F013         	goto	u4501
 10618  002672  EF3D  F013         	goto	u4500
 10619  002676                     u4501:
 10620  002676  EF4F  F013         	goto	l4378
 10621  00267A                     u4500:
 10622  00267A  C057  F001         	movff	roundf@y,___flneg@f1
 10623  00267E  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10624  002682  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10625  002686  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10626  00268A  EC4C  F02D         	call	___flneg	;wreg free
 10627  00268E  C001  F057         	movff	?___flneg,roundf@y
 10628  002692  C002  F058         	movff	?___flneg+1,roundf@y+1
 10629  002696  C003  F059         	movff	?___flneg+2,roundf@y+2
 10630  00269A  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10631  00269E                     l4378:
 10632  00269E  C057  F041         	movff	roundf@y,?_roundf
 10633  0026A2  C058  F042         	movff	roundf@y+1,?_roundf+1
 10634  0026A6  C059  F043         	movff	roundf@y+2,?_roundf+2
 10635  0026AA  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10636  0026AE                     l1433:
 10637  0026AE  0012               	return		;funcret
 10638  0026B0                     __end_of_roundf:
 10639                           	callstack 0
 10640                           
 10641 ;; *************** function ___flsub *****************
 10642 ;; Defined at:
 10643 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;  b               4   16[COMRAM] float 
 10646 ;;  a               4   20[COMRAM] float 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  4   16[COMRAM] float 
 10651 ;; Registers used:
 10652 ;;		wreg, status,2, status,0, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10658 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;Total ram usage:        8 bytes
 10663 ;; Hardware stack levels used: 1
 10664 ;; Hardware stack levels required when called: 2
 10665 ;; This function calls:
 10666 ;;		___fladd
 10667 ;; This function is called by:
 10668 ;;		_roundf
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text49
 10673  005854                     __ptext49:
 10674                           	callstack 0
 10675  005854                     ___flsub:
 10676                           	callstack 24
 10677  005854  0E00               	movlw	0
 10678  005856  1A15               	xorwf	___flsub@a^0,f,c
 10679  005858  0E00               	movlw	0
 10680  00585A  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10681  00585C  0E00               	movlw	0
 10682  00585E  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10683  005860  0E80               	movlw	128
 10684  005862  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10685  005864  C011  F001         	movff	___flsub@b,___fladd@b
 10686  005868  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10687  00586C  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10688  005870  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10689  005874  C015  F005         	movff	___flsub@a,___fladd@a
 10690  005878  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10691  00587C  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10692  005880  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10693  005884  EC0C  F00D         	call	___fladd	;wreg free
 10694  005888  C001  F011         	movff	?___fladd,?___flsub
 10695  00588C  C002  F012         	movff	?___fladd+1,?___flsub+1
 10696  005890  C003  F013         	movff	?___fladd+2,?___flsub+2
 10697  005894  C004  F014         	movff	?___fladd+3,?___flsub+3
 10698  005898  0012               	return		;funcret
 10699  00589A                     __end_of___flsub:
 10700                           	callstack 0
 10701                           
 10702 ;; *************** function ___fladd *****************
 10703 ;; Defined at:
 10704 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  b               4    0[COMRAM] float 
 10707 ;;  a               4    4[COMRAM] float 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  grs             1   15[COMRAM] unsigned char 
 10710 ;;  bexp            1   14[COMRAM] unsigned char 
 10711 ;;  aexp            1   13[COMRAM] unsigned char 
 10712 ;;  signs           1   12[COMRAM] unsigned char 
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  4    0[COMRAM] unsigned char 
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10722 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10725 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10726 ;;Total ram usage:       16 bytes
 10727 ;; Hardware stack levels used: 1
 10728 ;; Hardware stack levels required when called: 1
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		___flsub
 10733 ;;		_roundf
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text50
 10738  001A18                     __ptext50:
 10739                           	callstack 0
 10740  001A18                     ___fladd:
 10741                           	callstack 24
 10742  001A18  5004               	movf	(___fladd@b+3)^0,w,c
 10743  001A1A  0B80               	andlw	128
 10744  001A1C  6E0D               	movwf	___fladd@signs^0,c
 10745  001A1E  5004               	movf	(___fladd@b+3)^0,w,c
 10746  001A20  2404               	addwf	(___fladd@b+3)^0,w,c
 10747  001A22  6E0F               	movwf	___fladd@bexp^0,c
 10748  001A24  AE03               	btfss	(___fladd@b+2)^0,7,c
 10749  001A26  EF17  F00D         	goto	u3471
 10750  001A2A  EF19  F00D         	goto	u3470
 10751  001A2E                     u3471:
 10752  001A2E  EF1A  F00D         	goto	l3720
 10753  001A32                     u3470:
 10754  001A32  800F               	bsf	___fladd@bexp^0,0,c
 10755  001A34                     l3720:
 10756  001A34  500F               	movf	___fladd@bexp^0,w,c
 10757  001A36  B4D8               	btfsc	status,2,c
 10758  001A38  EF20  F00D         	goto	u3481
 10759  001A3C  EF22  F00D         	goto	u3480
 10760  001A40                     u3481:
 10761  001A40  EF37  F00D         	goto	l3730
 10762  001A44                     u3480:
 10763  001A44  280F               	incf	___fladd@bexp^0,w,c
 10764  001A46  A4D8               	btfss	status,2,c
 10765  001A48  EF28  F00D         	goto	u3491
 10766  001A4C  EF2A  F00D         	goto	u3490
 10767  001A50                     u3491:
 10768  001A50  EF32  F00D         	goto	l3726
 10769  001A54                     u3490:
 10770  001A54  0E00               	movlw	0
 10771  001A56  6E01               	movwf	___fladd@b^0,c
 10772  001A58  0E00               	movlw	0
 10773  001A5A  6E02               	movwf	(___fladd@b+1)^0,c
 10774  001A5C  0E00               	movlw	0
 10775  001A5E  6E03               	movwf	(___fladd@b+2)^0,c
 10776  001A60  0E00               	movlw	0
 10777  001A62  6E04               	movwf	(___fladd@b+3)^0,c
 10778  001A64                     l3726:
 10779  001A64  8E03               	bsf	(___fladd@b+2)^0,7,c
 10780  001A66  0E00               	movlw	0
 10781  001A68  6E04               	movwf	(___fladd@b+3)^0,c
 10782  001A6A  EF3F  F00D         	goto	l3732
 10783  001A6E                     l3730:
 10784  001A6E  0E00               	movlw	0
 10785  001A70  6E01               	movwf	___fladd@b^0,c
 10786  001A72  0E00               	movlw	0
 10787  001A74  6E02               	movwf	(___fladd@b+1)^0,c
 10788  001A76  0E00               	movlw	0
 10789  001A78  6E03               	movwf	(___fladd@b+2)^0,c
 10790  001A7A  0E00               	movlw	0
 10791  001A7C  6E04               	movwf	(___fladd@b+3)^0,c
 10792  001A7E                     l3732:
 10793  001A7E  5008               	movf	(___fladd@a+3)^0,w,c
 10794  001A80  0B80               	andlw	128
 10795  001A82  6E0E               	movwf	___fladd@aexp^0,c
 10796  001A84  500D               	movf	___fladd@signs^0,w,c
 10797  001A86  180E               	xorwf	___fladd@aexp^0,w,c
 10798  001A88  B4D8               	btfsc	status,2,c
 10799  001A8A  EF49  F00D         	goto	u3501
 10800  001A8E  EF4B  F00D         	goto	u3500
 10801  001A92                     u3501:
 10802  001A92  EF4C  F00D         	goto	l3738
 10803  001A96                     u3500:
 10804  001A96  8C0D               	bsf	___fladd@signs^0,6,c
 10805  001A98                     l3738:
 10806  001A98  5008               	movf	(___fladd@a+3)^0,w,c
 10807  001A9A  2408               	addwf	(___fladd@a+3)^0,w,c
 10808  001A9C  6E0E               	movwf	___fladd@aexp^0,c
 10809  001A9E  AE07               	btfss	(___fladd@a+2)^0,7,c
 10810  001AA0  EF54  F00D         	goto	u3511
 10811  001AA4  EF56  F00D         	goto	u3510
 10812  001AA8                     u3511:
 10813  001AA8  EF57  F00D         	goto	l3744
 10814  001AAC                     u3510:
 10815  001AAC  800E               	bsf	___fladd@aexp^0,0,c
 10816  001AAE                     l3744:
 10817  001AAE  500E               	movf	___fladd@aexp^0,w,c
 10818  001AB0  B4D8               	btfsc	status,2,c
 10819  001AB2  EF5D  F00D         	goto	u3521
 10820  001AB6  EF5F  F00D         	goto	u3520
 10821  001ABA                     u3521:
 10822  001ABA  EF74  F00D         	goto	l3754
 10823  001ABE                     u3520:
 10824  001ABE  280E               	incf	___fladd@aexp^0,w,c
 10825  001AC0  A4D8               	btfss	status,2,c
 10826  001AC2  EF65  F00D         	goto	u3531
 10827  001AC6  EF67  F00D         	goto	u3530
 10828  001ACA                     u3531:
 10829  001ACA  EF6F  F00D         	goto	l3750
 10830  001ACE                     u3530:
 10831  001ACE  0E00               	movlw	0
 10832  001AD0  6E05               	movwf	___fladd@a^0,c
 10833  001AD2  0E00               	movlw	0
 10834  001AD4  6E06               	movwf	(___fladd@a+1)^0,c
 10835  001AD6  0E00               	movlw	0
 10836  001AD8  6E07               	movwf	(___fladd@a+2)^0,c
 10837  001ADA  0E00               	movlw	0
 10838  001ADC  6E08               	movwf	(___fladd@a+3)^0,c
 10839  001ADE                     l3750:
 10840  001ADE  8E07               	bsf	(___fladd@a+2)^0,7,c
 10841  001AE0  0E00               	movlw	0
 10842  001AE2  6E08               	movwf	(___fladd@a+3)^0,c
 10843  001AE4  EF7C  F00D         	goto	l3756
 10844  001AE8                     l3754:
 10845  001AE8  0E00               	movlw	0
 10846  001AEA  6E05               	movwf	___fladd@a^0,c
 10847  001AEC  0E00               	movlw	0
 10848  001AEE  6E06               	movwf	(___fladd@a+1)^0,c
 10849  001AF0  0E00               	movlw	0
 10850  001AF2  6E07               	movwf	(___fladd@a+2)^0,c
 10851  001AF4  0E00               	movlw	0
 10852  001AF6  6E08               	movwf	(___fladd@a+3)^0,c
 10853  001AF8                     l3756:
 10854  001AF8  500F               	movf	___fladd@bexp^0,w,c
 10855  001AFA  5C0E               	subwf	___fladd@aexp^0,w,c
 10856  001AFC  B0D8               	btfsc	status,0,c
 10857  001AFE  EF83  F00D         	goto	u3541
 10858  001B02  EF85  F00D         	goto	u3540
 10859  001B06                     u3541:
 10860  001B06  EFAC  F00D         	goto	l3792
 10861  001B0A                     u3540:
 10862  001B0A  AC0D               	btfss	___fladd@signs^0,6,c
 10863  001B0C  EF8A  F00D         	goto	u3551
 10864  001B10  EF8C  F00D         	goto	u3550
 10865  001B14                     u3551:
 10866  001B14  EF8E  F00D         	goto	l3762
 10867  001B18                     u3550:
 10868  001B18  0E80               	movlw	128
 10869  001B1A  1A0D               	xorwf	___fladd@signs^0,f,c
 10870  001B1C                     l3762:
 10871  001B1C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10872  001B20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10873  001B24  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10874  001B28  C001  F010         	movff	___fladd@b,___fladd@grs
 10875  001B2C  C005  F001         	movff	___fladd@a,___fladd@b
 10876  001B30  C010  F005         	movff	___fladd@grs,___fladd@a
 10877  001B34  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10878  001B38  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10879  001B3C  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10880  001B40  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10881  001B44  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10882  001B48  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10883  001B4C  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10884  001B50  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10885  001B54  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10886  001B58                     l3792:
 10887  001B58  0E00               	movlw	0
 10888  001B5A  6E10               	movwf	___fladd@grs^0,c
 10889  001B5C  500F               	movf	___fladd@bexp^0,w,c
 10890  001B5E  C00E  F009         	movff	___fladd@aexp,??___fladd
 10891  001B62  6A0A               	clrf	(??___fladd+1)^0,c
 10892  001B64  5E09               	subwf	??___fladd^0,f,c
 10893  001B66  0E00               	movlw	0
 10894  001B68  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10895  001B6A  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10896  001B6C  EFC1  F00D         	goto	u3561
 10897  001B70  500A               	movf	(??___fladd+1)^0,w,c
 10898  001B72  E109               	bnz	u3560
 10899  001B74  0E1A               	movlw	26
 10900  001B76  5C09               	subwf	??___fladd^0,w,c
 10901  001B78  A0D8               	btfss	status,0,c
 10902  001B7A  EFC1  F00D         	goto	u3561
 10903  001B7E  EFC3  F00D         	goto	u3560
 10904  001B82                     u3561:
 10905  001B82  EFFA  F00D         	goto	l1169
 10906  001B86                     u3560:
 10907  001B86  5001               	movf	___fladd@b^0,w,c
 10908  001B88  1002               	iorwf	(___fladd@b+1)^0,w,c
 10909  001B8A  1003               	iorwf	(___fladd@b+2)^0,w,c
 10910  001B8C  1004               	iorwf	(___fladd@b+3)^0,w,c
 10911  001B8E  A4D8               	btfss	status,2,c
 10912  001B90  EFCC  F00D         	goto	u3571
 10913  001B94  EFCF  F00D         	goto	u3570
 10914  001B98                     u3571:
 10915  001B98  0E01               	movlw	1
 10916  001B9A  EFD0  F00D         	goto	u3580
 10917  001B9E                     u3570:
 10918  001B9E  0E00               	movlw	0
 10919  001BA0                     u3580:
 10920  001BA0  6E10               	movwf	___fladd@grs^0,c
 10921  001BA2  0E00               	movlw	0
 10922  001BA4  6E01               	movwf	___fladd@b^0,c
 10923  001BA6  0E00               	movlw	0
 10924  001BA8  6E02               	movwf	(___fladd@b+1)^0,c
 10925  001BAA  0E00               	movlw	0
 10926  001BAC  6E03               	movwf	(___fladd@b+2)^0,c
 10927  001BAE  0E00               	movlw	0
 10928  001BB0  6E04               	movwf	(___fladd@b+3)^0,c
 10929  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10930  001BB6  EF03  F00E         	goto	l1168
 10931  001BBA                     l1170:
 10932  001BBA  A010               	btfss	___fladd@grs^0,0,c
 10933  001BBC  EFE2  F00D         	goto	u3591
 10934  001BC0  EFE4  F00D         	goto	u3590
 10935  001BC4                     u3591:
 10936  001BC4  EFEA  F00D         	goto	l3804
 10937  001BC8                     u3590:
 10938  001BC8  90D8               	bcf	status,0,c
 10939  001BCA  3010               	rrcf	___fladd@grs^0,w,c
 10940  001BCC  0901               	iorlw	1
 10941  001BCE  6E10               	movwf	___fladd@grs^0,c
 10942  001BD0  EFEC  F00D         	goto	l3806
 10943  001BD4                     l3804:
 10944  001BD4  90D8               	bcf	status,0,c
 10945  001BD6  3210               	rrcf	___fladd@grs^0,f,c
 10946  001BD8                     l3806:
 10947  001BD8  A001               	btfss	___fladd@b^0,0,c
 10948  001BDA  EFF1  F00D         	goto	u3601
 10949  001BDE  EFF3  F00D         	goto	u3600
 10950  001BE2                     u3601:
 10951  001BE2  EFF4  F00D         	goto	l3810
 10952  001BE6                     u3600:
 10953  001BE6  8E10               	bsf	___fladd@grs^0,7,c
 10954  001BE8                     l3810:
 10955  001BE8  3404               	rlcf	(___fladd@b+3)^0,w,c
 10956  001BEA  3204               	rrcf	(___fladd@b+3)^0,f,c
 10957  001BEC  3203               	rrcf	(___fladd@b+2)^0,f,c
 10958  001BEE  3202               	rrcf	(___fladd@b+1)^0,f,c
 10959  001BF0  3201               	rrcf	___fladd@b^0,f,c
 10960  001BF2  2A0F               	incf	___fladd@bexp^0,f,c
 10961  001BF4                     l1169:
 10962  001BF4  500E               	movf	___fladd@aexp^0,w,c
 10963  001BF6  5C0F               	subwf	___fladd@bexp^0,w,c
 10964  001BF8  A0D8               	btfss	status,0,c
 10965  001BFA  EF01  F00E         	goto	u3611
 10966  001BFE  EF03  F00E         	goto	u3610
 10967  001C02                     u3611:
 10968  001C02  EFDD  F00D         	goto	l1170
 10969  001C06                     u3610:
 10970  001C06                     l1168:
 10971  001C06  BC0D               	btfsc	___fladd@signs^0,6,c
 10972  001C08  EF08  F00E         	goto	u3621
 10973  001C0C  EF0A  F00E         	goto	u3620
 10974  001C10                     u3621:
 10975  001C10  EF4A  F00E         	goto	l3838
 10976  001C14                     u3620:
 10977  001C14  500F               	movf	___fladd@bexp^0,w,c
 10978  001C16  A4D8               	btfss	status,2,c
 10979  001C18  EF10  F00E         	goto	u3631
 10980  001C1C  EF12  F00E         	goto	u3630
 10981  001C20                     u3631:
 10982  001C20  EF1C  F00E         	goto	l3820
 10983  001C24                     u3630:
 10984  001C24  0E00               	movlw	0
 10985  001C26  6E01               	movwf	?___fladd^0,c
 10986  001C28  0E00               	movlw	0
 10987  001C2A  6E02               	movwf	(?___fladd+1)^0,c
 10988  001C2C  0E00               	movlw	0
 10989  001C2E  6E03               	movwf	(?___fladd+2)^0,c
 10990  001C30  0E00               	movlw	0
 10991  001C32  6E04               	movwf	(?___fladd+3)^0,c
 10992  001C34  EF6B  F00F         	goto	l1177
 10993  001C38                     l3820:
 10994  001C38  5005               	movf	___fladd@a^0,w,c
 10995  001C3A  2601               	addwf	___fladd@b^0,f,c
 10996  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
 10997  001C3E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10998  001C40  5007               	movf	(___fladd@a+2)^0,w,c
 10999  001C42  2203               	addwfc	(___fladd@b+2)^0,f,c
 11000  001C44  5008               	movf	(___fladd@a+3)^0,w,c
 11001  001C46  2204               	addwfc	(___fladd@b+3)^0,f,c
 11002  001C48  A004               	btfss	(___fladd@b+3)^0,0,c
 11003  001C4A  EF29  F00E         	goto	u3641
 11004  001C4E  EF2B  F00E         	goto	u3640
 11005  001C52                     u3641:
 11006  001C52  EFD7  F00E         	goto	l3874
 11007  001C56                     u3640:
 11008  001C56  A010               	btfss	___fladd@grs^0,0,c
 11009  001C58  EF30  F00E         	goto	u3651
 11010  001C5C  EF32  F00E         	goto	u3650
 11011  001C60                     u3651:
 11012  001C60  EF38  F00E         	goto	l3828
 11013  001C64                     u3650:
 11014  001C64  90D8               	bcf	status,0,c
 11015  001C66  3010               	rrcf	___fladd@grs^0,w,c
 11016  001C68  0901               	iorlw	1
 11017  001C6A  6E10               	movwf	___fladd@grs^0,c
 11018  001C6C  EF3A  F00E         	goto	l3830
 11019  001C70                     l3828:
 11020  001C70  90D8               	bcf	status,0,c
 11021  001C72  3210               	rrcf	___fladd@grs^0,f,c
 11022  001C74                     l3830:
 11023  001C74  A001               	btfss	___fladd@b^0,0,c
 11024  001C76  EF3F  F00E         	goto	u3661
 11025  001C7A  EF41  F00E         	goto	u3660
 11026  001C7E                     u3661:
 11027  001C7E  EF42  F00E         	goto	l3834
 11028  001C82                     u3660:
 11029  001C82  8E10               	bsf	___fladd@grs^0,7,c
 11030  001C84                     l3834:
 11031  001C84  3404               	rlcf	(___fladd@b+3)^0,w,c
 11032  001C86  3204               	rrcf	(___fladd@b+3)^0,f,c
 11033  001C88  3203               	rrcf	(___fladd@b+2)^0,f,c
 11034  001C8A  3202               	rrcf	(___fladd@b+1)^0,f,c
 11035  001C8C  3201               	rrcf	___fladd@b^0,f,c
 11036  001C8E  2A0F               	incf	___fladd@bexp^0,f,c
 11037  001C90  EFD7  F00E         	goto	l3874
 11038  001C94                     l3838:
 11039  001C94  5005               	movf	___fladd@a^0,w,c
 11040  001C96  5C01               	subwf	___fladd@b^0,w,c
 11041  001C98  5006               	movf	(___fladd@a+1)^0,w,c
 11042  001C9A  5802               	subwfb	(___fladd@b+1)^0,w,c
 11043  001C9C  5007               	movf	(___fladd@a+2)^0,w,c
 11044  001C9E  5803               	subwfb	(___fladd@b+2)^0,w,c
 11045  001CA0  5004               	movf	(___fladd@b+3)^0,w,c
 11046  001CA2  0A80               	xorlw	128
 11047  001CA4  6E09               	movwf	??___fladd^0,c
 11048  001CA6  5008               	movf	(___fladd@a+3)^0,w,c
 11049  001CA8  0A80               	xorlw	128
 11050  001CAA  5809               	subwfb	??___fladd^0,w,c
 11051  001CAC  B0D8               	btfsc	status,0,c
 11052  001CAE  EF5B  F00E         	goto	u3671
 11053  001CB2  EF5D  F00E         	goto	u3670
 11054  001CB6                     u3671:
 11055  001CB6  EF88  F00E         	goto	l3848
 11056  001CBA                     u3670:
 11057  001CBA  5001               	movf	___fladd@b^0,w,c
 11058  001CBC  5C05               	subwf	___fladd@a^0,w,c
 11059  001CBE  6E09               	movwf	??___fladd^0,c
 11060  001CC0  5002               	movf	(___fladd@b+1)^0,w,c
 11061  001CC2  5806               	subwfb	(___fladd@a+1)^0,w,c
 11062  001CC4  6E0A               	movwf	(??___fladd+1)^0,c
 11063  001CC6  5003               	movf	(___fladd@b+2)^0,w,c
 11064  001CC8  5807               	subwfb	(___fladd@a+2)^0,w,c
 11065  001CCA  6E0B               	movwf	(??___fladd+2)^0,c
 11066  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 11067  001CCE  5808               	subwfb	(___fladd@a+3)^0,w,c
 11068  001CD0  6E0C               	movwf	(??___fladd+3)^0,c
 11069  001CD2  0EFF               	movlw	255
 11070  001CD4  2409               	addwf	??___fladd^0,w,c
 11071  001CD6  6E01               	movwf	___fladd@b^0,c
 11072  001CD8  0EFF               	movlw	255
 11073  001CDA  200A               	addwfc	(??___fladd+1)^0,w,c
 11074  001CDC  6E02               	movwf	(___fladd@b+1)^0,c
 11075  001CDE  0EFF               	movlw	255
 11076  001CE0  200B               	addwfc	(??___fladd+2)^0,w,c
 11077  001CE2  6E03               	movwf	(___fladd@b+2)^0,c
 11078  001CE4  0EFF               	movlw	255
 11079  001CE6  200C               	addwfc	(??___fladd+3)^0,w,c
 11080  001CE8  6E04               	movwf	(___fladd@b+3)^0,c
 11081  001CEA  0E80               	movlw	128
 11082  001CEC  1A0D               	xorwf	___fladd@signs^0,f,c
 11083  001CEE  6C10               	negf	___fladd@grs^0,c
 11084  001CF0  5010               	movf	___fladd@grs^0,w,c
 11085  001CF2  A4D8               	btfss	status,2,c
 11086  001CF4  EF7E  F00E         	goto	u3681
 11087  001CF8  EF80  F00E         	goto	u3680
 11088  001CFC                     u3681:
 11089  001CFC  EF90  F00E         	goto	l1185
 11090  001D00                     u3680:
 11091  001D00  0E01               	movlw	1
 11092  001D02  2601               	addwf	___fladd@b^0,f,c
 11093  001D04  0E00               	movlw	0
 11094  001D06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11095  001D08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11096  001D0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11097  001D0C  EF90  F00E         	goto	l1185
 11098  001D10                     l3848:
 11099  001D10  5005               	movf	___fladd@a^0,w,c
 11100  001D12  5E01               	subwf	___fladd@b^0,f,c
 11101  001D14  5006               	movf	(___fladd@a+1)^0,w,c
 11102  001D16  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11103  001D18  5007               	movf	(___fladd@a+2)^0,w,c
 11104  001D1A  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11105  001D1C  5008               	movf	(___fladd@a+3)^0,w,c
 11106  001D1E  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11107  001D20                     l1185:
 11108  001D20  5001               	movf	___fladd@b^0,w,c
 11109  001D22  1002               	iorwf	(___fladd@b+1)^0,w,c
 11110  001D24  1003               	iorwf	(___fladd@b+2)^0,w,c
 11111  001D26  1004               	iorwf	(___fladd@b+3)^0,w,c
 11112  001D28  A4D8               	btfss	status,2,c
 11113  001D2A  EF99  F00E         	goto	u3691
 11114  001D2E  EF9B  F00E         	goto	u3690
 11115  001D32                     u3691:
 11116  001D32  EFD0  F00E         	goto	l3872
 11117  001D36                     u3690:
 11118  001D36  5010               	movf	___fladd@grs^0,w,c
 11119  001D38  A4D8               	btfss	status,2,c
 11120  001D3A  EFA1  F00E         	goto	u3701
 11121  001D3E  EFA3  F00E         	goto	u3700
 11122  001D42                     u3701:
 11123  001D42  EFD0  F00E         	goto	l3872
 11124  001D46                     u3700:
 11125  001D46  0E00               	movlw	0
 11126  001D48  6E01               	movwf	?___fladd^0,c
 11127  001D4A  0E00               	movlw	0
 11128  001D4C  6E02               	movwf	(?___fladd+1)^0,c
 11129  001D4E  0E00               	movlw	0
 11130  001D50  6E03               	movwf	(?___fladd+2)^0,c
 11131  001D52  0E00               	movlw	0
 11132  001D54  6E04               	movwf	(?___fladd+3)^0,c
 11133  001D56  EF6B  F00F         	goto	l1177
 11134  001D5A                     l3856:
 11135  001D5A  90D8               	bcf	status,0,c
 11136  001D5C  3601               	rlcf	___fladd@b^0,f,c
 11137  001D5E  3602               	rlcf	(___fladd@b+1)^0,f,c
 11138  001D60  3603               	rlcf	(___fladd@b+2)^0,f,c
 11139  001D62  3604               	rlcf	(___fladd@b+3)^0,f,c
 11140  001D64  AE10               	btfss	___fladd@grs^0,7,c
 11141  001D66  EFB7  F00E         	goto	u3711
 11142  001D6A  EFB9  F00E         	goto	u3710
 11143  001D6E                     u3711:
 11144  001D6E  EFBA  F00E         	goto	l3862
 11145  001D72                     u3710:
 11146  001D72  8001               	bsf	___fladd@b^0,0,c
 11147  001D74                     l3862:
 11148  001D74  A010               	btfss	___fladd@grs^0,0,c
 11149  001D76  EFBF  F00E         	goto	u3721
 11150  001D7A  EFC1  F00E         	goto	u3720
 11151  001D7E                     u3721:
 11152  001D7E  EFC5  F00E         	goto	l3866
 11153  001D82                     u3720:
 11154  001D82  80D8               	bsf	status,0,c
 11155  001D84  3610               	rlcf	___fladd@grs^0,f,c
 11156  001D86  EFC7  F00E         	goto	l3868
 11157  001D8A                     l3866:
 11158  001D8A  90D8               	bcf	status,0,c
 11159  001D8C  3610               	rlcf	___fladd@grs^0,f,c
 11160  001D8E                     l3868:
 11161  001D8E  500F               	movf	___fladd@bexp^0,w,c
 11162  001D90  B4D8               	btfsc	status,2,c
 11163  001D92  EFCD  F00E         	goto	u3731
 11164  001D96  EFCF  F00E         	goto	u3730
 11165  001D9A                     u3731:
 11166  001D9A  EFD0  F00E         	goto	l3872
 11167  001D9E                     u3730:
 11168  001D9E  060F               	decf	___fladd@bexp^0,f,c
 11169  001DA0                     l3872:
 11170  001DA0  AE03               	btfss	(___fladd@b+2)^0,7,c
 11171  001DA2  EFD5  F00E         	goto	u3741
 11172  001DA6  EFD7  F00E         	goto	u3740
 11173  001DAA                     u3741:
 11174  001DAA  EFAD  F00E         	goto	l3856
 11175  001DAE                     u3740:
 11176  001DAE                     l3874:
 11177  001DAE  0E00               	movlw	0
 11178  001DB0  6E0E               	movwf	___fladd@aexp^0,c
 11179  001DB2  AE10               	btfss	___fladd@grs^0,7,c
 11180  001DB4  EFDE  F00E         	goto	u3751
 11181  001DB8  EFE0  F00E         	goto	u3750
 11182  001DBC                     u3751:
 11183  001DBC  EFF8  F00E         	goto	l1194
 11184  001DC0                     u3750:
 11185  001DC0  C010  F009         	movff	___fladd@grs,??___fladd
 11186  001DC4  0E7F               	movlw	127
 11187  001DC6  1609               	andwf	??___fladd^0,f,c
 11188  001DC8  B4D8               	btfsc	status,2,c
 11189  001DCA  EFE9  F00E         	goto	u3761
 11190  001DCE  EFEB  F00E         	goto	u3760
 11191  001DD2                     u3761:
 11192  001DD2  EFEF  F00E         	goto	l1195
 11193  001DD6                     u3760:
 11194  001DD6                     l3880:
 11195  001DD6  0E01               	movlw	1
 11196  001DD8  6E0E               	movwf	___fladd@aexp^0,c
 11197  001DDA  EFF8  F00E         	goto	l1194
 11198  001DDE                     l1195:
 11199  001DDE  A001               	btfss	___fladd@b^0,0,c
 11200  001DE0  EFF4  F00E         	goto	u3771
 11201  001DE4  EFF6  F00E         	goto	u3770
 11202  001DE8                     u3771:
 11203  001DE8  EFF8  F00E         	goto	l1194
 11204  001DEC                     u3770:
 11205  001DEC  EFEB  F00E         	goto	l3880
 11206  001DF0                     l1194:
 11207  001DF0  500E               	movf	___fladd@aexp^0,w,c
 11208  001DF2  B4D8               	btfsc	status,2,c
 11209  001DF4  EFFE  F00E         	goto	u3781
 11210  001DF8  EF00  F00F         	goto	u3780
 11211  001DFC                     u3781:
 11212  001DFC  EF2B  F00F         	goto	l3892
 11213  001E00                     u3780:
 11214  001E00  0E01               	movlw	1
 11215  001E02  2601               	addwf	___fladd@b^0,f,c
 11216  001E04  0E00               	movlw	0
 11217  001E06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11218  001E08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11219  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11220  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
 11221  001E0E  EF0B  F00F         	goto	u3791
 11222  001E12  EF0D  F00F         	goto	u3790
 11223  001E16                     u3791:
 11224  001E16  EF2B  F00F         	goto	l3892
 11225  001E1A                     u3790:
 11226  001E1A  C001  F009         	movff	___fladd@b,??___fladd
 11227  001E1E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11228  001E22  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11229  001E26  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11230  001E2A  340C               	rlcf	(??___fladd+3)^0,w,c
 11231  001E2C  320C               	rrcf	(??___fladd+3)^0,f,c
 11232  001E2E  320B               	rrcf	(??___fladd+2)^0,f,c
 11233  001E30  320A               	rrcf	(??___fladd+1)^0,f,c
 11234  001E32  3209               	rrcf	??___fladd^0,f,c
 11235  001E34  C009  F001         	movff	??___fladd,___fladd@b
 11236  001E38  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11237  001E3C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11238  001E40  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11239  001E44  280F               	incf	___fladd@bexp^0,w,c
 11240  001E46  B4D8               	btfsc	status,2,c
 11241  001E48  EF28  F00F         	goto	u3801
 11242  001E4C  EF2A  F00F         	goto	u3800
 11243  001E50                     u3801:
 11244  001E50  EF2B  F00F         	goto	l3892
 11245  001E54                     u3800:
 11246  001E54  2A0F               	incf	___fladd@bexp^0,f,c
 11247  001E56                     l3892:
 11248  001E56  280F               	incf	___fladd@bexp^0,w,c
 11249  001E58  B4D8               	btfsc	status,2,c
 11250  001E5A  EF31  F00F         	goto	u3811
 11251  001E5E  EF33  F00F         	goto	u3810
 11252  001E62                     u3811:
 11253  001E62  EF3B  F00F         	goto	l3896
 11254  001E66                     u3810:
 11255  001E66  500F               	movf	___fladd@bexp^0,w,c
 11256  001E68  A4D8               	btfss	status,2,c
 11257  001E6A  EF39  F00F         	goto	u3821
 11258  001E6E  EF3B  F00F         	goto	u3820
 11259  001E72                     u3821:
 11260  001E72  EF4D  F00F         	goto	l3900
 11261  001E76                     u3820:
 11262  001E76                     l3896:
 11263  001E76  0E00               	movlw	0
 11264  001E78  6E01               	movwf	___fladd@b^0,c
 11265  001E7A  0E00               	movlw	0
 11266  001E7C  6E02               	movwf	(___fladd@b+1)^0,c
 11267  001E7E  0E00               	movlw	0
 11268  001E80  6E03               	movwf	(___fladd@b+2)^0,c
 11269  001E82  0E00               	movlw	0
 11270  001E84  6E04               	movwf	(___fladd@b+3)^0,c
 11271  001E86  500F               	movf	___fladd@bexp^0,w,c
 11272  001E88  A4D8               	btfss	status,2,c
 11273  001E8A  EF49  F00F         	goto	u3831
 11274  001E8E  EF4B  F00F         	goto	u3830
 11275  001E92                     u3831:
 11276  001E92  EF4D  F00F         	goto	l3900
 11277  001E96                     u3830:
 11278  001E96  0E00               	movlw	0
 11279  001E98  6E0D               	movwf	___fladd@signs^0,c
 11280  001E9A                     l3900:
 11281  001E9A  A00F               	btfss	___fladd@bexp^0,0,c
 11282  001E9C  EF52  F00F         	goto	u3841
 11283  001EA0  EF54  F00F         	goto	u3840
 11284  001EA4                     u3841:
 11285  001EA4  EF57  F00F         	goto	l3904
 11286  001EA8                     u3840:
 11287  001EA8  8E03               	bsf	(___fladd@b+2)^0,7,c
 11288  001EAA  EF58  F00F         	goto	l3906
 11289  001EAE                     l3904:
 11290  001EAE  9E03               	bcf	(___fladd@b+2)^0,7,c
 11291  001EB0                     l3906:
 11292  001EB0  90D8               	bcf	status,0,c
 11293  001EB2  300F               	rrcf	___fladd@bexp^0,w,c
 11294  001EB4  6E04               	movwf	(___fladd@b+3)^0,c
 11295  001EB6  AE0D               	btfss	___fladd@signs^0,7,c
 11296  001EB8  EF60  F00F         	goto	u3851
 11297  001EBC  EF62  F00F         	goto	u3850
 11298  001EC0                     u3851:
 11299  001EC0  EF63  F00F         	goto	l3912
 11300  001EC4                     u3850:
 11301  001EC4  8E04               	bsf	(___fladd@b+3)^0,7,c
 11302  001EC6                     l3912:
 11303  001EC6  C001  F001         	movff	___fladd@b,?___fladd
 11304  001ECA  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11305  001ECE  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11306  001ED2  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11307  001ED6                     l1177:
 11308  001ED6  0012               	return		;funcret
 11309  001ED8                     __end_of___fladd:
 11310                           	callstack 0
 11311                           
 11312 ;; *************** function ___flneg *****************
 11313 ;; Defined at:
 11314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;  f1              4    0[COMRAM] unsigned char 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  4    0[COMRAM] unsigned char 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11332 ;;Total ram usage:        4 bytes
 11333 ;; Hardware stack levels used: 1
 11334 ;; Hardware stack levels required when called: 1
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_roundf
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text51
 11343  005A98                     __ptext51:
 11344                           	callstack 0
 11345  005A98                     ___flneg:
 11346                           	callstack 25
 11347  005A98  5001               	movf	___flneg@f1^0,w,c
 11348  005A9A  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11349  005A9C  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11350  005A9E  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11351  005AA0  B4D8               	btfsc	status,2,c
 11352  005AA2  EF55  F02D         	goto	u4211
 11353  005AA6  EF57  F02D         	goto	u4210
 11354  005AAA                     u4211:
 11355  005AAA  EF5F  F02D         	goto	l4176
 11356  005AAE                     u4210:
 11357  005AAE  0E00               	movlw	0
 11358  005AB0  1A01               	xorwf	___flneg@f1^0,f,c
 11359  005AB2  0E00               	movlw	0
 11360  005AB4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11361  005AB6  0E00               	movlw	0
 11362  005AB8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11363  005ABA  0E80               	movlw	128
 11364  005ABC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11365  005ABE                     l4176:
 11366  005ABE  C001  F001         	movff	___flneg@f1,?___flneg
 11367  005AC2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11368  005AC6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11369  005ACA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11370  005ACE  0012               	return		;funcret
 11371  005AD0                     __end_of___flneg:
 11372                           	callstack 0
 11373                           
 11374 ;; *************** function ___flmul *****************
 11375 ;; Defined at:
 11376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;  b               4   39[COMRAM] unsigned char 
 11379 ;;  a               4   43[COMRAM] unsigned char 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;  prod            4   58[COMRAM] struct .
 11382 ;;  grs             4   52[COMRAM] unsigned long 
 11383 ;;  temp            2   62[COMRAM] struct .
 11384 ;;  bexp            1   57[COMRAM] unsigned char 
 11385 ;;  aexp            1   56[COMRAM] unsigned char 
 11386 ;;  sign            1   51[COMRAM] unsigned char 
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  4   39[COMRAM] unsigned char 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, prodl, prodh
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11396 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11397 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;Total ram usage:       25 bytes
 11401 ;; Hardware stack levels used: 1
 11402 ;; Hardware stack levels required when called: 1
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_detect_color
 11407 ;;		_distance_measure
 11408 ;;		_roundf
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text52
 11413  001ED8                     __ptext52:
 11414                           	callstack 0
 11415  001ED8                     ___flmul:
 11416                           	callstack 25
 11417  001ED8  502B               	movf	(___flmul@b+3)^0,w,c
 11418  001EDA  0B80               	andlw	128
 11419  001EDC  6E34               	movwf	___flmul@sign^0,c
 11420  001EDE  502B               	movf	(___flmul@b+3)^0,w,c
 11421  001EE0  242B               	addwf	(___flmul@b+3)^0,w,c
 11422  001EE2  6E3A               	movwf	___flmul@bexp^0,c
 11423  001EE4  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11424  001EE6  EF77  F00F         	goto	u3971
 11425  001EEA  EF79  F00F         	goto	u3970
 11426  001EEE                     u3971:
 11427  001EEE  EF7A  F00F         	goto	l4020
 11428  001EF2                     u3970:
 11429  001EF2  803A               	bsf	___flmul@bexp^0,0,c
 11430  001EF4                     l4020:
 11431  001EF4  503A               	movf	___flmul@bexp^0,w,c
 11432  001EF6  B4D8               	btfsc	status,2,c
 11433  001EF8  EF80  F00F         	goto	u3981
 11434  001EFC  EF82  F00F         	goto	u3980
 11435  001F00                     u3981:
 11436  001F00  EF95  F00F         	goto	l4028
 11437  001F04                     u3980:
 11438  001F04  283A               	incf	___flmul@bexp^0,w,c
 11439  001F06  A4D8               	btfss	status,2,c
 11440  001F08  EF88  F00F         	goto	u3991
 11441  001F0C  EF8A  F00F         	goto	u3990
 11442  001F10                     u3991:
 11443  001F10  EF92  F00F         	goto	l4026
 11444  001F14                     u3990:
 11445  001F14  0E00               	movlw	0
 11446  001F16  6E28               	movwf	___flmul@b^0,c
 11447  001F18  0E00               	movlw	0
 11448  001F1A  6E29               	movwf	(___flmul@b+1)^0,c
 11449  001F1C  0E00               	movlw	0
 11450  001F1E  6E2A               	movwf	(___flmul@b+2)^0,c
 11451  001F20  0E00               	movlw	0
 11452  001F22  6E2B               	movwf	(___flmul@b+3)^0,c
 11453  001F24                     l4026:
 11454  001F24  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11455  001F26  EF9D  F00F         	goto	l4030
 11456  001F2A                     l4028:
 11457  001F2A  0E00               	movlw	0
 11458  001F2C  6E28               	movwf	___flmul@b^0,c
 11459  001F2E  0E00               	movlw	0
 11460  001F30  6E29               	movwf	(___flmul@b+1)^0,c
 11461  001F32  0E00               	movlw	0
 11462  001F34  6E2A               	movwf	(___flmul@b+2)^0,c
 11463  001F36  0E00               	movlw	0
 11464  001F38  6E2B               	movwf	(___flmul@b+3)^0,c
 11465  001F3A                     l4030:
 11466  001F3A  502F               	movf	(___flmul@a+3)^0,w,c
 11467  001F3C  0B80               	andlw	128
 11468  001F3E  1A34               	xorwf	___flmul@sign^0,f,c
 11469  001F40  502F               	movf	(___flmul@a+3)^0,w,c
 11470  001F42  242F               	addwf	(___flmul@a+3)^0,w,c
 11471  001F44  6E39               	movwf	___flmul@aexp^0,c
 11472  001F46  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11473  001F48  EFA8  F00F         	goto	u4001
 11474  001F4C  EFAA  F00F         	goto	u4000
 11475  001F50                     u4001:
 11476  001F50  EFAB  F00F         	goto	l4038
 11477  001F54                     u4000:
 11478  001F54  8039               	bsf	___flmul@aexp^0,0,c
 11479  001F56                     l4038:
 11480  001F56  5039               	movf	___flmul@aexp^0,w,c
 11481  001F58  B4D8               	btfsc	status,2,c
 11482  001F5A  EFB1  F00F         	goto	u4011
 11483  001F5E  EFB3  F00F         	goto	u4010
 11484  001F62                     u4011:
 11485  001F62  EFC6  F00F         	goto	l4046
 11486  001F66                     u4010:
 11487  001F66  2839               	incf	___flmul@aexp^0,w,c
 11488  001F68  A4D8               	btfss	status,2,c
 11489  001F6A  EFB9  F00F         	goto	u4021
 11490  001F6E  EFBB  F00F         	goto	u4020
 11491  001F72                     u4021:
 11492  001F72  EFC3  F00F         	goto	l4044
 11493  001F76                     u4020:
 11494  001F76  0E00               	movlw	0
 11495  001F78  6E2C               	movwf	___flmul@a^0,c
 11496  001F7A  0E00               	movlw	0
 11497  001F7C  6E2D               	movwf	(___flmul@a+1)^0,c
 11498  001F7E  0E00               	movlw	0
 11499  001F80  6E2E               	movwf	(___flmul@a+2)^0,c
 11500  001F82  0E00               	movlw	0
 11501  001F84  6E2F               	movwf	(___flmul@a+3)^0,c
 11502  001F86                     l4044:
 11503  001F86  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11504  001F88  EFCE  F00F         	goto	l1254
 11505  001F8C                     l4046:
 11506  001F8C  0E00               	movlw	0
 11507  001F8E  6E2C               	movwf	___flmul@a^0,c
 11508  001F90  0E00               	movlw	0
 11509  001F92  6E2D               	movwf	(___flmul@a+1)^0,c
 11510  001F94  0E00               	movlw	0
 11511  001F96  6E2E               	movwf	(___flmul@a+2)^0,c
 11512  001F98  0E00               	movlw	0
 11513  001F9A  6E2F               	movwf	(___flmul@a+3)^0,c
 11514  001F9C                     l1254:
 11515  001F9C  5039               	movf	___flmul@aexp^0,w,c
 11516  001F9E  B4D8               	btfsc	status,2,c
 11517  001FA0  EFD4  F00F         	goto	u4031
 11518  001FA4  EFD6  F00F         	goto	u4030
 11519  001FA8                     u4031:
 11520  001FA8  EFDE  F00F         	goto	l4050
 11521  001FAC                     u4030:
 11522  001FAC  503A               	movf	___flmul@bexp^0,w,c
 11523  001FAE  A4D8               	btfss	status,2,c
 11524  001FB0  EFDC  F00F         	goto	u4041
 11525  001FB4  EFDE  F00F         	goto	u4040
 11526  001FB8                     u4041:
 11527  001FB8  EFE8  F00F         	goto	l4054
 11528  001FBC                     u4040:
 11529  001FBC                     l4050:
 11530  001FBC  0E00               	movlw	0
 11531  001FBE  6E28               	movwf	?___flmul^0,c
 11532  001FC0  0E00               	movlw	0
 11533  001FC2  6E29               	movwf	(?___flmul+1)^0,c
 11534  001FC4  0E00               	movlw	0
 11535  001FC6  6E2A               	movwf	(?___flmul+2)^0,c
 11536  001FC8  0E00               	movlw	0
 11537  001FCA  6E2B               	movwf	(?___flmul+3)^0,c
 11538  001FCC  EF80  F011         	goto	l1258
 11539  001FD0                     l4054:
 11540  001FD0  502E               	movf	(___flmul@a+2)^0,w,c
 11541  001FD2  0228               	mulwf	___flmul@b^0,c
 11542  001FD4  CFF3 F03F          	movff	prodl,___flmul@temp
 11543  001FD8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11544  001FDC  503F               	movf	___flmul@temp^0,w,c
 11545  001FDE  6E35               	movwf	___flmul@grs^0,c
 11546  001FE0  6A36               	clrf	(___flmul@grs+1)^0,c
 11547  001FE2  6A37               	clrf	(___flmul@grs+2)^0,c
 11548  001FE4  6A38               	clrf	(___flmul@grs+3)^0,c
 11549  001FE6  5040               	movf	(___flmul@temp+1)^0,w,c
 11550  001FE8  6E3B               	movwf	___flmul@prod^0,c
 11551  001FEA  6A3C               	clrf	(___flmul@prod+1)^0,c
 11552  001FEC  6A3D               	clrf	(___flmul@prod+2)^0,c
 11553  001FEE  6A3E               	clrf	(___flmul@prod+3)^0,c
 11554  001FF0  502D               	movf	(___flmul@a+1)^0,w,c
 11555  001FF2  0229               	mulwf	(___flmul@b+1)^0,c
 11556  001FF4  CFF3 F03F          	movff	prodl,___flmul@temp
 11557  001FF8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11558  001FFC  503F               	movf	___flmul@temp^0,w,c
 11559  001FFE  2635               	addwf	___flmul@grs^0,f,c
 11560  002000  0E00               	movlw	0
 11561  002002  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11562  002004  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11563  002006  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11564  002008  5040               	movf	(___flmul@temp+1)^0,w,c
 11565  00200A  263B               	addwf	___flmul@prod^0,f,c
 11566  00200C  0E00               	movlw	0
 11567  00200E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11568  002010  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11569  002012  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11570  002014  502C               	movf	___flmul@a^0,w,c
 11571  002016  022A               	mulwf	(___flmul@b+2)^0,c
 11572  002018  CFF3 F03F          	movff	prodl,___flmul@temp
 11573  00201C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11574  002020  503F               	movf	___flmul@temp^0,w,c
 11575  002022  2635               	addwf	___flmul@grs^0,f,c
 11576  002024  0E00               	movlw	0
 11577  002026  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11578  002028  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11579  00202A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11580  00202C  5040               	movf	(___flmul@temp+1)^0,w,c
 11581  00202E  263B               	addwf	___flmul@prod^0,f,c
 11582  002030  0E00               	movlw	0
 11583  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11584  002034  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11585  002036  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11586  002038  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11587  00203C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11588  002040  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11589  002044  6A35               	clrf	___flmul@grs^0,c
 11590  002046  502C               	movf	___flmul@a^0,w,c
 11591  002048  0229               	mulwf	(___flmul@b+1)^0,c
 11592  00204A  CFF3 F03F          	movff	prodl,___flmul@temp
 11593  00204E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11594  002052  503F               	movf	___flmul@temp^0,w,c
 11595  002054  2635               	addwf	___flmul@grs^0,f,c
 11596  002056  5040               	movf	(___flmul@temp+1)^0,w,c
 11597  002058  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11598  00205A  0E00               	movlw	0
 11599  00205C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11600  00205E  0E00               	movlw	0
 11601  002060  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11602  002062  502D               	movf	(___flmul@a+1)^0,w,c
 11603  002064  0228               	mulwf	___flmul@b^0,c
 11604  002066  CFF3 F03F          	movff	prodl,___flmul@temp
 11605  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
 11606  00206E  503F               	movf	___flmul@temp^0,w,c
 11607  002070  2635               	addwf	___flmul@grs^0,f,c
 11608  002072  5040               	movf	(___flmul@temp+1)^0,w,c
 11609  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11610  002076  0E00               	movlw	0
 11611  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11612  00207A  0E00               	movlw	0
 11613  00207C  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11614  00207E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11615  002082  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11616  002086  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11617  00208A  6A35               	clrf	___flmul@grs^0,c
 11618  00208C  502C               	movf	___flmul@a^0,w,c
 11619  00208E  0228               	mulwf	___flmul@b^0,c
 11620  002090  CFF3 F03F          	movff	prodl,___flmul@temp
 11621  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
 11622  002098  503F               	movf	___flmul@temp^0,w,c
 11623  00209A  2635               	addwf	___flmul@grs^0,f,c
 11624  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
 11625  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11626  0020A0  0E00               	movlw	0
 11627  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11628  0020A4  0E00               	movlw	0
 11629  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11630  0020A8  502E               	movf	(___flmul@a+2)^0,w,c
 11631  0020AA  0229               	mulwf	(___flmul@b+1)^0,c
 11632  0020AC  CFF3 F03F          	movff	prodl,___flmul@temp
 11633  0020B0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11634  0020B4  503F               	movf	___flmul@temp^0,w,c
 11635  0020B6  263B               	addwf	___flmul@prod^0,f,c
 11636  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
 11637  0020BA  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11638  0020BC  0E00               	movlw	0
 11639  0020BE  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11640  0020C0  0E00               	movlw	0
 11641  0020C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11642  0020C4  502D               	movf	(___flmul@a+1)^0,w,c
 11643  0020C6  022A               	mulwf	(___flmul@b+2)^0,c
 11644  0020C8  CFF3 F03F          	movff	prodl,___flmul@temp
 11645  0020CC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11646  0020D0  503F               	movf	___flmul@temp^0,w,c
 11647  0020D2  263B               	addwf	___flmul@prod^0,f,c
 11648  0020D4  5040               	movf	(___flmul@temp+1)^0,w,c
 11649  0020D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11650  0020D8  0E00               	movlw	0
 11651  0020DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11652  0020DC  0E00               	movlw	0
 11653  0020DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11654  0020E0  502E               	movf	(___flmul@a+2)^0,w,c
 11655  0020E2  022A               	mulwf	(___flmul@b+2)^0,c
 11656  0020E4  CFF3 F03F          	movff	prodl,___flmul@temp
 11657  0020E8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11658  0020EC  503F               	movf	___flmul@temp^0,w,c
 11659  0020EE  6E30               	movwf	??___flmul^0,c
 11660  0020F0  5040               	movf	(___flmul@temp+1)^0,w,c
 11661  0020F2  6E31               	movwf	(??___flmul+1)^0,c
 11662  0020F4  6A32               	clrf	(??___flmul+2)^0,c
 11663  0020F6  6A33               	clrf	(??___flmul+3)^0,c
 11664  0020F8  C032  F033         	movff	??___flmul+2,??___flmul+3
 11665  0020FC  C031  F032         	movff	??___flmul+1,??___flmul+2
 11666  002100  C030  F031         	movff	??___flmul,??___flmul+1
 11667  002104  6A30               	clrf	??___flmul^0,c
 11668  002106  5030               	movf	??___flmul^0,w,c
 11669  002108  263B               	addwf	___flmul@prod^0,f,c
 11670  00210A  5031               	movf	(??___flmul+1)^0,w,c
 11671  00210C  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11672  00210E  5032               	movf	(??___flmul+2)^0,w,c
 11673  002110  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11674  002112  5033               	movf	(??___flmul+3)^0,w,c
 11675  002114  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11676  002116  C035  F030         	movff	___flmul@grs,??___flmul
 11677  00211A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11678  00211E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11679  002122  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11680  002126  0E19               	movlw	25
 11681  002128  EF9B  F010         	goto	u4050
 11682  00212C                     u4055:
 11683  00212C  90D8               	bcf	status,0,c
 11684  00212E  3233               	rrcf	(??___flmul+3)^0,f,c
 11685  002130  3232               	rrcf	(??___flmul+2)^0,f,c
 11686  002132  3231               	rrcf	(??___flmul+1)^0,f,c
 11687  002134  3230               	rrcf	??___flmul^0,f,c
 11688  002136                     u4050:
 11689  002136  2EE8               	decfsz	wreg,f,c
 11690  002138  EF96  F010         	goto	u4055
 11691  00213C  5030               	movf	??___flmul^0,w,c
 11692  00213E  263B               	addwf	___flmul@prod^0,f,c
 11693  002140  5031               	movf	(??___flmul+1)^0,w,c
 11694  002142  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11695  002144  5032               	movf	(??___flmul+2)^0,w,c
 11696  002146  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11697  002148  5033               	movf	(??___flmul+3)^0,w,c
 11698  00214A  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11699  00214C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11700  002150  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11701  002154  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11702  002158  6A35               	clrf	___flmul@grs^0,c
 11703  00215A  5039               	movf	___flmul@aexp^0,w,c
 11704  00215C  C03A  F030         	movff	___flmul@bexp,??___flmul
 11705  002160  6A31               	clrf	(??___flmul+1)^0,c
 11706  002162  2630               	addwf	??___flmul^0,f,c
 11707  002164  0E00               	movlw	0
 11708  002166  2231               	addwfc	(??___flmul+1)^0,f,c
 11709  002168  0E82               	movlw	130
 11710  00216A  2430               	addwf	??___flmul^0,w,c
 11711  00216C  6E3F               	movwf	___flmul@temp^0,c
 11712  00216E  0EFF               	movlw	255
 11713  002170  2031               	addwfc	(??___flmul+1)^0,w,c
 11714  002172  6E40               	movwf	(___flmul@temp+1)^0,c
 11715  002174  EFD1  F010         	goto	l4102
 11716  002178                     l4096:
 11717  002178  90D8               	bcf	status,0,c
 11718  00217A  363B               	rlcf	___flmul@prod^0,f,c
 11719  00217C  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11720  00217E  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11721  002180  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11722  002182  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11723  002184  EFC6  F010         	goto	u4061
 11724  002188  EFC8  F010         	goto	u4060
 11725  00218C                     u4061:
 11726  00218C  EFC9  F010         	goto	l1261
 11727  002190                     u4060:
 11728  002190  803B               	bsf	___flmul@prod^0,0,c
 11729  002192                     l1261:
 11730  002192  90D8               	bcf	status,0,c
 11731  002194  3635               	rlcf	___flmul@grs^0,f,c
 11732  002196  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11733  002198  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11734  00219A  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11735  00219C  063F               	decf	___flmul@temp^0,f,c
 11736  00219E  A0D8               	btfss	status,0,c
 11737  0021A0  0640               	decf	(___flmul@temp+1)^0,f,c
 11738  0021A2                     l4102:
 11739  0021A2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11740  0021A4  EFD6  F010         	goto	u4071
 11741  0021A8  EFD8  F010         	goto	u4070
 11742  0021AC                     u4071:
 11743  0021AC  EFBC  F010         	goto	l4096
 11744  0021B0                     u4070:
 11745  0021B0  0E00               	movlw	0
 11746  0021B2  6E39               	movwf	___flmul@aexp^0,c
 11747  0021B4  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11748  0021B6  EFDF  F010         	goto	u4081
 11749  0021BA  EFE1  F010         	goto	u4080
 11750  0021BE                     u4081:
 11751  0021BE  EF05  F011         	goto	l1263
 11752  0021C2                     u4080:
 11753  0021C2  0EFF               	movlw	255
 11754  0021C4  1435               	andwf	___flmul@grs^0,w,c
 11755  0021C6  6E30               	movwf	??___flmul^0,c
 11756  0021C8  0EFF               	movlw	255
 11757  0021CA  1436               	andwf	(___flmul@grs+1)^0,w,c
 11758  0021CC  6E31               	movwf	(??___flmul+1)^0,c
 11759  0021CE  0EFF               	movlw	255
 11760  0021D0  1437               	andwf	(___flmul@grs+2)^0,w,c
 11761  0021D2  6E32               	movwf	(??___flmul+2)^0,c
 11762  0021D4  0E7F               	movlw	127
 11763  0021D6  1438               	andwf	(___flmul@grs+3)^0,w,c
 11764  0021D8  6E33               	movwf	(??___flmul+3)^0,c
 11765  0021DA  5030               	movf	??___flmul^0,w,c
 11766  0021DC  1031               	iorwf	(??___flmul+1)^0,w,c
 11767  0021DE  1032               	iorwf	(??___flmul+2)^0,w,c
 11768  0021E0  1033               	iorwf	(??___flmul+3)^0,w,c
 11769  0021E2  B4D8               	btfsc	status,2,c
 11770  0021E4  EFF6  F010         	goto	u4091
 11771  0021E8  EFF8  F010         	goto	u4090
 11772  0021EC                     u4091:
 11773  0021EC  EFFC  F010         	goto	l1264
 11774  0021F0                     u4090:
 11775  0021F0                     l4110:
 11776  0021F0  0E01               	movlw	1
 11777  0021F2  6E39               	movwf	___flmul@aexp^0,c
 11778  0021F4  EF05  F011         	goto	l1263
 11779  0021F8                     l1264:
 11780  0021F8  A03B               	btfss	___flmul@prod^0,0,c
 11781  0021FA  EF01  F011         	goto	u4101
 11782  0021FE  EF03  F011         	goto	u4100
 11783  002202                     u4101:
 11784  002202  EF05  F011         	goto	l1263
 11785  002206                     u4100:
 11786  002206  EFF8  F010         	goto	l4110
 11787  00220A                     l1263:
 11788  00220A  5039               	movf	___flmul@aexp^0,w,c
 11789  00220C  B4D8               	btfsc	status,2,c
 11790  00220E  EF0B  F011         	goto	u4111
 11791  002212  EF0D  F011         	goto	u4110
 11792  002216                     u4111:
 11793  002216  EF31  F011         	goto	l4122
 11794  00221A                     u4110:
 11795  00221A  0E01               	movlw	1
 11796  00221C  263B               	addwf	___flmul@prod^0,f,c
 11797  00221E  0E00               	movlw	0
 11798  002220  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11799  002222  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11800  002224  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11801  002226  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11802  002228  EF18  F011         	goto	u4121
 11803  00222C  EF1A  F011         	goto	u4120
 11804  002230                     u4121:
 11805  002230  EF31  F011         	goto	l4122
 11806  002234                     u4120:
 11807  002234  C03B  F030         	movff	___flmul@prod,??___flmul
 11808  002238  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11809  00223C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11810  002240  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11811  002244  3433               	rlcf	(??___flmul+3)^0,w,c
 11812  002246  3233               	rrcf	(??___flmul+3)^0,f,c
 11813  002248  3232               	rrcf	(??___flmul+2)^0,f,c
 11814  00224A  3231               	rrcf	(??___flmul+1)^0,f,c
 11815  00224C  3230               	rrcf	??___flmul^0,f,c
 11816  00224E  C030  F03B         	movff	??___flmul,___flmul@prod
 11817  002252  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11818  002256  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11819  00225A  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11820  00225E  4A3F               	infsnz	___flmul@temp^0,f,c
 11821  002260  2A40               	incf	(___flmul@temp+1)^0,f,c
 11822  002262                     l4122:
 11823  002262  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11824  002264  EF3C  F011         	goto	u4131
 11825  002268  5040               	movf	(___flmul@temp+1)^0,w,c
 11826  00226A  E108               	bnz	u4130
 11827  00226C  283F               	incf	___flmul@temp^0,w,c
 11828  00226E  A0D8               	btfss	status,0,c
 11829  002270  EF3C  F011         	goto	u4131
 11830  002274  EF3E  F011         	goto	u4130
 11831  002278                     u4131:
 11832  002278  EF48  F011         	goto	l4126
 11833  00227C                     u4130:
 11834  00227C  0E00               	movlw	0
 11835  00227E  6E3B               	movwf	___flmul@prod^0,c
 11836  002280  0E00               	movlw	0
 11837  002282  6E3C               	movwf	(___flmul@prod+1)^0,c
 11838  002284  0E80               	movlw	128
 11839  002286  6E3D               	movwf	(___flmul@prod+2)^0,c
 11840  002288  0E7F               	movlw	127
 11841  00228A  6E3E               	movwf	(___flmul@prod+3)^0,c
 11842  00228C  EF76  F011         	goto	l4138
 11843  002290                     l4126:
 11844  002290  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11845  002292  EF55  F011         	goto	u4140
 11846  002296  5040               	movf	(___flmul@temp+1)^0,w,c
 11847  002298  E106               	bnz	u4141
 11848  00229A  043F               	decf	___flmul@temp^0,w,c
 11849  00229C  B0D8               	btfsc	status,0,c
 11850  00229E  EF53  F011         	goto	u4141
 11851  0022A2  EF55  F011         	goto	u4140
 11852  0022A6                     u4141:
 11853  0022A6  EF61  F011         	goto	l1271
 11854  0022AA                     u4140:
 11855  0022AA  0E00               	movlw	0
 11856  0022AC  6E3B               	movwf	___flmul@prod^0,c
 11857  0022AE  0E00               	movlw	0
 11858  0022B0  6E3C               	movwf	(___flmul@prod+1)^0,c
 11859  0022B2  0E00               	movlw	0
 11860  0022B4  6E3D               	movwf	(___flmul@prod+2)^0,c
 11861  0022B6  0E00               	movlw	0
 11862  0022B8  6E3E               	movwf	(___flmul@prod+3)^0,c
 11863  0022BA  0E00               	movlw	0
 11864  0022BC  6E34               	movwf	___flmul@sign^0,c
 11865  0022BE  EF76  F011         	goto	l4138
 11866  0022C2                     l1271:
 11867  0022C2  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11868  0022C6  0EFF               	movlw	255
 11869  0022C8  163B               	andwf	___flmul@prod^0,f,c
 11870  0022CA  0EFF               	movlw	255
 11871  0022CC  163C               	andwf	(___flmul@prod+1)^0,f,c
 11872  0022CE  0E7F               	movlw	127
 11873  0022D0  163D               	andwf	(___flmul@prod+2)^0,f,c
 11874  0022D2  0E00               	movlw	0
 11875  0022D4  163E               	andwf	(___flmul@prod+3)^0,f,c
 11876  0022D6  A03A               	btfss	___flmul@bexp^0,0,c
 11877  0022D8  EF70  F011         	goto	u4151
 11878  0022DC  EF72  F011         	goto	u4150
 11879  0022E0                     u4151:
 11880  0022E0  EF73  F011         	goto	l4136
 11881  0022E4                     u4150:
 11882  0022E4  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 11883  0022E6                     l4136:
 11884  0022E6  90D8               	bcf	status,0,c
 11885  0022E8  303A               	rrcf	___flmul@bexp^0,w,c
 11886  0022EA  6E3E               	movwf	(___flmul@prod+3)^0,c
 11887  0022EC                     l4138:
 11888  0022EC  5034               	movf	___flmul@sign^0,w,c
 11889  0022EE  123E               	iorwf	(___flmul@prod+3)^0,f,c
 11890  0022F0  C03B  F028         	movff	___flmul@prod,?___flmul
 11891  0022F4  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 11892  0022F8  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 11893  0022FC  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 11894  002300                     l1258:
 11895  002300  0012               	return		;funcret
 11896  002302                     __end_of___flmul:
 11897                           	callstack 0
 11898                           
 11899 ;; *************** function ___flge *****************
 11900 ;; Defined at:
 11901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  ff1             4    0[COMRAM] unsigned char 
 11904 ;;  ff2             4    4[COMRAM] unsigned char 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;		None               void
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11916 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11919 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11920 ;;Total ram usage:       12 bytes
 11921 ;; Hardware stack levels used: 1
 11922 ;; Hardware stack levels required when called: 1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		_roundf
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text53
 11931  004DB6                     __ptext53:
 11932                           	callstack 0
 11933  004DB6                     ___flge:
 11934                           	callstack 25
 11935  004DB6  0E00               	movlw	0
 11936  004DB8  1401               	andwf	___flge@ff1^0,w,c
 11937  004DBA  6E09               	movwf	??___flge^0,c
 11938  004DBC  0E00               	movlw	0
 11939  004DBE  1402               	andwf	(___flge@ff1+1)^0,w,c
 11940  004DC0  6E0A               	movwf	(??___flge+1)^0,c
 11941  004DC2  0E80               	movlw	128
 11942  004DC4  1403               	andwf	(___flge@ff1+2)^0,w,c
 11943  004DC6  6E0B               	movwf	(??___flge+2)^0,c
 11944  004DC8  0E7F               	movlw	127
 11945  004DCA  1404               	andwf	(___flge@ff1+3)^0,w,c
 11946  004DCC  6E0C               	movwf	(??___flge+3)^0,c
 11947  004DCE  5009               	movf	??___flge^0,w,c
 11948  004DD0  100A               	iorwf	(??___flge+1)^0,w,c
 11949  004DD2  100B               	iorwf	(??___flge+2)^0,w,c
 11950  004DD4  100C               	iorwf	(??___flge+3)^0,w,c
 11951  004DD6  A4D8               	btfss	status,2,c
 11952  004DD8  EFF0  F026         	goto	u4161
 11953  004DDC  EFF2  F026         	goto	u4160
 11954  004DE0                     u4161:
 11955  004DE0  EFFA  F026         	goto	l4154
 11956  004DE4                     u4160:
 11957  004DE4  0E00               	movlw	0
 11958  004DE6  6E01               	movwf	___flge@ff1^0,c
 11959  004DE8  0E00               	movlw	0
 11960  004DEA  6E02               	movwf	(___flge@ff1+1)^0,c
 11961  004DEC  0E00               	movlw	0
 11962  004DEE  6E03               	movwf	(___flge@ff1+2)^0,c
 11963  004DF0  0E00               	movlw	0
 11964  004DF2  6E04               	movwf	(___flge@ff1+3)^0,c
 11965  004DF4                     l4154:
 11966  004DF4  0E00               	movlw	0
 11967  004DF6  1405               	andwf	___flge@ff2^0,w,c
 11968  004DF8  6E09               	movwf	??___flge^0,c
 11969  004DFA  0E00               	movlw	0
 11970  004DFC  1406               	andwf	(___flge@ff2+1)^0,w,c
 11971  004DFE  6E0A               	movwf	(??___flge+1)^0,c
 11972  004E00  0E80               	movlw	128
 11973  004E02  1407               	andwf	(___flge@ff2+2)^0,w,c
 11974  004E04  6E0B               	movwf	(??___flge+2)^0,c
 11975  004E06  0E7F               	movlw	127
 11976  004E08  1408               	andwf	(___flge@ff2+3)^0,w,c
 11977  004E0A  6E0C               	movwf	(??___flge+3)^0,c
 11978  004E0C  5009               	movf	??___flge^0,w,c
 11979  004E0E  100A               	iorwf	(??___flge+1)^0,w,c
 11980  004E10  100B               	iorwf	(??___flge+2)^0,w,c
 11981  004E12  100C               	iorwf	(??___flge+3)^0,w,c
 11982  004E14  A4D8               	btfss	status,2,c
 11983  004E16  EF0F  F027         	goto	u4171
 11984  004E1A  EF11  F027         	goto	u4170
 11985  004E1E                     u4171:
 11986  004E1E  EF19  F027         	goto	l4158
 11987  004E22                     u4170:
 11988  004E22  0E00               	movlw	0
 11989  004E24  6E05               	movwf	___flge@ff2^0,c
 11990  004E26  0E00               	movlw	0
 11991  004E28  6E06               	movwf	(___flge@ff2+1)^0,c
 11992  004E2A  0E00               	movlw	0
 11993  004E2C  6E07               	movwf	(___flge@ff2+2)^0,c
 11994  004E2E  0E00               	movlw	0
 11995  004E30  6E08               	movwf	(___flge@ff2+3)^0,c
 11996  004E32                     l4158:
 11997  004E32  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11998  004E34  EF1E  F027         	goto	u4181
 11999  004E38  EF20  F027         	goto	u4180
 12000  004E3C                     u4181:
 12001  004E3C  EF29  F027         	goto	l4162
 12002  004E40                     u4180:
 12003  004E40  6C01               	negf	___flge@ff1^0,c
 12004  004E42  1E02               	comf	(___flge@ff1+1)^0,f,c
 12005  004E44  B0D8               	btfsc	status,0,c
 12006  004E46  2A02               	incf	(___flge@ff1+1)^0,f,c
 12007  004E48  1E03               	comf	(___flge@ff1+2)^0,f,c
 12008  004E4A  B0D8               	btfsc	status,0,c
 12009  004E4C  2A03               	incf	(___flge@ff1+2)^0,f,c
 12010  004E4E  0E80               	movlw	128
 12011  004E50  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12012  004E52                     l4162:
 12013  004E52  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12014  004E54  EF2E  F027         	goto	u4191
 12015  004E58  EF30  F027         	goto	u4190
 12016  004E5C                     u4191:
 12017  004E5C  EF39  F027         	goto	l905
 12018  004E60                     u4190:
 12019  004E60  6C05               	negf	___flge@ff2^0,c
 12020  004E62  1E06               	comf	(___flge@ff2+1)^0,f,c
 12021  004E64  B0D8               	btfsc	status,0,c
 12022  004E66  2A06               	incf	(___flge@ff2+1)^0,f,c
 12023  004E68  1E07               	comf	(___flge@ff2+2)^0,f,c
 12024  004E6A  B0D8               	btfsc	status,0,c
 12025  004E6C  2A07               	incf	(___flge@ff2+2)^0,f,c
 12026  004E6E  0E80               	movlw	128
 12027  004E70  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12028  004E72                     l905:
 12029  004E72  0E00               	movlw	0
 12030  004E74  1A01               	xorwf	___flge@ff1^0,f,c
 12031  004E76  0E00               	movlw	0
 12032  004E78  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12033  004E7A  0E00               	movlw	0
 12034  004E7C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12035  004E7E  0E80               	movlw	128
 12036  004E80  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12037  004E82  0E00               	movlw	0
 12038  004E84  1A05               	xorwf	___flge@ff2^0,f,c
 12039  004E86  0E00               	movlw	0
 12040  004E88  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12041  004E8A  0E00               	movlw	0
 12042  004E8C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12043  004E8E  0E80               	movlw	128
 12044  004E90  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12045  004E92  5005               	movf	___flge@ff2^0,w,c
 12046  004E94  5C01               	subwf	___flge@ff1^0,w,c
 12047  004E96  5006               	movf	(___flge@ff2+1)^0,w,c
 12048  004E98  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12049  004E9A  5007               	movf	(___flge@ff2+2)^0,w,c
 12050  004E9C  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12051  004E9E  5008               	movf	(___flge@ff2+3)^0,w,c
 12052  004EA0  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12053  004EA2  B0D8               	btfsc	status,0,c
 12054  004EA4  EF56  F027         	goto	u4201
 12055  004EA8  EF58  F027         	goto	u4200
 12056  004EAC                     u4201:
 12057  004EAC  EF5B  F027         	goto	l4168
 12058  004EB0                     u4200:
 12059  004EB0  90D8               	bcf	status,0,c
 12060  004EB2  EF5C  F027         	goto	l910
 12061  004EB6                     l4168:
 12062  004EB6  80D8               	bsf	status,0,c
 12063  004EB8                     l910:
 12064  004EB8  0012               	return		;funcret
 12065  004EBA                     __end_of___flge:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function ___fltol *****************
 12069 ;; Defined at:
 12070 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  f1              4   90[COMRAM] unsigned char 
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;  exp1            1    5[BANK0 ] unsigned char 
 12075 ;;  sign1           1    4[BANK0 ] unsigned char 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  4   90[COMRAM] long 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12088 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12089 ;;Total ram usage:       10 bytes
 12090 ;; Hardware stack levels used: 1
 12091 ;; Hardware stack levels required when called: 1
 12092 ;; This function calls:
 12093 ;;		Nothing
 12094 ;; This function is called by:
 12095 ;;		_lroundf
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           	psect	text54
 12100  004CAE                     __ptext54:
 12101                           	callstack 0
 12102  004CAE                     ___fltol:
 12103                           	callstack 26
 12104  004CAE  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12105  004CB0  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12106  004CB2  0100               	movlb	0	; () banked
 12107  004CB4  6F65               	movwf	___fltol@exp1& (0+255),b
 12108  004CB6  5165               	movf	___fltol@exp1& (0+255),w,b
 12109  004CB8  A4D8               	btfss	status,2,c
 12110  004CBA  EF61  F026         	goto	u4351
 12111  004CBE  EF63  F026         	goto	u4350
 12112  004CC2                     u4351:
 12113  004CC2  EF6D  F026         	goto	l4310
 12114  004CC6                     u4350:
 12115  004CC6                     l4306:
 12116                           
 12117                           ; BSR set to: 0
 12118  004CC6  0E00               	movlw	0
 12119  004CC8  6E5B               	movwf	?___fltol^0,c
 12120  004CCA  0E00               	movlw	0
 12121  004CCC  6E5C               	movwf	(?___fltol+1)^0,c
 12122  004CCE  0E00               	movlw	0
 12123  004CD0  6E5D               	movwf	(?___fltol+2)^0,c
 12124  004CD2  0E00               	movlw	0
 12125  004CD4  6E5E               	movwf	(?___fltol+3)^0,c
 12126  004CD6  EFDA  F026         	goto	l937
 12127  004CDA                     l4310:
 12128                           
 12129                           ; BSR set to: 0
 12130  004CDA  C05B  F060         	movff	___fltol@f1,??___fltol
 12131  004CDE  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12132  004CE2  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12133  004CE6  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12134  004CEA  0E20               	movlw	32
 12135  004CEC  EF7D  F026         	goto	u4360
 12136  004CF0                     u4365:
 12137  004CF0  90D8               	bcf	status,0,c
 12138  004CF2  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12139  004CF4  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12140  004CF6  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12141  004CF8  3360               	rrcf	??___fltol& (0+255),f,b
 12142  004CFA                     u4360:
 12143  004CFA  2EE8               	decfsz	wreg,f,c
 12144  004CFC  EF78  F026         	goto	u4365
 12145  004D00  5160               	movf	??___fltol& (0+255),w,b
 12146  004D02  6F64               	movwf	___fltol@sign1& (0+255),b
 12147  004D04                     
 12148                           ; BSR set to: 0
 12149  004D04  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12150  004D06                     
 12151                           ; BSR set to: 0
 12152  004D06  0EFF               	movlw	255
 12153  004D08  165B               	andwf	___fltol@f1^0,f,c
 12154  004D0A  0EFF               	movlw	255
 12155  004D0C  165C               	andwf	(___fltol@f1+1)^0,f,c
 12156  004D0E  0EFF               	movlw	255
 12157  004D10  165D               	andwf	(___fltol@f1+2)^0,f,c
 12158  004D12  0E00               	movlw	0
 12159  004D14  165E               	andwf	(___fltol@f1+3)^0,f,c
 12160  004D16                     
 12161                           ; BSR set to: 0
 12162  004D16  0E96               	movlw	150
 12163  004D18  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12164  004D1A                     
 12165                           ; BSR set to: 0
 12166  004D1A  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12167  004D1C  EF94  F026         	goto	u4370
 12168  004D20  EF92  F026         	goto	u4371
 12169  004D24                     u4371:
 12170  004D24  EFAA  F026         	goto	l4330
 12171  004D28                     u4370:
 12172  004D28                     
 12173                           ; BSR set to: 0
 12174  004D28  5165               	movf	___fltol@exp1& (0+255),w,b
 12175  004D2A  0A80               	xorlw	128
 12176  004D2C  0F97               	addlw	151
 12177  004D2E  B0D8               	btfsc	status,0,c
 12178  004D30  EF9C  F026         	goto	u4381
 12179  004D34  EF9E  F026         	goto	u4380
 12180  004D38                     u4381:
 12181  004D38  EFA0  F026         	goto	l4326
 12182  004D3C                     u4380:
 12183  004D3C  EF63  F026         	goto	l4306
 12184  004D40                     l4326:
 12185                           
 12186                           ; BSR set to: 0
 12187  004D40  90D8               	bcf	status,0,c
 12188  004D42  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12189  004D44  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12190  004D46  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12191  004D48  325B               	rrcf	___fltol@f1^0,f,c
 12192  004D4A                     
 12193                           ; BSR set to: 0
 12194  004D4A  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12195  004D4C  EFA0  F026         	goto	l4326
 12196  004D50  EFC2  F026         	goto	l4340
 12197  004D54                     l4330:
 12198                           
 12199                           ; BSR set to: 0
 12200  004D54  0E1F               	movlw	31
 12201  004D56  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12202  004D58  EFB0  F026         	goto	u4391
 12203  004D5C  EFB2  F026         	goto	u4390
 12204  004D60                     u4391:
 12205  004D60  EFBA  F026         	goto	l4338
 12206  004D64                     u4390:
 12207  004D64  EF63  F026         	goto	l4306
 12208  004D68                     l4336:
 12209                           
 12210                           ; BSR set to: 0
 12211  004D68  90D8               	bcf	status,0,c
 12212  004D6A  365B               	rlcf	___fltol@f1^0,f,c
 12213  004D6C  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12214  004D6E  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12215  004D70  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12216  004D72  0765               	decf	___fltol@exp1& (0+255),f,b
 12217  004D74                     l4338:
 12218                           
 12219                           ; BSR set to: 0
 12220  004D74  5165               	movf	___fltol@exp1& (0+255),w,b
 12221  004D76  A4D8               	btfss	status,2,c
 12222  004D78  EFC0  F026         	goto	u4401
 12223  004D7C  EFC2  F026         	goto	u4400
 12224  004D80                     u4401:
 12225  004D80  EFB4  F026         	goto	l4336
 12226  004D84                     u4400:
 12227  004D84                     l4340:
 12228                           
 12229                           ; BSR set to: 0
 12230  004D84  5164               	movf	___fltol@sign1& (0+255),w,b
 12231  004D86  B4D8               	btfsc	status,2,c
 12232  004D88  EFC8  F026         	goto	u4411
 12233  004D8C  EFCA  F026         	goto	u4410
 12234  004D90                     u4411:
 12235  004D90  EFD2  F026         	goto	l4344
 12236  004D94                     u4410:
 12237  004D94                     
 12238                           ; BSR set to: 0
 12239  004D94  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12240  004D96  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12241  004D98  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12242  004D9A  6C5B               	negf	___fltol@f1^0,c
 12243  004D9C  0E00               	movlw	0
 12244  004D9E  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12245  004DA0  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12246  004DA2  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12247  004DA4                     l4344:
 12248                           
 12249                           ; BSR set to: 0
 12250  004DA4  C05B  F05B         	movff	___fltol@f1,?___fltol
 12251  004DA8  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12252  004DAC  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12253  004DB0  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12254  004DB4                     l937:
 12255                           
 12256                           ; BSR set to: 0
 12257  004DB4  0012               	return		;funcret
 12258  004DB6                     __end_of___fltol:
 12259                           	callstack 0
 12260                           
 12261 ;; *************** function _color_read_Clear *****************
 12262 ;; Defined at:
 12263 ;;		line 153 in file "color.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  tmp             2    9[COMRAM] unsigned int 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  2    4[COMRAM] unsigned int 
 12270 ;; Registers used:
 12271 ;;		wreg, status,2, status,0, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12279 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12281 ;;Total ram usage:        7 bytes
 12282 ;; Hardware stack levels used: 1
 12283 ;; Hardware stack levels required when called: 3
 12284 ;; This function calls:
 12285 ;;		_I2C_2_Master_Read
 12286 ;;		_I2C_2_Master_RepStart
 12287 ;;		_I2C_2_Master_Start
 12288 ;;		_I2C_2_Master_Stop
 12289 ;;		_I2C_2_Master_Write
 12290 ;; This function is called by:
 12291 ;;		_read_color
 12292 ;;		_calibrate_white
 12293 ;;		_amb_light_measure
 12294 ;;		_distance_measure
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text55
 12299  005804                     __ptext55:
 12300                           	callstack 0
 12301  005804                     _color_read_Clear:
 12302                           	callstack 24
 12303  005804                     
 12304                           ;color.c: 155:  unsigned int tmp;;color.c: 156:  I2C_2_Master_Start();
 12305  005804  ECC2  F02E         	call	_I2C_2_Master_Start	;wreg free
 12306                           
 12307                           ;color.c: 157:  I2C_2_Master_Write(0x52 | 0x00);
 12308  005808  0E52               	movlw	82
 12309  00580A  ECAC  F02E         	call	_I2C_2_Master_Write
 12310                           
 12311                           ;color.c: 158:  I2C_2_Master_Write(0xA0 | 0x14);
 12312  00580E  0EB4               	movlw	180
 12313  005810  ECAC  F02E         	call	_I2C_2_Master_Write
 12314                           
 12315                           ;color.c: 159:  I2C_2_Master_RepStart();
 12316  005814  ECB8  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 12317                           
 12318                           ;color.c: 160:  I2C_2_Master_Write(0x52 | 0x01);
 12319  005818  0E53               	movlw	83
 12320  00581A  ECAC  F02E         	call	_I2C_2_Master_Write
 12321                           
 12322                           ;color.c: 161:  tmp=I2C_2_Master_Read(1);
 12323  00581E  0E01               	movlw	1
 12324  005820  EC90  F02C         	call	_I2C_2_Master_Read
 12325  005824  6E07               	movwf	??_color_read_Clear^0,c
 12326  005826  5007               	movf	??_color_read_Clear^0,w,c
 12327  005828  6E0A               	movwf	color_read_Clear@tmp^0,c
 12328  00582A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12329                           
 12330                           ;color.c: 162:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12331  00582C  0E00               	movlw	0
 12332  00582E  EC90  F02C         	call	_I2C_2_Master_Read
 12333  005832  6E07               	movwf	??_color_read_Clear^0,c
 12334  005834  5007               	movf	??_color_read_Clear^0,w,c
 12335  005836  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12336  005838  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12337  00583A  500A               	movf	color_read_Clear@tmp^0,w,c
 12338  00583C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12339  00583E  6E0A               	movwf	color_read_Clear@tmp^0,c
 12340  005840  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12341  005842  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12342  005844  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12343                           
 12344                           ;color.c: 163:  I2C_2_Master_Stop();
 12345  005846  ECBD  F02E         	call	_I2C_2_Master_Stop	;wreg free
 12346  00584A                     
 12347                           ;color.c: 164:  return tmp;
 12348  00584A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12349  00584E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12350  005852  0012               	return		;funcret
 12351  005854                     __end_of_color_read_Clear:
 12352                           	callstack 0
 12353                           
 12354 ;; *************** function _I2C_2_Master_RepStart *****************
 12355 ;; Defined at:
 12356 ;;		line 33 in file "i2c.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, status,2, status,0, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12374 ;;Total ram usage:        0 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 2
 12377 ;; This function calls:
 12378 ;;		_I2C_2_Master_Idle
 12379 ;; This function is called by:
 12380 ;;		_color_read_Red
 12381 ;;		_color_read_Blue
 12382 ;;		_color_read_Green
 12383 ;;		_color_read_Clear
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text56
 12388  005D70                     __ptext56:
 12389                           	callstack 0
 12390  005D70                     _I2C_2_Master_RepStart:
 12391                           	callstack 24
 12392  005D70                     
 12393                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12394  005D70  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12395  005D74                     
 12396                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12397  005D74  010E               	movlb	14	; () banked
 12398  005D76  83DA               	bsf	218,1,b	;volatile
 12399  005D78                     
 12400                           ; BSR set to: 14
 12401  005D78  0012               	return		;funcret
 12402  005D7A                     __end_of_I2C_2_Master_RepStart:
 12403                           	callstack 0
 12404                           
 12405 ;; *************** function _I2C_2_Master_Read *****************
 12406 ;; Defined at:
 12407 ;;		line 51 in file "i2c.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  ack             1    wreg     unsigned char 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  ack             1    2[COMRAM] unsigned char 
 12412 ;;  tmp             1    3[COMRAM] unsigned char 
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  1    wreg      unsigned char 
 12415 ;; Registers used:
 12416 ;;		wreg, status,2, status,0, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12425 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12426 ;;Total ram usage:        3 bytes
 12427 ;; Hardware stack levels used: 1
 12428 ;; Hardware stack levels required when called: 2
 12429 ;; This function calls:
 12430 ;;		_I2C_2_Master_Idle
 12431 ;; This function is called by:
 12432 ;;		_color_read_Red
 12433 ;;		_color_read_Blue
 12434 ;;		_color_read_Green
 12435 ;;		_color_read_Clear
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           	psect	text57
 12440  005920                     __ptext57:
 12441                           	callstack 0
 12442  005920                     _I2C_2_Master_Read:
 12443                           	callstack 24
 12444                           
 12445                           ; BSR set to: 14
 12446                           ;incstack = 0
 12447                           ;I2C_2_Master_Read@ack stored from wreg
 12448  005920  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12449  005922                     
 12450                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12451  005922  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12452  005926                     
 12453                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12454  005926  010E               	movlb	14	; () banked
 12455  005928  87DA               	bsf	218,3,b	;volatile
 12456                           
 12457                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12458  00592A  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12459  00592E                     
 12460                           ;i2c.c: 57:   tmp = SSP2BUF;
 12461  00592E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12462                           
 12463                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12464  005932  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12465  005936                     
 12466                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12467  005936  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12468  005938  B4D8               	btfsc	status,2,c
 12469  00593A  EFA1  F02C         	goto	u3901
 12470  00593E  EFA5  F02C         	goto	u3900
 12471  005942                     u3901:
 12472  005942  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12473  005944  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12474  005946  EFA6  F02C         	goto	u3918
 12475  00594A                     u3900:
 12476  00594A  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12477  00594C                     u3918:
 12478  00594C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12479  00594E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12480  005950  010E               	movlb	14	; () banked
 12481  005952  51DA               	movf	218,w,b	;volatile
 12482  005954  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12483  005956  0BDF               	andlw	-33
 12484  005958  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12485  00595A  6FDA               	movwf	218,b	;volatile
 12486  00595C                     
 12487                           ; BSR set to: 14
 12488                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12489  00595C  89DA               	bsf	218,4,b	;volatile
 12490  00595E                     
 12491                           ; BSR set to: 14
 12492                           ;i2c.c: 61:   return tmp;
 12493  00595E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12494  005960                     
 12495                           ; BSR set to: 14
 12496  005960  0012               	return		;funcret
 12497  005962                     __end_of_I2C_2_Master_Read:
 12498                           	callstack 0
 12499                           
 12500 ;; *************** function ___xxtofl *****************
 12501 ;; Defined at:
 12502 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  sign            1    wreg     unsigned char 
 12505 ;;  val             4    0[COMRAM] long 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  sign            1    8[COMRAM] unsigned char 
 12508 ;;  arg             4   10[COMRAM] unsigned long 
 12509 ;;  exp             1    9[COMRAM] unsigned char 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  4    0[COMRAM] unsigned char 
 12512 ;; Registers used:
 12513 ;;		wreg, status,2, status,0
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12520 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;Total ram usage:       14 bytes
 12524 ;; Hardware stack levels used: 1
 12525 ;; Hardware stack levels required when called: 1
 12526 ;; This function calls:
 12527 ;;		Nothing
 12528 ;; This function is called by:
 12529 ;;		_detect_color
 12530 ;;		_amb_light_measure
 12531 ;;		_distance_measure
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           	psect	text58
 12536  003E24                     __ptext58:
 12537                           	callstack 0
 12538  003E24                     ___xxtofl:
 12539                           	callstack 27
 12540                           
 12541                           ; BSR set to: 14
 12542                           ;incstack = 0
 12543                           ;___xxtofl@sign stored from wreg
 12544  003E24  6E09               	movwf	___xxtofl@sign^0,c
 12545  003E26  5009               	movf	___xxtofl@sign^0,w,c
 12546  003E28  B4D8               	btfsc	status,2,c
 12547  003E2A  EF19  F01F         	goto	u5091
 12548  003E2E  EF1B  F01F         	goto	u5090
 12549  003E32                     u5091:
 12550  003E32  EF3D  F01F         	goto	l1295
 12551  003E36                     u5090:
 12552  003E36  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12553  003E38  EF22  F01F         	goto	u5100
 12554  003E3C  EF20  F01F         	goto	u5101
 12555  003E40                     u5101:
 12556  003E40  EF3D  F01F         	goto	l1295
 12557  003E44                     u5100:
 12558  003E44  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12559  003E48  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12560  003E4C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12561  003E50  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12562  003E54  1E05               	comf	??___xxtofl^0,f,c
 12563  003E56  1E06               	comf	(??___xxtofl+1)^0,f,c
 12564  003E58  1E07               	comf	(??___xxtofl+2)^0,f,c
 12565  003E5A  1E08               	comf	(??___xxtofl+3)^0,f,c
 12566  003E5C  2A05               	incf	??___xxtofl^0,f,c
 12567  003E5E  0E00               	movlw	0
 12568  003E60  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12569  003E62  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12570  003E64  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12571  003E66  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12572  003E6A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12573  003E6E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12574  003E72  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12575  003E76  EF45  F01F         	goto	l4668
 12576  003E7A                     l1295:
 12577  003E7A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12578  003E7E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12579  003E82  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12580  003E86  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12581  003E8A                     l4668:
 12582  003E8A  5001               	movf	___xxtofl@val^0,w,c
 12583  003E8C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12584  003E8E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12585  003E90  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12586  003E92  A4D8               	btfss	status,2,c
 12587  003E94  EF4E  F01F         	goto	u5111
 12588  003E98  EF50  F01F         	goto	u5110
 12589  003E9C                     u5111:
 12590  003E9C  EF5A  F01F         	goto	l4674
 12591  003EA0                     u5110:
 12592  003EA0  0E00               	movlw	0
 12593  003EA2  6E01               	movwf	?___xxtofl^0,c
 12594  003EA4  0E00               	movlw	0
 12595  003EA6  6E02               	movwf	(?___xxtofl+1)^0,c
 12596  003EA8  0E00               	movlw	0
 12597  003EAA  6E03               	movwf	(?___xxtofl+2)^0,c
 12598  003EAC  0E00               	movlw	0
 12599  003EAE  6E04               	movwf	(?___xxtofl+3)^0,c
 12600  003EB0  EFEB  F01F         	goto	l1298
 12601  003EB4                     l4674:
 12602  003EB4  0E96               	movlw	150
 12603  003EB6  6E0A               	movwf	___xxtofl@exp^0,c
 12604  003EB8  EF64  F01F         	goto	l4678
 12605  003EBC                     l4676:
 12606  003EBC  2A0A               	incf	___xxtofl@exp^0,f,c
 12607  003EBE  90D8               	bcf	status,0,c
 12608  003EC0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12609  003EC2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12610  003EC4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12611  003EC6  320B               	rrcf	___xxtofl@arg^0,f,c
 12612  003EC8                     l4678:
 12613  003EC8  0E00               	movlw	0
 12614  003ECA  140B               	andwf	___xxtofl@arg^0,w,c
 12615  003ECC  6E05               	movwf	??___xxtofl^0,c
 12616  003ECE  0E00               	movlw	0
 12617  003ED0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12618  003ED2  6E06               	movwf	(??___xxtofl+1)^0,c
 12619  003ED4  0E00               	movlw	0
 12620  003ED6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12621  003ED8  6E07               	movwf	(??___xxtofl+2)^0,c
 12622  003EDA  0EFE               	movlw	254
 12623  003EDC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12624  003EDE  6E08               	movwf	(??___xxtofl+3)^0,c
 12625  003EE0  5005               	movf	??___xxtofl^0,w,c
 12626  003EE2  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12627  003EE4  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12628  003EE6  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12629  003EE8  A4D8               	btfss	status,2,c
 12630  003EEA  EF79  F01F         	goto	u5121
 12631  003EEE  EF7B  F01F         	goto	u5120
 12632  003EF2                     u5121:
 12633  003EF2  EF5E  F01F         	goto	l4676
 12634  003EF6                     u5120:
 12635  003EF6  EF89  F01F         	goto	l1302
 12636  003EFA                     l4680:
 12637  003EFA  2A0A               	incf	___xxtofl@exp^0,f,c
 12638  003EFC  0E01               	movlw	1
 12639  003EFE  260B               	addwf	___xxtofl@arg^0,f,c
 12640  003F00  0E00               	movlw	0
 12641  003F02  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12642  003F04  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12643  003F06  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12644  003F08  90D8               	bcf	status,0,c
 12645  003F0A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12646  003F0C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12647  003F0E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12648  003F10  320B               	rrcf	___xxtofl@arg^0,f,c
 12649  003F12                     l1302:
 12650  003F12  0E00               	movlw	0
 12651  003F14  140B               	andwf	___xxtofl@arg^0,w,c
 12652  003F16  6E05               	movwf	??___xxtofl^0,c
 12653  003F18  0E00               	movlw	0
 12654  003F1A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12655  003F1C  6E06               	movwf	(??___xxtofl+1)^0,c
 12656  003F1E  0E00               	movlw	0
 12657  003F20  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12658  003F22  6E07               	movwf	(??___xxtofl+2)^0,c
 12659  003F24  0EFF               	movlw	255
 12660  003F26  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12661  003F28  6E08               	movwf	(??___xxtofl+3)^0,c
 12662  003F2A  5005               	movf	??___xxtofl^0,w,c
 12663  003F2C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12664  003F2E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12665  003F30  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12666  003F32  A4D8               	btfss	status,2,c
 12667  003F34  EF9E  F01F         	goto	u5131
 12668  003F38  EFA0  F01F         	goto	u5130
 12669  003F3C                     u5131:
 12670  003F3C  EF7D  F01F         	goto	l4680
 12671  003F40                     u5130:
 12672  003F40  EFA8  F01F         	goto	l4688
 12673  003F44                     l4686:
 12674  003F44  060A               	decf	___xxtofl@exp^0,f,c
 12675  003F46  90D8               	bcf	status,0,c
 12676  003F48  360B               	rlcf	___xxtofl@arg^0,f,c
 12677  003F4A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12678  003F4C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12679  003F4E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12680  003F50                     l4688:
 12681  003F50  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12682  003F52  EFAD  F01F         	goto	u5141
 12683  003F56  EFAF  F01F         	goto	u5140
 12684  003F5A                     u5141:
 12685  003F5A  EFB7  F01F         	goto	l1309
 12686  003F5E                     u5140:
 12687  003F5E  0E02               	movlw	2
 12688  003F60  600A               	cpfslt	___xxtofl@exp^0,c
 12689  003F62  EFB5  F01F         	goto	u5151
 12690  003F66  EFB7  F01F         	goto	u5150
 12691  003F6A                     u5151:
 12692  003F6A  EFA2  F01F         	goto	l4686
 12693  003F6E                     u5150:
 12694  003F6E                     l1309:
 12695  003F6E  B00A               	btfsc	___xxtofl@exp^0,0,c
 12696  003F70  EFBC  F01F         	goto	u5161
 12697  003F74  EFBE  F01F         	goto	u5160
 12698  003F78                     u5161:
 12699  003F78  EFBF  F01F         	goto	l4694
 12700  003F7C                     u5160:
 12701  003F7C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12702  003F7E                     l4694:
 12703  003F7E  90D8               	bcf	status,0,c
 12704  003F80  320A               	rrcf	___xxtofl@exp^0,f,c
 12705  003F82  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12706  003F86  6A06               	clrf	(??___xxtofl+1)^0,c
 12707  003F88  6A07               	clrf	(??___xxtofl+2)^0,c
 12708  003F8A  6A08               	clrf	(??___xxtofl+3)^0,c
 12709  003F8C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12710  003F90  6A07               	clrf	(??___xxtofl+2)^0,c
 12711  003F92  6A06               	clrf	(??___xxtofl+1)^0,c
 12712  003F94  6A05               	clrf	??___xxtofl^0,c
 12713  003F96  5005               	movf	??___xxtofl^0,w,c
 12714  003F98  120B               	iorwf	___xxtofl@arg^0,f,c
 12715  003F9A  5006               	movf	(??___xxtofl+1)^0,w,c
 12716  003F9C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12717  003F9E  5007               	movf	(??___xxtofl+2)^0,w,c
 12718  003FA0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12719  003FA2  5008               	movf	(??___xxtofl+3)^0,w,c
 12720  003FA4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12721  003FA6  5009               	movf	___xxtofl@sign^0,w,c
 12722  003FA8  B4D8               	btfsc	status,2,c
 12723  003FAA  EFD9  F01F         	goto	u5171
 12724  003FAE  EFDB  F01F         	goto	u5170
 12725  003FB2                     u5171:
 12726  003FB2  EFE3  F01F         	goto	l4704
 12727  003FB6                     u5170:
 12728  003FB6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12729  003FB8  EFE2  F01F         	goto	u5180
 12730  003FBC  EFE0  F01F         	goto	u5181
 12731  003FC0                     u5181:
 12732  003FC0  EFE3  F01F         	goto	l4704
 12733  003FC4                     u5180:
 12734  003FC4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12735  003FC6                     l4704:
 12736  003FC6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12737  003FCA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12738  003FCE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12739  003FD2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12740  003FD6                     l1298:
 12741  003FD6  0012               	return		;funcret
 12742  003FD8                     __end_of___xxtofl:
 12743                           	callstack 0
 12744                           
 12745 ;; *************** function ___fldiv *****************
 12746 ;; Defined at:
 12747 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;  b               4   14[COMRAM] unsigned char 
 12750 ;;  a               4   18[COMRAM] unsigned char 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  grs             4   33[COMRAM] unsigned long 
 12753 ;;  rem             4   26[COMRAM] unsigned long 
 12754 ;;  new_exp         2   31[COMRAM] short 
 12755 ;;  aexp            1   38[COMRAM] unsigned char 
 12756 ;;  bexp            1   37[COMRAM] unsigned char 
 12757 ;;  sign            1   30[COMRAM] unsigned char 
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  4   14[COMRAM] unsigned char 
 12760 ;; Registers used:
 12761 ;;		wreg, status,2, status,0
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12768 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12770 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12771 ;;Total ram usage:       25 bytes
 12772 ;; Hardware stack levels used: 1
 12773 ;; Hardware stack levels required when called: 1
 12774 ;; This function calls:
 12775 ;;		Nothing
 12776 ;; This function is called by:
 12777 ;;		_detect_color
 12778 ;;		_amb_light_measure
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text59
 12783  002A54                     __ptext59:
 12784                           	callstack 0
 12785  002A54                     ___fldiv:
 12786                           	callstack 27
 12787  002A54  5012               	movf	(___fldiv@b+3)^0,w,c
 12788  002A56  0B80               	andlw	128
 12789  002A58  6E1F               	movwf	___fldiv@sign^0,c
 12790  002A5A  5012               	movf	(___fldiv@b+3)^0,w,c
 12791  002A5C  2412               	addwf	(___fldiv@b+3)^0,w,c
 12792  002A5E  6E26               	movwf	___fldiv@bexp^0,c
 12793  002A60  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12794  002A62  EF35  F015         	goto	u4861
 12795  002A66  EF37  F015         	goto	u4860
 12796  002A6A                     u4861:
 12797  002A6A  EF38  F015         	goto	l4530
 12798  002A6E                     u4860:
 12799  002A6E  8026               	bsf	___fldiv@bexp^0,0,c
 12800  002A70                     l4530:
 12801  002A70  5026               	movf	___fldiv@bexp^0,w,c
 12802  002A72  B4D8               	btfsc	status,2,c
 12803  002A74  EF3E  F015         	goto	u4871
 12804  002A78  EF40  F015         	goto	u4870
 12805  002A7C                     u4871:
 12806  002A7C  EF55  F015         	goto	l4540
 12807  002A80                     u4870:
 12808  002A80  2826               	incf	___fldiv@bexp^0,w,c
 12809  002A82  A4D8               	btfss	status,2,c
 12810  002A84  EF46  F015         	goto	u4881
 12811  002A88  EF48  F015         	goto	u4880
 12812  002A8C                     u4881:
 12813  002A8C  EF50  F015         	goto	l4536
 12814  002A90                     u4880:
 12815  002A90  0E00               	movlw	0
 12816  002A92  6E0F               	movwf	___fldiv@b^0,c
 12817  002A94  0E00               	movlw	0
 12818  002A96  6E10               	movwf	(___fldiv@b+1)^0,c
 12819  002A98  0E00               	movlw	0
 12820  002A9A  6E11               	movwf	(___fldiv@b+2)^0,c
 12821  002A9C  0E00               	movlw	0
 12822  002A9E  6E12               	movwf	(___fldiv@b+3)^0,c
 12823  002AA0                     l4536:
 12824  002AA0  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12825  002AA2  0E00               	movlw	0
 12826  002AA4  6E12               	movwf	(___fldiv@b+3)^0,c
 12827  002AA6  EF5D  F015         	goto	l4542
 12828  002AAA                     l4540:
 12829  002AAA  0E00               	movlw	0
 12830  002AAC  6E0F               	movwf	___fldiv@b^0,c
 12831  002AAE  0E00               	movlw	0
 12832  002AB0  6E10               	movwf	(___fldiv@b+1)^0,c
 12833  002AB2  0E00               	movlw	0
 12834  002AB4  6E11               	movwf	(___fldiv@b+2)^0,c
 12835  002AB6  0E00               	movlw	0
 12836  002AB8  6E12               	movwf	(___fldiv@b+3)^0,c
 12837  002ABA                     l4542:
 12838  002ABA  5016               	movf	(___fldiv@a+3)^0,w,c
 12839  002ABC  0B80               	andlw	128
 12840  002ABE  1A1F               	xorwf	___fldiv@sign^0,f,c
 12841  002AC0  5016               	movf	(___fldiv@a+3)^0,w,c
 12842  002AC2  2416               	addwf	(___fldiv@a+3)^0,w,c
 12843  002AC4  6E27               	movwf	___fldiv@aexp^0,c
 12844  002AC6  AE15               	btfss	(___fldiv@a+2)^0,7,c
 12845  002AC8  EF68  F015         	goto	u4891
 12846  002ACC  EF6A  F015         	goto	u4890
 12847  002AD0                     u4891:
 12848  002AD0  EF6B  F015         	goto	l4550
 12849  002AD4                     u4890:
 12850  002AD4  8027               	bsf	___fldiv@aexp^0,0,c
 12851  002AD6                     l4550:
 12852  002AD6  5027               	movf	___fldiv@aexp^0,w,c
 12853  002AD8  B4D8               	btfsc	status,2,c
 12854  002ADA  EF71  F015         	goto	u4901
 12855  002ADE  EF73  F015         	goto	u4900
 12856  002AE2                     u4901:
 12857  002AE2  EF88  F015         	goto	l4560
 12858  002AE6                     u4900:
 12859  002AE6  2827               	incf	___fldiv@aexp^0,w,c
 12860  002AE8  A4D8               	btfss	status,2,c
 12861  002AEA  EF79  F015         	goto	u4911
 12862  002AEE  EF7B  F015         	goto	u4910
 12863  002AF2                     u4911:
 12864  002AF2  EF83  F015         	goto	l4556
 12865  002AF6                     u4910:
 12866  002AF6  0E00               	movlw	0
 12867  002AF8  6E13               	movwf	___fldiv@a^0,c
 12868  002AFA  0E00               	movlw	0
 12869  002AFC  6E14               	movwf	(___fldiv@a+1)^0,c
 12870  002AFE  0E00               	movlw	0
 12871  002B00  6E15               	movwf	(___fldiv@a+2)^0,c
 12872  002B02  0E00               	movlw	0
 12873  002B04  6E16               	movwf	(___fldiv@a+3)^0,c
 12874  002B06                     l4556:
 12875  002B06  8E15               	bsf	(___fldiv@a+2)^0,7,c
 12876  002B08  0E00               	movlw	0
 12877  002B0A  6E16               	movwf	(___fldiv@a+3)^0,c
 12878  002B0C  EF90  F015         	goto	l4562
 12879  002B10                     l4560:
 12880  002B10  0E00               	movlw	0
 12881  002B12  6E13               	movwf	___fldiv@a^0,c
 12882  002B14  0E00               	movlw	0
 12883  002B16  6E14               	movwf	(___fldiv@a+1)^0,c
 12884  002B18  0E00               	movlw	0
 12885  002B1A  6E15               	movwf	(___fldiv@a+2)^0,c
 12886  002B1C  0E00               	movlw	0
 12887  002B1E  6E16               	movwf	(___fldiv@a+3)^0,c
 12888  002B20                     l4562:
 12889  002B20  5013               	movf	___fldiv@a^0,w,c
 12890  002B22  1014               	iorwf	(___fldiv@a+1)^0,w,c
 12891  002B24  1015               	iorwf	(___fldiv@a+2)^0,w,c
 12892  002B26  1016               	iorwf	(___fldiv@a+3)^0,w,c
 12893  002B28  A4D8               	btfss	status,2,c
 12894  002B2A  EF99  F015         	goto	u4921
 12895  002B2E  EF9B  F015         	goto	u4920
 12896  002B32                     u4921:
 12897  002B32  EFB3  F015         	goto	l4574
 12898  002B36                     u4920:
 12899  002B36  0E00               	movlw	0
 12900  002B38  6E0F               	movwf	___fldiv@b^0,c
 12901  002B3A  0E00               	movlw	0
 12902  002B3C  6E10               	movwf	(___fldiv@b+1)^0,c
 12903  002B3E  0E00               	movlw	0
 12904  002B40  6E11               	movwf	(___fldiv@b+2)^0,c
 12905  002B42  0E00               	movlw	0
 12906  002B44  6E12               	movwf	(___fldiv@b+3)^0,c
 12907  002B46  0E80               	movlw	128
 12908  002B48  1211               	iorwf	(___fldiv@b+2)^0,f,c
 12909  002B4A  0E7F               	movlw	127
 12910  002B4C  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12911  002B4E                     l4568:
 12912  002B4E  501F               	movf	___fldiv@sign^0,w,c
 12913  002B50  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12914  002B52  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12915  002B56  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12916  002B5A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12917  002B5E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12918  002B62  EFF6  F016         	goto	l1222
 12919  002B66                     l4574:
 12920  002B66  5026               	movf	___fldiv@bexp^0,w,c
 12921  002B68  A4D8               	btfss	status,2,c
 12922  002B6A  EFB9  F015         	goto	u4931
 12923  002B6E  EFBB  F015         	goto	u4930
 12924  002B72                     u4931:
 12925  002B72  EFC5  F015         	goto	l4582
 12926  002B76                     u4930:
 12927  002B76  0E00               	movlw	0
 12928  002B78  6E0F               	movwf	?___fldiv^0,c
 12929  002B7A  0E00               	movlw	0
 12930  002B7C  6E10               	movwf	(?___fldiv+1)^0,c
 12931  002B7E  0E00               	movlw	0
 12932  002B80  6E11               	movwf	(?___fldiv+2)^0,c
 12933  002B82  0E00               	movlw	0
 12934  002B84  6E12               	movwf	(?___fldiv+3)^0,c
 12935  002B86  EFF6  F016         	goto	l1222
 12936  002B8A                     l4582:
 12937  002B8A  5027               	movf	___fldiv@aexp^0,w,c
 12938  002B8C  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12939  002B90  6A18               	clrf	(??___fldiv+1)^0,c
 12940  002B92  5E17               	subwf	??___fldiv^0,f,c
 12941  002B94  0E00               	movlw	0
 12942  002B96  5A18               	subwfb	(??___fldiv+1)^0,f,c
 12943  002B98  0E7F               	movlw	127
 12944  002B9A  2417               	addwf	??___fldiv^0,w,c
 12945  002B9C  6E20               	movwf	___fldiv@new_exp^0,c
 12946  002B9E  0E00               	movlw	0
 12947  002BA0  2018               	addwfc	(??___fldiv+1)^0,w,c
 12948  002BA2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12949  002BA4  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12950  002BA8  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12951  002BAC  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12952  002BB0  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12953  002BB4  0E00               	movlw	0
 12954  002BB6  6E0F               	movwf	___fldiv@b^0,c
 12955  002BB8  0E00               	movlw	0
 12956  002BBA  6E10               	movwf	(___fldiv@b+1)^0,c
 12957  002BBC  0E00               	movlw	0
 12958  002BBE  6E11               	movwf	(___fldiv@b+2)^0,c
 12959  002BC0  0E00               	movlw	0
 12960  002BC2  6E12               	movwf	(___fldiv@b+3)^0,c
 12961  002BC4  0E00               	movlw	0
 12962  002BC6  6E22               	movwf	___fldiv@grs^0,c
 12963  002BC8  0E00               	movlw	0
 12964  002BCA  6E23               	movwf	(___fldiv@grs+1)^0,c
 12965  002BCC  0E00               	movlw	0
 12966  002BCE  6E24               	movwf	(___fldiv@grs+2)^0,c
 12967  002BD0  0E00               	movlw	0
 12968  002BD2  6E25               	movwf	(___fldiv@grs+3)^0,c
 12969  002BD4  0E00               	movlw	0
 12970  002BD6  6E27               	movwf	___fldiv@aexp^0,c
 12971  002BD8  EF26  F016         	goto	l1224
 12972  002BDC                     l4592:
 12973  002BDC  5027               	movf	___fldiv@aexp^0,w,c
 12974  002BDE  B4D8               	btfsc	status,2,c
 12975  002BE0  EFF4  F015         	goto	u4941
 12976  002BE4  EFF6  F015         	goto	u4940
 12977  002BE8                     u4941:
 12978  002BE8  EF0D  F016         	goto	l4600
 12979  002BEC                     u4940:
 12980  002BEC  90D8               	bcf	status,0,c
 12981  002BEE  361B               	rlcf	___fldiv@rem^0,f,c
 12982  002BF0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 12983  002BF2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 12984  002BF4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 12985  002BF6  90D8               	bcf	status,0,c
 12986  002BF8  360F               	rlcf	___fldiv@b^0,f,c
 12987  002BFA  3610               	rlcf	(___fldiv@b+1)^0,f,c
 12988  002BFC  3611               	rlcf	(___fldiv@b+2)^0,f,c
 12989  002BFE  3612               	rlcf	(___fldiv@b+3)^0,f,c
 12990  002C00  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12991  002C02  EF05  F016         	goto	u4951
 12992  002C06  EF07  F016         	goto	u4950
 12993  002C0A                     u4951:
 12994  002C0A  EF08  F016         	goto	l1227
 12995  002C0E                     u4950:
 12996  002C0E  800F               	bsf	___fldiv@b^0,0,c
 12997  002C10                     l1227:
 12998  002C10  90D8               	bcf	status,0,c
 12999  002C12  3622               	rlcf	___fldiv@grs^0,f,c
 13000  002C14  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13001  002C16  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13002  002C18  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13003  002C1A                     l4600:
 13004  002C1A  5013               	movf	___fldiv@a^0,w,c
 13005  002C1C  5C1B               	subwf	___fldiv@rem^0,w,c
 13006  002C1E  5014               	movf	(___fldiv@a+1)^0,w,c
 13007  002C20  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13008  002C22  5015               	movf	(___fldiv@a+2)^0,w,c
 13009  002C24  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13010  002C26  5016               	movf	(___fldiv@a+3)^0,w,c
 13011  002C28  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13012  002C2A  A0D8               	btfss	status,0,c
 13013  002C2C  EF1A  F016         	goto	u4961
 13014  002C30  EF1C  F016         	goto	u4960
 13015  002C34                     u4961:
 13016  002C34  EF25  F016         	goto	l4606
 13017  002C38                     u4960:
 13018  002C38  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13019  002C3A  5013               	movf	___fldiv@a^0,w,c
 13020  002C3C  5E1B               	subwf	___fldiv@rem^0,f,c
 13021  002C3E  5014               	movf	(___fldiv@a+1)^0,w,c
 13022  002C40  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13023  002C42  5015               	movf	(___fldiv@a+2)^0,w,c
 13024  002C44  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13025  002C46  5016               	movf	(___fldiv@a+3)^0,w,c
 13026  002C48  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13027  002C4A                     l4606:
 13028  002C4A  2A27               	incf	___fldiv@aexp^0,f,c
 13029  002C4C                     l1224:
 13030  002C4C  0E19               	movlw	25
 13031  002C4E  6427               	cpfsgt	___fldiv@aexp^0,c
 13032  002C50  EF2C  F016         	goto	u4971
 13033  002C54  EF2E  F016         	goto	u4970
 13034  002C58                     u4971:
 13035  002C58  EFEE  F015         	goto	l4592
 13036  002C5C                     u4970:
 13037  002C5C  501B               	movf	___fldiv@rem^0,w,c
 13038  002C5E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13039  002C60  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13040  002C62  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13041  002C64  B4D8               	btfsc	status,2,c
 13042  002C66  EF37  F016         	goto	u4981
 13043  002C6A  EF39  F016         	goto	u4980
 13044  002C6E                     u4981:
 13045  002C6E  EF51  F016         	goto	l4618
 13046  002C72                     u4980:
 13047  002C72  8022               	bsf	___fldiv@grs^0,0,c
 13048  002C74  EF51  F016         	goto	l4618
 13049  002C78                     l4612:
 13050  002C78  90D8               	bcf	status,0,c
 13051  002C7A  360F               	rlcf	___fldiv@b^0,f,c
 13052  002C7C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13053  002C7E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13054  002C80  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13055  002C82  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13056  002C84  EF46  F016         	goto	u4991
 13057  002C88  EF48  F016         	goto	u4990
 13058  002C8C                     u4991:
 13059  002C8C  EF49  F016         	goto	l1233
 13060  002C90                     u4990:
 13061  002C90  800F               	bsf	___fldiv@b^0,0,c
 13062  002C92                     l1233:
 13063  002C92  90D8               	bcf	status,0,c
 13064  002C94  3622               	rlcf	___fldiv@grs^0,f,c
 13065  002C96  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13066  002C98  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13067  002C9A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13068  002C9C  0620               	decf	___fldiv@new_exp^0,f,c
 13069  002C9E  A0D8               	btfss	status,0,c
 13070  002CA0  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13071  002CA2                     l4618:
 13072  002CA2  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13073  002CA4  EF56  F016         	goto	u5001
 13074  002CA8  EF58  F016         	goto	u5000
 13075  002CAC                     u5001:
 13076  002CAC  EF3C  F016         	goto	l4612
 13077  002CB0                     u5000:
 13078  002CB0  0E00               	movlw	0
 13079  002CB2  6E27               	movwf	___fldiv@aexp^0,c
 13080  002CB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13081  002CB6  EF5F  F016         	goto	u5011
 13082  002CBA  EF61  F016         	goto	u5010
 13083  002CBE                     u5011:
 13084  002CBE  EF85  F016         	goto	l1235
 13085  002CC2                     u5010:
 13086  002CC2  0EFF               	movlw	255
 13087  002CC4  1422               	andwf	___fldiv@grs^0,w,c
 13088  002CC6  6E17               	movwf	??___fldiv^0,c
 13089  002CC8  0EFF               	movlw	255
 13090  002CCA  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13091  002CCC  6E18               	movwf	(??___fldiv+1)^0,c
 13092  002CCE  0EFF               	movlw	255
 13093  002CD0  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13094  002CD2  6E19               	movwf	(??___fldiv+2)^0,c
 13095  002CD4  0E7F               	movlw	127
 13096  002CD6  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13097  002CD8  6E1A               	movwf	(??___fldiv+3)^0,c
 13098  002CDA  5017               	movf	??___fldiv^0,w,c
 13099  002CDC  1018               	iorwf	(??___fldiv+1)^0,w,c
 13100  002CDE  1019               	iorwf	(??___fldiv+2)^0,w,c
 13101  002CE0  101A               	iorwf	(??___fldiv+3)^0,w,c
 13102  002CE2  B4D8               	btfsc	status,2,c
 13103  002CE4  EF76  F016         	goto	u5021
 13104  002CE8  EF78  F016         	goto	u5020
 13105  002CEC                     u5021:
 13106  002CEC  EF7C  F016         	goto	l1236
 13107  002CF0                     u5020:
 13108  002CF0                     l4626:
 13109  002CF0  0E01               	movlw	1
 13110  002CF2  6E27               	movwf	___fldiv@aexp^0,c
 13111  002CF4  EF85  F016         	goto	l1235
 13112  002CF8                     l1236:
 13113  002CF8  A00F               	btfss	___fldiv@b^0,0,c
 13114  002CFA  EF81  F016         	goto	u5031
 13115  002CFE  EF83  F016         	goto	u5030
 13116  002D02                     u5031:
 13117  002D02  EF85  F016         	goto	l1235
 13118  002D06                     u5030:
 13119  002D06  EF78  F016         	goto	l4626
 13120  002D0A                     l1235:
 13121  002D0A  5027               	movf	___fldiv@aexp^0,w,c
 13122  002D0C  B4D8               	btfsc	status,2,c
 13123  002D0E  EF8B  F016         	goto	u5041
 13124  002D12  EF8D  F016         	goto	u5040
 13125  002D16                     u5041:
 13126  002D16  EFB1  F016         	goto	l4638
 13127  002D1A                     u5040:
 13128  002D1A  0E01               	movlw	1
 13129  002D1C  260F               	addwf	___fldiv@b^0,f,c
 13130  002D1E  0E00               	movlw	0
 13131  002D20  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13132  002D22  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13133  002D24  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13134  002D26  A012               	btfss	(___fldiv@b+3)^0,0,c
 13135  002D28  EF98  F016         	goto	u5051
 13136  002D2C  EF9A  F016         	goto	u5050
 13137  002D30                     u5051:
 13138  002D30  EFB1  F016         	goto	l4638
 13139  002D34                     u5050:
 13140  002D34  C00F  F017         	movff	___fldiv@b,??___fldiv
 13141  002D38  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13142  002D3C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13143  002D40  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13144  002D44  341A               	rlcf	(??___fldiv+3)^0,w,c
 13145  002D46  321A               	rrcf	(??___fldiv+3)^0,f,c
 13146  002D48  3219               	rrcf	(??___fldiv+2)^0,f,c
 13147  002D4A  3218               	rrcf	(??___fldiv+1)^0,f,c
 13148  002D4C  3217               	rrcf	??___fldiv^0,f,c
 13149  002D4E  C017  F00F         	movff	??___fldiv,___fldiv@b
 13150  002D52  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13151  002D56  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13152  002D5A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13153  002D5E  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13154  002D60  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13155  002D62                     l4638:
 13156  002D62  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13157  002D64  EFBC  F016         	goto	u5061
 13158  002D68  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13159  002D6A  E108               	bnz	u5060
 13160  002D6C  2820               	incf	___fldiv@new_exp^0,w,c
 13161  002D6E  A0D8               	btfss	status,0,c
 13162  002D70  EFBC  F016         	goto	u5061
 13163  002D74  EFBE  F016         	goto	u5060
 13164  002D78                     u5061:
 13165  002D78  EFC9  F016         	goto	l4642
 13166  002D7C                     u5060:
 13167  002D7C  0E00               	movlw	0
 13168  002D7E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13169  002D80  6820               	setf	___fldiv@new_exp^0,c
 13170  002D82  0E00               	movlw	0
 13171  002D84  6E0F               	movwf	___fldiv@b^0,c
 13172  002D86  0E00               	movlw	0
 13173  002D88  6E10               	movwf	(___fldiv@b+1)^0,c
 13174  002D8A  0E00               	movlw	0
 13175  002D8C  6E11               	movwf	(___fldiv@b+2)^0,c
 13176  002D8E  0E00               	movlw	0
 13177  002D90  6E12               	movwf	(___fldiv@b+3)^0,c
 13178  002D92                     l4642:
 13179  002D92  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13180  002D94  EFD6  F016         	goto	u5070
 13181  002D98  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13182  002D9A  E106               	bnz	u5071
 13183  002D9C  0420               	decf	___fldiv@new_exp^0,w,c
 13184  002D9E  B0D8               	btfsc	status,0,c
 13185  002DA0  EFD4  F016         	goto	u5071
 13186  002DA4  EFD6  F016         	goto	u5070
 13187  002DA8                     u5071:
 13188  002DA8  EFE4  F016         	goto	l4646
 13189  002DAC                     u5070:
 13190  002DAC  0E00               	movlw	0
 13191  002DAE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13192  002DB0  0E00               	movlw	0
 13193  002DB2  6E20               	movwf	___fldiv@new_exp^0,c
 13194  002DB4  0E00               	movlw	0
 13195  002DB6  6E0F               	movwf	___fldiv@b^0,c
 13196  002DB8  0E00               	movlw	0
 13197  002DBA  6E10               	movwf	(___fldiv@b+1)^0,c
 13198  002DBC  0E00               	movlw	0
 13199  002DBE  6E11               	movwf	(___fldiv@b+2)^0,c
 13200  002DC0  0E00               	movlw	0
 13201  002DC2  6E12               	movwf	(___fldiv@b+3)^0,c
 13202  002DC4  0E00               	movlw	0
 13203  002DC6  6E1F               	movwf	___fldiv@sign^0,c
 13204  002DC8                     l4646:
 13205  002DC8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13206  002DCC  A026               	btfss	___fldiv@bexp^0,0,c
 13207  002DCE  EFEB  F016         	goto	u5081
 13208  002DD2  EFED  F016         	goto	u5080
 13209  002DD6                     u5081:
 13210  002DD6  EFF0  F016         	goto	l4652
 13211  002DDA                     u5080:
 13212  002DDA  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13213  002DDC  EFF1  F016         	goto	l4654
 13214  002DE0                     l4652:
 13215  002DE0  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13216  002DE2                     l4654:
 13217  002DE2  90D8               	bcf	status,0,c
 13218  002DE4  3026               	rrcf	___fldiv@bexp^0,w,c
 13219  002DE6  6E12               	movwf	(___fldiv@b+3)^0,c
 13220  002DE8  EFA7  F015         	goto	l4568
 13221  002DEC                     l1222:
 13222  002DEC  0012               	return		;funcret
 13223  002DEE                     __end_of___fldiv:
 13224                           	callstack 0
 13225                           
 13226 ;; *************** function _LED_C *****************
 13227 ;; Defined at:
 13228 ;;		line 193 in file "color.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;		None
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      void 
 13235 ;; Registers used:
 13236 ;;		wreg
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13246 ;;Total ram usage:        2 bytes
 13247 ;; Hardware stack levels used: 1
 13248 ;; Hardware stack levels required when called: 1
 13249 ;; This function calls:
 13250 ;;		Nothing
 13251 ;; This function is called by:
 13252 ;;		_calibrate_white
 13253 ;;		_amb_light_measure
 13254 ;;		_distance_measure
 13255 ;;		_color_data_collection
 13256 ;;		_test_function
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text60
 13261  005CC4                     __ptext60:
 13262                           	callstack 0
 13263  005CC4                     _LED_C:
 13264                           	callstack 27
 13265  005CC4                     
 13266                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13267  005CC4  827F               	bsf	127,1,c	;volatile
 13268                           
 13269                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13270  005CC6  8E7E               	bsf	126,7,c	;volatile
 13271                           
 13272                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13273  005CC8  8879               	bsf	121,4,c	;volatile
 13274  005CCA                     
 13275                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13276  005CCA  0E11               	movlw	17
 13277  005CCC  6E02               	movwf	(??_LED_C+1)^0,c
 13278  005CCE  0E3C               	movlw	60
 13279  005CD0  6E01               	movwf	??_LED_C^0,c
 13280  005CD2  0ECB               	movlw	203
 13281  005CD4                     u6527:
 13282  005CD4  2EE8               	decfsz	wreg,f,c
 13283  005CD6  D7FE               	bra	u6527
 13284  005CD8  2E01               	decfsz	??_LED_C^0,f,c
 13285  005CDA  D7FC               	bra	u6527
 13286  005CDC  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13287  005CDE  D7FA               	bra	u6527
 13288  005CE0  F000               	nop	
 13289  005CE2  0012               	return		;funcret
 13290  005CE4                     __end_of_LED_C:
 13291                           	callstack 0
 13292                           
 13293 ;; *************** function _pin_init *****************
 13294 ;; Defined at:
 13295 ;;		line 13 in file "color.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;		None
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;		None
 13300 ;; Return value:  Size  Location     Type
 13301 ;;                  1    wreg      void 
 13302 ;; Registers used:
 13303 ;;		None
 13304 ;; Tracked objects:
 13305 ;;		On entry : 0/0
 13306 ;;		On exit  : 0/0
 13307 ;;		Unchanged: 0/0
 13308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13313 ;;Total ram usage:        0 bytes
 13314 ;; Hardware stack levels used: 1
 13315 ;; Hardware stack levels required when called: 1
 13316 ;; This function calls:
 13317 ;;		Nothing
 13318 ;; This function is called by:
 13319 ;;		_main
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323                           	psect	text61
 13324  005B06                     __ptext61:
 13325                           	callstack 0
 13326  005B06                     _pin_init:
 13327                           	callstack 29
 13328  005B06  8486               	bsf	134,2,c	;volatile
 13329                           
 13330                           ;color.c: 15:     ANSELFbits.ANSELF2=0;
 13331  005B08  010E               	movlb	14	; () banked
 13332  005B0A  95B4               	bcf	180,2,b	;volatile
 13333                           
 13334                           ;color.c: 16:     TRISFbits.TRISF3=1;
 13335  005B0C  8686               	bsf	134,3,c	;volatile
 13336                           
 13337                           ;color.c: 17:     ANSELFbits.ANSELF3=0;
 13338  005B0E  97B4               	bcf	180,3,b	;volatile
 13339                           
 13340                           ;color.c: 19:     TRISGbits.TRISG1 = 0;
 13341  005B10  9287               	bcf	135,1,c	;volatile
 13342                           
 13343                           ;color.c: 20:     TRISFbits.TRISF7 = 0;
 13344  005B12  9E86               	bcf	134,7,c	;volatile
 13345                           
 13346                           ;color.c: 21:     TRISAbits.TRISA4 = 0;
 13347  005B14  9881               	bcf	129,4,c	;volatile
 13348                           
 13349                           ;color.c: 23:     LATGbits.LATG1 = 1;
 13350  005B16  827F               	bsf	127,1,c	;volatile
 13351                           
 13352                           ;color.c: 24:     LATFbits.LATF7 = 1;
 13353  005B18  8E7E               	bsf	126,7,c	;volatile
 13354                           
 13355                           ;color.c: 25:     LATAbits.LATA4 = 1;
 13356  005B1A  8879               	bsf	121,4,c	;volatile
 13357                           
 13358                           ;color.c: 28:     TRISDbits.TRISD7 = 0;
 13359  005B1C  9E84               	bcf	132,7,c	;volatile
 13360                           
 13361                           ;color.c: 29:     LATDbits.LATD7 = 0;
 13362  005B1E  9E7C               	bcf	124,7,c	;volatile
 13363                           
 13364                           ;color.c: 30:     TRISHbits.TRISH3 = 0;
 13365  005B20  9688               	bcf	136,3,c	;volatile
 13366                           
 13367                           ;color.c: 31:     LATHbits.LATH3 = 0;
 13368  005B22  9680               	bcf	128,3,c	;volatile
 13369                           
 13370                           ;color.c: 34:     TRISHbits.TRISH1=0;
 13371  005B24  9288               	bcf	136,1,c	;volatile
 13372                           
 13373                           ;color.c: 35:     TRISDbits.TRISD4=0;
 13374  005B26  9884               	bcf	132,4,c	;volatile
 13375                           
 13376                           ;color.c: 36:     TRISDbits.TRISD3=0;
 13377  005B28  9684               	bcf	132,3,c	;volatile
 13378                           
 13379                           ;color.c: 37:     TRISFbits.TRISF0=0;
 13380  005B2A  9086               	bcf	134,0,c	;volatile
 13381                           
 13382                           ;color.c: 38:     TRISHbits.TRISH0=0;
 13383  005B2C  9088               	bcf	136,0,c	;volatile
 13384                           
 13385                           ;color.c: 40:     LATHbits.LATH1 = 0;
 13386  005B2E  9280               	bcf	128,1,c	;volatile
 13387                           
 13388                           ;color.c: 41:     LATDbits.LATD4 = 0;
 13389  005B30  987C               	bcf	124,4,c	;volatile
 13390                           
 13391                           ;color.c: 42:     LATDbits.LATD3 = 0;
 13392  005B32  967C               	bcf	124,3,c	;volatile
 13393                           
 13394                           ;color.c: 43:     LATFbits.LATF0 = 0;
 13395  005B34  907E               	bcf	126,0,c	;volatile
 13396                           
 13397                           ;color.c: 44:     LATHbits.LATH0 = 0;
 13398  005B36  9080               	bcf	128,0,c	;volatile
 13399  005B38                     
 13400                           ; BSR set to: 14
 13401  005B38  0012               	return		;funcret
 13402  005B3A                     __end_of_pin_init:
 13403                           	callstack 0
 13404                           
 13405 ;; *************** function _initUSART4 *****************
 13406 ;; Defined at:
 13407 ;;		line 4 in file "serial.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;		None
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg, status,2
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used: 1
 13427 ;; Hardware stack levels required when called: 1
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_main
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text62
 13436  005D04                     __ptext62:
 13437                           	callstack 0
 13438  005D04                     _initUSART4:
 13439                           	callstack 29
 13440  005D04                     
 13441                           ;serial.c: 8:     RC0PPS = 0x12;
 13442  005D04  0E12               	movlw	18
 13443  005D06  010E               	movlb	14	; () banked
 13444  005D08  6F62               	movwf	98,b	;volatile
 13445                           
 13446                           ;serial.c: 9:     RX4PPS = 0x11;
 13447  005D0A  0E11               	movlw	17
 13448  005D0C  6F15               	movwf	21,b	;volatile
 13449  005D0E                     
 13450                           ; BSR set to: 14
 13451                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13452  005D0E  97E9               	bcf	233,3,b	;volatile
 13453  005D10                     
 13454                           ; BSR set to: 14
 13455                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13456  005D10  95E8               	bcf	232,2,b	;volatile
 13457                           
 13458                           ;serial.c: 13:     SP4BRGL = 51;
 13459  005D12  0E33               	movlw	51
 13460  005D14  6FE5               	movwf	229,b	;volatile
 13461                           
 13462                           ;serial.c: 15:     SP4BRGH = 0;
 13463  005D16  0E00               	movlw	0
 13464  005D18  6FE6               	movwf	230,b	;volatile
 13465  005D1A                     
 13466                           ; BSR set to: 14
 13467                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13468  005D1A  89E7               	bsf	231,4,b	;volatile
 13469  005D1C                     
 13470                           ; BSR set to: 14
 13471                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13472  005D1C  8BE8               	bsf	232,5,b	;volatile
 13473  005D1E                     
 13474                           ; BSR set to: 14
 13475                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13476  005D1E  8FE7               	bsf	231,7,b	;volatile
 13477  005D20                     
 13478                           ; BSR set to: 14
 13479  005D20  0012               	return		;funcret
 13480  005D22                     __end_of_initUSART4:
 13481                           	callstack 0
 13482                           
 13483 ;; *************** function _initDCmotors_parameter *****************
 13484 ;; Defined at:
 13485 ;;		line 41 in file "dc_motor.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13488 ;;		 -> main@motorL(9), 
 13489 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13490 ;;		 -> main@motorR(9), 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;		None
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13506 ;;Total ram usage:        4 bytes
 13507 ;; Hardware stack levels used: 1
 13508 ;; Hardware stack levels required when called: 1
 13509 ;; This function calls:
 13510 ;;		Nothing
 13511 ;; This function is called by:
 13512 ;;		_main
 13513 ;; This function uses a non-reentrant model
 13514 ;;
 13515                           
 13516                           	psect	text63
 13517  004FA8                     __ptext63:
 13518                           	callstack 0
 13519  004FA8                     _initDCmotors_parameter:
 13520                           	callstack 29
 13521  004FA8                     
 13522                           ;dc_motor.c: 43:     motorL->power = 0;
 13523  004FA8  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13524  004FAC  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13525  004FB0  0E00               	movlw	0
 13526  004FB2  6EDF               	movwf	indf2,c
 13527  004FB4                     
 13528                           ;dc_motor.c: 44:     motorL->direction = 1;
 13529  004FB4  EE20 F001          	lfsr	2,1
 13530  004FB8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13531  004FBA  26D9               	addwf	fsr2l,f,c
 13532  004FBC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13533  004FBE  22DA               	addwfc	fsr2h,f,c
 13534  004FC0  0E01               	movlw	1
 13535  004FC2  6EDF               	movwf	indf2,c
 13536  004FC4                     
 13537                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13538  004FC4  EE20 F002          	lfsr	2,2
 13539  004FC8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13540  004FCA  26D9               	addwf	fsr2l,f,c
 13541  004FCC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13542  004FCE  22DA               	addwfc	fsr2h,f,c
 13543  004FD0  0EA3               	movlw	163
 13544  004FD2  6EDE               	movwf	postinc2,c
 13545  004FD4  0E0F               	movlw	15
 13546  004FD6  6EDD               	movwf	postdec2,c
 13547  004FD8                     
 13548                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13549  004FD8  EE20 F004          	lfsr	2,4
 13550  004FDC  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13551  004FDE  26D9               	addwf	fsr2l,f,c
 13552  004FE0  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13553  004FE2  22DA               	addwfc	fsr2h,f,c
 13554  004FE4  0E7D               	movlw	125
 13555  004FE6  6EDE               	movwf	postinc2,c
 13556  004FE8  0E0F               	movlw	15
 13557  004FEA  6EDD               	movwf	postdec2,c
 13558  004FEC                     
 13559                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
 13560  004FEC  EE20 F006          	lfsr	2,6
 13561  004FF0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13562  004FF2  26D9               	addwf	fsr2l,f,c
 13563  004FF4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13564  004FF6  22DA               	addwfc	fsr2h,f,c
 13565  004FF8  0E04               	movlw	4
 13566  004FFA  6EDF               	movwf	indf2,c
 13567  004FFC                     
 13568                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
 13569  004FFC  EE20 F007          	lfsr	2,7
 13570  005000  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13571  005002  26D9               	addwf	fsr2l,f,c
 13572  005004  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13573  005006  22DA               	addwfc	fsr2h,f,c
 13574  005008  0EC7               	movlw	199
 13575  00500A  6EDE               	movwf	postinc2,c
 13576  00500C  0E00               	movlw	0
 13577  00500E  6EDD               	movwf	postdec2,c
 13578  005010                     
 13579                           ;dc_motor.c: 51:     motorR->power = 0;
 13580  005010  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13581  005014  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13582  005018  0E00               	movlw	0
 13583  00501A  6EDF               	movwf	indf2,c
 13584                           
 13585                           ;dc_motor.c: 52:     motorR->direction = 1;
 13586  00501C  EE20 F001          	lfsr	2,1
 13587  005020  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13588  005022  26D9               	addwf	fsr2l,f,c
 13589  005024  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13590  005026  22DA               	addwfc	fsr2h,f,c
 13591  005028  0E01               	movlw	1
 13592  00502A  6EDF               	movwf	indf2,c
 13593                           
 13594                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13595  00502C  EE20 F002          	lfsr	2,2
 13596  005030  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13597  005032  26D9               	addwf	fsr2l,f,c
 13598  005034  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13599  005036  22DA               	addwfc	fsr2h,f,c
 13600  005038  0EA0               	movlw	160
 13601  00503A  6EDE               	movwf	postinc2,c
 13602  00503C  0E0F               	movlw	15
 13603  00503E  6EDD               	movwf	postdec2,c
 13604                           
 13605                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13606  005040  EE20 F004          	lfsr	2,4
 13607  005044  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13608  005046  26D9               	addwf	fsr2l,f,c
 13609  005048  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13610  00504A  22DA               	addwfc	fsr2h,f,c
 13611  00504C  0E7F               	movlw	127
 13612  00504E  6EDE               	movwf	postinc2,c
 13613  005050  0E0F               	movlw	15
 13614  005052  6EDD               	movwf	postdec2,c
 13615                           
 13616                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
 13617  005054  EE20 F006          	lfsr	2,6
 13618  005058  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13619  00505A  26D9               	addwf	fsr2l,f,c
 13620  00505C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13621  00505E  22DA               	addwfc	fsr2h,f,c
 13622  005060  0E06               	movlw	6
 13623  005062  6EDF               	movwf	indf2,c
 13624                           
 13625                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
 13626  005064  EE20 F007          	lfsr	2,7
 13627  005068  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13628  00506A  26D9               	addwf	fsr2l,f,c
 13629  00506C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13630  00506E  22DA               	addwfc	fsr2h,f,c
 13631  005070  0EC7               	movlw	199
 13632  005072  6EDE               	movwf	postinc2,c
 13633  005074  0E00               	movlw	0
 13634  005076  6EDD               	movwf	postdec2,c
 13635  005078  0012               	return		;funcret
 13636  00507A                     __end_of_initDCmotors_parameter:
 13637                           	callstack 0
 13638                           
 13639 ;; *************** function _initDCmotorsPWM *****************
 13640 ;; Defined at:
 13641 ;;		line 11 in file "dc_motor.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;  PWMperiod       2    0[COMRAM] int 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;		None
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		wreg, status,2
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13659 ;;Total ram usage:        2 bytes
 13660 ;; Hardware stack levels used: 1
 13661 ;; Hardware stack levels required when called: 1
 13662 ;; This function calls:
 13663 ;;		Nothing
 13664 ;; This function is called by:
 13665 ;;		_main
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text64
 13670  005962                     __ptext64:
 13671                           	callstack 0
 13672  005962                     _initDCmotorsPWM:
 13673                           	callstack 29
 13674  005962                     
 13675                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
 13676  005962  9485               	bcf	133,2,c	;volatile
 13677                           
 13678                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
 13679  005964  9E83               	bcf	131,7,c	;volatile
 13680                           
 13681                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
 13682  005966  9C87               	bcf	135,6,c	;volatile
 13683                           
 13684                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
 13685  005968  9885               	bcf	133,4,c	;volatile
 13686                           
 13687                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
 13688  00596A  947D               	bcf	125,2,c	;volatile
 13689                           
 13690                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
 13691  00596C  9E7B               	bcf	123,7,c	;volatile
 13692                           
 13693                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
 13694  00596E  9C7F               	bcf	127,6,c	;volatile
 13695                           
 13696                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
 13697  005970  987D               	bcf	125,4,c	;volatile
 13698  005972                     
 13699                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
 13700  005972  50BD               	movf	189,w,c	;volatile
 13701  005974  0B8F               	andlw	-113
 13702  005976  0930               	iorlw	48
 13703  005978  6EBD               	movwf	189,c	;volatile
 13704                           
 13705                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
 13706  00597A  0EE0               	movlw	-32
 13707  00597C  16BE               	andwf	190,f,c	;volatile
 13708                           
 13709                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
 13710  00597E  50BF               	movf	191,w,c	;volatile
 13711  005980  0BF0               	andlw	-16
 13712  005982  0901               	iorlw	1
 13713  005984  6EBF               	movwf	191,c	;volatile
 13714                           
 13715                           ;dc_motor.c: 29:     T2PR=200-1;
 13716  005986  0EC7               	movlw	199
 13717  005988  6EBC               	movwf	188,c	;volatile
 13718  00598A                     
 13719                           ;dc_motor.c: 30:     T2CONbits.ON=1;
 13720  00598A  8EBD               	bsf	189,7,c	;volatile
 13721                           
 13722                           ;dc_motor.c: 32:     RE2PPS=0x0A;
 13723  00598C  0E0A               	movlw	10
 13724  00598E  010E               	movlb	14	; () banked
 13725  005990  6F74               	movwf	116,b	;volatile
 13726                           
 13727                           ;dc_motor.c: 33:     RC7PPS=0x0B;
 13728  005992  0E0B               	movlw	11
 13729  005994  6F69               	movwf	105,b	;volatile
 13730                           
 13731                           ;dc_motor.c: 35:     PWM6DCH=0;
 13732  005996  0E00               	movlw	0
 13733  005998  6EA3               	movwf	163,c	;volatile
 13734                           
 13735                           ;dc_motor.c: 36:     PWM7DCH=0;
 13736  00599A  0E00               	movlw	0
 13737  00599C  6EA0               	movwf	160,c	;volatile
 13738  00599E                     
 13739                           ; BSR set to: 14
 13740                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
 13741  00599E  8EA4               	bsf	164,7,c	;volatile
 13742  0059A0                     
 13743                           ; BSR set to: 14
 13744                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
 13745  0059A0  8EA1               	bsf	161,7,c	;volatile
 13746  0059A2                     
 13747                           ; BSR set to: 14
 13748  0059A2  0012               	return		;funcret
 13749  0059A4                     __end_of_initDCmotorsPWM:
 13750                           	callstack 0
 13751                           
 13752 ;; *************** function _color_click_init *****************
 13753 ;; Defined at:
 13754 ;;		line 87 in file "color.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;		None
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;		None
 13759 ;; Return value:  Size  Location     Type
 13760 ;;                  1    wreg      void 
 13761 ;; Registers used:
 13762 ;;		wreg, status,2, status,0, cstack
 13763 ;; Tracked objects:
 13764 ;;		On entry : 0/0
 13765 ;;		On exit  : 0/0
 13766 ;;		Unchanged: 0/0
 13767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13772 ;;Total ram usage:        1 bytes
 13773 ;; Hardware stack levels used: 1
 13774 ;; Hardware stack levels required when called: 4
 13775 ;; This function calls:
 13776 ;;		_I2C_2_Master_Init
 13777 ;;		_color_writetoaddr
 13778 ;; This function is called by:
 13779 ;;		_main
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text65
 13784  005B3A                     __ptext65:
 13785                           	callstack 0
 13786  005B3A                     _color_click_init:
 13787                           	callstack 26
 13788  005B3A                     
 13789                           ;color.c: 90:     I2C_2_Master_Init();
 13790  005B3A  ECE6  F02D         	call	_I2C_2_Master_Init	;wreg free
 13791  005B3E                     
 13792                           ;color.c: 93:  color_writetoaddr(0x00, 0x01);
 13793  005B3E  0E01               	movlw	1
 13794  005B40  6E03               	movwf	color_writetoaddr@value^0,c
 13795  005B42  0E00               	movlw	0
 13796  005B44  EC72  F02E         	call	_color_writetoaddr
 13797  005B48                     
 13798                           ;color.c: 94:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13799  005B48  0E3F               	movlw	63
 13800  005B4A  6E05               	movwf	??_color_click_init^0,c
 13801  005B4C  0E55               	movlw	85
 13802  005B4E                     u6537:
 13803  005B4E  2EE8               	decfsz	wreg,f,c
 13804  005B50  D7FE               	bra	u6537
 13805  005B52  2E05               	decfsz	??_color_click_init^0,f,c
 13806  005B54  D7FC               	bra	u6537
 13807  005B56  F000               	nop	
 13808  005B58                     
 13809                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 13810  005B58  0E03               	movlw	3
 13811  005B5A  6E03               	movwf	color_writetoaddr@value^0,c
 13812  005B5C  0E00               	movlw	0
 13813  005B5E  EC72  F02E         	call	_color_writetoaddr
 13814  005B62                     
 13815                           ;color.c: 100:  color_writetoaddr(0x01, 0xD5);
 13816  005B62  0ED5               	movlw	213
 13817  005B64  6E03               	movwf	color_writetoaddr@value^0,c
 13818  005B66  0E01               	movlw	1
 13819  005B68  EC72  F02E         	call	_color_writetoaddr
 13820  005B6C  0012               	return		;funcret
 13821  005B6E                     __end_of_color_click_init:
 13822                           	callstack 0
 13823                           
 13824 ;; *************** function _color_writetoaddr *****************
 13825 ;; Defined at:
 13826 ;;		line 103 in file "color.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;  address         1    wreg     unsigned char 
 13829 ;;  value           1    2[COMRAM] unsigned char 
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  address         1    3[COMRAM] unsigned char 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  1    wreg      void 
 13834 ;; Registers used:
 13835 ;;		wreg, status,2, status,0, cstack
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13845 ;;Total ram usage:        2 bytes
 13846 ;; Hardware stack levels used: 1
 13847 ;; Hardware stack levels required when called: 3
 13848 ;; This function calls:
 13849 ;;		_I2C_2_Master_Start
 13850 ;;		_I2C_2_Master_Stop
 13851 ;;		_I2C_2_Master_Write
 13852 ;; This function is called by:
 13853 ;;		_color_click_init
 13854 ;; This function uses a non-reentrant model
 13855 ;;
 13856                           
 13857                           	psect	text66
 13858  005CE4                     __ptext66:
 13859                           	callstack 0
 13860  005CE4                     _color_writetoaddr:
 13861                           	callstack 26
 13862                           
 13863                           ;incstack = 0
 13864                           ;color_writetoaddr@address stored from wreg
 13865  005CE4  6E04               	movwf	color_writetoaddr@address^0,c
 13866  005CE6                     
 13867                           ;color.c: 104:     I2C_2_Master_Start();
 13868  005CE6  ECC2  F02E         	call	_I2C_2_Master_Start	;wreg free
 13869                           
 13870                           ;color.c: 105:     I2C_2_Master_Write(0x52 | 0x00);
 13871  005CEA  0E52               	movlw	82
 13872  005CEC  ECAC  F02E         	call	_I2C_2_Master_Write
 13873                           
 13874                           ;color.c: 106:     I2C_2_Master_Write(0x80 | address);
 13875  005CF0  5004               	movf	color_writetoaddr@address^0,w,c
 13876  005CF2  0980               	iorlw	128
 13877  005CF4  ECAC  F02E         	call	_I2C_2_Master_Write
 13878                           
 13879                           ;color.c: 107:     I2C_2_Master_Write(value);
 13880  005CF8  5003               	movf	color_writetoaddr@value^0,w,c
 13881  005CFA  ECAC  F02E         	call	_I2C_2_Master_Write
 13882                           
 13883                           ;color.c: 108:     I2C_2_Master_Stop();
 13884  005CFE  ECBD  F02E         	call	_I2C_2_Master_Stop	;wreg free
 13885  005D02  0012               	return		;funcret
 13886  005D04                     __end_of_color_writetoaddr:
 13887                           	callstack 0
 13888                           
 13889 ;; *************** function _I2C_2_Master_Write *****************
 13890 ;; Defined at:
 13891 ;;		line 45 in file "i2c.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;  data_byte       1    wreg     unsigned char 
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;  data_byte       1    1[COMRAM] unsigned char 
 13896 ;; Return value:  Size  Location     Type
 13897 ;;                  1    wreg      void 
 13898 ;; Registers used:
 13899 ;;		wreg, status,2, status,0, cstack
 13900 ;; Tracked objects:
 13901 ;;		On entry : 0/0
 13902 ;;		On exit  : 0/0
 13903 ;;		Unchanged: 0/0
 13904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13909 ;;Total ram usage:        1 bytes
 13910 ;; Hardware stack levels used: 1
 13911 ;; Hardware stack levels required when called: 2
 13912 ;; This function calls:
 13913 ;;		_I2C_2_Master_Idle
 13914 ;; This function is called by:
 13915 ;;		_color_writetoaddr
 13916 ;;		_color_read_Red
 13917 ;;		_color_read_Blue
 13918 ;;		_color_read_Green
 13919 ;;		_color_read_Clear
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text67
 13924  005D58                     __ptext67:
 13925                           	callstack 0
 13926  005D58                     _I2C_2_Master_Write:
 13927                           	callstack 24
 13928                           
 13929                           ;incstack = 0
 13930                           ;I2C_2_Master_Write@data_byte stored from wreg
 13931  005D58  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13932  005D5A                     
 13933                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 13934  005D5A  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13935  005D5E                     
 13936                           ;i2c.c: 48:   SSP2BUF = data_byte;
 13937  005D5E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13938  005D62  0012               	return		;funcret
 13939  005D64                     __end_of_I2C_2_Master_Write:
 13940                           	callstack 0
 13941                           
 13942 ;; *************** function _I2C_2_Master_Stop *****************
 13943 ;; Defined at:
 13944 ;;		line 39 in file "i2c.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;		None
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;		None
 13949 ;; Return value:  Size  Location     Type
 13950 ;;                  1    wreg      void 
 13951 ;; Registers used:
 13952 ;;		wreg, status,2, status,0, cstack
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/0
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;Total ram usage:        0 bytes
 13963 ;; Hardware stack levels used: 1
 13964 ;; Hardware stack levels required when called: 2
 13965 ;; This function calls:
 13966 ;;		_I2C_2_Master_Idle
 13967 ;; This function is called by:
 13968 ;;		_color_writetoaddr
 13969 ;;		_color_read_Red
 13970 ;;		_color_read_Blue
 13971 ;;		_color_read_Green
 13972 ;;		_color_read_Clear
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           	psect	text68
 13977  005D7A                     __ptext68:
 13978                           	callstack 0
 13979  005D7A                     _I2C_2_Master_Stop:
 13980                           	callstack 24
 13981  005D7A                     
 13982                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13983  005D7A  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13984  005D7E                     
 13985                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 13986  005D7E  010E               	movlb	14	; () banked
 13987  005D80  85DA               	bsf	218,2,b	;volatile
 13988  005D82                     
 13989                           ; BSR set to: 14
 13990  005D82  0012               	return		;funcret
 13991  005D84                     __end_of_I2C_2_Master_Stop:
 13992                           	callstack 0
 13993                           
 13994 ;; *************** function _I2C_2_Master_Start *****************
 13995 ;; Defined at:
 13996 ;;		line 27 in file "i2c.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      void 
 14003 ;; Registers used:
 14004 ;;		wreg, status,2, status,0, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used: 1
 14016 ;; Hardware stack levels required when called: 2
 14017 ;; This function calls:
 14018 ;;		_I2C_2_Master_Idle
 14019 ;; This function is called by:
 14020 ;;		_color_writetoaddr
 14021 ;;		_color_read_Red
 14022 ;;		_color_read_Blue
 14023 ;;		_color_read_Green
 14024 ;;		_color_read_Clear
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text69
 14029  005D84                     __ptext69:
 14030                           	callstack 0
 14031  005D84                     _I2C_2_Master_Start:
 14032                           	callstack 24
 14033  005D84                     
 14034                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14035  005D84  ECFB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 14036  005D88                     
 14037                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14038  005D88  010E               	movlb	14	; () banked
 14039  005D8A  81DA               	bsf	218,0,b	;volatile
 14040  005D8C                     
 14041                           ; BSR set to: 14
 14042  005D8C  0012               	return		;funcret
 14043  005D8E                     __end_of_I2C_2_Master_Start:
 14044                           	callstack 0
 14045                           
 14046 ;; *************** function _I2C_2_Master_Idle *****************
 14047 ;; Defined at:
 14048 ;;		line 22 in file "i2c.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      void 
 14055 ;; Registers used:
 14056 ;;		wreg, status,2, status,0
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14066 ;;Total ram usage:        1 bytes
 14067 ;; Hardware stack levels used: 1
 14068 ;; Hardware stack levels required when called: 1
 14069 ;; This function calls:
 14070 ;;		Nothing
 14071 ;; This function is called by:
 14072 ;;		_I2C_2_Master_Start
 14073 ;;		_I2C_2_Master_RepStart
 14074 ;;		_I2C_2_Master_Stop
 14075 ;;		_I2C_2_Master_Write
 14076 ;;		_I2C_2_Master_Read
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text70
 14081  005BF6                     __ptext70:
 14082                           	callstack 0
 14083  005BF6                     _I2C_2_Master_Idle:
 14084                           	callstack 24
 14085  005BF6                     l179:
 14086  005BF6  010E               	movlb	14	; () banked
 14087  005BF8  B5D8               	btfsc	216,2,b	;volatile
 14088  005BFA  EF01  F02E         	goto	u3411
 14089  005BFE  EF03  F02E         	goto	u3410
 14090  005C02                     u3411:
 14091  005C02  EFFB  F02D         	goto	l179
 14092  005C06                     u3410:
 14093  005C06                     
 14094                           ; BSR set to: 14
 14095  005C06  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14096  005C0A  0E1F               	movlw	31
 14097  005C0C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14098  005C0E  A4D8               	btfss	status,2,c
 14099  005C10  EF0C  F02E         	goto	u3421
 14100  005C14  EF0E  F02E         	goto	u3420
 14101  005C18                     u3421:
 14102  005C18  EFFB  F02D         	goto	l179
 14103  005C1C                     u3420:
 14104  005C1C                     
 14105                           ; BSR set to: 14
 14106  005C1C  0012               	return		;funcret
 14107  005C1E                     __end_of_I2C_2_Master_Idle:
 14108                           	callstack 0
 14109                           
 14110 ;; *************** function _I2C_2_Master_Init *****************
 14111 ;; Defined at:
 14112 ;;		line 4 in file "i2c.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;		None
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;		None
 14117 ;; Return value:  Size  Location     Type
 14118 ;;                  1    wreg      void 
 14119 ;; Registers used:
 14120 ;;		wreg, status,2
 14121 ;; Tracked objects:
 14122 ;;		On entry : 0/0
 14123 ;;		On exit  : 0/0
 14124 ;;		Unchanged: 0/0
 14125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;Total ram usage:        0 bytes
 14131 ;; Hardware stack levels used: 1
 14132 ;; Hardware stack levels required when called: 1
 14133 ;; This function calls:
 14134 ;;		Nothing
 14135 ;; This function is called by:
 14136 ;;		_color_click_init
 14137 ;;		_main
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141                           	psect	text71
 14142  005BCC                     __ptext71:
 14143                           	callstack 0
 14144  005BCC                     _I2C_2_Master_Init:
 14145                           	callstack 28
 14146  005BCC                     
 14147                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14148  005BCC  010E               	movlb	14	; () banked
 14149  005BCE  51D9               	movf	217,w,b	;volatile
 14150  005BD0  0BF0               	andlw	-16
 14151  005BD2  0908               	iorlw	8
 14152  005BD4  6FD9               	movwf	217,b	;volatile
 14153  005BD6                     
 14154                           ; BSR set to: 14
 14155                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14156  005BD6  8BD9               	bsf	217,5,b	;volatile
 14157                           
 14158                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14159  005BD8  0E9F               	movlw	159
 14160  005BDA  6FD6               	movwf	214,b	;volatile
 14161  005BDC                     
 14162                           ; BSR set to: 14
 14163                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14164  005BDC  8A84               	bsf	132,5,c	;volatile
 14165  005BDE                     
 14166                           ; BSR set to: 14
 14167                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14168  005BDE  8C84               	bsf	132,6,c	;volatile
 14169  005BE0                     
 14170                           ; BSR set to: 14
 14171                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14172  005BE0  9BA7               	bcf	167,5,b	;volatile
 14173  005BE2                     
 14174                           ; BSR set to: 14
 14175                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14176  005BE2  9DA7               	bcf	167,6,b	;volatile
 14177                           
 14178                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14179  005BE4  0E1D               	movlw	29
 14180  005BE6  6F1D               	movwf	29,b	;volatile
 14181                           
 14182                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14183  005BE8  0E1E               	movlw	30
 14184  005BEA  6F1C               	movwf	28,b	;volatile
 14185                           
 14186                           ;i2c.c: 18:   RD5PPS=0x1C;
 14187  005BEC  0E1C               	movlw	28
 14188  005BEE  6F6F               	movwf	111,b	;volatile
 14189                           
 14190                           ;i2c.c: 19:   RD6PPS=0x1B;
 14191  005BF0  0E1B               	movlw	27
 14192  005BF2  6F70               	movwf	112,b	;volatile
 14193  005BF4                     
 14194                           ; BSR set to: 14
 14195  005BF4  0012               	return		;funcret
 14196  005BF6                     __end_of_I2C_2_Master_Init:
 14197                           	callstack 0
 14198                           
 14199 ;; *************** function _Timer0_init *****************
 14200 ;; Defined at:
 14201 ;;		line 7 in file "timers.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;		None
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;		None
 14206 ;; Return value:  Size  Location     Type
 14207 ;;                  1    wreg      void 
 14208 ;; Registers used:
 14209 ;;		wreg, status,2
 14210 ;; Tracked objects:
 14211 ;;		On entry : 0/0
 14212 ;;		On exit  : 0/0
 14213 ;;		Unchanged: 0/0
 14214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14219 ;;Total ram usage:        0 bytes
 14220 ;; Hardware stack levels used: 1
 14221 ;; Hardware stack levels required when called: 1
 14222 ;; This function calls:
 14223 ;;		Nothing
 14224 ;; This function is called by:
 14225 ;;		_main
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text72
 14230  005D22                     __ptext72:
 14231                           	callstack 0
 14232  005D22                     _Timer0_init:
 14233                           	callstack 29
 14234  005D22                     
 14235                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14236  005D22  50D6               	movf	214,w,c	;volatile
 14237  005D24  0B1F               	andlw	-225
 14238  005D26  0940               	iorlw	64
 14239  005D28  6ED6               	movwf	214,c	;volatile
 14240  005D2A                     
 14241                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14242  005D2A  88D6               	bsf	214,4,c	;volatile
 14243                           
 14244                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14245  005D2C  50D6               	movf	214,w,c	;volatile
 14246  005D2E  0BF0               	andlw	-16
 14247  005D30  0905               	iorlw	5
 14248  005D32  6ED6               	movwf	214,c	;volatile
 14249  005D34                     
 14250                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14251  005D34  88D5               	bsf	213,4,c	;volatile
 14252                           
 14253                           ;timers.c: 16:     TMR0H=0b00111100;
 14254  005D36  0E3C               	movlw	60
 14255  005D38  6ED4               	movwf	212,c	;volatile
 14256                           
 14257                           ;timers.c: 17:     TMR0L=0b10101111;
 14258  005D3A  0EAF               	movlw	175
 14259  005D3C  6ED3               	movwf	211,c	;volatile
 14260  005D3E  0012               	return		;funcret
 14261  005D40                     __end_of_Timer0_init:
 14262                           	callstack 0
 14263                           
 14264 ;; *************** function _Interrupts_init *****************
 14265 ;; Defined at:
 14266 ;;		line 9 in file "interrupts.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;		None
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;		None
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  1    wreg      void 
 14273 ;; Registers used:
 14274 ;;		None
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14284 ;;Total ram usage:        0 bytes
 14285 ;; Hardware stack levels used: 1
 14286 ;; Hardware stack levels required when called: 1
 14287 ;; This function calls:
 14288 ;;		Nothing
 14289 ;; This function is called by:
 14290 ;;		_main
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           	psect	text73
 14295  005D64                     __ptext73:
 14296                           	callstack 0
 14297  005D64                     _Interrupts_init:
 14298                           	callstack 29
 14299  005D64  8EF2               	bsf	242,7,c	;volatile
 14300                           
 14301                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14302  005D66  8AF2               	bsf	242,5,c	;volatile
 14303                           
 14304                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14305  005D68  8CF2               	bsf	242,6,c	;volatile
 14306                           
 14307                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14308  005D6A  010E               	movlb	14	; () banked
 14309  005D6C  8B29               	bsf	41,5,b	;volatile
 14310  005D6E                     
 14311                           ; BSR set to: 14
 14312  005D6E  0012               	return		;funcret
 14313  005D70                     __end_of_Interrupts_init:
 14314                           	callstack 0
 14315                           
 14316 ;; *************** function _HighISR *****************
 14317 ;; Defined at:
 14318 ;;		line 21 in file "interrupts.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;		None
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;		None
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1    wreg      void 
 14325 ;; Registers used:
 14326 ;;		wreg, status,2, status,0
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 0/0
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14336 ;;Total ram usage:        0 bytes
 14337 ;; Hardware stack levels used: 1
 14338 ;; This function calls:
 14339 ;;		Nothing
 14340 ;; This function is called by:
 14341 ;;		Interrupt level 2
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           	psect	intcode
 14346  000008                     __pintcode:
 14347                           	callstack 0
 14348  000008                     _HighISR:
 14349                           	callstack 19
 14350                           
 14351                           ; BSR set to: 14
 14352                           ;incstack = 0
 14353  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14354  00000A                     
 14355                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14356  00000A  010E               	movlb	14	; () banked
 14357  00000C  AB33               	btfss	51,5,b	;volatile
 14358  00000E  EF0B  F000         	goto	i2u589_41
 14359  000012  EF0D  F000         	goto	i2u589_40
 14360  000016                     i2u589_41:
 14361  000016  EF16  F000         	goto	i2l512
 14362  00001A                     i2u589_40:
 14363  00001A                     
 14364                           ; BSR set to: 14
 14365                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14366  00001A  0E3C               	movlw	60
 14367  00001C  6ED4               	movwf	212,c	;volatile
 14368                           
 14369                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14370  00001E  0EAF               	movlw	175
 14371  000020  6ED3               	movwf	211,c	;volatile
 14372  000022                     
 14373                           ; BSR set to: 14
 14374                           ;interrupts.c: 26:         centisecond ++;
 14375  000022  0101               	movlb	1	; () banked
 14376  000024  4B42               	infsnz	_centisecond& (0+255),f,b
 14377  000026  2B43               	incf	(_centisecond+1)& (0+255),f,b
 14378  000028                     
 14379                           ; BSR set to: 1
 14380                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14381  000028  010E               	movlb	14	; () banked
 14382  00002A  9B33               	bcf	51,5,b	;volatile
 14383  00002C                     i2l512:
 14384                           
 14385                           ; BSR set to: 14
 14386  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14387  00002E  0011               	retfie		f
 14388  000030                     __end_of_HighISR:
 14389                           	callstack 0
 14390                           
 14391                           	psect	rparam
 14392  0000                     
 14393                           	psect	temp
 14394  00005F                     btemp:
 14395                           	callstack 0
 14396  00005F                     	ds	1
 14397  0000                     int$flags	set	btemp
 14398  0000                     wtemp8	set	btemp+1
 14399  0000                     ttemp5	set	btemp+1
 14400  0000                     ttemp6	set	btemp+4
 14401  0000                     ttemp7	set	btemp+8
 14402                           
 14403                           	psect	idloc
 14404                           
 14405                           ;Config register IDLOC0 @ 0x200000
 14406                           ;	unspecified, using default values
 14407  200000                     	org	2097152
 14408  200000  0FFF               	dw	4095
 14409                           
 14410                           ;Config register IDLOC1 @ 0x200002
 14411                           ;	unspecified, using default values
 14412  200002                     	org	2097154
 14413  200002  0FFF               	dw	4095
 14414                           
 14415                           ;Config register IDLOC2 @ 0x200004
 14416                           ;	unspecified, using default values
 14417  200004                     	org	2097156
 14418  200004  0FFF               	dw	4095
 14419                           
 14420                           ;Config register IDLOC3 @ 0x200006
 14421                           ;	unspecified, using default values
 14422  200006                     	org	2097158
 14423  200006  0FFF               	dw	4095
 14424                           
 14425                           ;Config register IDLOC4 @ 0x200008
 14426                           ;	unspecified, using default values
 14427  200008                     	org	2097160
 14428  200008  0FFF               	dw	4095
 14429                           
 14430                           ;Config register IDLOC5 @ 0x20000A
 14431                           ;	unspecified, using default values
 14432  20000A                     	org	2097162
 14433  20000A  0FFF               	dw	4095
 14434                           
 14435                           ;Config register IDLOC6 @ 0x20000C
 14436                           ;	unspecified, using default values
 14437  20000C                     	org	2097164
 14438  20000C  0FFF               	dw	4095
 14439                           
 14440                           ;Config register IDLOC7 @ 0x20000E
 14441                           ;	unspecified, using default values
 14442  20000E                     	org	2097166
 14443  20000E  0FFF               	dw	4095
 14444                           
 14445                           	psect	config
 14446                           
 14447                           ;Config register CONFIG1L @ 0x300000
 14448                           ;	External Oscillator mode Selection bits
 14449                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14450                           ;	Power-up default value for COSC bits
 14451                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14452  300000                     	org	3145728
 14453  300000  AA                 	db	170
 14454                           
 14455                           ;Config register CONFIG1H @ 0x300001
 14456                           ;	unspecified, using default values
 14457                           ;	Clock Out Enable bit
 14458                           ;	CLKOUTEN = 0x1, unprogrammed default
 14459                           ;	Clock Switch Enable bit
 14460                           ;	CSWEN = 0x1, unprogrammed default
 14461                           ;	Fail-Safe Clock Monitor Enable bit
 14462                           ;	FCMEN = 0x1, unprogrammed default
 14463  300001                     	org	3145729
 14464  300001  FF                 	db	255
 14465                           
 14466                           ;Config register CONFIG2L @ 0x300002
 14467                           ;	unspecified, using default values
 14468                           ;	Master Clear Enable bit
 14469                           ;	MCLRE = 0x1, unprogrammed default
 14470                           ;	Power-up Timer Enable bit
 14471                           ;	PWRTE = 0x1, unprogrammed default
 14472                           ;	Low-power BOR enable bit
 14473                           ;	LPBOREN = 0x1, unprogrammed default
 14474                           ;	Brown-out Reset Enable bits
 14475                           ;	BOREN = 0x3, unprogrammed default
 14476  300002                     	org	3145730
 14477  300002  FF                 	db	255
 14478                           
 14479                           ;Config register CONFIG2H @ 0x300003
 14480                           ;	unspecified, using default values
 14481                           ;	Brown Out Reset Voltage selection bits
 14482                           ;	BORV = 0x3, unprogrammed default
 14483                           ;	ZCD Disable bit
 14484                           ;	ZCD = 0x1, unprogrammed default
 14485                           ;	PPSLOCK bit One-Way Set Enable bit
 14486                           ;	PPS1WAY = 0x1, unprogrammed default
 14487                           ;	Stack Full/Underflow Reset Enable bit
 14488                           ;	STVREN = 0x1, unprogrammed default
 14489                           ;	Debugger Enable bit
 14490                           ;	DEBUG = 0x1, unprogrammed default
 14491                           ;	Extended Instruction Set Enable bit
 14492                           ;	XINST = 0x1, unprogrammed default
 14493  300003                     	org	3145731
 14494  300003  FF                 	db	255
 14495                           
 14496                           ;Config register CONFIG3L @ 0x300004
 14497                           ;	WDT Period Select bits
 14498                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14499                           ;	WDT operating mode
 14500                           ;	WDTE = OFF, WDT Disabled
 14501  300004                     	org	3145732
 14502  300004  9F                 	db	159
 14503                           
 14504                           ;Config register CONFIG3H @ 0x300005
 14505                           ;	unspecified, using default values
 14506                           ;	WDT Window Select bits
 14507                           ;	WDTCWS = 0x7, unprogrammed default
 14508                           ;	WDT input clock selector
 14509                           ;	WDTCCS = 0x7, unprogrammed default
 14510  300005                     	org	3145733
 14511  300005  FF                 	db	255
 14512                           
 14513                           ;Config register CONFIG4L @ 0x300006
 14514                           ;	unspecified, using default values
 14515                           ;	Write Protection Block 0
 14516                           ;	WRT0 = 0x1, unprogrammed default
 14517                           ;	Write Protection Block 1
 14518                           ;	WRT1 = 0x1, unprogrammed default
 14519                           ;	Write Protection Block 2
 14520                           ;	WRT2 = 0x1, unprogrammed default
 14521                           ;	Write Protection Block 3
 14522                           ;	WRT3 = 0x1, unprogrammed default
 14523                           ;	Write Protection Block 3
 14524                           ;	WRT4 = 0x1, unprogrammed default
 14525                           ;	Write Protection Block 3
 14526                           ;	WRT5 = 0x1, unprogrammed default
 14527                           ;	Write Protection Block 3
 14528                           ;	WRT6 = 0x1, unprogrammed default
 14529                           ;	Write Protection Block 3
 14530                           ;	WRT7 = 0x1, unprogrammed default
 14531  300006                     	org	3145734
 14532  300006  FF                 	db	255
 14533                           
 14534                           ;Config register CONFIG4H @ 0x300007
 14535                           ;	unspecified, using default values
 14536                           ;	Configuration Register Write Protection bit
 14537                           ;	WRTC = 0x1, unprogrammed default
 14538                           ;	Boot Block Write Protection bit
 14539                           ;	WRTB = 0x1, unprogrammed default
 14540                           ;	Data EEPROM Write Protection bit
 14541                           ;	WRTD = 0x1, unprogrammed default
 14542                           ;	Scanner Enable bit
 14543                           ;	SCANE = 0x1, unprogrammed default
 14544                           ;	Low Voltage Programming Enable bit
 14545                           ;	LVP = 0x1, unprogrammed default
 14546  300007                     	org	3145735
 14547  300007  FF                 	db	255
 14548                           
 14549                           ;Config register CONFIG5L @ 0x300008
 14550                           ;	unspecified, using default values
 14551                           ;	UserNVM Program Memory Code Protection bit
 14552                           ;	CP = 0x1, unprogrammed default
 14553                           ;	DataNVM Memory Code Protection bit
 14554                           ;	CPD = 0x1, unprogrammed default
 14555  300008                     	org	3145736
 14556  300008  FF                 	db	255
 14557                           
 14558                           ;Config register CONFIG5H @ 0x300009
 14559                           ;	unspecified, using default values
 14560  300009                     	org	3145737
 14561  300009  FF                 	db	255
 14562                           
 14563                           ;Config register CONFIG6L @ 0x30000A
 14564                           ;	unspecified, using default values
 14565                           ;	Table Read Protection Block 0
 14566                           ;	EBTR0 = 0x1, unprogrammed default
 14567                           ;	Table Read Protection Block 1
 14568                           ;	EBTR1 = 0x1, unprogrammed default
 14569                           ;	Table Read Protection Block 2
 14570                           ;	EBTR2 = 0x1, unprogrammed default
 14571                           ;	Table Read Protection Block 3
 14572                           ;	EBTR3 = 0x1, unprogrammed default
 14573                           ;	Table Read Protection Block 4
 14574                           ;	EBTR4 = 0x1, unprogrammed default
 14575                           ;	Table Read Protection Block 5
 14576                           ;	EBTR5 = 0x1, unprogrammed default
 14577                           ;	Table Read Protection Block 6
 14578                           ;	EBTR6 = 0x1, unprogrammed default
 14579                           ;	Table Read Protection Block 7
 14580                           ;	EBTR7 = 0x1, unprogrammed default
 14581  30000A                     	org	3145738
 14582  30000A  FF                 	db	255
 14583                           
 14584                           ;Config register CONFIG6H @ 0x30000B
 14585                           ;	unspecified, using default values
 14586                           ;	Boot Block Table Read Protection bit
 14587                           ;	EBTRB = 0x1, unprogrammed default
 14588  30000B                     	org	3145739
 14589  30000B  FF                 	db	255
 14590                           tosu	equ	0xFFF
 14591                           tosh	equ	0xFFE
 14592                           tosl	equ	0xFFD
 14593                           stkptr	equ	0xFFC
 14594                           pclatu	equ	0xFFB
 14595                           pclath	equ	0xFFA
 14596                           pcl	equ	0xFF9
 14597                           tblptru	equ	0xFF8
 14598                           tblptrh	equ	0xFF7
 14599                           tblptrl	equ	0xFF6
 14600                           tablat	equ	0xFF5
 14601                           prodh	equ	0xFF4
 14602                           prodl	equ	0xFF3
 14603                           indf0	equ	0xFEF
 14604                           postinc0	equ	0xFEE
 14605                           postdec0	equ	0xFED
 14606                           preinc0	equ	0xFEC
 14607                           plusw0	equ	0xFEB
 14608                           fsr0h	equ	0xFEA
 14609                           fsr0l	equ	0xFE9
 14610                           wreg	equ	0xFE8
 14611                           indf1	equ	0xFE7
 14612                           postinc1	equ	0xFE6
 14613                           postdec1	equ	0xFE5
 14614                           preinc1	equ	0xFE4
 14615                           plusw1	equ	0xFE3
 14616                           fsr1h	equ	0xFE2
 14617                           fsr1l	equ	0xFE1
 14618                           bsr	equ	0xFE0
 14619                           indf2	equ	0xFDF
 14620                           postinc2	equ	0xFDE
 14621                           postdec2	equ	0xFDD
 14622                           preinc2	equ	0xFDC
 14623                           plusw2	equ	0xFDB
 14624                           fsr2h	equ	0xFDA
 14625                           fsr2l	equ	0xFD9
 14626                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    154     160
    BANK1           256     70     172
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2539$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2539$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S429DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S429DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  342725
                                            150 BANK0      4     4      0
                                              0 BANK1     70    70      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26247
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             51 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             43 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  123622
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   18607
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   25961
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   15832
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   40355
                                             24 BANK0     12     4      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             49 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             43 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              12     6      6   12033
                                             31 COMRAM    12     6      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18283
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12868
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2683
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_predict
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      AC       7       67.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllhl      1      0       0      40        0.0%
BITBIGSFRlhhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AA      56        0.0%
DATA                 0      0     1AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 16 16:29:04 2022

                _color_read_Red 5714                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 57B4                   _color_predict 5B9E  
                            l60 365A                              l71 5B6C                              l80 5802  
                            l57 5B38                              l74 5D02                              l83 57B2  
                            l68 366C                              l92 5C82                              l77 5762  
                            l86 5852                              l95 5C62                              l89 56C0  
                            l98 5CE2                    ___awdiv@sign 000C             ___wmul@multiplicand 0003  
              _color_read_Clear 5804                _color_read_Green 5764               ??_Interrupts_init 0001  
                           l101 5CC2                             l110 5BCA                             l104 5CA2  
                           l113 3A98                             l107 5600                             l133 1A16  
                           l141 5590                             l136 5A5A                             l145 4CAC  
                           l137 5A5C                             l250 59A2                             l331 5D20  
                           l260 3C6C                             l340 5D42                             l148 5206  
                           l308 4A56                             l412 3734                             l253 5078  
                           l149 5208                             l182 5C1C                             l191 5D82  
                           l343 5D56                             l176 5BF4                             l185 5D8C  
                           l506 5D6E                             l194 5D62                             l523 5D3E  
                           l179 5BF6                             l603 44C0                             l188 5D78  
                           l268 5514                             l460 30DC                             l197 5960  
                           l285 42FA                             l277 423E                             l349 5B9C  
                           l606 4B84                             l640 5C42                             l632 4F8E  
                           l448 591E                             l297 5392                             l289 432A  
                           l634 4F5A                             l483 2A44                             l628 4EBA  
                           l580 4810                             l637 4FA6                             l629 4F24  
                           l477 2A12                             l469 2A16                             l910 4EB8  
                           l590 4904                             l574 47C0                             l487 2A52  
                           l584 4850                             l576 47CE                             l905 4E72  
                           l914 5ACE                             l578 4802                             l754 4648  
                           l587 48AE                             l871 5456                             l767 47AC  
                           l937 4DB4               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 520A                             _abs 59E4                             _pad 520A  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5C84                    ___fltol@exp1 0065  
                          l1210 5898                            ?_abs 0013                            l1222 2DEC  
                          l1302 3F12                            l1224 2C4C                            l1233 2C92  
                          l1170 1BBA                            l1402 5A22                            l1235 2D0A  
                          l1227 2C10                            l1323 5712                            l1236 2CF8  
                          l1316 5A96                            l1309 3F6E                            l1261 2192  
                          l1254 1F9C                            l1414 5142                            l1422 58DC  
                          l1350 5250                            l1271 22C2                            l1263 220A  
                          l1264 21F8                            l1168 1C06                            l4000 54B0  
                          l1185 1D20                            l1177 1ED6                            l1169 1BF4  
                          l1433 26AE                            l1425 5D90                            l1353 5292  
                          l1361 317E                            l1258 2300                            l1194 1DF0  
                          l4002 54BC                            l4010 5D42                            l1195 1DDE  
                          l1355 52CE                            l1363 3186                            l4100 2190  
                          l4020 1EF4                            l4004 54CC                            l4012 5D52  
                          l1381 33C0                            l4110 21F0                            l4102 21A2  
                          l4030 1F3A                            l4022 1F04                            l4014 1ED8  
                          l4006 54E4                            l1446 5B04                            l1295 3E7A  
                          l4120 225E                            l4104 21B0                            l4040 1F66  
                          l4032 1F40                            l4024 1F14                            l4016 1EE4  
                          l4200 5764                            l4008 54FC                            l5000 29B6  
                          l1298 3FD6                            l4130 22C6                            l4114 221A  
                          l4122 2262                            l4106 21B4                            l4050 1FBC  
                          l4042 1F76                            l4034 1F46                            l4026 1F24  
                          l4018 1EF2                            l4202 57AA                            l1394 565A  
                          l5010 2A3E                            l5002 29DA                            l1395 5662  
                          l4140 22F0                            l4132 22D6                            l4124 227C  
                          l4116 2226                            l4108 21C2                            l4060 1FFC  
                          l4044 1F86                            l4036 1F54                            l4028 1F2A  
                          l4300 5362                            l5020 4F08                            l5012 4ECC  
                          l3500 4570                            l1388 3E22                            l4220 5700  
                          l4212 56C2                            l5100 4462                            l4206 5804  
                          l4310 4CDA                            l4150 4DB6                            l4134 22E4  
                          l4126 2290                            l4118 2234                            l4070 2046  
                          l4062 2008                            l4054 1FD0                            l4046 1F8C  
                          l4038 1F56                            l4302 537A                            l5022 4F12  
                          l5014 4EE2                            l4230 5B84                            l3510 45E0  
                          l3502 457E                            l4214 56D4                            l5110 449C  
                          l5102 4466                            l5006 2A1C                            l1399 5A1A  
                          l5120 5B3E                            l4208 584A                            l4320 4D28  
                          l4312 4D04                            l4304 4CAE                            l4160 4E40  
                          l4152 4DE4                            l4136 22E6                            l4128 22AA  
                          l4080 2098                            l4072 2052                            l4064 2020  
                          l4056 1FDC                            l4048 1FAC                            l4144 5854  
                          l4400 34D2                            l3600 53C0                            l4240 41C8  
                          l4232 4188                            l5032 4F68                            l5016 4EF0  
                          l5200 47E8                            l4224 5B6E                            l3512 45F2  
                          l3504 4590                            l4216 56DC                            l5112 44B6  
                          l5104 447E                            l5040 432C                            l5008 2A30  
                          l5122 5B48                            l4330 4D54                            l4314 4D06  
                          l4306 4CC6                            l4162 4E52                            l4154 4DF4  
                          l4138 22EC                            l4090 2116                            l4082 20A8  
                          l4074 2062                            l4066 202C                            l4058 1FE6  
                          l4146 5864                            l4410 356E                            l4402 34E4  
                          l3610 53EE                            l3602 53C8                            l4250 421E  
                          l4242 41E0                            l4234 4194                            l5034 4F6A  
                          l5026 4F32                            l5018 4EF2                            l5210 4852  
                          l5202 47EA                            l4226 5B72                            l3506 45BE  
                          l3514 45F8                            l3530 4680                            l3522 464A  
                          l3450 509E                            l4218 56E4                            l5114 44BC  
                          l5106 448A                            l5050 436A                            l5130 5532  
                          l5124 5B58                            l5116 5B06                            l4340 4D84  
                          l4316 4D16                            l4164 4E60                            l4156 4E22  
                          l4092 214C                            l4084 20C4                            l4076 206E  
                          l4068 2038                            l4172 5A98                            l4420 360A  
                          l4412 358C                            l4404 3508                            l3620 5428  
                          l3612 53F6                            l3604 53CC                            l3700 3A9A  
                          l4252 422A                            l4244 41EC                            l4236 41B4  
                          l5036 4F80                            l5028 4F48                            l5220 48D0  
                          l5212 487A                            l5204 481E                            l4228 5B80  
                          l3516 4608                            l3508 45DE                            l3540 46E8  
                          l3532 468E                            l3524 464E                            l3452 50A8  
                          l3460 589A                            l4180 5602                            l5108 4496  
                          l5052 4376                            l4500 4A2C                            l5300 2E5E  
                          l5132 5550                            l5126 5B62                            l5118 5B3A  
                          l5150 598A                            l4342 4D94                            l4326 4D40  
                          l4318 4D1A                            l4166 4EB0                            l4158 4E32  
                          l4094 215A                            l4086 20D0                            l4078 207E  
                          l4174 5AAE                            l4350 2322                            l4422 3622  
                          l4414 35A4                            l4406 3520                            l4430 5C6A  
                          l4190 575A                            l3630 544E                            l3622 542A  
                          l3614 5404                            l3606 53D4                            l3710 3B9A  
                          l3702 3AB6                            l4262 4284                            l4270 42C2  
                          l4254 423A                            l4246 41F8                            l4510 4AA0  
                          l5038 4F92                            l5222 48D2                            l5206 4832  
                          l5214 4892                            l3518 4628                            l3542 46F6  
                          l3550 475C                            l3534 46AE                            l3526 465C  
                          l3454 50C6                            l3446 507A                            l3462 58A6  
                          l3470 5ADC                            l4182 560A                            l5070 43D2  
                          l5054 4382                            l5046 434E                            l4502 4A42  
                          l5310 2EC2                            l5302 2E60                            l5142 558E  
                          l5134 5568                            l5152 599E                            l5160 4FC4  
                          l4600 2C1A                            l4344 4DA4                            l4336 4D68  
                          l4328 4D4A                            l4168 4EB6                            l4096 2178  
                          l4088 20EC                            l4176 5ABE                            l3800 1BB2  
                          l3720 1A34                            l4360 23FA                            l4352 236A  
                          l4424 3658                            l4416 35DA                            l4408 355C  
                          l4440 5CA4                            l4432 5C44                            l3624 5430  
                          l3616 540A                            l3608 53E6                            l3712 3C04  
                          l3704 3B18                            l4272 42DA                            l4264 429C  
                          l4280 4316                            l4256 4256                            l4248 4206  
                          l4520 4B44                            l4512 4AB4                            l4504 4A58  
                          l5224 48E0                            l5216 48A0                            l5208 4834  
                          l3480 44C6                            l3552 476C                            l3544 4724  
                          l3536 46CC                            l3528 467C                            l3456 50FC  
                          l3448 508C                            l3464 58B8                            l3472 5AE0  
                          l3560 521A                            l3640 3146                            l4184 5618  
                          l5072 43DE                            l5064 43AA                            l5056 4388  
                          l5048 4352                            l5240 4020                            l5232 3FDC  
                          l5320 2F36                            l5312 2ED4                            l5304 2E72  
                          l5136 5588                            l5128 551A                            l5400 37A2  
                          l5154 59A0                            l5146 5962                            l5162 4FD8  
                          l5170 5D04                            l4610 2C72                            l4602 2C38  
                          l4530 2A70                            l4338 4D74                            l4098 2182  
                          l3810 1BE8                            l3802 1BC8                            l3722 1A44  
                          l3730 1A6E                            l3714 1A18                            l4370 259E  
                          l4354 237E                            l4418 35EC                            l4442 5CAA  
                          l4434 5C4A                            l4194 57B4                            l3618 5420  
                          l3626 5436                            l3706 3B5E                            l4290 5318  
                          l4274 42E6                            l4266 42A8                            l4258 426E  
                          l4282 4318                            l4522 4B70                            l4514 4AFC  
                          l4506 4A6C                            l5226 48E4                            l5218 48BC  
                          l3490 4526                            l3482 44D4                            l3554 478C  
                          l3546 4744                            l3538 46D4                            l3466 58BC  
                          l3474 5AF8                            l3570 5270                            l3562 522E  
                          l3650 31A0                            l3642 3156                            l3634 30DE  
                          l4186 563E                            l4450 55F4                            l4426 5664  
                          l5090 443A                            l5082 4406                            l5074 43E4  
                          l5066 43AE                            l5058 43A2                            l5250 4062  
                          l5242 4034                            l5234 3FEE                            l5330 2FCC  
                          l5322 2F6A                            l5314 2F08                            l5306 2EA6  
                          l5410 37D8                            l5402 37A8                            l5148 5972  
                          l5164 4FEC                            l5156 4FA8                            l5180 5D1E  
                          l5172 5D0E                            l4436 5CC4                            l4620 2CB0  
                          l4612 2C78                            l4604 2C3A                            l4532 2A80  
                          l4540 2AAA                            l4524 2A54                            l4700 3FB6  
                          l3900 1E9A                            l3820 1C38                            l3812 1BF2  
                          l3804 1BD4                            l3740 1A9E                            l3732 1A7E  
                          l3724 1A54                            l3716 1A24                            l4372 260A  
                          l4364 2432                            l4356 23BA                            l4348 2302  
                          l4444 5C84                            l4428 5C64                            l4196 57FA  
                          l4188 5714                            l3628 5446                            l3708 3B7E  
                          l4292 5330                            l4284 52D0                            l4276 42F6  
                          l4268 42B4                            l4516 4B14                            l4508 4A84  
                          l5228 48FC                            l3492 452A                            l3484 44F4  
                          l3548 4756                            l3580 59E4                            l3468 5AD0  
                          l3572 5274                            l3564 523C                            l3660 31CC  
                          l3652 31AE                            l3644 3158                            l3636 30FE  
                          l4452 5BA2                            l5092 4440                            l5084 440A  
                          l5076 43FE                            l5068 43C6                            l4460 5A24  
                          l5260 40AC                            l5252 4076                            l5244 4046  
                          l5236 4000                            l5340 3048                            l5332 2FE6  
                          l5324 2F84                            l5316 2F22                            l5308 2EC0  
                          l5420 383A                            l5404 37AC                            l5412 37DE  
                          l5182 5D22                            l4710 5BD6                            l5166 4FFC  
                          l5158 4FB4                            l5174 5D10                            l4438 5CCA  
                          l4630 2D1A                            l4622 2CB4                            l4614 2C82  
                          l4606 2C4A                            l4550 2AD6                            l4542 2ABA  
                          l4534 2A90                            l4526 2A60                            l4702 3FC4  
                          l3910 1EC4                            l3902 1EA8                            l3830 1C74  
                          l3822 1C48                            l3814 1C14                            l3806 1BD8  
                          l3750 1ADE                            l3742 1AAC                            l3734 1A84  
                          l3726 1A64                            l3718 1A32                            l4374 263E  
                          l4366 2500                            l4358 23DE                            l4390 3418  
                          l4382 33C4                            l4446 5C8A                            l3590 5394  
                          l4294 533C                            l4286 52F4                            l4518 4B28  
                          l5190 47AE                            l3494 4536                            l3486 44F8  
                          l3478 44C2                            l3582 59FE                            l3574 52A2  
                          l3566 5248                            l3558 520A                            l3670 32D8  
                          l3662 324E                            l3654 31B4                            l3646 3172  
                          l3638 3126                            l4454 5BBE                            l5094 445A  
                          l5086 4422                            l4462 5A2A                            l5270 40E4  
                          l5262 40B8                            l5254 408E                            l5246 404A  
                          l5238 400C                            l4470 4906                            l5350 30AC  
                          l5342 304A                            l5334 2FE8                            l5326 2F86  
                          l5318 2F24                            l5422 3858                            l5414 37F2  
                          l5406 37B2                            ?_pad 0011                            l5184 5D2A  
                          l4712 5BDC                            l4720 5CE6                            l5168 5010  
                          l5176 5D1A                            l4640 2D7C                            l4632 2D26  
                          l4624 2CC2                            l4616 2C90                            l4608 2C5C  
                          l4552 2AE6                            l4560 2B10                            l4544 2AC0  
                          l4536 2AA0                            l4528 2A6E                            l4704 3FC6  
                          l3912 1EC6                            l3904 1EAE                            l3840 1CBA  
                          l3832 1C82                            l3824 1C56                            l3816 1C24  
                          l3808 1BE6                            l3760 1B18                            l3752 1AE0  
                          l3744 1AAE                            l3736 1A96                            l3728 1A66  
                          l4376 267A                            l4368 256C                            l4456 5A5E  
                          l4392 3450                            l4384 33D0                            l3592 5398  
                          l3584 5C1E                            l4296 5348                            l4288 530C  
                          l5192 47B8                            l3496 4554                            l3488 4506  
                          l3576 52B6                            l3568 525C                            l3680 334C  
                          l3672 32F6                            l3664 3254                            l3656 31BC  
                          l3648 318E                            l3920 3CA0                            l4448 5592  
                          l5088 442E                            l4464 5A40                            l4800 10E0  
                          l5280 4156                            l5272 40F8                            l5264 40BE  
                          l5256 4094                            l5248 4056                            l4480 4972  
                          l4472 492A                            l5352 30BE                            l5344 305C  
                          l5336 2FFA                            l5328 2F98                            l5424 3868  
                          l5416 380C                            l5408 37C4                            l5360 3676  
                          l5186 5D34                            l4714 5BDE                            l5178 5D1C  
                          l4650 2DDA                            l4642 2D92                            l4634 2D34  
                          l4626 2CF0                            l4618 2CA2                            l4570 2B52  
                          l4562 2B20                            l4554 2AF6                            l4546 2AC6  
                          l4538 2AA2                            l3906 1EB0                            l3850 1D36  
                          l3842 1CEE                            l3834 1C84                            l3826 1C64  
                          l3770 1B2C                            l3762 1B1C                            l3746 1ABE  
                          l3754 1AE8                            l3738 1A98                            l4378 269E  
                          l4394 3462                            l4386 33E0                            l4730 38BA  
                          l4722 3890                            l3594 53A6                            l3586 5C3A  
                          l4298 5354                            l5194 47BC                            l5290 590A  
                          l3498 455C                            l3690 3388                            l3682 335C  
                          l3674 3310                            l3666 325A                            l3658 31C6  
                          l3930 3D48                            l3922 3CB2                            l4466 5A56  
                          l4810 126C                            l4802 10FA                            l5274 4118  
                          l5282 415C                            l5266 40CE                            l4490 49CA  
                          l4482 497E                            l4474 4942                            l5354 30C8  
                          l5346 3090                            l5338 302E                            l5426 387E  
                          l5418 3820                            l5370 3692                            l5362 3682  
                          l5188 5D64                            l4716 5BE0                            l4708 5BCC  
                          l4652 2DE0                            l4644 2DAC                            l4636 2D5E  
                          l4564 2B36                            l4556 2B06                            l4548 2AD4  
                          l3908 1EB6                            l3860 1D72                            l3852 1D46  
                          l3844 1CF0                            l3836 1C8E                            l3828 1C70  
                          l3780 1B40                            l3772 1B30                            l3764 1B20  
                          l3756 1AF8                            l3748 1ACE                            l4396 3482  
                          l4388 3400                            l4900 4BAE                            l4740 391A  
                          l4732 38D2                            l4724 3894                            l3596 53AE  
                          l5196 47BE                            l3684 3362                            l3692 3398  
                          l3676 332A                            l3668 32BE                            l3940 3DC6  
                          l3924 3CB8                            l3916 3C6E                            l4820 136A  
                          l4812 1288                            l4804 1106                            l5284 416E  
                          l5276 4128                            l4492 49DA                            l4484 498A  
                          l4476 494E                            l5348 30AA                            l5292 2DF0  
                          l5428 3884                            l5380 36B0                            l5372 36A6  
                          l5364 3686                            l5356 366E                            l4718 5BE2  
                          l4654 2DE2                            l4646 2DC8                            l4638 2D62  
                          l4590 2BD4                            l4582 2B8A                            l4566 2B46  
                          l4574 2B66                            l4558 2B08                            l4670 3EA0  
                          l4662 3E26                            l3870 1D9E                            l3862 1D74  
                          l3846 1D00                            l3838 1C94                            l3790 1B54  
                          l3782 1B44                            l3774 1B34                            l3766 1B24  
                          l3758 1B0A                            l4398 349A                            l4910 4C0E  
                          l4902 4BC6                            l4750 397E                            l4742 3932  
                          l4734 38E6                            l4726 389E                            l3598 53B2  
                          l5198 47DC                            l5286 58DE                            l3686 3374  
                          l3678 333A                            l3934 3D80                            l3926 3CDC  
                          l3918 3C92                            l3950 3DEC                            l4830 14F8  
                          l4822 1376                            l4814 1330                            l4806 11A8  
                          l5278 413C                            l4494 49F0                            l4478 4966  
                          l4486 499A                            l5294 2E00                            l5390 36EC  
                          l5382 36B0                            l5374 36AC                            l5366 368A  
                          l5358 3672                            l3696 5BF6                            l3960 5D88  
                          l4648 2DCC                            l4592 2BDC                            l4584 2BA4  
                          l4576 2B76                            l4568 2B4E                            l4680 3EFA  
                          l4664 3E36                            l3880 1DD6                            l3864 1D82  
                          l3856 1D5A                            l3872 1DA0                            l3848 1D10  
                          l3784 1B48                            l3776 1B38                            l3768 1B28  
                          l3792 1B58                            l4912 4C1A                            l4904 4BD2  
                          l4760 39F6                            l4752 3996                            l4744 394A  
                          l4736 38FE                            l4728 38B6                            l5288 58F2  
                          l3688 3380                            l3952 3E10                            l3936 3DA4  
                          l3944 3DD2                            l3928 3D00                            l4840 16A6  
                          l4832 15A0                            l4824 1418                            l4816 134C  
                          l4808 11C4                            l4496 4A02                            l4488 49B2  
                          l5296 2E10                            l5392 3700                            l5376 36AC  
                          l5368 368E                            l3698 5C06                            l3962 5D5A  
                          l4594 2BEC                            l4586 2BB4                            l4578 2B76  
                          l4690 3F5E                            l4682 3EFC                            l4674 3EB4  
                          l4666 3E44                            l3970 5D70                            l3890 1E54  
                          l3866 1D8A                            l3858 1D64                            l3874 1DAE  
                          l3794 1B5C                            l3786 1B4C                            l3778 1B3C  
                          l4914 4C32                            l4906 4BEA                            l4770 3A5A  
                          l4762 39FA                            l4754 39AE                            l4746 3962  
                          l4738 3916                            l3946 3DE0                            l3938 3DB2  
                          l4850 17B6                            l4842 1774                            l4834 15BC  
                          l4826 1434                            l4818 1350                            l4930 5184  
                          l4922 5144                            l4498 4A1A                            l5298 2E44  
                          l5394 3722                            l5386 36DE                            l5378 36B0  
                          l3964 5D5E                            l4596 2C00                            l4588 2BC4  
                          l4692 3F7C                            l4684 3F08                            l4676 3EBC  
                          l4668 3E8A                            l3980 5936                            l3972 5D74  
                          l3884 1E00                            l3892 1E56                            l3876 1DB2  
                          l3868 1D8E                            l3796 1B86                            l3788 1B50  
                          l4916 4C9A                            l4908 4BF6                            l4772 3A72  
                          l4764 3A12                            l4756 39C6                            l4748 397A  
                          l4860 18B6                            l4852 1876                            l4844 177E  
                          l4836 1664                            l4828 14DC                            l4780 0E66  
                          l4932 5188                            l4924 515A                            l5396 373C  
                          l5388 36E0                            l3958 5D84                            l3966 5D7A  
                          l4598 2C0E                            l4694 3F7E                            l4686 3F44  
                          l4678 3EC8                            l3982 595C                            l3974 5922  
                          l3894 1E66                            l3886 1E0C                            l3878 1DC0  
                          l3798 1BA2                            l4918 4CA4                            l4774 3A76  
                          l4766 3A2A                            l4758 39DE                            l3990 545C  
                          l4862 18CC                            l4870 18FA                            l4854 1880  
                          l4846 1788                            l4838 1678                            l4790 0FEC  
                          l4782 0E80                            l4934 51CE                            l4926 515E  
                          l4950 2720                            l4942 26B0                            l5398 3764  
                          l3968 5D7E                            l4696 3F82                            l4688 3F50  
                          l3984 595E                            l3976 5926                            l3896 1E76  
                          l3888 1E1A                            l4768 3A42                            l3992 5474  
                          l4880 1992                            l4864 18D4                            l4848 17A0  
                          l4856 188A                            l4872 18FE                            l4792 1000  
                          l4784 0E8C                            l4776 0E14                            l4936 51EA  
                          l4928 5178                            l4952 2738                            l4944 26FC  
                          l4698 3FA6                            l3978 592E                            l3898 1E96  
                          l3994 5480                            l4890 1A12                            l4882 19C0  
                          l4874 192C                            l4866 18EA                            l4858 18A0  
                          l4794 10A8                            l4786 0F28                            l4778 0E62  
                          l4938 5202                            l4970 27EA                            l4962 278E  
                          l4954 273C                            l4946 2700                            l3996 5498  
                          l3988 5458                            l4884 19EE                            l4876 195C  
                          l4868 18F2                            l4796 10C4                            l4788 0F44  
                          l4972 280E                            l4964 2790                            l4956 2764  
                          l4948 2714                            l4894 4B86                            l3998 54A4  
                          l4886 19F4                            l4878 198C                            l4798 10DC  
                          l4990 2922                            l4982 28A2                            l4966 27B2  
                          l4958 2778                            l4896 4BA0                            l4888 1A08  
                          l4984 28C6                            l4976 2846                            l4898 4BAA  
                          l4994 295A                            l4978 286A                            l4996 297E  
                          l4988 28FE                            STR_1 0E05                            STR_2 0E0D  
                          u3000 58DC                            u3001 58D8                            u3010 5AF8  
                          u3011 5AF4                            u3020 44D4                            u3100 468E  
                          u3021 44D0                            u3101 468A                            u3030 4506  
                          u3110 46CC                            u3031 4502                            u3111 46C8  
                          u4000 1F54                            u3200 53A6                            u3120 46F6  
                  _BAUD4CONbits 000EE9                            u4001 1F50                            u3201 53A2  
                          u3041 4530                            u3121 46F2                            _LATE 000F7D  
                          u4010 1F66                            u3210 53C0                            u3050 4554  
                          u3130 4724                            u4011 1F62                            u3211 53BC  
                          u3051 4550                            u3131 4720                            _LATG 000F7F  
                          u4100 2206                            u4020 1F76                            u3220 53E6  
                          u3060 457E                            u3140 476C                            u3300 3172  
                          u4101 2202                            u4021 1F72                            u3221 53E2  
                          u3061 457A                            u3141 4768                            u3301 316E  
                          u4110 221A                            u4030 1FAC                            u3230 5404  
                          u3070 45BE                            u3150 521A                            u3310 31A0  
                          u4111 2216                            u4031 1FA8                            u3231 5400  
                          u3071 45BA                            u3151 5216                            u3311 319C  
                          u5000 2CB0                            u4200 4EB0                            u4120 2234  
                          u4040 1FBC                            u3240 5420                            u3080 4608  
                          u3160 523C                            u3400 3374                            u3320 31AE  
                          u5001 2CAC                            u4201 4EAC                            u4121 2230  
                          u4041 1FB8                            u3241 541C                            u3081 4604  
                          u3161 5238                            u3401 3370                            u3321 31AA  
                          u3410 5C06                            u5010 2CC2                            u4130 227C  
                          u4050 2136                            u4210 5AAE                            u3250 5446  
                          u3090 465C                            u3170 5292                            u3330 32D8  
                          _T2PR 000FBC                            u3411 5C02                            u5011 2CBE  
                          u4131 2278                            u4211 5AAA                            u3251 5442  
                          u3091 4658                            u3171 528E                            u3331 32D4  
                          u3420 5C1C                            u5020 2CF0                            u5100 3E44  
                          u4140 22AA                            u4060 2190                            u3500 1A96  
                          u4300 432A                            u3180 52A2                            u3340 32F6  
                          u3260 310E                            u4220 565A                            u3421 5C18  
                          u5021 2CEC                            u5101 3E40                            u4141 22A6  
                          u4061 218C                            u3501 1A92                            u4301 4326  
                          u3181 529E                            u3341 32F2                            u3261 3108  
                          u4221 5656                            u5030 2D06                            u5110 3EA0  
                          u4150 22E4                            u4070 21B0                            u3510 1AAC  
                          u3430 3AB6                            u4310 530C                            u4230 5B9C  
                          u3190 59FE                            u3350 3310                            u3270 3110  
                          u5031 2D02                            u5111 3E9C                            u4151 22E0  
                          u4071 21AC                            u4055 212C                            u3511 1AA8  
                          u3431 3AB2                            u4311 5308                            u4231 5B98  
                          u3191 59FA                            u3351 330C                            u5040 2D1A  
                          u5120 3EF6                            u4400 4D84                            u4160 4DE4  
                          u4080 21C2                            u3600 1BE6                            u3520 1ABE  
                          u3440 3B9A                            u4320 5330                            u4240 41C4  
                          u3360 332A                            u3280 3126                            u5200 1774  
                          u5041 2D16                            u5121 3EF2                            u4401 4D80  
                          u4161 4DE0                            u4081 21BE                            u3601 1BE2  
                          u3521 1ABA                            u3441 3B96                            u4321 532C  
                          u4241 41C0                            u3361 3326                            u3281 3122  
                          u5201 1770                            u5050 2D34                            u5130 3F40  
                          u4410 4D94                            u4170 4E22                            u4090 21F0  
                          u3610 1C06                            u3530 1ACE                            u4330 537A  
                          u4250 421E                            u3370 333A                            u3290 3156  
                          u5210 17A0                            u5051 2D30                            u5131 3F3C  
                          u4411 4D90                            u4171 4E1E                            u4091 21EC  
                          u3611 1C02                            u3531 1ACA                            u4331 5376  
                          u4251 421A                            u3371 3336                            u3291 3152  
                          u5211 179C                            u5060 2D7C                            u5140 3F5E  
                          u4180 4E40                            u3700 1D46                            u3620 1C14  
                          u3540 1B0A                            u4500 267A                            u4420 2342  
                          u4340 5392                            u4260 4256                            u3380 334C  
                          u5300 198C                            u5220 17B6                            u5061 2D78  
                          u5141 3F5A                            u4181 4E3C                            u3701 1D42  
                          u3621 1C10                            u3541 1B06                            u4501 2676  
                          u4341 538E                            u4261 4252                            u3381 3348  
                          u5301 1988                            u5221 17B2                            u5070 2DAC  
                          u5150 3F6E                            u4350 4CC6                            u4190 4E60  
                          u3710 1D72                            u3630 1C24                            u3550 1B18  
                          u3470 1A32                            u4430 236A                            u4510 33E0  
                          u3454 3BF4                            u4270 4280                            u3390 335C  
                          u5310 19C0                            u5230 1876                            u5071 2DA8  
                          u5151 3F6A                            u4351 4CC2                            u4191 4E5C  
                          u3711 1D6E                            u3631 1C20                            u3551 1B14  
                          u3471 1A2E                            u4431 2366                            u4511 33DC  
                          u3455 3BF0                            u4271 427C                            u3391 3358  
                          u5311 19BC                            u5231 1872                            u6007 0E72  
                          u5080 2DDA                            u5160 3F7C                            u4360 4CFA  
                          u3800 1E54                            u3720 1D82                            u3640 1C56  
                          u3560 1B86                            u3480 1A44                            u4440 239E  
                          u4520 33F2                            u3464 3C5E                            u4280 42DA  
                          u5320 19EE                            u5240 18A0                            u5400 28C6  
                          u5081 2DD6                            u5161 3F78                            u3801 1E50  
                          u3721 1D7E                            u3641 1C52                            u3561 1B82  
                          u3481 1A40                            u4425 2338                            u4521 33EA  
                          u3465 3C5A                            u4281 42D6                            u5321 19EA  
                          u5241 189C                            u6017 10D0                            u5401 28C2  
                          u5170 3FB6                            u5090 3E36                            u4370 4D28  
                          u3810 1E66                            u3730 1D9E                            u3650 1C64  
                          u3570 1B9E                            u3490 1A54                            u4450 23BA  
                          u4610 34E4                            u4290 4312                            u5330 1A08  
                          u5250 18B6                            u5410 2922              verify_color@color2 0098  
                          u5171 3FB2                            u5091 3E32                            u4371 4D24  
                          u3811 1E62                            u3731 1D9A                            u3651 1C60  
                          u3571 1B98                            u3491 1A50                            u4451 23B6  
                          u4611 34E0                            u4291 430E                            u6107 4840  
                          u5331 1A04                            u5251 18B2                            u6027 10EC  
                          u5411 291E                            u5180 3FC4                            u3900 594A  
                          u4380 4D3C                            u3820 1E76                            u3740 1DAE  
                          u3660 1C82                            u3580 1BA0                            u4460 23FA  
                          u4620 34F6                            u4540 342A                            u5500 4F56  
                          u5260 18CC                            u5340 5202                            u5420 297E  
                          u5181 3FC0                            u3901 5942                            u4381 4D38  
                          u4365 4CF0                            u3821 1E72                            u3741 1DAA  
                          u3661 1C7E                            u4461 23F6                            u4445 2394  
                          u4621 34EE                            u4541 3422                            u5501 4F52  
                          u6117 4886                            u5261 18C8                            u6037 135C  
                          u5341 51FE                            u5421 297A                            u4390 4D64  
                          u3830 1E96                            u3750 1DC0                            u3670 1CBA  
                          u3590 1BC8                            u4470 2500                            u4710 35EC  
                          u5510 4F68                            u5270 18EA                            u5190 16A6  
                          u5430 29DA                            u5350 2764                            u4391 4D60  
                          u3831 1E92                            u3751 1DBC                            u3671 1CB6  
                          u3591 1BC4                            u4471 24FC                            u4711 35E8  
                          u6207 4B62                            u5511 4F64                            u6127 48F0  
                          u6047 435C                            u5271 18E6                            u5191 16A2  
                          u5431 29D6                            u5351 2760                            u3840 1EA8  
                          u3760 1DD6                            u3680 1D00                            u4480 259E  
                          u4720 35FE                            u4640 3532                            u4608 34AE  
                          u4560 3462                            u3920 5474                            u5600 481E  
                          u2960 508C                            u5520 43A2                            u5280 192C  
                          u4800 4966                            u5440 2A3E                            u5360 278A  
                          u3841 1EA4                            u3761 1DD2                            u3681 1CFC  
                          u4481 259A                            u4721 35F6                            u4641 352A  
                          u4561 345E                            u3921 5470                            u6217 41FE  
                          u6137 4ED6                            u5601 481A                            u2961 5088  
                          u6057 43B8                            u5521 439E                            u5281 1928  
                          u4801 4962                            u5441 2A3A                            u5361 2786  
                          u3850 1EC4                            u3770 1DEC                            u3690 1D36  
                          u4490 265E                            u4570 3474                            u4538 33F4  
                          u3930 5498                            u5610 4866                            u2970 509E  
                          u5530 43FE                            u5290 195C                            u4810 49B2  
                          u5450 2A52                            u5370 27B2                            u3851 1EC0  
                          u3771 1DE8                            u3691 1D32                            u4571 346C  
                          u6307 3924                            u3931 5494                            u6227 4230  
                          u6147 4EFC                            u5611 485C                            u2971 509A  
                          u6067 4414                            u5531 43FA                            u5291 1958  
                          u4811 49AE                            u5451 2A4E                            u5371 27AE  
                          u4900 2AE6                            u3780 1E00                            u4740 3634  
                          u4708 35B8                            u4660 356E                            u3940 54E4  
                          u5460 4ECC                            u2980 50C6                            u3860 3C92  
                          u5540 445A                            u5700 4076                            u4820 49CA  
                          u5380 280E                            u4901 2AE2                            u3781 1DFC  
                          u4741 362C                            u4661 356A                            u6317 3988  
                          u3941 54E0                            u6237 42BA                            u6157 4F3C  
                          u5461 4EC8                            u2981 50C2                            u3861 3C8E  
                          u6077 4470                            u5541 4456                            u5701 4072  
                          u4821 49C6                            u5381 280A                            u4910 2AF6  
                          u3918 594C                            u3790 1E1A                            u4670 3580  
                          u4638 34F8                            u4590 34AC                            u4558 342C  
                          u3950 54FC                            u5470 4EF0                            u5630 48A0  
                          u2990 50FC                            u3870 3CDC                            u5550 44B6  
                          u5710 40A8                            u4830 49DA                            u5390 286A  
                          u4911 2AF2                            u3791 1E16                            u4495 2654  
                          u4671 3578                            u4591 34A4                            u6407 4C02  
                          u6327 3A04                            u3951 54F8                            u6247 42EC  
                          u6167 4F74                            u5471 4EEC                            u5631 489C  
                          u6087 58FC                            u2991 50F8                            u3871 3CD8  
                          u5551 44B2                            u5711 40A4                            u4831 49D6  
                          u5391 2866                            u4920 2B36                            u4760 366C  
                          u5480 4F20                            u5640 48AE                            u3960 5D52  
                          u3880 3D00                            u5720 40CE                            u4840 4A02  
                          u5800 2F36                            u5560 5588                            u4921 2B32  
                          u4761 3668                            u6417 4C26                            u6337 3A80  
                          u6257 54C2                            u6177 4A76                            u5481 4F1C  
                          u5641 48AA                            u6097 47F6                            u3961 5D4E  
                          u3881 3CFC                            u5721 40CA                            u4841 49FE  
                          u5801 2F32                            u5561 5584                            u4930 2B76  
                          u3970 1EF2                            u4738 3600                            u4690 35B6  
                          u4658 3534                            u5490 4F32                            u5650 48BC  
                          u5570 47CE                            u3890 3DA4                            u4770 5A40  
                          u5730 40E0                            u4850 4A2C                            u5810 2F98  
                          u4931 2B72                            u3971 1EEE                            u6507 3614  
                          u4691 35AE                            u6427 340A                            u6347 5C54  
                          u6267 5506                            u6187 4ABE                            u5491 4F2E  
                          u5651 48B8                            u5571 47CA                            u3891 3DA0  
                          u4771 5A3C                            u5731 40DC                            u4851 4A28  
                          u5811 2F94                            u4940 2BEC                            u4860 2A6E  
                          u3980 1F04                            u4588 3476                            u5660 48E0  
                          u5628 486A                            u5580 47DC                            u4780 5A56  
                          u5740 4128                            u5820 2FFA                            u4941 2BE8  
                          u4861 2A6A                            u3981 1F00                            u6517 364A  
                          u6437 3442                            u6357 5C74                            u6277 535A  
                          u6197 4B06                            u5661 48DC                            u5581 47D8  
                          u4781 5A52                            u5741 4124                            u5821 2FF6  
                          u4950 2C0E                            u4870 2A80                            u3990 1F14  
                          u4758 3636                            u5590 4810                            u5750 416E  
                          u5670 4000                            u4790 4942                            u5830 305C  
                          u6527 5CD4                            u4951 2C0A                            u4871 2A7C  
                          u3991 1F10                            u6447 348C                            u6367 5C94  
                          u6287 38A8                            u5591 480C                            u5751 416A  
                          u5671 3FFC                            u4791 493E                            u5831 3058  
                          u4960 2C38                            u4880 2A90                            u4688 3582  
                          u5680 4020                            u5840 30BE                            u5760 2E00  
                          u6537 5B4E                            u4961 2C34                            u4881 2A8C  
                          u6457 34C4                            u6377 5CB4                            u6297 38C4  
                          u5681 401C                            u5841 30BA                            u5761 2DFC  
                          u4970 2C5C                            u4890 2AD4                            u5690 4046  
                          u5770 2E10                            u5850 3734                            u4971 2C58  
                          u4891 2AD0                            u6467 3512                            u6387 4BBA  
                          u5691 4042                            u5771 2E0C                            u5907 37FE  
                          u5851 3730                            u4980 2C72                            u5780 2E72  
                          u5860 3764                            u4981 2C6E                            u6477 354E  
                          u6397 4BDE                            u5781 2E6E                            u5917 5526  
                          u5861 3760                            u4990 2C90                            u5790 2ED4  
                          u5870 37C4                            u4991 2C8C                            u6487 3596  
                          u5791 2ED0                            u5927 555C                            u5871 37C0  
                          u5880 3868                            u6497 35CC                            u5937 272A  
                          u5881 3864                            u5947 4990                            u5957 49E4  
                          u5967 4A0C                            u5977 4A36                            u5987 4148  
                          u5997 516A                            abs@a 0013                            _dbuf 0146  
                          _main 366E                            _dtoa 30DE                turning_action@mL 0034  
              turning_action@mR 0036                            _prec 00FA                            _nout 013E  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 5458                            prodh 000FF4  
                          prodl 000FF3                            start 0030                    main@accident 0175  
                ?_color_display 0058                   test_action@mL 002C                   test_action@mR 002E  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 5764                 __end_of_HighISR 0030  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 464A  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1ED8                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 47AE                 __end_of___fldiv 2DEE                 __end_of___awdiv 5458  
               __end_of___flneg 5AD0                 __end_of___flmul 2302                 __end_of___flsub 589A  
               __end_of___fltol 4DB6                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5CA4                           _LED_C 5CC4                           _LED_G 5C84  
                         _LED_R 5C44                           i2l512 002C                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5D58      __end_of_I2C_2_Master_Start 5D8E         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5D64                 __end_of_compare 5A5E                    compare@lower 006A  
                         _flags 00FC                           _color 0144                    compare@upper 006E  
                         _fputc 507A                           _fputs 589A                           _setup 47AE  
                         pad@fp 0011                           _width 0140                           _putch 5D90  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00EE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5A98                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 5714                color_display@buf 0079  
       __end_of_color_read_Blue 5804           _I2C_2_Master_RepStart 5D70               _calibration_motor 4EBA  
               ?_color_read_Red 0005                 __initialization 59A4                   short_burst@mL 0020  
                 short_burst@mR 0022              ?_calibration_motor 0032                    __end_of_main 3890  
                  __end_of_dtoa 33C2                   main@amb_light 016E            __end_of_detect_color 1A18  
                  __end_of_stop 5516          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
           ??_calibration_motor 0036                          ??_main 00F6                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4FA8                    turn45@i_1334 0027  
                  turn45@i_1336 0029                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_setup 0078  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5430 000A                          i2l5432 001A  
                        i2l5434 0022                          i2l5436 0028                       ??_HighISR 0001  
      __end_of_color_click_init 5B6E                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A       __end_of_calibration_motor 4FA8                __end_of___xxtofl 3FD8  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 4DB6                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5C1E                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 26B0  
                 compare@result 0070                          _memory 0100                          clear_0 59C2  
              ___awdiv@quotient 000D                          _motorL 0131                          _motorR 0128  
                        isa$std 000001                          pad@buf 0013                          _turn45 4188  
                        _roundf 2302                          dtoa@fp 001C                          _strlen 5AD0  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5B3A  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 5664                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                ??_turning_action 0038                    ?_test_action 002C  
                     ??_sprintf 0058                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                   main@stop_time 0173                      __accesstop 0060  
       __end_of__initialization 59D2                   verify_color@m 0092                   verify_color@w 0094  
      __end_of_color_read_Clear 5854                      ___flneg@f1 0001        __end_of_color_read_Green 57B4  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5CC4                   __end_of_LED_C 5CE4                   __end_of_LED_G 5CA4  
                 __end_of_LED_R 5C64                ?_color_read_Blue 0005                 _Interrupts_init 5D64  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4906                    __pidataBANK0 5D8E  
         _distance_measure$2950 0074                   __end_of_fputc 5144               detect_color@color 0089  
                 __end_of_fputs 58DE                   __end_of_setup 4906                   __end_of_putch 5D92  
                 __end_of_toint 0E05             __end_of_Timer0_init 5D40                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A              ??_distance_measure 0070                         ??_fputc 0005  
                       ??_fputs 000E                         ??_setup 0080                         ??_putch 0001  
                    __pbssBANK0 00FA                      __pbssBANK1 0100             calibration_motor@mL 0032  
           calibration_motor@mR 0034                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 5CE4                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_goback 002C                         ?_turn45 0020                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5C64  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E                    _detect_color 0E14  
 __end_of_color_data_collection 44C2         __end_of_Interrupts_init 5D70          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5D04  
            _I2C_2_Master_Start 5D84                      _initUSART4 5D04              _I2C_2_Master_Write 5D58  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 00F2  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 5D22  
       sendStringSerial4@string 0002                         ___aodiv 44C2                         ___fladd 1A18  
                       ___aomod 464A                         ___fldiv 2A54                         ___awdiv 5394  
                       ___flneg 5A98                         ___flmul 1ED8                         ___flsub 5854  
                       ___fltol 4CAE             ?_I2C_2_Master_Start 0001        fullSpeedBack@instruction 0024  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 59A4                         __ramtop 0E00  
                    _read_color 5664                         __ptext0 366E                         __ptext1 5516  
                       __ptext2 2DEE                         __ptext3 26B0                         __ptext4 4906  
                       __ptext5 3FD8                         __ptext6 5144                         __ptext7 0E14  
                       __ptext8 5A24                         __ptext9 432C                         _compare 5A24  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
           turning_action@color 0038                       _T2HLTbits 000FBE                         _lroundf 5A5E  
                       goback@i 0032          distance_measure@CC_amb 0078                         main@amb 0166  
        distance_measure@CG_amb 0072                         _sprintf 56C2                         main@rgb 0176  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 59D2  
            setMotorPWM@PWMduty 0018                         fputc@fp 0003           __end_of_test_function 4188  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 00EA  
               test_function@mR 00EC                 ??_fullSpeedBack 0025                      ??_pin_init 0001  
            ??_color_click_init 0005                         setup@mL 007C               __end_of_vfpfcnvrt 3E24  
                       setup@mR 007E                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       turn45@i 002B                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                main@start_time 0171                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5962                 turn45@direction 0025  __end_of_initDCmotors_parameter 507A  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0092           __end_of_color_display 5602                      main@motorL 019A  
                    main@motorR 01A3     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 007F                  detect_color@BC 007B                  detect_color@BG 008C  
                detect_color@GB 0083                  detect_color@GG 0087                  detect_color@BR 0085  
                detect_color@GR 007D                  detect_color@RB 0081                  detect_color@RG 0079  
                detect_color@RR 008A           __end_of_color_predict 5BCC                  __end_of___flge 4EBA  
                _fullSpeedAhead 52D0                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5C44                     ?_read_color 000C  
                __end_of_goback 2A54                  __end_of_turn45 432C                  __end_of_roundf 26B0  
                __end_of_strlen 5B06             color_read_Clear@tmp 000A             start_initialization 59A4  
                   __end_of_abs 5A24                     __end_of_pad 52D0                 turn45@turn_time 0024  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 59A4                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 5394  
                      ??___flge 0009                        ??___wmul 0005                        ??_goback 0030  
                   __pdataBANK0 00FE                        ??_turn45 0026                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 0166  
              ___aodiv@dividend 0001                        ?_HighISR 0001                       _dtoa$2621 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                     _centisecond 0142  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 5BF6               _I2C_2_Master_Init 5BCC  
             _I2C_2_Master_Read 5920               _I2C_2_Master_Stop 5D7A          toggle_light@toggletime 0001  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 5B6E  
         _color_data_collection 432C             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u589_40 001A  
                      i2u589_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0145                       _vfpfcnvrt 3C6E                      setup@white 0078  
     __end_of_I2C_2_Master_Idle 5C1E            __end_of_toggle_light 366E       __end_of_I2C_2_Master_Init 5BF6  
     __end_of_I2C_2_Master_Read 5962               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5D84  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5592  
        test_function@amb_light 00F0                       main@white 017E               ??_color_read_Blue 0007  
                 detect_color@m 0071                   detect_color@w 0073                   ??_test_action 0030  
               _calibrate_white 3890       __end_of_sendStringSerial4 5B9E                   ??_short_burst 0024  
             _amb_light_measure 4B86   __end_of_I2C_2_Master_RepStart 5D7A              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3C6E                      roundf@F527 013A                _distance_measure 5144  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 4A58                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                        ___xxtofl 3E24  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5D22  
                      __ptext10 5664                        __ptext11 5B9E                        __ptext20 507A  
                      __ptext12 5592                        __ptext21 5D90                        __ptext13 56C2  
                      __ptext30 4A58                        __ptext22 59E4                        __ptext14 5602  
                      __ptext31 4188                        __ptext23 464A                        __ptext15 3C6E  
                      __ptext40 57B4                        __ptext32 5458                        __ptext24 44C2  
                      __ptext16 30DE                        __ptext41 5C44                        __ptext33 52D0  
                      __ptext25 5B6E                        __ptext17 520A                        __ptext50 1A18  
                      __ptext42 5C64                        __ptext34 3A9A                        __ptext26 5D40  
                      __ptext18 5AD0                        __ptext51 5A98                        __ptext43 5C84  
                      __ptext35 5C1E                        __ptext27 58DE                        __ptext19 589A  
                      __ptext60 5CC4                        __ptext52 1ED8                        __ptext44 5CA4  
                      __ptext36 5394                        __ptext28 47AE                        __ptext61 5B06  
                      __ptext53 4DB6                        __ptext45 4B86                        __ptext37 3890  
                      __ptext29 4EBA                        __ptext70 5BF6                        __ptext62 5D04  
                      __ptext54 4CAE                        __ptext46 33C2                        __ptext38 5714  
                      __ptext71 5BCC                        __ptext63 4FA8                        __ptext55 5804  
                      __ptext47 5A5E                        __ptext39 5764                        __ptext72 5D22  
                      __ptext64 5962                        __ptext56 5D70                        __ptext48 2302  
                      __ptext73 5D64                        __ptext65 5B3A                        __ptext57 5920  
                      __ptext49 5854                        __ptext66 5CE4                        __ptext58 3E24  
                      __ptext67 5D58                        __ptext59 2A54                        __ptext68 5D7A  
                      __ptext69 5D84       __end_of_amb_light_measure 4CAE                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A          test_function@test_code 00F5  
           __end_of_test_action 4B86              __end_of_read_color 56C2                        _pin_init 5B06  
                _turning_action 2DEE             __end_of_short_burst 5920                        isa$xinst 000000  
          distance_measure@stop 007C                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FE                        goback@mL 002C                        goback@mR 002E  
                      _vfprintf 5602                ___aomod@dividend 0001         __end_of_calibrate_white 3A9A  
                    _INTCONbits 000FF2                     _setMotorPWM 3A9A                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C          __end_of_turning_action 30DE                ??_fullSpeedAhead 001E  
                 _test_function 3FD8                  setup@amb_light 0082                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                        setup@amb 007A                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                        turn45@mL 0020  
                      turn45@mR 0022                _color_click_init 5B3A                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2949 008E                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     _test_action 4A58                   ___fladd@signs 000D  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 5D40  
                   _short_burst 58DE                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                 ?_turning_action 0034                    _toggle_light 33C2  
                  ___aomod@sign 0012                    _verify_color 5516                     _roundf$2951 004F  
                   _roundf$2952 0049                   _color_display 5592                 main@stop_signal 0170  
