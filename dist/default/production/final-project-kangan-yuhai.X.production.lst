

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Mar 13 12:06:12 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.35
   102                           ; Generated 05/05/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F67K40 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataBANK0
   138  005896                     __pidataBANK0:
   139                           	callstack 0
   140                           
   141                           ;initializer for _SENSITIVITY
   142  005896  0A                 	db	10
   143                           
   144                           	psect	idataBANK1
   145  005892                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _CALIBRATION_180
   149  005892  14                 	db	20
   150                           
   151                           ;initializer for _CALIBRATION_135
   152  005893  0A                 	db	10
   153                           
   154                           	psect	smallconst
   155  000E00                     __psmallconst:
   156                           	callstack 0
   157  000E00  00                 	db	0
   158  000E01  0000               	dw	0
   159  000E03  4B00               	dw	19200
   160  000E05                     __end_of_toint:
   161                           	callstack 0
   162  0000                     _TX4REG	set	3812
   163  0000                     _RC4STAbits	set	3815
   164  0000                     _SP4BRGH	set	3814
   165  0000                     _LATEbits	set	3965
   166  0000                     _TRISGbits	set	3975
   167  0000                     _TRISEbits	set	3973
   168  0000                     _LATGbits	set	3967
   169  0000                     _LATFbits	set	3966
   170  0000                     _TRISFbits	set	3974
   171  0000                     _SSP2CON2bits	set	3802
   172  0000                     _LATG	set	3967
   173  0000                     _LATE	set	3965
   174  0000                     _RX4PPS	set	3605
   175  0000                     _SSP2CLKPPS	set	3612
   176  0000                     _SSP2DATPPS	set	3613
   177  0000                     _ANSELDbits	set	3751
   178  0000                     _SSP2ADD	set	3798
   179  0000                     _SSP2CON1bits	set	3801
   180  0000                     _LATAbits	set	3961
   181  0000                     _LATDbits	set	3964
   182  0000                     _LATHbits	set	3968
   183  0000                     _TRISDbits	set	3972
   184  0000                     _TRISHbits	set	3976
   185  0000                     _PORTFbits	set	3982
   186  0000                     _T2PR	set	4028
   187  0000                     _T2CONbits	set	4029
   188  0000                     _PWM7DCH	set	4000
   189  0000                     _PWM6DCH	set	4003
   190  0000                     _TRISAbits	set	3969
   191  0000                     _TRISCbits	set	3971
   192  0000                     _LATCbits	set	3963
   193  0000                     _RC4REG	set	3811
   194  0000                     _SP4BRGL	set	3813
   195  0000                     _TX4STAbits	set	3816
   196  0000                     _BAUD4CONbits	set	3817
   197  0000                     _SSP2CON2	set	3802
   198  0000                     _SSP2STAT	set	3800
   199  0000                     _ANSELFbits	set	3764
   200  0000                     _SSP2BUF	set	3797
   201  0000                     _PIE0bits	set	3625
   202  0000                     _PIE4bits	set	3629
   203  0000                     _PIR4bits	set	3639
   204  0000                     _RC0PPS	set	3682
   205  0000                     _RC7PPS	set	3689
   206  0000                     _RD5PPS	set	3695
   207  0000                     _RE2PPS	set	3700
   208  0000                     _RD6PPS	set	3696
   209  0000                     _TMR0L	set	4051
   210  0000                     _TMR0H	set	4052
   211  0000                     _T0CON0bits	set	4053
   212  0000                     _T2CLKCONbits	set	4031
   213  0000                     _T2HLTbits	set	4030
   214  0000                     _PWM6CONbits	set	4004
   215  0000                     _PWM7CONbits	set	4001
   216  0000                     _PIR0bits	set	3635
   217  0000                     _T0CON1bits	set	4054
   218  0000                     _INTCONbits	set	4082
   219  000E05                     STR_1:
   220  000E05  25                 	db	37
   221  000E06  64                 	db	100	;'d'
   222  000E07  09                 	db	9
   223  000E08  25                 	db	37
   224  000E09  64                 	db	100	;'d'
   225  000E0A  09                 	db	9
   226  000E0B  25                 	db	37
   227  000E0C  64                 	db	100	;'d'
   228  000E0D  09                 	db	9
   229  000E0E  25                 	db	37
   230  000E0F  64                 	db	100	;'d'
   231  000E10  0D                 	db	13
   232  000E11  0A                 	db	10
   233  000E12  00                 	db	0
   234  000E13  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           ; #config settings
   237                           
   238                           	psect	cinit
   239  005100                     __pcinit:
   240                           	callstack 0
   241  005100                     start_initialization:
   242                           	callstack 0
   243  005100                     __initialization:
   244                           	callstack 0
   245                           
   246                           ; Initialize objects allocated to BANK1 (2 bytes)
   247                           ; load TBLPTR registers with __pidataBANK1
   248  005100  0E92               	movlw	low __pidataBANK1
   249  005102  6EF6               	movwf	tblptrl,c
   250  005104  0E58               	movlw	high __pidataBANK1
   251  005106  6EF7               	movwf	tblptrh,c
   252  005108  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   253  00510A  6EF8               	movwf	tblptru,c
   254  00510C  0009               	tblrd		*+	;fetch initializer
   255  00510E  CFF5 F1C6          	movff	tablat,__pdataBANK1
   256  005112  0009               	tblrd		*+	;fetch initializer
   257  005114  CFF5 F1C7          	movff	tablat,__pdataBANK1+1
   258                           
   259                           ; Initialize objects allocated to BANK0 (1 bytes)
   260                           ; load TBLPTR registers with __pidataBANK0
   261  005118  0E96               	movlw	low __pidataBANK0
   262  00511A  6EF6               	movwf	tblptrl,c
   263  00511C  0E58               	movlw	high __pidataBANK0
   264  00511E  6EF7               	movwf	tblptrh,c
   265  005120  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   266  005122  6EF8               	movwf	tblptru,c
   267  005124  0009               	tblrd		*+	;fetch initializer
   268  005126  CFF5 F0FE          	movff	tablat,__pdataBANK0
   269                           
   270                           ; Clear objects allocated to BANK2 (60 bytes)
   271  00512A  EE02  F000         	lfsr	0,__pbssBANK2
   272  00512E  0E3C               	movlw	60
   273  005130                     clear_0:
   274  005130  6AEE               	clrf	postinc0,c
   275  005132  06E8               	decf	wreg,f,c
   276  005134  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to BANK1 (131 bytes)
   279  005136  EE01  F000         	lfsr	0,__pbssBANK1
   280  00513A  0E83               	movlw	131
   281  00513C                     clear_1:
   282  00513C  6AEE               	clrf	postinc0,c
   283  00513E  06E8               	decf	wreg,f,c
   284  005140  E1FD               	bnz	clear_1
   285                           
   286                           ; Clear objects allocated to BANK0 (3 bytes)
   287  005142  0100               	movlb	0
   288  005144  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
   289  005146  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   290  005148  6BFB               	clrf	__pbssBANK0& (0+255),b
   291                           
   292                           ; Clear objects allocated to COMRAM (2 bytes)
   293  00514A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   294  00514C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   295  00514E                     end_of_initialization:
   296                           	callstack 0
   297  00514E                     __end_of__initialization:
   298                           	callstack 0
   299  00514E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  005150  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301  005152  0E00               	movlw	low (__Lsmallconst shr (0+16))
   302  005154  6EF8               	movwf	tblptru,c
   303  005156  0E0E               	movlw	high __Lsmallconst
   304  005158  6EF7               	movwf	tblptrh,c
   305  00515A  0100               	movlb	0
   306  00515C  EF84  F022         	goto	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMRAM
   309  00005A                     __pbssCOMRAM:
   310                           	callstack 0
   311  00005A                     _array_index:
   312                           	callstack 0
   313  00005A                     	ds	1
   314  00005B                     _TxBufWriteCnt:
   315                           	callstack 0
   316  00005B                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319  0000FB                     __pbssBANK0:
   320                           	callstack 0
   321  0000FB                     _TxBufReadCnt:
   322                           	callstack 0
   323  0000FB                     	ds	1
   324  0000FC                     _RxBufReadCnt:
   325                           	callstack 0
   326  0000FC                     	ds	1
   327  0000FD                     _RxBufWriteCnt:
   328                           	callstack 0
   329  0000FD                     	ds	1
   330                           
   331                           	psect	dataBANK0
   332  0000FE                     __pdataBANK0:
   333                           	callstack 0
   334  0000FE                     _SENSITIVITY:
   335                           	callstack 0
   336  0000FE                     	ds	1
   337                           
   338                           	psect	bssBANK1
   339  000100                     __pbssBANK1:
   340                           	callstack 0
   341  000100                     _memory:
   342                           	callstack 0
   343  000100                     	ds	40
   344  000128                     _EUSART4RXbuf:
   345                           	callstack 0
   346  000128                     	ds	20
   347  00013C                     _motorR:
   348                           	callstack 0
   349  00013C                     	ds	10
   350  000146                     _motorL:
   351                           	callstack 0
   352  000146                     	ds	10
   353  000150                     roundf@F527:
   354                           	callstack 0
   355  000150                     	ds	4
   356  000154                     _nout:
   357                           	callstack 0
   358  000154                     	ds	2
   359  000156                     _width:
   360                           	callstack 0
   361  000156                     	ds	2
   362  000158                     _prec:
   363                           	callstack 0
   364  000158                     	ds	2
   365  00015A                     _flags:
   366                           	callstack 0
   367  00015A                     	ds	2
   368  00015C                     _stop_move:
   369                           	callstack 0
   370  00015C                     	ds	2
   371  00015E                     _start_move:
   372                           	callstack 0
   373  00015E                     	ds	2
   374  000160                     _second:
   375                           	callstack 0
   376  000160                     	ds	2
   377  000162                     _color:
   378                           	callstack 0
   379  000162                     	ds	1
   380  000163                     _dbuf:
   381                           	callstack 0
   382  000163                     	ds	32
   383                           
   384                           	psect	dataBANK1
   385  0001C6                     __pdataBANK1:
   386                           	callstack 0
   387  0001C6                     _CALIBRATION_180:
   388                           	callstack 0
   389  0001C6                     	ds	1
   390  0001C7                     _CALIBRATION_135:
   391                           	callstack 0
   392  0001C7                     	ds	1
   393                           
   394                           	psect	bssBANK2
   395  000200                     __pbssBANK2:
   396                           	callstack 0
   397  000200                     _EUSART4TXbuf:
   398                           	callstack 0
   399  000200                     	ds	60
   400                           
   401                           	psect	cstackBANK1
   402  000183                     __pcstackBANK1:
   403                           	callstack 0
   404  000183                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x0
   407  000183                     	ds	2
   408  000185                     main@amb:
   409                           	callstack 0
   410                           
   411                           ; 8 bytes @ 0x2
   412  000185                     	ds	8
   413  00018D                     main@amb_light:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  00018D                     	ds	2
   418  00018F                     main@stop_signal:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422  00018F                     	ds	1
   423  000190                     main@rgb:
   424                           	callstack 0
   425                           
   426                           ; 8 bytes @ 0xD
   427  000190                     	ds	8
   428  000198                     main@white:
   429                           	callstack 0
   430                           
   431                           ; 26 bytes @ 0x15
   432  000198                     	ds	26
   433  0001B2                     main@motorL:
   434                           	callstack 0
   435                           
   436                           ; 10 bytes @ 0x2F
   437  0001B2                     	ds	10
   438  0001BC                     main@motorR:
   439                           	callstack 0
   440                           
   441                           ; 10 bytes @ 0x39
   442  0001BC                     	ds	10
   443                           
   444                           	psect	cstackBANK0
   445  000060                     __pcstackBANK0:
   446                           	callstack 0
   447  000060                     ?_sprintf:
   448                           	callstack 0
   449  000060                     sprintf@s:
   450                           	callstack 0
   451  000060                     _roundf$3268:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x0
   455  000060                     	ds	2
   456  000062                     sprintf@fmt:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460  000062                     	ds	2
   461  000064                     roundf@e:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465  000064                     	ds	2
   466  000066                     _roundf$3267:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x6
   470  000066                     	ds	4
   471  00006A                     roundf@u:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0xA
   475  00006A                     	ds	2
   476  00006C                     sprintf@ap:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xC
   480  00006C                     	ds	2
   481  00006E                     roundf@y:
   482                           	callstack 0
   483  00006E                     sprintf@f:
   484                           	callstack 0
   485                           
   486                           ; 11 bytes @ 0xE
   487  00006E                     	ds	4
   488  000072                     ?___fltol:
   489                           	callstack 0
   490  000072                     ___fltol@f1:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x12
   494  000072                     	ds	4
   495  000076                     ?_lroundf:
   496                           	callstack 0
   497  000076                     lroundf@x:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x16
   501  000076                     	ds	3
   502  000079                     color_display@m:
   503                           	callstack 0
   504  000079                     color_predict@buf:
   505                           	callstack 0
   506                           
   507                           ; 100 bytes @ 0x19
   508  000079                     	ds	1
   509  00007A                     ?_amb_light_measure:
   510                           	callstack 0
   511  00007A                     compare@lower:
   512                           	callstack 0
   513  00007A                     amb_light_measure@amb:
   514                           	callstack 0
   515  00007A                     distance_measure@mL:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x1A
   519  00007A                     	ds	1
   520  00007B                     color_display@buf:
   521                           	callstack 0
   522                           
   523                           ; 100 bytes @ 0x1B
   524  00007B                     	ds	1
   525  00007C                     compare@value2compare:
   526                           	callstack 0
   527  00007C                     amb_light_measure@upper_bound:
   528                           	callstack 0
   529  00007C                     distance_measure@mR:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1C
   533  00007C                     	ds	2
   534  00007E                     compare@upper:
   535                           	callstack 0
   536  00007E                     amb_light_measure@CC_amb_ave:
   537                           	callstack 0
   538  00007E                     distance_measure@amb_light:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1E
   542  00007E                     	ds	2
   543  000080                     detect_color@m:
   544                           	callstack 0
   545  000080                     amb_light_measure@CC_amb_1:
   546                           	callstack 0
   547  000080                     distance_measure@CG_amb:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x20
   551  000080                     	ds	2
   552  000082                     detect_color@w:
   553                           	callstack 0
   554  000082                     amb_light_measure@CC_amb_2:
   555                           	callstack 0
   556  000082                     _distance_measure$3266:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x22
   560  000082                     	ds	2
   561  000084                     detect_color@RB:
   562                           	callstack 0
   563  000084                     amb_light_measure@CC_amb_3:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x24
   567  000084                     	ds	2
   568  000086                     detect_color@GB:
   569                           	callstack 0
   570  000086                     distance_measure@CC_amb:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x26
   574  000086                     	ds	2
   575  000088                     detect_color@RG:
   576                           	callstack 0
   577  000088                     distance_measure@threshold:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x28
   581  000088                     	ds	2
   582  00008A                     distance_measure@stop:
   583                           	callstack 0
   584  00008A                     detect_color@GR:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x2A
   588  00008A                     	ds	2
   589  00008C                     detect_color@GG:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2C
   593  00008C                     	ds	2
   594  00008E                     detect_color@RR:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2E
   598  00008E                     	ds	2
   599  000090                     detect_color@BR:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x30
   603  000090                     	ds	2
   604  000092                     detect_color@BB:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608  000092                     	ds	2
   609  000094                     detect_color@color:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x34
   613  000094                     	ds	1
   614  000095                     detect_color@BG:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x35
   618  000095                     	ds	2
   619  000097                     _detect_color$3265:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x37
   623  000097                     	ds	4
   624  00009B                     verify_color@m:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x3B
   628  00009B                     	ds	2
   629  00009D                     verify_color@w:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x3D
   633  00009D                     	ds	2
   634  00009F                     verify_color@color3:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x3F
   638  00009F                     	ds	2
   639  0000A1                     verify_color@color2:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x41
   643  0000A1                     	ds	2
   644  0000A3                     verify_color@color:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x43
   648  0000A3                     	ds	58
   649  0000DD                     color_predict@color:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x7D
   653  0000DD                     	ds	2
   654  0000DF                     color_data_collection@m:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x7F
   658  0000DF                     	ds	2
   659  0000E1                     ??_color_data_collection:
   660                           
   661                           ; 1 bytes @ 0x81
   662  0000E1                     	ds	2
   663  0000E3                     color_data_collection@i:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x83
   667  0000E3                     	ds	2
   668  0000E5                     color_data_collection@j:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x85
   672  0000E5                     	ds	2
   673  0000E7                     color_data_collection@k:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x87
   677  0000E7                     	ds	2
   678  0000E9                     color_data_collection@x:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x89
   682  0000E9                     	ds	2
   683  0000EB                     test_function@m:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8B
   687  0000EB                     	ds	2
   688  0000ED                     test_function@w:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x8D
   692  0000ED                     	ds	2
   693  0000EF                     test_function@mL:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x8F
   697  0000EF                     	ds	2
   698  0000F1                     test_function@mR:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x91
   702  0000F1                     	ds	2
   703  0000F3                     ??_test_function:
   704                           
   705                           ; 1 bytes @ 0x93
   706  0000F3                     	ds	2
   707  0000F5                     test_function@amb_light:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x95
   711  0000F5                     	ds	2
   712  0000F7                     test_function@complete:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x97
   716  0000F7                     	ds	1
   717  0000F8                     test_function@color:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x98
   721  0000F8                     	ds	1
   722  0000F9                     test_function@stop_signal:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x99
   726  0000F9                     	ds	1
   727  0000FA                     test_function@test_code:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x9A
   731  0000FA                     	ds	1
   732                           
   733                           	psect	cstackCOMRAM
   734  000001                     __pcstackCOMRAM:
   735                           	callstack 0
   736  000001                     ??_LowISR:
   737  000001                     
   738                           ; 1 bytes @ 0x0
   739  000001                     	ds	2
   740  000003                     ??_LED_OFF:
   741  000003                     ??_LED_R:
   742  000003                     ??_LED_C:
   743  000003                     ??_LED_B:
   744  000003                     ??_LED_G:
   745  000003                     ??_I2C_2_Master_Idle:
   746  000003                     ?_strlen:
   747                           	callstack 0
   748  000003                     ?___wmul:
   749                           	callstack 0
   750  000003                     ?___fladd:
   751                           	callstack 0
   752  000003                     ?___flneg:
   753                           	callstack 0
   754  000003                     ?___xxtofl:
   755                           	callstack 0
   756  000003                     ?___aodiv:
   757                           	callstack 0
   758  000003                     ?___aomod:
   759                           	callstack 0
   760  000003                     toggle_light@toggletime:
   761                           	callstack 0
   762  000003                     sendCharSerial4@charToSend:
   763                           	callstack 0
   764  000003                     initDCmotorsPWM@PWMperiod:
   765                           	callstack 0
   766  000003                     initDCmotors_parameter@motorL:
   767                           	callstack 0
   768  000003                     ___wmul@multiplier:
   769                           	callstack 0
   770  000003                     fputc@c:
   771                           	callstack 0
   772  000003                     strlen@s:
   773                           	callstack 0
   774  000003                     ___flge@ff1:
   775                           	callstack 0
   776  000003                     ___flneg@f1:
   777                           	callstack 0
   778  000003                     ___fladd@b:
   779                           	callstack 0
   780  000003                     ___xxtofl@val:
   781                           	callstack 0
   782  000003                     ___aodiv@dividend:
   783                           	callstack 0
   784  000003                     ___aomod@dividend:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x2
   788  000003                     	ds	1
   789  000004                     ??_I2C_2_Master_Read:
   790  000004                     ??_toggle_light:
   791  000004                     I2C_2_Master_Write@data_byte:
   792                           	callstack 0
   793  000004                     sendStringSerial4@string:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x3
   797  000004                     	ds	1
   798  000005                     color_writetoaddr@value:
   799                           	callstack 0
   800  000005                     I2C_2_Master_Read@ack:
   801                           	callstack 0
   802  000005                     initDCmotors_parameter@motorR:
   803                           	callstack 0
   804  000005                     ___wmul@multiplicand:
   805                           	callstack 0
   806  000005                     fputc@fp:
   807                           	callstack 0
   808  000005                     strlen@a:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x4
   812  000005                     	ds	1
   813  000006                     toggle_light@i:
   814                           	callstack 0
   815  000006                     color_writetoaddr@address:
   816                           	callstack 0
   817  000006                     I2C_2_Master_Read@tmp:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x5
   821  000006                     	ds	1
   822  000007                     ??_fputc:
   823  000007                     ??_color_click_init:
   824  000007                     ??___xxtofl:
   825  000007                     ?_color_read_Red:
   826                           	callstack 0
   827  000007                     ?_color_read_Blue:
   828                           	callstack 0
   829  000007                     ?_color_read_Green:
   830                           	callstack 0
   831  000007                     ?_color_read_Clear:
   832                           	callstack 0
   833  000007                     toggle_light@lightnumber:
   834                           	callstack 0
   835  000007                     ___wmul@product:
   836                           	callstack 0
   837  000007                     ___flge@ff2:
   838                           	callstack 0
   839  000007                     ___fladd@a:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x6
   843  000007                     	ds	2
   844  000009                     ??_color_read_Red:
   845  000009                     ??_color_read_Blue:
   846  000009                     ??_color_read_Green:
   847  000009                     ??_color_read_Clear:
   848  000009                     ?___awdiv:
   849                           	callstack 0
   850  000009                     ___awdiv@dividend:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x8
   854  000009                     	ds	2
   855  00000B                     ??___fladd:
   856  00000B                     ??___flge:
   857  00000B                     ___xxtofl@sign:
   858                           	callstack 0
   859  00000B                     ___awdiv@divisor:
   860                           	callstack 0
   861  00000B                     ___aodiv@divisor:
   862                           	callstack 0
   863  00000B                     ___aomod@divisor:
   864                           	callstack 0
   865                           
   866                           ; 8 bytes @ 0xA
   867  00000B                     	ds	1
   868  00000C                     ___xxtofl@exp:
   869                           	callstack 0
   870  00000C                     color_read_Red@tmp:
   871                           	callstack 0
   872  00000C                     color_read_Blue@tmp:
   873                           	callstack 0
   874  00000C                     color_read_Green@tmp:
   875                           	callstack 0
   876  00000C                     color_read_Clear@tmp:
   877                           	callstack 0
   878  00000C                     fputs@s:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xB
   882  00000C                     	ds	1
   883  00000D                     ___awdiv@counter:
   884                           	callstack 0
   885  00000D                     ___xxtofl@arg:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0xC
   889  00000D                     	ds	1
   890  00000E                     ___awdiv@sign:
   891                           	callstack 0
   892  00000E                     read_color@m:
   893                           	callstack 0
   894  00000E                     calibrate_white@w:
   895                           	callstack 0
   896  00000E                     fputs@fp:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xD
   900  00000E                     	ds	1
   901  00000F                     ___fladd@signs:
   902                           	callstack 0
   903  00000F                     ___awdiv@quotient:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0xE
   907  00000F                     	ds	1
   908  000010                     ??_calibrate_white:
   909  000010                     ___fladd@aexp:
   910                           	callstack 0
   911  000010                     fputs@c:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0xF
   915  000010                     	ds	1
   916  000011                     ?___fldiv:
   917                           	callstack 0
   918  000011                     ___fladd@bexp:
   919                           	callstack 0
   920  000011                     setMotorPWM@m:
   921                           	callstack 0
   922  000011                     fputs@i:
   923                           	callstack 0
   924  000011                     ___fldiv@b:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x10
   928  000011                     	ds	1
   929  000012                     ___fladd@grs:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x11
   933  000012                     	ds	1
   934  000013                     ??_setMotorPWM:
   935  000013                     ?_pad:
   936                           	callstack 0
   937  000013                     ?___flsub:
   938                           	callstack 0
   939  000013                     ___aodiv@counter:
   940                           	callstack 0
   941  000013                     ___aomod@counter:
   942                           	callstack 0
   943  000013                     pad@fp:
   944                           	callstack 0
   945  000013                     ___flsub@b:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x12
   949  000013                     	ds	1
   950  000014                     ___aodiv@sign:
   951                           	callstack 0
   952  000014                     ___aomod@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x13
   956  000014                     	ds	1
   957  000015                     ?_abs:
   958                           	callstack 0
   959  000015                     pad@buf:
   960                           	callstack 0
   961  000015                     abs@a:
   962                           	callstack 0
   963  000015                     ___fldiv@a:
   964                           	callstack 0
   965  000015                     ___aodiv@quotient:
   966                           	callstack 0
   967                           
   968                           ; 8 bytes @ 0x14
   969  000015                     	ds	2
   970  000017                     ??_abs:
   971  000017                     pad@p:
   972                           	callstack 0
   973  000017                     ___flsub@a:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x16
   977  000017                     	ds	2
   978  000019                     ??___fldiv:
   979  000019                     ??_pad:
   980                           
   981                           ; 1 bytes @ 0x18
   982  000019                     	ds	1
   983  00001A                     setMotorPWM@PWMduty:
   984                           	callstack 0
   985  00001A                     pad@i:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x19
   989  00001A                     	ds	1
   990  00001B                     
   991                           ; 1 bytes @ 0x1A
   992  00001B                     	ds	1
   993  00001C                     stop@mL:
   994                           	callstack 0
   995  00001C                     fullSpeedAhead@mL:
   996                           	callstack 0
   997  00001C                     pad@w:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x1B
  1001  00001C                     	ds	1
  1002  00001D                     ___fldiv@rem:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x1C
  1006  00001D                     	ds	1
  1007  00001E                     ?_dtoa:
  1008                           	callstack 0
  1009  00001E                     stop@mR:
  1010                           	callstack 0
  1011  00001E                     fullSpeedAhead@mR:
  1012                           	callstack 0
  1013  00001E                     dtoa@fp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x1D
  1017  00001E                     	ds	2
  1018  000020                     ??_stop:
  1019  000020                     ??_fullSpeedAhead:
  1020  000020                     dtoa@d:
  1021                           	callstack 0
  1022                           
  1023                           ; 8 bytes @ 0x1F
  1024  000020                     	ds	1
  1025  000021                     ___fldiv@sign:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x20
  1029  000021                     	ds	1
  1030  000022                     turnLeft@mL:
  1031                           	callstack 0
  1032  000022                     turnRight@mL:
  1033                           	callstack 0
  1034  000022                     fullSpeedBack@mL:
  1035                           	callstack 0
  1036  000022                     ___fldiv@new_exp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x21
  1040  000022                     	ds	2
  1041  000024                     turnLeft@mR:
  1042                           	callstack 0
  1043  000024                     turnRight@mR:
  1044                           	callstack 0
  1045  000024                     fullSpeedBack@mR:
  1046                           	callstack 0
  1047  000024                     ___fldiv@grs:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x23
  1051  000024                     	ds	2
  1052  000026                     ??_fullSpeedBack:
  1053  000026                     turnLeft@angle_left:
  1054                           	callstack 0
  1055  000026                     turnRight@angle_right:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x25
  1059  000026                     	ds	1
  1060  000027                     ??_turnLeft:
  1061  000027                     ??_turnRight:
  1062                           
  1063                           ; 1 bytes @ 0x26
  1064  000027                     	ds	1
  1065  000028                     ??_dtoa:
  1066  000028                     ___fldiv@bexp:
  1067                           	callstack 0
  1068  000028                     turnLeft@delay_135:
  1069                           	callstack 0
  1070  000028                     turnRight@delay_135:
  1071                           	callstack 0
  1072  000028                     short_reverse@mL:
  1073                           	callstack 0
  1074  000028                     reverse_square@mL:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x27
  1078  000028                     	ds	1
  1079  000029                     ___fldiv@aexp:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x28
  1083  000029                     	ds	1
  1084  00002A                     ?___flmul:
  1085                           	callstack 0
  1086  00002A                     turnLeft@delay_180:
  1087                           	callstack 0
  1088  00002A                     turnRight@delay_180:
  1089                           	callstack 0
  1090  00002A                     short_reverse@mR:
  1091                           	callstack 0
  1092  00002A                     reverse_square@mR:
  1093                           	callstack 0
  1094  00002A                     ___flmul@b:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x29
  1098  00002A                     	ds	2
  1099  00002C                     ??_short_reverse:
  1100  00002C                     ??_reverse_square:
  1101  00002C                     turnLeft@i:
  1102                           	callstack 0
  1103  00002C                     turnRight@i:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x2B
  1107  00002C                     	ds	2
  1108  00002E                     turnLeft@i_1332:
  1109                           	callstack 0
  1110  00002E                     turnRight@i_1357:
  1111                           	callstack 0
  1112  00002E                     ___flmul@a:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x2D
  1116  00002E                     	ds	2
  1117  000030                     turnLeft@i_1333:
  1118                           	callstack 0
  1119  000030                     turnRight@i_1358:
  1120                           	callstack 0
  1121  000030                     _dtoa$2897:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x2F
  1125  000030                     	ds	2
  1126  000032                     ??___flmul:
  1127  000032                     turnLeft@delay:
  1128                           	callstack 0
  1129  000032                     turnRight@delay:
  1130                           	callstack 0
  1131  000032                     dtoa@p:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x31
  1135  000032                     	ds	2
  1136  000034                     goback@mL:
  1137                           	callstack 0
  1138  000034                     dtoa@w:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x33
  1142  000034                     	ds	2
  1143  000036                     ___flmul@sign:
  1144                           	callstack 0
  1145  000036                     goback@mR:
  1146                           	callstack 0
  1147  000036                     dtoa@s:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x35
  1151  000036                     	ds	1
  1152  000037                     ___flmul@aexp:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x36
  1156  000037                     	ds	1
  1157  000038                     ??_goback:
  1158  000038                     ___flmul@grs:
  1159                           	callstack 0
  1160  000038                     dtoa@n:
  1161                           	callstack 0
  1162                           
  1163                           ; 8 bytes @ 0x37
  1164  000038                     	ds	2
  1165  00003A                     goback@i:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x39
  1169  00003A                     	ds	2
  1170  00003C                     ___flmul@bexp:
  1171                           	callstack 0
  1172  00003C                     action@mL:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x3B
  1176  00003C                     	ds	1
  1177  00003D                     ___flmul@prod:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x3C
  1181  00003D                     	ds	1
  1182  00003E                     action@mR:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x3D
  1186  00003E                     	ds	2
  1187  000040                     ??_action:
  1188  000040                     dtoa@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3F
  1192  000040                     	ds	1
  1193  000041                     ___flmul@temp:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x40
  1197  000041                     	ds	1
  1198  000042                     ?_vfpfcnvrt:
  1199                           	callstack 0
  1200  000042                     action@color:
  1201                           	callstack 0
  1202  000042                     vfpfcnvrt@fp:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x41
  1206  000042                     	ds	1
  1207  000043                     ?_roundf:
  1208                           	callstack 0
  1209  000043                     roundf@x:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x42
  1213  000043                     	ds	1
  1214  000044                     vfpfcnvrt@fmt:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x43
  1218  000044                     	ds	2
  1219  000046                     vfpfcnvrt@ap:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x45
  1223  000046                     	ds	1
  1224  000047                     ??_roundf:
  1225                           
  1226                           ; 1 bytes @ 0x46
  1227  000047                     	ds	1
  1228  000048                     ??_vfpfcnvrt:
  1229                           
  1230                           ; 1 bytes @ 0x47
  1231  000048                     	ds	2
  1232  00004A                     vfpfcnvrt@ll:
  1233                           	callstack 0
  1234                           
  1235                           ; 8 bytes @ 0x49
  1236  00004A                     	ds	1
  1237  00004B                     ??___fltol:
  1238                           
  1239                           ; 1 bytes @ 0x4A
  1240  00004B                     	ds	4
  1241  00004F                     ___fltol@sign1:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x4E
  1245  00004F                     	ds	1
  1246  000050                     ___fltol@exp1:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x4F
  1250  000050                     	ds	1
  1251  000051                     ??_amb_light_measure:
  1252  000051                     ??_distance_measure:
  1253  000051                     compare@result:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x50
  1257  000051                     	ds	1
  1258  000052                     ??_detect_color:
  1259  000052                     ?_vfprintf:
  1260                           	callstack 0
  1261  000052                     vfprintf@fp:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x51
  1265  000052                     	ds	2
  1266  000054                     vfprintf@fmt:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x53
  1270  000054                     	ds	2
  1271  000056                     ??_verify_color:
  1272  000056                     vfprintf@ap:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x55
  1276  000056                     	ds	2
  1277  000058                     vfprintf@cfmt:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x57
  1281  000058                     	ds	2
  1282  00005A                     
  1283                           ; 1 bytes @ 0x59
  1284 ;;
  1285 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1286 ;;
  1287 ;; *************** function _main *****************
  1288 ;; Defined at:
  1289 ;;		line 27 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  white          26   21[BANK1 ] struct white_card
  1294 ;;  motorR         10   57[BANK1 ] struct DC_motor
  1295 ;;  motorL         10   47[BANK1 ] struct DC_motor
  1296 ;;  rgb             8   13[BANK1 ] struct color_rgb
  1297 ;;  amb             8    2[BANK1 ] struct color_rgb
  1298 ;;  amb_light       2   10[BANK1 ] unsigned int 
  1299 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1312 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;Total ram usage:       67 bytes
  1314 ;; Hardware stack levels required when called: 13
  1315 ;; This function calls:
  1316 ;;		_I2C_2_Master_Init
  1317 ;;		_Interrupts_init
  1318 ;;		_Timer0_init
  1319 ;;		_action
  1320 ;;		_amb_light_measure
  1321 ;;		_buggylight_init
  1322 ;;		_calibrate_white
  1323 ;;		_color_click_init
  1324 ;;		_detect_color
  1325 ;;		_distance_measure
  1326 ;;		_fullSpeedAhead
  1327 ;;		_initDCmotorsPWM
  1328 ;;		_initDCmotors_parameter
  1329 ;;		_initUSART4
  1330 ;;		_pin_init
  1331 ;;		_stop
  1332 ;;		_test_function
  1333 ;;		_verify_color
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  004508                     __ptext0:
  1341                           	callstack 0
  1342  004508                     _main:
  1343                           	callstack 18
  1344  004508                     
  1345                           ;main.c: 28:     Interrupts_init();
  1346  004508  EC32  F02C         	call	_Interrupts_init	;wreg free
  1347  00450C                     
  1348                           ;main.c: 29:     Timer0_init();
  1349  00450C  EC06  F02C         	call	_Timer0_init	;wreg free
  1350  004510                     
  1351                           ;main.c: 30:     I2C_2_Master_Init();
  1352  004510  EC4B  F02B         	call	_I2C_2_Master_Init	;wreg free
  1353  004514                     
  1354                           ;main.c: 31:     color_click_init();
  1355  004514  EC02  F02B         	call	_color_click_init	;wreg free
  1356  004518                     
  1357                           ;main.c: 32:     initDCmotorsPWM(199);
  1358  004518  0E00               	movlw	0
  1359  00451A  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1360  00451C  0EC7               	movlw	199
  1361  00451E  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1362  004520  EC0E  F02A         	call	_initDCmotorsPWM	;wreg free
  1363  004524                     
  1364                           ;main.c: 33:     buggylight_init();
  1365  004524  EC21  F02C         	call	_buggylight_init	;wreg free
  1366  004528                     
  1367                           ;main.c: 34:     initUSART4();
  1368  004528  ECF7  F02B         	call	_initUSART4	;wreg free
  1369  00452C                     
  1370                           ;main.c: 36:     struct color_rgb rgb, amb;;main.c: 37:     struct white_card white;;mai
      +                          n.c: 41:     struct DC_motor motorL, motorR;;main.c: 42:     pin_init();
  1371  00452C  ECD7  F02B         	call	_pin_init	;wreg free
  1372  004530                     
  1373                           ;main.c: 43:     initDCmotors_parameter(&motorL, &motorR);
  1374  004530  0EB2               	movlw	low main@motorL
  1375  004532  6E03               	movwf	initDCmotors_parameter@motorL^0,c
  1376  004534  0E01               	movlw	high main@motorL
  1377  004536  6E04               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1378  004538  0EBC               	movlw	low main@motorR
  1379  00453A  6E05               	movwf	initDCmotors_parameter@motorR^0,c
  1380  00453C  0E01               	movlw	high main@motorR
  1381  00453E  6E06               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1382  004540  ECC2  F024         	call	_initDCmotors_parameter	;wreg free
  1383  004544                     
  1384                           ;main.c: 45:     unsigned char stop_signal = 0;
  1385  004544  0E00               	movlw	0
  1386  004546  0101               	movlb	1	; () banked
  1387  004548  6F8F               	movwf	main@stop_signal& (0+255),b
  1388  00454A                     
  1389                           ; BSR set to: 1
  1390                           ;main.c: 50:         calibrate_white(&white);
  1391  00454A  0E98               	movlw	low main@white
  1392  00454C  6E0E               	movwf	calibrate_white@w^0,c
  1393  00454E  0E01               	movlw	high main@white
  1394  004550  6E0F               	movwf	(calibrate_white@w+1)^0,c
  1395  004552  EC53  F01A         	call	_calibrate_white	;wreg free
  1396  004556                     
  1397                           ;main.c: 51:         amb_light = amb_light_measure(&amb);
  1398  004556  0E85               	movlw	low main@amb
  1399  004558  0100               	movlb	0	; () banked
  1400  00455A  6F7A               	movwf	amb_light_measure@amb& (0+255),b
  1401  00455C  0E01               	movlw	high main@amb
  1402  00455E  6F7B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1403  004560  EC28  F023         	call	_amb_light_measure	;wreg free
  1404  004564  C07A  F18D         	movff	?_amb_light_measure,main@amb_light
  1405  004568  C07B  F18E         	movff	?_amb_light_measure+1,main@amb_light+1
  1406  00456C                     l6398:
  1407                           
  1408                           ;main.c: 62:             T0CON0bits.T0EN=1;
  1409  00456C  8ED5               	bsf	213,7,c	;volatile
  1410  00456E                     
  1411                           ;main.c: 63:             start_move = second;
  1412  00456E  C160  F15E         	movff	_second,_start_move
  1413  004572  C161  F15F         	movff	_second+1,_start_move+1
  1414                           
  1415                           ;main.c: 64:             while (stop_signal == 0){
  1416  004576  EFD8  F022         	goto	l6406
  1417  00457A                     l6402:
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;main.c: 65:                 fullSpeedAhead(&motorL, &motorR);
  1421  00457A  0EB2               	movlw	low main@motorL
  1422  00457C  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1423  00457E  0E01               	movlw	high main@motorL
  1424  004580  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1425  004582  0EBC               	movlw	low main@motorR
  1426  004584  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1427  004586  0E01               	movlw	high main@motorR
  1428  004588  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1429  00458A  ECCD  F027         	call	_fullSpeedAhead	;wreg free
  1430  00458E                     
  1431                           ;main.c: 66:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1432  00458E  0EB2               	movlw	low main@motorL
  1433  004590  0100               	movlb	0	; () banked
  1434  004592  6F7A               	movwf	distance_measure@mL& (0+255),b
  1435  004594  0E01               	movlw	high main@motorL
  1436  004596  6F7B               	movwf	(distance_measure@mL+1)& (0+255),b
  1437  004598  0EBC               	movlw	low main@motorR
  1438  00459A  6F7C               	movwf	distance_measure@mR& (0+255),b
  1439  00459C  0E01               	movlw	high main@motorR
  1440  00459E  6F7D               	movwf	(distance_measure@mR+1)& (0+255),b
  1441  0045A0  C18D  F07E         	movff	main@amb_light,distance_measure@amb_light
  1442  0045A4  C18E  F07F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1443  0045A8  ECF3  F025         	call	_distance_measure	;wreg free
  1444  0045AC  0101               	movlb	1	; () banked
  1445  0045AE  6F8F               	movwf	main@stop_signal& (0+255),b
  1446  0045B0                     l6406:
  1447                           
  1448                           ;main.c: 64:             while (stop_signal == 0){
  1449  0045B0  0101               	movlb	1	; () banked
  1450  0045B2  518F               	movf	main@stop_signal& (0+255),w,b
  1451  0045B4  B4D8               	btfsc	status,2,c
  1452  0045B6  EFDF  F022         	goto	u6811
  1453  0045BA  EFE1  F022         	goto	u6810
  1454  0045BE                     u6811:
  1455  0045BE  EFBD  F022         	goto	l6402
  1456  0045C2                     u6810:
  1457  0045C2                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 68:             stop(&motorL, &motorR);
  1460  0045C2  0EB2               	movlw	low main@motorL
  1461  0045C4  6E1C               	movwf	stop@mL^0,c
  1462  0045C6  0E01               	movlw	high main@motorL
  1463  0045C8  6E1D               	movwf	(stop@mL+1)^0,c
  1464  0045CA  0EBC               	movlw	low main@motorR
  1465  0045CC  6E1E               	movwf	stop@mR^0,c
  1466  0045CE  0E01               	movlw	high main@motorR
  1467  0045D0  6E1F               	movwf	(stop@mR+1)^0,c
  1468  0045D2  EC17  F027         	call	_stop	;wreg free
  1469  0045D6                     
  1470                           ;main.c: 69:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1471  0045D6  0E52               	movlw	82
  1472  0045D8  0101               	movlb	1	; () banked
  1473  0045DA  6F84               	movwf	(??_main+1)& (0+255),b
  1474  0045DC  0E2B               	movlw	43
  1475  0045DE  6F83               	movwf	??_main& (0+255),b
  1476  0045E0  0E00               	movlw	0
  1477  0045E2                     u6827:
  1478  0045E2  2EE8               	decfsz	wreg,f,c
  1479  0045E4  D7FE               	bra	u6827
  1480  0045E6  2F83               	decfsz	??_main& (0+255),f,b
  1481  0045E8  D7FC               	bra	u6827
  1482  0045EA  2F84               	decfsz	(??_main+1)& (0+255),f,b
  1483  0045EC  D7FA               	bra	u6827
  1484  0045EE  F000               	nop	
  1485  0045F0                     
  1486                           ;main.c: 70:             color = detect_color(&rgb, &white);
  1487  0045F0  0E90               	movlw	low main@rgb
  1488  0045F2  0100               	movlb	0	; () banked
  1489  0045F4  6F80               	movwf	detect_color@m& (0+255),b
  1490  0045F6  0E01               	movlw	high main@rgb
  1491  0045F8  6F81               	movwf	(detect_color@m+1)& (0+255),b
  1492  0045FA  0E98               	movlw	low main@white
  1493  0045FC  6F82               	movwf	detect_color@w& (0+255),b
  1494  0045FE  0E01               	movlw	high main@white
  1495  004600  6F83               	movwf	(detect_color@w+1)& (0+255),b
  1496  004602  EC0A  F007         	call	_detect_color	;wreg free
  1497  004606  0101               	movlb	1	; () banked
  1498  004608  6F62               	movwf	_color& (0+255),b
  1499  00460A                     
  1500                           ; BSR set to: 1
  1501                           ;main.c: 71:             color = verify_color(color, &rgb, &white);
  1502  00460A  0E90               	movlw	low main@rgb
  1503  00460C  0100               	movlb	0	; () banked
  1504  00460E  6F9B               	movwf	verify_color@m& (0+255),b
  1505  004610  0E01               	movlw	high main@rgb
  1506  004612  6F9C               	movwf	(verify_color@m+1)& (0+255),b
  1507  004614  0E98               	movlw	low main@white
  1508  004616  6F9D               	movwf	verify_color@w& (0+255),b
  1509  004618  0E01               	movlw	high main@white
  1510  00461A  6F9E               	movwf	(verify_color@w+1)& (0+255),b
  1511  00461C  0101               	movlb	1	; () banked
  1512  00461E  5162               	movf	_color& (0+255),w,b
  1513  004620  EC75  F027         	call	_verify_color
  1514  004624  0101               	movlb	1	; () banked
  1515  004626  6F62               	movwf	_color& (0+255),b
  1516  004628                     
  1517                           ; BSR set to: 1
  1518                           ;main.c: 72:             action(color, &motorL, &motorR);
  1519  004628  0EB2               	movlw	low main@motorL
  1520  00462A  6E3C               	movwf	action@mL^0,c
  1521  00462C  0E01               	movlw	high main@motorL
  1522  00462E  6E3D               	movwf	(action@mL+1)^0,c
  1523  004630  0EBC               	movlw	low main@motorR
  1524  004632  6E3E               	movwf	action@mR^0,c
  1525  004634  0E01               	movlw	high main@motorR
  1526  004636  6E3F               	movwf	(action@mR+1)^0,c
  1527  004638  5162               	movf	_color& (0+255),w,b
  1528  00463A  ECC6  F014         	call	_action
  1529  00463E                     
  1530                           ;main.c: 73:             color = 0;
  1531  00463E  0E00               	movlw	0
  1532  004640  0101               	movlb	1	; () banked
  1533  004642  6F62               	movwf	_color& (0+255),b
  1534  004644                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 74:             stop_signal = 0;
  1537  004644  0E00               	movlw	0
  1538  004646  6F8F               	movwf	main@stop_signal& (0+255),b
  1539  004648  EFB6  F022         	goto	l6398
  1540  00464C  EF24  F000         	goto	start
  1541  004650                     __end_of_main:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _verify_color *****************
  1545 ;; Defined at:
  1546 ;;		line 358 in file "color.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  color           1    wreg     unsigned char 
  1549 ;;  m               2   59[BANK0 ] PTR struct color_rgb
  1550 ;;		 -> main@rgb(8), 
  1551 ;;  w               2   61[BANK0 ] PTR struct white_card
  1552 ;;		 -> main@white(26), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  color           1   67[BANK0 ] unsigned char 
  1555 ;;  color2          2   65[BANK0 ] unsigned int 
  1556 ;;  color3          2   63[BANK0 ] unsigned int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      unsigned char 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;Total ram usage:       11 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 7
  1573 ;; This function calls:
  1574 ;;		_detect_color
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text1
  1581  004EEA                     __ptext1:
  1582                           	callstack 0
  1583  004EEA                     _verify_color:
  1584                           	callstack 23
  1585                           
  1586                           ; BSR set to: 1
  1587                           ;incstack = 0
  1588                           ;verify_color@color stored from wreg
  1589  004EEA  0100               	movlb	0	; () banked
  1590  004EEC  6FA3               	movwf	verify_color@color& (0+255),b
  1591  004EEE                     
  1592                           ;color.c: 358: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 359: {;color.c: 360:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1593  004EEE  0E05               	movlw	5
  1594  004EF0  6E57               	movwf	(??_verify_color+1)^0,c
  1595  004EF2  0E0F               	movlw	15
  1596  004EF4  6E56               	movwf	??_verify_color^0,c
  1597  004EF6  0EF1               	movlw	241
  1598  004EF8                     u6837:
  1599  004EF8  2EE8               	decfsz	wreg,f,c
  1600  004EFA  D7FE               	bra	u6837
  1601  004EFC  2E56               	decfsz	??_verify_color^0,f,c
  1602  004EFE  D7FC               	bra	u6837
  1603  004F00  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1604  004F02  D7FA               	bra	u6837
  1605  004F04  F000               	nop	
  1606  004F06                     
  1607                           ;color.c: 361:     unsigned int color2, color3;;color.c: 362:     color2 = detect_color(
      +                          m,w);
  1608  004F06  C09B  F080         	movff	verify_color@m,detect_color@m
  1609  004F0A  C09C  F081         	movff	verify_color@m+1,detect_color@m+1
  1610  004F0E  C09D  F082         	movff	verify_color@w,detect_color@w
  1611  004F12  C09E  F083         	movff	verify_color@w+1,detect_color@w+1
  1612  004F16  EC0A  F007         	call	_detect_color	;wreg free
  1613  004F1A  6E56               	movwf	??_verify_color^0,c
  1614  004F1C  5056               	movf	??_verify_color^0,w,c
  1615  004F1E  0100               	movlb	0	; () banked
  1616  004F20  6FA1               	movwf	verify_color@color2& (0+255),b
  1617  004F22  6BA2               	clrf	(verify_color@color2+1)& (0+255),b
  1618  004F24                     
  1619                           ; BSR set to: 0
  1620                           ;color.c: 363:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1621  004F24  0E05               	movlw	5
  1622  004F26  6E57               	movwf	(??_verify_color+1)^0,c
  1623  004F28  0E0F               	movlw	15
  1624  004F2A  6E56               	movwf	??_verify_color^0,c
  1625  004F2C  0EF1               	movlw	241
  1626  004F2E                     u6847:
  1627  004F2E  2EE8               	decfsz	wreg,f,c
  1628  004F30  D7FE               	bra	u6847
  1629  004F32  2E56               	decfsz	??_verify_color^0,f,c
  1630  004F34  D7FC               	bra	u6847
  1631  004F36  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1632  004F38  D7FA               	bra	u6847
  1633  004F3A  F000               	nop	
  1634  004F3C                     
  1635                           ;color.c: 364:     color3 = detect_color(m,w);
  1636  004F3C  C09B  F080         	movff	verify_color@m,detect_color@m
  1637  004F40  C09C  F081         	movff	verify_color@m+1,detect_color@m+1
  1638  004F44  C09D  F082         	movff	verify_color@w,detect_color@w
  1639  004F48  C09E  F083         	movff	verify_color@w+1,detect_color@w+1
  1640  004F4C  EC0A  F007         	call	_detect_color	;wreg free
  1641  004F50  6E56               	movwf	??_verify_color^0,c
  1642  004F52  5056               	movf	??_verify_color^0,w,c
  1643  004F54  0100               	movlb	0	; () banked
  1644  004F56  6F9F               	movwf	verify_color@color3& (0+255),b
  1645  004F58  6BA0               	clrf	(verify_color@color3+1)& (0+255),b
  1646  004F5A                     
  1647                           ; BSR set to: 0
  1648                           ;color.c: 365:     if (color == color2 && color2 == color3){return color;}
  1649  004F5A  51A3               	movf	verify_color@color& (0+255),w,b
  1650  004F5C  6E56               	movwf	??_verify_color^0,c
  1651  004F5E  6A57               	clrf	(??_verify_color+1)^0,c
  1652  004F60  51A1               	movf	verify_color@color2& (0+255),w,b
  1653  004F62  1856               	xorwf	??_verify_color^0,w,c
  1654  004F64  E107               	bnz	u6711
  1655  004F66  51A2               	movf	(verify_color@color2+1)& (0+255),w,b
  1656  004F68  1857               	xorwf	(??_verify_color+1)^0,w,c
  1657  004F6A  A4D8               	btfss	status,2,c
  1658  004F6C  EFBA  F027         	goto	u6711
  1659  004F70  EFBC  F027         	goto	u6710
  1660  004F74                     u6711:
  1661  004F74  EFCB  F027         	goto	l6308
  1662  004F78                     u6710:
  1663  004F78                     
  1664                           ; BSR set to: 0
  1665  004F78  519F               	movf	verify_color@color3& (0+255),w,b
  1666  004F7A  19A1               	xorwf	verify_color@color2& (0+255),w,b
  1667  004F7C  E107               	bnz	u6721
  1668  004F7E  51A0               	movf	(verify_color@color3+1)& (0+255),w,b
  1669  004F80  19A2               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1670  004F82  A4D8               	btfss	status,2,c
  1671  004F84  EFC6  F027         	goto	u6721
  1672  004F88  EFC8  F027         	goto	u6720
  1673  004F8C                     u6721:
  1674  004F8C  EFCB  F027         	goto	l6308
  1675  004F90                     u6720:
  1676  004F90                     
  1677                           ; BSR set to: 0
  1678  004F90  51A3               	movf	verify_color@color& (0+255),w,b
  1679  004F92  EFCC  F027         	goto	l176
  1680  004F96                     l6308:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;color.c: 368:         return color;}
  1684  004F96  0E00               	movlw	0
  1685  004F98                     l176:
  1686                           
  1687                           ; BSR set to: 0
  1688  004F98  0012               	return		;funcret
  1689  004F9A                     __end_of_verify_color:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _test_function *****************
  1693 ;; Defined at:
  1694 ;;		line 16 in file "test_and_calibration.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  test_code       1    wreg     unsigned char 
  1697 ;;  m               2  139[BANK0 ] PTR struct color_rgb
  1698 ;;		 -> main@rgb(8), 
  1699 ;;  w               2  141[BANK0 ] PTR struct white_card
  1700 ;;		 -> main@white(26), 
  1701 ;;  mL              2  143[BANK0 ] PTR struct DC_motor
  1702 ;;		 -> main@motorL(10), 
  1703 ;;  mR              2  145[BANK0 ] PTR struct DC_motor
  1704 ;;		 -> main@motorR(10), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  test_code       1  154[BANK0 ] unsigned char 
  1707 ;;  amb_light       2  149[BANK0 ] unsigned int 
  1708 ;;  stop_signal     1  153[BANK0 ] unsigned char 
  1709 ;;  color           1  152[BANK0 ] unsigned char 
  1710 ;;  complete        1  151[BANK0 ] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1720 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;Total ram usage:       16 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 12
  1727 ;; This function calls:
  1728 ;;		_LED_C
  1729 ;;		_amb_light_measure
  1730 ;;		_calibrate_white
  1731 ;;		_color_data_collection
  1732 ;;		_color_display
  1733 ;;		_color_predict
  1734 ;;		_detect_color
  1735 ;;		_distance_measure
  1736 ;;		_fullSpeedAhead
  1737 ;;		_read_color
  1738 ;;		_stop
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text2
  1745  003D92                     __ptext2:
  1746                           	callstack 0
  1747  003D92                     _test_function:
  1748                           	callstack 18
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;incstack = 0
  1752                           ;test_function@test_code stored from wreg
  1753  003D92  0100               	movlb	0	; () banked
  1754  003D94  6FFA               	movwf	test_function@test_code& (0+255),b
  1755  003D96                     
  1756                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1757  003D96  0E00               	movlw	0
  1758  003D98  0100               	movlb	0	; () banked
  1759  003D9A  6FF7               	movwf	test_function@complete& (0+255),b
  1760                           
  1761                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1762  003D9C  0E00               	movlw	0
  1763  003D9E  6FF9               	movwf	test_function@stop_signal& (0+255),b
  1764                           
  1765                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1766  003DA0  0E00               	movlw	0
  1767  003DA2  6FF6               	movwf	(test_function@amb_light+1)& (0+255),b
  1768  003DA4  0E00               	movlw	0
  1769  003DA6  6FF5               	movwf	test_function@amb_light& (0+255),b
  1770  003DA8                     
  1771                           ; BSR set to: 0
  1772                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1773  003DA8  0E02               	movlw	2
  1774  003DAA  19FA               	xorwf	test_function@test_code& (0+255),w,b
  1775  003DAC  A4D8               	btfss	status,2,c
  1776  003DAE  EFDB  F01E         	goto	u6731
  1777  003DB2  EFDD  F01E         	goto	u6730
  1778  003DB6                     u6731:
  1779  003DB6  EFE3  F01E         	goto	l6318
  1780  003DBA                     u6730:
  1781  003DBA                     
  1782                           ; BSR set to: 0
  1783  003DBA  C0ED  F00E         	movff	test_function@w,calibrate_white@w
  1784  003DBE  C0EE  F00F         	movff	test_function@w+1,calibrate_white@w+1
  1785  003DC2  EC53  F01A         	call	_calibrate_white	;wreg free
  1786  003DC6                     l6318:
  1787                           
  1788                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1789  003DC6  0E04               	movlw	4
  1790  003DC8  0100               	movlb	0	; () banked
  1791  003DCA  19FA               	xorwf	test_function@test_code& (0+255),w,b
  1792  003DCC  A4D8               	btfss	status,2,c
  1793  003DCE  EFEB  F01E         	goto	u6741
  1794  003DD2  EFED  F01E         	goto	u6740
  1795  003DD6                     u6741:
  1796  003DD6  EFF7  F01E         	goto	l6322
  1797  003DDA                     u6740:
  1798  003DDA                     
  1799                           ; BSR set to: 0
  1800  003DDA  C0EB  F07A         	movff	test_function@m,amb_light_measure@amb
  1801  003DDE  C0EC  F07B         	movff	test_function@m+1,amb_light_measure@amb+1
  1802  003DE2  EC28  F023         	call	_amb_light_measure	;wreg free
  1803  003DE6  C07A  F0F5         	movff	?_amb_light_measure,test_function@amb_light
  1804  003DEA  C07B  F0F6         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1805  003DEE                     l6322:
  1806                           
  1807                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1808  003DEE  0100               	movlb	0	; () banked
  1809  003DF0  05FA               	decf	test_function@test_code& (0+255),w,b
  1810  003DF2  A4D8               	btfss	status,2,c
  1811  003DF4  EFFE  F01E         	goto	u6751
  1812  003DF8  EF00  F01F         	goto	u6750
  1813  003DFC                     u6751:
  1814  003DFC  EF0E  F01F         	goto	l6330
  1815  003E00                     u6750:
  1816  003E00                     
  1817                           ; BSR set to: 0
  1818                           ;test_and_calibration.c: 29:             LED_C();
  1819  003E00  ECC7  F02B         	call	_LED_C	;wreg free
  1820  003E04                     
  1821                           ;test_and_calibration.c: 30:             read_color(m);
  1822  003E04  C0EB  F00E         	movff	test_function@m,read_color@m
  1823  003E08  C0EC  F00F         	movff	test_function@m+1,read_color@m+1
  1824  003E0C  ECB0  F028         	call	_read_color	;wreg free
  1825  003E10                     
  1826                           ;test_and_calibration.c: 31:             color_display(m);
  1827  003E10  C0EB  F079         	movff	test_function@m,color_display@m
  1828  003E14  C0EC  F07A         	movff	test_function@m+1,color_display@m+1
  1829  003E18  EC17  F028         	call	_color_display	;wreg free
  1830  003E1C                     l6330:
  1831                           
  1832                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1833  003E1C  0E02               	movlw	2
  1834  003E1E  0100               	movlb	0	; () banked
  1835  003E20  19FA               	xorwf	test_function@test_code& (0+255),w,b
  1836  003E22  A4D8               	btfss	status,2,c
  1837  003E24  EF16  F01F         	goto	u6761
  1838  003E28  EF18  F01F         	goto	u6760
  1839  003E2C                     u6761:
  1840  003E2C  EF27  F01F         	goto	l6336
  1841  003E30                     u6760:
  1842  003E30                     
  1843                           ; BSR set to: 0
  1844                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1845  003E30  C0EB  F080         	movff	test_function@m,detect_color@m
  1846  003E34  C0EC  F081         	movff	test_function@m+1,detect_color@m+1
  1847  003E38  C0ED  F082         	movff	test_function@w,detect_color@w
  1848  003E3C  C0EE  F083         	movff	test_function@w+1,detect_color@w+1
  1849  003E40  EC0A  F007         	call	_detect_color	;wreg free
  1850  003E44  0100               	movlb	0	; () banked
  1851  003E46  6FF8               	movwf	test_function@color& (0+255),b
  1852  003E48                     
  1853                           ; BSR set to: 0
  1854                           ;test_and_calibration.c: 36:             color_predict(color);
  1855  003E48  51F8               	movf	test_function@color& (0+255),w,b
  1856  003E4A  EC34  F02B         	call	_color_predict
  1857  003E4E                     l6336:
  1858                           
  1859                           ;test_and_calibration.c: 39:         if (test_code == 3){
  1860  003E4E  0E03               	movlw	3
  1861  003E50  0100               	movlb	0	; () banked
  1862  003E52  19FA               	xorwf	test_function@test_code& (0+255),w,b
  1863  003E54  A4D8               	btfss	status,2,c
  1864  003E56  EF2F  F01F         	goto	u6771
  1865  003E5A  EF31  F01F         	goto	u6770
  1866  003E5E                     u6771:
  1867  003E5E  EF44  F01F         	goto	l6346
  1868  003E62                     u6770:
  1869  003E62  EF3C  F01F         	goto	l6344
  1870  003E66                     l6340:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;test_and_calibration.c: 41:                 color_data_collection(m);
  1874  003E66  C0EB  F0DF         	movff	test_function@m,color_data_collection@m
  1875  003E6A  C0EC  F0E0         	movff	test_function@m+1,color_data_collection@m+1
  1876  003E6E  EC36  F01C         	call	_color_data_collection	;wreg free
  1877  003E72                     
  1878                           ;test_and_calibration.c: 42:                 complete = 1;
  1879  003E72  0E01               	movlw	1
  1880  003E74  0100               	movlb	0	; () banked
  1881  003E76  6FF7               	movwf	test_function@complete& (0+255),b
  1882  003E78                     l6344:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;test_and_calibration.c: 40:             while (complete == 0){
  1886  003E78  51F7               	movf	test_function@complete& (0+255),w,b
  1887  003E7A  B4D8               	btfsc	status,2,c
  1888  003E7C  EF42  F01F         	goto	u6781
  1889  003E80  EF44  F01F         	goto	u6780
  1890  003E84                     u6781:
  1891  003E84  EF33  F01F         	goto	l6340
  1892  003E88                     u6780:
  1893  003E88                     l6346:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;test_and_calibration.c: 46:         if (test_code == 4){
  1897  003E88  0E04               	movlw	4
  1898  003E8A  19FA               	xorwf	test_function@test_code& (0+255),w,b
  1899  003E8C  A4D8               	btfss	status,2,c
  1900  003E8E  EF4B  F01F         	goto	u6791
  1901  003E92  EF4D  F01F         	goto	u6790
  1902  003E96                     u6791:
  1903  003E96  EFF7  F01E         	goto	l6322
  1904  003E9A                     u6790:
  1905  003E9A  EF69  F01F         	goto	l6354
  1906  003E9E                     l6350:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;test_and_calibration.c: 48:                 fullSpeedAhead(mL, mR);
  1910  003E9E  C0EF  F01C         	movff	test_function@mL,fullSpeedAhead@mL
  1911  003EA2  C0F0  F01D         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1912  003EA6  C0F1  F01E         	movff	test_function@mR,fullSpeedAhead@mR
  1913  003EAA  C0F2  F01F         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1914  003EAE  ECCD  F027         	call	_fullSpeedAhead	;wreg free
  1915  003EB2                     
  1916                           ;test_and_calibration.c: 49:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1917  003EB2  C0EF  F07A         	movff	test_function@mL,distance_measure@mL
  1918  003EB6  C0F0  F07B         	movff	test_function@mL+1,distance_measure@mL+1
  1919  003EBA  C0F1  F07C         	movff	test_function@mR,distance_measure@mR
  1920  003EBE  C0F2  F07D         	movff	test_function@mR+1,distance_measure@mR+1
  1921  003EC2  C0F5  F07E         	movff	test_function@amb_light,distance_measure@amb_light
  1922  003EC6  C0F6  F07F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1923  003ECA  ECF3  F025         	call	_distance_measure	;wreg free
  1924  003ECE  0100               	movlb	0	; () banked
  1925  003ED0  6FF9               	movwf	test_function@stop_signal& (0+255),b
  1926  003ED2                     l6354:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;test_and_calibration.c: 47:             while (stop_signal == 0){
  1930  003ED2  51F9               	movf	test_function@stop_signal& (0+255),w,b
  1931  003ED4  B4D8               	btfsc	status,2,c
  1932  003ED6  EF6F  F01F         	goto	u6801
  1933  003EDA  EF71  F01F         	goto	u6800
  1934  003EDE                     u6801:
  1935  003EDE  EF4F  F01F         	goto	l6350
  1936  003EE2                     u6800:
  1937  003EE2                     
  1938                           ; BSR set to: 0
  1939                           ;test_and_calibration.c: 51:             stop(mL, mR);
  1940  003EE2  C0EF  F01C         	movff	test_function@mL,stop@mL
  1941  003EE6  C0F0  F01D         	movff	test_function@mL+1,stop@mL+1
  1942  003EEA  C0F1  F01E         	movff	test_function@mR,stop@mR
  1943  003EEE  C0F2  F01F         	movff	test_function@mR+1,stop@mR+1
  1944  003EF2  EC17  F027         	call	_stop	;wreg free
  1945  003EF6                     
  1946                           ;test_and_calibration.c: 52:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1947  003EF6  0E52               	movlw	82
  1948  003EF8  0100               	movlb	0	; () banked
  1949  003EFA  6FF4               	movwf	(??_test_function+1)& (0+255),b
  1950  003EFC  0E2B               	movlw	43
  1951  003EFE  6FF3               	movwf	??_test_function& (0+255),b
  1952  003F00  0E00               	movlw	0
  1953  003F02                     u6857:
  1954  003F02  2EE8               	decfsz	wreg,f,c
  1955  003F04  D7FE               	bra	u6857
  1956  003F06  2FF3               	decfsz	??_test_function& (0+255),f,b
  1957  003F08  D7FC               	bra	u6857
  1958  003F0A  2FF4               	decfsz	(??_test_function+1)& (0+255),f,b
  1959  003F0C  D7FA               	bra	u6857
  1960  003F0E  F000               	nop	
  1961  003F10                     
  1962                           ;test_and_calibration.c: 53:             stop_signal = 0;
  1963  003F10  0E00               	movlw	0
  1964  003F12  0100               	movlb	0	; () banked
  1965  003F14  6FF9               	movwf	test_function@stop_signal& (0+255),b
  1966  003F16  EFF7  F01E         	goto	l6322
  1967  003F1A  0012               	return		;funcret
  1968  003F1C                     __end_of_test_function:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _distance_measure *****************
  1972 ;; Defined at:
  1973 ;;		line 394 in file "color.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  1976 ;;		 -> main@motorL(10), 
  1977 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  1978 ;;		 -> main@motorR(10), 
  1979 ;;  amb_light       2   30[BANK0 ] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  threshold       2   40[BANK0 ] unsigned int 
  1982 ;;  CC_amb          2   38[BANK0 ] unsigned int 
  1983 ;;  CG_amb          2   32[BANK0 ] unsigned int 
  1984 ;;  stop            1   42[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1994 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;Total ram usage:       19 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 6
  2001 ;; This function calls:
  2002 ;;		_LED_C
  2003 ;;		___flmul
  2004 ;;		___xxtofl
  2005 ;;		_color_read_Clear
  2006 ;;		_color_read_Green
  2007 ;;		_lroundf
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;;		_test_function
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text3
  2015  004BE6                     __ptext3:
  2016                           	callstack 0
  2017  004BE6                     _distance_measure:
  2018                           	callstack 23
  2019  004BE6  0E00               	movlw	0
  2020  004BE8  0100               	movlb	0	; () banked
  2021  004BEA  6F81               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2022  004BEC  0E00               	movlw	0
  2023  004BEE  6F80               	movwf	distance_measure@CG_amb& (0+255),b
  2024                           
  2025                           ;color.c: 397:     unsigned char stop = 0;
  2026  004BF0  0E00               	movlw	0
  2027  004BF2  6F8A               	movwf	distance_measure@stop& (0+255),b
  2028                           
  2029                           ;color.c: 398:     unsigned int threshold = 0;
  2030  004BF4  0E00               	movlw	0
  2031  004BF6  6F89               	movwf	(distance_measure@threshold+1)& (0+255),b
  2032  004BF8  0E00               	movlw	0
  2033  004BFA  6F88               	movwf	distance_measure@threshold& (0+255),b
  2034  004BFC                     
  2035                           ; BSR set to: 0
  2036                           ;color.c: 399:     LED_C();
  2037  004BFC  ECC7  F02B         	call	_LED_C	;wreg free
  2038  004C00                     
  2039                           ;color.c: 400:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2040  004C00  0E09               	movlw	9
  2041  004C02  6E52               	movwf	(??_distance_measure+1)^0,c
  2042  004C04  0E1E               	movlw	30
  2043  004C06  6E51               	movwf	??_distance_measure^0,c
  2044  004C08  0EE4               	movlw	228
  2045  004C0A                     u6867:
  2046  004C0A  2EE8               	decfsz	wreg,f,c
  2047  004C0C  D7FE               	bra	u6867
  2048  004C0E  2E51               	decfsz	??_distance_measure^0,f,c
  2049  004C10  D7FC               	bra	u6867
  2050  004C12  2E52               	decfsz	(??_distance_measure+1)^0,f,c
  2051  004C14  D7FA               	bra	u6867
  2052  004C16  D000               	nop2	
  2053  004C18                     
  2054                           ;color.c: 401:     CC_amb = color_read_Clear();
  2055  004C18  EC80  F029         	call	_color_read_Clear	;wreg free
  2056  004C1C  C007  F086         	movff	?_color_read_Clear,distance_measure@CC_amb
  2057  004C20  C008  F087         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2058  004C24  EC30  F029         	call	_color_read_Green	;wreg free
  2059  004C28                     
  2060                           ;color.c: 403:     threshold = lroundf((float)amb_light * 1.05);
  2061  004C28  C07E  F003         	movff	distance_measure@amb_light,___xxtofl@val
  2062  004C2C  C07F  F004         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2063  004C30  6A05               	clrf	(___xxtofl@val+2)^0,c
  2064  004C32  6A06               	clrf	(___xxtofl@val+3)^0,c
  2065  004C34  0E00               	movlw	0
  2066  004C36  ECEF  F01D         	call	___xxtofl
  2067  004C3A  C003  F02A         	movff	?___xxtofl,___flmul@b
  2068  004C3E  C004  F02B         	movff	?___xxtofl+1,___flmul@b+1
  2069  004C42  C005  F02C         	movff	?___xxtofl+2,___flmul@b+2
  2070  004C46  C006  F02D         	movff	?___xxtofl+3,___flmul@b+3
  2071  004C4A  0E66               	movlw	102
  2072  004C4C  6E2E               	movwf	___flmul@a^0,c
  2073  004C4E  0E66               	movlw	102
  2074  004C50  6E2F               	movwf	(___flmul@a+1)^0,c
  2075  004C52  0E86               	movlw	134
  2076  004C54  6E30               	movwf	(___flmul@a+2)^0,c
  2077  004C56  0E3F               	movlw	63
  2078  004C58  6E31               	movwf	(___flmul@a+3)^0,c
  2079  004C5A  EC0B  F00F         	call	___flmul	;wreg free
  2080  004C5E  C02A  F082         	movff	?___flmul,_distance_measure$3266
  2081  004C62  C02B  F083         	movff	?___flmul+1,_distance_measure$3266+1
  2082  004C66  C02C  F084         	movff	?___flmul+2,_distance_measure$3266+2
  2083  004C6A  C02D  F085         	movff	?___flmul+3,_distance_measure$3266+3
  2084  004C6E                     
  2085                           ;color.c: 403:     threshold = lroundf((float)amb_light * 1.05);
  2086  004C6E  C082  F076         	movff	_distance_measure$3266,lroundf@x
  2087  004C72  C083  F077         	movff	_distance_measure$3266+1,lroundf@x+1
  2088  004C76  C084  F078         	movff	_distance_measure$3266+2,lroundf@x+2
  2089  004C7A  C085  F079         	movff	_distance_measure$3266+3,lroundf@x+3
  2090  004C7E  ECAE  F02A         	call	_lroundf	;wreg free
  2091  004C82  C076  F088         	movff	?_lroundf,distance_measure@threshold
  2092  004C86  C077  F089         	movff	?_lroundf+1,distance_measure@threshold+1
  2093  004C8A                     
  2094                           ;color.c: 406:     if (CC_amb >= threshold){stop = 1;}
  2095  004C8A  0100               	movlb	0	; () banked
  2096  004C8C  5188               	movf	distance_measure@threshold& (0+255),w,b
  2097  004C8E  5D86               	subwf	distance_measure@CC_amb& (0+255),w,b
  2098  004C90  5189               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2099  004C92  5987               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2100  004C94  A0D8               	btfss	status,0,c
  2101  004C96  EF4F  F026         	goto	u6701
  2102  004C9A  EF51  F026         	goto	u6700
  2103  004C9E                     u6701:
  2104  004C9E  EF53  F026         	goto	l183
  2105  004CA2                     u6700:
  2106  004CA2                     
  2107                           ; BSR set to: 0
  2108  004CA2  0E01               	movlw	1
  2109  004CA4  6F8A               	movwf	distance_measure@stop& (0+255),b
  2110  004CA6                     l183:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;color.c: 407:     return stop;
  2114  004CA6  518A               	movf	distance_measure@stop& (0+255),w,b
  2115  004CA8                     
  2116                           ; BSR set to: 0
  2117  004CA8  0012               	return		;funcret
  2118  004CAA                     __end_of_distance_measure:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _detect_color *****************
  2122 ;; Defined at:
  2123 ;;		line 287 in file "color.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  m               2   32[BANK0 ] PTR struct color_rgb
  2126 ;;		 -> main@rgb(8), 
  2127 ;;  w               2   34[BANK0 ] PTR struct white_card
  2128 ;;		 -> main@white(26), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  BG              2   53[BANK0 ] unsigned int 
  2131 ;;  BB              2   50[BANK0 ] unsigned int 
  2132 ;;  BR              2   48[BANK0 ] unsigned int 
  2133 ;;  RR              2   46[BANK0 ] unsigned int 
  2134 ;;  GG              2   44[BANK0 ] unsigned int 
  2135 ;;  GR              2   42[BANK0 ] unsigned int 
  2136 ;;  RG              2   40[BANK0 ] unsigned int 
  2137 ;;  GB              2   38[BANK0 ] unsigned int 
  2138 ;;  RB              2   36[BANK0 ] unsigned int 
  2139 ;;  color           1   52[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      unsigned char 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Totals:         4      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;Total ram usage:       31 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 6
  2156 ;; This function calls:
  2157 ;;		_LED_B
  2158 ;;		_LED_G
  2159 ;;		_LED_R
  2160 ;;		___fldiv
  2161 ;;		___flmul
  2162 ;;		___xxtofl
  2163 ;;		_compare
  2164 ;;		_lroundf
  2165 ;;		_read_color
  2166 ;; This function is called by:
  2167 ;;		_verify_color
  2168 ;;		_main
  2169 ;;		_test_function
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text4
  2174  000E14                     __ptext4:
  2175                           	callstack 0
  2176  000E14                     _detect_color:
  2177                           	callstack 23
  2178  000E14  0E00               	movlw	0
  2179  000E16  0100               	movlb	0	; () banked
  2180  000E18  6F89               	movwf	(detect_color@RG+1)& (0+255),b
  2181  000E1A  0E00               	movlw	0
  2182  000E1C  6F88               	movwf	detect_color@RG& (0+255),b
  2183  000E1E  0E00               	movlw	0
  2184  000E20  6F85               	movwf	(detect_color@RB+1)& (0+255),b
  2185  000E22  0E00               	movlw	0
  2186  000E24  6F84               	movwf	detect_color@RB& (0+255),b
  2187  000E26  0E00               	movlw	0
  2188  000E28  6F8B               	movwf	(detect_color@GR+1)& (0+255),b
  2189  000E2A  0E00               	movlw	0
  2190  000E2C  6F8A               	movwf	detect_color@GR& (0+255),b
  2191  000E2E  0E00               	movlw	0
  2192  000E30  6F8D               	movwf	(detect_color@GG+1)& (0+255),b
  2193  000E32  0E00               	movlw	0
  2194  000E34  6F8C               	movwf	detect_color@GG& (0+255),b
  2195  000E36  0E00               	movlw	0
  2196  000E38  6F87               	movwf	(detect_color@GB+1)& (0+255),b
  2197  000E3A  0E00               	movlw	0
  2198  000E3C  6F86               	movwf	detect_color@GB& (0+255),b
  2199  000E3E  0E00               	movlw	0
  2200  000E40  6F91               	movwf	(detect_color@BR+1)& (0+255),b
  2201  000E42  0E00               	movlw	0
  2202  000E44  6F90               	movwf	detect_color@BR& (0+255),b
  2203  000E46  0E00               	movlw	0
  2204  000E48  6F96               	movwf	(detect_color@BG+1)& (0+255),b
  2205  000E4A  0E00               	movlw	0
  2206  000E4C  6F95               	movwf	detect_color@BG& (0+255),b
  2207  000E4E  0E00               	movlw	0
  2208  000E50  6F93               	movwf	(detect_color@BB+1)& (0+255),b
  2209  000E52  0E00               	movlw	0
  2210  000E54  6F92               	movwf	detect_color@BB& (0+255),b
  2211                           
  2212                           ;color.c: 292:     unsigned char color = 0;
  2213  000E56  0E00               	movlw	0
  2214  000E58  6F94               	movwf	detect_color@color& (0+255),b
  2215  000E5A                     
  2216                           ; BSR set to: 0
  2217                           ;color.c: 294:     LED_R();
  2218  000E5A  EC87  F02B         	call	_LED_R	;wreg free
  2219  000E5E                     
  2220                           ;color.c: 295:     read_color(m);
  2221  000E5E  C080  F00E         	movff	detect_color@m,read_color@m
  2222  000E62  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2223  000E66  ECB0  F028         	call	_read_color	;wreg free
  2224  000E6A                     
  2225                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2226  000E6A  C082  FFD9         	movff	detect_color@w,fsr2l
  2227  000E6E  C083  FFDA         	movff	detect_color@w+1,fsr2h
  2228  000E72  CFDE F052          	movff	postinc2,??_detect_color
  2229  000E76  CFDD F053          	movff	postdec2,??_detect_color+1
  2230  000E7A  C052  F003         	movff	??_detect_color,___xxtofl@val
  2231  000E7E  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2232  000E82  6A05               	clrf	(___xxtofl@val+2)^0,c
  2233  000E84  6A06               	clrf	(___xxtofl@val+3)^0,c
  2234  000E86  0E00               	movlw	0
  2235  000E88  ECEF  F01D         	call	___xxtofl
  2236  000E8C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2237  000E90  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2238  000E94  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2239  000E98  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2240  000E9C  C080  FFD9         	movff	detect_color@m,fsr2l
  2241  000EA0  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2242  000EA4  CFDE F054          	movff	postinc2,??_detect_color+2
  2243  000EA8  CFDD F055          	movff	postdec2,??_detect_color+3
  2244  000EAC  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2245  000EB0  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2246  000EB4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2247  000EB6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2248  000EB8  0E00               	movlw	0
  2249  000EBA  ECEF  F01D         	call	___xxtofl
  2250  000EBE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2251  000EC2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2252  000EC6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2253  000ECA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2254  000ECE  ECF9  F012         	call	___fldiv	;wreg free
  2255  000ED2  C011  F02A         	movff	?___fldiv,___flmul@b
  2256  000ED6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2257  000EDA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2258  000EDE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2259  000EE2  0E00               	movlw	0
  2260  000EE4  6E2E               	movwf	___flmul@a^0,c
  2261  000EE6  0E00               	movlw	0
  2262  000EE8  6E2F               	movwf	(___flmul@a+1)^0,c
  2263  000EEA  0EC8               	movlw	200
  2264  000EEC  6E30               	movwf	(___flmul@a+2)^0,c
  2265  000EEE  0E42               	movlw	66
  2266  000EF0  6E31               	movwf	(___flmul@a+3)^0,c
  2267  000EF2  EC0B  F00F         	call	___flmul	;wreg free
  2268  000EF6  C02A  F097         	movff	?___flmul,_detect_color$3265
  2269  000EFA  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2270  000EFE  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2271  000F02  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2272  000F06                     
  2273                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2274  000F06  C097  F076         	movff	_detect_color$3265,lroundf@x
  2275  000F0A  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2276  000F0E  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2277  000F12  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2278  000F16  ECAE  F02A         	call	_lroundf	;wreg free
  2279  000F1A  C076  F08E         	movff	?_lroundf,detect_color@RR
  2280  000F1E  C077  F08F         	movff	?_lroundf+1,detect_color@RR+1
  2281  000F22  0100               	movlb	0	; () banked
  2282  000F24  EE20 F002          	lfsr	2,2
  2283  000F28  5182               	movf	detect_color@w& (0+255),w,b
  2284  000F2A  26D9               	addwf	fsr2l,f,c
  2285  000F2C  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2286  000F2E  22DA               	addwfc	fsr2h,f,c
  2287  000F30  CFDE F052          	movff	postinc2,??_detect_color
  2288  000F34  CFDD F053          	movff	postdec2,??_detect_color+1
  2289  000F38  C052  F003         	movff	??_detect_color,___xxtofl@val
  2290  000F3C  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2291  000F40  6A05               	clrf	(___xxtofl@val+2)^0,c
  2292  000F42  6A06               	clrf	(___xxtofl@val+3)^0,c
  2293  000F44  0E00               	movlw	0
  2294  000F46  ECEF  F01D         	call	___xxtofl
  2295  000F4A  C003  F015         	movff	?___xxtofl,___fldiv@a
  2296  000F4E  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2297  000F52  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2298  000F56  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2299  000F5A  0100               	movlb	0	; () banked
  2300  000F5C  EE20 F002          	lfsr	2,2
  2301  000F60  5180               	movf	detect_color@m& (0+255),w,b
  2302  000F62  26D9               	addwf	fsr2l,f,c
  2303  000F64  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2304  000F66  22DA               	addwfc	fsr2h,f,c
  2305  000F68  CFDE F054          	movff	postinc2,??_detect_color+2
  2306  000F6C  CFDD F055          	movff	postdec2,??_detect_color+3
  2307  000F70  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2308  000F74  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2309  000F78  6A05               	clrf	(___xxtofl@val+2)^0,c
  2310  000F7A  6A06               	clrf	(___xxtofl@val+3)^0,c
  2311  000F7C  0E00               	movlw	0
  2312  000F7E  ECEF  F01D         	call	___xxtofl
  2313  000F82  C003  F011         	movff	?___xxtofl,___fldiv@b
  2314  000F86  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2315  000F8A  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2316  000F8E  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2317  000F92  ECF9  F012         	call	___fldiv	;wreg free
  2318  000F96  C011  F02A         	movff	?___fldiv,___flmul@b
  2319  000F9A  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2320  000F9E  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2321  000FA2  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2322  000FA6  0E00               	movlw	0
  2323  000FA8  6E2E               	movwf	___flmul@a^0,c
  2324  000FAA  0E00               	movlw	0
  2325  000FAC  6E2F               	movwf	(___flmul@a+1)^0,c
  2326  000FAE  0EC8               	movlw	200
  2327  000FB0  6E30               	movwf	(___flmul@a+2)^0,c
  2328  000FB2  0E42               	movlw	66
  2329  000FB4  6E31               	movwf	(___flmul@a+3)^0,c
  2330  000FB6  EC0B  F00F         	call	___flmul	;wreg free
  2331  000FBA  C02A  F097         	movff	?___flmul,_detect_color$3265
  2332  000FBE  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2333  000FC2  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2334  000FC6  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2335  000FCA  C097  F076         	movff	_detect_color$3265,lroundf@x
  2336  000FCE  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2337  000FD2  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2338  000FD6  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2339  000FDA  ECAE  F02A         	call	_lroundf	;wreg free
  2340  000FDE  C076  F088         	movff	?_lroundf,detect_color@RG
  2341  000FE2  C077  F089         	movff	?_lroundf+1,detect_color@RG+1
  2342  000FE6  0100               	movlb	0	; () banked
  2343  000FE8  EE20 F004          	lfsr	2,4
  2344  000FEC  5182               	movf	detect_color@w& (0+255),w,b
  2345  000FEE  26D9               	addwf	fsr2l,f,c
  2346  000FF0  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2347  000FF2  22DA               	addwfc	fsr2h,f,c
  2348  000FF4  CFDE F052          	movff	postinc2,??_detect_color
  2349  000FF8  CFDD F053          	movff	postdec2,??_detect_color+1
  2350  000FFC  C052  F003         	movff	??_detect_color,___xxtofl@val
  2351  001000  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2352  001004  6A05               	clrf	(___xxtofl@val+2)^0,c
  2353  001006  6A06               	clrf	(___xxtofl@val+3)^0,c
  2354  001008  0E00               	movlw	0
  2355  00100A  ECEF  F01D         	call	___xxtofl
  2356  00100E  C003  F015         	movff	?___xxtofl,___fldiv@a
  2357  001012  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2358  001016  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2359  00101A  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2360  00101E  0100               	movlb	0	; () banked
  2361  001020  EE20 F004          	lfsr	2,4
  2362  001024  5180               	movf	detect_color@m& (0+255),w,b
  2363  001026  26D9               	addwf	fsr2l,f,c
  2364  001028  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2365  00102A  22DA               	addwfc	fsr2h,f,c
  2366  00102C  CFDE F054          	movff	postinc2,??_detect_color+2
  2367  001030  CFDD F055          	movff	postdec2,??_detect_color+3
  2368  001034  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2369  001038  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2370  00103C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2371  00103E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2372  001040  0E00               	movlw	0
  2373  001042  ECEF  F01D         	call	___xxtofl
  2374  001046  C003  F011         	movff	?___xxtofl,___fldiv@b
  2375  00104A  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2376  00104E  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2377  001052  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2378  001056  ECF9  F012         	call	___fldiv	;wreg free
  2379  00105A  C011  F02A         	movff	?___fldiv,___flmul@b
  2380  00105E  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2381  001062  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2382  001066  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2383  00106A  0E00               	movlw	0
  2384  00106C  6E2E               	movwf	___flmul@a^0,c
  2385  00106E  0E00               	movlw	0
  2386  001070  6E2F               	movwf	(___flmul@a+1)^0,c
  2387  001072  0EC8               	movlw	200
  2388  001074  6E30               	movwf	(___flmul@a+2)^0,c
  2389  001076  0E42               	movlw	66
  2390  001078  6E31               	movwf	(___flmul@a+3)^0,c
  2391  00107A  EC0B  F00F         	call	___flmul	;wreg free
  2392  00107E  C02A  F097         	movff	?___flmul,_detect_color$3265
  2393  001082  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2394  001086  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2395  00108A  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2396  00108E  C097  F076         	movff	_detect_color$3265,lroundf@x
  2397  001092  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2398  001096  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2399  00109A  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2400  00109E  ECAE  F02A         	call	_lroundf	;wreg free
  2401  0010A2                     
  2402                           ;color.c: 298:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2403  0010A2  0E05               	movlw	5
  2404  0010A4  6E53               	movwf	(??_detect_color+1)^0,c
  2405  0010A6  0E0F               	movlw	15
  2406  0010A8  6E52               	movwf	??_detect_color^0,c
  2407  0010AA  0EF1               	movlw	241
  2408  0010AC                     u6877:
  2409  0010AC  2EE8               	decfsz	wreg,f,c
  2410  0010AE  D7FE               	bra	u6877
  2411  0010B0  2E52               	decfsz	??_detect_color^0,f,c
  2412  0010B2  D7FC               	bra	u6877
  2413  0010B4  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2414  0010B6  D7FA               	bra	u6877
  2415  0010B8  F000               	nop	
  2416  0010BA                     
  2417                           ;color.c: 300:     LED_G();
  2418  0010BA  ECA7  F02B         	call	_LED_G	;wreg free
  2419  0010BE                     
  2420                           ;color.c: 301:     read_color(m);
  2421  0010BE  C080  F00E         	movff	detect_color@m,read_color@m
  2422  0010C2  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2423  0010C6  ECB0  F028         	call	_read_color	;wreg free
  2424  0010CA                     
  2425                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2426  0010CA  0100               	movlb	0	; () banked
  2427  0010CC  EE20 F006          	lfsr	2,6
  2428  0010D0  5182               	movf	detect_color@w& (0+255),w,b
  2429  0010D2  26D9               	addwf	fsr2l,f,c
  2430  0010D4  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2431  0010D6  22DA               	addwfc	fsr2h,f,c
  2432  0010D8  CFDE F052          	movff	postinc2,??_detect_color
  2433  0010DC  CFDD F053          	movff	postdec2,??_detect_color+1
  2434  0010E0  C052  F003         	movff	??_detect_color,___xxtofl@val
  2435  0010E4  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2436  0010E8  6A05               	clrf	(___xxtofl@val+2)^0,c
  2437  0010EA  6A06               	clrf	(___xxtofl@val+3)^0,c
  2438  0010EC  0E00               	movlw	0
  2439  0010EE  ECEF  F01D         	call	___xxtofl
  2440  0010F2  C003  F015         	movff	?___xxtofl,___fldiv@a
  2441  0010F6  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2442  0010FA  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2443  0010FE  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2444  001102  C080  FFD9         	movff	detect_color@m,fsr2l
  2445  001106  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2446  00110A  CFDE F054          	movff	postinc2,??_detect_color+2
  2447  00110E  CFDD F055          	movff	postdec2,??_detect_color+3
  2448  001112  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2449  001116  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2450  00111A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2451  00111C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2452  00111E  0E00               	movlw	0
  2453  001120  ECEF  F01D         	call	___xxtofl
  2454  001124  C003  F011         	movff	?___xxtofl,___fldiv@b
  2455  001128  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2456  00112C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2457  001130  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2458  001134  ECF9  F012         	call	___fldiv	;wreg free
  2459  001138  C011  F02A         	movff	?___fldiv,___flmul@b
  2460  00113C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2461  001140  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2462  001144  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2463  001148  0E00               	movlw	0
  2464  00114A  6E2E               	movwf	___flmul@a^0,c
  2465  00114C  0E00               	movlw	0
  2466  00114E  6E2F               	movwf	(___flmul@a+1)^0,c
  2467  001150  0EC8               	movlw	200
  2468  001152  6E30               	movwf	(___flmul@a+2)^0,c
  2469  001154  0E42               	movlw	66
  2470  001156  6E31               	movwf	(___flmul@a+3)^0,c
  2471  001158  EC0B  F00F         	call	___flmul	;wreg free
  2472  00115C  C02A  F097         	movff	?___flmul,_detect_color$3265
  2473  001160  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2474  001164  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2475  001168  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2476  00116C                     
  2477                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2478  00116C  C097  F076         	movff	_detect_color$3265,lroundf@x
  2479  001170  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2480  001174  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2481  001178  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2482  00117C  ECAE  F02A         	call	_lroundf	;wreg free
  2483  001180  C076  F08A         	movff	?_lroundf,detect_color@GR
  2484  001184  C077  F08B         	movff	?_lroundf+1,detect_color@GR+1
  2485  001188  0100               	movlb	0	; () banked
  2486  00118A  EE20 F008          	lfsr	2,8
  2487  00118E  5182               	movf	detect_color@w& (0+255),w,b
  2488  001190  26D9               	addwf	fsr2l,f,c
  2489  001192  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2490  001194  22DA               	addwfc	fsr2h,f,c
  2491  001196  CFDE F052          	movff	postinc2,??_detect_color
  2492  00119A  CFDD F053          	movff	postdec2,??_detect_color+1
  2493  00119E  C052  F003         	movff	??_detect_color,___xxtofl@val
  2494  0011A2  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2495  0011A6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2496  0011A8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2497  0011AA  0E00               	movlw	0
  2498  0011AC  ECEF  F01D         	call	___xxtofl
  2499  0011B0  C003  F015         	movff	?___xxtofl,___fldiv@a
  2500  0011B4  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2501  0011B8  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2502  0011BC  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2503  0011C0  0100               	movlb	0	; () banked
  2504  0011C2  EE20 F002          	lfsr	2,2
  2505  0011C6  5180               	movf	detect_color@m& (0+255),w,b
  2506  0011C8  26D9               	addwf	fsr2l,f,c
  2507  0011CA  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2508  0011CC  22DA               	addwfc	fsr2h,f,c
  2509  0011CE  CFDE F054          	movff	postinc2,??_detect_color+2
  2510  0011D2  CFDD F055          	movff	postdec2,??_detect_color+3
  2511  0011D6  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2512  0011DA  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2513  0011DE  6A05               	clrf	(___xxtofl@val+2)^0,c
  2514  0011E0  6A06               	clrf	(___xxtofl@val+3)^0,c
  2515  0011E2  0E00               	movlw	0
  2516  0011E4  ECEF  F01D         	call	___xxtofl
  2517  0011E8  C003  F011         	movff	?___xxtofl,___fldiv@b
  2518  0011EC  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2519  0011F0  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2520  0011F4  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2521  0011F8  ECF9  F012         	call	___fldiv	;wreg free
  2522  0011FC  C011  F02A         	movff	?___fldiv,___flmul@b
  2523  001200  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2524  001204  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2525  001208  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2526  00120C  0E00               	movlw	0
  2527  00120E  6E2E               	movwf	___flmul@a^0,c
  2528  001210  0E00               	movlw	0
  2529  001212  6E2F               	movwf	(___flmul@a+1)^0,c
  2530  001214  0EC8               	movlw	200
  2531  001216  6E30               	movwf	(___flmul@a+2)^0,c
  2532  001218  0E42               	movlw	66
  2533  00121A  6E31               	movwf	(___flmul@a+3)^0,c
  2534  00121C  EC0B  F00F         	call	___flmul	;wreg free
  2535  001220  C02A  F097         	movff	?___flmul,_detect_color$3265
  2536  001224  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2537  001228  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2538  00122C  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2539  001230  C097  F076         	movff	_detect_color$3265,lroundf@x
  2540  001234  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2541  001238  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2542  00123C  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2543  001240  ECAE  F02A         	call	_lroundf	;wreg free
  2544  001244  C076  F08C         	movff	?_lroundf,detect_color@GG
  2545  001248  C077  F08D         	movff	?_lroundf+1,detect_color@GG+1
  2546  00124C  0100               	movlb	0	; () banked
  2547  00124E  EE20 F00A          	lfsr	2,10
  2548  001252  5182               	movf	detect_color@w& (0+255),w,b
  2549  001254  26D9               	addwf	fsr2l,f,c
  2550  001256  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2551  001258  22DA               	addwfc	fsr2h,f,c
  2552  00125A  CFDE F052          	movff	postinc2,??_detect_color
  2553  00125E  CFDD F053          	movff	postdec2,??_detect_color+1
  2554  001262  C052  F003         	movff	??_detect_color,___xxtofl@val
  2555  001266  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2556  00126A  6A05               	clrf	(___xxtofl@val+2)^0,c
  2557  00126C  6A06               	clrf	(___xxtofl@val+3)^0,c
  2558  00126E  0E00               	movlw	0
  2559  001270  ECEF  F01D         	call	___xxtofl
  2560  001274  C003  F015         	movff	?___xxtofl,___fldiv@a
  2561  001278  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2562  00127C  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2563  001280  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2564  001284  0100               	movlb	0	; () banked
  2565  001286  EE20 F004          	lfsr	2,4
  2566  00128A  5180               	movf	detect_color@m& (0+255),w,b
  2567  00128C  26D9               	addwf	fsr2l,f,c
  2568  00128E  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2569  001290  22DA               	addwfc	fsr2h,f,c
  2570  001292  CFDE F054          	movff	postinc2,??_detect_color+2
  2571  001296  CFDD F055          	movff	postdec2,??_detect_color+3
  2572  00129A  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2573  00129E  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2574  0012A2  6A05               	clrf	(___xxtofl@val+2)^0,c
  2575  0012A4  6A06               	clrf	(___xxtofl@val+3)^0,c
  2576  0012A6  0E00               	movlw	0
  2577  0012A8  ECEF  F01D         	call	___xxtofl
  2578  0012AC  C003  F011         	movff	?___xxtofl,___fldiv@b
  2579  0012B0  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2580  0012B4  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2581  0012B8  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2582  0012BC  ECF9  F012         	call	___fldiv	;wreg free
  2583  0012C0  C011  F02A         	movff	?___fldiv,___flmul@b
  2584  0012C4  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2585  0012C8  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2586  0012CC  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2587  0012D0  0E00               	movlw	0
  2588  0012D2  6E2E               	movwf	___flmul@a^0,c
  2589  0012D4  0E00               	movlw	0
  2590  0012D6  6E2F               	movwf	(___flmul@a+1)^0,c
  2591  0012D8  0EC8               	movlw	200
  2592  0012DA  6E30               	movwf	(___flmul@a+2)^0,c
  2593  0012DC  0E42               	movlw	66
  2594  0012DE  6E31               	movwf	(___flmul@a+3)^0,c
  2595  0012E0  EC0B  F00F         	call	___flmul	;wreg free
  2596  0012E4  C02A  F097         	movff	?___flmul,_detect_color$3265
  2597  0012E8  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2598  0012EC  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2599  0012F0  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2600  0012F4  C097  F076         	movff	_detect_color$3265,lroundf@x
  2601  0012F8  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2602  0012FC  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2603  001300  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2604  001304  ECAE  F02A         	call	_lroundf	;wreg free
  2605  001308                     
  2606                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2607  001308  0E05               	movlw	5
  2608  00130A  6E53               	movwf	(??_detect_color+1)^0,c
  2609  00130C  0E0F               	movlw	15
  2610  00130E  6E52               	movwf	??_detect_color^0,c
  2611  001310  0EF1               	movlw	241
  2612  001312                     u6887:
  2613  001312  2EE8               	decfsz	wreg,f,c
  2614  001314  D7FE               	bra	u6887
  2615  001316  2E52               	decfsz	??_detect_color^0,f,c
  2616  001318  D7FC               	bra	u6887
  2617  00131A  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2618  00131C  D7FA               	bra	u6887
  2619  00131E  F000               	nop	
  2620  001320                     
  2621                           ;color.c: 308:     LED_B();
  2622  001320  ECB7  F02B         	call	_LED_B	;wreg free
  2623  001324                     
  2624                           ;color.c: 309:     read_color(m);
  2625  001324  C080  F00E         	movff	detect_color@m,read_color@m
  2626  001328  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2627  00132C  ECB0  F028         	call	_read_color	;wreg free
  2628  001330                     
  2629                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2630  001330  0100               	movlb	0	; () banked
  2631  001332  EE20 F00C          	lfsr	2,12
  2632  001336  5182               	movf	detect_color@w& (0+255),w,b
  2633  001338  26D9               	addwf	fsr2l,f,c
  2634  00133A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2635  00133C  22DA               	addwfc	fsr2h,f,c
  2636  00133E  CFDE F052          	movff	postinc2,??_detect_color
  2637  001342  CFDD F053          	movff	postdec2,??_detect_color+1
  2638  001346  C052  F003         	movff	??_detect_color,___xxtofl@val
  2639  00134A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2640  00134E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2641  001350  6A06               	clrf	(___xxtofl@val+3)^0,c
  2642  001352  0E00               	movlw	0
  2643  001354  ECEF  F01D         	call	___xxtofl
  2644  001358  C003  F015         	movff	?___xxtofl,___fldiv@a
  2645  00135C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2646  001360  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2647  001364  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2648  001368  C080  FFD9         	movff	detect_color@m,fsr2l
  2649  00136C  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2650  001370  CFDE F054          	movff	postinc2,??_detect_color+2
  2651  001374  CFDD F055          	movff	postdec2,??_detect_color+3
  2652  001378  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2653  00137C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2654  001380  6A05               	clrf	(___xxtofl@val+2)^0,c
  2655  001382  6A06               	clrf	(___xxtofl@val+3)^0,c
  2656  001384  0E00               	movlw	0
  2657  001386  ECEF  F01D         	call	___xxtofl
  2658  00138A  C003  F011         	movff	?___xxtofl,___fldiv@b
  2659  00138E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2660  001392  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2661  001396  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2662  00139A  ECF9  F012         	call	___fldiv	;wreg free
  2663  00139E  C011  F02A         	movff	?___fldiv,___flmul@b
  2664  0013A2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2665  0013A6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2666  0013AA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2667  0013AE  0E00               	movlw	0
  2668  0013B0  6E2E               	movwf	___flmul@a^0,c
  2669  0013B2  0E00               	movlw	0
  2670  0013B4  6E2F               	movwf	(___flmul@a+1)^0,c
  2671  0013B6  0EC8               	movlw	200
  2672  0013B8  6E30               	movwf	(___flmul@a+2)^0,c
  2673  0013BA  0E42               	movlw	66
  2674  0013BC  6E31               	movwf	(___flmul@a+3)^0,c
  2675  0013BE  EC0B  F00F         	call	___flmul	;wreg free
  2676  0013C2  C02A  F097         	movff	?___flmul,_detect_color$3265
  2677  0013C6  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2678  0013CA  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2679  0013CE  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2680  0013D2                     
  2681                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2682  0013D2  C097  F076         	movff	_detect_color$3265,lroundf@x
  2683  0013D6  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2684  0013DA  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2685  0013DE  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2686  0013E2  ECAE  F02A         	call	_lroundf	;wreg free
  2687  0013E6  C076  F090         	movff	?_lroundf,detect_color@BR
  2688  0013EA  C077  F091         	movff	?_lroundf+1,detect_color@BR+1
  2689  0013EE  0100               	movlb	0	; () banked
  2690  0013F0  EE20 F00E          	lfsr	2,14
  2691  0013F4  5182               	movf	detect_color@w& (0+255),w,b
  2692  0013F6  26D9               	addwf	fsr2l,f,c
  2693  0013F8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2694  0013FA  22DA               	addwfc	fsr2h,f,c
  2695  0013FC  CFDE F052          	movff	postinc2,??_detect_color
  2696  001400  CFDD F053          	movff	postdec2,??_detect_color+1
  2697  001404  C052  F003         	movff	??_detect_color,___xxtofl@val
  2698  001408  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2699  00140C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2700  00140E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2701  001410  0E00               	movlw	0
  2702  001412  ECEF  F01D         	call	___xxtofl
  2703  001416  C003  F015         	movff	?___xxtofl,___fldiv@a
  2704  00141A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2705  00141E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2706  001422  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2707  001426  0100               	movlb	0	; () banked
  2708  001428  EE20 F002          	lfsr	2,2
  2709  00142C  5180               	movf	detect_color@m& (0+255),w,b
  2710  00142E  26D9               	addwf	fsr2l,f,c
  2711  001430  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2712  001432  22DA               	addwfc	fsr2h,f,c
  2713  001434  CFDE F054          	movff	postinc2,??_detect_color+2
  2714  001438  CFDD F055          	movff	postdec2,??_detect_color+3
  2715  00143C  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2716  001440  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2717  001444  6A05               	clrf	(___xxtofl@val+2)^0,c
  2718  001446  6A06               	clrf	(___xxtofl@val+3)^0,c
  2719  001448  0E00               	movlw	0
  2720  00144A  ECEF  F01D         	call	___xxtofl
  2721  00144E  C003  F011         	movff	?___xxtofl,___fldiv@b
  2722  001452  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2723  001456  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2724  00145A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2725  00145E  ECF9  F012         	call	___fldiv	;wreg free
  2726  001462  C011  F02A         	movff	?___fldiv,___flmul@b
  2727  001466  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2728  00146A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2729  00146E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2730  001472  0E00               	movlw	0
  2731  001474  6E2E               	movwf	___flmul@a^0,c
  2732  001476  0E00               	movlw	0
  2733  001478  6E2F               	movwf	(___flmul@a+1)^0,c
  2734  00147A  0EC8               	movlw	200
  2735  00147C  6E30               	movwf	(___flmul@a+2)^0,c
  2736  00147E  0E42               	movlw	66
  2737  001480  6E31               	movwf	(___flmul@a+3)^0,c
  2738  001482  EC0B  F00F         	call	___flmul	;wreg free
  2739  001486  C02A  F097         	movff	?___flmul,_detect_color$3265
  2740  00148A  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2741  00148E  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2742  001492  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2743  001496  C097  F076         	movff	_detect_color$3265,lroundf@x
  2744  00149A  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2745  00149E  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2746  0014A2  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2747  0014A6  ECAE  F02A         	call	_lroundf	;wreg free
  2748  0014AA  C076  F095         	movff	?_lroundf,detect_color@BG
  2749  0014AE  C077  F096         	movff	?_lroundf+1,detect_color@BG+1
  2750  0014B2  0100               	movlb	0	; () banked
  2751  0014B4  EE20 F010          	lfsr	2,16
  2752  0014B8  5182               	movf	detect_color@w& (0+255),w,b
  2753  0014BA  26D9               	addwf	fsr2l,f,c
  2754  0014BC  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2755  0014BE  22DA               	addwfc	fsr2h,f,c
  2756  0014C0  CFDE F052          	movff	postinc2,??_detect_color
  2757  0014C4  CFDD F053          	movff	postdec2,??_detect_color+1
  2758  0014C8  C052  F003         	movff	??_detect_color,___xxtofl@val
  2759  0014CC  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2760  0014D0  6A05               	clrf	(___xxtofl@val+2)^0,c
  2761  0014D2  6A06               	clrf	(___xxtofl@val+3)^0,c
  2762  0014D4  0E00               	movlw	0
  2763  0014D6  ECEF  F01D         	call	___xxtofl
  2764  0014DA  C003  F015         	movff	?___xxtofl,___fldiv@a
  2765  0014DE  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2766  0014E2  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2767  0014E6  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2768  0014EA  0100               	movlb	0	; () banked
  2769  0014EC  EE20 F004          	lfsr	2,4
  2770  0014F0  5180               	movf	detect_color@m& (0+255),w,b
  2771  0014F2  26D9               	addwf	fsr2l,f,c
  2772  0014F4  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2773  0014F6  22DA               	addwfc	fsr2h,f,c
  2774  0014F8  CFDE F054          	movff	postinc2,??_detect_color+2
  2775  0014FC  CFDD F055          	movff	postdec2,??_detect_color+3
  2776  001500  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2777  001504  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2778  001508  6A05               	clrf	(___xxtofl@val+2)^0,c
  2779  00150A  6A06               	clrf	(___xxtofl@val+3)^0,c
  2780  00150C  0E00               	movlw	0
  2781  00150E  ECEF  F01D         	call	___xxtofl
  2782  001512  C003  F011         	movff	?___xxtofl,___fldiv@b
  2783  001516  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2784  00151A  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2785  00151E  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2786  001522  ECF9  F012         	call	___fldiv	;wreg free
  2787  001526  C011  F02A         	movff	?___fldiv,___flmul@b
  2788  00152A  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2789  00152E  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2790  001532  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2791  001536  0E00               	movlw	0
  2792  001538  6E2E               	movwf	___flmul@a^0,c
  2793  00153A  0E00               	movlw	0
  2794  00153C  6E2F               	movwf	(___flmul@a+1)^0,c
  2795  00153E  0EC8               	movlw	200
  2796  001540  6E30               	movwf	(___flmul@a+2)^0,c
  2797  001542  0E42               	movlw	66
  2798  001544  6E31               	movwf	(___flmul@a+3)^0,c
  2799  001546  EC0B  F00F         	call	___flmul	;wreg free
  2800  00154A  C02A  F097         	movff	?___flmul,_detect_color$3265
  2801  00154E  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2802  001552  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2803  001556  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2804  00155A  C097  F076         	movff	_detect_color$3265,lroundf@x
  2805  00155E  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2806  001562  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2807  001566  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2808  00156A  ECAE  F02A         	call	_lroundf	;wreg free
  2809  00156E  C076  F092         	movff	?_lroundf,detect_color@BB
  2810  001572  C077  F093         	movff	?_lroundf+1,detect_color@BB+1
  2811  001576                     
  2812                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2813  001576  0E05               	movlw	5
  2814  001578  6E53               	movwf	(??_detect_color+1)^0,c
  2815  00157A  0E0F               	movlw	15
  2816  00157C  6E52               	movwf	??_detect_color^0,c
  2817  00157E  0EF1               	movlw	241
  2818  001580                     u6897:
  2819  001580  2EE8               	decfsz	wreg,f,c
  2820  001582  D7FE               	bra	u6897
  2821  001584  2E52               	decfsz	??_detect_color^0,f,c
  2822  001586  D7FC               	bra	u6897
  2823  001588  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2824  00158A  D7FA               	bra	u6897
  2825  00158C  F000               	nop	
  2826  00158E                     
  2827                           ;color.c: 314:     if (compare(0, BR, 70)){
  2828  00158E  0E00               	movlw	0
  2829  001590  0100               	movlb	0	; () banked
  2830  001592  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2831  001594  0E00               	movlw	0
  2832  001596  6F7A               	movwf	compare@lower& (0+255),b
  2833  001598  C090  F07C         	movff	detect_color@BR,compare@value2compare
  2834  00159C  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2835  0015A0  0E00               	movlw	0
  2836  0015A2  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2837  0015A4  0E46               	movlw	70
  2838  0015A6  6F7E               	movwf	compare@upper& (0+255),b
  2839  0015A8  EC91  F02A         	call	_compare	;wreg free
  2840  0015AC  0900               	iorlw	0
  2841  0015AE  B4D8               	btfsc	status,2,c
  2842  0015B0  EFDC  F00A         	goto	u6561
  2843  0015B4  EFDE  F00A         	goto	u6560
  2844  0015B8                     u6561:
  2845  0015B8  EF4F  F00B         	goto	l6196
  2846  0015BC                     u6560:
  2847  0015BC                     
  2848                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2849  0015BC  C092  F003         	movff	detect_color@BB,___xxtofl@val
  2850  0015C0  C093  F004         	movff	detect_color@BB+1,___xxtofl@val+1
  2851  0015C4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2852  0015C6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2853  0015C8  0E00               	movlw	0
  2854  0015CA  ECEF  F01D         	call	___xxtofl
  2855  0015CE  C003  F015         	movff	?___xxtofl,___fldiv@a
  2856  0015D2  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2857  0015D6  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2858  0015DA  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2859  0015DE  0100               	movlb	0	; () banked
  2860  0015E0  5195               	movf	detect_color@BG& (0+255),w,b
  2861  0015E2  258C               	addwf	detect_color@GG& (0+255),w,b
  2862  0015E4  6E52               	movwf	??_detect_color^0,c
  2863  0015E6  5196               	movf	(detect_color@BG+1)& (0+255),w,b
  2864  0015E8  218D               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2865  0015EA  6E53               	movwf	(??_detect_color+1)^0,c
  2866  0015EC  C052  F003         	movff	??_detect_color,___xxtofl@val
  2867  0015F0  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2868  0015F4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2869  0015F6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2870  0015F8  0E00               	movlw	0
  2871  0015FA  ECEF  F01D         	call	___xxtofl
  2872  0015FE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2873  001602  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2874  001606  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2875  00160A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2876  00160E  ECF9  F012         	call	___fldiv	;wreg free
  2877  001612  C011  F02A         	movff	?___fldiv,___flmul@b
  2878  001616  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2879  00161A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2880  00161E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2881  001622  0E00               	movlw	0
  2882  001624  6E2E               	movwf	___flmul@a^0,c
  2883  001626  0E00               	movlw	0
  2884  001628  6E2F               	movwf	(___flmul@a+1)^0,c
  2885  00162A  0E48               	movlw	72
  2886  00162C  6E30               	movwf	(___flmul@a+2)^0,c
  2887  00162E  0E43               	movlw	67
  2888  001630  6E31               	movwf	(___flmul@a+3)^0,c
  2889  001632  EC0B  F00F         	call	___flmul	;wreg free
  2890  001636  C02A  F097         	movff	?___flmul,_detect_color$3265
  2891  00163A  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2892  00163E  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2893  001642  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2894                           
  2895                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2896  001646  0E00               	movlw	0
  2897  001648  0100               	movlb	0	; () banked
  2898  00164A  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2899  00164C  0E00               	movlw	0
  2900  00164E  6F7A               	movwf	compare@lower& (0+255),b
  2901  001650  C097  F076         	movff	_detect_color$3265,lroundf@x
  2902  001654  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  2903  001658  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  2904  00165C  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  2905  001660  ECAE  F02A         	call	_lroundf	;wreg free
  2906  001664  C076  F07C         	movff	?_lroundf,compare@value2compare
  2907  001668  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2908  00166C  0E01               	movlw	1
  2909  00166E  0100               	movlb	0	; () banked
  2910  001670  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2911  001672  0E9E               	movlw	158
  2912  001674  6F7E               	movwf	compare@upper& (0+255),b
  2913  001676  EC91  F02A         	call	_compare	;wreg free
  2914  00167A  0900               	iorlw	0
  2915  00167C  B4D8               	btfsc	status,2,c
  2916  00167E  EF43  F00B         	goto	u6571
  2917  001682  EF45  F00B         	goto	u6570
  2918  001686                     u6571:
  2919  001686  EF4A  F00B         	goto	l6194
  2920  00168A                     u6570:
  2921  00168A  0E03               	movlw	3
  2922  00168C  0100               	movlb	0	; () banked
  2923  00168E  6F94               	movwf	detect_color@color& (0+255),b
  2924  001690  EF30  F00C         	goto	l6226
  2925  001694                     l6194:
  2926  001694  0E02               	movlw	2
  2927  001696  0100               	movlb	0	; () banked
  2928  001698  6F94               	movwf	detect_color@color& (0+255),b
  2929  00169A  EF30  F00C         	goto	l6226
  2930  00169E                     l6196:
  2931                           
  2932                           ;color.c: 320:         if (compare(0, BG, 75)){
  2933  00169E  0E00               	movlw	0
  2934  0016A0  0100               	movlb	0	; () banked
  2935  0016A2  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2936  0016A4  0E00               	movlw	0
  2937  0016A6  6F7A               	movwf	compare@lower& (0+255),b
  2938  0016A8  C095  F07C         	movff	detect_color@BG,compare@value2compare
  2939  0016AC  C096  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2940  0016B0  0E00               	movlw	0
  2941  0016B2  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2942  0016B4  0E4B               	movlw	75
  2943  0016B6  6F7E               	movwf	compare@upper& (0+255),b
  2944  0016B8  EC91  F02A         	call	_compare	;wreg free
  2945  0016BC  0900               	iorlw	0
  2946  0016BE  B4D8               	btfsc	status,2,c
  2947  0016C0  EF64  F00B         	goto	u6581
  2948  0016C4  EF66  F00B         	goto	u6580
  2949  0016C8                     u6581:
  2950  0016C8  EFE0  F00B         	goto	l6208
  2951  0016CC                     u6580:
  2952  0016CC                     
  2953                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2954  0016CC  C088  F003         	movff	detect_color@RG,___xxtofl@val
  2955  0016D0  C089  F004         	movff	detect_color@RG+1,___xxtofl@val+1
  2956  0016D4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2957  0016D6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2958  0016D8  0E00               	movlw	0
  2959  0016DA  ECEF  F01D         	call	___xxtofl
  2960  0016DE  C003  F015         	movff	?___xxtofl,___fldiv@a
  2961  0016E2  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2962  0016E6  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2963  0016EA  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2964  0016EE  C08E  F003         	movff	detect_color@RR,___xxtofl@val
  2965  0016F2  C08F  F004         	movff	detect_color@RR+1,___xxtofl@val+1
  2966  0016F6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2967  0016F8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2968  0016FA  0E00               	movlw	0
  2969  0016FC  ECEF  F01D         	call	___xxtofl
  2970  001700  C003  F011         	movff	?___xxtofl,___fldiv@b
  2971  001704  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2972  001708  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2973  00170C  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2974  001710  ECF9  F012         	call	___fldiv	;wreg free
  2975  001714  C011  F02A         	movff	?___fldiv,___flmul@b
  2976  001718  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2977  00171C  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2978  001720  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2979  001724  0E00               	movlw	0
  2980  001726  6E2E               	movwf	___flmul@a^0,c
  2981  001728  0E00               	movlw	0
  2982  00172A  6E2F               	movwf	(___flmul@a+1)^0,c
  2983  00172C  0EFA               	movlw	250
  2984  00172E  6E30               	movwf	(___flmul@a+2)^0,c
  2985  001730  0E43               	movlw	67
  2986  001732  6E31               	movwf	(___flmul@a+3)^0,c
  2987  001734  EC0B  F00F         	call	___flmul	;wreg free
  2988  001738  C02A  F097         	movff	?___flmul,_detect_color$3265
  2989  00173C  C02B  F098         	movff	?___flmul+1,_detect_color$3265+1
  2990  001740  C02C  F099         	movff	?___flmul+2,_detect_color$3265+2
  2991  001744  C02D  F09A         	movff	?___flmul+3,_detect_color$3265+3
  2992                           
  2993                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2994  001748  0E00               	movlw	0
  2995  00174A  0100               	movlb	0	; () banked
  2996  00174C  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2997  00174E  0E00               	movlw	0
  2998  001750  6F7A               	movwf	compare@lower& (0+255),b
  2999  001752  C097  F076         	movff	_detect_color$3265,lroundf@x
  3000  001756  C098  F077         	movff	_detect_color$3265+1,lroundf@x+1
  3001  00175A  C099  F078         	movff	_detect_color$3265+2,lroundf@x+2
  3002  00175E  C09A  F079         	movff	_detect_color$3265+3,lroundf@x+3
  3003  001762  ECAE  F02A         	call	_lroundf	;wreg free
  3004  001766  C076  F07C         	movff	?_lroundf,compare@value2compare
  3005  00176A  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  3006  00176E  0E02               	movlw	2
  3007  001770  0100               	movlb	0	; () banked
  3008  001772  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3009  001774  0E9E               	movlw	158
  3010  001776  6F7E               	movwf	compare@upper& (0+255),b
  3011  001778  EC91  F02A         	call	_compare	;wreg free
  3012  00177C  0900               	iorlw	0
  3013  00177E  B4D8               	btfsc	status,2,c
  3014  001780  EFC4  F00B         	goto	u6591
  3015  001784  EFC6  F00B         	goto	u6590
  3016  001788                     u6591:
  3017  001788  EFDB  F00B         	goto	l6206
  3018  00178C                     u6590:
  3019  00178C                     
  3020                           ;color.c: 323:                 if (GR > 90){color = 6;}
  3021  00178C  0100               	movlb	0	; () banked
  3022  00178E  518B               	movf	(detect_color@GR+1)& (0+255),w,b
  3023  001790  E109               	bnz	u6600
  3024  001792  0E5B               	movlw	91
  3025  001794  5D8A               	subwf	detect_color@GR& (0+255),w,b
  3026  001796  A0D8               	btfss	status,0,c
  3027  001798  EFD0  F00B         	goto	u6601
  3028  00179C  EFD2  F00B         	goto	u6600
  3029  0017A0                     u6601:
  3030  0017A0  EFD6  F00B         	goto	l6204
  3031  0017A4                     u6600:
  3032  0017A4                     
  3033                           ; BSR set to: 0
  3034  0017A4  0E06               	movlw	6
  3035  0017A6  6F94               	movwf	detect_color@color& (0+255),b
  3036  0017A8  EF30  F00C         	goto	l6226
  3037  0017AC                     l6204:
  3038  0017AC  0E00               	movlw	0
  3039  0017AE  0100               	movlb	0	; () banked
  3040  0017B0  6F94               	movwf	detect_color@color& (0+255),b
  3041  0017B2  EF30  F00C         	goto	l6226
  3042  0017B6                     l6206:
  3043  0017B6  0E01               	movlw	1
  3044  0017B8  0100               	movlb	0	; () banked
  3045  0017BA  6F94               	movwf	detect_color@color& (0+255),b
  3046  0017BC  EF30  F00C         	goto	l6226
  3047  0017C0                     l6208:
  3048                           
  3049                           ;color.c: 329:             if (compare(0, BR, 90)){
  3050  0017C0  0E00               	movlw	0
  3051  0017C2  0100               	movlb	0	; () banked
  3052  0017C4  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3053  0017C6  0E00               	movlw	0
  3054  0017C8  6F7A               	movwf	compare@lower& (0+255),b
  3055  0017CA  C090  F07C         	movff	detect_color@BR,compare@value2compare
  3056  0017CE  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  3057  0017D2  0E00               	movlw	0
  3058  0017D4  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3059  0017D6  0E5A               	movlw	90
  3060  0017D8  6F7E               	movwf	compare@upper& (0+255),b
  3061  0017DA  EC91  F02A         	call	_compare	;wreg free
  3062  0017DE  0900               	iorlw	0
  3063  0017E0  B4D8               	btfsc	status,2,c
  3064  0017E2  EFF5  F00B         	goto	u6611
  3065  0017E6  EFF7  F00B         	goto	u6610
  3066  0017EA                     u6611:
  3067  0017EA  EF07  F00C         	goto	l6216
  3068  0017EE                     u6610:
  3069  0017EE                     
  3070                           ;color.c: 330:                 if (BG > 90){color = 7;}
  3071  0017EE  0100               	movlb	0	; () banked
  3072  0017F0  5196               	movf	(detect_color@BG+1)& (0+255),w,b
  3073  0017F2  E109               	bnz	u6620
  3074  0017F4  0E5B               	movlw	91
  3075  0017F6  5D95               	subwf	detect_color@BG& (0+255),w,b
  3076  0017F8  A0D8               	btfss	status,0,c
  3077  0017FA  EF01  F00C         	goto	u6621
  3078  0017FE  EF03  F00C         	goto	u6620
  3079  001802                     u6621:
  3080  001802  EFD6  F00B         	goto	l6204
  3081  001806                     u6620:
  3082  001806                     
  3083                           ; BSR set to: 0
  3084  001806  0E07               	movlw	7
  3085  001808  6F94               	movwf	detect_color@color& (0+255),b
  3086  00180A  EF30  F00C         	goto	l6226
  3087  00180E                     l6216:
  3088                           
  3089                           ;color.c: 334:                 if (BG < BB){color = 5;}
  3090  00180E  0100               	movlb	0	; () banked
  3091  001810  5192               	movf	detect_color@BB& (0+255),w,b
  3092  001812  5D95               	subwf	detect_color@BG& (0+255),w,b
  3093  001814  5193               	movf	(detect_color@BB+1)& (0+255),w,b
  3094  001816  5996               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3095  001818  B0D8               	btfsc	status,0,c
  3096  00181A  EF11  F00C         	goto	u6631
  3097  00181E  EF13  F00C         	goto	u6630
  3098  001822                     u6631:
  3099  001822  EF17  F00C         	goto	l6220
  3100  001826                     u6630:
  3101  001826                     
  3102                           ; BSR set to: 0
  3103  001826  0E05               	movlw	5
  3104  001828  6F94               	movwf	detect_color@color& (0+255),b
  3105  00182A  EF30  F00C         	goto	l6226
  3106  00182E                     l6220:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;color.c: 336:                     if (compare(0, BB, 90)){color = 4;}
  3110  00182E  0E00               	movlw	0
  3111  001830  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3112  001832  0E00               	movlw	0
  3113  001834  6F7A               	movwf	compare@lower& (0+255),b
  3114  001836  C092  F07C         	movff	detect_color@BB,compare@value2compare
  3115  00183A  C093  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  3116  00183E  0E00               	movlw	0
  3117  001840  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3118  001842  0E5A               	movlw	90
  3119  001844  6F7E               	movwf	compare@upper& (0+255),b
  3120  001846  EC91  F02A         	call	_compare	;wreg free
  3121  00184A  0900               	iorlw	0
  3122  00184C  B4D8               	btfsc	status,2,c
  3123  00184E  EF2B  F00C         	goto	u6641
  3124  001852  EF2D  F00C         	goto	u6640
  3125  001856                     u6641:
  3126  001856  EFD6  F00B         	goto	l6204
  3127  00185A                     u6640:
  3128  00185A  0E04               	movlw	4
  3129  00185C  0100               	movlb	0	; () banked
  3130  00185E  6F94               	movwf	detect_color@color& (0+255),b
  3131  001860                     l6226:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;color.c: 343:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  3135  001860  0E00               	movlw	0
  3136  001862  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3137  001864  0E5F               	movlw	95
  3138  001866  6F7A               	movwf	compare@lower& (0+255),b
  3139  001868  C090  F07C         	movff	detect_color@BR,compare@value2compare
  3140  00186C  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  3141  001870  0E00               	movlw	0
  3142  001872  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3143  001874  0E69               	movlw	105
  3144  001876  6F7E               	movwf	compare@upper& (0+255),b
  3145  001878  EC91  F02A         	call	_compare	;wreg free
  3146  00187C  0900               	iorlw	0
  3147  00187E  B4D8               	btfsc	status,2,c
  3148  001880  EF44  F00C         	goto	u6651
  3149  001884  EF46  F00C         	goto	u6650
  3150  001888                     u6651:
  3151  001888  EF77  F00C         	goto	l6234
  3152  00188C                     u6650:
  3153  00188C  0E00               	movlw	0
  3154  00188E  0100               	movlb	0	; () banked
  3155  001890  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3156  001892  0E5F               	movlw	95
  3157  001894  6F7A               	movwf	compare@lower& (0+255),b
  3158  001896  C095  F07C         	movff	detect_color@BG,compare@value2compare
  3159  00189A  C096  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  3160  00189E  0E00               	movlw	0
  3161  0018A0  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3162  0018A2  0E69               	movlw	105
  3163  0018A4  6F7E               	movwf	compare@upper& (0+255),b
  3164  0018A6  EC91  F02A         	call	_compare	;wreg free
  3165  0018AA  0900               	iorlw	0
  3166  0018AC  B4D8               	btfsc	status,2,c
  3167  0018AE  EF5B  F00C         	goto	u6661
  3168  0018B2  EF5D  F00C         	goto	u6660
  3169  0018B6                     u6661:
  3170  0018B6  EF77  F00C         	goto	l6234
  3171  0018BA                     u6660:
  3172  0018BA  0E00               	movlw	0
  3173  0018BC  0100               	movlb	0	; () banked
  3174  0018BE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3175  0018C0  0E5F               	movlw	95
  3176  0018C2  6F7A               	movwf	compare@lower& (0+255),b
  3177  0018C4  C092  F07C         	movff	detect_color@BB,compare@value2compare
  3178  0018C8  C093  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  3179  0018CC  0E00               	movlw	0
  3180  0018CE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3181  0018D0  0E69               	movlw	105
  3182  0018D2  6F7E               	movwf	compare@upper& (0+255),b
  3183  0018D4  EC91  F02A         	call	_compare	;wreg free
  3184  0018D8  0900               	iorlw	0
  3185  0018DA  B4D8               	btfsc	status,2,c
  3186  0018DC  EF72  F00C         	goto	u6671
  3187  0018E0  EF74  F00C         	goto	u6670
  3188  0018E4                     u6671:
  3189  0018E4  EF77  F00C         	goto	l6234
  3190  0018E8                     u6670:
  3191  0018E8  0E08               	movlw	8
  3192  0018EA  0100               	movlb	0	; () banked
  3193  0018EC  6F94               	movwf	detect_color@color& (0+255),b
  3194  0018EE                     l6234:
  3195                           
  3196                           ;color.c: 344:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3197  0018EE  0E00               	movlw	0
  3198  0018F0  0100               	movlb	0	; () banked
  3199  0018F2  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3200  0018F4  0E00               	movlw	0
  3201  0018F6  6F7A               	movwf	compare@lower& (0+255),b
  3202  0018F8  C090  F07C         	movff	detect_color@BR,compare@value2compare
  3203  0018FC  C091  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  3204  001900  0E00               	movlw	0
  3205  001902  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3206  001904  0E19               	movlw	25
  3207  001906  6F7E               	movwf	compare@upper& (0+255),b
  3208  001908  EC91  F02A         	call	_compare	;wreg free
  3209  00190C  0900               	iorlw	0
  3210  00190E  B4D8               	btfsc	status,2,c
  3211  001910  EF8C  F00C         	goto	u6681
  3212  001914  EF8E  F00C         	goto	u6680
  3213  001918                     u6681:
  3214  001918  EFA8  F00C         	goto	l167
  3215  00191C                     u6680:
  3216  00191C  0E00               	movlw	0
  3217  00191E  0100               	movlb	0	; () banked
  3218  001920  6F7B               	movwf	(compare@lower+1)& (0+255),b
  3219  001922  0E00               	movlw	0
  3220  001924  6F7A               	movwf	compare@lower& (0+255),b
  3221  001926  C08E  F07C         	movff	detect_color@RR,compare@value2compare
  3222  00192A  C08F  F07D         	movff	detect_color@RR+1,compare@value2compare+1
  3223  00192E  0E00               	movlw	0
  3224  001930  6F7F               	movwf	(compare@upper+1)& (0+255),b
  3225  001932  0E5A               	movlw	90
  3226  001934  6F7E               	movwf	compare@upper& (0+255),b
  3227  001936  EC91  F02A         	call	_compare	;wreg free
  3228  00193A  0900               	iorlw	0
  3229  00193C  B4D8               	btfsc	status,2,c
  3230  00193E  EFA3  F00C         	goto	u6691
  3231  001942  EFA5  F00C         	goto	u6690
  3232  001946                     u6691:
  3233  001946  EFA8  F00C         	goto	l167
  3234  00194A                     u6690:
  3235  00194A  0E00               	movlw	0
  3236  00194C  0100               	movlb	0	; () banked
  3237  00194E  6F94               	movwf	detect_color@color& (0+255),b
  3238  001950                     l167:
  3239                           
  3240                           ;color.c: 347:     return color;
  3241  001950  0100               	movlb	0	; () banked
  3242  001952  5194               	movf	detect_color@color& (0+255),w,b
  3243  001954                     
  3244                           ; BSR set to: 0
  3245  001954  0012               	return		;funcret
  3246  001956                     __end_of_detect_color:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _compare *****************
  3250 ;; Defined at:
  3251 ;;		line 350 in file "color.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  lower           2   26[BANK0 ] unsigned int 
  3254 ;;  value2compar    2   28[BANK0 ] unsigned int 
  3255 ;;  upper           2   30[BANK0 ] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  result          1   80[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      unsigned char 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;Total ram usage:        7 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 2
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_detect_color
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text5
  3282  005522                     __ptext5:
  3283                           	callstack 0
  3284  005522                     _compare:
  3285                           	callstack 26
  3286  005522                     
  3287                           ;color.c: 350: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 351: {;color.c: 352:     unsigned char result = 0;
  3288  005522  0E00               	movlw	0
  3289  005524  6E51               	movwf	compare@result^0,c
  3290  005526                     
  3291                           ;color.c: 353:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3292  005526  0100               	movlb	0	; () banked
  3293  005528  517C               	movf	compare@value2compare& (0+255),w,b
  3294  00552A  5D7A               	subwf	compare@lower& (0+255),w,b
  3295  00552C  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  3296  00552E  597B               	subwfb	(compare@lower+1)& (0+255),w,b
  3297  005530  B0D8               	btfsc	status,0,c
  3298  005532  EF9D  F02A         	goto	u6501
  3299  005536  EF9F  F02A         	goto	u6500
  3300  00553A                     u6501:
  3301  00553A  EFAC  F02A         	goto	l171
  3302  00553E                     u6500:
  3303  00553E                     
  3304                           ; BSR set to: 0
  3305  00553E  517C               	movf	compare@value2compare& (0+255),w,b
  3306  005540  5D7E               	subwf	compare@upper& (0+255),w,b
  3307  005542  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  3308  005544  597F               	subwfb	(compare@upper+1)& (0+255),w,b
  3309  005546  A0D8               	btfss	status,0,c
  3310  005548  EFA8  F02A         	goto	u6511
  3311  00554C  EFAA  F02A         	goto	u6510
  3312  005550                     u6511:
  3313  005550  EFAC  F02A         	goto	l171
  3314  005554                     u6510:
  3315  005554                     
  3316                           ; BSR set to: 0
  3317  005554  0E01               	movlw	1
  3318  005556  6E51               	movwf	compare@result^0,c
  3319  005558                     l171:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;color.c: 354:     return result;
  3323  005558  5051               	movf	compare@result^0,w,c
  3324  00555A                     
  3325                           ; BSR set to: 0
  3326  00555A  0012               	return		;funcret
  3327  00555C                     __end_of_compare:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _color_data_collection *****************
  3331 ;; Defined at:
  3332 ;;		line 200 in file "color.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  m               2  127[BANK0 ] PTR struct color_rgb
  3335 ;;		 -> main@rgb(8), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  x               2  137[BANK0 ] int 
  3338 ;;  k               2  135[BANK0 ] int 
  3339 ;;  j               2  133[BANK0 ] int 
  3340 ;;  i               2  131[BANK0 ] int 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;Total ram usage:       12 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 11
  3357 ;; This function calls:
  3358 ;;		_LED_B
  3359 ;;		_LED_C
  3360 ;;		_LED_G
  3361 ;;		_LED_R
  3362 ;;		_color_display
  3363 ;;		_color_predict
  3364 ;;		_read_color
  3365 ;; This function is called by:
  3366 ;;		_test_function
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text6
  3371  00386C                     __ptext6:
  3372                           	callstack 0
  3373  00386C                     _color_data_collection:
  3374                           	callstack 18
  3375  00386C                     
  3376                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3377  00386C  0E00               	movlw	0
  3378  00386E  0100               	movlb	0	; () banked
  3379  003870  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3380  003872  0E00               	movlw	0
  3381  003874  6FE3               	movwf	color_data_collection@i& (0+255),b
  3382  003876  0E00               	movlw	0
  3383  003878  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3384  00387A  0E00               	movlw	0
  3385  00387C  6FE7               	movwf	color_data_collection@k& (0+255),b
  3386  00387E  0E00               	movlw	0
  3387  003880  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3388  003882  0E00               	movlw	0
  3389  003884  6FE9               	movwf	color_data_collection@x& (0+255),b
  3390                           
  3391                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3392  003886  0E00               	movlw	0
  3393  003888  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3394  00388A  0E00               	movlw	0
  3395  00388C  6FE3               	movwf	color_data_collection@i& (0+255),b
  3396  00388E                     l6056:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;color.c: 204:         LED_C();
  3400  00388E  ECC7  F02B         	call	_LED_C	;wreg free
  3401  003892                     
  3402                           ;color.c: 205:         read_color(m);
  3403  003892  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3404  003896  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3405  00389A  ECB0  F028         	call	_read_color	;wreg free
  3406  00389E                     
  3407                           ;color.c: 206:         color_display(m);
  3408  00389E  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3409  0038A2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3410  0038A6  EC17  F028         	call	_color_display	;wreg free
  3411  0038AA                     
  3412                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3413  0038AA  0E09               	movlw	9
  3414  0038AC  0100               	movlb	0	; () banked
  3415  0038AE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3416  0038B0  0E1E               	movlw	30
  3417  0038B2  6FE1               	movwf	??_color_data_collection& (0+255),b
  3418  0038B4  0EE4               	movlw	228
  3419  0038B6                     u6907:
  3420  0038B6  2EE8               	decfsz	wreg,f,c
  3421  0038B8  D7FE               	bra	u6907
  3422  0038BA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3423  0038BC  D7FC               	bra	u6907
  3424  0038BE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3425  0038C0  D7FA               	bra	u6907
  3426  0038C2  F000               	nop	
  3427  0038C4                     
  3428                           ;color.c: 208:     }
  3429  0038C4  0100               	movlb	0	; () banked
  3430  0038C6  4BE3               	infsnz	color_data_collection@i& (0+255),f,b
  3431  0038C8  2BE4               	incf	(color_data_collection@i+1)& (0+255),f,b
  3432  0038CA                     
  3433                           ; BSR set to: 0
  3434  0038CA  BFE4               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3435  0038CC  EF71  F01C         	goto	u6521
  3436  0038D0  51E4               	movf	(color_data_collection@i+1)& (0+255),w,b
  3437  0038D2  E109               	bnz	u6520
  3438  0038D4  0E05               	movlw	5
  3439  0038D6  5DE3               	subwf	color_data_collection@i& (0+255),w,b
  3440  0038D8  A0D8               	btfss	status,0,c
  3441  0038DA  EF71  F01C         	goto	u6521
  3442  0038DE  EF73  F01C         	goto	u6520
  3443  0038E2                     u6521:
  3444  0038E2  EF47  F01C         	goto	l6056
  3445  0038E6                     u6520:
  3446  0038E6                     
  3447                           ; BSR set to: 0
  3448                           ;color.c: 209:     color_predict(00000);
  3449  0038E6  0E00               	movlw	0
  3450  0038E8  EC34  F02B         	call	_color_predict
  3451  0038EC                     
  3452                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3453  0038EC  0E00               	movlw	0
  3454  0038EE  0100               	movlb	0	; () banked
  3455  0038F0  6FE6               	movwf	(color_data_collection@j+1)& (0+255),b
  3456  0038F2  0E00               	movlw	0
  3457  0038F4  6FE5               	movwf	color_data_collection@j& (0+255),b
  3458  0038F6                     l6076:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;color.c: 211:         LED_R();
  3462  0038F6  EC87  F02B         	call	_LED_R	;wreg free
  3463  0038FA                     
  3464                           ;color.c: 212:         read_color(m);
  3465  0038FA  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3466  0038FE  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3467  003902  ECB0  F028         	call	_read_color	;wreg free
  3468  003906                     
  3469                           ;color.c: 213:         color_display(m);
  3470  003906  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3471  00390A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3472  00390E  EC17  F028         	call	_color_display	;wreg free
  3473  003912                     
  3474                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3475  003912  0E09               	movlw	9
  3476  003914  0100               	movlb	0	; () banked
  3477  003916  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3478  003918  0E1E               	movlw	30
  3479  00391A  6FE1               	movwf	??_color_data_collection& (0+255),b
  3480  00391C  0EE4               	movlw	228
  3481  00391E                     u6917:
  3482  00391E  2EE8               	decfsz	wreg,f,c
  3483  003920  D7FE               	bra	u6917
  3484  003922  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3485  003924  D7FC               	bra	u6917
  3486  003926  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3487  003928  D7FA               	bra	u6917
  3488  00392A  F000               	nop	
  3489  00392C                     
  3490                           ;color.c: 215:     }
  3491  00392C  0100               	movlb	0	; () banked
  3492  00392E  4BE5               	infsnz	color_data_collection@j& (0+255),f,b
  3493  003930  2BE6               	incf	(color_data_collection@j+1)& (0+255),f,b
  3494  003932                     
  3495                           ; BSR set to: 0
  3496  003932  BFE6               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3497  003934  EFA5  F01C         	goto	u6531
  3498  003938  51E6               	movf	(color_data_collection@j+1)& (0+255),w,b
  3499  00393A  E109               	bnz	u6530
  3500  00393C  0E05               	movlw	5
  3501  00393E  5DE5               	subwf	color_data_collection@j& (0+255),w,b
  3502  003940  A0D8               	btfss	status,0,c
  3503  003942  EFA5  F01C         	goto	u6531
  3504  003946  EFA7  F01C         	goto	u6530
  3505  00394A                     u6531:
  3506  00394A  EF7B  F01C         	goto	l6076
  3507  00394E                     u6530:
  3508  00394E                     
  3509                           ; BSR set to: 0
  3510                           ;color.c: 216:     color_predict(00000);
  3511  00394E  0E00               	movlw	0
  3512  003950  EC34  F02B         	call	_color_predict
  3513  003954                     
  3514                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3515  003954  0E00               	movlw	0
  3516  003956  0100               	movlb	0	; () banked
  3517  003958  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3518  00395A  0E00               	movlw	0
  3519  00395C  6FE7               	movwf	color_data_collection@k& (0+255),b
  3520  00395E                     l6096:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;color.c: 218:         LED_G();
  3524  00395E  ECA7  F02B         	call	_LED_G	;wreg free
  3525  003962                     
  3526                           ;color.c: 219:         read_color(m);
  3527  003962  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3528  003966  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3529  00396A  ECB0  F028         	call	_read_color	;wreg free
  3530  00396E                     
  3531                           ;color.c: 220:         color_display(m);
  3532  00396E  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3533  003972  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3534  003976  EC17  F028         	call	_color_display	;wreg free
  3535  00397A                     
  3536                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3537  00397A  0E09               	movlw	9
  3538  00397C  0100               	movlb	0	; () banked
  3539  00397E  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3540  003980  0E1E               	movlw	30
  3541  003982  6FE1               	movwf	??_color_data_collection& (0+255),b
  3542  003984  0EE4               	movlw	228
  3543  003986                     u6927:
  3544  003986  2EE8               	decfsz	wreg,f,c
  3545  003988  D7FE               	bra	u6927
  3546  00398A  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3547  00398C  D7FC               	bra	u6927
  3548  00398E  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3549  003990  D7FA               	bra	u6927
  3550  003992  F000               	nop	
  3551  003994                     
  3552                           ;color.c: 222:     }
  3553  003994  0100               	movlb	0	; () banked
  3554  003996  4BE7               	infsnz	color_data_collection@k& (0+255),f,b
  3555  003998  2BE8               	incf	(color_data_collection@k+1)& (0+255),f,b
  3556  00399A                     
  3557                           ; BSR set to: 0
  3558  00399A  BFE8               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3559  00399C  EFD9  F01C         	goto	u6541
  3560  0039A0  51E8               	movf	(color_data_collection@k+1)& (0+255),w,b
  3561  0039A2  E109               	bnz	u6540
  3562  0039A4  0E05               	movlw	5
  3563  0039A6  5DE7               	subwf	color_data_collection@k& (0+255),w,b
  3564  0039A8  A0D8               	btfss	status,0,c
  3565  0039AA  EFD9  F01C         	goto	u6541
  3566  0039AE  EFDB  F01C         	goto	u6540
  3567  0039B2                     u6541:
  3568  0039B2  EFAF  F01C         	goto	l6096
  3569  0039B6                     u6540:
  3570  0039B6                     
  3571                           ; BSR set to: 0
  3572                           ;color.c: 223:     color_predict(00000);
  3573  0039B6  0E00               	movlw	0
  3574  0039B8  EC34  F02B         	call	_color_predict
  3575  0039BC                     
  3576                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3577  0039BC  0E00               	movlw	0
  3578  0039BE  0100               	movlb	0	; () banked
  3579  0039C0  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3580  0039C2  0E00               	movlw	0
  3581  0039C4  6FE9               	movwf	color_data_collection@x& (0+255),b
  3582  0039C6                     l6116:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;color.c: 225:         LED_B();
  3586  0039C6  ECB7  F02B         	call	_LED_B	;wreg free
  3587  0039CA                     
  3588                           ;color.c: 226:         read_color(m);
  3589  0039CA  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3590  0039CE  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3591  0039D2  ECB0  F028         	call	_read_color	;wreg free
  3592  0039D6                     
  3593                           ;color.c: 227:         color_display(m);
  3594  0039D6  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3595  0039DA  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3596  0039DE  EC17  F028         	call	_color_display	;wreg free
  3597  0039E2                     
  3598                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3599  0039E2  0E09               	movlw	9
  3600  0039E4  0100               	movlb	0	; () banked
  3601  0039E6  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3602  0039E8  0E1E               	movlw	30
  3603  0039EA  6FE1               	movwf	??_color_data_collection& (0+255),b
  3604  0039EC  0EE4               	movlw	228
  3605  0039EE                     u6937:
  3606  0039EE  2EE8               	decfsz	wreg,f,c
  3607  0039F0  D7FE               	bra	u6937
  3608  0039F2  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3609  0039F4  D7FC               	bra	u6937
  3610  0039F6  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3611  0039F8  D7FA               	bra	u6937
  3612  0039FA  F000               	nop	
  3613  0039FC                     
  3614                           ;color.c: 229:     }
  3615  0039FC  0100               	movlb	0	; () banked
  3616  0039FE  4BE9               	infsnz	color_data_collection@x& (0+255),f,b
  3617  003A00  2BEA               	incf	(color_data_collection@x+1)& (0+255),f,b
  3618  003A02                     
  3619                           ; BSR set to: 0
  3620  003A02  BFEA               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3621  003A04  EF0D  F01D         	goto	u6551
  3622  003A08  51EA               	movf	(color_data_collection@x+1)& (0+255),w,b
  3623  003A0A  E109               	bnz	u6550
  3624  003A0C  0E05               	movlw	5
  3625  003A0E  5DE9               	subwf	color_data_collection@x& (0+255),w,b
  3626  003A10  A0D8               	btfss	status,0,c
  3627  003A12  EF0D  F01D         	goto	u6551
  3628  003A16  EF0F  F01D         	goto	u6550
  3629  003A1A                     u6551:
  3630  003A1A  EFE3  F01C         	goto	l6116
  3631  003A1E                     u6550:
  3632  003A1E                     
  3633                           ; BSR set to: 0
  3634                           ;color.c: 230:     color_predict(1);
  3635  003A1E  0E01               	movlw	1
  3636  003A20  EC34  F02B         	call	_color_predict
  3637  003A24                     
  3638                           ;color.c: 231:     LED_C();
  3639  003A24  ECC7  F02B         	call	_LED_C	;wreg free
  3640  003A28  0012               	return		;funcret
  3641  003A2A                     __end_of_color_data_collection:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _read_color *****************
  3645 ;; Defined at:
  3646 ;;		line 147 in file "color.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3649 ;;		 -> main@rgb(8), 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;Total ram usage:        2 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 5
  3668 ;; This function calls:
  3669 ;;		_color_read_Blue
  3670 ;;		_color_read_Clear
  3671 ;;		_color_read_Green
  3672 ;;		_color_read_Red
  3673 ;; This function is called by:
  3674 ;;		_color_data_collection
  3675 ;;		_detect_color
  3676 ;;		_test_function
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text7
  3681  005160                     __ptext7:
  3682                           	callstack 0
  3683  005160                     _read_color:
  3684                           	callstack 23
  3685  005160                     
  3686                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3687  005160  EC08  F029         	call	_color_read_Red	;wreg free
  3688  005164  C00E  FFD9         	movff	read_color@m,fsr2l
  3689  005168  C00F  FFDA         	movff	read_color@m+1,fsr2h
  3690  00516C  C007  FFDE         	movff	?_color_read_Red,postinc2
  3691  005170  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  3692                           
  3693                           ;color.c: 150:     m->B = color_read_Blue();
  3694  005174  EC58  F029         	call	_color_read_Blue	;wreg free
  3695  005178  EE20 F004          	lfsr	2,4
  3696  00517C  500E               	movf	read_color@m^0,w,c
  3697  00517E  26D9               	addwf	fsr2l,f,c
  3698  005180  500F               	movf	(read_color@m+1)^0,w,c
  3699  005182  22DA               	addwfc	fsr2h,f,c
  3700  005184  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3701  005188  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3702                           
  3703                           ;color.c: 151:     m->G = color_read_Green();
  3704  00518C  EC30  F029         	call	_color_read_Green	;wreg free
  3705  005190  EE20 F002          	lfsr	2,2
  3706  005194  500E               	movf	read_color@m^0,w,c
  3707  005196  26D9               	addwf	fsr2l,f,c
  3708  005198  500F               	movf	(read_color@m+1)^0,w,c
  3709  00519A  22DA               	addwfc	fsr2h,f,c
  3710  00519C  C007  FFDE         	movff	?_color_read_Green,postinc2
  3711  0051A0  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  3712                           
  3713                           ;color.c: 152:     m->C = color_read_Clear();
  3714  0051A4  EC80  F029         	call	_color_read_Clear	;wreg free
  3715  0051A8  EE20 F006          	lfsr	2,6
  3716  0051AC  500E               	movf	read_color@m^0,w,c
  3717  0051AE  26D9               	addwf	fsr2l,f,c
  3718  0051B0  500F               	movf	(read_color@m+1)^0,w,c
  3719  0051B2  22DA               	addwfc	fsr2h,f,c
  3720  0051B4  C007  FFDE         	movff	?_color_read_Clear,postinc2
  3721  0051B8  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  3722  0051BC  0012               	return		;funcret
  3723  0051BE                     __end_of_read_color:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _color_predict *****************
  3727 ;; Defined at:
  3728 ;;		line 250 in file "color.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  color           1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  color           1  125[BANK0 ] unsigned char 
  3733 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:      101 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 10
  3750 ;; This function calls:
  3751 ;;		_sendStringSerial4
  3752 ;;		_sprintf
  3753 ;; This function is called by:
  3754 ;;		_color_data_collection
  3755 ;;		_test_function
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text8
  3760  005668                     __ptext8:
  3761                           	callstack 0
  3762  005668                     _color_predict:
  3763                           	callstack 19
  3764                           
  3765                           ;incstack = 0
  3766                           ;color_predict@color stored from wreg
  3767  005668  0100               	movlb	0	; () banked
  3768  00566A  6FDD               	movwf	color_predict@color& (0+255),b
  3769  00566C                     
  3770                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
  3771  00566C  0E79               	movlw	low color_predict@buf
  3772  00566E  0100               	movlb	0	; () banked
  3773  005670  6F60               	movwf	sprintf@s& (0+255),b
  3774  005672  0E00               	movlw	high color_predict@buf
  3775  005674  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3776  005676  0E0D               	movlw	low (STR_1+8)
  3777  005678  6F62               	movwf	sprintf@fmt& (0+255),b
  3778  00567A  0E0E               	movlw	high (STR_1+8)
  3779  00567C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3780  00567E  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  3781  005682  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3782  005684  ECDF  F028         	call	_sprintf	;wreg free
  3783  005688                     
  3784                           ;color.c: 254:     sendStringSerial4(buf);
  3785  005688  0E79               	movlw	low color_predict@buf
  3786  00568A  6E04               	movwf	sendStringSerial4@string^0,c
  3787  00568C  0E00               	movlw	high color_predict@buf
  3788  00568E  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  3789  005690  EC1C  F02B         	call	_sendStringSerial4	;wreg free
  3790  005694  0012               	return		;funcret
  3791  005696                     __end_of_color_predict:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _color_display *****************
  3795 ;; Defined at:
  3796 ;;		line 234 in file "color.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  3799 ;;		 -> main@rgb(8), 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  buf           100   27[BANK0 ] unsigned char [100]
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Totals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;Total ram usage:      102 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 10
  3818 ;; This function calls:
  3819 ;;		_sendStringSerial4
  3820 ;;		_sprintf
  3821 ;; This function is called by:
  3822 ;;		_color_data_collection
  3823 ;;		_test_function
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text9
  3828  00502E                     __ptext9:
  3829                           	callstack 0
  3830  00502E                     _color_display:
  3831                           	callstack 19
  3832  00502E                     
  3833                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3834  00502E  0E7B               	movlw	low color_display@buf
  3835  005030  0100               	movlb	0	; () banked
  3836  005032  6F60               	movwf	sprintf@s& (0+255),b
  3837  005034  0E00               	movlw	high color_display@buf
  3838  005036  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3839  005038  0E05               	movlw	low STR_1
  3840  00503A  6F62               	movwf	sprintf@fmt& (0+255),b
  3841  00503C  0E0E               	movlw	high STR_1
  3842  00503E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3843  005040  C079  FFD9         	movff	color_display@m,fsr2l
  3844  005044  C07A  FFDA         	movff	color_display@m+1,fsr2h
  3845  005048  CFDE F064          	movff	postinc2,?_sprintf+4
  3846  00504C  CFDD F065          	movff	postdec2,?_sprintf+5
  3847  005050  EE20 F002          	lfsr	2,2
  3848  005054  5179               	movf	color_display@m& (0+255),w,b
  3849  005056  26D9               	addwf	fsr2l,f,c
  3850  005058  517A               	movf	(color_display@m+1)& (0+255),w,b
  3851  00505A  22DA               	addwfc	fsr2h,f,c
  3852  00505C  CFDE F066          	movff	postinc2,?_sprintf+6
  3853  005060  CFDD F067          	movff	postdec2,?_sprintf+7
  3854  005064  EE20 F004          	lfsr	2,4
  3855  005068  5179               	movf	color_display@m& (0+255),w,b
  3856  00506A  26D9               	addwf	fsr2l,f,c
  3857  00506C  517A               	movf	(color_display@m+1)& (0+255),w,b
  3858  00506E  22DA               	addwfc	fsr2h,f,c
  3859  005070  CFDE F068          	movff	postinc2,?_sprintf+8
  3860  005074  CFDD F069          	movff	postdec2,?_sprintf+9
  3861  005078  EE20 F006          	lfsr	2,6
  3862  00507C  5179               	movf	color_display@m& (0+255),w,b
  3863  00507E  26D9               	addwf	fsr2l,f,c
  3864  005080  517A               	movf	(color_display@m+1)& (0+255),w,b
  3865  005082  22DA               	addwfc	fsr2h,f,c
  3866  005084  CFDE F06A          	movff	postinc2,?_sprintf+10
  3867  005088  CFDD F06B          	movff	postdec2,?_sprintf+11
  3868  00508C  ECDF  F028         	call	_sprintf	;wreg free
  3869  005090                     
  3870                           ;color.c: 238:     sendStringSerial4(buf);
  3871  005090  0E7B               	movlw	low color_display@buf
  3872  005092  6E04               	movwf	sendStringSerial4@string^0,c
  3873  005094  0E00               	movlw	high color_display@buf
  3874  005096  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  3875  005098  EC1C  F02B         	call	_sendStringSerial4	;wreg free
  3876  00509C  0012               	return		;funcret
  3877  00509E                     __end_of_color_display:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _sprintf *****************
  3881 ;; Defined at:
  3882 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3885 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  3886 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3887 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  f              11   14[BANK0 ] struct _IO_FILE
  3890 ;;  ap              2   12[BANK0 ] PTR void [1]
  3891 ;;		 -> ?_sprintf(2), 
  3892 ;;  ret             2    0        int 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  2    0[BANK0 ] int 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3902 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;Total ram usage:       25 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 9
  3909 ;; This function calls:
  3910 ;;		_vfprintf
  3911 ;; This function is called by:
  3912 ;;		_color_display
  3913 ;;		_color_predict
  3914 ;;		_check_color_reading
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text10
  3919  0051BE                     __ptext10:
  3920                           	callstack 0
  3921  0051BE                     _sprintf:
  3922                           	callstack 19
  3923  0051BE  0E64               	movlw	low (?_sprintf+4)
  3924  0051C0  0100               	movlb	0	; () banked
  3925  0051C2  6F6C               	movwf	sprintf@ap& (0+255),b
  3926  0051C4  0E00               	movlw	high (?_sprintf+4)
  3927  0051C6  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  3928  0051C8  C060  F06E         	movff	sprintf@s,sprintf@f
  3929  0051CC  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  3930  0051D0                     
  3931                           ; BSR set to: 0
  3932  0051D0  0E00               	movlw	0
  3933  0051D2  6F72               	movwf	(sprintf@f+4)& (0+255),b
  3934  0051D4  0E00               	movlw	0
  3935  0051D6  6F71               	movwf	(sprintf@f+3)& (0+255),b
  3936  0051D8                     
  3937                           ; BSR set to: 0
  3938  0051D8  0E00               	movlw	0
  3939  0051DA  6F78               	movwf	(sprintf@f+10)& (0+255),b
  3940  0051DC  0E00               	movlw	0
  3941  0051DE  6F77               	movwf	(sprintf@f+9)& (0+255),b
  3942  0051E0                     
  3943                           ; BSR set to: 0
  3944  0051E0  0E6E               	movlw	low sprintf@f
  3945  0051E2  6E52               	movwf	vfprintf@fp^0,c
  3946  0051E4  0E00               	movlw	high sprintf@f
  3947  0051E6  6E53               	movwf	(vfprintf@fp+1)^0,c
  3948  0051E8  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  3949  0051EC  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3950  0051F0  0E6C               	movlw	low sprintf@ap
  3951  0051F2  6E56               	movwf	vfprintf@ap^0,c
  3952  0051F4  0E00               	movlw	high sprintf@ap
  3953  0051F6  6E57               	movwf	(vfprintf@ap+1)^0,c
  3954  0051F8  EC4F  F028         	call	_vfprintf	;wreg free
  3955  0051FC  0100               	movlb	0	; () banked
  3956  0051FE  5171               	movf	(sprintf@f+3)& (0+255),w,b
  3957  005200  2560               	addwf	sprintf@s& (0+255),w,b
  3958  005202  6ED9               	movwf	fsr2l,c
  3959  005204  5172               	movf	(sprintf@f+4)& (0+255),w,b
  3960  005206  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  3961  005208  6EDA               	movwf	fsr2h,c
  3962  00520A  0E00               	movlw	0
  3963  00520C  6EDF               	movwf	indf2,c
  3964  00520E                     
  3965                           ; BSR set to: 0
  3966  00520E  0012               	return		;funcret
  3967  005210                     __end_of_sprintf:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _vfprintf *****************
  3971 ;; Defined at:
  3972 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3975 ;;		 -> sprintf@f(11), 
  3976 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3977 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3978 ;;  ap              2   85[COMRAM] PTR PTR void 
  3979 ;;		 -> sprintf@ap(2), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  3982 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2   81[COMRAM] int 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3992 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:        8 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 8
  3999 ;; This function calls:
  4000 ;;		_vfpfcnvrt
  4001 ;; This function is called by:
  4002 ;;		_sprintf
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text11
  4007  00509E                     __ptext11:
  4008                           	callstack 0
  4009  00509E                     _vfprintf:
  4010                           	callstack 19
  4011  00509E                     
  4012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4013  00509E  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  4014  0050A2  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4015  0050A6                     
  4016                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4017  0050A6  0E00               	movlw	0
  4018  0050A8  0101               	movlb	1	; () banked
  4019  0050AA  6F55               	movwf	(_nout+1)& (0+255),b
  4020  0050AC  0E00               	movlw	0
  4021  0050AE  6F54               	movwf	_nout& (0+255),b
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4024  0050B0  EF6D  F028         	goto	l4338
  4025  0050B4                     l4336:
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4029  0050B4  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  4030  0050B8  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4031  0050BC  0E58               	movlw	low vfprintf@cfmt
  4032  0050BE  6E44               	movwf	vfpfcnvrt@fmt^0,c
  4033  0050C0  0E00               	movlw	high vfprintf@cfmt
  4034  0050C2  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4035  0050C4  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  4036  0050C8  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4037  0050CC  EC15  F01D         	call	_vfpfcnvrt	;wreg free
  4038  0050D0  5042               	movf	?_vfpfcnvrt^0,w,c
  4039  0050D2  0101               	movlb	1	; () banked
  4040  0050D4  2754               	addwf	_nout& (0+255),f,b
  4041  0050D6  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  4042  0050D8  2355               	addwfc	(_nout+1)& (0+255),f,b
  4043  0050DA                     l4338:
  4044                           
  4045                           ; BSR set to: 1
  4046                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4047  0050DA  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  4048  0050DE  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4049  0050E2                     	if	0	;tblptru may be non-zero
  4050  0050E2                     	endif
  4051  0050E2                     	if	0	;tblptru may be non-zero
  4052  0050E2                     	endif
  4053  0050E2  0008               	tblrd		*
  4054  0050E4  50F5               	movf	tablat,w,c
  4055  0050E6  0900               	iorlw	0
  4056  0050E8  A4D8               	btfss	status,2,c
  4057  0050EA  EF79  F028         	goto	u4121
  4058  0050EE  EF7B  F028         	goto	u4120
  4059  0050F2                     u4121:
  4060  0050F2  EF5A  F028         	goto	l4336
  4061  0050F6                     u4120:
  4062  0050F6                     
  4063                           ; BSR set to: 1
  4064                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4065  0050F6  C154  F052         	movff	_nout,?_vfprintf
  4066  0050FA  C155  F053         	movff	_nout+1,?_vfprintf+1
  4067  0050FE                     
  4068                           ; BSR set to: 1
  4069  0050FE  0012               	return		;funcret
  4070  005100                     __end_of_vfprintf:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _vfpfcnvrt *****************
  4074 ;; Defined at:
  4075 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  4078 ;;		 -> sprintf@f(11), 
  4079 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  4080 ;;		 -> vfprintf@cfmt(2), 
  4081 ;;  ap              2   69[COMRAM] PTR PTR void 
  4082 ;;		 -> sprintf@ap(2), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  ll              8   73[COMRAM] long long 
  4085 ;;  llu             8    0        unsigned long long 
  4086 ;;  f               4    0        unsigned long long 
  4087 ;;  vp              3    0        PTR void 
  4088 ;;  ct              3    0        unsigned char [3]
  4089 ;;  cp              3    0        PTR unsigned char 
  4090 ;;  i               2    0        int 
  4091 ;;  done            2    0        int 
  4092 ;;  c               1    0        unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2   65[COMRAM] int 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4103 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;Total ram usage:       16 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 7
  4109 ;; This function calls:
  4110 ;;		_dtoa
  4111 ;;		_fputc
  4112 ;; This function is called by:
  4113 ;;		_vfprintf
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text12
  4118  003A2A                     __ptext12:
  4119                           	callstack 0
  4120  003A2A                     _vfpfcnvrt:
  4121                           	callstack 19
  4122  003A2A                     
  4123                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4124  003A2A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4125  003A2E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4126  003A32  CFDE FFF6          	movff	postinc2,tblptrl
  4127  003A36  CFDD FFF7          	movff	postdec2,tblptrh
  4128  003A3A                     	if	0	;tblptru may be non-zero
  4129  003A3A                     	endif
  4130  003A3A                     	if	0	;tblptru may be non-zero
  4131  003A3A                     	endif
  4132  003A3A  0008               	tblrd		*
  4133  003A3C  50F5               	movf	tablat,w,c
  4134  003A3E  0A25               	xorlw	37
  4135  003A40  A4D8               	btfss	status,2,c
  4136  003A42  EF25  F01D         	goto	u3761
  4137  003A46  EF27  F01D         	goto	u3760
  4138  003A4A                     u3761:
  4139  003A4A  EFD3  F01D         	goto	l4102
  4140  003A4E                     u3760:
  4141  003A4E                     
  4142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4143  003A4E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4144  003A52  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4145  003A56  2ADE               	incf	postinc2,f,c
  4146  003A58  0E00               	movlw	0
  4147  003A5A  22DD               	addwfc	postdec2,f,c
  4148  003A5C                     
  4149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4150  003A5C  0E00               	movlw	0
  4151  003A5E  0101               	movlb	1	; () banked
  4152  003A60  6F57               	movwf	(_width+1)& (0+255),b
  4153  003A62  0E00               	movlw	0
  4154  003A64  6F56               	movwf	_width& (0+255),b
  4155  003A66  C156  F15A         	movff	_width,_flags
  4156  003A6A  C157  F15B         	movff	_width+1,_flags+1
  4157  003A6E                     
  4158                           ; BSR set to: 1
  4159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4160  003A6E  6958               	setf	_prec& (0+255),b
  4161  003A70  6959               	setf	(_prec+1)& (0+255),b
  4162  003A72                     
  4163                           ; BSR set to: 1
  4164                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4165  003A72  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  003A76  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  003A7A  CFDE FFF6          	movff	postinc2,tblptrl
  4168  003A7E  CFDD FFF7          	movff	postdec2,tblptrh
  4169  003A82                     	if	0	;tblptru may be non-zero
  4170  003A82                     	endif
  4171  003A82                     	if	0	;tblptru may be non-zero
  4172  003A82                     	endif
  4173  003A82  0008               	tblrd		*
  4174  003A84  50F5               	movf	tablat,w,c
  4175  003A86  0A64               	xorlw	100
  4176  003A88  B4D8               	btfsc	status,2,c
  4177  003A8A  EF49  F01D         	goto	u3771
  4178  003A8E  EF4B  F01D         	goto	u3770
  4179  003A92                     u3771:
  4180  003A92  EF5D  F01D         	goto	l4080
  4181  003A96                     u3770:
  4182  003A96                     
  4183                           ; BSR set to: 1
  4184  003A96  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4185  003A9A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4186  003A9E  CFDE FFF6          	movff	postinc2,tblptrl
  4187  003AA2  CFDD FFF7          	movff	postdec2,tblptrh
  4188  003AA6                     	if	0	;tblptru may be non-zero
  4189  003AA6                     	endif
  4190  003AA6                     	if	0	;tblptru may be non-zero
  4191  003AA6                     	endif
  4192  003AA6  0008               	tblrd		*
  4193  003AA8  50F5               	movf	tablat,w,c
  4194  003AAA  0A69               	xorlw	105
  4195  003AAC  A4D8               	btfss	status,2,c
  4196  003AAE  EF5B  F01D         	goto	u3781
  4197  003AB2  EF5D  F01D         	goto	u3780
  4198  003AB6                     u3781:
  4199  003AB6  EF9D  F01D         	goto	l4086
  4200  003ABA                     u3780:
  4201  003ABA                     l4080:
  4202                           
  4203                           ; BSR set to: 1
  4204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4205  003ABA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4206  003ABE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4207  003AC2  2ADE               	incf	postinc2,f,c
  4208  003AC4  0E00               	movlw	0
  4209  003AC6  22DD               	addwfc	postdec2,f,c
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4212  003AC8  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4213  003ACC  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4214  003AD0  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4215  003AD4  0E02               	movlw	2
  4216  003AD6  26DE               	addwf	postinc2,f,c
  4217  003AD8  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4218  003ADC  0E00               	movlw	0
  4219  003ADE  22DD               	addwfc	postdec2,f,c
  4220  003AE0  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4221  003AE4  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4222  003AE8  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  4223  003AEC  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  4224  003AF0  0E00               	movlw	0
  4225  003AF2  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4226  003AF4  0EFF               	movlw	-1
  4227  003AF6  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  4228  003AF8  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  4229  003AFA  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  4230  003AFC  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  4231  003AFE  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  4232  003B00  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  4233  003B02                     
  4234                           ; BSR set to: 1
  4235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4236  003B02  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4237  003B06  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4238  003B0A  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4239  003B0E  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4240  003B12  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4241  003B16  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4242  003B1A  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4243  003B1E  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4244  003B22  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4245  003B26  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4246  003B2A  EC43  F016         	call	_dtoa	;wreg free
  4247  003B2E  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4248  003B32  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4249  003B36  EFEE  F01D         	goto	l1542
  4250  003B3A                     l4086:
  4251                           
  4252                           ; BSR set to: 1
  4253                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4254  003B3A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4255  003B3E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4256  003B42  CFDE FFF6          	movff	postinc2,tblptrl
  4257  003B46  CFDD FFF7          	movff	postdec2,tblptrh
  4258  003B4A                     	if	0	;tblptru may be non-zero
  4259  003B4A                     	endif
  4260  003B4A                     	if	0	;tblptru may be non-zero
  4261  003B4A                     	endif
  4262  003B4A  0008               	tblrd		*
  4263  003B4C  50F5               	movf	tablat,w,c
  4264  003B4E  0A25               	xorlw	37
  4265  003B50  A4D8               	btfss	status,2,c
  4266  003B52  EFAD  F01D         	goto	u3791
  4267  003B56  EFAF  F01D         	goto	u3790
  4268  003B5A                     u3791:
  4269  003B5A  EFC6  F01D         	goto	l4096
  4270  003B5E                     u3790:
  4271  003B5E                     
  4272                           ; BSR set to: 1
  4273                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4274  003B5E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4275  003B62  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4276  003B66  2ADE               	incf	postinc2,f,c
  4277  003B68  0E00               	movlw	0
  4278  003B6A  22DD               	addwfc	postdec2,f,c
  4279  003B6C                     
  4280                           ; BSR set to: 1
  4281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4282  003B6C  0E00               	movlw	0
  4283  003B6E  6E04               	movwf	(fputc@c+1)^0,c
  4284  003B70  0E25               	movlw	37
  4285  003B72  6E03               	movwf	fputc@c^0,c
  4286  003B74  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4287  003B78  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4288  003B7C  EC2B  F025         	call	_fputc	;wreg free
  4289  003B80                     l4092:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4292  003B80  0E00               	movlw	0
  4293  003B82  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4294  003B84  0E01               	movlw	1
  4295  003B86  6E42               	movwf	?_vfpfcnvrt^0,c
  4296  003B88  EFEE  F01D         	goto	l1542
  4297  003B8C                     l4096:
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4301  003B8C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4302  003B90  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4303  003B94  2ADE               	incf	postinc2,f,c
  4304  003B96  0E00               	movlw	0
  4305  003B98  22DD               	addwfc	postdec2,f,c
  4306  003B9A                     
  4307                           ; BSR set to: 1
  4308                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4309  003B9A  0E00               	movlw	0
  4310  003B9C  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4311  003B9E  0E00               	movlw	0
  4312  003BA0  6E42               	movwf	?_vfpfcnvrt^0,c
  4313  003BA2  EFEE  F01D         	goto	l1542
  4314  003BA6                     l4102:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4317  003BA6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4318  003BAA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4319  003BAE  CFDE FFF6          	movff	postinc2,tblptrl
  4320  003BB2  CFDD FFF7          	movff	postdec2,tblptrh
  4321  003BB6                     	if	0	;tblptru may be non-zero
  4322  003BB6                     	endif
  4323  003BB6                     	if	0	;tblptru may be non-zero
  4324  003BB6                     	endif
  4325  003BB6  0008               	tblrd		*
  4326  003BB8  50F5               	movf	tablat,w,c
  4327  003BBA  6E03               	movwf	fputc@c^0,c
  4328  003BBC  6A04               	clrf	(fputc@c+1)^0,c
  4329  003BBE  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4330  003BC2  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4331  003BC6  EC2B  F025         	call	_fputc	;wreg free
  4332  003BCA                     
  4333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4334  003BCA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4335  003BCE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4336  003BD2  2ADE               	incf	postinc2,f,c
  4337  003BD4  0E00               	movlw	0
  4338  003BD6  22DD               	addwfc	postdec2,f,c
  4339  003BD8  EFC0  F01D         	goto	l4092
  4340  003BDC                     l1542:
  4341  003BDC  0012               	return		;funcret
  4342  003BDE                     __end_of_vfpfcnvrt:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _dtoa *****************
  4346 ;; Defined at:
  4347 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4350 ;;		 -> sprintf@f(11), 
  4351 ;;  d               8   31[COMRAM] long long 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  n               8   55[COMRAM] long long 
  4354 ;;  i               2   63[COMRAM] int 
  4355 ;;  s               2   53[COMRAM] int 
  4356 ;;  w               2   51[COMRAM] int 
  4357 ;;  p               2   49[COMRAM] int 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  2   29[COMRAM] int 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4367 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;Total ram usage:       36 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 6
  4374 ;; This function calls:
  4375 ;;		___aodiv
  4376 ;;		___aomod
  4377 ;;		_abs
  4378 ;;		_pad
  4379 ;; This function is called by:
  4380 ;;		_vfpfcnvrt
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text13
  4385  002C86                     __ptext13:
  4386                           	callstack 0
  4387  002C86                     _dtoa:
  4388                           	callstack 19
  4389  002C86                     
  4390                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4391  002C86  C020  F038         	movff	dtoa@d,dtoa@n
  4392  002C8A  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  4393  002C8E  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  4394  002C92  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  4395  002C96  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  4396  002C9A  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  4397  002C9E  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  4398  002CA2  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  4399  002CA6                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4401  002CA6  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4402  002CA8  EF58  F016         	goto	u3161
  4403  002CAC  EF5B  F016         	goto	u3160
  4404  002CB0                     u3161:
  4405  002CB0  0E01               	movlw	1
  4406  002CB2  EF5C  F016         	goto	u3170
  4407  002CB6                     u3160:
  4408  002CB6  0E00               	movlw	0
  4409  002CB8                     u3170:
  4410  002CB8  6E36               	movwf	dtoa@s^0,c
  4411  002CBA  6A37               	clrf	(dtoa@s+1)^0,c
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4414  002CBC  5036               	movf	dtoa@s^0,w,c
  4415  002CBE  1037               	iorwf	(dtoa@s+1)^0,w,c
  4416  002CC0  B4D8               	btfsc	status,2,c
  4417  002CC2  EF65  F016         	goto	u3181
  4418  002CC6  EF67  F016         	goto	u3180
  4419  002CCA                     u3181:
  4420  002CCA  EF77  F016         	goto	l3792
  4421  002CCE                     u3180:
  4422  002CCE                     
  4423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4424  002CCE  1E3F               	comf	(dtoa@n+7)^0,f,c
  4425  002CD0  1E3E               	comf	(dtoa@n+6)^0,f,c
  4426  002CD2  1E3D               	comf	(dtoa@n+5)^0,f,c
  4427  002CD4  1E3C               	comf	(dtoa@n+4)^0,f,c
  4428  002CD6  1E3B               	comf	(dtoa@n+3)^0,f,c
  4429  002CD8  1E3A               	comf	(dtoa@n+2)^0,f,c
  4430  002CDA  1E39               	comf	(dtoa@n+1)^0,f,c
  4431  002CDC  6C38               	negf	dtoa@n^0,c
  4432  002CDE  0E00               	movlw	0
  4433  002CE0  2239               	addwfc	(dtoa@n+1)^0,f,c
  4434  002CE2  223A               	addwfc	(dtoa@n+2)^0,f,c
  4435  002CE4  223B               	addwfc	(dtoa@n+3)^0,f,c
  4436  002CE6  223C               	addwfc	(dtoa@n+4)^0,f,c
  4437  002CE8  223D               	addwfc	(dtoa@n+5)^0,f,c
  4438  002CEA  223E               	addwfc	(dtoa@n+6)^0,f,c
  4439  002CEC  223F               	addwfc	(dtoa@n+7)^0,f,c
  4440  002CEE                     l3792:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4443  002CEE  0101               	movlb	1	; () banked
  4444  002CF0  BF59               	btfsc	(_prec+1)& (0+255),7,b
  4445  002CF2  EF7D  F016         	goto	u3191
  4446  002CF6  EF7F  F016         	goto	u3190
  4447  002CFA                     u3191:
  4448  002CFA  EF80  F016         	goto	l3796
  4449  002CFE                     u3190:
  4450  002CFE                     
  4451                           ; BSR set to: 1
  4452                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4453  002CFE  935A               	bcf	_flags& (0+255),1,b
  4454  002D00                     l3796:
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4458  002D00  BF59               	btfsc	(_prec+1)& (0+255),7,b
  4459  002D02  EF8D  F016         	goto	u3200
  4460  002D06  5159               	movf	(_prec+1)& (0+255),w,b
  4461  002D08  E106               	bnz	u3201
  4462  002D0A  0558               	decf	_prec& (0+255),w,b
  4463  002D0C  B0D8               	btfsc	status,0,c
  4464  002D0E  EF8B  F016         	goto	u3201
  4465  002D12  EF8D  F016         	goto	u3200
  4466  002D16                     u3201:
  4467  002D16  EF93  F016         	goto	l1515
  4468  002D1A                     u3200:
  4469  002D1A                     
  4470                           ; BSR set to: 1
  4471  002D1A  0E00               	movlw	0
  4472  002D1C  6E33               	movwf	(dtoa@p+1)^0,c
  4473  002D1E  0E01               	movlw	1
  4474  002D20  6E32               	movwf	dtoa@p^0,c
  4475  002D22  EF97  F016         	goto	l1517
  4476  002D26                     l1515:
  4477                           
  4478                           ; BSR set to: 1
  4479  002D26  C158  F032         	movff	_prec,dtoa@p
  4480  002D2A  C159  F033         	movff	_prec+1,dtoa@p+1
  4481  002D2E                     l1517:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4485  002D2E  C156  F034         	movff	_width,dtoa@w
  4486  002D32  C157  F035         	movff	_width+1,dtoa@w+1
  4487  002D36                     
  4488                           ; BSR set to: 1
  4489                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4490  002D36  5036               	movf	dtoa@s^0,w,c
  4491  002D38  1037               	iorwf	(dtoa@s+1)^0,w,c
  4492  002D3A  A4D8               	btfss	status,2,c
  4493  002D3C  EFA2  F016         	goto	u3211
  4494  002D40  EFA4  F016         	goto	u3210
  4495  002D44                     u3211:
  4496  002D44  EFAB  F016         	goto	l3804
  4497  002D48                     u3210:
  4498  002D48                     
  4499                           ; BSR set to: 1
  4500  002D48  A55A               	btfss	_flags& (0+255),2,b
  4501  002D4A  EFA9  F016         	goto	u3221
  4502  002D4E  EFAB  F016         	goto	u3220
  4503  002D52                     u3221:
  4504  002D52  EFAE  F016         	goto	l3806
  4505  002D56                     u3220:
  4506  002D56                     l3804:
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4510  002D56  0634               	decf	dtoa@w^0,f,c
  4511  002D58  A0D8               	btfss	status,0,c
  4512  002D5A  0635               	decf	(dtoa@w+1)^0,f,c
  4513  002D5C                     l3806:
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4517  002D5C  0E00               	movlw	0
  4518  002D5E  6E41               	movwf	(dtoa@i+1)^0,c
  4519  002D60  0E1F               	movlw	31
  4520  002D62  6E40               	movwf	dtoa@i^0,c
  4521  002D64                     
  4522                           ; BSR set to: 1
  4523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4524  002D64  0E00               	movlw	0
  4525  002D66  6F82               	movwf	(_dbuf+31)& (0+255),b
  4526                           
  4527                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4528  002D68  EF32  F017         	goto	l3820
  4529  002D6C                     l3810:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4532  002D6C  0640               	decf	dtoa@i^0,f,c
  4533  002D6E  A0D8               	btfss	status,0,c
  4534  002D70  0641               	decf	(dtoa@i+1)^0,f,c
  4535  002D72                     
  4536                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4537  002D72  0E63               	movlw	low _dbuf
  4538  002D74  2440               	addwf	dtoa@i^0,w,c
  4539  002D76  6ED9               	movwf	fsr2l,c
  4540  002D78  0E01               	movlw	high _dbuf
  4541  002D7A  2041               	addwfc	(dtoa@i+1)^0,w,c
  4542  002D7C  6EDA               	movwf	fsr2h,c
  4543  002D7E  C038  F003         	movff	dtoa@n,___aomod@dividend
  4544  002D82  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  4545  002D86  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  4546  002D8A  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  4547  002D8E  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  4548  002D92  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  4549  002D96  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  4550  002D9A  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  4551  002D9E  0E0A               	movlw	10
  4552  002DA0  6E0B               	movwf	___aomod@divisor^0,c
  4553  002DA2  0E00               	movlw	0
  4554  002DA4  6E0C               	movwf	(___aomod@divisor+1)^0,c
  4555  002DA6  0E00               	movlw	0
  4556  002DA8  6E0D               	movwf	(___aomod@divisor+2)^0,c
  4557  002DAA  0E00               	movlw	0
  4558  002DAC  6E0E               	movwf	(___aomod@divisor+3)^0,c
  4559  002DAE  0E00               	movlw	0
  4560  002DB0  6E0F               	movwf	(___aomod@divisor+4)^0,c
  4561  002DB2  0E00               	movlw	0
  4562  002DB4  6E10               	movwf	(___aomod@divisor+5)^0,c
  4563  002DB6  0E00               	movlw	0
  4564  002DB8  6E11               	movwf	(___aomod@divisor+6)^0,c
  4565  002DBA  0E00               	movlw	0
  4566  002DBC  6E12               	movwf	(___aomod@divisor+7)^0,c
  4567  002DBE  ECD2  F021         	call	___aomod	;wreg free
  4568  002DC2  C003  F028         	movff	?___aomod,??_dtoa
  4569  002DC6  C004  F029         	movff	?___aomod+1,??_dtoa+1
  4570  002DCA  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  4571  002DCE  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  4572  002DD2  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  4573  002DD6  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  4574  002DDA  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  4575  002DDE  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  4576  002DE2  C028  F015         	movff	??_dtoa,abs@a
  4577  002DE6  C02A  F016         	movff	??_dtoa+2,abs@a+1
  4578  002DEA  EC71  F02A         	call	_abs	;wreg free
  4579  002DEE  5015               	movf	?_abs^0,w,c
  4580  002DF0  0F30               	addlw	48
  4581  002DF2  6EDF               	movwf	indf2,c
  4582  002DF4                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4584  002DF4  0632               	decf	dtoa@p^0,f,c
  4585  002DF6  A0D8               	btfss	status,0,c
  4586  002DF8  0633               	decf	(dtoa@p+1)^0,f,c
  4587  002DFA                     
  4588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4589  002DFA  0634               	decf	dtoa@w^0,f,c
  4590  002DFC  A0D8               	btfss	status,0,c
  4591  002DFE  0635               	decf	(dtoa@w+1)^0,f,c
  4592  002E00                     
  4593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4594  002E00  C038  F003         	movff	dtoa@n,___aodiv@dividend
  4595  002E04  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  4596  002E08  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  4597  002E0C  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  4598  002E10  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  4599  002E14  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  4600  002E18  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  4601  002E1C  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  4602  002E20  0E0A               	movlw	10
  4603  002E22  6E0B               	movwf	___aodiv@divisor^0,c
  4604  002E24  0E00               	movlw	0
  4605  002E26  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  4606  002E28  0E00               	movlw	0
  4607  002E2A  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  4608  002E2C  0E00               	movlw	0
  4609  002E2E  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  4610  002E30  0E00               	movlw	0
  4611  002E32  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  4612  002E34  0E00               	movlw	0
  4613  002E36  6E10               	movwf	(___aodiv@divisor+5)^0,c
  4614  002E38  0E00               	movlw	0
  4615  002E3A  6E11               	movwf	(___aodiv@divisor+6)^0,c
  4616  002E3C  0E00               	movlw	0
  4617  002E3E  6E12               	movwf	(___aodiv@divisor+7)^0,c
  4618  002E40  EC8E  F01F         	call	___aodiv	;wreg free
  4619  002E44  C003  F038         	movff	?___aodiv,dtoa@n
  4620  002E48  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  4621  002E4C  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  4622  002E50  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  4623  002E54  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  4624  002E58  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  4625  002E5C  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  4626  002E60  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  4627  002E64                     l3820:
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4630  002E64  BE41               	btfsc	(dtoa@i+1)^0,7,c
  4631  002E66  EF3D  F017         	goto	u3231
  4632  002E6A  5041               	movf	(dtoa@i+1)^0,w,c
  4633  002E6C  E108               	bnz	u3230
  4634  002E6E  0440               	decf	dtoa@i^0,w,c
  4635  002E70  A0D8               	btfss	status,0,c
  4636  002E72  EF3D  F017         	goto	u3231
  4637  002E76  EF3F  F017         	goto	u3230
  4638  002E7A                     u3231:
  4639  002E7A  EF70  F017         	goto	l3830
  4640  002E7E                     u3230:
  4641  002E7E  5038               	movf	dtoa@n^0,w,c
  4642  002E80  1039               	iorwf	(dtoa@n+1)^0,w,c
  4643  002E82  103A               	iorwf	(dtoa@n+2)^0,w,c
  4644  002E84  103B               	iorwf	(dtoa@n+3)^0,w,c
  4645  002E86  103C               	iorwf	(dtoa@n+4)^0,w,c
  4646  002E88  103D               	iorwf	(dtoa@n+5)^0,w,c
  4647  002E8A  103E               	iorwf	(dtoa@n+6)^0,w,c
  4648  002E8C  103F               	iorwf	(dtoa@n+7)^0,w,c
  4649  002E8E  A4D8               	btfss	status,2,c
  4650  002E90  EF4C  F017         	goto	u3241
  4651  002E94  EF4E  F017         	goto	u3240
  4652  002E98                     u3241:
  4653  002E98  EFB6  F016         	goto	l3810
  4654  002E9C                     u3240:
  4655  002E9C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  4656  002E9E  EF5B  F017         	goto	u3250
  4657  002EA2  5033               	movf	(dtoa@p+1)^0,w,c
  4658  002EA4  E106               	bnz	u3251
  4659  002EA6  0432               	decf	dtoa@p^0,w,c
  4660  002EA8  B0D8               	btfsc	status,0,c
  4661  002EAA  EF59  F017         	goto	u3251
  4662  002EAE  EF5B  F017         	goto	u3250
  4663  002EB2                     u3251:
  4664  002EB2  EFB6  F016         	goto	l3810
  4665  002EB6                     u3250:
  4666  002EB6  BE35               	btfsc	(dtoa@w+1)^0,7,c
  4667  002EB8  EF66  F017         	goto	u3261
  4668  002EBC  5035               	movf	(dtoa@w+1)^0,w,c
  4669  002EBE  E108               	bnz	u3260
  4670  002EC0  0434               	decf	dtoa@w^0,w,c
  4671  002EC2  A0D8               	btfss	status,0,c
  4672  002EC4  EF66  F017         	goto	u3261
  4673  002EC8  EF68  F017         	goto	u3260
  4674  002ECC                     u3261:
  4675  002ECC  EF70  F017         	goto	l3830
  4676  002ED0                     u3260:
  4677  002ED0  0101               	movlb	1	; () banked
  4678  002ED2  B35A               	btfsc	_flags& (0+255),1,b
  4679  002ED4  EF6E  F017         	goto	u3271
  4680  002ED8  EF70  F017         	goto	u3270
  4681  002EDC                     u3271:
  4682  002EDC  EFB6  F016         	goto	l3810
  4683  002EE0                     u3270:
  4684  002EE0                     l3830:
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4687  002EE0  5036               	movf	dtoa@s^0,w,c
  4688  002EE2  1037               	iorwf	(dtoa@s+1)^0,w,c
  4689  002EE4  A4D8               	btfss	status,2,c
  4690  002EE6  EF77  F017         	goto	u3281
  4691  002EEA  EF79  F017         	goto	u3280
  4692  002EEE                     u3281:
  4693  002EEE  EF81  F017         	goto	l3834
  4694  002EF2                     u3280:
  4695  002EF2  0101               	movlb	1	; () banked
  4696  002EF4  A55A               	btfss	_flags& (0+255),2,b
  4697  002EF6  EF7F  F017         	goto	u3291
  4698  002EFA  EF81  F017         	goto	u3290
  4699  002EFE                     u3291:
  4700  002EFE  EF9F  F017         	goto	l3844
  4701  002F02                     u3290:
  4702  002F02                     l3834:
  4703                           
  4704                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4705  002F02  0640               	decf	dtoa@i^0,f,c
  4706  002F04  A0D8               	btfss	status,0,c
  4707  002F06  0641               	decf	(dtoa@i+1)^0,f,c
  4708  002F08                     
  4709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4710  002F08  5036               	movf	dtoa@s^0,w,c
  4711  002F0A  1037               	iorwf	(dtoa@s+1)^0,w,c
  4712  002F0C  A4D8               	btfss	status,2,c
  4713  002F0E  EF8B  F017         	goto	u3301
  4714  002F12  EF8D  F017         	goto	u3300
  4715  002F16                     u3301:
  4716  002F16  EF93  F017         	goto	l3840
  4717  002F1A                     u3300:
  4718  002F1A  0E00               	movlw	0
  4719  002F1C  6E31               	movwf	(_dtoa$2897+1)^0,c
  4720  002F1E  0E2B               	movlw	43
  4721  002F20  6E30               	movwf	_dtoa$2897^0,c
  4722  002F22  EF97  F017         	goto	l3842
  4723  002F26                     l3840:
  4724  002F26  0E00               	movlw	0
  4725  002F28  6E31               	movwf	(_dtoa$2897+1)^0,c
  4726  002F2A  0E2D               	movlw	45
  4727  002F2C  6E30               	movwf	_dtoa$2897^0,c
  4728  002F2E                     l3842:
  4729  002F2E  0E63               	movlw	low _dbuf
  4730  002F30  2440               	addwf	dtoa@i^0,w,c
  4731  002F32  6ED9               	movwf	fsr2l,c
  4732  002F34  0E01               	movlw	high _dbuf
  4733  002F36  2041               	addwfc	(dtoa@i+1)^0,w,c
  4734  002F38  6EDA               	movwf	fsr2h,c
  4735  002F3A  C030  FFDF         	movff	_dtoa$2897,indf2
  4736  002F3E                     l3844:
  4737                           
  4738                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4739  002F3E  C01E  F013         	movff	dtoa@fp,pad@fp
  4740  002F42  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  4741  002F46  0E63               	movlw	low _dbuf
  4742  002F48  2440               	addwf	dtoa@i^0,w,c
  4743  002F4A  6E15               	movwf	pad@buf^0,c
  4744  002F4C  0E01               	movlw	high _dbuf
  4745  002F4E  2041               	addwfc	(dtoa@i+1)^0,w,c
  4746  002F50  6E16               	movwf	(pad@buf+1)^0,c
  4747  002F52  C034  F017         	movff	dtoa@w,pad@p
  4748  002F56  C035  F018         	movff	dtoa@w+1,pad@p+1
  4749  002F5A  EC90  F025         	call	_pad	;wreg free
  4750  002F5E  C013  F01E         	movff	?_pad,?_dtoa
  4751  002F62  C014  F01F         	movff	?_pad+1,?_dtoa+1
  4752  002F66  0012               	return		;funcret
  4753  002F68                     __end_of_dtoa:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _pad *****************
  4757 ;; Defined at:
  4758 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4761 ;;		 -> sprintf@f(11), 
  4762 ;;  buf             2   20[COMRAM] PTR unsigned char 
  4763 ;;		 -> dbuf(32), 
  4764 ;;  p               2   22[COMRAM] int 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  w               2   27[COMRAM] int 
  4767 ;;  i               2   25[COMRAM] int 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  2   18[COMRAM] int 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4777 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;Total ram usage:       11 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 5
  4784 ;; This function calls:
  4785 ;;		_fputc
  4786 ;;		_fputs
  4787 ;;		_strlen
  4788 ;; This function is called by:
  4789 ;;		_dtoa
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text14
  4794  004B20                     __ptext14:
  4795                           	callstack 0
  4796  004B20                     _pad:
  4797                           	callstack 19
  4798  004B20                     
  4799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4800  004B20  0101               	movlb	1	; () banked
  4801  004B22  A15A               	btfss	_flags& (0+255),0,b
  4802  004B24  EF96  F025         	goto	u3051
  4803  004B28  EF98  F025         	goto	u3050
  4804  004B2C                     u3051:
  4805  004B2C  EFA2  F025         	goto	l3714
  4806  004B30                     u3050:
  4807  004B30                     
  4808                           ; BSR set to: 1
  4809                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4810  004B30  C015  F00C         	movff	pad@buf,fputs@s
  4811  004B34  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4812  004B38  C013  F00E         	movff	pad@fp,fputs@fp
  4813  004B3C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4814  004B40  ECCB  F029         	call	_fputs	;wreg free
  4815  004B44                     l3714:
  4816                           
  4817                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4818  004B44  BE18               	btfsc	(pad@p+1)^0,7,c
  4819  004B46  EFA7  F025         	goto	u3061
  4820  004B4A  EFA9  F025         	goto	u3060
  4821  004B4E                     u3061:
  4822  004B4E  EFAF  F025         	goto	l3718
  4823  004B52                     u3060:
  4824  004B52  C017  F01C         	movff	pad@p,pad@w
  4825  004B56  C018  F01D         	movff	pad@p+1,pad@w+1
  4826  004B5A  EFB3  F025         	goto	l1504
  4827  004B5E                     l3718:
  4828  004B5E  0E00               	movlw	0
  4829  004B60  6E1D               	movwf	(pad@w+1)^0,c
  4830  004B62  0E00               	movlw	0
  4831  004B64  6E1C               	movwf	pad@w^0,c
  4832  004B66                     l1504:
  4833                           
  4834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4835  004B66  0E00               	movlw	0
  4836  004B68  6E1B               	movwf	(pad@i+1)^0,c
  4837  004B6A  0E00               	movlw	0
  4838  004B6C  6E1A               	movwf	pad@i^0,c
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4841  004B6E  EFC5  F025         	goto	l3724
  4842  004B72                     l3720:
  4843                           
  4844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4845  004B72  0E00               	movlw	0
  4846  004B74  6E04               	movwf	(fputc@c+1)^0,c
  4847  004B76  0E20               	movlw	32
  4848  004B78  6E03               	movwf	fputc@c^0,c
  4849  004B7A  C013  F005         	movff	pad@fp,fputc@fp
  4850  004B7E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  4851  004B82  EC2B  F025         	call	_fputc	;wreg free
  4852  004B86                     
  4853                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4854  004B86  4A1A               	infsnz	pad@i^0,f,c
  4855  004B88  2A1B               	incf	(pad@i+1)^0,f,c
  4856  004B8A                     l3724:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4859  004B8A  501C               	movf	pad@w^0,w,c
  4860  004B8C  5C1A               	subwf	pad@i^0,w,c
  4861  004B8E  501B               	movf	(pad@i+1)^0,w,c
  4862  004B90  0A80               	xorlw	128
  4863  004B92  6E19               	movwf	??_pad^0,c
  4864  004B94  501D               	movf	(pad@w+1)^0,w,c
  4865  004B96  0A80               	xorlw	128
  4866  004B98  5819               	subwfb	??_pad^0,w,c
  4867  004B9A  A0D8               	btfss	status,0,c
  4868  004B9C  EFD2  F025         	goto	u3071
  4869  004BA0  EFD4  F025         	goto	u3070
  4870  004BA4                     u3071:
  4871  004BA4  EFB9  F025         	goto	l3720
  4872  004BA8                     u3070:
  4873  004BA8                     
  4874                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4875  004BA8  0101               	movlb	1	; () banked
  4876  004BAA  B15A               	btfsc	_flags& (0+255),0,b
  4877  004BAC  EFDA  F025         	goto	u3081
  4878  004BB0  EFDC  F025         	goto	u3080
  4879  004BB4                     u3081:
  4880  004BB4  EFE6  F025         	goto	l3728
  4881  004BB8                     u3080:
  4882  004BB8                     
  4883                           ; BSR set to: 1
  4884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4885  004BB8  C015  F00C         	movff	pad@buf,fputs@s
  4886  004BBC  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4887  004BC0  C013  F00E         	movff	pad@fp,fputs@fp
  4888  004BC4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4889  004BC8  ECCB  F029         	call	_fputs	;wreg free
  4890  004BCC                     l3728:
  4891                           
  4892                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4893  004BCC  C015  F003         	movff	pad@buf,strlen@s
  4894  004BD0  C016  F004         	movff	pad@buf+1,strlen@s+1
  4895  004BD4  ECE7  F02A         	call	_strlen	;wreg free
  4896  004BD8  501C               	movf	pad@w^0,w,c
  4897  004BDA  2403               	addwf	?_strlen^0,w,c
  4898  004BDC  6E13               	movwf	?_pad^0,c
  4899  004BDE  501D               	movf	(pad@w+1)^0,w,c
  4900  004BE0  2004               	addwfc	(?_strlen+1)^0,w,c
  4901  004BE2  6E14               	movwf	(?_pad+1)^0,c
  4902  004BE4  0012               	return		;funcret
  4903  004BE6                     __end_of_pad:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _strlen *****************
  4907 ;; Defined at:
  4908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4911 ;;		 -> dbuf(32), 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4914 ;;		 -> dbuf(32), 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  2    2[COMRAM] unsigned int 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;Total ram usage:        4 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 2
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_pad
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text15
  4939  0055CE                     __ptext15:
  4940                           	callstack 0
  4941  0055CE                     _strlen:
  4942                           	callstack 21
  4943  0055CE  C003  F005         	movff	strlen@s,strlen@a
  4944  0055D2  C004  F006         	movff	strlen@s+1,strlen@a+1
  4945  0055D6  EFEF  F02A         	goto	l3624
  4946  0055DA                     l3622:
  4947  0055DA  4A03               	infsnz	strlen@s^0,f,c
  4948  0055DC  2A04               	incf	(strlen@s+1)^0,f,c
  4949  0055DE                     l3624:
  4950  0055DE  C003  FFD9         	movff	strlen@s,fsr2l
  4951  0055E2  C004  FFDA         	movff	strlen@s+1,fsr2h
  4952  0055E6  50DF               	movf	indf2,w,c
  4953  0055E8  A4D8               	btfss	status,2,c
  4954  0055EA  EFF9  F02A         	goto	u2911
  4955  0055EE  EFFB  F02A         	goto	u2910
  4956  0055F2                     u2911:
  4957  0055F2  EFED  F02A         	goto	l3622
  4958  0055F6                     u2910:
  4959  0055F6  5005               	movf	strlen@a^0,w,c
  4960  0055F8  5C03               	subwf	strlen@s^0,w,c
  4961  0055FA  6E03               	movwf	?_strlen^0,c
  4962  0055FC  5006               	movf	(strlen@a+1)^0,w,c
  4963  0055FE  5804               	subwfb	(strlen@s+1)^0,w,c
  4964  005600  6E04               	movwf	(?_strlen+1)^0,c
  4965  005602  0012               	return		;funcret
  4966  005604                     __end_of_strlen:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _fputs *****************
  4970 ;; Defined at:
  4971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4974 ;;		 -> dbuf(32), 
  4975 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4976 ;;		 -> sprintf@f(11), 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  i               2   16[COMRAM] int 
  4979 ;;  c               1   15[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2   11[COMRAM] int 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;Total ram usage:        7 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 4
  4996 ;; This function calls:
  4997 ;;		_fputc
  4998 ;; This function is called by:
  4999 ;;		_pad
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text16
  5004  005396                     __ptext16:
  5005                           	callstack 0
  5006  005396                     _fputs:
  5007                           	callstack 19
  5008  005396  0E00               	movlw	0
  5009  005398  6E12               	movwf	(fputs@i+1)^0,c
  5010  00539A  0E00               	movlw	0
  5011  00539C  6E11               	movwf	fputs@i^0,c
  5012  00539E  EFDC  F029         	goto	l3618
  5013  0053A2                     l3614:
  5014  0053A2  C010  F003         	movff	fputs@c,fputc@c
  5015  0053A6  6A04               	clrf	(fputc@c+1)^0,c
  5016  0053A8  C00E  F005         	movff	fputs@fp,fputc@fp
  5017  0053AC  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5018  0053B0  EC2B  F025         	call	_fputc	;wreg free
  5019  0053B4  4A11               	infsnz	fputs@i^0,f,c
  5020  0053B6  2A12               	incf	(fputs@i+1)^0,f,c
  5021  0053B8                     l3618:
  5022  0053B8  5011               	movf	fputs@i^0,w,c
  5023  0053BA  240C               	addwf	fputs@s^0,w,c
  5024  0053BC  6ED9               	movwf	fsr2l,c
  5025  0053BE  5012               	movf	(fputs@i+1)^0,w,c
  5026  0053C0  200D               	addwfc	(fputs@s+1)^0,w,c
  5027  0053C2  6EDA               	movwf	fsr2h,c
  5028  0053C4  50DF               	movf	indf2,w,c
  5029  0053C6  6E10               	movwf	fputs@c^0,c
  5030  0053C8  5010               	movf	fputs@c^0,w,c
  5031  0053CA  A4D8               	btfss	status,2,c
  5032  0053CC  EFEA  F029         	goto	u2901
  5033  0053D0  EFEC  F029         	goto	u2900
  5034  0053D4                     u2901:
  5035  0053D4  EFD1  F029         	goto	l3614
  5036  0053D8                     u2900:
  5037  0053D8  0012               	return		;funcret
  5038  0053DA                     __end_of_fputs:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _fputc *****************
  5042 ;; Defined at:
  5043 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  c               2    2[COMRAM] int 
  5046 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  5047 ;;		 -> sprintf@f(11), 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  2    2[COMRAM] int 
  5052 ;; Registers used:
  5053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;Total ram usage:        9 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; Hardware stack levels required when called: 3
  5066 ;; This function calls:
  5067 ;;		_putch
  5068 ;; This function is called by:
  5069 ;;		_pad
  5070 ;;		_vfpfcnvrt
  5071 ;;		_fputs
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text17
  5076  004A56                     __ptext17:
  5077                           	callstack 0
  5078  004A56                     _fputc:
  5079                           	callstack 22
  5080  004A56  5005               	movf	fputc@fp^0,w,c
  5081  004A58  1006               	iorwf	(fputc@fp+1)^0,w,c
  5082  004A5A  B4D8               	btfsc	status,2,c
  5083  004A5C  EF32  F025         	goto	u2861
  5084  004A60  EF34  F025         	goto	u2860
  5085  004A64                     u2861:
  5086  004A64  EF3D  F025         	goto	l3602
  5087  004A68                     u2860:
  5088  004A68  5005               	movf	fputc@fp^0,w,c
  5089  004A6A  1006               	iorwf	(fputc@fp+1)^0,w,c
  5090  004A6C  A4D8               	btfss	status,2,c
  5091  004A6E  EF3B  F025         	goto	u2871
  5092  004A72  EF3D  F025         	goto	u2870
  5093  004A76                     u2871:
  5094  004A76  EF42  F025         	goto	l3604
  5095  004A7A                     u2870:
  5096  004A7A                     l3602:
  5097  004A7A  5003               	movf	fputc@c^0,w,c
  5098  004A7C  EC4A  F02C         	call	_putch
  5099  004A80  EF8F  F025         	goto	l1568
  5100  004A84                     l3604:
  5101  004A84  EE20 F009          	lfsr	2,9
  5102  004A88  5005               	movf	fputc@fp^0,w,c
  5103  004A8A  26D9               	addwf	fsr2l,f,c
  5104  004A8C  5006               	movf	(fputc@fp+1)^0,w,c
  5105  004A8E  22DA               	addwfc	fsr2h,f,c
  5106  004A90  50DE               	movf	postinc2,w,c
  5107  004A92  10DE               	iorwf	postinc2,w,c
  5108  004A94  B4D8               	btfsc	status,2,c
  5109  004A96  EF4F  F025         	goto	u2881
  5110  004A9A  EF51  F025         	goto	u2880
  5111  004A9E                     u2881:
  5112  004A9E  EF6C  F025         	goto	l3608
  5113  004AA2                     u2880:
  5114  004AA2  EE20 F009          	lfsr	2,9
  5115  004AA6  5005               	movf	fputc@fp^0,w,c
  5116  004AA8  26D9               	addwf	fsr2l,f,c
  5117  004AAA  5006               	movf	(fputc@fp+1)^0,w,c
  5118  004AAC  22DA               	addwfc	fsr2h,f,c
  5119  004AAE  EE10 F003          	lfsr	1,3
  5120  004AB2  5005               	movf	fputc@fp^0,w,c
  5121  004AB4  26E1               	addwf	fsr1l,f,c
  5122  004AB6  5006               	movf	(fputc@fp+1)^0,w,c
  5123  004AB8  22E2               	addwfc	fsr1h,f,c
  5124  004ABA  50DE               	movf	postinc2,w,c
  5125  004ABC  5CE6               	subwf	postinc1,w,c
  5126  004ABE  50E6               	movf	postinc1,w,c
  5127  004AC0  0A80               	xorlw	128
  5128  004AC2  6E0B               	movwf	(??_fputc+4)^0,c
  5129  004AC4  50DE               	movf	postinc2,w,c
  5130  004AC6  0A80               	xorlw	128
  5131  004AC8  580B               	subwfb	(??_fputc+4)^0,w,c
  5132  004ACA  B0D8               	btfsc	status,0,c
  5133  004ACC  EF6A  F025         	goto	u2891
  5134  004AD0  EF6C  F025         	goto	u2890
  5135  004AD4                     u2891:
  5136  004AD4  EF8F  F025         	goto	l1568
  5137  004AD8                     u2890:
  5138  004AD8                     l3608:
  5139  004AD8  EE20 F003          	lfsr	2,3
  5140  004ADC  5005               	movf	fputc@fp^0,w,c
  5141  004ADE  26D9               	addwf	fsr2l,f,c
  5142  004AE0  5006               	movf	(fputc@fp+1)^0,w,c
  5143  004AE2  22DA               	addwfc	fsr2h,f,c
  5144  004AE4  CFDE F007          	movff	postinc2,??_fputc
  5145  004AE8  CFDD F008          	movff	postdec2,??_fputc+1
  5146  004AEC  C005  FFD9         	movff	fputc@fp,fsr2l
  5147  004AF0  C006  FFDA         	movff	fputc@fp+1,fsr2h
  5148  004AF4  CFDE F009          	movff	postinc2,??_fputc+2
  5149  004AF8  CFDD F00A          	movff	postdec2,??_fputc+3
  5150  004AFC  5007               	movf	??_fputc^0,w,c
  5151  004AFE  2409               	addwf	(??_fputc+2)^0,w,c
  5152  004B00  6ED9               	movwf	fsr2l,c
  5153  004B02  5008               	movf	(??_fputc+1)^0,w,c
  5154  004B04  200A               	addwfc	(??_fputc+3)^0,w,c
  5155  004B06  6EDA               	movwf	fsr2h,c
  5156  004B08  C003  FFDF         	movff	fputc@c,indf2
  5157  004B0C  EE20 F003          	lfsr	2,3
  5158  004B10  5005               	movf	fputc@fp^0,w,c
  5159  004B12  26D9               	addwf	fsr2l,f,c
  5160  004B14  5006               	movf	(fputc@fp+1)^0,w,c
  5161  004B16  22DA               	addwfc	fsr2h,f,c
  5162  004B18  2ADE               	incf	postinc2,f,c
  5163  004B1A  0E00               	movlw	0
  5164  004B1C  22DD               	addwfc	postdec2,f,c
  5165  004B1E                     l1568:
  5166  004B1E  0012               	return		;funcret
  5167  004B20                     __end_of_fputc:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _putch *****************
  5171 ;; Defined at:
  5172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  c               1    wreg     unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  c               1    0[COMRAM] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 2
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_fputc
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text18
  5201  005894                     __ptext18:
  5202                           	callstack 0
  5203  005894                     _putch:
  5204                           	callstack 22
  5205  005894  0012               	return		;funcret
  5206  005896                     __end_of_putch:
  5207                           	callstack 0
  5208                           
  5209 ;; *************** function _abs *****************
  5210 ;; Defined at:
  5211 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  a               2   20[COMRAM] int 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  2   20[COMRAM] int 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;Total ram usage:        4 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 2
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_dtoa
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text19
  5240  0054E2                     __ptext19:
  5241                           	callstack 0
  5242  0054E2                     _abs:
  5243                           	callstack 22
  5244  0054E2  BE16               	btfsc	(abs@a+1)^0,7,c
  5245  0054E4  EF7E  F02A         	goto	u3090
  5246  0054E8  5016               	movf	(abs@a+1)^0,w,c
  5247  0054EA  E106               	bnz	u3091
  5248  0054EC  0415               	decf	abs@a^0,w,c
  5249  0054EE  B0D8               	btfsc	status,0,c
  5250  0054F0  EF7C  F02A         	goto	u3091
  5251  0054F4  EF7E  F02A         	goto	u3090
  5252  0054F8                     u3091:
  5253  0054F8  EF8C  F02A         	goto	l1553
  5254  0054FC                     u3090:
  5255  0054FC  C015  F017         	movff	abs@a,??_abs
  5256  005500  C016  F018         	movff	abs@a+1,??_abs+1
  5257  005504  1E17               	comf	??_abs^0,f,c
  5258  005506  1E18               	comf	(??_abs+1)^0,f,c
  5259  005508  4A17               	infsnz	??_abs^0,f,c
  5260  00550A  2A18               	incf	(??_abs+1)^0,f,c
  5261  00550C  C017  F015         	movff	??_abs,?_abs
  5262  005510  C018  F016         	movff	??_abs+1,?_abs+1
  5263  005514  EF90  F02A         	goto	l1556
  5264  005518                     l1553:
  5265  005518  C015  F015         	movff	abs@a,?_abs
  5266  00551C  C016  F016         	movff	abs@a+1,?_abs+1
  5267  005520                     l1556:
  5268  005520  0012               	return		;funcret
  5269  005522                     __end_of_abs:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function ___aomod *****************
  5273 ;; Defined at:
  5274 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  dividend        8    2[COMRAM] long long 
  5277 ;;  divisor         8   10[COMRAM] long long 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  sign            1   19[COMRAM] unsigned char 
  5280 ;;  counter         1   18[COMRAM] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  8    2[COMRAM] long long 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5290 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;Total ram usage:       18 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; Hardware stack levels required when called: 2
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_dtoa
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text20
  5305  0043A4                     __ptext20:
  5306                           	callstack 0
  5307  0043A4                     ___aomod:
  5308                           	callstack 22
  5309  0043A4  0E00               	movlw	0
  5310  0043A6  6E14               	movwf	___aomod@sign^0,c
  5311  0043A8  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  5312  0043AA  EFDB  F021         	goto	u2990
  5313  0043AE  EFD9  F021         	goto	u2991
  5314  0043B2                     u2991:
  5315  0043B2  EFED  F021         	goto	l3682
  5316  0043B6                     u2990:
  5317  0043B6  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5318  0043B8  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5319  0043BA  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5320  0043BC  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5321  0043BE  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5322  0043C0  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5323  0043C2  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5324  0043C4  6C03               	negf	___aomod@dividend^0,c
  5325  0043C6  0E00               	movlw	0
  5326  0043C8  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5327  0043CA  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5328  0043CC  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5329  0043CE  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5330  0043D0  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5331  0043D2  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5332  0043D4  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5333  0043D6  0E01               	movlw	1
  5334  0043D8  6E14               	movwf	___aomod@sign^0,c
  5335  0043DA                     l3682:
  5336  0043DA  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  5337  0043DC  EFF4  F021         	goto	u3000
  5338  0043E0  EFF2  F021         	goto	u3001
  5339  0043E4                     u3001:
  5340  0043E4  EF04  F022         	goto	l3686
  5341  0043E8                     u3000:
  5342  0043E8  1E12               	comf	(___aomod@divisor+7)^0,f,c
  5343  0043EA  1E11               	comf	(___aomod@divisor+6)^0,f,c
  5344  0043EC  1E10               	comf	(___aomod@divisor+5)^0,f,c
  5345  0043EE  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  5346  0043F0  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  5347  0043F2  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  5348  0043F4  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  5349  0043F6  6C0B               	negf	___aomod@divisor^0,c
  5350  0043F8  0E00               	movlw	0
  5351  0043FA  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  5352  0043FC  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  5353  0043FE  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  5354  004400  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  5355  004402  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  5356  004404  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  5357  004406  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  5358  004408                     l3686:
  5359  004408  500B               	movf	___aomod@divisor^0,w,c
  5360  00440A  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  5361  00440C  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  5362  00440E  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  5363  004410  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  5364  004412  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  5365  004414  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  5366  004416  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  5367  004418  B4D8               	btfsc	status,2,c
  5368  00441A  EF11  F022         	goto	u3011
  5369  00441E  EF13  F022         	goto	u3010
  5370  004422                     u3011:
  5371  004422  EF5B  F022         	goto	l3702
  5372  004426                     u3010:
  5373  004426  0E01               	movlw	1
  5374  004428  6E13               	movwf	___aomod@counter^0,c
  5375  00442A  EF21  F022         	goto	l3692
  5376  00442E                     l3690:
  5377  00442E  90D8               	bcf	status,0,c
  5378  004430  360B               	rlcf	___aomod@divisor^0,f,c
  5379  004432  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  5380  004434  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  5381  004436  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  5382  004438  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  5383  00443A  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  5384  00443C  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  5385  00443E  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  5386  004440  2A13               	incf	___aomod@counter^0,f,c
  5387  004442                     l3692:
  5388  004442  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  5389  004444  EF26  F022         	goto	u3021
  5390  004448  EF28  F022         	goto	u3020
  5391  00444C                     u3021:
  5392  00444C  EF17  F022         	goto	l3690
  5393  004450                     u3020:
  5394  004450                     l3694:
  5395  004450  500B               	movf	___aomod@divisor^0,w,c
  5396  004452  5C03               	subwf	___aomod@dividend^0,w,c
  5397  004454  500C               	movf	(___aomod@divisor+1)^0,w,c
  5398  004456  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  5399  004458  500D               	movf	(___aomod@divisor+2)^0,w,c
  5400  00445A  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  5401  00445C  500E               	movf	(___aomod@divisor+3)^0,w,c
  5402  00445E  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  5403  004460  500F               	movf	(___aomod@divisor+4)^0,w,c
  5404  004462  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  5405  004464  5010               	movf	(___aomod@divisor+5)^0,w,c
  5406  004466  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  5407  004468  5011               	movf	(___aomod@divisor+6)^0,w,c
  5408  00446A  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  5409  00446C  5012               	movf	(___aomod@divisor+7)^0,w,c
  5410  00446E  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  5411  004470  A0D8               	btfss	status,0,c
  5412  004472  EF3D  F022         	goto	u3031
  5413  004476  EF3F  F022         	goto	u3030
  5414  00447A                     u3031:
  5415  00447A  EF4F  F022         	goto	l3698
  5416  00447E                     u3030:
  5417  00447E  500B               	movf	___aomod@divisor^0,w,c
  5418  004480  5E03               	subwf	___aomod@dividend^0,f,c
  5419  004482  500C               	movf	(___aomod@divisor+1)^0,w,c
  5420  004484  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  5421  004486  500D               	movf	(___aomod@divisor+2)^0,w,c
  5422  004488  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  5423  00448A  500E               	movf	(___aomod@divisor+3)^0,w,c
  5424  00448C  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  5425  00448E  500F               	movf	(___aomod@divisor+4)^0,w,c
  5426  004490  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  5427  004492  5010               	movf	(___aomod@divisor+5)^0,w,c
  5428  004494  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  5429  004496  5011               	movf	(___aomod@divisor+6)^0,w,c
  5430  004498  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  5431  00449A  5012               	movf	(___aomod@divisor+7)^0,w,c
  5432  00449C  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  5433  00449E                     l3698:
  5434  00449E  90D8               	bcf	status,0,c
  5435  0044A0  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  5436  0044A2  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  5437  0044A4  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  5438  0044A6  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  5439  0044A8  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  5440  0044AA  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  5441  0044AC  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  5442  0044AE  320B               	rrcf	___aomod@divisor^0,f,c
  5443  0044B0  2E13               	decfsz	___aomod@counter^0,f,c
  5444  0044B2  EF28  F022         	goto	l3694
  5445  0044B6                     l3702:
  5446  0044B6  5014               	movf	___aomod@sign^0,w,c
  5447  0044B8  B4D8               	btfsc	status,2,c
  5448  0044BA  EF61  F022         	goto	u3041
  5449  0044BE  EF63  F022         	goto	u3040
  5450  0044C2                     u3041:
  5451  0044C2  EF73  F022         	goto	l3706
  5452  0044C6                     u3040:
  5453  0044C6  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5454  0044C8  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5455  0044CA  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5456  0044CC  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5457  0044CE  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5458  0044D0  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5459  0044D2  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5460  0044D4  6C03               	negf	___aomod@dividend^0,c
  5461  0044D6  0E00               	movlw	0
  5462  0044D8  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5463  0044DA  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5464  0044DC  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5465  0044DE  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5466  0044E0  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5467  0044E2  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5468  0044E4  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5469  0044E6                     l3706:
  5470  0044E6  C003  F003         	movff	___aomod@dividend,?___aomod
  5471  0044EA  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  5472  0044EE  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  5473  0044F2  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  5474  0044F6  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  5475  0044FA  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  5476  0044FE  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  5477  004502  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  5478  004506  0012               	return		;funcret
  5479  004508                     __end_of___aomod:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function ___aodiv *****************
  5483 ;; Defined at:
  5484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  dividend        8    2[COMRAM] long long 
  5487 ;;  divisor         8   10[COMRAM] long long 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  quotient        8   20[COMRAM] long long 
  5490 ;;  sign            1   19[COMRAM] unsigned char 
  5491 ;;  counter         1   18[COMRAM] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  8    2[COMRAM] long long 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5501 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;Total ram usage:       26 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 2
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_dtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text21
  5516  003F1C                     __ptext21:
  5517                           	callstack 0
  5518  003F1C                     ___aodiv:
  5519                           	callstack 22
  5520  003F1C  0E00               	movlw	0
  5521  003F1E  6E14               	movwf	___aodiv@sign^0,c
  5522  003F20  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  5523  003F22  EF97  F01F         	goto	u2920
  5524  003F26  EF95  F01F         	goto	u2921
  5525  003F2A                     u2921:
  5526  003F2A  EFA9  F01F         	goto	l3638
  5527  003F2E                     u2920:
  5528  003F2E  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  5529  003F30  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  5530  003F32  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  5531  003F34  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  5532  003F36  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  5533  003F38  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  5534  003F3A  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  5535  003F3C  6C0B               	negf	___aodiv@divisor^0,c
  5536  003F3E  0E00               	movlw	0
  5537  003F40  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  5538  003F42  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  5539  003F44  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  5540  003F46  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  5541  003F48  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  5542  003F4A  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  5543  003F4C  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  5544  003F4E  0E01               	movlw	1
  5545  003F50  6E14               	movwf	___aodiv@sign^0,c
  5546  003F52                     l3638:
  5547  003F52  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  5548  003F54  EFB0  F01F         	goto	u2930
  5549  003F58  EFAE  F01F         	goto	u2931
  5550  003F5C                     u2931:
  5551  003F5C  EFC2  F01F         	goto	l3644
  5552  003F60                     u2930:
  5553  003F60  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  5554  003F62  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  5555  003F64  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  5556  003F66  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  5557  003F68  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  5558  003F6A  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  5559  003F6C  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  5560  003F6E  6C03               	negf	___aodiv@dividend^0,c
  5561  003F70  0E00               	movlw	0
  5562  003F72  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  5563  003F74  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  5564  003F76  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  5565  003F78  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  5566  003F7A  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  5567  003F7C  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  5568  003F7E  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  5569  003F80  0E01               	movlw	1
  5570  003F82  1A14               	xorwf	___aodiv@sign^0,f,c
  5571  003F84                     l3644:
  5572  003F84  EE20  F015         	lfsr	2,___aodiv@quotient
  5573  003F88  0E07               	movlw	7
  5574  003F8A                     u2941:
  5575  003F8A  6ADE               	clrf	postinc2,c
  5576  003F8C  06E8               	decf	wreg,f,c
  5577  003F8E  E2FD               	bc	u2941
  5578  003F90  500B               	movf	___aodiv@divisor^0,w,c
  5579  003F92  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  5580  003F94  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  5581  003F96  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  5582  003F98  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  5583  003F9A  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  5584  003F9C  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  5585  003F9E  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  5586  003FA0  B4D8               	btfsc	status,2,c
  5587  003FA2  EFD5  F01F         	goto	u2951
  5588  003FA6  EFD7  F01F         	goto	u2950
  5589  003FAA                     u2951:
  5590  003FAA  EF29  F020         	goto	l3666
  5591  003FAE                     u2950:
  5592  003FAE  0E01               	movlw	1
  5593  003FB0  6E13               	movwf	___aodiv@counter^0,c
  5594  003FB2  EFE5  F01F         	goto	l3652
  5595  003FB6                     l3650:
  5596  003FB6  90D8               	bcf	status,0,c
  5597  003FB8  360B               	rlcf	___aodiv@divisor^0,f,c
  5598  003FBA  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  5599  003FBC  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  5600  003FBE  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  5601  003FC0  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  5602  003FC2  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  5603  003FC4  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  5604  003FC6  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  5605  003FC8  2A13               	incf	___aodiv@counter^0,f,c
  5606  003FCA                     l3652:
  5607  003FCA  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  5608  003FCC  EFEA  F01F         	goto	u2961
  5609  003FD0  EFEC  F01F         	goto	u2960
  5610  003FD4                     u2961:
  5611  003FD4  EFDB  F01F         	goto	l3650
  5612  003FD8                     u2960:
  5613  003FD8                     l3654:
  5614  003FD8  90D8               	bcf	status,0,c
  5615  003FDA  3615               	rlcf	___aodiv@quotient^0,f,c
  5616  003FDC  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  5617  003FDE  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  5618  003FE0  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  5619  003FE2  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  5620  003FE4  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  5621  003FE6  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  5622  003FE8  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  5623  003FEA  500B               	movf	___aodiv@divisor^0,w,c
  5624  003FEC  5C03               	subwf	___aodiv@dividend^0,w,c
  5625  003FEE  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5626  003FF0  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  5627  003FF2  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5628  003FF4  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  5629  003FF6  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5630  003FF8  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  5631  003FFA  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5632  003FFC  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  5633  003FFE  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5634  004000  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  5635  004002  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5636  004004  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  5637  004006  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5638  004008  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  5639  00400A  A0D8               	btfss	status,0,c
  5640  00400C  EF0A  F020         	goto	u2971
  5641  004010  EF0C  F020         	goto	u2970
  5642  004014                     u2971:
  5643  004014  EF1D  F020         	goto	l3662
  5644  004018                     u2970:
  5645  004018  500B               	movf	___aodiv@divisor^0,w,c
  5646  00401A  5E03               	subwf	___aodiv@dividend^0,f,c
  5647  00401C  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5648  00401E  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  5649  004020  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5650  004022  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  5651  004024  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5652  004026  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  5653  004028  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5654  00402A  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  5655  00402C  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5656  00402E  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  5657  004030  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5658  004032  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  5659  004034  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5660  004036  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  5661  004038  8015               	bsf	___aodiv@quotient^0,0,c
  5662  00403A                     l3662:
  5663  00403A  90D8               	bcf	status,0,c
  5664  00403C  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  5665  00403E  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  5666  004040  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  5667  004042  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  5668  004044  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  5669  004046  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  5670  004048  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  5671  00404A  320B               	rrcf	___aodiv@divisor^0,f,c
  5672  00404C  2E13               	decfsz	___aodiv@counter^0,f,c
  5673  00404E  EFEC  F01F         	goto	l3654
  5674  004052                     l3666:
  5675  004052  5014               	movf	___aodiv@sign^0,w,c
  5676  004054  B4D8               	btfsc	status,2,c
  5677  004056  EF2F  F020         	goto	u2981
  5678  00405A  EF31  F020         	goto	u2980
  5679  00405E                     u2981:
  5680  00405E  EF41  F020         	goto	l3670
  5681  004062                     u2980:
  5682  004062  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  5683  004064  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  5684  004066  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  5685  004068  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  5686  00406A  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  5687  00406C  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  5688  00406E  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  5689  004070  6C15               	negf	___aodiv@quotient^0,c
  5690  004072  0E00               	movlw	0
  5691  004074  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  5692  004076  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  5693  004078  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  5694  00407A  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  5695  00407C  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  5696  00407E  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  5697  004080  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  5698  004082                     l3670:
  5699  004082  C015  F003         	movff	___aodiv@quotient,?___aodiv
  5700  004086  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  5701  00408A  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  5702  00408E  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  5703  004092  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  5704  004096  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  5705  00409A  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  5706  00409E  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  5707  0040A2  0012               	return		;funcret
  5708  0040A4                     __end_of___aodiv:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _sendStringSerial4 *****************
  5712 ;; Defined at:
  5713 ;;		line 36 in file "serial.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  string          2    3[COMRAM] PTR unsigned char 
  5716 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;Total ram usage:        2 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 3
  5735 ;; This function calls:
  5736 ;;		_sendCharSerial4
  5737 ;; This function is called by:
  5738 ;;		_color_display
  5739 ;;		_color_predict
  5740 ;;		_check_color_reading
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text22
  5745  005638                     __ptext22:
  5746                           	callstack 0
  5747  005638                     _sendStringSerial4:
  5748                           	callstack 25
  5749  005638                     
  5750                           ;serial.c: 38:     while(*string != 0){
  5751  005638  EF27  F02B         	goto	l4382
  5752  00563C                     l4378:
  5753                           
  5754                           ;serial.c: 39:   sendCharSerial4(*string++);}
  5755  00563C  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  5756  005640  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5757  005644  50DF               	movf	indf2,w,c
  5758  005646  EC15  F02C         	call	_sendCharSerial4
  5759  00564A  4A04               	infsnz	sendStringSerial4@string^0,f,c
  5760  00564C  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  5761  00564E                     l4382:
  5762                           
  5763                           ;serial.c: 38:     while(*string != 0){
  5764  00564E  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  5765  005652  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5766  005656  50DF               	movf	indf2,w,c
  5767  005658  A4D8               	btfss	status,2,c
  5768  00565A  EF31  F02B         	goto	u4131
  5769  00565E  EF33  F02B         	goto	u4130
  5770  005662                     u4131:
  5771  005662  EF1E  F02B         	goto	l4378
  5772  005666                     u4130:
  5773  005666  0012               	return		;funcret
  5774  005668                     __end_of_sendStringSerial4:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _sendCharSerial4 *****************
  5778 ;; Defined at:
  5779 ;;		line 29 in file "serial.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  charToSend      1    wreg     unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  charToSend      1    2[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;Total ram usage:        1 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 2
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_sendStringSerial4
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text23
  5808  00582A                     __ptext23:
  5809                           	callstack 0
  5810  00582A                     _sendCharSerial4:
  5811                           	callstack 25
  5812                           
  5813                           ;incstack = 0
  5814                           ;sendCharSerial4@charToSend stored from wreg
  5815  00582A  6E03               	movwf	sendCharSerial4@charToSend^0,c
  5816  00582C                     l430:
  5817  00582C  010E               	movlb	14	; () banked
  5818  00582E  A537               	btfss	55,2,b	;volatile
  5819  005830  EF1C  F02C         	goto	u3861
  5820  005834  EF1E  F02C         	goto	u3860
  5821  005838                     u3861:
  5822  005838  EF16  F02C         	goto	l430
  5823  00583C                     u3860:
  5824  00583C                     
  5825                           ; BSR set to: 14
  5826                           ;serial.c: 31:     TX4REG = charToSend;
  5827  00583C  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5828  005840                     
  5829                           ; BSR set to: 14
  5830  005840  0012               	return		;funcret
  5831  005842                     __end_of_sendCharSerial4:
  5832                           	callstack 0
  5833                           
  5834 ;; *************** function _calibrate_white *****************
  5835 ;; Defined at:
  5836 ;;		line 258 in file "color.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  w               2   13[COMRAM] PTR struct white_card
  5839 ;;		 -> main@white(26), 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;Total ram usage:        4 bytes
  5856 ;; Hardware stack levels used: 1
  5857 ;; Hardware stack levels required when called: 5
  5858 ;; This function calls:
  5859 ;;		_LED_B
  5860 ;;		_LED_C
  5861 ;;		_LED_G
  5862 ;;		_LED_OFF
  5863 ;;		_LED_R
  5864 ;;		_color_read_Blue
  5865 ;;		_color_read_Clear
  5866 ;;		_color_read_Green
  5867 ;;		_color_read_Red
  5868 ;;		_toggle_light
  5869 ;; This function is called by:
  5870 ;;		_main
  5871 ;;		_test_function
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text24
  5876  0034A6                     __ptext24:
  5877                           	callstack 0
  5878  0034A6                     _calibrate_white:
  5879                           	callstack 24
  5880  0034A6                     
  5881                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  5882  0034A6  EC97  F02B         	call	_LED_OFF	;wreg free
  5883  0034AA                     
  5884                           ;color.c: 261:     toggle_light(1,2);
  5885  0034AA  0E02               	movlw	2
  5886  0034AC  6E03               	movwf	toggle_light@toggletime^0,c
  5887  0034AE  0E01               	movlw	1
  5888  0034B0  ECB4  F017         	call	_toggle_light
  5889  0034B4                     
  5890                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5891  0034B4  0E29               	movlw	41
  5892  0034B6  6E11               	movwf	(??_calibrate_white+1)^0,c
  5893  0034B8  0E96               	movlw	150
  5894  0034BA  6E10               	movwf	??_calibrate_white^0,c
  5895  0034BC  0E7F               	movlw	127
  5896  0034BE                     u6947:
  5897  0034BE  2EE8               	decfsz	wreg,f,c
  5898  0034C0  D7FE               	bra	u6947
  5899  0034C2  2E10               	decfsz	??_calibrate_white^0,f,c
  5900  0034C4  D7FC               	bra	u6947
  5901  0034C6  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5902  0034C8  D7FA               	bra	u6947
  5903  0034CA  F000               	nop	
  5904  0034CC                     
  5905                           ;color.c: 264:     LED_R();
  5906  0034CC  EC87  F02B         	call	_LED_R	;wreg free
  5907  0034D0                     
  5908                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  5909  0034D0  EC08  F029         	call	_color_read_Red	;wreg free
  5910  0034D4  C00E  FFD9         	movff	calibrate_white@w,fsr2l
  5911  0034D8  C00F  FFDA         	movff	calibrate_white@w+1,fsr2h
  5912  0034DC  C007  FFDE         	movff	?_color_read_Red,postinc2
  5913  0034E0  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5914  0034E4  EC30  F029         	call	_color_read_Green	;wreg free
  5915  0034E8  EE20 F002          	lfsr	2,2
  5916  0034EC  500E               	movf	calibrate_white@w^0,w,c
  5917  0034EE  26D9               	addwf	fsr2l,f,c
  5918  0034F0  500F               	movf	(calibrate_white@w+1)^0,w,c
  5919  0034F2  22DA               	addwfc	fsr2h,f,c
  5920  0034F4  C007  FFDE         	movff	?_color_read_Green,postinc2
  5921  0034F8  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5922  0034FC  EC58  F029         	call	_color_read_Blue	;wreg free
  5923  003500  EE20 F004          	lfsr	2,4
  5924  003504  500E               	movf	calibrate_white@w^0,w,c
  5925  003506  26D9               	addwf	fsr2l,f,c
  5926  003508  500F               	movf	(calibrate_white@w+1)^0,w,c
  5927  00350A  22DA               	addwfc	fsr2h,f,c
  5928  00350C  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5929  003510  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5930  003514                     
  5931                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5932  003514  0E09               	movlw	9
  5933  003516  6E11               	movwf	(??_calibrate_white+1)^0,c
  5934  003518  0E1E               	movlw	30
  5935  00351A  6E10               	movwf	??_calibrate_white^0,c
  5936  00351C  0EE4               	movlw	228
  5937  00351E                     u6957:
  5938  00351E  2EE8               	decfsz	wreg,f,c
  5939  003520  D7FE               	bra	u6957
  5940  003522  2E10               	decfsz	??_calibrate_white^0,f,c
  5941  003524  D7FC               	bra	u6957
  5942  003526  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5943  003528  D7FA               	bra	u6957
  5944  00352A  D000               	nop2	
  5945  00352C                     
  5946                           ;color.c: 268:     LED_G();
  5947  00352C  ECA7  F02B         	call	_LED_G	;wreg free
  5948  003530                     
  5949                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  5950  003530  EC08  F029         	call	_color_read_Red	;wreg free
  5951  003534  EE20 F006          	lfsr	2,6
  5952  003538  500E               	movf	calibrate_white@w^0,w,c
  5953  00353A  26D9               	addwf	fsr2l,f,c
  5954  00353C  500F               	movf	(calibrate_white@w+1)^0,w,c
  5955  00353E  22DA               	addwfc	fsr2h,f,c
  5956  003540  C007  FFDE         	movff	?_color_read_Red,postinc2
  5957  003544  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  5958  003548  EC30  F029         	call	_color_read_Green	;wreg free
  5959  00354C  EE20 F008          	lfsr	2,8
  5960  003550  500E               	movf	calibrate_white@w^0,w,c
  5961  003552  26D9               	addwf	fsr2l,f,c
  5962  003554  500F               	movf	(calibrate_white@w+1)^0,w,c
  5963  003556  22DA               	addwfc	fsr2h,f,c
  5964  003558  C007  FFDE         	movff	?_color_read_Green,postinc2
  5965  00355C  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  5966  003560  EC58  F029         	call	_color_read_Blue	;wreg free
  5967  003564  EE20 F00A          	lfsr	2,10
  5968  003568  500E               	movf	calibrate_white@w^0,w,c
  5969  00356A  26D9               	addwf	fsr2l,f,c
  5970  00356C  500F               	movf	(calibrate_white@w+1)^0,w,c
  5971  00356E  22DA               	addwfc	fsr2h,f,c
  5972  003570  C007  FFDE         	movff	?_color_read_Blue,postinc2
  5973  003574  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  5974  003578                     
  5975                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5976  003578  0E09               	movlw	9
  5977  00357A  6E11               	movwf	(??_calibrate_white+1)^0,c
  5978  00357C  0E1E               	movlw	30
  5979  00357E  6E10               	movwf	??_calibrate_white^0,c
  5980  003580  0EE4               	movlw	228
  5981  003582                     u6967:
  5982  003582  2EE8               	decfsz	wreg,f,c
  5983  003584  D7FE               	bra	u6967
  5984  003586  2E10               	decfsz	??_calibrate_white^0,f,c
  5985  003588  D7FC               	bra	u6967
  5986  00358A  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  5987  00358C  D7FA               	bra	u6967
  5988  00358E  D000               	nop2	
  5989  003590                     
  5990                           ;color.c: 273:     LED_B();
  5991  003590  ECB7  F02B         	call	_LED_B	;wreg free
  5992  003594                     
  5993                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  5994  003594  EC08  F029         	call	_color_read_Red	;wreg free
  5995  003598  EE20 F00C          	lfsr	2,12
  5996  00359C  500E               	movf	calibrate_white@w^0,w,c
  5997  00359E  26D9               	addwf	fsr2l,f,c
  5998  0035A0  500F               	movf	(calibrate_white@w+1)^0,w,c
  5999  0035A2  22DA               	addwfc	fsr2h,f,c
  6000  0035A4  C007  FFDE         	movff	?_color_read_Red,postinc2
  6001  0035A8  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6002  0035AC  EC30  F029         	call	_color_read_Green	;wreg free
  6003  0035B0  EE20 F00E          	lfsr	2,14
  6004  0035B4  500E               	movf	calibrate_white@w^0,w,c
  6005  0035B6  26D9               	addwf	fsr2l,f,c
  6006  0035B8  500F               	movf	(calibrate_white@w+1)^0,w,c
  6007  0035BA  22DA               	addwfc	fsr2h,f,c
  6008  0035BC  C007  FFDE         	movff	?_color_read_Green,postinc2
  6009  0035C0  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6010  0035C4  EC58  F029         	call	_color_read_Blue	;wreg free
  6011  0035C8  EE20 F010          	lfsr	2,16
  6012  0035CC  500E               	movf	calibrate_white@w^0,w,c
  6013  0035CE  26D9               	addwf	fsr2l,f,c
  6014  0035D0  500F               	movf	(calibrate_white@w+1)^0,w,c
  6015  0035D2  22DA               	addwfc	fsr2h,f,c
  6016  0035D4  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6017  0035D8  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6018  0035DC                     
  6019                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6020  0035DC  0E09               	movlw	9
  6021  0035DE  6E11               	movwf	(??_calibrate_white+1)^0,c
  6022  0035E0  0E1E               	movlw	30
  6023  0035E2  6E10               	movwf	??_calibrate_white^0,c
  6024  0035E4  0EE4               	movlw	228
  6025  0035E6                     u6977:
  6026  0035E6  2EE8               	decfsz	wreg,f,c
  6027  0035E8  D7FE               	bra	u6977
  6028  0035EA  2E10               	decfsz	??_calibrate_white^0,f,c
  6029  0035EC  D7FC               	bra	u6977
  6030  0035EE  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6031  0035F0  D7FA               	bra	u6977
  6032  0035F2  D000               	nop2	
  6033  0035F4                     
  6034                           ;color.c: 277:     LED_C();
  6035  0035F4  ECC7  F02B         	call	_LED_C	;wreg free
  6036  0035F8                     
  6037                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  6038  0035F8  EC08  F029         	call	_color_read_Red	;wreg free
  6039  0035FC  EE20 F012          	lfsr	2,18
  6040  003600  500E               	movf	calibrate_white@w^0,w,c
  6041  003602  26D9               	addwf	fsr2l,f,c
  6042  003604  500F               	movf	(calibrate_white@w+1)^0,w,c
  6043  003606  22DA               	addwfc	fsr2h,f,c
  6044  003608  C007  FFDE         	movff	?_color_read_Red,postinc2
  6045  00360C  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6046  003610  EC30  F029         	call	_color_read_Green	;wreg free
  6047  003614  EE20 F014          	lfsr	2,20
  6048  003618  500E               	movf	calibrate_white@w^0,w,c
  6049  00361A  26D9               	addwf	fsr2l,f,c
  6050  00361C  500F               	movf	(calibrate_white@w+1)^0,w,c
  6051  00361E  22DA               	addwfc	fsr2h,f,c
  6052  003620  C007  FFDE         	movff	?_color_read_Green,postinc2
  6053  003624  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6054  003628  EC58  F029         	call	_color_read_Blue	;wreg free
  6055  00362C  EE20 F016          	lfsr	2,22
  6056  003630  500E               	movf	calibrate_white@w^0,w,c
  6057  003632  26D9               	addwf	fsr2l,f,c
  6058  003634  500F               	movf	(calibrate_white@w+1)^0,w,c
  6059  003636  22DA               	addwfc	fsr2h,f,c
  6060  003638  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6061  00363C  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6062  003640  EC80  F029         	call	_color_read_Clear	;wreg free
  6063  003644  EE20 F018          	lfsr	2,24
  6064  003648  500E               	movf	calibrate_white@w^0,w,c
  6065  00364A  26D9               	addwf	fsr2l,f,c
  6066  00364C  500F               	movf	(calibrate_white@w+1)^0,w,c
  6067  00364E  22DA               	addwfc	fsr2h,f,c
  6068  003650  C007  FFDE         	movff	?_color_read_Clear,postinc2
  6069  003654  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  6070  003658                     
  6071                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6072  003658  0E29               	movlw	41
  6073  00365A  6E11               	movwf	(??_calibrate_white+1)^0,c
  6074  00365C  0E96               	movlw	150
  6075  00365E  6E10               	movwf	??_calibrate_white^0,c
  6076  003660  0E7F               	movlw	127
  6077  003662                     u6987:
  6078  003662  2EE8               	decfsz	wreg,f,c
  6079  003664  D7FE               	bra	u6987
  6080  003666  2E10               	decfsz	??_calibrate_white^0,f,c
  6081  003668  D7FC               	bra	u6987
  6082  00366A  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6083  00366C  D7FA               	bra	u6987
  6084  00366E  F000               	nop	
  6085  003670                     
  6086                           ;color.c: 281:     LED_OFF();
  6087  003670  EC97  F02B         	call	_LED_OFF	;wreg free
  6088  003674                     
  6089                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6090  003674  0E29               	movlw	41
  6091  003676  6E11               	movwf	(??_calibrate_white+1)^0,c
  6092  003678  0E96               	movlw	150
  6093  00367A  6E10               	movwf	??_calibrate_white^0,c
  6094  00367C  0E7F               	movlw	127
  6095  00367E                     u6997:
  6096  00367E  2EE8               	decfsz	wreg,f,c
  6097  003680  D7FE               	bra	u6997
  6098  003682  2E10               	decfsz	??_calibrate_white^0,f,c
  6099  003684  D7FC               	bra	u6997
  6100  003686  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6101  003688  D7FA               	bra	u6997
  6102  00368A  F000               	nop	
  6103  00368C                     
  6104                           ;color.c: 283:     toggle_light(1,2);
  6105  00368C  0E02               	movlw	2
  6106  00368E  6E03               	movwf	toggle_light@toggletime^0,c
  6107  003690  0E01               	movlw	1
  6108  003692  ECB4  F017         	call	_toggle_light
  6109  003696  0012               	return		;funcret
  6110  003698                     __end_of_calibrate_white:
  6111                           	callstack 0
  6112                           
  6113 ;; *************** function _color_read_Red *****************
  6114 ;; Defined at:
  6115 ;;		line 91 in file "color.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  tmp             2   11[COMRAM] unsigned int 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2    6[COMRAM] unsigned int 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;Total ram usage:        7 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 4
  6136 ;; This function calls:
  6137 ;;		_I2C_2_Master_Read
  6138 ;;		_I2C_2_Master_RepStart
  6139 ;;		_I2C_2_Master_Start
  6140 ;;		_I2C_2_Master_Stop
  6141 ;;		_I2C_2_Master_Write
  6142 ;; This function is called by:
  6143 ;;		_read_color
  6144 ;;		_calibrate_white
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text25
  6149  005210                     __ptext25:
  6150                           	callstack 0
  6151  005210                     _color_read_Red:
  6152                           	callstack 23
  6153  005210                     
  6154                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6155  005210  EC42  F02C         	call	_I2C_2_Master_Start	;wreg free
  6156                           
  6157                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6158  005214  0E52               	movlw	82
  6159  005216  EC2C  F02C         	call	_I2C_2_Master_Write
  6160                           
  6161                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  6162  00521A  0EB6               	movlw	182
  6163  00521C  EC2C  F02C         	call	_I2C_2_Master_Write
  6164                           
  6165                           ;color.c: 97:  I2C_2_Master_RepStart();
  6166  005220  EC38  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6167                           
  6168                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6169  005224  0E53               	movlw	83
  6170  005226  EC2C  F02C         	call	_I2C_2_Master_Write
  6171                           
  6172                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6173  00522A  0E01               	movlw	1
  6174  00522C  ECED  F029         	call	_I2C_2_Master_Read
  6175  005230  6E09               	movwf	??_color_read_Red^0,c
  6176  005232  5009               	movf	??_color_read_Red^0,w,c
  6177  005234  6E0C               	movwf	color_read_Red@tmp^0,c
  6178  005236  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  6179                           
  6180                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6181  005238  0E00               	movlw	0
  6182  00523A  ECED  F029         	call	_I2C_2_Master_Read
  6183  00523E  6E09               	movwf	??_color_read_Red^0,c
  6184  005240  5009               	movf	??_color_read_Red^0,w,c
  6185  005242  6E0B               	movwf	(??_color_read_Red+2)^0,c
  6186  005244  6A0A               	clrf	(??_color_read_Red+1)^0,c
  6187  005246  500C               	movf	color_read_Red@tmp^0,w,c
  6188  005248  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  6189  00524A  6E0C               	movwf	color_read_Red@tmp^0,c
  6190  00524C  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  6191  00524E  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  6192  005250  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  6193                           
  6194                           ;color.c: 101:  I2C_2_Master_Stop();
  6195  005252  EC3D  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6196  005256                     
  6197                           ;color.c: 102:  return tmp;
  6198  005256  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  6199  00525A  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6200  00525E  0012               	return		;funcret
  6201  005260                     __end_of_color_read_Red:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _color_read_Green *****************
  6205 ;; Defined at:
  6206 ;;		line 119 in file "color.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  tmp             2   11[COMRAM] unsigned int 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  2    6[COMRAM] unsigned int 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;Total ram usage:        7 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 4
  6227 ;; This function calls:
  6228 ;;		_I2C_2_Master_Read
  6229 ;;		_I2C_2_Master_RepStart
  6230 ;;		_I2C_2_Master_Start
  6231 ;;		_I2C_2_Master_Stop
  6232 ;;		_I2C_2_Master_Write
  6233 ;; This function is called by:
  6234 ;;		_read_color
  6235 ;;		_calibrate_white
  6236 ;;		_distance_measure
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text26
  6241  005260                     __ptext26:
  6242                           	callstack 0
  6243  005260                     _color_read_Green:
  6244                           	callstack 23
  6245  005260                     
  6246                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  6247  005260  EC42  F02C         	call	_I2C_2_Master_Start	;wreg free
  6248                           
  6249                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  6250  005264  0E52               	movlw	82
  6251  005266  EC2C  F02C         	call	_I2C_2_Master_Write
  6252                           
  6253                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  6254  00526A  0EB8               	movlw	184
  6255  00526C  EC2C  F02C         	call	_I2C_2_Master_Write
  6256                           
  6257                           ;color.c: 125:  I2C_2_Master_RepStart();
  6258  005270  EC38  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6259                           
  6260                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  6261  005274  0E53               	movlw	83
  6262  005276  EC2C  F02C         	call	_I2C_2_Master_Write
  6263                           
  6264                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  6265  00527A  0E01               	movlw	1
  6266  00527C  ECED  F029         	call	_I2C_2_Master_Read
  6267  005280  6E09               	movwf	??_color_read_Green^0,c
  6268  005282  5009               	movf	??_color_read_Green^0,w,c
  6269  005284  6E0C               	movwf	color_read_Green@tmp^0,c
  6270  005286  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  6271                           
  6272                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6273  005288  0E00               	movlw	0
  6274  00528A  ECED  F029         	call	_I2C_2_Master_Read
  6275  00528E  6E09               	movwf	??_color_read_Green^0,c
  6276  005290  5009               	movf	??_color_read_Green^0,w,c
  6277  005292  6E0B               	movwf	(??_color_read_Green+2)^0,c
  6278  005294  6A0A               	clrf	(??_color_read_Green+1)^0,c
  6279  005296  500C               	movf	color_read_Green@tmp^0,w,c
  6280  005298  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  6281  00529A  6E0C               	movwf	color_read_Green@tmp^0,c
  6282  00529C  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  6283  00529E  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  6284  0052A0  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  6285                           
  6286                           ;color.c: 129:  I2C_2_Master_Stop();
  6287  0052A2  EC3D  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6288  0052A6                     
  6289                           ;color.c: 130:  return tmp;
  6290  0052A6  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  6291  0052AA  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6292  0052AE  0012               	return		;funcret
  6293  0052B0                     __end_of_color_read_Green:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _color_read_Blue *****************
  6297 ;; Defined at:
  6298 ;;		line 105 in file "color.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  tmp             2   11[COMRAM] unsigned int 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2    6[COMRAM] unsigned int 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;Total ram usage:        7 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; Hardware stack levels required when called: 4
  6319 ;; This function calls:
  6320 ;;		_I2C_2_Master_Read
  6321 ;;		_I2C_2_Master_RepStart
  6322 ;;		_I2C_2_Master_Start
  6323 ;;		_I2C_2_Master_Stop
  6324 ;;		_I2C_2_Master_Write
  6325 ;; This function is called by:
  6326 ;;		_read_color
  6327 ;;		_calibrate_white
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text27
  6332  0052B0                     __ptext27:
  6333                           	callstack 0
  6334  0052B0                     _color_read_Blue:
  6335                           	callstack 23
  6336  0052B0                     
  6337                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  6338  0052B0  EC42  F02C         	call	_I2C_2_Master_Start	;wreg free
  6339                           
  6340                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  6341  0052B4  0E52               	movlw	82
  6342  0052B6  EC2C  F02C         	call	_I2C_2_Master_Write
  6343                           
  6344                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  6345  0052BA  0EBA               	movlw	186
  6346  0052BC  EC2C  F02C         	call	_I2C_2_Master_Write
  6347                           
  6348                           ;color.c: 111:  I2C_2_Master_RepStart();
  6349  0052C0  EC38  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6350                           
  6351                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  6352  0052C4  0E53               	movlw	83
  6353  0052C6  EC2C  F02C         	call	_I2C_2_Master_Write
  6354                           
  6355                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  6356  0052CA  0E01               	movlw	1
  6357  0052CC  ECED  F029         	call	_I2C_2_Master_Read
  6358  0052D0  6E09               	movwf	??_color_read_Blue^0,c
  6359  0052D2  5009               	movf	??_color_read_Blue^0,w,c
  6360  0052D4  6E0C               	movwf	color_read_Blue@tmp^0,c
  6361  0052D6  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  6362                           
  6363                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6364  0052D8  0E00               	movlw	0
  6365  0052DA  ECED  F029         	call	_I2C_2_Master_Read
  6366  0052DE  6E09               	movwf	??_color_read_Blue^0,c
  6367  0052E0  5009               	movf	??_color_read_Blue^0,w,c
  6368  0052E2  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  6369  0052E4  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  6370  0052E6  500C               	movf	color_read_Blue@tmp^0,w,c
  6371  0052E8  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  6372  0052EA  6E0C               	movwf	color_read_Blue@tmp^0,c
  6373  0052EC  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  6374  0052EE  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  6375  0052F0  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  6376                           
  6377                           ;color.c: 115:  I2C_2_Master_Stop();
  6378  0052F2  EC3D  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6379  0052F6                     
  6380                           ;color.c: 116:  return tmp;
  6381  0052F6  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  6382  0052FA  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6383  0052FE  0012               	return		;funcret
  6384  005300                     __end_of_color_read_Blue:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _LED_R *****************
  6388 ;; Defined at:
  6389 ;;		line 164 in file "color.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;Total ram usage:        2 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 2
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_color_data_collection
  6414 ;;		_calibrate_white
  6415 ;;		_detect_color
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text28
  6420  00570E                     __ptext28:
  6421                           	callstack 0
  6422  00570E                     _LED_R:
  6423                           	callstack 26
  6424  00570E                     
  6425                           ;color.c: 166:     LATGbits.LATG1 = 1;
  6426  00570E  827F               	bsf	127,1,c	;volatile
  6427                           
  6428                           ;color.c: 167:     LATFbits.LATF7 = 0;
  6429  005710  9E7E               	bcf	126,7,c	;volatile
  6430                           
  6431                           ;color.c: 168:     LATAbits.LATA4 = 0;
  6432  005712  9879               	bcf	121,4,c	;volatile
  6433  005714                     
  6434                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6435  005714  0E11               	movlw	17
  6436  005716  6E04               	movwf	(??_LED_R+1)^0,c
  6437  005718  0E3C               	movlw	60
  6438  00571A  6E03               	movwf	??_LED_R^0,c
  6439  00571C  0ECB               	movlw	203
  6440  00571E                     u7007:
  6441  00571E  2EE8               	decfsz	wreg,f,c
  6442  005720  D7FE               	bra	u7007
  6443  005722  2E03               	decfsz	??_LED_R^0,f,c
  6444  005724  D7FC               	bra	u7007
  6445  005726  2E04               	decfsz	(??_LED_R+1)^0,f,c
  6446  005728  D7FA               	bra	u7007
  6447  00572A  F000               	nop	
  6448  00572C  0012               	return		;funcret
  6449  00572E                     __end_of_LED_R:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _LED_OFF *****************
  6453 ;; Defined at:
  6454 ;;		line 155 in file "color.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 2
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_calibrate_white
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text29
  6483  00572E                     __ptext29:
  6484                           	callstack 0
  6485  00572E                     _LED_OFF:
  6486                           	callstack 26
  6487  00572E                     
  6488                           ;color.c: 157:     LATGbits.LATG1 = 0;
  6489  00572E  927F               	bcf	127,1,c	;volatile
  6490                           
  6491                           ;color.c: 158:     LATFbits.LATF7 = 0;
  6492  005730  9E7E               	bcf	126,7,c	;volatile
  6493                           
  6494                           ;color.c: 159:     LATAbits.LATA4 = 0;
  6495  005732  9879               	bcf	121,4,c	;volatile
  6496  005734                     
  6497                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6498  005734  0E11               	movlw	17
  6499  005736  6E04               	movwf	(??_LED_OFF+1)^0,c
  6500  005738  0E3C               	movlw	60
  6501  00573A  6E03               	movwf	??_LED_OFF^0,c
  6502  00573C  0ECB               	movlw	203
  6503  00573E                     u7017:
  6504  00573E  2EE8               	decfsz	wreg,f,c
  6505  005740  D7FE               	bra	u7017
  6506  005742  2E03               	decfsz	??_LED_OFF^0,f,c
  6507  005744  D7FC               	bra	u7017
  6508  005746  2E04               	decfsz	(??_LED_OFF+1)^0,f,c
  6509  005748  D7FA               	bra	u7017
  6510  00574A  F000               	nop	
  6511  00574C  0012               	return		;funcret
  6512  00574E                     __end_of_LED_OFF:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _LED_G *****************
  6516 ;; Defined at:
  6517 ;;		line 191 in file "color.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;Total ram usage:        2 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 2
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_color_data_collection
  6542 ;;		_calibrate_white
  6543 ;;		_detect_color
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text30
  6548  00574E                     __ptext30:
  6549                           	callstack 0
  6550  00574E                     _LED_G:
  6551                           	callstack 26
  6552  00574E                     
  6553                           ;color.c: 193:     LATGbits.LATG1 = 0;
  6554  00574E  927F               	bcf	127,1,c	;volatile
  6555                           
  6556                           ;color.c: 194:     LATFbits.LATF7 = 0;
  6557  005750  9E7E               	bcf	126,7,c	;volatile
  6558                           
  6559                           ;color.c: 195:     LATAbits.LATA4 = 1;
  6560  005752  8879               	bsf	121,4,c	;volatile
  6561  005754                     
  6562                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6563  005754  0E11               	movlw	17
  6564  005756  6E04               	movwf	(??_LED_G+1)^0,c
  6565  005758  0E3C               	movlw	60
  6566  00575A  6E03               	movwf	??_LED_G^0,c
  6567  00575C  0ECB               	movlw	203
  6568  00575E                     u7027:
  6569  00575E  2EE8               	decfsz	wreg,f,c
  6570  005760  D7FE               	bra	u7027
  6571  005762  2E03               	decfsz	??_LED_G^0,f,c
  6572  005764  D7FC               	bra	u7027
  6573  005766  2E04               	decfsz	(??_LED_G+1)^0,f,c
  6574  005768  D7FA               	bra	u7027
  6575  00576A  F000               	nop	
  6576  00576C  0012               	return		;funcret
  6577  00576E                     __end_of_LED_G:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _LED_B *****************
  6581 ;; Defined at:
  6582 ;;		line 182 in file "color.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6600 ;;Total ram usage:        2 bytes
  6601 ;; Hardware stack levels used: 1
  6602 ;; Hardware stack levels required when called: 2
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_color_data_collection
  6607 ;;		_calibrate_white
  6608 ;;		_detect_color
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text31
  6613  00576E                     __ptext31:
  6614                           	callstack 0
  6615  00576E                     _LED_B:
  6616                           	callstack 26
  6617  00576E                     
  6618                           ;color.c: 184:     LATGbits.LATG1 = 0;
  6619  00576E  927F               	bcf	127,1,c	;volatile
  6620                           
  6621                           ;color.c: 185:     LATFbits.LATF7 = 1;
  6622  005770  8E7E               	bsf	126,7,c	;volatile
  6623                           
  6624                           ;color.c: 186:     LATAbits.LATA4 = 0;
  6625  005772  9879               	bcf	121,4,c	;volatile
  6626  005774                     
  6627                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6628  005774  0E11               	movlw	17
  6629  005776  6E04               	movwf	(??_LED_B+1)^0,c
  6630  005778  0E3C               	movlw	60
  6631  00577A  6E03               	movwf	??_LED_B^0,c
  6632  00577C  0ECB               	movlw	203
  6633  00577E                     u7037:
  6634  00577E  2EE8               	decfsz	wreg,f,c
  6635  005780  D7FE               	bra	u7037
  6636  005782  2E03               	decfsz	??_LED_B^0,f,c
  6637  005784  D7FC               	bra	u7037
  6638  005786  2E04               	decfsz	(??_LED_B+1)^0,f,c
  6639  005788  D7FA               	bra	u7037
  6640  00578A  F000               	nop	
  6641  00578C  0012               	return		;funcret
  6642  00578E                     __end_of_LED_B:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function _amb_light_measure *****************
  6646 ;; Defined at:
  6647 ;;		line 371 in file "color.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  6650 ;;		 -> main@rgb(8), main@amb(8), 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  CC_amb_3        2   36[BANK0 ] unsigned int 
  6653 ;;  CC_amb_2        2   34[BANK0 ] unsigned int 
  6654 ;;  CC_amb_1        2   32[BANK0 ] unsigned int 
  6655 ;;  CC_amb_ave      2   30[BANK0 ] unsigned int 
  6656 ;;  upper_bound     2   28[BANK0 ] unsigned int 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  2   26[BANK0 ] unsigned int 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;Total ram usage:       14 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 6
  6673 ;; This function calls:
  6674 ;;		_LED_C
  6675 ;;		___fldiv
  6676 ;;		___xxtofl
  6677 ;;		_color_read_Clear
  6678 ;;		_lroundf
  6679 ;;		_toggle_light
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;;		_test_function
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text32
  6687  004650                     __ptext32:
  6688                           	callstack 0
  6689  004650                     _amb_light_measure:
  6690                           	callstack 23
  6691  004650  0E00               	movlw	0
  6692  004652  0100               	movlb	0	; () banked
  6693  004654  6F83               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  6694  004656  0E00               	movlw	0
  6695  004658  6F82               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  6696  00465A  0E00               	movlw	0
  6697  00465C  6F85               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  6698  00465E  0E00               	movlw	0
  6699  004660  6F84               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  6700  004662  0E00               	movlw	0
  6701  004664  6F7D               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  6702  004666  0E00               	movlw	0
  6703  004668  6F7C               	movwf	amb_light_measure@upper_bound& (0+255),b
  6704  00466A                     
  6705                           ; BSR set to: 0
  6706                           ;color.c: 374:     toggle_light(2,2);
  6707  00466A  0E02               	movlw	2
  6708  00466C  6E03               	movwf	toggle_light@toggletime^0,c
  6709  00466E  0E02               	movlw	2
  6710  004670  ECB4  F017         	call	_toggle_light
  6711  004674                     
  6712                           ;color.c: 375:     LED_C();
  6713  004674  ECC7  F02B         	call	_LED_C	;wreg free
  6714  004678                     
  6715                           ;color.c: 376:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6716  004678  0E29               	movlw	41
  6717  00467A  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6718  00467C  0E96               	movlw	150
  6719  00467E  6E51               	movwf	??_amb_light_measure^0,c
  6720  004680  0E7F               	movlw	127
  6721  004682                     u7047:
  6722  004682  2EE8               	decfsz	wreg,f,c
  6723  004684  D7FE               	bra	u7047
  6724  004686  2E51               	decfsz	??_amb_light_measure^0,f,c
  6725  004688  D7FC               	bra	u7047
  6726  00468A  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6727  00468C  D7FA               	bra	u7047
  6728  00468E  F000               	nop	
  6729  004690                     
  6730                           ;color.c: 378:     CC_amb_1 = color_read_Clear();
  6731  004690  EC80  F029         	call	_color_read_Clear	;wreg free
  6732  004694  C007  F080         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  6733  004698  C008  F081         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  6734  00469C                     
  6735                           ;color.c: 379:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6736  00469C  0E11               	movlw	17
  6737  00469E  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6738  0046A0  0E3C               	movlw	60
  6739  0046A2  6E51               	movwf	??_amb_light_measure^0,c
  6740  0046A4  0ECB               	movlw	203
  6741  0046A6                     u7057:
  6742  0046A6  2EE8               	decfsz	wreg,f,c
  6743  0046A8  D7FE               	bra	u7057
  6744  0046AA  2E51               	decfsz	??_amb_light_measure^0,f,c
  6745  0046AC  D7FC               	bra	u7057
  6746  0046AE  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6747  0046B0  D7FA               	bra	u7057
  6748  0046B2  F000               	nop	
  6749  0046B4                     
  6750                           ;color.c: 381:     CC_amb_2 = color_read_Clear();
  6751  0046B4  EC80  F029         	call	_color_read_Clear	;wreg free
  6752  0046B8  C007  F082         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  6753  0046BC  C008  F083         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  6754  0046C0                     
  6755                           ;color.c: 382:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6756  0046C0  0E11               	movlw	17
  6757  0046C2  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6758  0046C4  0E3C               	movlw	60
  6759  0046C6  6E51               	movwf	??_amb_light_measure^0,c
  6760  0046C8  0ECB               	movlw	203
  6761  0046CA                     u7067:
  6762  0046CA  2EE8               	decfsz	wreg,f,c
  6763  0046CC  D7FE               	bra	u7067
  6764  0046CE  2E51               	decfsz	??_amb_light_measure^0,f,c
  6765  0046D0  D7FC               	bra	u7067
  6766  0046D2  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6767  0046D4  D7FA               	bra	u7067
  6768  0046D6  F000               	nop	
  6769  0046D8                     
  6770                           ;color.c: 384:     CC_amb_3 = color_read_Clear();
  6771  0046D8  EC80  F029         	call	_color_read_Clear	;wreg free
  6772  0046DC  C007  F084         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  6773  0046E0  C008  F085         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  6774  0046E4                     
  6775                           ;color.c: 385:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6776  0046E4  0E11               	movlw	17
  6777  0046E6  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6778  0046E8  0E3C               	movlw	60
  6779  0046EA  6E51               	movwf	??_amb_light_measure^0,c
  6780  0046EC  0ECB               	movlw	203
  6781  0046EE                     u7077:
  6782  0046EE  2EE8               	decfsz	wreg,f,c
  6783  0046F0  D7FE               	bra	u7077
  6784  0046F2  2E51               	decfsz	??_amb_light_measure^0,f,c
  6785  0046F4  D7FC               	bra	u7077
  6786  0046F6  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  6787  0046F8  D7FA               	bra	u7077
  6788  0046FA  F000               	nop	
  6789  0046FC                     
  6790                           ;color.c: 387:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  6791  0046FC  0100               	movlb	0	; () banked
  6792  0046FE  5182               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  6793  004700  2580               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  6794  004702  6E51               	movwf	??_amb_light_measure^0,c
  6795  004704  5183               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  6796  004706  2181               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  6797  004708  6E52               	movwf	(??_amb_light_measure+1)^0,c
  6798  00470A  5184               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  6799  00470C  2651               	addwf	??_amb_light_measure^0,f,c
  6800  00470E  5185               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  6801  004710  2252               	addwfc	(??_amb_light_measure+1)^0,f,c
  6802  004712  C051  F003         	movff	??_amb_light_measure,___xxtofl@val
  6803  004716  C052  F004         	movff	??_amb_light_measure+1,___xxtofl@val+1
  6804  00471A  6A05               	clrf	(___xxtofl@val+2)^0,c
  6805  00471C  6A06               	clrf	(___xxtofl@val+3)^0,c
  6806  00471E  0E00               	movlw	0
  6807  004720  ECEF  F01D         	call	___xxtofl
  6808  004724  C003  F011         	movff	?___xxtofl,___fldiv@b
  6809  004728  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  6810  00472C  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  6811  004730  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  6812  004734  0E00               	movlw	0
  6813  004736  6E15               	movwf	___fldiv@a^0,c
  6814  004738  0E00               	movlw	0
  6815  00473A  6E16               	movwf	(___fldiv@a+1)^0,c
  6816  00473C  0E40               	movlw	64
  6817  00473E  6E17               	movwf	(___fldiv@a+2)^0,c
  6818  004740  0E40               	movlw	64
  6819  004742  6E18               	movwf	(___fldiv@a+3)^0,c
  6820  004744  ECF9  F012         	call	___fldiv	;wreg free
  6821  004748  C011  F076         	movff	?___fldiv,lroundf@x
  6822  00474C  C012  F077         	movff	?___fldiv+1,lroundf@x+1
  6823  004750  C013  F078         	movff	?___fldiv+2,lroundf@x+2
  6824  004754  C014  F079         	movff	?___fldiv+3,lroundf@x+3
  6825  004758  ECAE  F02A         	call	_lroundf	;wreg free
  6826  00475C  C076  F07E         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  6827  004760  C077  F07F         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  6828  004764                     
  6829                           ;color.c: 389:     toggle_light(2,2);
  6830  004764  0E02               	movlw	2
  6831  004766  6E03               	movwf	toggle_light@toggletime^0,c
  6832  004768  0E02               	movlw	2
  6833  00476A  ECB4  F017         	call	_toggle_light
  6834  00476E                     
  6835                           ;color.c: 391:     return CC_amb_ave;
  6836  00476E  C07E  F07A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  6837  004772  C07F  F07B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  6838  004776  0012               	return		;funcret
  6839  004778                     __end_of_amb_light_measure:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function _toggle_light *****************
  6843 ;; Defined at:
  6844 ;;		line 29 in file "color.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  lightnumber     1    wreg     unsigned char 
  6847 ;;  toggletime      1    2[COMRAM] unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  lightnumber     1    6[COMRAM] unsigned char 
  6850 ;;  i               1    5[COMRAM] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;Total ram usage:        5 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; Hardware stack levels required when called: 2
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_calibrate_white
  6871 ;;		_amb_light_measure
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text33
  6876  002F68                     __ptext33:
  6877                           	callstack 0
  6878  002F68                     _toggle_light:
  6879                           	callstack 26
  6880                           
  6881                           ;incstack = 0
  6882                           ;toggle_light@lightnumber stored from wreg
  6883  002F68  6E07               	movwf	toggle_light@lightnumber^0,c
  6884  002F6A                     
  6885                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  6886  002F6A  0E00               	movlw	0
  6887  002F6C  6E06               	movwf	toggle_light@i^0,c
  6888                           
  6889                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  6890  002F6E  0E00               	movlw	0
  6891  002F70  6E06               	movwf	toggle_light@i^0,c
  6892  002F72  EF00  F019         	goto	l78
  6893  002F76                     l4482:
  6894                           
  6895                           ;color.c: 34:         if (lightnumber == 1){
  6896  002F76  0407               	decf	toggle_light@lightnumber^0,w,c
  6897  002F78  A4D8               	btfss	status,2,c
  6898  002F7A  EFC1  F017         	goto	u4321
  6899  002F7E  EFC3  F017         	goto	u4320
  6900  002F82                     u4321:
  6901  002F82  EFFB  F017         	goto	l4490
  6902  002F86                     u4320:
  6903  002F86                     
  6904                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  6905  002F86  A280               	btfss	128,1,c	;volatile
  6906  002F88  EFC8  F017         	goto	u4331
  6907  002F8C  EFCC  F017         	goto	u4330
  6908  002F90                     u4331:
  6909  002F90  6A04               	clrf	??_toggle_light^0,c
  6910  002F92  2A04               	incf	??_toggle_light^0,f,c
  6911  002F94  EFCD  F017         	goto	u4348
  6912  002F98                     u4330:
  6913  002F98  6A04               	clrf	??_toggle_light^0,c
  6914  002F9A                     u4348:
  6915  002F9A  4604               	rlncf	??_toggle_light^0,f,c
  6916  002F9C  5080               	movf	128,w,c	;volatile
  6917  002F9E  1804               	xorwf	??_toggle_light^0,w,c
  6918  002FA0  0BFD               	andlw	-3
  6919  002FA2  1804               	xorwf	??_toggle_light^0,w,c
  6920  002FA4  6E80               	movwf	128,c	;volatile
  6921  002FA6                     
  6922                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6923  002FA6  0E29               	movlw	41
  6924  002FA8  6E05               	movwf	(??_toggle_light+1)^0,c
  6925  002FAA  0E96               	movlw	150
  6926  002FAC  6E04               	movwf	??_toggle_light^0,c
  6927  002FAE  0E7F               	movlw	127
  6928  002FB0                     u7087:
  6929  002FB0  2EE8               	decfsz	wreg,f,c
  6930  002FB2  D7FE               	bra	u7087
  6931  002FB4  2E04               	decfsz	??_toggle_light^0,f,c
  6932  002FB6  D7FC               	bra	u7087
  6933  002FB8  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6934  002FBA  D7FA               	bra	u7087
  6935  002FBC  F000               	nop	
  6936  002FBE                     
  6937                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  6938  002FBE  A280               	btfss	128,1,c	;volatile
  6939  002FC0  EFE4  F017         	goto	u4351
  6940  002FC4  EFE8  F017         	goto	u4350
  6941  002FC8                     u4351:
  6942  002FC8  6A04               	clrf	??_toggle_light^0,c
  6943  002FCA  2A04               	incf	??_toggle_light^0,f,c
  6944  002FCC  EFE9  F017         	goto	u4368
  6945  002FD0                     u4350:
  6946  002FD0  6A04               	clrf	??_toggle_light^0,c
  6947  002FD2                     u4368:
  6948  002FD2  4604               	rlncf	??_toggle_light^0,f,c
  6949  002FD4  5080               	movf	128,w,c	;volatile
  6950  002FD6  1804               	xorwf	??_toggle_light^0,w,c
  6951  002FD8  0BFD               	andlw	-3
  6952  002FDA  1804               	xorwf	??_toggle_light^0,w,c
  6953  002FDC  6E80               	movwf	128,c	;volatile
  6954                           
  6955                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  6956  002FDE  0E29               	movlw	41
  6957  002FE0  6E05               	movwf	(??_toggle_light+1)^0,c
  6958  002FE2  0E96               	movlw	150
  6959  002FE4  6E04               	movwf	??_toggle_light^0,c
  6960  002FE6  0E7F               	movlw	127
  6961  002FE8                     u7097:
  6962  002FE8  2EE8               	decfsz	wreg,f,c
  6963  002FEA  D7FE               	bra	u7097
  6964  002FEC  2E04               	decfsz	??_toggle_light^0,f,c
  6965  002FEE  D7FC               	bra	u7097
  6966  002FF0  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  6967  002FF2  D7FA               	bra	u7097
  6968  002FF4  F000               	nop	
  6969  002FF6                     l4490:
  6970                           
  6971                           ;color.c: 40:         if (lightnumber == 2){
  6972  002FF6  0E02               	movlw	2
  6973  002FF8  1807               	xorwf	toggle_light@lightnumber^0,w,c
  6974  002FFA  A4D8               	btfss	status,2,c
  6975  002FFC  EF02  F018         	goto	u4371
  6976  003000  EF04  F018         	goto	u4370
  6977  003004                     u4371:
  6978  003004  EF3C  F018         	goto	l4498
  6979  003008                     u4370:
  6980  003008                     
  6981                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  6982  003008  A87C               	btfss	124,4,c	;volatile
  6983  00300A  EF09  F018         	goto	u4381
  6984  00300E  EF0D  F018         	goto	u4380
  6985  003012                     u4381:
  6986  003012  6A04               	clrf	??_toggle_light^0,c
  6987  003014  2A04               	incf	??_toggle_light^0,f,c
  6988  003016  EF0E  F018         	goto	u4398
  6989  00301A                     u4380:
  6990  00301A  6A04               	clrf	??_toggle_light^0,c
  6991  00301C                     u4398:
  6992  00301C  3A04               	swapf	??_toggle_light^0,f,c
  6993  00301E  507C               	movf	124,w,c	;volatile
  6994  003020  1804               	xorwf	??_toggle_light^0,w,c
  6995  003022  0BEF               	andlw	-17
  6996  003024  1804               	xorwf	??_toggle_light^0,w,c
  6997  003026  6E7C               	movwf	124,c	;volatile
  6998  003028                     
  6999                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7000  003028  0E29               	movlw	41
  7001  00302A  6E05               	movwf	(??_toggle_light+1)^0,c
  7002  00302C  0E96               	movlw	150
  7003  00302E  6E04               	movwf	??_toggle_light^0,c
  7004  003030  0E7F               	movlw	127
  7005  003032                     u7107:
  7006  003032  2EE8               	decfsz	wreg,f,c
  7007  003034  D7FE               	bra	u7107
  7008  003036  2E04               	decfsz	??_toggle_light^0,f,c
  7009  003038  D7FC               	bra	u7107
  7010  00303A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7011  00303C  D7FA               	bra	u7107
  7012  00303E  F000               	nop	
  7013  003040                     
  7014                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  7015  003040  A87C               	btfss	124,4,c	;volatile
  7016  003042  EF25  F018         	goto	u4401
  7017  003046  EF29  F018         	goto	u4400
  7018  00304A                     u4401:
  7019  00304A  6A04               	clrf	??_toggle_light^0,c
  7020  00304C  2A04               	incf	??_toggle_light^0,f,c
  7021  00304E  EF2A  F018         	goto	u4418
  7022  003052                     u4400:
  7023  003052  6A04               	clrf	??_toggle_light^0,c
  7024  003054                     u4418:
  7025  003054  3A04               	swapf	??_toggle_light^0,f,c
  7026  003056  507C               	movf	124,w,c	;volatile
  7027  003058  1804               	xorwf	??_toggle_light^0,w,c
  7028  00305A  0BEF               	andlw	-17
  7029  00305C  1804               	xorwf	??_toggle_light^0,w,c
  7030  00305E  6E7C               	movwf	124,c	;volatile
  7031                           
  7032                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7033  003060  0E29               	movlw	41
  7034  003062  6E05               	movwf	(??_toggle_light+1)^0,c
  7035  003064  0E96               	movlw	150
  7036  003066  6E04               	movwf	??_toggle_light^0,c
  7037  003068  0E7F               	movlw	127
  7038  00306A                     u7117:
  7039  00306A  2EE8               	decfsz	wreg,f,c
  7040  00306C  D7FE               	bra	u7117
  7041  00306E  2E04               	decfsz	??_toggle_light^0,f,c
  7042  003070  D7FC               	bra	u7117
  7043  003072  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7044  003074  D7FA               	bra	u7117
  7045  003076  F000               	nop	
  7046  003078                     l4498:
  7047                           
  7048                           ;color.c: 46:         if (lightnumber == 3){
  7049  003078  0E03               	movlw	3
  7050  00307A  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7051  00307C  A4D8               	btfss	status,2,c
  7052  00307E  EF43  F018         	goto	u4421
  7053  003082  EF45  F018         	goto	u4420
  7054  003086                     u4421:
  7055  003086  EF81  F018         	goto	l4506
  7056  00308A                     u4420:
  7057  00308A                     
  7058                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  7059  00308A  A67C               	btfss	124,3,c	;volatile
  7060  00308C  EF4A  F018         	goto	u4431
  7061  003090  EF4E  F018         	goto	u4430
  7062  003094                     u4431:
  7063  003094  6A04               	clrf	??_toggle_light^0,c
  7064  003096  2A04               	incf	??_toggle_light^0,f,c
  7065  003098  EF4F  F018         	goto	u4448
  7066  00309C                     u4430:
  7067  00309C  6A04               	clrf	??_toggle_light^0,c
  7068  00309E                     u4448:
  7069  00309E  4604               	rlncf	??_toggle_light^0,f,c
  7070  0030A0  4604               	rlncf	??_toggle_light^0,f,c
  7071  0030A2  4604               	rlncf	??_toggle_light^0,f,c
  7072  0030A4  507C               	movf	124,w,c	;volatile
  7073  0030A6  1804               	xorwf	??_toggle_light^0,w,c
  7074  0030A8  0BF7               	andlw	-9
  7075  0030AA  1804               	xorwf	??_toggle_light^0,w,c
  7076  0030AC  6E7C               	movwf	124,c	;volatile
  7077  0030AE                     
  7078                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7079  0030AE  0E29               	movlw	41
  7080  0030B0  6E05               	movwf	(??_toggle_light+1)^0,c
  7081  0030B2  0E96               	movlw	150
  7082  0030B4  6E04               	movwf	??_toggle_light^0,c
  7083  0030B6  0E7F               	movlw	127
  7084  0030B8                     u7127:
  7085  0030B8  2EE8               	decfsz	wreg,f,c
  7086  0030BA  D7FE               	bra	u7127
  7087  0030BC  2E04               	decfsz	??_toggle_light^0,f,c
  7088  0030BE  D7FC               	bra	u7127
  7089  0030C0  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7090  0030C2  D7FA               	bra	u7127
  7091  0030C4  F000               	nop	
  7092  0030C6                     
  7093                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  7094  0030C6  A67C               	btfss	124,3,c	;volatile
  7095  0030C8  EF68  F018         	goto	u4451
  7096  0030CC  EF6C  F018         	goto	u4450
  7097  0030D0                     u4451:
  7098  0030D0  6A04               	clrf	??_toggle_light^0,c
  7099  0030D2  2A04               	incf	??_toggle_light^0,f,c
  7100  0030D4  EF6D  F018         	goto	u4468
  7101  0030D8                     u4450:
  7102  0030D8  6A04               	clrf	??_toggle_light^0,c
  7103  0030DA                     u4468:
  7104  0030DA  4604               	rlncf	??_toggle_light^0,f,c
  7105  0030DC  4604               	rlncf	??_toggle_light^0,f,c
  7106  0030DE  4604               	rlncf	??_toggle_light^0,f,c
  7107  0030E0  507C               	movf	124,w,c	;volatile
  7108  0030E2  1804               	xorwf	??_toggle_light^0,w,c
  7109  0030E4  0BF7               	andlw	-9
  7110  0030E6  1804               	xorwf	??_toggle_light^0,w,c
  7111  0030E8  6E7C               	movwf	124,c	;volatile
  7112                           
  7113                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7114  0030EA  0E29               	movlw	41
  7115  0030EC  6E05               	movwf	(??_toggle_light+1)^0,c
  7116  0030EE  0E96               	movlw	150
  7117  0030F0  6E04               	movwf	??_toggle_light^0,c
  7118  0030F2  0E7F               	movlw	127
  7119  0030F4                     u7137:
  7120  0030F4  2EE8               	decfsz	wreg,f,c
  7121  0030F6  D7FE               	bra	u7137
  7122  0030F8  2E04               	decfsz	??_toggle_light^0,f,c
  7123  0030FA  D7FC               	bra	u7137
  7124  0030FC  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7125  0030FE  D7FA               	bra	u7137
  7126  003100  F000               	nop	
  7127  003102                     l4506:
  7128                           
  7129                           ;color.c: 52:         if (lightnumber == 4){
  7130  003102  0E04               	movlw	4
  7131  003104  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7132  003106  A4D8               	btfss	status,2,c
  7133  003108  EF88  F018         	goto	u4471
  7134  00310C  EF8A  F018         	goto	u4470
  7135  003110                     u4471:
  7136  003110  EFC0  F018         	goto	l4514
  7137  003114                     u4470:
  7138  003114                     
  7139                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  7140  003114  A07E               	btfss	126,0,c	;volatile
  7141  003116  EF8F  F018         	goto	u4481
  7142  00311A  EF93  F018         	goto	u4480
  7143  00311E                     u4481:
  7144  00311E  6A04               	clrf	??_toggle_light^0,c
  7145  003120  2A04               	incf	??_toggle_light^0,f,c
  7146  003122  EF94  F018         	goto	u4498
  7147  003126                     u4480:
  7148  003126  6A04               	clrf	??_toggle_light^0,c
  7149  003128                     u4498:
  7150  003128  507E               	movf	126,w,c	;volatile
  7151  00312A  1804               	xorwf	??_toggle_light^0,w,c
  7152  00312C  0BFE               	andlw	-2
  7153  00312E  1804               	xorwf	??_toggle_light^0,w,c
  7154  003130  6E7E               	movwf	126,c	;volatile
  7155  003132                     
  7156                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7157  003132  0E29               	movlw	41
  7158  003134  6E05               	movwf	(??_toggle_light+1)^0,c
  7159  003136  0E96               	movlw	150
  7160  003138  6E04               	movwf	??_toggle_light^0,c
  7161  00313A  0E7F               	movlw	127
  7162  00313C                     u7147:
  7163  00313C  2EE8               	decfsz	wreg,f,c
  7164  00313E  D7FE               	bra	u7147
  7165  003140  2E04               	decfsz	??_toggle_light^0,f,c
  7166  003142  D7FC               	bra	u7147
  7167  003144  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7168  003146  D7FA               	bra	u7147
  7169  003148  F000               	nop	
  7170  00314A                     
  7171                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  7172  00314A  A07E               	btfss	126,0,c	;volatile
  7173  00314C  EFAA  F018         	goto	u4501
  7174  003150  EFAE  F018         	goto	u4500
  7175  003154                     u4501:
  7176  003154  6A04               	clrf	??_toggle_light^0,c
  7177  003156  2A04               	incf	??_toggle_light^0,f,c
  7178  003158  EFAF  F018         	goto	u4518
  7179  00315C                     u4500:
  7180  00315C  6A04               	clrf	??_toggle_light^0,c
  7181  00315E                     u4518:
  7182  00315E  507E               	movf	126,w,c	;volatile
  7183  003160  1804               	xorwf	??_toggle_light^0,w,c
  7184  003162  0BFE               	andlw	-2
  7185  003164  1804               	xorwf	??_toggle_light^0,w,c
  7186  003166  6E7E               	movwf	126,c	;volatile
  7187                           
  7188                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7189  003168  0E29               	movlw	41
  7190  00316A  6E05               	movwf	(??_toggle_light+1)^0,c
  7191  00316C  0E96               	movlw	150
  7192  00316E  6E04               	movwf	??_toggle_light^0,c
  7193  003170  0E7F               	movlw	127
  7194  003172                     u7157:
  7195  003172  2EE8               	decfsz	wreg,f,c
  7196  003174  D7FE               	bra	u7157
  7197  003176  2E04               	decfsz	??_toggle_light^0,f,c
  7198  003178  D7FC               	bra	u7157
  7199  00317A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7200  00317C  D7FA               	bra	u7157
  7201  00317E  F000               	nop	
  7202  003180                     l4514:
  7203                           
  7204                           ;color.c: 58:         if (lightnumber == 3){
  7205  003180  0E03               	movlw	3
  7206  003182  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7207  003184  A4D8               	btfss	status,2,c
  7208  003186  EFC7  F018         	goto	u4521
  7209  00318A  EFC9  F018         	goto	u4520
  7210  00318E                     u4521:
  7211  00318E  EFFF  F018         	goto	l4522
  7212  003192                     u4520:
  7213  003192                     
  7214                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  7215  003192  A080               	btfss	128,0,c	;volatile
  7216  003194  EFCE  F018         	goto	u4531
  7217  003198  EFD2  F018         	goto	u4530
  7218  00319C                     u4531:
  7219  00319C  6A04               	clrf	??_toggle_light^0,c
  7220  00319E  2A04               	incf	??_toggle_light^0,f,c
  7221  0031A0  EFD3  F018         	goto	u4548
  7222  0031A4                     u4530:
  7223  0031A4  6A04               	clrf	??_toggle_light^0,c
  7224  0031A6                     u4548:
  7225  0031A6  5080               	movf	128,w,c	;volatile
  7226  0031A8  1804               	xorwf	??_toggle_light^0,w,c
  7227  0031AA  0BFE               	andlw	-2
  7228  0031AC  1804               	xorwf	??_toggle_light^0,w,c
  7229  0031AE  6E80               	movwf	128,c	;volatile
  7230  0031B0                     
  7231                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7232  0031B0  0E29               	movlw	41
  7233  0031B2  6E05               	movwf	(??_toggle_light+1)^0,c
  7234  0031B4  0E96               	movlw	150
  7235  0031B6  6E04               	movwf	??_toggle_light^0,c
  7236  0031B8  0E7F               	movlw	127
  7237  0031BA                     u7167:
  7238  0031BA  2EE8               	decfsz	wreg,f,c
  7239  0031BC  D7FE               	bra	u7167
  7240  0031BE  2E04               	decfsz	??_toggle_light^0,f,c
  7241  0031C0  D7FC               	bra	u7167
  7242  0031C2  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7243  0031C4  D7FA               	bra	u7167
  7244  0031C6  F000               	nop	
  7245  0031C8                     
  7246                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  7247  0031C8  A080               	btfss	128,0,c	;volatile
  7248  0031CA  EFE9  F018         	goto	u4551
  7249  0031CE  EFED  F018         	goto	u4550
  7250  0031D2                     u4551:
  7251  0031D2  6A04               	clrf	??_toggle_light^0,c
  7252  0031D4  2A04               	incf	??_toggle_light^0,f,c
  7253  0031D6  EFEE  F018         	goto	u4568
  7254  0031DA                     u4550:
  7255  0031DA  6A04               	clrf	??_toggle_light^0,c
  7256  0031DC                     u4568:
  7257  0031DC  5080               	movf	128,w,c	;volatile
  7258  0031DE  1804               	xorwf	??_toggle_light^0,w,c
  7259  0031E0  0BFE               	andlw	-2
  7260  0031E2  1804               	xorwf	??_toggle_light^0,w,c
  7261  0031E4  6E80               	movwf	128,c	;volatile
  7262                           
  7263                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7264  0031E6  0E29               	movlw	41
  7265  0031E8  6E05               	movwf	(??_toggle_light+1)^0,c
  7266  0031EA  0E96               	movlw	150
  7267  0031EC  6E04               	movwf	??_toggle_light^0,c
  7268  0031EE  0E7F               	movlw	127
  7269  0031F0                     u7177:
  7270  0031F0  2EE8               	decfsz	wreg,f,c
  7271  0031F2  D7FE               	bra	u7177
  7272  0031F4  2E04               	decfsz	??_toggle_light^0,f,c
  7273  0031F6  D7FC               	bra	u7177
  7274  0031F8  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7275  0031FA  D7FA               	bra	u7177
  7276  0031FC  F000               	nop	
  7277  0031FE                     l4522:
  7278                           
  7279                           ;color.c: 64:     }
  7280  0031FE  2A06               	incf	toggle_light@i^0,f,c
  7281  003200                     l78:
  7282  003200  5003               	movf	toggle_light@toggletime^0,w,c
  7283  003202  5C06               	subwf	toggle_light@i^0,w,c
  7284  003204  A0D8               	btfss	status,0,c
  7285  003206  EF07  F019         	goto	u4571
  7286  00320A  EF09  F019         	goto	u4570
  7287  00320E                     u4571:
  7288  00320E  EFBB  F017         	goto	l4482
  7289  003212                     u4570:
  7290  003212  0012               	return		;funcret
  7291  003214                     __end_of_toggle_light:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function _lroundf *****************
  7295 ;; Defined at:
  7296 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  x               4   22[BANK0 ] float 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  4   22[BANK0 ] long 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;Total ram usage:        4 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 5
  7317 ;; This function calls:
  7318 ;;		___fltol
  7319 ;;		_roundf
  7320 ;; This function is called by:
  7321 ;;		_detect_color
  7322 ;;		_amb_light_measure
  7323 ;;		_distance_measure
  7324 ;;		_check_color_reading
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text34
  7329  00555C                     __ptext34:
  7330                           	callstack 0
  7331  00555C                     _lroundf:
  7332                           	callstack 23
  7333  00555C  C076  F043         	movff	lroundf@x,roundf@x
  7334  005560  C077  F044         	movff	lroundf@x+1,roundf@x+1
  7335  005564  C078  F045         	movff	lroundf@x+2,roundf@x+2
  7336  005568  C079  F046         	movff	lroundf@x+3,roundf@x+3
  7337  00556C  EC20  F011         	call	_roundf	;wreg free
  7338  005570  C043  F072         	movff	?_roundf,___fltol@f1
  7339  005574  C044  F073         	movff	?_roundf+1,___fltol@f1+1
  7340  005578  C045  F074         	movff	?_roundf+2,___fltol@f1+2
  7341  00557C  C046  F075         	movff	?_roundf+3,___fltol@f1+3
  7342  005580  ECBC  F023         	call	___fltol	;wreg free
  7343  005584  C072  F076         	movff	?___fltol,?_lroundf
  7344  005588  C073  F077         	movff	?___fltol+1,?_lroundf+1
  7345  00558C  C074  F078         	movff	?___fltol+2,?_lroundf+2
  7346  005590  C075  F079         	movff	?___fltol+3,?_lroundf+3
  7347  005594  0012               	return		;funcret
  7348  005596                     __end_of_lroundf:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function _roundf *****************
  7352 ;; Defined at:
  7353 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  x               4   66[COMRAM] float 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  y               4   14[BANK0 ] float 
  7358 ;;  u               4   10[BANK0 ] struct .
  7359 ;;  e               2    4[BANK0 ] int 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  4   66[COMRAM] float 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;Total ram usage:       26 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 4
  7376 ;; This function calls:
  7377 ;;		___fladd
  7378 ;;		___flge
  7379 ;;		___flmul
  7380 ;;		___flneg
  7381 ;;		___flsub
  7382 ;; This function is called by:
  7383 ;;		_lroundf
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text35
  7388  002240                     __ptext35:
  7389                           	callstack 0
  7390  002240                     _roundf:
  7391                           	callstack 23
  7392  002240  C150  F06A         	movff	roundf@F527,roundf@u
  7393  002244  C151  F06B         	movff	roundf@F527+1,roundf@u+1
  7394  002248  C152  F06C         	movff	roundf@F527+2,roundf@u+2
  7395  00224C  C153  F06D         	movff	roundf@F527+3,roundf@u+3
  7396  002250  C043  F06A         	movff	roundf@x,roundf@u
  7397  002254  C044  F06B         	movff	roundf@x+1,roundf@u+1
  7398  002258  C045  F06C         	movff	roundf@x+2,roundf@u+2
  7399  00225C  C046  F06D         	movff	roundf@x+3,roundf@u+3
  7400  002260  C06A  F047         	movff	roundf@u,??_roundf
  7401  002264  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7402  002268  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7403  00226C  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7404  002270  0E18               	movlw	24
  7405  002272  EF40  F011         	goto	u6410
  7406  002276                     u6415:
  7407  002276  90D8               	bcf	status,0,c
  7408  002278  324A               	rrcf	(??_roundf+3)^0,f,c
  7409  00227A  3249               	rrcf	(??_roundf+2)^0,f,c
  7410  00227C  3248               	rrcf	(??_roundf+1)^0,f,c
  7411  00227E  3247               	rrcf	??_roundf^0,f,c
  7412  002280                     u6410:
  7413  002280  2EE8               	decfsz	wreg,f,c
  7414  002282  EF3B  F011         	goto	u6415
  7415  002286  5047               	movf	??_roundf^0,w,c
  7416  002288  0100               	movlb	0	; () banked
  7417  00228A  6F64               	movwf	roundf@e& (0+255),b
  7418  00228C  6B65               	clrf	(roundf@e+1)& (0+255),b
  7419  00228E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7420  002290  EF53  F011         	goto	u6421
  7421  002294  5165               	movf	(roundf@e+1)& (0+255),w,b
  7422  002296  E109               	bnz	u6420
  7423  002298  0E96               	movlw	150
  7424  00229A  5D64               	subwf	roundf@e& (0+255),w,b
  7425  00229C  A0D8               	btfss	status,0,c
  7426  00229E  EF53  F011         	goto	u6421
  7427  0022A2  EF55  F011         	goto	u6420
  7428  0022A6                     u6421:
  7429  0022A6  EF5F  F011         	goto	l6004
  7430  0022AA                     u6420:
  7431  0022AA                     
  7432                           ; BSR set to: 0
  7433  0022AA  C043  F043         	movff	roundf@x,?_roundf
  7434  0022AE  C044  F044         	movff	roundf@x+1,?_roundf+1
  7435  0022B2  C045  F045         	movff	roundf@x+2,?_roundf+2
  7436  0022B6  C046  F046         	movff	roundf@x+3,?_roundf+3
  7437  0022BA  EFF8  F012         	goto	l1587
  7438  0022BE                     l6004:
  7439                           
  7440                           ; BSR set to: 0
  7441  0022BE  C06A  F047         	movff	roundf@u,??_roundf
  7442  0022C2  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7443  0022C6  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7444  0022CA  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7445  0022CE  0E20               	movlw	32
  7446  0022D0  EF6F  F011         	goto	u6430
  7447  0022D4                     u6435:
  7448  0022D4  90D8               	bcf	status,0,c
  7449  0022D6  324A               	rrcf	(??_roundf+3)^0,f,c
  7450  0022D8  3249               	rrcf	(??_roundf+2)^0,f,c
  7451  0022DA  3248               	rrcf	(??_roundf+1)^0,f,c
  7452  0022DC  3247               	rrcf	??_roundf^0,f,c
  7453  0022DE                     u6430:
  7454  0022DE  2EE8               	decfsz	wreg,f,c
  7455  0022E0  EF6A  F011         	goto	u6435
  7456  0022E4  5047               	movf	??_roundf^0,w,c
  7457  0022E6  1048               	iorwf	(??_roundf+1)^0,w,c
  7458  0022E8  1049               	iorwf	(??_roundf+2)^0,w,c
  7459  0022EA  104A               	iorwf	(??_roundf+3)^0,w,c
  7460  0022EC  B4D8               	btfsc	status,2,c
  7461  0022EE  EF7B  F011         	goto	u6441
  7462  0022F2  EF7D  F011         	goto	u6440
  7463  0022F6                     u6441:
  7464  0022F6  EF8F  F011         	goto	l6008
  7465  0022FA                     u6440:
  7466  0022FA                     
  7467                           ; BSR set to: 0
  7468  0022FA  C043  F003         	movff	roundf@x,___flneg@f1
  7469  0022FE  C044  F004         	movff	roundf@x+1,___flneg@f1+1
  7470  002302  C045  F005         	movff	roundf@x+2,___flneg@f1+2
  7471  002306  C046  F006         	movff	roundf@x+3,___flneg@f1+3
  7472  00230A  ECCB  F02A         	call	___flneg	;wreg free
  7473  00230E  C003  F043         	movff	?___flneg,roundf@x
  7474  002312  C004  F044         	movff	?___flneg+1,roundf@x+1
  7475  002316  C005  F045         	movff	?___flneg+2,roundf@x+2
  7476  00231A  C006  F046         	movff	?___flneg+3,roundf@x+3
  7477  00231E                     l6008:
  7478  00231E  0100               	movlb	0	; () banked
  7479  002320  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7480  002322  EF9E  F011         	goto	u6450
  7481  002326  5165               	movf	(roundf@e+1)& (0+255),w,b
  7482  002328  E107               	bnz	u6451
  7483  00232A  0E7E               	movlw	126
  7484  00232C  5D64               	subwf	roundf@e& (0+255),w,b
  7485  00232E  B0D8               	btfsc	status,0,c
  7486  002330  EF9C  F011         	goto	u6451
  7487  002334  EF9E  F011         	goto	u6450
  7488  002338                     u6451:
  7489  002338  EFBA  F011         	goto	l6014
  7490  00233C                     u6450:
  7491  00233C                     
  7492                           ; BSR set to: 0
  7493  00233C  C06A  F02A         	movff	roundf@u,___flmul@b
  7494  002340  C06B  F02B         	movff	roundf@u+1,___flmul@b+1
  7495  002344  C06C  F02C         	movff	roundf@u+2,___flmul@b+2
  7496  002348  C06D  F02D         	movff	roundf@u+3,___flmul@b+3
  7497  00234C  0E00               	movlw	0
  7498  00234E  6E2E               	movwf	___flmul@a^0,c
  7499  002350  0E00               	movlw	0
  7500  002352  6E2F               	movwf	(___flmul@a+1)^0,c
  7501  002354  0E00               	movlw	0
  7502  002356  6E30               	movwf	(___flmul@a+2)^0,c
  7503  002358  0E00               	movlw	0
  7504  00235A  6E31               	movwf	(___flmul@a+3)^0,c
  7505  00235C  EC0B  F00F         	call	___flmul	;wreg free
  7506  002360  C02A  F043         	movff	?___flmul,?_roundf
  7507  002364  C02B  F044         	movff	?___flmul+1,?_roundf+1
  7508  002368  C02C  F045         	movff	?___flmul+2,?_roundf+2
  7509  00236C  C02D  F046         	movff	?___flmul+3,?_roundf+3
  7510  002370  EFF8  F012         	goto	l1587
  7511  002374                     l6014:
  7512                           
  7513                           ; BSR set to: 0
  7514  002374  0E00               	movlw	0
  7515  002376  6E07               	movwf	___fladd@a^0,c
  7516  002378  0E00               	movlw	0
  7517  00237A  6E08               	movwf	(___fladd@a+1)^0,c
  7518  00237C  0E00               	movlw	0
  7519  00237E  6E09               	movwf	(___fladd@a+2)^0,c
  7520  002380  0E4B               	movlw	75
  7521  002382  6E0A               	movwf	(___fladd@a+3)^0,c
  7522  002384  C043  F003         	movff	roundf@x,___fladd@b
  7523  002388  C044  F004         	movff	roundf@x+1,___fladd@b+1
  7524  00238C  C045  F005         	movff	roundf@x+2,___fladd@b+2
  7525  002390  C046  F006         	movff	roundf@x+3,___fladd@b+3
  7526  002394  ECAB  F00C         	call	___fladd	;wreg free
  7527  002398  C003  F066         	movff	?___fladd,_roundf$3267
  7528  00239C  C004  F067         	movff	?___fladd+1,_roundf$3267+1
  7529  0023A0  C005  F068         	movff	?___fladd+2,_roundf$3267+2
  7530  0023A4  C006  F069         	movff	?___fladd+3,_roundf$3267+3
  7531  0023A8  0E00               	movlw	0
  7532  0023AA  6E07               	movwf	___fladd@a^0,c
  7533  0023AC  0E00               	movlw	0
  7534  0023AE  6E08               	movwf	(___fladd@a+1)^0,c
  7535  0023B0  0E00               	movlw	0
  7536  0023B2  6E09               	movwf	(___fladd@a+2)^0,c
  7537  0023B4  0ECB               	movlw	203
  7538  0023B6  6E0A               	movwf	(___fladd@a+3)^0,c
  7539  0023B8  C066  F003         	movff	_roundf$3267,___fladd@b
  7540  0023BC  C067  F004         	movff	_roundf$3267+1,___fladd@b+1
  7541  0023C0  C068  F005         	movff	_roundf$3267+2,___fladd@b+2
  7542  0023C4  C069  F006         	movff	_roundf$3267+3,___fladd@b+3
  7543  0023C8  ECAB  F00C         	call	___fladd	;wreg free
  7544  0023CC  C003  F060         	movff	?___fladd,_roundf$3268
  7545  0023D0  C004  F061         	movff	?___fladd+1,_roundf$3268+1
  7546  0023D4  C005  F062         	movff	?___fladd+2,_roundf$3268+2
  7547  0023D8  C006  F063         	movff	?___fladd+3,_roundf$3268+3
  7548  0023DC  C060  F013         	movff	_roundf$3268,___flsub@b
  7549  0023E0  C061  F014         	movff	_roundf$3268+1,___flsub@b+1
  7550  0023E4  C062  F015         	movff	_roundf$3268+2,___flsub@b+2
  7551  0023E8  C063  F016         	movff	_roundf$3268+3,___flsub@b+3
  7552  0023EC  C043  F017         	movff	roundf@x,___flsub@a
  7553  0023F0  C044  F018         	movff	roundf@x+1,___flsub@a+1
  7554  0023F4  C045  F019         	movff	roundf@x+2,___flsub@a+2
  7555  0023F8  C046  F01A         	movff	roundf@x+3,___flsub@a+3
  7556  0023FC  ECA8  F029         	call	___flsub	;wreg free
  7557  002400  C013  F06E         	movff	?___flsub,roundf@y
  7558  002404  C014  F06F         	movff	?___flsub+1,roundf@y+1
  7559  002408  C015  F070         	movff	?___flsub+2,roundf@y+2
  7560  00240C  C016  F071         	movff	?___flsub+3,roundf@y+3
  7561  002410  0E00               	movlw	0
  7562  002412  6E03               	movwf	___flge@ff1^0,c
  7563  002414  0E00               	movlw	0
  7564  002416  6E04               	movwf	(___flge@ff1+1)^0,c
  7565  002418  0E00               	movlw	0
  7566  00241A  6E05               	movwf	(___flge@ff1+2)^0,c
  7567  00241C  0E3F               	movlw	63
  7568  00241E  6E06               	movwf	(___flge@ff1+3)^0,c
  7569  002420  C06E  F007         	movff	roundf@y,___flge@ff2
  7570  002424  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  7571  002428  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  7572  00242C  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  7573  002430  EC40  F024         	call	___flge	;wreg free
  7574  002434  B0D8               	btfsc	status,0,c
  7575  002436  EF1F  F012         	goto	u6461
  7576  00243A  EF21  F012         	goto	u6460
  7577  00243E                     u6461:
  7578  00243E  EF57  F012         	goto	l6018
  7579  002442                     u6460:
  7580  002442  C043  F007         	movff	roundf@x,___fladd@a
  7581  002446  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7582  00244A  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7583  00244E  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7584  002452  C06E  F003         	movff	roundf@y,___fladd@b
  7585  002456  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7586  00245A  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7587  00245E  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7588  002462  ECAB  F00C         	call	___fladd	;wreg free
  7589  002466  C003  F066         	movff	?___fladd,_roundf$3267
  7590  00246A  C004  F067         	movff	?___fladd+1,_roundf$3267+1
  7591  00246E  C005  F068         	movff	?___fladd+2,_roundf$3267+2
  7592  002472  C006  F069         	movff	?___fladd+3,_roundf$3267+3
  7593  002476  C066  F003         	movff	_roundf$3267,___fladd@b
  7594  00247A  C067  F004         	movff	_roundf$3267+1,___fladd@b+1
  7595  00247E  C068  F005         	movff	_roundf$3267+2,___fladd@b+2
  7596  002482  C069  F006         	movff	_roundf$3267+3,___fladd@b+3
  7597  002486  0E00               	movlw	0
  7598  002488  6E07               	movwf	___fladd@a^0,c
  7599  00248A  0E00               	movlw	0
  7600  00248C  6E08               	movwf	(___fladd@a+1)^0,c
  7601  00248E  0E80               	movlw	128
  7602  002490  6E09               	movwf	(___fladd@a+2)^0,c
  7603  002492  0EBF               	movlw	191
  7604  002494  6E0A               	movwf	(___fladd@a+3)^0,c
  7605  002496  ECAB  F00C         	call	___fladd	;wreg free
  7606  00249A  C003  F06E         	movff	?___fladd,roundf@y
  7607  00249E  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7608  0024A2  C005  F070         	movff	?___fladd+2,roundf@y+2
  7609  0024A6  C006  F071         	movff	?___fladd+3,roundf@y+3
  7610  0024AA  EFC0  F012         	goto	l6024
  7611  0024AE                     l6018:
  7612  0024AE  0E00               	movlw	0
  7613  0024B0  6E03               	movwf	___flge@ff1^0,c
  7614  0024B2  0E00               	movlw	0
  7615  0024B4  6E04               	movwf	(___flge@ff1+1)^0,c
  7616  0024B6  0E00               	movlw	0
  7617  0024B8  6E05               	movwf	(___flge@ff1+2)^0,c
  7618  0024BA  0EBF               	movlw	191
  7619  0024BC  6E06               	movwf	(___flge@ff1+3)^0,c
  7620  0024BE  C06E  F007         	movff	roundf@y,___flge@ff2
  7621  0024C2  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  7622  0024C6  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  7623  0024CA  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  7624  0024CE  EC40  F024         	call	___flge	;wreg free
  7625  0024D2  A0D8               	btfss	status,0,c
  7626  0024D4  EF6E  F012         	goto	u6471
  7627  0024D8  EF70  F012         	goto	u6470
  7628  0024DC                     u6471:
  7629  0024DC  EFA6  F012         	goto	l6022
  7630  0024E0                     u6470:
  7631  0024E0  C043  F007         	movff	roundf@x,___fladd@a
  7632  0024E4  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7633  0024E8  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7634  0024EC  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7635  0024F0  C06E  F003         	movff	roundf@y,___fladd@b
  7636  0024F4  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7637  0024F8  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7638  0024FC  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7639  002500  ECAB  F00C         	call	___fladd	;wreg free
  7640  002504  C003  F066         	movff	?___fladd,_roundf$3267
  7641  002508  C004  F067         	movff	?___fladd+1,_roundf$3267+1
  7642  00250C  C005  F068         	movff	?___fladd+2,_roundf$3267+2
  7643  002510  C006  F069         	movff	?___fladd+3,_roundf$3267+3
  7644  002514  C066  F003         	movff	_roundf$3267,___fladd@b
  7645  002518  C067  F004         	movff	_roundf$3267+1,___fladd@b+1
  7646  00251C  C068  F005         	movff	_roundf$3267+2,___fladd@b+2
  7647  002520  C069  F006         	movff	_roundf$3267+3,___fladd@b+3
  7648  002524  0E00               	movlw	0
  7649  002526  6E07               	movwf	___fladd@a^0,c
  7650  002528  0E00               	movlw	0
  7651  00252A  6E08               	movwf	(___fladd@a+1)^0,c
  7652  00252C  0E80               	movlw	128
  7653  00252E  6E09               	movwf	(___fladd@a+2)^0,c
  7654  002530  0E3F               	movlw	63
  7655  002532  6E0A               	movwf	(___fladd@a+3)^0,c
  7656  002534  ECAB  F00C         	call	___fladd	;wreg free
  7657  002538  C003  F06E         	movff	?___fladd,roundf@y
  7658  00253C  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7659  002540  C005  F070         	movff	?___fladd+2,roundf@y+2
  7660  002544  C006  F071         	movff	?___fladd+3,roundf@y+3
  7661  002548  EFC0  F012         	goto	l6024
  7662  00254C                     l6022:
  7663  00254C  C06E  F003         	movff	roundf@y,___fladd@b
  7664  002550  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  7665  002554  C070  F005         	movff	roundf@y+2,___fladd@b+2
  7666  002558  C071  F006         	movff	roundf@y+3,___fladd@b+3
  7667  00255C  C043  F007         	movff	roundf@x,___fladd@a
  7668  002560  C044  F008         	movff	roundf@x+1,___fladd@a+1
  7669  002564  C045  F009         	movff	roundf@x+2,___fladd@a+2
  7670  002568  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  7671  00256C  ECAB  F00C         	call	___fladd	;wreg free
  7672  002570  C003  F06E         	movff	?___fladd,roundf@y
  7673  002574  C004  F06F         	movff	?___fladd+1,roundf@y+1
  7674  002578  C005  F070         	movff	?___fladd+2,roundf@y+2
  7675  00257C  C006  F071         	movff	?___fladd+3,roundf@y+3
  7676  002580                     l6024:
  7677  002580  C06A  F047         	movff	roundf@u,??_roundf
  7678  002584  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7679  002588  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7680  00258C  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7681  002590  0E20               	movlw	32
  7682  002592  EFD0  F012         	goto	u6480
  7683  002596                     u6485:
  7684  002596  90D8               	bcf	status,0,c
  7685  002598  324A               	rrcf	(??_roundf+3)^0,f,c
  7686  00259A  3249               	rrcf	(??_roundf+2)^0,f,c
  7687  00259C  3248               	rrcf	(??_roundf+1)^0,f,c
  7688  00259E  3247               	rrcf	??_roundf^0,f,c
  7689  0025A0                     u6480:
  7690  0025A0  2EE8               	decfsz	wreg,f,c
  7691  0025A2  EFCB  F012         	goto	u6485
  7692  0025A6  5047               	movf	??_roundf^0,w,c
  7693  0025A8  1048               	iorwf	(??_roundf+1)^0,w,c
  7694  0025AA  1049               	iorwf	(??_roundf+2)^0,w,c
  7695  0025AC  104A               	iorwf	(??_roundf+3)^0,w,c
  7696  0025AE  B4D8               	btfsc	status,2,c
  7697  0025B0  EFDC  F012         	goto	u6491
  7698  0025B4  EFDE  F012         	goto	u6490
  7699  0025B8                     u6491:
  7700  0025B8  EFF0  F012         	goto	l6028
  7701  0025BC                     u6490:
  7702  0025BC  C06E  F003         	movff	roundf@y,___flneg@f1
  7703  0025C0  C06F  F004         	movff	roundf@y+1,___flneg@f1+1
  7704  0025C4  C070  F005         	movff	roundf@y+2,___flneg@f1+2
  7705  0025C8  C071  F006         	movff	roundf@y+3,___flneg@f1+3
  7706  0025CC  ECCB  F02A         	call	___flneg	;wreg free
  7707  0025D0  C003  F06E         	movff	?___flneg,roundf@y
  7708  0025D4  C004  F06F         	movff	?___flneg+1,roundf@y+1
  7709  0025D8  C005  F070         	movff	?___flneg+2,roundf@y+2
  7710  0025DC  C006  F071         	movff	?___flneg+3,roundf@y+3
  7711  0025E0                     l6028:
  7712  0025E0  C06E  F043         	movff	roundf@y,?_roundf
  7713  0025E4  C06F  F044         	movff	roundf@y+1,?_roundf+1
  7714  0025E8  C070  F045         	movff	roundf@y+2,?_roundf+2
  7715  0025EC  C071  F046         	movff	roundf@y+3,?_roundf+3
  7716  0025F0                     l1587:
  7717  0025F0  0012               	return		;funcret
  7718  0025F2                     __end_of_roundf:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function ___flsub *****************
  7722 ;; Defined at:
  7723 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  b               4   18[COMRAM] float 
  7726 ;;  a               4   22[COMRAM] float 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  4   18[COMRAM] float 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;Total ram usage:        8 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 3
  7745 ;; This function calls:
  7746 ;;		___fladd
  7747 ;; This function is called by:
  7748 ;;		_roundf
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text36
  7753  005350                     __ptext36:
  7754                           	callstack 0
  7755  005350                     ___flsub:
  7756                           	callstack 23
  7757  005350  0E00               	movlw	0
  7758  005352  1A17               	xorwf	___flsub@a^0,f,c
  7759  005354  0E00               	movlw	0
  7760  005356  1A18               	xorwf	(___flsub@a+1)^0,f,c
  7761  005358  0E00               	movlw	0
  7762  00535A  1A19               	xorwf	(___flsub@a+2)^0,f,c
  7763  00535C  0E80               	movlw	128
  7764  00535E  1A1A               	xorwf	(___flsub@a+3)^0,f,c
  7765  005360  C013  F003         	movff	___flsub@b,___fladd@b
  7766  005364  C014  F004         	movff	___flsub@b+1,___fladd@b+1
  7767  005368  C015  F005         	movff	___flsub@b+2,___fladd@b+2
  7768  00536C  C016  F006         	movff	___flsub@b+3,___fladd@b+3
  7769  005370  C017  F007         	movff	___flsub@a,___fladd@a
  7770  005374  C018  F008         	movff	___flsub@a+1,___fladd@a+1
  7771  005378  C019  F009         	movff	___flsub@a+2,___fladd@a+2
  7772  00537C  C01A  F00A         	movff	___flsub@a+3,___fladd@a+3
  7773  005380  ECAB  F00C         	call	___fladd	;wreg free
  7774  005384  C003  F013         	movff	?___fladd,?___flsub
  7775  005388  C004  F014         	movff	?___fladd+1,?___flsub+1
  7776  00538C  C005  F015         	movff	?___fladd+2,?___flsub+2
  7777  005390  C006  F016         	movff	?___fladd+3,?___flsub+3
  7778  005394  0012               	return		;funcret
  7779  005396                     __end_of___flsub:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function ___fladd *****************
  7783 ;; Defined at:
  7784 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  b               4    2[COMRAM] float 
  7787 ;;  a               4    6[COMRAM] float 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  grs             1   17[COMRAM] unsigned char 
  7790 ;;  bexp            1   16[COMRAM] unsigned char 
  7791 ;;  aexp            1   15[COMRAM] unsigned char 
  7792 ;;  signs           1   14[COMRAM] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  4    2[COMRAM] unsigned char 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7802 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;Total ram usage:       16 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 2
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		___flsub
  7813 ;;		_roundf
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text37
  7818  001956                     __ptext37:
  7819                           	callstack 0
  7820  001956                     ___fladd:
  7821                           	callstack 23
  7822  001956  5006               	movf	(___fladd@b+3)^0,w,c
  7823  001958  0B80               	andlw	128
  7824  00195A  6E0F               	movwf	___fladd@signs^0,c
  7825  00195C  5006               	movf	(___fladd@b+3)^0,w,c
  7826  00195E  2406               	addwf	(___fladd@b+3)^0,w,c
  7827  001960  6E11               	movwf	___fladd@bexp^0,c
  7828  001962  AE05               	btfss	(___fladd@b+2)^0,7,c
  7829  001964  EFB6  F00C         	goto	u5701
  7830  001968  EFB8  F00C         	goto	u5700
  7831  00196C                     u5701:
  7832  00196C  EFB9  F00C         	goto	l5592
  7833  001970                     u5700:
  7834  001970  8011               	bsf	___fladd@bexp^0,0,c
  7835  001972                     l5592:
  7836  001972  5011               	movf	___fladd@bexp^0,w,c
  7837  001974  B4D8               	btfsc	status,2,c
  7838  001976  EFBF  F00C         	goto	u5711
  7839  00197A  EFC1  F00C         	goto	u5710
  7840  00197E                     u5711:
  7841  00197E  EFD6  F00C         	goto	l5602
  7842  001982                     u5710:
  7843  001982  2811               	incf	___fladd@bexp^0,w,c
  7844  001984  A4D8               	btfss	status,2,c
  7845  001986  EFC7  F00C         	goto	u5721
  7846  00198A  EFC9  F00C         	goto	u5720
  7847  00198E                     u5721:
  7848  00198E  EFD1  F00C         	goto	l5598
  7849  001992                     u5720:
  7850  001992  0E00               	movlw	0
  7851  001994  6E03               	movwf	___fladd@b^0,c
  7852  001996  0E00               	movlw	0
  7853  001998  6E04               	movwf	(___fladd@b+1)^0,c
  7854  00199A  0E00               	movlw	0
  7855  00199C  6E05               	movwf	(___fladd@b+2)^0,c
  7856  00199E  0E00               	movlw	0
  7857  0019A0  6E06               	movwf	(___fladd@b+3)^0,c
  7858  0019A2                     l5598:
  7859  0019A2  8E05               	bsf	(___fladd@b+2)^0,7,c
  7860  0019A4  0E00               	movlw	0
  7861  0019A6  6E06               	movwf	(___fladd@b+3)^0,c
  7862  0019A8  EFDE  F00C         	goto	l5604
  7863  0019AC                     l5602:
  7864  0019AC  0E00               	movlw	0
  7865  0019AE  6E03               	movwf	___fladd@b^0,c
  7866  0019B0  0E00               	movlw	0
  7867  0019B2  6E04               	movwf	(___fladd@b+1)^0,c
  7868  0019B4  0E00               	movlw	0
  7869  0019B6  6E05               	movwf	(___fladd@b+2)^0,c
  7870  0019B8  0E00               	movlw	0
  7871  0019BA  6E06               	movwf	(___fladd@b+3)^0,c
  7872  0019BC                     l5604:
  7873  0019BC  500A               	movf	(___fladd@a+3)^0,w,c
  7874  0019BE  0B80               	andlw	128
  7875  0019C0  6E10               	movwf	___fladd@aexp^0,c
  7876  0019C2  500F               	movf	___fladd@signs^0,w,c
  7877  0019C4  1810               	xorwf	___fladd@aexp^0,w,c
  7878  0019C6  B4D8               	btfsc	status,2,c
  7879  0019C8  EFE8  F00C         	goto	u5731
  7880  0019CC  EFEA  F00C         	goto	u5730
  7881  0019D0                     u5731:
  7882  0019D0  EFEB  F00C         	goto	l5610
  7883  0019D4                     u5730:
  7884  0019D4  8C0F               	bsf	___fladd@signs^0,6,c
  7885  0019D6                     l5610:
  7886  0019D6  500A               	movf	(___fladd@a+3)^0,w,c
  7887  0019D8  240A               	addwf	(___fladd@a+3)^0,w,c
  7888  0019DA  6E10               	movwf	___fladd@aexp^0,c
  7889  0019DC  AE09               	btfss	(___fladd@a+2)^0,7,c
  7890  0019DE  EFF3  F00C         	goto	u5741
  7891  0019E2  EFF5  F00C         	goto	u5740
  7892  0019E6                     u5741:
  7893  0019E6  EFF6  F00C         	goto	l5616
  7894  0019EA                     u5740:
  7895  0019EA  8010               	bsf	___fladd@aexp^0,0,c
  7896  0019EC                     l5616:
  7897  0019EC  5010               	movf	___fladd@aexp^0,w,c
  7898  0019EE  B4D8               	btfsc	status,2,c
  7899  0019F0  EFFC  F00C         	goto	u5751
  7900  0019F4  EFFE  F00C         	goto	u5750
  7901  0019F8                     u5751:
  7902  0019F8  EF13  F00D         	goto	l5626
  7903  0019FC                     u5750:
  7904  0019FC  2810               	incf	___fladd@aexp^0,w,c
  7905  0019FE  A4D8               	btfss	status,2,c
  7906  001A00  EF04  F00D         	goto	u5761
  7907  001A04  EF06  F00D         	goto	u5760
  7908  001A08                     u5761:
  7909  001A08  EF0E  F00D         	goto	l5622
  7910  001A0C                     u5760:
  7911  001A0C  0E00               	movlw	0
  7912  001A0E  6E07               	movwf	___fladd@a^0,c
  7913  001A10  0E00               	movlw	0
  7914  001A12  6E08               	movwf	(___fladd@a+1)^0,c
  7915  001A14  0E00               	movlw	0
  7916  001A16  6E09               	movwf	(___fladd@a+2)^0,c
  7917  001A18  0E00               	movlw	0
  7918  001A1A  6E0A               	movwf	(___fladd@a+3)^0,c
  7919  001A1C                     l5622:
  7920  001A1C  8E09               	bsf	(___fladd@a+2)^0,7,c
  7921  001A1E  0E00               	movlw	0
  7922  001A20  6E0A               	movwf	(___fladd@a+3)^0,c
  7923  001A22  EF1B  F00D         	goto	l5628
  7924  001A26                     l5626:
  7925  001A26  0E00               	movlw	0
  7926  001A28  6E07               	movwf	___fladd@a^0,c
  7927  001A2A  0E00               	movlw	0
  7928  001A2C  6E08               	movwf	(___fladd@a+1)^0,c
  7929  001A2E  0E00               	movlw	0
  7930  001A30  6E09               	movwf	(___fladd@a+2)^0,c
  7931  001A32  0E00               	movlw	0
  7932  001A34  6E0A               	movwf	(___fladd@a+3)^0,c
  7933  001A36                     l5628:
  7934  001A36  5011               	movf	___fladd@bexp^0,w,c
  7935  001A38  5C10               	subwf	___fladd@aexp^0,w,c
  7936  001A3A  B0D8               	btfsc	status,0,c
  7937  001A3C  EF22  F00D         	goto	u5771
  7938  001A40  EF24  F00D         	goto	u5770
  7939  001A44                     u5771:
  7940  001A44  EF4B  F00D         	goto	l5664
  7941  001A48                     u5770:
  7942  001A48  AC0F               	btfss	___fladd@signs^0,6,c
  7943  001A4A  EF29  F00D         	goto	u5781
  7944  001A4E  EF2B  F00D         	goto	u5780
  7945  001A52                     u5781:
  7946  001A52  EF2D  F00D         	goto	l5634
  7947  001A56                     u5780:
  7948  001A56  0E80               	movlw	128
  7949  001A58  1A0F               	xorwf	___fladd@signs^0,f,c
  7950  001A5A                     l5634:
  7951  001A5A  C011  F012         	movff	___fladd@bexp,___fladd@grs
  7952  001A5E  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  7953  001A62  C012  F010         	movff	___fladd@grs,___fladd@aexp
  7954  001A66  C003  F012         	movff	___fladd@b,___fladd@grs
  7955  001A6A  C007  F003         	movff	___fladd@a,___fladd@b
  7956  001A6E  C012  F007         	movff	___fladd@grs,___fladd@a
  7957  001A72  C004  F012         	movff	___fladd@b+1,___fladd@grs
  7958  001A76  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  7959  001A7A  C012  F008         	movff	___fladd@grs,___fladd@a+1
  7960  001A7E  C005  F012         	movff	___fladd@b+2,___fladd@grs
  7961  001A82  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  7962  001A86  C012  F009         	movff	___fladd@grs,___fladd@a+2
  7963  001A8A  C006  F012         	movff	___fladd@b+3,___fladd@grs
  7964  001A8E  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  7965  001A92  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  7966  001A96                     l5664:
  7967  001A96  0E00               	movlw	0
  7968  001A98  6E12               	movwf	___fladd@grs^0,c
  7969  001A9A  5011               	movf	___fladd@bexp^0,w,c
  7970  001A9C  C010  F00B         	movff	___fladd@aexp,??___fladd
  7971  001AA0  6A0C               	clrf	(??___fladd+1)^0,c
  7972  001AA2  5E0B               	subwf	??___fladd^0,f,c
  7973  001AA4  0E00               	movlw	0
  7974  001AA6  5A0C               	subwfb	(??___fladd+1)^0,f,c
  7975  001AA8  BE0C               	btfsc	(??___fladd+1)^0,7,c
  7976  001AAA  EF60  F00D         	goto	u5791
  7977  001AAE  500C               	movf	(??___fladd+1)^0,w,c
  7978  001AB0  E109               	bnz	u5790
  7979  001AB2  0E1A               	movlw	26
  7980  001AB4  5C0B               	subwf	??___fladd^0,w,c
  7981  001AB6  A0D8               	btfss	status,0,c
  7982  001AB8  EF60  F00D         	goto	u5791
  7983  001ABC  EF62  F00D         	goto	u5790
  7984  001AC0                     u5791:
  7985  001AC0  EF99  F00D         	goto	l1323
  7986  001AC4                     u5790:
  7987  001AC4  5003               	movf	___fladd@b^0,w,c
  7988  001AC6  1004               	iorwf	(___fladd@b+1)^0,w,c
  7989  001AC8  1005               	iorwf	(___fladd@b+2)^0,w,c
  7990  001ACA  1006               	iorwf	(___fladd@b+3)^0,w,c
  7991  001ACC  A4D8               	btfss	status,2,c
  7992  001ACE  EF6B  F00D         	goto	u5801
  7993  001AD2  EF6E  F00D         	goto	u5800
  7994  001AD6                     u5801:
  7995  001AD6  0E01               	movlw	1
  7996  001AD8  EF6F  F00D         	goto	u5810
  7997  001ADC                     u5800:
  7998  001ADC  0E00               	movlw	0
  7999  001ADE                     u5810:
  8000  001ADE  6E12               	movwf	___fladd@grs^0,c
  8001  001AE0  0E00               	movlw	0
  8002  001AE2  6E03               	movwf	___fladd@b^0,c
  8003  001AE4  0E00               	movlw	0
  8004  001AE6  6E04               	movwf	(___fladd@b+1)^0,c
  8005  001AE8  0E00               	movlw	0
  8006  001AEA  6E05               	movwf	(___fladd@b+2)^0,c
  8007  001AEC  0E00               	movlw	0
  8008  001AEE  6E06               	movwf	(___fladd@b+3)^0,c
  8009  001AF0  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  8010  001AF4  EFA2  F00D         	goto	l1322
  8011  001AF8                     l1324:
  8012  001AF8  A012               	btfss	___fladd@grs^0,0,c
  8013  001AFA  EF81  F00D         	goto	u5821
  8014  001AFE  EF83  F00D         	goto	u5820
  8015  001B02                     u5821:
  8016  001B02  EF89  F00D         	goto	l5676
  8017  001B06                     u5820:
  8018  001B06  90D8               	bcf	status,0,c
  8019  001B08  3012               	rrcf	___fladd@grs^0,w,c
  8020  001B0A  0901               	iorlw	1
  8021  001B0C  6E12               	movwf	___fladd@grs^0,c
  8022  001B0E  EF8B  F00D         	goto	l5678
  8023  001B12                     l5676:
  8024  001B12  90D8               	bcf	status,0,c
  8025  001B14  3212               	rrcf	___fladd@grs^0,f,c
  8026  001B16                     l5678:
  8027  001B16  A003               	btfss	___fladd@b^0,0,c
  8028  001B18  EF90  F00D         	goto	u5831
  8029  001B1C  EF92  F00D         	goto	u5830
  8030  001B20                     u5831:
  8031  001B20  EF93  F00D         	goto	l5682
  8032  001B24                     u5830:
  8033  001B24  8E12               	bsf	___fladd@grs^0,7,c
  8034  001B26                     l5682:
  8035  001B26  3406               	rlcf	(___fladd@b+3)^0,w,c
  8036  001B28  3206               	rrcf	(___fladd@b+3)^0,f,c
  8037  001B2A  3205               	rrcf	(___fladd@b+2)^0,f,c
  8038  001B2C  3204               	rrcf	(___fladd@b+1)^0,f,c
  8039  001B2E  3203               	rrcf	___fladd@b^0,f,c
  8040  001B30  2A11               	incf	___fladd@bexp^0,f,c
  8041  001B32                     l1323:
  8042  001B32  5010               	movf	___fladd@aexp^0,w,c
  8043  001B34  5C11               	subwf	___fladd@bexp^0,w,c
  8044  001B36  A0D8               	btfss	status,0,c
  8045  001B38  EFA0  F00D         	goto	u5841
  8046  001B3C  EFA2  F00D         	goto	u5840
  8047  001B40                     u5841:
  8048  001B40  EF7C  F00D         	goto	l1324
  8049  001B44                     u5840:
  8050  001B44                     l1322:
  8051  001B44  BC0F               	btfsc	___fladd@signs^0,6,c
  8052  001B46  EFA7  F00D         	goto	u5851
  8053  001B4A  EFA9  F00D         	goto	u5850
  8054  001B4E                     u5851:
  8055  001B4E  EFE9  F00D         	goto	l5710
  8056  001B52                     u5850:
  8057  001B52  5011               	movf	___fladd@bexp^0,w,c
  8058  001B54  A4D8               	btfss	status,2,c
  8059  001B56  EFAF  F00D         	goto	u5861
  8060  001B5A  EFB1  F00D         	goto	u5860
  8061  001B5E                     u5861:
  8062  001B5E  EFBB  F00D         	goto	l5692
  8063  001B62                     u5860:
  8064  001B62  0E00               	movlw	0
  8065  001B64  6E03               	movwf	?___fladd^0,c
  8066  001B66  0E00               	movlw	0
  8067  001B68  6E04               	movwf	(?___fladd+1)^0,c
  8068  001B6A  0E00               	movlw	0
  8069  001B6C  6E05               	movwf	(?___fladd+2)^0,c
  8070  001B6E  0E00               	movlw	0
  8071  001B70  6E06               	movwf	(?___fladd+3)^0,c
  8072  001B72  EF0A  F00F         	goto	l1331
  8073  001B76                     l5692:
  8074  001B76  5007               	movf	___fladd@a^0,w,c
  8075  001B78  2603               	addwf	___fladd@b^0,f,c
  8076  001B7A  5008               	movf	(___fladd@a+1)^0,w,c
  8077  001B7C  2204               	addwfc	(___fladd@b+1)^0,f,c
  8078  001B7E  5009               	movf	(___fladd@a+2)^0,w,c
  8079  001B80  2205               	addwfc	(___fladd@b+2)^0,f,c
  8080  001B82  500A               	movf	(___fladd@a+3)^0,w,c
  8081  001B84  2206               	addwfc	(___fladd@b+3)^0,f,c
  8082  001B86  A006               	btfss	(___fladd@b+3)^0,0,c
  8083  001B88  EFC8  F00D         	goto	u5871
  8084  001B8C  EFCA  F00D         	goto	u5870
  8085  001B90                     u5871:
  8086  001B90  EF76  F00E         	goto	l5746
  8087  001B94                     u5870:
  8088  001B94  A012               	btfss	___fladd@grs^0,0,c
  8089  001B96  EFCF  F00D         	goto	u5881
  8090  001B9A  EFD1  F00D         	goto	u5880
  8091  001B9E                     u5881:
  8092  001B9E  EFD7  F00D         	goto	l5700
  8093  001BA2                     u5880:
  8094  001BA2  90D8               	bcf	status,0,c
  8095  001BA4  3012               	rrcf	___fladd@grs^0,w,c
  8096  001BA6  0901               	iorlw	1
  8097  001BA8  6E12               	movwf	___fladd@grs^0,c
  8098  001BAA  EFD9  F00D         	goto	l5702
  8099  001BAE                     l5700:
  8100  001BAE  90D8               	bcf	status,0,c
  8101  001BB0  3212               	rrcf	___fladd@grs^0,f,c
  8102  001BB2                     l5702:
  8103  001BB2  A003               	btfss	___fladd@b^0,0,c
  8104  001BB4  EFDE  F00D         	goto	u5891
  8105  001BB8  EFE0  F00D         	goto	u5890
  8106  001BBC                     u5891:
  8107  001BBC  EFE1  F00D         	goto	l5706
  8108  001BC0                     u5890:
  8109  001BC0  8E12               	bsf	___fladd@grs^0,7,c
  8110  001BC2                     l5706:
  8111  001BC2  3406               	rlcf	(___fladd@b+3)^0,w,c
  8112  001BC4  3206               	rrcf	(___fladd@b+3)^0,f,c
  8113  001BC6  3205               	rrcf	(___fladd@b+2)^0,f,c
  8114  001BC8  3204               	rrcf	(___fladd@b+1)^0,f,c
  8115  001BCA  3203               	rrcf	___fladd@b^0,f,c
  8116  001BCC  2A11               	incf	___fladd@bexp^0,f,c
  8117  001BCE  EF76  F00E         	goto	l5746
  8118  001BD2                     l5710:
  8119  001BD2  5007               	movf	___fladd@a^0,w,c
  8120  001BD4  5C03               	subwf	___fladd@b^0,w,c
  8121  001BD6  5008               	movf	(___fladd@a+1)^0,w,c
  8122  001BD8  5804               	subwfb	(___fladd@b+1)^0,w,c
  8123  001BDA  5009               	movf	(___fladd@a+2)^0,w,c
  8124  001BDC  5805               	subwfb	(___fladd@b+2)^0,w,c
  8125  001BDE  5006               	movf	(___fladd@b+3)^0,w,c
  8126  001BE0  0A80               	xorlw	128
  8127  001BE2  6E0B               	movwf	??___fladd^0,c
  8128  001BE4  500A               	movf	(___fladd@a+3)^0,w,c
  8129  001BE6  0A80               	xorlw	128
  8130  001BE8  580B               	subwfb	??___fladd^0,w,c
  8131  001BEA  B0D8               	btfsc	status,0,c
  8132  001BEC  EFFA  F00D         	goto	u5901
  8133  001BF0  EFFC  F00D         	goto	u5900
  8134  001BF4                     u5901:
  8135  001BF4  EF27  F00E         	goto	l5720
  8136  001BF8                     u5900:
  8137  001BF8  5003               	movf	___fladd@b^0,w,c
  8138  001BFA  5C07               	subwf	___fladd@a^0,w,c
  8139  001BFC  6E0B               	movwf	??___fladd^0,c
  8140  001BFE  5004               	movf	(___fladd@b+1)^0,w,c
  8141  001C00  5808               	subwfb	(___fladd@a+1)^0,w,c
  8142  001C02  6E0C               	movwf	(??___fladd+1)^0,c
  8143  001C04  5005               	movf	(___fladd@b+2)^0,w,c
  8144  001C06  5809               	subwfb	(___fladd@a+2)^0,w,c
  8145  001C08  6E0D               	movwf	(??___fladd+2)^0,c
  8146  001C0A  5006               	movf	(___fladd@b+3)^0,w,c
  8147  001C0C  580A               	subwfb	(___fladd@a+3)^0,w,c
  8148  001C0E  6E0E               	movwf	(??___fladd+3)^0,c
  8149  001C10  0EFF               	movlw	255
  8150  001C12  240B               	addwf	??___fladd^0,w,c
  8151  001C14  6E03               	movwf	___fladd@b^0,c
  8152  001C16  0EFF               	movlw	255
  8153  001C18  200C               	addwfc	(??___fladd+1)^0,w,c
  8154  001C1A  6E04               	movwf	(___fladd@b+1)^0,c
  8155  001C1C  0EFF               	movlw	255
  8156  001C1E  200D               	addwfc	(??___fladd+2)^0,w,c
  8157  001C20  6E05               	movwf	(___fladd@b+2)^0,c
  8158  001C22  0EFF               	movlw	255
  8159  001C24  200E               	addwfc	(??___fladd+3)^0,w,c
  8160  001C26  6E06               	movwf	(___fladd@b+3)^0,c
  8161  001C28  0E80               	movlw	128
  8162  001C2A  1A0F               	xorwf	___fladd@signs^0,f,c
  8163  001C2C  6C12               	negf	___fladd@grs^0,c
  8164  001C2E  5012               	movf	___fladd@grs^0,w,c
  8165  001C30  A4D8               	btfss	status,2,c
  8166  001C32  EF1D  F00E         	goto	u5911
  8167  001C36  EF1F  F00E         	goto	u5910
  8168  001C3A                     u5911:
  8169  001C3A  EF2F  F00E         	goto	l1339
  8170  001C3E                     u5910:
  8171  001C3E  0E01               	movlw	1
  8172  001C40  2603               	addwf	___fladd@b^0,f,c
  8173  001C42  0E00               	movlw	0
  8174  001C44  2204               	addwfc	(___fladd@b+1)^0,f,c
  8175  001C46  2205               	addwfc	(___fladd@b+2)^0,f,c
  8176  001C48  2206               	addwfc	(___fladd@b+3)^0,f,c
  8177  001C4A  EF2F  F00E         	goto	l1339
  8178  001C4E                     l5720:
  8179  001C4E  5007               	movf	___fladd@a^0,w,c
  8180  001C50  5E03               	subwf	___fladd@b^0,f,c
  8181  001C52  5008               	movf	(___fladd@a+1)^0,w,c
  8182  001C54  5A04               	subwfb	(___fladd@b+1)^0,f,c
  8183  001C56  5009               	movf	(___fladd@a+2)^0,w,c
  8184  001C58  5A05               	subwfb	(___fladd@b+2)^0,f,c
  8185  001C5A  500A               	movf	(___fladd@a+3)^0,w,c
  8186  001C5C  5A06               	subwfb	(___fladd@b+3)^0,f,c
  8187  001C5E                     l1339:
  8188  001C5E  5003               	movf	___fladd@b^0,w,c
  8189  001C60  1004               	iorwf	(___fladd@b+1)^0,w,c
  8190  001C62  1005               	iorwf	(___fladd@b+2)^0,w,c
  8191  001C64  1006               	iorwf	(___fladd@b+3)^0,w,c
  8192  001C66  A4D8               	btfss	status,2,c
  8193  001C68  EF38  F00E         	goto	u5921
  8194  001C6C  EF3A  F00E         	goto	u5920
  8195  001C70                     u5921:
  8196  001C70  EF6F  F00E         	goto	l5744
  8197  001C74                     u5920:
  8198  001C74  5012               	movf	___fladd@grs^0,w,c
  8199  001C76  A4D8               	btfss	status,2,c
  8200  001C78  EF40  F00E         	goto	u5931
  8201  001C7C  EF42  F00E         	goto	u5930
  8202  001C80                     u5931:
  8203  001C80  EF6F  F00E         	goto	l5744
  8204  001C84                     u5930:
  8205  001C84  0E00               	movlw	0
  8206  001C86  6E03               	movwf	?___fladd^0,c
  8207  001C88  0E00               	movlw	0
  8208  001C8A  6E04               	movwf	(?___fladd+1)^0,c
  8209  001C8C  0E00               	movlw	0
  8210  001C8E  6E05               	movwf	(?___fladd+2)^0,c
  8211  001C90  0E00               	movlw	0
  8212  001C92  6E06               	movwf	(?___fladd+3)^0,c
  8213  001C94  EF0A  F00F         	goto	l1331
  8214  001C98                     l5728:
  8215  001C98  90D8               	bcf	status,0,c
  8216  001C9A  3603               	rlcf	___fladd@b^0,f,c
  8217  001C9C  3604               	rlcf	(___fladd@b+1)^0,f,c
  8218  001C9E  3605               	rlcf	(___fladd@b+2)^0,f,c
  8219  001CA0  3606               	rlcf	(___fladd@b+3)^0,f,c
  8220  001CA2  AE12               	btfss	___fladd@grs^0,7,c
  8221  001CA4  EF56  F00E         	goto	u5941
  8222  001CA8  EF58  F00E         	goto	u5940
  8223  001CAC                     u5941:
  8224  001CAC  EF59  F00E         	goto	l5734
  8225  001CB0                     u5940:
  8226  001CB0  8003               	bsf	___fladd@b^0,0,c
  8227  001CB2                     l5734:
  8228  001CB2  A012               	btfss	___fladd@grs^0,0,c
  8229  001CB4  EF5E  F00E         	goto	u5951
  8230  001CB8  EF60  F00E         	goto	u5950
  8231  001CBC                     u5951:
  8232  001CBC  EF64  F00E         	goto	l5738
  8233  001CC0                     u5950:
  8234  001CC0  80D8               	bsf	status,0,c
  8235  001CC2  3612               	rlcf	___fladd@grs^0,f,c
  8236  001CC4  EF66  F00E         	goto	l5740
  8237  001CC8                     l5738:
  8238  001CC8  90D8               	bcf	status,0,c
  8239  001CCA  3612               	rlcf	___fladd@grs^0,f,c
  8240  001CCC                     l5740:
  8241  001CCC  5011               	movf	___fladd@bexp^0,w,c
  8242  001CCE  B4D8               	btfsc	status,2,c
  8243  001CD0  EF6C  F00E         	goto	u5961
  8244  001CD4  EF6E  F00E         	goto	u5960
  8245  001CD8                     u5961:
  8246  001CD8  EF6F  F00E         	goto	l5744
  8247  001CDC                     u5960:
  8248  001CDC  0611               	decf	___fladd@bexp^0,f,c
  8249  001CDE                     l5744:
  8250  001CDE  AE05               	btfss	(___fladd@b+2)^0,7,c
  8251  001CE0  EF74  F00E         	goto	u5971
  8252  001CE4  EF76  F00E         	goto	u5970
  8253  001CE8                     u5971:
  8254  001CE8  EF4C  F00E         	goto	l5728
  8255  001CEC                     u5970:
  8256  001CEC                     l5746:
  8257  001CEC  0E00               	movlw	0
  8258  001CEE  6E10               	movwf	___fladd@aexp^0,c
  8259  001CF0  AE12               	btfss	___fladd@grs^0,7,c
  8260  001CF2  EF7D  F00E         	goto	u5981
  8261  001CF6  EF7F  F00E         	goto	u5980
  8262  001CFA                     u5981:
  8263  001CFA  EF97  F00E         	goto	l1348
  8264  001CFE                     u5980:
  8265  001CFE  C012  F00B         	movff	___fladd@grs,??___fladd
  8266  001D02  0E7F               	movlw	127
  8267  001D04  160B               	andwf	??___fladd^0,f,c
  8268  001D06  B4D8               	btfsc	status,2,c
  8269  001D08  EF88  F00E         	goto	u5991
  8270  001D0C  EF8A  F00E         	goto	u5990
  8271  001D10                     u5991:
  8272  001D10  EF8E  F00E         	goto	l1349
  8273  001D14                     u5990:
  8274  001D14                     l5752:
  8275  001D14  0E01               	movlw	1
  8276  001D16  6E10               	movwf	___fladd@aexp^0,c
  8277  001D18  EF97  F00E         	goto	l1348
  8278  001D1C                     l1349:
  8279  001D1C  A003               	btfss	___fladd@b^0,0,c
  8280  001D1E  EF93  F00E         	goto	u6001
  8281  001D22  EF95  F00E         	goto	u6000
  8282  001D26                     u6001:
  8283  001D26  EF97  F00E         	goto	l1348
  8284  001D2A                     u6000:
  8285  001D2A  EF8A  F00E         	goto	l5752
  8286  001D2E                     l1348:
  8287  001D2E  5010               	movf	___fladd@aexp^0,w,c
  8288  001D30  B4D8               	btfsc	status,2,c
  8289  001D32  EF9D  F00E         	goto	u6011
  8290  001D36  EF9F  F00E         	goto	u6010
  8291  001D3A                     u6011:
  8292  001D3A  EFCA  F00E         	goto	l5764
  8293  001D3E                     u6010:
  8294  001D3E  0E01               	movlw	1
  8295  001D40  2603               	addwf	___fladd@b^0,f,c
  8296  001D42  0E00               	movlw	0
  8297  001D44  2204               	addwfc	(___fladd@b+1)^0,f,c
  8298  001D46  2205               	addwfc	(___fladd@b+2)^0,f,c
  8299  001D48  2206               	addwfc	(___fladd@b+3)^0,f,c
  8300  001D4A  A006               	btfss	(___fladd@b+3)^0,0,c
  8301  001D4C  EFAA  F00E         	goto	u6021
  8302  001D50  EFAC  F00E         	goto	u6020
  8303  001D54                     u6021:
  8304  001D54  EFCA  F00E         	goto	l5764
  8305  001D58                     u6020:
  8306  001D58  C003  F00B         	movff	___fladd@b,??___fladd
  8307  001D5C  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  8308  001D60  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  8309  001D64  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  8310  001D68  340E               	rlcf	(??___fladd+3)^0,w,c
  8311  001D6A  320E               	rrcf	(??___fladd+3)^0,f,c
  8312  001D6C  320D               	rrcf	(??___fladd+2)^0,f,c
  8313  001D6E  320C               	rrcf	(??___fladd+1)^0,f,c
  8314  001D70  320B               	rrcf	??___fladd^0,f,c
  8315  001D72  C00B  F003         	movff	??___fladd,___fladd@b
  8316  001D76  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  8317  001D7A  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  8318  001D7E  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  8319  001D82  2811               	incf	___fladd@bexp^0,w,c
  8320  001D84  B4D8               	btfsc	status,2,c
  8321  001D86  EFC7  F00E         	goto	u6031
  8322  001D8A  EFC9  F00E         	goto	u6030
  8323  001D8E                     u6031:
  8324  001D8E  EFCA  F00E         	goto	l5764
  8325  001D92                     u6030:
  8326  001D92  2A11               	incf	___fladd@bexp^0,f,c
  8327  001D94                     l5764:
  8328  001D94  2811               	incf	___fladd@bexp^0,w,c
  8329  001D96  B4D8               	btfsc	status,2,c
  8330  001D98  EFD0  F00E         	goto	u6041
  8331  001D9C  EFD2  F00E         	goto	u6040
  8332  001DA0                     u6041:
  8333  001DA0  EFDA  F00E         	goto	l5768
  8334  001DA4                     u6040:
  8335  001DA4  5011               	movf	___fladd@bexp^0,w,c
  8336  001DA6  A4D8               	btfss	status,2,c
  8337  001DA8  EFD8  F00E         	goto	u6051
  8338  001DAC  EFDA  F00E         	goto	u6050
  8339  001DB0                     u6051:
  8340  001DB0  EFEC  F00E         	goto	l5772
  8341  001DB4                     u6050:
  8342  001DB4                     l5768:
  8343  001DB4  0E00               	movlw	0
  8344  001DB6  6E03               	movwf	___fladd@b^0,c
  8345  001DB8  0E00               	movlw	0
  8346  001DBA  6E04               	movwf	(___fladd@b+1)^0,c
  8347  001DBC  0E00               	movlw	0
  8348  001DBE  6E05               	movwf	(___fladd@b+2)^0,c
  8349  001DC0  0E00               	movlw	0
  8350  001DC2  6E06               	movwf	(___fladd@b+3)^0,c
  8351  001DC4  5011               	movf	___fladd@bexp^0,w,c
  8352  001DC6  A4D8               	btfss	status,2,c
  8353  001DC8  EFE8  F00E         	goto	u6061
  8354  001DCC  EFEA  F00E         	goto	u6060
  8355  001DD0                     u6061:
  8356  001DD0  EFEC  F00E         	goto	l5772
  8357  001DD4                     u6060:
  8358  001DD4  0E00               	movlw	0
  8359  001DD6  6E0F               	movwf	___fladd@signs^0,c
  8360  001DD8                     l5772:
  8361  001DD8  A011               	btfss	___fladd@bexp^0,0,c
  8362  001DDA  EFF1  F00E         	goto	u6071
  8363  001DDE  EFF3  F00E         	goto	u6070
  8364  001DE2                     u6071:
  8365  001DE2  EFF6  F00E         	goto	l5776
  8366  001DE6                     u6070:
  8367  001DE6  8E05               	bsf	(___fladd@b+2)^0,7,c
  8368  001DE8  EFF7  F00E         	goto	l5778
  8369  001DEC                     l5776:
  8370  001DEC  9E05               	bcf	(___fladd@b+2)^0,7,c
  8371  001DEE                     l5778:
  8372  001DEE  90D8               	bcf	status,0,c
  8373  001DF0  3011               	rrcf	___fladd@bexp^0,w,c
  8374  001DF2  6E06               	movwf	(___fladd@b+3)^0,c
  8375  001DF4  AE0F               	btfss	___fladd@signs^0,7,c
  8376  001DF6  EFFF  F00E         	goto	u6081
  8377  001DFA  EF01  F00F         	goto	u6080
  8378  001DFE                     u6081:
  8379  001DFE  EF02  F00F         	goto	l5784
  8380  001E02                     u6080:
  8381  001E02  8E06               	bsf	(___fladd@b+3)^0,7,c
  8382  001E04                     l5784:
  8383  001E04  C003  F003         	movff	___fladd@b,?___fladd
  8384  001E08  C004  F004         	movff	___fladd@b+1,?___fladd+1
  8385  001E0C  C005  F005         	movff	___fladd@b+2,?___fladd+2
  8386  001E10  C006  F006         	movff	___fladd@b+3,?___fladd+3
  8387  001E14                     l1331:
  8388  001E14  0012               	return		;funcret
  8389  001E16                     __end_of___fladd:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function ___flneg *****************
  8393 ;; Defined at:
  8394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  f1              4    2[COMRAM] unsigned char 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  4    2[COMRAM] unsigned char 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;Total ram usage:        4 bytes
  8413 ;; Hardware stack levels used: 1
  8414 ;; Hardware stack levels required when called: 2
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_roundf
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text38
  8423  005596                     __ptext38:
  8424                           	callstack 0
  8425  005596                     ___flneg:
  8426                           	callstack 24
  8427  005596  5003               	movf	___flneg@f1^0,w,c
  8428  005598  1004               	iorwf	(___flneg@f1+1)^0,w,c
  8429  00559A  1005               	iorwf	(___flneg@f1+2)^0,w,c
  8430  00559C  1006               	iorwf	(___flneg@f1+3)^0,w,c
  8431  00559E  B4D8               	btfsc	status,2,c
  8432  0055A0  EFD4  F02A         	goto	u6331
  8433  0055A4  EFD6  F02A         	goto	u6330
  8434  0055A8                     u6331:
  8435  0055A8  EFDE  F02A         	goto	l5950
  8436  0055AC                     u6330:
  8437  0055AC  0E00               	movlw	0
  8438  0055AE  1A03               	xorwf	___flneg@f1^0,f,c
  8439  0055B0  0E00               	movlw	0
  8440  0055B2  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  8441  0055B4  0E00               	movlw	0
  8442  0055B6  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  8443  0055B8  0E80               	movlw	128
  8444  0055BA  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  8445  0055BC                     l5950:
  8446  0055BC  C003  F003         	movff	___flneg@f1,?___flneg
  8447  0055C0  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  8448  0055C4  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  8449  0055C8  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  8450  0055CC  0012               	return		;funcret
  8451  0055CE                     __end_of___flneg:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function ___flmul *****************
  8455 ;; Defined at:
  8456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  b               4   41[COMRAM] unsigned char 
  8459 ;;  a               4   45[COMRAM] unsigned char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  prod            4   60[COMRAM] struct .
  8462 ;;  grs             4   55[COMRAM] unsigned long 
  8463 ;;  temp            2   64[COMRAM] struct .
  8464 ;;  bexp            1   59[COMRAM] unsigned char 
  8465 ;;  aexp            1   54[COMRAM] unsigned char 
  8466 ;;  sign            1   53[COMRAM] unsigned char 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  4   41[COMRAM] unsigned char 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0, prodl, prodh
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8476 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;Total ram usage:       25 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 2
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_detect_color
  8487 ;;		_distance_measure
  8488 ;;		_roundf
  8489 ;;		_check_color_reading
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text39
  8494  001E16                     __ptext39:
  8495                           	callstack 0
  8496  001E16                     ___flmul:
  8497                           	callstack 24
  8498  001E16  502D               	movf	(___flmul@b+3)^0,w,c
  8499  001E18  0B80               	andlw	128
  8500  001E1A  6E36               	movwf	___flmul@sign^0,c
  8501  001E1C  502D               	movf	(___flmul@b+3)^0,w,c
  8502  001E1E  242D               	addwf	(___flmul@b+3)^0,w,c
  8503  001E20  6E3C               	movwf	___flmul@bexp^0,c
  8504  001E22  AE2C               	btfss	(___flmul@b+2)^0,7,c
  8505  001E24  EF16  F00F         	goto	u6091
  8506  001E28  EF18  F00F         	goto	u6090
  8507  001E2C                     u6091:
  8508  001E2C  EF19  F00F         	goto	l5794
  8509  001E30                     u6090:
  8510  001E30  803C               	bsf	___flmul@bexp^0,0,c
  8511  001E32                     l5794:
  8512  001E32  503C               	movf	___flmul@bexp^0,w,c
  8513  001E34  B4D8               	btfsc	status,2,c
  8514  001E36  EF1F  F00F         	goto	u6101
  8515  001E3A  EF21  F00F         	goto	u6100
  8516  001E3E                     u6101:
  8517  001E3E  EF34  F00F         	goto	l5802
  8518  001E42                     u6100:
  8519  001E42  283C               	incf	___flmul@bexp^0,w,c
  8520  001E44  A4D8               	btfss	status,2,c
  8521  001E46  EF27  F00F         	goto	u6111
  8522  001E4A  EF29  F00F         	goto	u6110
  8523  001E4E                     u6111:
  8524  001E4E  EF31  F00F         	goto	l5800
  8525  001E52                     u6110:
  8526  001E52  0E00               	movlw	0
  8527  001E54  6E2A               	movwf	___flmul@b^0,c
  8528  001E56  0E00               	movlw	0
  8529  001E58  6E2B               	movwf	(___flmul@b+1)^0,c
  8530  001E5A  0E00               	movlw	0
  8531  001E5C  6E2C               	movwf	(___flmul@b+2)^0,c
  8532  001E5E  0E00               	movlw	0
  8533  001E60  6E2D               	movwf	(___flmul@b+3)^0,c
  8534  001E62                     l5800:
  8535  001E62  8E2C               	bsf	(___flmul@b+2)^0,7,c
  8536  001E64  EF3C  F00F         	goto	l5804
  8537  001E68                     l5802:
  8538  001E68  0E00               	movlw	0
  8539  001E6A  6E2A               	movwf	___flmul@b^0,c
  8540  001E6C  0E00               	movlw	0
  8541  001E6E  6E2B               	movwf	(___flmul@b+1)^0,c
  8542  001E70  0E00               	movlw	0
  8543  001E72  6E2C               	movwf	(___flmul@b+2)^0,c
  8544  001E74  0E00               	movlw	0
  8545  001E76  6E2D               	movwf	(___flmul@b+3)^0,c
  8546  001E78                     l5804:
  8547  001E78  5031               	movf	(___flmul@a+3)^0,w,c
  8548  001E7A  0B80               	andlw	128
  8549  001E7C  1A36               	xorwf	___flmul@sign^0,f,c
  8550  001E7E  5031               	movf	(___flmul@a+3)^0,w,c
  8551  001E80  2431               	addwf	(___flmul@a+3)^0,w,c
  8552  001E82  6E37               	movwf	___flmul@aexp^0,c
  8553  001E84  AE30               	btfss	(___flmul@a+2)^0,7,c
  8554  001E86  EF47  F00F         	goto	u6121
  8555  001E8A  EF49  F00F         	goto	u6120
  8556  001E8E                     u6121:
  8557  001E8E  EF4A  F00F         	goto	l5812
  8558  001E92                     u6120:
  8559  001E92  8037               	bsf	___flmul@aexp^0,0,c
  8560  001E94                     l5812:
  8561  001E94  5037               	movf	___flmul@aexp^0,w,c
  8562  001E96  B4D8               	btfsc	status,2,c
  8563  001E98  EF50  F00F         	goto	u6131
  8564  001E9C  EF52  F00F         	goto	u6130
  8565  001EA0                     u6131:
  8566  001EA0  EF65  F00F         	goto	l5820
  8567  001EA4                     u6130:
  8568  001EA4  2837               	incf	___flmul@aexp^0,w,c
  8569  001EA6  A4D8               	btfss	status,2,c
  8570  001EA8  EF58  F00F         	goto	u6141
  8571  001EAC  EF5A  F00F         	goto	u6140
  8572  001EB0                     u6141:
  8573  001EB0  EF62  F00F         	goto	l5818
  8574  001EB4                     u6140:
  8575  001EB4  0E00               	movlw	0
  8576  001EB6  6E2E               	movwf	___flmul@a^0,c
  8577  001EB8  0E00               	movlw	0
  8578  001EBA  6E2F               	movwf	(___flmul@a+1)^0,c
  8579  001EBC  0E00               	movlw	0
  8580  001EBE  6E30               	movwf	(___flmul@a+2)^0,c
  8581  001EC0  0E00               	movlw	0
  8582  001EC2  6E31               	movwf	(___flmul@a+3)^0,c
  8583  001EC4                     l5818:
  8584  001EC4  8E30               	bsf	(___flmul@a+2)^0,7,c
  8585  001EC6  EF6D  F00F         	goto	l1408
  8586  001ECA                     l5820:
  8587  001ECA  0E00               	movlw	0
  8588  001ECC  6E2E               	movwf	___flmul@a^0,c
  8589  001ECE  0E00               	movlw	0
  8590  001ED0  6E2F               	movwf	(___flmul@a+1)^0,c
  8591  001ED2  0E00               	movlw	0
  8592  001ED4  6E30               	movwf	(___flmul@a+2)^0,c
  8593  001ED6  0E00               	movlw	0
  8594  001ED8  6E31               	movwf	(___flmul@a+3)^0,c
  8595  001EDA                     l1408:
  8596  001EDA  5037               	movf	___flmul@aexp^0,w,c
  8597  001EDC  B4D8               	btfsc	status,2,c
  8598  001EDE  EF73  F00F         	goto	u6151
  8599  001EE2  EF75  F00F         	goto	u6150
  8600  001EE6                     u6151:
  8601  001EE6  EF7D  F00F         	goto	l5824
  8602  001EEA                     u6150:
  8603  001EEA  503C               	movf	___flmul@bexp^0,w,c
  8604  001EEC  A4D8               	btfss	status,2,c
  8605  001EEE  EF7B  F00F         	goto	u6161
  8606  001EF2  EF7D  F00F         	goto	u6160
  8607  001EF6                     u6161:
  8608  001EF6  EF87  F00F         	goto	l5828
  8609  001EFA                     u6160:
  8610  001EFA                     l5824:
  8611  001EFA  0E00               	movlw	0
  8612  001EFC  6E2A               	movwf	?___flmul^0,c
  8613  001EFE  0E00               	movlw	0
  8614  001F00  6E2B               	movwf	(?___flmul+1)^0,c
  8615  001F02  0E00               	movlw	0
  8616  001F04  6E2C               	movwf	(?___flmul+2)^0,c
  8617  001F06  0E00               	movlw	0
  8618  001F08  6E2D               	movwf	(?___flmul+3)^0,c
  8619  001F0A  EF1F  F011         	goto	l1412
  8620  001F0E                     l5828:
  8621  001F0E  5030               	movf	(___flmul@a+2)^0,w,c
  8622  001F10  022A               	mulwf	___flmul@b^0,c
  8623  001F12  CFF3 F041          	movff	prodl,___flmul@temp
  8624  001F16  CFF4 F042          	movff	prodh,___flmul@temp+1
  8625  001F1A  5041               	movf	___flmul@temp^0,w,c
  8626  001F1C  6E38               	movwf	___flmul@grs^0,c
  8627  001F1E  6A39               	clrf	(___flmul@grs+1)^0,c
  8628  001F20  6A3A               	clrf	(___flmul@grs+2)^0,c
  8629  001F22  6A3B               	clrf	(___flmul@grs+3)^0,c
  8630  001F24  5042               	movf	(___flmul@temp+1)^0,w,c
  8631  001F26  6E3D               	movwf	___flmul@prod^0,c
  8632  001F28  6A3E               	clrf	(___flmul@prod+1)^0,c
  8633  001F2A  6A3F               	clrf	(___flmul@prod+2)^0,c
  8634  001F2C  6A40               	clrf	(___flmul@prod+3)^0,c
  8635  001F2E  502F               	movf	(___flmul@a+1)^0,w,c
  8636  001F30  022B               	mulwf	(___flmul@b+1)^0,c
  8637  001F32  CFF3 F041          	movff	prodl,___flmul@temp
  8638  001F36  CFF4 F042          	movff	prodh,___flmul@temp+1
  8639  001F3A  5041               	movf	___flmul@temp^0,w,c
  8640  001F3C  2638               	addwf	___flmul@grs^0,f,c
  8641  001F3E  0E00               	movlw	0
  8642  001F40  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8643  001F42  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8644  001F44  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8645  001F46  5042               	movf	(___flmul@temp+1)^0,w,c
  8646  001F48  263D               	addwf	___flmul@prod^0,f,c
  8647  001F4A  0E00               	movlw	0
  8648  001F4C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8649  001F4E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8650  001F50  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8651  001F52  502E               	movf	___flmul@a^0,w,c
  8652  001F54  022C               	mulwf	(___flmul@b+2)^0,c
  8653  001F56  CFF3 F041          	movff	prodl,___flmul@temp
  8654  001F5A  CFF4 F042          	movff	prodh,___flmul@temp+1
  8655  001F5E  5041               	movf	___flmul@temp^0,w,c
  8656  001F60  2638               	addwf	___flmul@grs^0,f,c
  8657  001F62  0E00               	movlw	0
  8658  001F64  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8659  001F66  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8660  001F68  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8661  001F6A  5042               	movf	(___flmul@temp+1)^0,w,c
  8662  001F6C  263D               	addwf	___flmul@prod^0,f,c
  8663  001F6E  0E00               	movlw	0
  8664  001F70  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8665  001F72  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8666  001F74  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8667  001F76  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8668  001F7A  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8669  001F7E  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8670  001F82  6A38               	clrf	___flmul@grs^0,c
  8671  001F84  502E               	movf	___flmul@a^0,w,c
  8672  001F86  022B               	mulwf	(___flmul@b+1)^0,c
  8673  001F88  CFF3 F041          	movff	prodl,___flmul@temp
  8674  001F8C  CFF4 F042          	movff	prodh,___flmul@temp+1
  8675  001F90  5041               	movf	___flmul@temp^0,w,c
  8676  001F92  2638               	addwf	___flmul@grs^0,f,c
  8677  001F94  5042               	movf	(___flmul@temp+1)^0,w,c
  8678  001F96  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8679  001F98  0E00               	movlw	0
  8680  001F9A  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8681  001F9C  0E00               	movlw	0
  8682  001F9E  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8683  001FA0  502F               	movf	(___flmul@a+1)^0,w,c
  8684  001FA2  022A               	mulwf	___flmul@b^0,c
  8685  001FA4  CFF3 F041          	movff	prodl,___flmul@temp
  8686  001FA8  CFF4 F042          	movff	prodh,___flmul@temp+1
  8687  001FAC  5041               	movf	___flmul@temp^0,w,c
  8688  001FAE  2638               	addwf	___flmul@grs^0,f,c
  8689  001FB0  5042               	movf	(___flmul@temp+1)^0,w,c
  8690  001FB2  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8691  001FB4  0E00               	movlw	0
  8692  001FB6  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8693  001FB8  0E00               	movlw	0
  8694  001FBA  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8695  001FBC  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8696  001FC0  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8697  001FC4  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8698  001FC8  6A38               	clrf	___flmul@grs^0,c
  8699  001FCA  502E               	movf	___flmul@a^0,w,c
  8700  001FCC  022A               	mulwf	___flmul@b^0,c
  8701  001FCE  CFF3 F041          	movff	prodl,___flmul@temp
  8702  001FD2  CFF4 F042          	movff	prodh,___flmul@temp+1
  8703  001FD6  5041               	movf	___flmul@temp^0,w,c
  8704  001FD8  2638               	addwf	___flmul@grs^0,f,c
  8705  001FDA  5042               	movf	(___flmul@temp+1)^0,w,c
  8706  001FDC  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8707  001FDE  0E00               	movlw	0
  8708  001FE0  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8709  001FE2  0E00               	movlw	0
  8710  001FE4  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8711  001FE6  5030               	movf	(___flmul@a+2)^0,w,c
  8712  001FE8  022B               	mulwf	(___flmul@b+1)^0,c
  8713  001FEA  CFF3 F041          	movff	prodl,___flmul@temp
  8714  001FEE  CFF4 F042          	movff	prodh,___flmul@temp+1
  8715  001FF2  5041               	movf	___flmul@temp^0,w,c
  8716  001FF4  263D               	addwf	___flmul@prod^0,f,c
  8717  001FF6  5042               	movf	(___flmul@temp+1)^0,w,c
  8718  001FF8  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8719  001FFA  0E00               	movlw	0
  8720  001FFC  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8721  001FFE  0E00               	movlw	0
  8722  002000  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8723  002002  502F               	movf	(___flmul@a+1)^0,w,c
  8724  002004  022C               	mulwf	(___flmul@b+2)^0,c
  8725  002006  CFF3 F041          	movff	prodl,___flmul@temp
  8726  00200A  CFF4 F042          	movff	prodh,___flmul@temp+1
  8727  00200E  5041               	movf	___flmul@temp^0,w,c
  8728  002010  263D               	addwf	___flmul@prod^0,f,c
  8729  002012  5042               	movf	(___flmul@temp+1)^0,w,c
  8730  002014  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8731  002016  0E00               	movlw	0
  8732  002018  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8733  00201A  0E00               	movlw	0
  8734  00201C  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8735  00201E  5030               	movf	(___flmul@a+2)^0,w,c
  8736  002020  022C               	mulwf	(___flmul@b+2)^0,c
  8737  002022  CFF3 F041          	movff	prodl,___flmul@temp
  8738  002026  CFF4 F042          	movff	prodh,___flmul@temp+1
  8739  00202A  5041               	movf	___flmul@temp^0,w,c
  8740  00202C  6E32               	movwf	??___flmul^0,c
  8741  00202E  5042               	movf	(___flmul@temp+1)^0,w,c
  8742  002030  6E33               	movwf	(??___flmul+1)^0,c
  8743  002032  6A34               	clrf	(??___flmul+2)^0,c
  8744  002034  6A35               	clrf	(??___flmul+3)^0,c
  8745  002036  C034  F035         	movff	??___flmul+2,??___flmul+3
  8746  00203A  C033  F034         	movff	??___flmul+1,??___flmul+2
  8747  00203E  C032  F033         	movff	??___flmul,??___flmul+1
  8748  002042  6A32               	clrf	??___flmul^0,c
  8749  002044  5032               	movf	??___flmul^0,w,c
  8750  002046  263D               	addwf	___flmul@prod^0,f,c
  8751  002048  5033               	movf	(??___flmul+1)^0,w,c
  8752  00204A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8753  00204C  5034               	movf	(??___flmul+2)^0,w,c
  8754  00204E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8755  002050  5035               	movf	(??___flmul+3)^0,w,c
  8756  002052  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8757  002054  C038  F032         	movff	___flmul@grs,??___flmul
  8758  002058  C039  F033         	movff	___flmul@grs+1,??___flmul+1
  8759  00205C  C03A  F034         	movff	___flmul@grs+2,??___flmul+2
  8760  002060  C03B  F035         	movff	___flmul@grs+3,??___flmul+3
  8761  002064  0E19               	movlw	25
  8762  002066  EF3A  F010         	goto	u6170
  8763  00206A                     u6175:
  8764  00206A  90D8               	bcf	status,0,c
  8765  00206C  3235               	rrcf	(??___flmul+3)^0,f,c
  8766  00206E  3234               	rrcf	(??___flmul+2)^0,f,c
  8767  002070  3233               	rrcf	(??___flmul+1)^0,f,c
  8768  002072  3232               	rrcf	??___flmul^0,f,c
  8769  002074                     u6170:
  8770  002074  2EE8               	decfsz	wreg,f,c
  8771  002076  EF35  F010         	goto	u6175
  8772  00207A  5032               	movf	??___flmul^0,w,c
  8773  00207C  263D               	addwf	___flmul@prod^0,f,c
  8774  00207E  5033               	movf	(??___flmul+1)^0,w,c
  8775  002080  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8776  002082  5034               	movf	(??___flmul+2)^0,w,c
  8777  002084  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8778  002086  5035               	movf	(??___flmul+3)^0,w,c
  8779  002088  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8780  00208A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8781  00208E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8782  002092  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8783  002096  6A38               	clrf	___flmul@grs^0,c
  8784  002098  5037               	movf	___flmul@aexp^0,w,c
  8785  00209A  C03C  F032         	movff	___flmul@bexp,??___flmul
  8786  00209E  6A33               	clrf	(??___flmul+1)^0,c
  8787  0020A0  2632               	addwf	??___flmul^0,f,c
  8788  0020A2  0E00               	movlw	0
  8789  0020A4  2233               	addwfc	(??___flmul+1)^0,f,c
  8790  0020A6  0E82               	movlw	130
  8791  0020A8  2432               	addwf	??___flmul^0,w,c
  8792  0020AA  6E41               	movwf	___flmul@temp^0,c
  8793  0020AC  0EFF               	movlw	255
  8794  0020AE  2033               	addwfc	(??___flmul+1)^0,w,c
  8795  0020B0  6E42               	movwf	(___flmul@temp+1)^0,c
  8796  0020B2  EF70  F010         	goto	l5876
  8797  0020B6                     l5870:
  8798  0020B6  90D8               	bcf	status,0,c
  8799  0020B8  363D               	rlcf	___flmul@prod^0,f,c
  8800  0020BA  363E               	rlcf	(___flmul@prod+1)^0,f,c
  8801  0020BC  363F               	rlcf	(___flmul@prod+2)^0,f,c
  8802  0020BE  3640               	rlcf	(___flmul@prod+3)^0,f,c
  8803  0020C0  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8804  0020C2  EF65  F010         	goto	u6181
  8805  0020C6  EF67  F010         	goto	u6180
  8806  0020CA                     u6181:
  8807  0020CA  EF68  F010         	goto	l1415
  8808  0020CE                     u6180:
  8809  0020CE  803D               	bsf	___flmul@prod^0,0,c
  8810  0020D0                     l1415:
  8811  0020D0  90D8               	bcf	status,0,c
  8812  0020D2  3638               	rlcf	___flmul@grs^0,f,c
  8813  0020D4  3639               	rlcf	(___flmul@grs+1)^0,f,c
  8814  0020D6  363A               	rlcf	(___flmul@grs+2)^0,f,c
  8815  0020D8  363B               	rlcf	(___flmul@grs+3)^0,f,c
  8816  0020DA  0641               	decf	___flmul@temp^0,f,c
  8817  0020DC  A0D8               	btfss	status,0,c
  8818  0020DE  0642               	decf	(___flmul@temp+1)^0,f,c
  8819  0020E0                     l5876:
  8820  0020E0  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  8821  0020E2  EF75  F010         	goto	u6191
  8822  0020E6  EF77  F010         	goto	u6190
  8823  0020EA                     u6191:
  8824  0020EA  EF5B  F010         	goto	l5870
  8825  0020EE                     u6190:
  8826  0020EE  0E00               	movlw	0
  8827  0020F0  6E37               	movwf	___flmul@aexp^0,c
  8828  0020F2  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8829  0020F4  EF7E  F010         	goto	u6201
  8830  0020F8  EF80  F010         	goto	u6200
  8831  0020FC                     u6201:
  8832  0020FC  EFA4  F010         	goto	l1417
  8833  002100                     u6200:
  8834  002100  0EFF               	movlw	255
  8835  002102  1438               	andwf	___flmul@grs^0,w,c
  8836  002104  6E32               	movwf	??___flmul^0,c
  8837  002106  0EFF               	movlw	255
  8838  002108  1439               	andwf	(___flmul@grs+1)^0,w,c
  8839  00210A  6E33               	movwf	(??___flmul+1)^0,c
  8840  00210C  0EFF               	movlw	255
  8841  00210E  143A               	andwf	(___flmul@grs+2)^0,w,c
  8842  002110  6E34               	movwf	(??___flmul+2)^0,c
  8843  002112  0E7F               	movlw	127
  8844  002114  143B               	andwf	(___flmul@grs+3)^0,w,c
  8845  002116  6E35               	movwf	(??___flmul+3)^0,c
  8846  002118  5032               	movf	??___flmul^0,w,c
  8847  00211A  1033               	iorwf	(??___flmul+1)^0,w,c
  8848  00211C  1034               	iorwf	(??___flmul+2)^0,w,c
  8849  00211E  1035               	iorwf	(??___flmul+3)^0,w,c
  8850  002120  B4D8               	btfsc	status,2,c
  8851  002122  EF95  F010         	goto	u6211
  8852  002126  EF97  F010         	goto	u6210
  8853  00212A                     u6211:
  8854  00212A  EF9B  F010         	goto	l1418
  8855  00212E                     u6210:
  8856  00212E                     l5884:
  8857  00212E  0E01               	movlw	1
  8858  002130  6E37               	movwf	___flmul@aexp^0,c
  8859  002132  EFA4  F010         	goto	l1417
  8860  002136                     l1418:
  8861  002136  A03D               	btfss	___flmul@prod^0,0,c
  8862  002138  EFA0  F010         	goto	u6221
  8863  00213C  EFA2  F010         	goto	u6220
  8864  002140                     u6221:
  8865  002140  EFA4  F010         	goto	l1417
  8866  002144                     u6220:
  8867  002144  EF97  F010         	goto	l5884
  8868  002148                     l1417:
  8869  002148  5037               	movf	___flmul@aexp^0,w,c
  8870  00214A  B4D8               	btfsc	status,2,c
  8871  00214C  EFAA  F010         	goto	u6231
  8872  002150  EFAC  F010         	goto	u6230
  8873  002154                     u6231:
  8874  002154  EFD0  F010         	goto	l5896
  8875  002158                     u6230:
  8876  002158  0E01               	movlw	1
  8877  00215A  263D               	addwf	___flmul@prod^0,f,c
  8878  00215C  0E00               	movlw	0
  8879  00215E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  8880  002160  223F               	addwfc	(___flmul@prod+2)^0,f,c
  8881  002162  2240               	addwfc	(___flmul@prod+3)^0,f,c
  8882  002164  A040               	btfss	(___flmul@prod+3)^0,0,c
  8883  002166  EFB7  F010         	goto	u6241
  8884  00216A  EFB9  F010         	goto	u6240
  8885  00216E                     u6241:
  8886  00216E  EFD0  F010         	goto	l5896
  8887  002172                     u6240:
  8888  002172  C03D  F032         	movff	___flmul@prod,??___flmul
  8889  002176  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  8890  00217A  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  8891  00217E  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  8892  002182  3435               	rlcf	(??___flmul+3)^0,w,c
  8893  002184  3235               	rrcf	(??___flmul+3)^0,f,c
  8894  002186  3234               	rrcf	(??___flmul+2)^0,f,c
  8895  002188  3233               	rrcf	(??___flmul+1)^0,f,c
  8896  00218A  3232               	rrcf	??___flmul^0,f,c
  8897  00218C  C032  F03D         	movff	??___flmul,___flmul@prod
  8898  002190  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  8899  002194  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  8900  002198  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  8901  00219C  4A41               	infsnz	___flmul@temp^0,f,c
  8902  00219E  2A42               	incf	(___flmul@temp+1)^0,f,c
  8903  0021A0                     l5896:
  8904  0021A0  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  8905  0021A2  EFDB  F010         	goto	u6251
  8906  0021A6  5042               	movf	(___flmul@temp+1)^0,w,c
  8907  0021A8  E108               	bnz	u6250
  8908  0021AA  2841               	incf	___flmul@temp^0,w,c
  8909  0021AC  A0D8               	btfss	status,0,c
  8910  0021AE  EFDB  F010         	goto	u6251
  8911  0021B2  EFDD  F010         	goto	u6250
  8912  0021B6                     u6251:
  8913  0021B6  EFE7  F010         	goto	l5900
  8914  0021BA                     u6250:
  8915  0021BA  0E00               	movlw	0
  8916  0021BC  6E3D               	movwf	___flmul@prod^0,c
  8917  0021BE  0E00               	movlw	0
  8918  0021C0  6E3E               	movwf	(___flmul@prod+1)^0,c
  8919  0021C2  0E80               	movlw	128
  8920  0021C4  6E3F               	movwf	(___flmul@prod+2)^0,c
  8921  0021C6  0E7F               	movlw	127
  8922  0021C8  6E40               	movwf	(___flmul@prod+3)^0,c
  8923  0021CA  EF15  F011         	goto	l5912
  8924  0021CE                     l5900:
  8925  0021CE  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  8926  0021D0  EFF4  F010         	goto	u6260
  8927  0021D4  5042               	movf	(___flmul@temp+1)^0,w,c
  8928  0021D6  E106               	bnz	u6261
  8929  0021D8  0441               	decf	___flmul@temp^0,w,c
  8930  0021DA  B0D8               	btfsc	status,0,c
  8931  0021DC  EFF2  F010         	goto	u6261
  8932  0021E0  EFF4  F010         	goto	u6260
  8933  0021E4                     u6261:
  8934  0021E4  EF00  F011         	goto	l1425
  8935  0021E8                     u6260:
  8936  0021E8  0E00               	movlw	0
  8937  0021EA  6E3D               	movwf	___flmul@prod^0,c
  8938  0021EC  0E00               	movlw	0
  8939  0021EE  6E3E               	movwf	(___flmul@prod+1)^0,c
  8940  0021F0  0E00               	movlw	0
  8941  0021F2  6E3F               	movwf	(___flmul@prod+2)^0,c
  8942  0021F4  0E00               	movlw	0
  8943  0021F6  6E40               	movwf	(___flmul@prod+3)^0,c
  8944  0021F8  0E00               	movlw	0
  8945  0021FA  6E36               	movwf	___flmul@sign^0,c
  8946  0021FC  EF15  F011         	goto	l5912
  8947  002200                     l1425:
  8948  002200  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  8949  002204  0EFF               	movlw	255
  8950  002206  163D               	andwf	___flmul@prod^0,f,c
  8951  002208  0EFF               	movlw	255
  8952  00220A  163E               	andwf	(___flmul@prod+1)^0,f,c
  8953  00220C  0E7F               	movlw	127
  8954  00220E  163F               	andwf	(___flmul@prod+2)^0,f,c
  8955  002210  0E00               	movlw	0
  8956  002212  1640               	andwf	(___flmul@prod+3)^0,f,c
  8957  002214  A03C               	btfss	___flmul@bexp^0,0,c
  8958  002216  EF0F  F011         	goto	u6271
  8959  00221A  EF11  F011         	goto	u6270
  8960  00221E                     u6271:
  8961  00221E  EF12  F011         	goto	l5910
  8962  002222                     u6270:
  8963  002222  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  8964  002224                     l5910:
  8965  002224  90D8               	bcf	status,0,c
  8966  002226  303C               	rrcf	___flmul@bexp^0,w,c
  8967  002228  6E40               	movwf	(___flmul@prod+3)^0,c
  8968  00222A                     l5912:
  8969  00222A  5036               	movf	___flmul@sign^0,w,c
  8970  00222C  1240               	iorwf	(___flmul@prod+3)^0,f,c
  8971  00222E  C03D  F02A         	movff	___flmul@prod,?___flmul
  8972  002232  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  8973  002236  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  8974  00223A  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  8975  00223E                     l1412:
  8976  00223E  0012               	return		;funcret
  8977  002240                     __end_of___flmul:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function ___flge *****************
  8981 ;; Defined at:
  8982 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  ff1             4    2[COMRAM] unsigned char 
  8985 ;;  ff2             4    6[COMRAM] unsigned char 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;		None
  8988 ;; Return value:  Size  Location     Type
  8989 ;;		None               void
  8990 ;; Registers used:
  8991 ;;		wreg, status,2, status,0
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;Total ram usage:       12 bytes
  9002 ;; Hardware stack levels used: 1
  9003 ;; Hardware stack levels required when called: 2
  9004 ;; This function calls:
  9005 ;;		Nothing
  9006 ;; This function is called by:
  9007 ;;		_roundf
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text40
  9012  004880                     __ptext40:
  9013                           	callstack 0
  9014  004880                     ___flge:
  9015                           	callstack 24
  9016  004880  0E00               	movlw	0
  9017  004882  1403               	andwf	___flge@ff1^0,w,c
  9018  004884  6E0B               	movwf	??___flge^0,c
  9019  004886  0E00               	movlw	0
  9020  004888  1404               	andwf	(___flge@ff1+1)^0,w,c
  9021  00488A  6E0C               	movwf	(??___flge+1)^0,c
  9022  00488C  0E80               	movlw	128
  9023  00488E  1405               	andwf	(___flge@ff1+2)^0,w,c
  9024  004890  6E0D               	movwf	(??___flge+2)^0,c
  9025  004892  0E7F               	movlw	127
  9026  004894  1406               	andwf	(___flge@ff1+3)^0,w,c
  9027  004896  6E0E               	movwf	(??___flge+3)^0,c
  9028  004898  500B               	movf	??___flge^0,w,c
  9029  00489A  100C               	iorwf	(??___flge+1)^0,w,c
  9030  00489C  100D               	iorwf	(??___flge+2)^0,w,c
  9031  00489E  100E               	iorwf	(??___flge+3)^0,w,c
  9032  0048A0  A4D8               	btfss	status,2,c
  9033  0048A2  EF55  F024         	goto	u6281
  9034  0048A6  EF57  F024         	goto	u6280
  9035  0048AA                     u6281:
  9036  0048AA  EF5F  F024         	goto	l5928
  9037  0048AE                     u6280:
  9038  0048AE  0E00               	movlw	0
  9039  0048B0  6E03               	movwf	___flge@ff1^0,c
  9040  0048B2  0E00               	movlw	0
  9041  0048B4  6E04               	movwf	(___flge@ff1+1)^0,c
  9042  0048B6  0E00               	movlw	0
  9043  0048B8  6E05               	movwf	(___flge@ff1+2)^0,c
  9044  0048BA  0E00               	movlw	0
  9045  0048BC  6E06               	movwf	(___flge@ff1+3)^0,c
  9046  0048BE                     l5928:
  9047  0048BE  0E00               	movlw	0
  9048  0048C0  1407               	andwf	___flge@ff2^0,w,c
  9049  0048C2  6E0B               	movwf	??___flge^0,c
  9050  0048C4  0E00               	movlw	0
  9051  0048C6  1408               	andwf	(___flge@ff2+1)^0,w,c
  9052  0048C8  6E0C               	movwf	(??___flge+1)^0,c
  9053  0048CA  0E80               	movlw	128
  9054  0048CC  1409               	andwf	(___flge@ff2+2)^0,w,c
  9055  0048CE  6E0D               	movwf	(??___flge+2)^0,c
  9056  0048D0  0E7F               	movlw	127
  9057  0048D2  140A               	andwf	(___flge@ff2+3)^0,w,c
  9058  0048D4  6E0E               	movwf	(??___flge+3)^0,c
  9059  0048D6  500B               	movf	??___flge^0,w,c
  9060  0048D8  100C               	iorwf	(??___flge+1)^0,w,c
  9061  0048DA  100D               	iorwf	(??___flge+2)^0,w,c
  9062  0048DC  100E               	iorwf	(??___flge+3)^0,w,c
  9063  0048DE  A4D8               	btfss	status,2,c
  9064  0048E0  EF74  F024         	goto	u6291
  9065  0048E4  EF76  F024         	goto	u6290
  9066  0048E8                     u6291:
  9067  0048E8  EF7E  F024         	goto	l5932
  9068  0048EC                     u6290:
  9069  0048EC  0E00               	movlw	0
  9070  0048EE  6E07               	movwf	___flge@ff2^0,c
  9071  0048F0  0E00               	movlw	0
  9072  0048F2  6E08               	movwf	(___flge@ff2+1)^0,c
  9073  0048F4  0E00               	movlw	0
  9074  0048F6  6E09               	movwf	(___flge@ff2+2)^0,c
  9075  0048F8  0E00               	movlw	0
  9076  0048FA  6E0A               	movwf	(___flge@ff2+3)^0,c
  9077  0048FC                     l5932:
  9078  0048FC  AE06               	btfss	(___flge@ff1+3)^0,7,c
  9079  0048FE  EF83  F024         	goto	u6301
  9080  004902  EF85  F024         	goto	u6300
  9081  004906                     u6301:
  9082  004906  EF8E  F024         	goto	l5936
  9083  00490A                     u6300:
  9084  00490A  6C03               	negf	___flge@ff1^0,c
  9085  00490C  1E04               	comf	(___flge@ff1+1)^0,f,c
  9086  00490E  B0D8               	btfsc	status,0,c
  9087  004910  2A04               	incf	(___flge@ff1+1)^0,f,c
  9088  004912  1E05               	comf	(___flge@ff1+2)^0,f,c
  9089  004914  B0D8               	btfsc	status,0,c
  9090  004916  2A05               	incf	(___flge@ff1+2)^0,f,c
  9091  004918  0E80               	movlw	128
  9092  00491A  5606               	subfwb	(___flge@ff1+3)^0,f,c
  9093  00491C                     l5936:
  9094  00491C  AE0A               	btfss	(___flge@ff2+3)^0,7,c
  9095  00491E  EF93  F024         	goto	u6311
  9096  004922  EF95  F024         	goto	u6310
  9097  004926                     u6311:
  9098  004926  EF9E  F024         	goto	l1059
  9099  00492A                     u6310:
  9100  00492A  6C07               	negf	___flge@ff2^0,c
  9101  00492C  1E08               	comf	(___flge@ff2+1)^0,f,c
  9102  00492E  B0D8               	btfsc	status,0,c
  9103  004930  2A08               	incf	(___flge@ff2+1)^0,f,c
  9104  004932  1E09               	comf	(___flge@ff2+2)^0,f,c
  9105  004934  B0D8               	btfsc	status,0,c
  9106  004936  2A09               	incf	(___flge@ff2+2)^0,f,c
  9107  004938  0E80               	movlw	128
  9108  00493A  560A               	subfwb	(___flge@ff2+3)^0,f,c
  9109  00493C                     l1059:
  9110  00493C  0E00               	movlw	0
  9111  00493E  1A03               	xorwf	___flge@ff1^0,f,c
  9112  004940  0E00               	movlw	0
  9113  004942  1A04               	xorwf	(___flge@ff1+1)^0,f,c
  9114  004944  0E00               	movlw	0
  9115  004946  1A05               	xorwf	(___flge@ff1+2)^0,f,c
  9116  004948  0E80               	movlw	128
  9117  00494A  1A06               	xorwf	(___flge@ff1+3)^0,f,c
  9118  00494C  0E00               	movlw	0
  9119  00494E  1A07               	xorwf	___flge@ff2^0,f,c
  9120  004950  0E00               	movlw	0
  9121  004952  1A08               	xorwf	(___flge@ff2+1)^0,f,c
  9122  004954  0E00               	movlw	0
  9123  004956  1A09               	xorwf	(___flge@ff2+2)^0,f,c
  9124  004958  0E80               	movlw	128
  9125  00495A  1A0A               	xorwf	(___flge@ff2+3)^0,f,c
  9126  00495C  5007               	movf	___flge@ff2^0,w,c
  9127  00495E  5C03               	subwf	___flge@ff1^0,w,c
  9128  004960  5008               	movf	(___flge@ff2+1)^0,w,c
  9129  004962  5804               	subwfb	(___flge@ff1+1)^0,w,c
  9130  004964  5009               	movf	(___flge@ff2+2)^0,w,c
  9131  004966  5805               	subwfb	(___flge@ff1+2)^0,w,c
  9132  004968  500A               	movf	(___flge@ff2+3)^0,w,c
  9133  00496A  5806               	subwfb	(___flge@ff1+3)^0,w,c
  9134  00496C  B0D8               	btfsc	status,0,c
  9135  00496E  EFBB  F024         	goto	u6321
  9136  004972  EFBD  F024         	goto	u6320
  9137  004976                     u6321:
  9138  004976  EFC0  F024         	goto	l5942
  9139  00497A                     u6320:
  9140  00497A  90D8               	bcf	status,0,c
  9141  00497C  EFC1  F024         	goto	l1064
  9142  004980                     l5942:
  9143  004980  80D8               	bsf	status,0,c
  9144  004982                     l1064:
  9145  004982  0012               	return		;funcret
  9146  004984                     __end_of___flge:
  9147                           	callstack 0
  9148                           
  9149 ;; *************** function ___fltol *****************
  9150 ;; Defined at:
  9151 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  f1              4   18[BANK0 ] unsigned char 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  exp1            1   79[COMRAM] unsigned char 
  9156 ;;  sign1           1   78[COMRAM] unsigned char 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  4   18[BANK0 ] long 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:       10 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 2
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_lroundf
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text41
  9181  004778                     __ptext41:
  9182                           	callstack 0
  9183  004778                     ___fltol:
  9184                           	callstack 25
  9185  004778  0100               	movlb	0	; () banked
  9186  00477A  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9187  00477C  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9188  00477E  6E50               	movwf	___fltol@exp1^0,c
  9189  004780  5050               	movf	___fltol@exp1^0,w,c
  9190  004782  A4D8               	btfss	status,2,c
  9191  004784  EFC6  F023         	goto	u6341
  9192  004788  EFC8  F023         	goto	u6340
  9193  00478C                     u6341:
  9194  00478C  EFD2  F023         	goto	l5960
  9195  004790                     u6340:
  9196  004790                     l5956:
  9197                           
  9198                           ; BSR set to: 0
  9199  004790  0E00               	movlw	0
  9200  004792  6F72               	movwf	?___fltol& (0+255),b
  9201  004794  0E00               	movlw	0
  9202  004796  6F73               	movwf	(?___fltol+1)& (0+255),b
  9203  004798  0E00               	movlw	0
  9204  00479A  6F74               	movwf	(?___fltol+2)& (0+255),b
  9205  00479C  0E00               	movlw	0
  9206  00479E  6F75               	movwf	(?___fltol+3)& (0+255),b
  9207  0047A0  EF3F  F024         	goto	l1091
  9208  0047A4                     l5960:
  9209                           
  9210                           ; BSR set to: 0
  9211  0047A4  C072  F04B         	movff	___fltol@f1,??___fltol
  9212  0047A8  C073  F04C         	movff	___fltol@f1+1,??___fltol+1
  9213  0047AC  C074  F04D         	movff	___fltol@f1+2,??___fltol+2
  9214  0047B0  C075  F04E         	movff	___fltol@f1+3,??___fltol+3
  9215  0047B4  0E20               	movlw	32
  9216  0047B6  EFE2  F023         	goto	u6350
  9217  0047BA                     u6355:
  9218  0047BA  90D8               	bcf	status,0,c
  9219  0047BC  324E               	rrcf	(??___fltol+3)^0,f,c
  9220  0047BE  324D               	rrcf	(??___fltol+2)^0,f,c
  9221  0047C0  324C               	rrcf	(??___fltol+1)^0,f,c
  9222  0047C2  324B               	rrcf	??___fltol^0,f,c
  9223  0047C4                     u6350:
  9224  0047C4  2EE8               	decfsz	wreg,f,c
  9225  0047C6  EFDD  F023         	goto	u6355
  9226  0047CA  504B               	movf	??___fltol^0,w,c
  9227  0047CC  6E4F               	movwf	___fltol@sign1^0,c
  9228  0047CE                     
  9229                           ; BSR set to: 0
  9230  0047CE  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
  9231  0047D0                     
  9232                           ; BSR set to: 0
  9233  0047D0  0EFF               	movlw	255
  9234  0047D2  1772               	andwf	___fltol@f1& (0+255),f,b
  9235  0047D4  0EFF               	movlw	255
  9236  0047D6  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
  9237  0047D8  0EFF               	movlw	255
  9238  0047DA  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
  9239  0047DC  0E00               	movlw	0
  9240  0047DE  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
  9241  0047E0                     
  9242                           ; BSR set to: 0
  9243  0047E0  0E96               	movlw	150
  9244  0047E2  5E50               	subwf	___fltol@exp1^0,f,c
  9245  0047E4                     
  9246                           ; BSR set to: 0
  9247  0047E4  BE50               	btfsc	___fltol@exp1^0,7,c
  9248  0047E6  EFF9  F023         	goto	u6360
  9249  0047EA  EFF7  F023         	goto	u6361
  9250  0047EE                     u6361:
  9251  0047EE  EF0F  F024         	goto	l5980
  9252  0047F2                     u6360:
  9253  0047F2                     
  9254                           ; BSR set to: 0
  9255  0047F2  5050               	movf	___fltol@exp1^0,w,c
  9256  0047F4  0A80               	xorlw	128
  9257  0047F6  0F97               	addlw	151
  9258  0047F8  B0D8               	btfsc	status,0,c
  9259  0047FA  EF01  F024         	goto	u6371
  9260  0047FE  EF03  F024         	goto	u6370
  9261  004802                     u6371:
  9262  004802  EF05  F024         	goto	l5976
  9263  004806                     u6370:
  9264  004806  EFC8  F023         	goto	l5956
  9265  00480A                     l5976:
  9266                           
  9267                           ; BSR set to: 0
  9268  00480A  90D8               	bcf	status,0,c
  9269  00480C  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9270  00480E  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9271  004810  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9272  004812  3372               	rrcf	___fltol@f1& (0+255),f,b
  9273  004814                     
  9274                           ; BSR set to: 0
  9275  004814  3E50               	incfsz	___fltol@exp1^0,f,c
  9276  004816  EF05  F024         	goto	l5976
  9277  00481A  EF27  F024         	goto	l5990
  9278  00481E                     l5980:
  9279                           
  9280                           ; BSR set to: 0
  9281  00481E  0E1F               	movlw	31
  9282  004820  6450               	cpfsgt	___fltol@exp1^0,c
  9283  004822  EF15  F024         	goto	u6381
  9284  004826  EF17  F024         	goto	u6380
  9285  00482A                     u6381:
  9286  00482A  EF1F  F024         	goto	l5988
  9287  00482E                     u6380:
  9288  00482E  EFC8  F023         	goto	l5956
  9289  004832                     l5986:
  9290                           
  9291                           ; BSR set to: 0
  9292  004832  90D8               	bcf	status,0,c
  9293  004834  3772               	rlcf	___fltol@f1& (0+255),f,b
  9294  004836  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9295  004838  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9296  00483A  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9297  00483C  0650               	decf	___fltol@exp1^0,f,c
  9298  00483E                     l5988:
  9299                           
  9300                           ; BSR set to: 0
  9301  00483E  5050               	movf	___fltol@exp1^0,w,c
  9302  004840  A4D8               	btfss	status,2,c
  9303  004842  EF25  F024         	goto	u6391
  9304  004846  EF27  F024         	goto	u6390
  9305  00484A                     u6391:
  9306  00484A  EF19  F024         	goto	l5986
  9307  00484E                     u6390:
  9308  00484E                     l5990:
  9309                           
  9310                           ; BSR set to: 0
  9311  00484E  504F               	movf	___fltol@sign1^0,w,c
  9312  004850  B4D8               	btfsc	status,2,c
  9313  004852  EF2D  F024         	goto	u6401
  9314  004856  EF2F  F024         	goto	u6400
  9315  00485A                     u6401:
  9316  00485A  EF37  F024         	goto	l5994
  9317  00485E                     u6400:
  9318  00485E                     
  9319                           ; BSR set to: 0
  9320  00485E  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
  9321  004860  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
  9322  004862  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
  9323  004864  6D72               	negf	___fltol@f1& (0+255),b
  9324  004866  0E00               	movlw	0
  9325  004868  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9326  00486A  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9327  00486C  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9328  00486E                     l5994:
  9329                           
  9330                           ; BSR set to: 0
  9331  00486E  C072  F072         	movff	___fltol@f1,?___fltol
  9332  004872  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  9333  004876  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  9334  00487A  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  9335  00487E                     l1091:
  9336                           
  9337                           ; BSR set to: 0
  9338  00487E  0012               	return		;funcret
  9339  004880                     __end_of___fltol:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function _color_read_Clear *****************
  9343 ;; Defined at:
  9344 ;;		line 133 in file "color.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  tmp             2   11[COMRAM] unsigned int 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2    6[COMRAM] unsigned int 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;Total ram usage:        7 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 4
  9365 ;; This function calls:
  9366 ;;		_I2C_2_Master_Read
  9367 ;;		_I2C_2_Master_RepStart
  9368 ;;		_I2C_2_Master_Start
  9369 ;;		_I2C_2_Master_Stop
  9370 ;;		_I2C_2_Master_Write
  9371 ;; This function is called by:
  9372 ;;		_read_color
  9373 ;;		_calibrate_white
  9374 ;;		_amb_light_measure
  9375 ;;		_distance_measure
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text42
  9380  005300                     __ptext42:
  9381                           	callstack 0
  9382  005300                     _color_read_Clear:
  9383                           	callstack 23
  9384  005300                     
  9385                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  9386  005300  EC42  F02C         	call	_I2C_2_Master_Start	;wreg free
  9387                           
  9388                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  9389  005304  0E52               	movlw	82
  9390  005306  EC2C  F02C         	call	_I2C_2_Master_Write
  9391                           
  9392                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  9393  00530A  0EB4               	movlw	180
  9394  00530C  EC2C  F02C         	call	_I2C_2_Master_Write
  9395                           
  9396                           ;color.c: 139:  I2C_2_Master_RepStart();
  9397  005310  EC38  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  9398                           
  9399                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  9400  005314  0E53               	movlw	83
  9401  005316  EC2C  F02C         	call	_I2C_2_Master_Write
  9402                           
  9403                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  9404  00531A  0E01               	movlw	1
  9405  00531C  ECED  F029         	call	_I2C_2_Master_Read
  9406  005320  6E09               	movwf	??_color_read_Clear^0,c
  9407  005322  5009               	movf	??_color_read_Clear^0,w,c
  9408  005324  6E0C               	movwf	color_read_Clear@tmp^0,c
  9409  005326  6A0D               	clrf	(color_read_Clear@tmp+1)^0,c
  9410                           
  9411                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9412  005328  0E00               	movlw	0
  9413  00532A  ECED  F029         	call	_I2C_2_Master_Read
  9414  00532E  6E09               	movwf	??_color_read_Clear^0,c
  9415  005330  5009               	movf	??_color_read_Clear^0,w,c
  9416  005332  6E0B               	movwf	(??_color_read_Clear+2)^0,c
  9417  005334  6A0A               	clrf	(??_color_read_Clear+1)^0,c
  9418  005336  500C               	movf	color_read_Clear@tmp^0,w,c
  9419  005338  100A               	iorwf	(??_color_read_Clear+1)^0,w,c
  9420  00533A  6E0C               	movwf	color_read_Clear@tmp^0,c
  9421  00533C  500D               	movf	(color_read_Clear@tmp+1)^0,w,c
  9422  00533E  100B               	iorwf	(??_color_read_Clear+2)^0,w,c
  9423  005340  6E0D               	movwf	(color_read_Clear@tmp+1)^0,c
  9424                           
  9425                           ;color.c: 143:  I2C_2_Master_Stop();
  9426  005342  EC3D  F02C         	call	_I2C_2_Master_Stop	;wreg free
  9427  005346                     
  9428                           ;color.c: 144:  return tmp;
  9429  005346  C00C  F007         	movff	color_read_Clear@tmp,?_color_read_Clear
  9430  00534A  C00D  F008         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9431  00534E  0012               	return		;funcret
  9432  005350                     __end_of_color_read_Clear:
  9433                           	callstack 0
  9434                           
  9435 ;; *************** function _I2C_2_Master_RepStart *****************
  9436 ;; Defined at:
  9437 ;;		line 33 in file "i2c.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;		None
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0, cstack
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;Total ram usage:        0 bytes
  9456 ;; Hardware stack levels used: 1
  9457 ;; Hardware stack levels required when called: 3
  9458 ;; This function calls:
  9459 ;;		_I2C_2_Master_Idle
  9460 ;; This function is called by:
  9461 ;;		_color_read_Red
  9462 ;;		_color_read_Blue
  9463 ;;		_color_read_Green
  9464 ;;		_color_read_Clear
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text43
  9469  005870                     __ptext43:
  9470                           	callstack 0
  9471  005870                     _I2C_2_Master_RepStart:
  9472                           	callstack 23
  9473  005870                     
  9474                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9475  005870  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9476  005874                     
  9477                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9478  005874  010E               	movlb	14	; () banked
  9479  005876  83DA               	bsf	218,1,b	;volatile
  9480  005878                     
  9481                           ; BSR set to: 14
  9482  005878  0012               	return		;funcret
  9483  00587A                     __end_of_I2C_2_Master_RepStart:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function _I2C_2_Master_Read *****************
  9487 ;; Defined at:
  9488 ;;		line 51 in file "i2c.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  ack             1    wreg     unsigned char 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  ack             1    4[COMRAM] unsigned char 
  9493 ;;  tmp             1    5[COMRAM] unsigned char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      unsigned char 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;Total ram usage:        3 bytes
  9508 ;; Hardware stack levels used: 1
  9509 ;; Hardware stack levels required when called: 3
  9510 ;; This function calls:
  9511 ;;		_I2C_2_Master_Idle
  9512 ;; This function is called by:
  9513 ;;		_color_read_Red
  9514 ;;		_color_read_Blue
  9515 ;;		_color_read_Green
  9516 ;;		_color_read_Clear
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text44
  9521  0053DA                     __ptext44:
  9522                           	callstack 0
  9523  0053DA                     _I2C_2_Master_Read:
  9524                           	callstack 23
  9525                           
  9526                           ; BSR set to: 14
  9527                           ;incstack = 0
  9528                           ;I2C_2_Master_Read@ack stored from wreg
  9529  0053DA  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  9530  0053DC                     
  9531                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9532  0053DC  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9533  0053E0                     
  9534                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9535  0053E0  010E               	movlb	14	; () banked
  9536  0053E2  87DA               	bsf	218,3,b	;volatile
  9537                           
  9538                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9539  0053E4  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9540  0053E8                     
  9541                           ;i2c.c: 57:   tmp = SSP2BUF;
  9542  0053E8  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9543                           
  9544                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9545  0053EC  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9546  0053F0                     
  9547                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9548  0053F0  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  9549  0053F2  B4D8               	btfsc	status,2,c
  9550  0053F4  EFFE  F029         	goto	u3801
  9551  0053F8  EF02  F02A         	goto	u3800
  9552  0053FC                     u3801:
  9553  0053FC  6A04               	clrf	??_I2C_2_Master_Read^0,c
  9554  0053FE  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  9555  005400  EF03  F02A         	goto	u3818
  9556  005404                     u3800:
  9557  005404  6A04               	clrf	??_I2C_2_Master_Read^0,c
  9558  005406                     u3818:
  9559  005406  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  9560  005408  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  9561  00540A  010E               	movlb	14	; () banked
  9562  00540C  51DA               	movf	218,w,b	;volatile
  9563  00540E  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  9564  005410  0BDF               	andlw	-33
  9565  005412  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  9566  005414  6FDA               	movwf	218,b	;volatile
  9567  005416                     
  9568                           ; BSR set to: 14
  9569                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9570  005416  89DA               	bsf	218,4,b	;volatile
  9571  005418                     
  9572                           ; BSR set to: 14
  9573                           ;i2c.c: 61:   return tmp;
  9574  005418  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  9575  00541A                     
  9576                           ; BSR set to: 14
  9577  00541A  0012               	return		;funcret
  9578  00541C                     __end_of_I2C_2_Master_Read:
  9579                           	callstack 0
  9580                           
  9581 ;; *************** function ___xxtofl *****************
  9582 ;; Defined at:
  9583 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  sign            1    wreg     unsigned char 
  9586 ;;  val             4    2[COMRAM] long 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  sign            1   10[COMRAM] unsigned char 
  9589 ;;  arg             4   12[COMRAM] unsigned long 
  9590 ;;  exp             1   11[COMRAM] unsigned char 
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  4    2[COMRAM] unsigned char 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;Total ram usage:       14 bytes
  9605 ;; Hardware stack levels used: 1
  9606 ;; Hardware stack levels required when called: 2
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_detect_color
  9611 ;;		_amb_light_measure
  9612 ;;		_distance_measure
  9613 ;;		_check_color_reading
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text45
  9618  003BDE                     __ptext45:
  9619                           	callstack 0
  9620  003BDE                     ___xxtofl:
  9621                           	callstack 26
  9622                           
  9623                           ; BSR set to: 14
  9624                           ;incstack = 0
  9625                           ;___xxtofl@sign stored from wreg
  9626  003BDE  6E0B               	movwf	___xxtofl@sign^0,c
  9627  003BE0  500B               	movf	___xxtofl@sign^0,w,c
  9628  003BE2  B4D8               	btfsc	status,2,c
  9629  003BE4  EFF6  F01D         	goto	u4971
  9630  003BE8  EFF8  F01D         	goto	u4970
  9631  003BEC                     u4971:
  9632  003BEC  EF1A  F01E         	goto	l1449
  9633  003BF0                     u4970:
  9634  003BF0  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  9635  003BF2  EFFF  F01D         	goto	u4980
  9636  003BF6  EFFD  F01D         	goto	u4981
  9637  003BFA                     u4981:
  9638  003BFA  EF1A  F01E         	goto	l1449
  9639  003BFE                     u4980:
  9640  003BFE  C003  F007         	movff	___xxtofl@val,??___xxtofl
  9641  003C02  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  9642  003C06  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  9643  003C0A  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  9644  003C0E  1E07               	comf	??___xxtofl^0,f,c
  9645  003C10  1E08               	comf	(??___xxtofl+1)^0,f,c
  9646  003C12  1E09               	comf	(??___xxtofl+2)^0,f,c
  9647  003C14  1E0A               	comf	(??___xxtofl+3)^0,f,c
  9648  003C16  2A07               	incf	??___xxtofl^0,f,c
  9649  003C18  0E00               	movlw	0
  9650  003C1A  2208               	addwfc	(??___xxtofl+1)^0,f,c
  9651  003C1C  2209               	addwfc	(??___xxtofl+2)^0,f,c
  9652  003C1E  220A               	addwfc	(??___xxtofl+3)^0,f,c
  9653  003C20  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  9654  003C24  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  9655  003C28  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  9656  003C2C  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  9657  003C30  EF22  F01E         	goto	l4816
  9658  003C34                     l1449:
  9659  003C34  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  9660  003C38  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9661  003C3C  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9662  003C40  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9663  003C44                     l4816:
  9664  003C44  5003               	movf	___xxtofl@val^0,w,c
  9665  003C46  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  9666  003C48  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  9667  003C4A  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  9668  003C4C  A4D8               	btfss	status,2,c
  9669  003C4E  EF2B  F01E         	goto	u4991
  9670  003C52  EF2D  F01E         	goto	u4990
  9671  003C56                     u4991:
  9672  003C56  EF37  F01E         	goto	l4822
  9673  003C5A                     u4990:
  9674  003C5A  0E00               	movlw	0
  9675  003C5C  6E03               	movwf	?___xxtofl^0,c
  9676  003C5E  0E00               	movlw	0
  9677  003C60  6E04               	movwf	(?___xxtofl+1)^0,c
  9678  003C62  0E00               	movlw	0
  9679  003C64  6E05               	movwf	(?___xxtofl+2)^0,c
  9680  003C66  0E00               	movlw	0
  9681  003C68  6E06               	movwf	(?___xxtofl+3)^0,c
  9682  003C6A  EFC8  F01E         	goto	l1452
  9683  003C6E                     l4822:
  9684  003C6E  0E96               	movlw	150
  9685  003C70  6E0C               	movwf	___xxtofl@exp^0,c
  9686  003C72  EF41  F01E         	goto	l4826
  9687  003C76                     l4824:
  9688  003C76  2A0C               	incf	___xxtofl@exp^0,f,c
  9689  003C78  90D8               	bcf	status,0,c
  9690  003C7A  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  9691  003C7C  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  9692  003C7E  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  9693  003C80  320D               	rrcf	___xxtofl@arg^0,f,c
  9694  003C82                     l4826:
  9695  003C82  0E00               	movlw	0
  9696  003C84  140D               	andwf	___xxtofl@arg^0,w,c
  9697  003C86  6E07               	movwf	??___xxtofl^0,c
  9698  003C88  0E00               	movlw	0
  9699  003C8A  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  9700  003C8C  6E08               	movwf	(??___xxtofl+1)^0,c
  9701  003C8E  0E00               	movlw	0
  9702  003C90  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  9703  003C92  6E09               	movwf	(??___xxtofl+2)^0,c
  9704  003C94  0EFE               	movlw	254
  9705  003C96  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  9706  003C98  6E0A               	movwf	(??___xxtofl+3)^0,c
  9707  003C9A  5007               	movf	??___xxtofl^0,w,c
  9708  003C9C  1008               	iorwf	(??___xxtofl+1)^0,w,c
  9709  003C9E  1009               	iorwf	(??___xxtofl+2)^0,w,c
  9710  003CA0  100A               	iorwf	(??___xxtofl+3)^0,w,c
  9711  003CA2  A4D8               	btfss	status,2,c
  9712  003CA4  EF56  F01E         	goto	u5001
  9713  003CA8  EF58  F01E         	goto	u5000
  9714  003CAC                     u5001:
  9715  003CAC  EF3B  F01E         	goto	l4824
  9716  003CB0                     u5000:
  9717  003CB0  EF66  F01E         	goto	l1456
  9718  003CB4                     l4828:
  9719  003CB4  2A0C               	incf	___xxtofl@exp^0,f,c
  9720  003CB6  0E01               	movlw	1
  9721  003CB8  260D               	addwf	___xxtofl@arg^0,f,c
  9722  003CBA  0E00               	movlw	0
  9723  003CBC  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  9724  003CBE  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  9725  003CC0  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  9726  003CC2  90D8               	bcf	status,0,c
  9727  003CC4  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  9728  003CC6  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  9729  003CC8  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  9730  003CCA  320D               	rrcf	___xxtofl@arg^0,f,c
  9731  003CCC                     l1456:
  9732  003CCC  0E00               	movlw	0
  9733  003CCE  140D               	andwf	___xxtofl@arg^0,w,c
  9734  003CD0  6E07               	movwf	??___xxtofl^0,c
  9735  003CD2  0E00               	movlw	0
  9736  003CD4  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  9737  003CD6  6E08               	movwf	(??___xxtofl+1)^0,c
  9738  003CD8  0E00               	movlw	0
  9739  003CDA  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  9740  003CDC  6E09               	movwf	(??___xxtofl+2)^0,c
  9741  003CDE  0EFF               	movlw	255
  9742  003CE0  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  9743  003CE2  6E0A               	movwf	(??___xxtofl+3)^0,c
  9744  003CE4  5007               	movf	??___xxtofl^0,w,c
  9745  003CE6  1008               	iorwf	(??___xxtofl+1)^0,w,c
  9746  003CE8  1009               	iorwf	(??___xxtofl+2)^0,w,c
  9747  003CEA  100A               	iorwf	(??___xxtofl+3)^0,w,c
  9748  003CEC  A4D8               	btfss	status,2,c
  9749  003CEE  EF7B  F01E         	goto	u5011
  9750  003CF2  EF7D  F01E         	goto	u5010
  9751  003CF6                     u5011:
  9752  003CF6  EF5A  F01E         	goto	l4828
  9753  003CFA                     u5010:
  9754  003CFA  EF85  F01E         	goto	l4836
  9755  003CFE                     l4834:
  9756  003CFE  060C               	decf	___xxtofl@exp^0,f,c
  9757  003D00  90D8               	bcf	status,0,c
  9758  003D02  360D               	rlcf	___xxtofl@arg^0,f,c
  9759  003D04  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  9760  003D06  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  9761  003D08  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  9762  003D0A                     l4836:
  9763  003D0A  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  9764  003D0C  EF8A  F01E         	goto	u5021
  9765  003D10  EF8C  F01E         	goto	u5020
  9766  003D14                     u5021:
  9767  003D14  EF94  F01E         	goto	l1463
  9768  003D18                     u5020:
  9769  003D18  0E02               	movlw	2
  9770  003D1A  600C               	cpfslt	___xxtofl@exp^0,c
  9771  003D1C  EF92  F01E         	goto	u5031
  9772  003D20  EF94  F01E         	goto	u5030
  9773  003D24                     u5031:
  9774  003D24  EF7F  F01E         	goto	l4834
  9775  003D28                     u5030:
  9776  003D28                     l1463:
  9777  003D28  B00C               	btfsc	___xxtofl@exp^0,0,c
  9778  003D2A  EF99  F01E         	goto	u5041
  9779  003D2E  EF9B  F01E         	goto	u5040
  9780  003D32                     u5041:
  9781  003D32  EF9C  F01E         	goto	l4842
  9782  003D36                     u5040:
  9783  003D36  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  9784  003D38                     l4842:
  9785  003D38  90D8               	bcf	status,0,c
  9786  003D3A  320C               	rrcf	___xxtofl@exp^0,f,c
  9787  003D3C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  9788  003D40  6A08               	clrf	(??___xxtofl+1)^0,c
  9789  003D42  6A09               	clrf	(??___xxtofl+2)^0,c
  9790  003D44  6A0A               	clrf	(??___xxtofl+3)^0,c
  9791  003D46  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  9792  003D4A  6A09               	clrf	(??___xxtofl+2)^0,c
  9793  003D4C  6A08               	clrf	(??___xxtofl+1)^0,c
  9794  003D4E  6A07               	clrf	??___xxtofl^0,c
  9795  003D50  5007               	movf	??___xxtofl^0,w,c
  9796  003D52  120D               	iorwf	___xxtofl@arg^0,f,c
  9797  003D54  5008               	movf	(??___xxtofl+1)^0,w,c
  9798  003D56  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  9799  003D58  5009               	movf	(??___xxtofl+2)^0,w,c
  9800  003D5A  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  9801  003D5C  500A               	movf	(??___xxtofl+3)^0,w,c
  9802  003D5E  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  9803  003D60  500B               	movf	___xxtofl@sign^0,w,c
  9804  003D62  B4D8               	btfsc	status,2,c
  9805  003D64  EFB6  F01E         	goto	u5051
  9806  003D68  EFB8  F01E         	goto	u5050
  9807  003D6C                     u5051:
  9808  003D6C  EFC0  F01E         	goto	l4852
  9809  003D70                     u5050:
  9810  003D70  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  9811  003D72  EFBF  F01E         	goto	u5060
  9812  003D76  EFBD  F01E         	goto	u5061
  9813  003D7A                     u5061:
  9814  003D7A  EFC0  F01E         	goto	l4852
  9815  003D7E                     u5060:
  9816  003D7E  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  9817  003D80                     l4852:
  9818  003D80  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  9819  003D84  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  9820  003D88  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  9821  003D8C  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  9822  003D90                     l1452:
  9823  003D90  0012               	return		;funcret
  9824  003D92                     __end_of___xxtofl:
  9825                           	callstack 0
  9826                           
  9827 ;; *************** function ___fldiv *****************
  9828 ;; Defined at:
  9829 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  b               4   16[COMRAM] unsigned char 
  9832 ;;  a               4   20[COMRAM] unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  grs             4   35[COMRAM] unsigned long 
  9835 ;;  rem             4   28[COMRAM] unsigned long 
  9836 ;;  new_exp         2   33[COMRAM] short 
  9837 ;;  aexp            1   40[COMRAM] unsigned char 
  9838 ;;  bexp            1   39[COMRAM] unsigned char 
  9839 ;;  sign            1   32[COMRAM] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  4   16[COMRAM] unsigned char 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9849 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9850 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9851 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9852 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9853 ;;Total ram usage:       25 bytes
  9854 ;; Hardware stack levels used: 1
  9855 ;; Hardware stack levels required when called: 2
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_detect_color
  9860 ;;		_amb_light_measure
  9861 ;;		_check_color_reading
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text46
  9866  0025F2                     __ptext46:
  9867                           	callstack 0
  9868  0025F2                     ___fldiv:
  9869                           	callstack 26
  9870  0025F2  5014               	movf	(___fldiv@b+3)^0,w,c
  9871  0025F4  0B80               	andlw	128
  9872  0025F6  6E21               	movwf	___fldiv@sign^0,c
  9873  0025F8  5014               	movf	(___fldiv@b+3)^0,w,c
  9874  0025FA  2414               	addwf	(___fldiv@b+3)^0,w,c
  9875  0025FC  6E28               	movwf	___fldiv@bexp^0,c
  9876  0025FE  AE13               	btfss	(___fldiv@b+2)^0,7,c
  9877  002600  EF04  F013         	goto	u4741
  9878  002604  EF06  F013         	goto	u4740
  9879  002608                     u4741:
  9880  002608  EF07  F013         	goto	l4678
  9881  00260C                     u4740:
  9882  00260C  8028               	bsf	___fldiv@bexp^0,0,c
  9883  00260E                     l4678:
  9884  00260E  5028               	movf	___fldiv@bexp^0,w,c
  9885  002610  B4D8               	btfsc	status,2,c
  9886  002612  EF0D  F013         	goto	u4751
  9887  002616  EF0F  F013         	goto	u4750
  9888  00261A                     u4751:
  9889  00261A  EF24  F013         	goto	l4688
  9890  00261E                     u4750:
  9891  00261E  2828               	incf	___fldiv@bexp^0,w,c
  9892  002620  A4D8               	btfss	status,2,c
  9893  002622  EF15  F013         	goto	u4761
  9894  002626  EF17  F013         	goto	u4760
  9895  00262A                     u4761:
  9896  00262A  EF1F  F013         	goto	l4684
  9897  00262E                     u4760:
  9898  00262E  0E00               	movlw	0
  9899  002630  6E11               	movwf	___fldiv@b^0,c
  9900  002632  0E00               	movlw	0
  9901  002634  6E12               	movwf	(___fldiv@b+1)^0,c
  9902  002636  0E00               	movlw	0
  9903  002638  6E13               	movwf	(___fldiv@b+2)^0,c
  9904  00263A  0E00               	movlw	0
  9905  00263C  6E14               	movwf	(___fldiv@b+3)^0,c
  9906  00263E                     l4684:
  9907  00263E  8E13               	bsf	(___fldiv@b+2)^0,7,c
  9908  002640  0E00               	movlw	0
  9909  002642  6E14               	movwf	(___fldiv@b+3)^0,c
  9910  002644  EF2C  F013         	goto	l4690
  9911  002648                     l4688:
  9912  002648  0E00               	movlw	0
  9913  00264A  6E11               	movwf	___fldiv@b^0,c
  9914  00264C  0E00               	movlw	0
  9915  00264E  6E12               	movwf	(___fldiv@b+1)^0,c
  9916  002650  0E00               	movlw	0
  9917  002652  6E13               	movwf	(___fldiv@b+2)^0,c
  9918  002654  0E00               	movlw	0
  9919  002656  6E14               	movwf	(___fldiv@b+3)^0,c
  9920  002658                     l4690:
  9921  002658  5018               	movf	(___fldiv@a+3)^0,w,c
  9922  00265A  0B80               	andlw	128
  9923  00265C  1A21               	xorwf	___fldiv@sign^0,f,c
  9924  00265E  5018               	movf	(___fldiv@a+3)^0,w,c
  9925  002660  2418               	addwf	(___fldiv@a+3)^0,w,c
  9926  002662  6E29               	movwf	___fldiv@aexp^0,c
  9927  002664  AE17               	btfss	(___fldiv@a+2)^0,7,c
  9928  002666  EF37  F013         	goto	u4771
  9929  00266A  EF39  F013         	goto	u4770
  9930  00266E                     u4771:
  9931  00266E  EF3A  F013         	goto	l4698
  9932  002672                     u4770:
  9933  002672  8029               	bsf	___fldiv@aexp^0,0,c
  9934  002674                     l4698:
  9935  002674  5029               	movf	___fldiv@aexp^0,w,c
  9936  002676  B4D8               	btfsc	status,2,c
  9937  002678  EF40  F013         	goto	u4781
  9938  00267C  EF42  F013         	goto	u4780
  9939  002680                     u4781:
  9940  002680  EF57  F013         	goto	l4708
  9941  002684                     u4780:
  9942  002684  2829               	incf	___fldiv@aexp^0,w,c
  9943  002686  A4D8               	btfss	status,2,c
  9944  002688  EF48  F013         	goto	u4791
  9945  00268C  EF4A  F013         	goto	u4790
  9946  002690                     u4791:
  9947  002690  EF52  F013         	goto	l4704
  9948  002694                     u4790:
  9949  002694  0E00               	movlw	0
  9950  002696  6E15               	movwf	___fldiv@a^0,c
  9951  002698  0E00               	movlw	0
  9952  00269A  6E16               	movwf	(___fldiv@a+1)^0,c
  9953  00269C  0E00               	movlw	0
  9954  00269E  6E17               	movwf	(___fldiv@a+2)^0,c
  9955  0026A0  0E00               	movlw	0
  9956  0026A2  6E18               	movwf	(___fldiv@a+3)^0,c
  9957  0026A4                     l4704:
  9958  0026A4  8E17               	bsf	(___fldiv@a+2)^0,7,c
  9959  0026A6  0E00               	movlw	0
  9960  0026A8  6E18               	movwf	(___fldiv@a+3)^0,c
  9961  0026AA  EF5F  F013         	goto	l4710
  9962  0026AE                     l4708:
  9963  0026AE  0E00               	movlw	0
  9964  0026B0  6E15               	movwf	___fldiv@a^0,c
  9965  0026B2  0E00               	movlw	0
  9966  0026B4  6E16               	movwf	(___fldiv@a+1)^0,c
  9967  0026B6  0E00               	movlw	0
  9968  0026B8  6E17               	movwf	(___fldiv@a+2)^0,c
  9969  0026BA  0E00               	movlw	0
  9970  0026BC  6E18               	movwf	(___fldiv@a+3)^0,c
  9971  0026BE                     l4710:
  9972  0026BE  5015               	movf	___fldiv@a^0,w,c
  9973  0026C0  1016               	iorwf	(___fldiv@a+1)^0,w,c
  9974  0026C2  1017               	iorwf	(___fldiv@a+2)^0,w,c
  9975  0026C4  1018               	iorwf	(___fldiv@a+3)^0,w,c
  9976  0026C6  A4D8               	btfss	status,2,c
  9977  0026C8  EF68  F013         	goto	u4801
  9978  0026CC  EF6A  F013         	goto	u4800
  9979  0026D0                     u4801:
  9980  0026D0  EF82  F013         	goto	l4722
  9981  0026D4                     u4800:
  9982  0026D4  0E00               	movlw	0
  9983  0026D6  6E11               	movwf	___fldiv@b^0,c
  9984  0026D8  0E00               	movlw	0
  9985  0026DA  6E12               	movwf	(___fldiv@b+1)^0,c
  9986  0026DC  0E00               	movlw	0
  9987  0026DE  6E13               	movwf	(___fldiv@b+2)^0,c
  9988  0026E0  0E00               	movlw	0
  9989  0026E2  6E14               	movwf	(___fldiv@b+3)^0,c
  9990  0026E4  0E80               	movlw	128
  9991  0026E6  1213               	iorwf	(___fldiv@b+2)^0,f,c
  9992  0026E8  0E7F               	movlw	127
  9993  0026EA  1214               	iorwf	(___fldiv@b+3)^0,f,c
  9994  0026EC                     l4716:
  9995  0026EC  5021               	movf	___fldiv@sign^0,w,c
  9996  0026EE  1214               	iorwf	(___fldiv@b+3)^0,f,c
  9997  0026F0  C011  F011         	movff	___fldiv@b,?___fldiv
  9998  0026F4  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  9999  0026F8  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
 10000  0026FC  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
 10001  002700  EFC5  F014         	goto	l1376
 10002  002704                     l4722:
 10003  002704  5028               	movf	___fldiv@bexp^0,w,c
 10004  002706  A4D8               	btfss	status,2,c
 10005  002708  EF88  F013         	goto	u4811
 10006  00270C  EF8A  F013         	goto	u4810
 10007  002710                     u4811:
 10008  002710  EF94  F013         	goto	l4730
 10009  002714                     u4810:
 10010  002714  0E00               	movlw	0
 10011  002716  6E11               	movwf	?___fldiv^0,c
 10012  002718  0E00               	movlw	0
 10013  00271A  6E12               	movwf	(?___fldiv+1)^0,c
 10014  00271C  0E00               	movlw	0
 10015  00271E  6E13               	movwf	(?___fldiv+2)^0,c
 10016  002720  0E00               	movlw	0
 10017  002722  6E14               	movwf	(?___fldiv+3)^0,c
 10018  002724  EFC5  F014         	goto	l1376
 10019  002728                     l4730:
 10020  002728  5029               	movf	___fldiv@aexp^0,w,c
 10021  00272A  C028  F019         	movff	___fldiv@bexp,??___fldiv
 10022  00272E  6A1A               	clrf	(??___fldiv+1)^0,c
 10023  002730  5E19               	subwf	??___fldiv^0,f,c
 10024  002732  0E00               	movlw	0
 10025  002734  5A1A               	subwfb	(??___fldiv+1)^0,f,c
 10026  002736  0E7F               	movlw	127
 10027  002738  2419               	addwf	??___fldiv^0,w,c
 10028  00273A  6E22               	movwf	___fldiv@new_exp^0,c
 10029  00273C  0E00               	movlw	0
 10030  00273E  201A               	addwfc	(??___fldiv+1)^0,w,c
 10031  002740  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10032  002742  C011  F01D         	movff	___fldiv@b,___fldiv@rem
 10033  002746  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
 10034  00274A  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
 10035  00274E  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
 10036  002752  0E00               	movlw	0
 10037  002754  6E11               	movwf	___fldiv@b^0,c
 10038  002756  0E00               	movlw	0
 10039  002758  6E12               	movwf	(___fldiv@b+1)^0,c
 10040  00275A  0E00               	movlw	0
 10041  00275C  6E13               	movwf	(___fldiv@b+2)^0,c
 10042  00275E  0E00               	movlw	0
 10043  002760  6E14               	movwf	(___fldiv@b+3)^0,c
 10044  002762  0E00               	movlw	0
 10045  002764  6E24               	movwf	___fldiv@grs^0,c
 10046  002766  0E00               	movlw	0
 10047  002768  6E25               	movwf	(___fldiv@grs+1)^0,c
 10048  00276A  0E00               	movlw	0
 10049  00276C  6E26               	movwf	(___fldiv@grs+2)^0,c
 10050  00276E  0E00               	movlw	0
 10051  002770  6E27               	movwf	(___fldiv@grs+3)^0,c
 10052  002772  0E00               	movlw	0
 10053  002774  6E29               	movwf	___fldiv@aexp^0,c
 10054  002776  EFF5  F013         	goto	l1378
 10055  00277A                     l4740:
 10056  00277A  5029               	movf	___fldiv@aexp^0,w,c
 10057  00277C  B4D8               	btfsc	status,2,c
 10058  00277E  EFC3  F013         	goto	u4821
 10059  002782  EFC5  F013         	goto	u4820
 10060  002786                     u4821:
 10061  002786  EFDC  F013         	goto	l4748
 10062  00278A                     u4820:
 10063  00278A  90D8               	bcf	status,0,c
 10064  00278C  361D               	rlcf	___fldiv@rem^0,f,c
 10065  00278E  361E               	rlcf	(___fldiv@rem+1)^0,f,c
 10066  002790  361F               	rlcf	(___fldiv@rem+2)^0,f,c
 10067  002792  3620               	rlcf	(___fldiv@rem+3)^0,f,c
 10068  002794  90D8               	bcf	status,0,c
 10069  002796  3611               	rlcf	___fldiv@b^0,f,c
 10070  002798  3612               	rlcf	(___fldiv@b+1)^0,f,c
 10071  00279A  3613               	rlcf	(___fldiv@b+2)^0,f,c
 10072  00279C  3614               	rlcf	(___fldiv@b+3)^0,f,c
 10073  00279E  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10074  0027A0  EFD4  F013         	goto	u4831
 10075  0027A4  EFD6  F013         	goto	u4830
 10076  0027A8                     u4831:
 10077  0027A8  EFD7  F013         	goto	l1381
 10078  0027AC                     u4830:
 10079  0027AC  8011               	bsf	___fldiv@b^0,0,c
 10080  0027AE                     l1381:
 10081  0027AE  90D8               	bcf	status,0,c
 10082  0027B0  3624               	rlcf	___fldiv@grs^0,f,c
 10083  0027B2  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 10084  0027B4  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 10085  0027B6  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 10086  0027B8                     l4748:
 10087  0027B8  5015               	movf	___fldiv@a^0,w,c
 10088  0027BA  5C1D               	subwf	___fldiv@rem^0,w,c
 10089  0027BC  5016               	movf	(___fldiv@a+1)^0,w,c
 10090  0027BE  581E               	subwfb	(___fldiv@rem+1)^0,w,c
 10091  0027C0  5017               	movf	(___fldiv@a+2)^0,w,c
 10092  0027C2  581F               	subwfb	(___fldiv@rem+2)^0,w,c
 10093  0027C4  5018               	movf	(___fldiv@a+3)^0,w,c
 10094  0027C6  5820               	subwfb	(___fldiv@rem+3)^0,w,c
 10095  0027C8  A0D8               	btfss	status,0,c
 10096  0027CA  EFE9  F013         	goto	u4841
 10097  0027CE  EFEB  F013         	goto	u4840
 10098  0027D2                     u4841:
 10099  0027D2  EFF4  F013         	goto	l4754
 10100  0027D6                     u4840:
 10101  0027D6  8C27               	bsf	(___fldiv@grs+3)^0,6,c
 10102  0027D8  5015               	movf	___fldiv@a^0,w,c
 10103  0027DA  5E1D               	subwf	___fldiv@rem^0,f,c
 10104  0027DC  5016               	movf	(___fldiv@a+1)^0,w,c
 10105  0027DE  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
 10106  0027E0  5017               	movf	(___fldiv@a+2)^0,w,c
 10107  0027E2  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
 10108  0027E4  5018               	movf	(___fldiv@a+3)^0,w,c
 10109  0027E6  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
 10110  0027E8                     l4754:
 10111  0027E8  2A29               	incf	___fldiv@aexp^0,f,c
 10112  0027EA                     l1378:
 10113  0027EA  0E19               	movlw	25
 10114  0027EC  6429               	cpfsgt	___fldiv@aexp^0,c
 10115  0027EE  EFFB  F013         	goto	u4851
 10116  0027F2  EFFD  F013         	goto	u4850
 10117  0027F6                     u4851:
 10118  0027F6  EFBD  F013         	goto	l4740
 10119  0027FA                     u4850:
 10120  0027FA  501D               	movf	___fldiv@rem^0,w,c
 10121  0027FC  101E               	iorwf	(___fldiv@rem+1)^0,w,c
 10122  0027FE  101F               	iorwf	(___fldiv@rem+2)^0,w,c
 10123  002800  1020               	iorwf	(___fldiv@rem+3)^0,w,c
 10124  002802  B4D8               	btfsc	status,2,c
 10125  002804  EF06  F014         	goto	u4861
 10126  002808  EF08  F014         	goto	u4860
 10127  00280C                     u4861:
 10128  00280C  EF20  F014         	goto	l4766
 10129  002810                     u4860:
 10130  002810  8024               	bsf	___fldiv@grs^0,0,c
 10131  002812  EF20  F014         	goto	l4766
 10132  002816                     l4760:
 10133  002816  90D8               	bcf	status,0,c
 10134  002818  3611               	rlcf	___fldiv@b^0,f,c
 10135  00281A  3612               	rlcf	(___fldiv@b+1)^0,f,c
 10136  00281C  3613               	rlcf	(___fldiv@b+2)^0,f,c
 10137  00281E  3614               	rlcf	(___fldiv@b+3)^0,f,c
 10138  002820  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10139  002822  EF15  F014         	goto	u4871
 10140  002826  EF17  F014         	goto	u4870
 10141  00282A                     u4871:
 10142  00282A  EF18  F014         	goto	l1387
 10143  00282E                     u4870:
 10144  00282E  8011               	bsf	___fldiv@b^0,0,c
 10145  002830                     l1387:
 10146  002830  90D8               	bcf	status,0,c
 10147  002832  3624               	rlcf	___fldiv@grs^0,f,c
 10148  002834  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 10149  002836  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 10150  002838  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 10151  00283A  0622               	decf	___fldiv@new_exp^0,f,c
 10152  00283C  A0D8               	btfss	status,0,c
 10153  00283E  0623               	decf	(___fldiv@new_exp+1)^0,f,c
 10154  002840                     l4766:
 10155  002840  AE13               	btfss	(___fldiv@b+2)^0,7,c
 10156  002842  EF25  F014         	goto	u4881
 10157  002846  EF27  F014         	goto	u4880
 10158  00284A                     u4881:
 10159  00284A  EF0B  F014         	goto	l4760
 10160  00284E                     u4880:
 10161  00284E  0E00               	movlw	0
 10162  002850  6E29               	movwf	___fldiv@aexp^0,c
 10163  002852  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10164  002854  EF2E  F014         	goto	u4891
 10165  002858  EF30  F014         	goto	u4890
 10166  00285C                     u4891:
 10167  00285C  EF54  F014         	goto	l1389
 10168  002860                     u4890:
 10169  002860  0EFF               	movlw	255
 10170  002862  1424               	andwf	___fldiv@grs^0,w,c
 10171  002864  6E19               	movwf	??___fldiv^0,c
 10172  002866  0EFF               	movlw	255
 10173  002868  1425               	andwf	(___fldiv@grs+1)^0,w,c
 10174  00286A  6E1A               	movwf	(??___fldiv+1)^0,c
 10175  00286C  0EFF               	movlw	255
 10176  00286E  1426               	andwf	(___fldiv@grs+2)^0,w,c
 10177  002870  6E1B               	movwf	(??___fldiv+2)^0,c
 10178  002872  0E7F               	movlw	127
 10179  002874  1427               	andwf	(___fldiv@grs+3)^0,w,c
 10180  002876  6E1C               	movwf	(??___fldiv+3)^0,c
 10181  002878  5019               	movf	??___fldiv^0,w,c
 10182  00287A  101A               	iorwf	(??___fldiv+1)^0,w,c
 10183  00287C  101B               	iorwf	(??___fldiv+2)^0,w,c
 10184  00287E  101C               	iorwf	(??___fldiv+3)^0,w,c
 10185  002880  B4D8               	btfsc	status,2,c
 10186  002882  EF45  F014         	goto	u4901
 10187  002886  EF47  F014         	goto	u4900
 10188  00288A                     u4901:
 10189  00288A  EF4B  F014         	goto	l1390
 10190  00288E                     u4900:
 10191  00288E                     l4774:
 10192  00288E  0E01               	movlw	1
 10193  002890  6E29               	movwf	___fldiv@aexp^0,c
 10194  002892  EF54  F014         	goto	l1389
 10195  002896                     l1390:
 10196  002896  A011               	btfss	___fldiv@b^0,0,c
 10197  002898  EF50  F014         	goto	u4911
 10198  00289C  EF52  F014         	goto	u4910
 10199  0028A0                     u4911:
 10200  0028A0  EF54  F014         	goto	l1389
 10201  0028A4                     u4910:
 10202  0028A4  EF47  F014         	goto	l4774
 10203  0028A8                     l1389:
 10204  0028A8  5029               	movf	___fldiv@aexp^0,w,c
 10205  0028AA  B4D8               	btfsc	status,2,c
 10206  0028AC  EF5A  F014         	goto	u4921
 10207  0028B0  EF5C  F014         	goto	u4920
 10208  0028B4                     u4921:
 10209  0028B4  EF80  F014         	goto	l4786
 10210  0028B8                     u4920:
 10211  0028B8  0E01               	movlw	1
 10212  0028BA  2611               	addwf	___fldiv@b^0,f,c
 10213  0028BC  0E00               	movlw	0
 10214  0028BE  2212               	addwfc	(___fldiv@b+1)^0,f,c
 10215  0028C0  2213               	addwfc	(___fldiv@b+2)^0,f,c
 10216  0028C2  2214               	addwfc	(___fldiv@b+3)^0,f,c
 10217  0028C4  A014               	btfss	(___fldiv@b+3)^0,0,c
 10218  0028C6  EF67  F014         	goto	u4931
 10219  0028CA  EF69  F014         	goto	u4930
 10220  0028CE                     u4931:
 10221  0028CE  EF80  F014         	goto	l4786
 10222  0028D2                     u4930:
 10223  0028D2  C011  F019         	movff	___fldiv@b,??___fldiv
 10224  0028D6  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
 10225  0028DA  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
 10226  0028DE  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
 10227  0028E2  341C               	rlcf	(??___fldiv+3)^0,w,c
 10228  0028E4  321C               	rrcf	(??___fldiv+3)^0,f,c
 10229  0028E6  321B               	rrcf	(??___fldiv+2)^0,f,c
 10230  0028E8  321A               	rrcf	(??___fldiv+1)^0,f,c
 10231  0028EA  3219               	rrcf	??___fldiv^0,f,c
 10232  0028EC  C019  F011         	movff	??___fldiv,___fldiv@b
 10233  0028F0  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
 10234  0028F4  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
 10235  0028F8  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
 10236  0028FC  4A22               	infsnz	___fldiv@new_exp^0,f,c
 10237  0028FE  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
 10238  002900                     l4786:
 10239  002900  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10240  002902  EF8B  F014         	goto	u4941
 10241  002906  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10242  002908  E108               	bnz	u4940
 10243  00290A  2822               	incf	___fldiv@new_exp^0,w,c
 10244  00290C  A0D8               	btfss	status,0,c
 10245  00290E  EF8B  F014         	goto	u4941
 10246  002912  EF8D  F014         	goto	u4940
 10247  002916                     u4941:
 10248  002916  EF98  F014         	goto	l4790
 10249  00291A                     u4940:
 10250  00291A  0E00               	movlw	0
 10251  00291C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10252  00291E  6822               	setf	___fldiv@new_exp^0,c
 10253  002920  0E00               	movlw	0
 10254  002922  6E11               	movwf	___fldiv@b^0,c
 10255  002924  0E00               	movlw	0
 10256  002926  6E12               	movwf	(___fldiv@b+1)^0,c
 10257  002928  0E00               	movlw	0
 10258  00292A  6E13               	movwf	(___fldiv@b+2)^0,c
 10259  00292C  0E00               	movlw	0
 10260  00292E  6E14               	movwf	(___fldiv@b+3)^0,c
 10261  002930                     l4790:
 10262  002930  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10263  002932  EFA5  F014         	goto	u4950
 10264  002936  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10265  002938  E106               	bnz	u4951
 10266  00293A  0422               	decf	___fldiv@new_exp^0,w,c
 10267  00293C  B0D8               	btfsc	status,0,c
 10268  00293E  EFA3  F014         	goto	u4951
 10269  002942  EFA5  F014         	goto	u4950
 10270  002946                     u4951:
 10271  002946  EFB3  F014         	goto	l4794
 10272  00294A                     u4950:
 10273  00294A  0E00               	movlw	0
 10274  00294C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10275  00294E  0E00               	movlw	0
 10276  002950  6E22               	movwf	___fldiv@new_exp^0,c
 10277  002952  0E00               	movlw	0
 10278  002954  6E11               	movwf	___fldiv@b^0,c
 10279  002956  0E00               	movlw	0
 10280  002958  6E12               	movwf	(___fldiv@b+1)^0,c
 10281  00295A  0E00               	movlw	0
 10282  00295C  6E13               	movwf	(___fldiv@b+2)^0,c
 10283  00295E  0E00               	movlw	0
 10284  002960  6E14               	movwf	(___fldiv@b+3)^0,c
 10285  002962  0E00               	movlw	0
 10286  002964  6E21               	movwf	___fldiv@sign^0,c
 10287  002966                     l4794:
 10288  002966  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
 10289  00296A  A028               	btfss	___fldiv@bexp^0,0,c
 10290  00296C  EFBA  F014         	goto	u4961
 10291  002970  EFBC  F014         	goto	u4960
 10292  002974                     u4961:
 10293  002974  EFBF  F014         	goto	l4800
 10294  002978                     u4960:
 10295  002978  8E13               	bsf	(___fldiv@b+2)^0,7,c
 10296  00297A  EFC0  F014         	goto	l4802
 10297  00297E                     l4800:
 10298  00297E  9E13               	bcf	(___fldiv@b+2)^0,7,c
 10299  002980                     l4802:
 10300  002980  90D8               	bcf	status,0,c
 10301  002982  3028               	rrcf	___fldiv@bexp^0,w,c
 10302  002984  6E14               	movwf	(___fldiv@b+3)^0,c
 10303  002986  EF76  F013         	goto	l4716
 10304  00298A                     l1376:
 10305  00298A  0012               	return		;funcret
 10306  00298C                     __end_of___fldiv:
 10307                           	callstack 0
 10308                           
 10309 ;; *************** function _LED_C *****************
 10310 ;; Defined at:
 10311 ;;		line 173 in file "color.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;Total ram usage:        2 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 2
 10332 ;; This function calls:
 10333 ;;		Nothing
 10334 ;; This function is called by:
 10335 ;;		_color_data_collection
 10336 ;;		_calibrate_white
 10337 ;;		_amb_light_measure
 10338 ;;		_distance_measure
 10339 ;;		_test_function
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           	psect	text47
 10344  00578E                     __ptext47:
 10345                           	callstack 0
 10346  00578E                     _LED_C:
 10347                           	callstack 26
 10348  00578E                     
 10349                           ;color.c: 175:     LATGbits.LATG1 = 1;
 10350  00578E  827F               	bsf	127,1,c	;volatile
 10351                           
 10352                           ;color.c: 176:     LATFbits.LATF7 = 1;
 10353  005790  8E7E               	bsf	126,7,c	;volatile
 10354                           
 10355                           ;color.c: 177:     LATAbits.LATA4 = 1;
 10356  005792  8879               	bsf	121,4,c	;volatile
 10357  005794                     
 10358                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10359  005794  0E05               	movlw	5
 10360  005796  6E04               	movwf	(??_LED_C+1)^0,c
 10361  005798  0E0F               	movlw	15
 10362  00579A  6E03               	movwf	??_LED_C^0,c
 10363  00579C  0EF1               	movlw	241
 10364  00579E                     u7187:
 10365  00579E  2EE8               	decfsz	wreg,f,c
 10366  0057A0  D7FE               	bra	u7187
 10367  0057A2  2E03               	decfsz	??_LED_C^0,f,c
 10368  0057A4  D7FC               	bra	u7187
 10369  0057A6  2E04               	decfsz	(??_LED_C+1)^0,f,c
 10370  0057A8  D7FA               	bra	u7187
 10371  0057AA  F000               	nop	
 10372  0057AC  0012               	return		;funcret
 10373  0057AE                     __end_of_LED_C:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function _pin_init *****************
 10377 ;; Defined at:
 10378 ;;		line 89 in file "movement.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		None
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used: 1
 10398 ;; Hardware stack levels required when called: 2
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_main
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text48
 10407  0057AE                     __ptext48:
 10408                           	callstack 0
 10409  0057AE                     _pin_init:
 10410                           	callstack 28
 10411  0057AE  8486               	bsf	134,2,c	;volatile
 10412                           
 10413                           ;movement.c: 91:     ANSELFbits.ANSELF2=0;
 10414  0057B0  010E               	movlb	14	; () banked
 10415  0057B2  95B4               	bcf	180,2,b	;volatile
 10416                           
 10417                           ;movement.c: 92:     TRISFbits.TRISF3=1;
 10418  0057B4  8686               	bsf	134,3,c	;volatile
 10419                           
 10420                           ;movement.c: 93:     ANSELFbits.ANSELF3=0;
 10421  0057B6  97B4               	bcf	180,3,b	;volatile
 10422                           
 10423                           ;movement.c: 98:     TRISGbits.TRISG1 = 0;
 10424  0057B8  9287               	bcf	135,1,c	;volatile
 10425                           
 10426                           ;movement.c: 99:     TRISFbits.TRISF7 = 0;
 10427  0057BA  9E86               	bcf	134,7,c	;volatile
 10428                           
 10429                           ;movement.c: 100:     TRISAbits.TRISA4 = 0;
 10430  0057BC  9881               	bcf	129,4,c	;volatile
 10431                           
 10432                           ;movement.c: 101:     LATGbits.LATG1 = 1;
 10433  0057BE  827F               	bsf	127,1,c	;volatile
 10434                           
 10435                           ;movement.c: 102:     LATFbits.LATF7 = 1;
 10436  0057C0  8E7E               	bsf	126,7,c	;volatile
 10437                           
 10438                           ;movement.c: 103:     LATAbits.LATA4 = 1;
 10439  0057C2  8879               	bsf	121,4,c	;volatile
 10440                           
 10441                           ;movement.c: 106:     TRISDbits.TRISD7 = 0;
 10442  0057C4  9E84               	bcf	132,7,c	;volatile
 10443                           
 10444                           ;movement.c: 107:     LATDbits.LATD7 = 0;
 10445  0057C6  9E7C               	bcf	124,7,c	;volatile
 10446                           
 10447                           ;movement.c: 108:     TRISHbits.TRISH3 = 0;
 10448  0057C8  9688               	bcf	136,3,c	;volatile
 10449                           
 10450                           ;movement.c: 109:     LATHbits.LATH3 = 0;
 10451  0057CA  9680               	bcf	128,3,c	;volatile
 10452  0057CC                     
 10453                           ; BSR set to: 14
 10454  0057CC  0012               	return		;funcret
 10455  0057CE                     __end_of_pin_init:
 10456                           	callstack 0
 10457                           
 10458 ;; *************** function _initUSART4 *****************
 10459 ;; Defined at:
 10460 ;;		line 4 in file "serial.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;		None
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;Total ram usage:        0 bytes
 10479 ;; Hardware stack levels used: 1
 10480 ;; Hardware stack levels required when called: 2
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_main
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text49
 10489  0057EE                     __ptext49:
 10490                           	callstack 0
 10491  0057EE                     _initUSART4:
 10492                           	callstack 28
 10493  0057EE                     
 10494                           ;serial.c: 8:     RC0PPS = 0x12;
 10495  0057EE  0E12               	movlw	18
 10496  0057F0  010E               	movlb	14	; () banked
 10497  0057F2  6F62               	movwf	98,b	;volatile
 10498                           
 10499                           ;serial.c: 9:     RX4PPS = 0x11;
 10500  0057F4  0E11               	movlw	17
 10501  0057F6  6F15               	movwf	21,b	;volatile
 10502  0057F8                     
 10503                           ; BSR set to: 14
 10504                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 10505  0057F8  97E9               	bcf	233,3,b	;volatile
 10506  0057FA                     
 10507                           ; BSR set to: 14
 10508                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 10509  0057FA  95E8               	bcf	232,2,b	;volatile
 10510                           
 10511                           ;serial.c: 13:     SP4BRGL = 51;
 10512  0057FC  0E33               	movlw	51
 10513  0057FE  6FE5               	movwf	229,b	;volatile
 10514                           
 10515                           ;serial.c: 15:     SP4BRGH = 0;
 10516  005800  0E00               	movlw	0
 10517  005802  6FE6               	movwf	230,b	;volatile
 10518  005804                     
 10519                           ; BSR set to: 14
 10520                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 10521  005804  89E7               	bsf	231,4,b	;volatile
 10522  005806                     
 10523                           ; BSR set to: 14
 10524                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 10525  005806  8BE8               	bsf	232,5,b	;volatile
 10526  005808                     
 10527                           ; BSR set to: 14
 10528                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 10529  005808  8FE7               	bsf	231,7,b	;volatile
 10530  00580A                     
 10531                           ; BSR set to: 14
 10532  00580A  0012               	return		;funcret
 10533  00580C                     __end_of_initUSART4:
 10534                           	callstack 0
 10535                           
 10536 ;; *************** function _initDCmotors_parameter *****************
 10537 ;; Defined at:
 10538 ;;		line 40 in file "dc_motor.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  motorL          2    2[COMRAM] PTR struct DC_motor
 10541 ;;		 -> main@motorL(10), 
 10542 ;;  motorR          2    4[COMRAM] PTR struct DC_motor
 10543 ;;		 -> main@motorR(10), 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;Total ram usage:        4 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; Hardware stack levels required when called: 2
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_main
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text50
 10570  004984                     __ptext50:
 10571                           	callstack 0
 10572  004984                     _initDCmotors_parameter:
 10573                           	callstack 28
 10574  004984                     
 10575                           ;dc_motor.c: 42:     motorL->power = 0;
 10576  004984  C003  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 10577  004988  C004  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 10578  00498C  0E00               	movlw	0
 10579  00498E  6EDF               	movwf	indf2,c
 10580  004990                     
 10581                           ;dc_motor.c: 43:     motorL->direction = 1;
 10582  004990  EE20 F001          	lfsr	2,1
 10583  004994  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10584  004996  26D9               	addwf	fsr2l,f,c
 10585  004998  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10586  00499A  22DA               	addwfc	fsr2h,f,c
 10587  00499C  0E01               	movlw	1
 10588  00499E  6EDF               	movwf	indf2,c
 10589  0049A0                     
 10590                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 10591  0049A0  EE20 F002          	lfsr	2,2
 10592  0049A4  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10593  0049A6  26D9               	addwf	fsr2l,f,c
 10594  0049A8  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10595  0049AA  22DA               	addwfc	fsr2h,f,c
 10596  0049AC  0EA3               	movlw	163
 10597  0049AE  6EDE               	movwf	postinc2,c
 10598  0049B0  0E0F               	movlw	15
 10599  0049B2  6EDD               	movwf	postdec2,c
 10600  0049B4                     
 10601                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
 10602  0049B4  EE20 F004          	lfsr	2,4
 10603  0049B8  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10604  0049BA  26D9               	addwf	fsr2l,f,c
 10605  0049BC  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10606  0049BE  22DA               	addwfc	fsr2h,f,c
 10607  0049C0  0E7D               	movlw	125
 10608  0049C2  6EDE               	movwf	postinc2,c
 10609  0049C4  0E0F               	movlw	15
 10610  0049C6  6EDD               	movwf	postdec2,c
 10611  0049C8                     
 10612                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
 10613  0049C8  EE20 F006          	lfsr	2,6
 10614  0049CC  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10615  0049CE  26D9               	addwf	fsr2l,f,c
 10616  0049D0  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10617  0049D2  22DA               	addwfc	fsr2h,f,c
 10618  0049D4  0E04               	movlw	4
 10619  0049D6  6EDF               	movwf	indf2,c
 10620  0049D8                     
 10621                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
 10622  0049D8  EE20 F007          	lfsr	2,7
 10623  0049DC  5003               	movf	initDCmotors_parameter@motorL^0,w,c
 10624  0049DE  26D9               	addwf	fsr2l,f,c
 10625  0049E0  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10626  0049E2  22DA               	addwfc	fsr2h,f,c
 10627  0049E4  0EC7               	movlw	199
 10628  0049E6  6EDE               	movwf	postinc2,c
 10629  0049E8  0E00               	movlw	0
 10630  0049EA  6EDD               	movwf	postdec2,c
 10631  0049EC                     
 10632                           ;dc_motor.c: 50:     motorR->power = 0;
 10633  0049EC  C005  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 10634  0049F0  C006  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 10635  0049F4  0E00               	movlw	0
 10636  0049F6  6EDF               	movwf	indf2,c
 10637                           
 10638                           ;dc_motor.c: 51:     motorR->direction = 1;
 10639  0049F8  EE20 F001          	lfsr	2,1
 10640  0049FC  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10641  0049FE  26D9               	addwf	fsr2l,f,c
 10642  004A00  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10643  004A02  22DA               	addwfc	fsr2h,f,c
 10644  004A04  0E01               	movlw	1
 10645  004A06  6EDF               	movwf	indf2,c
 10646                           
 10647                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 10648  004A08  EE20 F002          	lfsr	2,2
 10649  004A0C  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10650  004A0E  26D9               	addwf	fsr2l,f,c
 10651  004A10  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10652  004A12  22DA               	addwfc	fsr2h,f,c
 10653  004A14  0EA0               	movlw	160
 10654  004A16  6EDE               	movwf	postinc2,c
 10655  004A18  0E0F               	movlw	15
 10656  004A1A  6EDD               	movwf	postdec2,c
 10657                           
 10658                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
 10659  004A1C  EE20 F004          	lfsr	2,4
 10660  004A20  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10661  004A22  26D9               	addwf	fsr2l,f,c
 10662  004A24  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10663  004A26  22DA               	addwfc	fsr2h,f,c
 10664  004A28  0E7F               	movlw	127
 10665  004A2A  6EDE               	movwf	postinc2,c
 10666  004A2C  0E0F               	movlw	15
 10667  004A2E  6EDD               	movwf	postdec2,c
 10668                           
 10669                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
 10670  004A30  EE20 F006          	lfsr	2,6
 10671  004A34  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10672  004A36  26D9               	addwf	fsr2l,f,c
 10673  004A38  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10674  004A3A  22DA               	addwfc	fsr2h,f,c
 10675  004A3C  0E06               	movlw	6
 10676  004A3E  6EDF               	movwf	indf2,c
 10677                           
 10678                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
 10679  004A40  EE20 F007          	lfsr	2,7
 10680  004A44  5005               	movf	initDCmotors_parameter@motorR^0,w,c
 10681  004A46  26D9               	addwf	fsr2l,f,c
 10682  004A48  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10683  004A4A  22DA               	addwfc	fsr2h,f,c
 10684  004A4C  0EC7               	movlw	199
 10685  004A4E  6EDE               	movwf	postinc2,c
 10686  004A50  0E00               	movlw	0
 10687  004A52  6EDD               	movwf	postdec2,c
 10688  004A54  0012               	return		;funcret
 10689  004A56                     __end_of_initDCmotors_parameter:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _initDCmotorsPWM *****************
 10693 ;; Defined at:
 10694 ;;		line 10 in file "dc_motor.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  PWMperiod       2    2[COMRAM] int 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;Total ram usage:        2 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; Hardware stack levels required when called: 2
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_main
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text51
 10723  00541C                     __ptext51:
 10724                           	callstack 0
 10725  00541C                     _initDCmotorsPWM:
 10726                           	callstack 28
 10727  00541C                     
 10728                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
 10729  00541C  9485               	bcf	133,2,c	;volatile
 10730                           
 10731                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
 10732  00541E  9E83               	bcf	131,7,c	;volatile
 10733                           
 10734                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
 10735  005420  9C87               	bcf	135,6,c	;volatile
 10736                           
 10737                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
 10738  005422  9885               	bcf	133,4,c	;volatile
 10739                           
 10740                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
 10741  005424  947D               	bcf	125,2,c	;volatile
 10742                           
 10743                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
 10744  005426  9E7B               	bcf	123,7,c	;volatile
 10745                           
 10746                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
 10747  005428  9C7F               	bcf	127,6,c	;volatile
 10748                           
 10749                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
 10750  00542A  987D               	bcf	125,4,c	;volatile
 10751  00542C                     
 10752                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
 10753  00542C  50BD               	movf	189,w,c	;volatile
 10754  00542E  0B8F               	andlw	-113
 10755  005430  0930               	iorlw	48
 10756  005432  6EBD               	movwf	189,c	;volatile
 10757                           
 10758                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
 10759  005434  0EE0               	movlw	-32
 10760  005436  16BE               	andwf	190,f,c	;volatile
 10761                           
 10762                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
 10763  005438  50BF               	movf	191,w,c	;volatile
 10764  00543A  0BF0               	andlw	-16
 10765  00543C  0901               	iorlw	1
 10766  00543E  6EBF               	movwf	191,c	;volatile
 10767                           
 10768                           ;dc_motor.c: 28:     T2PR=200-1;
 10769  005440  0EC7               	movlw	199
 10770  005442  6EBC               	movwf	188,c	;volatile
 10771  005444                     
 10772                           ;dc_motor.c: 29:     T2CONbits.ON=1;
 10773  005444  8EBD               	bsf	189,7,c	;volatile
 10774                           
 10775                           ;dc_motor.c: 31:     RE2PPS=0x0A;
 10776  005446  0E0A               	movlw	10
 10777  005448  010E               	movlb	14	; () banked
 10778  00544A  6F74               	movwf	116,b	;volatile
 10779                           
 10780                           ;dc_motor.c: 32:     RC7PPS=0x0B;
 10781  00544C  0E0B               	movlw	11
 10782  00544E  6F69               	movwf	105,b	;volatile
 10783                           
 10784                           ;dc_motor.c: 34:     PWM6DCH=0;
 10785  005450  0E00               	movlw	0
 10786  005452  6EA3               	movwf	163,c	;volatile
 10787                           
 10788                           ;dc_motor.c: 35:     PWM7DCH=0;
 10789  005454  0E00               	movlw	0
 10790  005456  6EA0               	movwf	160,c	;volatile
 10791  005458                     
 10792                           ; BSR set to: 14
 10793                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
 10794  005458  8EA4               	bsf	164,7,c	;volatile
 10795  00545A                     
 10796                           ; BSR set to: 14
 10797                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
 10798  00545A  8EA1               	bsf	161,7,c	;volatile
 10799  00545C                     
 10800                           ; BSR set to: 14
 10801  00545C  0012               	return		;funcret
 10802  00545E                     __end_of_initDCmotorsPWM:
 10803                           	callstack 0
 10804                           
 10805 ;; *************** function _color_click_init *****************
 10806 ;; Defined at:
 10807 ;;		line 67 in file "color.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;		None
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;		None
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1    wreg      void 
 10814 ;; Registers used:
 10815 ;;		wreg, status,2, status,0, cstack
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10825 ;;Total ram usage:        1 bytes
 10826 ;; Hardware stack levels used: 1
 10827 ;; Hardware stack levels required when called: 5
 10828 ;; This function calls:
 10829 ;;		_I2C_2_Master_Init
 10830 ;;		_color_writetoaddr
 10831 ;; This function is called by:
 10832 ;;		_main
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text52
 10837  005604                     __ptext52:
 10838                           	callstack 0
 10839  005604                     _color_click_init:
 10840                           	callstack 25
 10841  005604                     
 10842                           ;color.c: 70:     I2C_2_Master_Init();
 10843  005604  EC4B  F02B         	call	_I2C_2_Master_Init	;wreg free
 10844  005608                     
 10845                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
 10846  005608  0E01               	movlw	1
 10847  00560A  6E05               	movwf	color_writetoaddr@value^0,c
 10848  00560C  0E00               	movlw	0
 10849  00560E  ECE7  F02B         	call	_color_writetoaddr
 10850  005612                     
 10851                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10852  005612  0E3F               	movlw	63
 10853  005614  6E07               	movwf	??_color_click_init^0,c
 10854  005616  0E55               	movlw	85
 10855  005618                     u7197:
 10856  005618  2EE8               	decfsz	wreg,f,c
 10857  00561A  D7FE               	bra	u7197
 10858  00561C  2E07               	decfsz	??_color_click_init^0,f,c
 10859  00561E  D7FC               	bra	u7197
 10860  005620  F000               	nop	
 10861  005622                     
 10862                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
 10863  005622  0E03               	movlw	3
 10864  005624  6E05               	movwf	color_writetoaddr@value^0,c
 10865  005626  0E00               	movlw	0
 10866  005628  ECE7  F02B         	call	_color_writetoaddr
 10867  00562C                     
 10868                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
 10869  00562C  0ED5               	movlw	213
 10870  00562E  6E05               	movwf	color_writetoaddr@value^0,c
 10871  005630  0E01               	movlw	1
 10872  005632  ECE7  F02B         	call	_color_writetoaddr
 10873  005636  0012               	return		;funcret
 10874  005638                     __end_of_color_click_init:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _color_writetoaddr *****************
 10878 ;; Defined at:
 10879 ;;		line 83 in file "color.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  address         1    wreg     unsigned char 
 10882 ;;  value           1    4[COMRAM] unsigned char 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  address         1    5[COMRAM] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10894 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;Total ram usage:        2 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 4
 10901 ;; This function calls:
 10902 ;;		_I2C_2_Master_Start
 10903 ;;		_I2C_2_Master_Stop
 10904 ;;		_I2C_2_Master_Write
 10905 ;; This function is called by:
 10906 ;;		_color_click_init
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text53
 10911  0057CE                     __ptext53:
 10912                           	callstack 0
 10913  0057CE                     _color_writetoaddr:
 10914                           	callstack 25
 10915                           
 10916                           ;incstack = 0
 10917                           ;color_writetoaddr@address stored from wreg
 10918  0057CE  6E06               	movwf	color_writetoaddr@address^0,c
 10919  0057D0                     
 10920                           ;color.c: 84:     I2C_2_Master_Start();
 10921  0057D0  EC42  F02C         	call	_I2C_2_Master_Start	;wreg free
 10922                           
 10923                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
 10924  0057D4  0E52               	movlw	82
 10925  0057D6  EC2C  F02C         	call	_I2C_2_Master_Write
 10926                           
 10927                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
 10928  0057DA  5006               	movf	color_writetoaddr@address^0,w,c
 10929  0057DC  0980               	iorlw	128
 10930  0057DE  EC2C  F02C         	call	_I2C_2_Master_Write
 10931                           
 10932                           ;color.c: 87:     I2C_2_Master_Write(value);
 10933  0057E2  5005               	movf	color_writetoaddr@value^0,w,c
 10934  0057E4  EC2C  F02C         	call	_I2C_2_Master_Write
 10935                           
 10936                           ;color.c: 88:     I2C_2_Master_Stop();
 10937  0057E8  EC3D  F02C         	call	_I2C_2_Master_Stop	;wreg free
 10938  0057EC  0012               	return		;funcret
 10939  0057EE                     __end_of_color_writetoaddr:
 10940                           	callstack 0
 10941                           
 10942 ;; *************** function _I2C_2_Master_Write *****************
 10943 ;; Defined at:
 10944 ;;		line 45 in file "i2c.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  data_byte       1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  data_byte       1    3[COMRAM] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0, cstack
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10962 ;;Total ram usage:        1 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; Hardware stack levels required when called: 3
 10965 ;; This function calls:
 10966 ;;		_I2C_2_Master_Idle
 10967 ;; This function is called by:
 10968 ;;		_color_writetoaddr
 10969 ;;		_color_read_Red
 10970 ;;		_color_read_Blue
 10971 ;;		_color_read_Green
 10972 ;;		_color_read_Clear
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text54
 10977  005858                     __ptext54:
 10978                           	callstack 0
 10979  005858                     _I2C_2_Master_Write:
 10980                           	callstack 23
 10981                           
 10982                           ;incstack = 0
 10983                           ;I2C_2_Master_Write@data_byte stored from wreg
 10984  005858  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
 10985  00585A                     
 10986                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10987  00585A  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10988  00585E                     
 10989                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10990  00585E  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10991  005862  0012               	return		;funcret
 10992  005864                     __end_of_I2C_2_Master_Write:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _I2C_2_Master_Stop *****************
 10996 ;; Defined at:
 10997 ;;		line 39 in file "i2c.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 3
 11018 ;; This function calls:
 11019 ;;		_I2C_2_Master_Idle
 11020 ;; This function is called by:
 11021 ;;		_color_writetoaddr
 11022 ;;		_color_read_Red
 11023 ;;		_color_read_Blue
 11024 ;;		_color_read_Green
 11025 ;;		_color_read_Clear
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text55
 11030  00587A                     __ptext55:
 11031                           	callstack 0
 11032  00587A                     _I2C_2_Master_Stop:
 11033                           	callstack 23
 11034  00587A                     
 11035                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11036  00587A  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
 11037  00587E                     
 11038                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11039  00587E  010E               	movlb	14	; () banked
 11040  005880  85DA               	bsf	218,2,b	;volatile
 11041  005882                     
 11042                           ; BSR set to: 14
 11043  005882  0012               	return		;funcret
 11044  005884                     __end_of_I2C_2_Master_Stop:
 11045                           	callstack 0
 11046                           
 11047 ;; *************** function _I2C_2_Master_Start *****************
 11048 ;; Defined at:
 11049 ;;		line 27 in file "i2c.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used: 1
 11069 ;; Hardware stack levels required when called: 3
 11070 ;; This function calls:
 11071 ;;		_I2C_2_Master_Idle
 11072 ;; This function is called by:
 11073 ;;		_color_writetoaddr
 11074 ;;		_color_read_Red
 11075 ;;		_color_read_Blue
 11076 ;;		_color_read_Green
 11077 ;;		_color_read_Clear
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text56
 11082  005884                     __ptext56:
 11083                           	callstack 0
 11084  005884                     _I2C_2_Master_Start:
 11085                           	callstack 23
 11086  005884                     
 11087                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11088  005884  EC60  F02B         	call	_I2C_2_Master_Idle	;wreg free
 11089  005888                     
 11090                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11091  005888  010E               	movlb	14	; () banked
 11092  00588A  81DA               	bsf	218,0,b	;volatile
 11093  00588C                     
 11094                           ; BSR set to: 14
 11095  00588C  0012               	return		;funcret
 11096  00588E                     __end_of_I2C_2_Master_Start:
 11097                           	callstack 0
 11098                           
 11099 ;; *************** function _I2C_2_Master_Idle *****************
 11100 ;; Defined at:
 11101 ;;		line 22 in file "i2c.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;		None
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;		None
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  1    wreg      void 
 11108 ;; Registers used:
 11109 ;;		wreg, status,2, status,0
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;Total ram usage:        1 bytes
 11120 ;; Hardware stack levels used: 1
 11121 ;; Hardware stack levels required when called: 2
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_I2C_2_Master_Start
 11126 ;;		_I2C_2_Master_RepStart
 11127 ;;		_I2C_2_Master_Stop
 11128 ;;		_I2C_2_Master_Write
 11129 ;;		_I2C_2_Master_Read
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text57
 11134  0056C0                     __ptext57:
 11135                           	callstack 0
 11136  0056C0                     _I2C_2_Master_Idle:
 11137                           	callstack 23
 11138  0056C0                     l214:
 11139  0056C0  010E               	movlb	14	; () banked
 11140  0056C2  B5D8               	btfsc	216,2,b	;volatile
 11141  0056C4  EF66  F02B         	goto	u3311
 11142  0056C8  EF68  F02B         	goto	u3310
 11143  0056CC                     u3311:
 11144  0056CC  EF60  F02B         	goto	l214
 11145  0056D0                     u3310:
 11146  0056D0                     
 11147                           ; BSR set to: 14
 11148  0056D0  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11149  0056D4  0E1F               	movlw	31
 11150  0056D6  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
 11151  0056D8  A4D8               	btfss	status,2,c
 11152  0056DA  EF71  F02B         	goto	u3321
 11153  0056DE  EF73  F02B         	goto	u3320
 11154  0056E2                     u3321:
 11155  0056E2  EF60  F02B         	goto	l214
 11156  0056E6                     u3320:
 11157  0056E6                     
 11158                           ; BSR set to: 14
 11159  0056E6  0012               	return		;funcret
 11160  0056E8                     __end_of_I2C_2_Master_Idle:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function _I2C_2_Master_Init *****************
 11164 ;; Defined at:
 11165 ;;		line 4 in file "i2c.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;		None
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11183 ;;Total ram usage:        0 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; Hardware stack levels required when called: 2
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_color_click_init
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text58
 11195  005696                     __ptext58:
 11196                           	callstack 0
 11197  005696                     _I2C_2_Master_Init:
 11198                           	callstack 27
 11199  005696                     
 11200                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11201  005696  010E               	movlb	14	; () banked
 11202  005698  51D9               	movf	217,w,b	;volatile
 11203  00569A  0BF0               	andlw	-16
 11204  00569C  0908               	iorlw	8
 11205  00569E  6FD9               	movwf	217,b	;volatile
 11206  0056A0                     
 11207                           ; BSR set to: 14
 11208                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11209  0056A0  8BD9               	bsf	217,5,b	;volatile
 11210                           
 11211                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11212  0056A2  0E9F               	movlw	159
 11213  0056A4  6FD6               	movwf	214,b	;volatile
 11214  0056A6                     
 11215                           ; BSR set to: 14
 11216                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11217  0056A6  8A84               	bsf	132,5,c	;volatile
 11218  0056A8                     
 11219                           ; BSR set to: 14
 11220                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11221  0056A8  8C84               	bsf	132,6,c	;volatile
 11222  0056AA                     
 11223                           ; BSR set to: 14
 11224                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11225  0056AA  9BA7               	bcf	167,5,b	;volatile
 11226  0056AC                     
 11227                           ; BSR set to: 14
 11228                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11229  0056AC  9DA7               	bcf	167,6,b	;volatile
 11230                           
 11231                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11232  0056AE  0E1D               	movlw	29
 11233  0056B0  6F1D               	movwf	29,b	;volatile
 11234                           
 11235                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11236  0056B2  0E1E               	movlw	30
 11237  0056B4  6F1C               	movwf	28,b	;volatile
 11238                           
 11239                           ;i2c.c: 18:   RD5PPS=0x1C;
 11240  0056B6  0E1C               	movlw	28
 11241  0056B8  6F6F               	movwf	111,b	;volatile
 11242                           
 11243                           ;i2c.c: 19:   RD6PPS=0x1B;
 11244  0056BA  0E1B               	movlw	27
 11245  0056BC  6F70               	movwf	112,b	;volatile
 11246  0056BE                     
 11247                           ; BSR set to: 14
 11248  0056BE  0012               	return		;funcret
 11249  0056C0                     __end_of_I2C_2_Master_Init:
 11250                           	callstack 0
 11251                           
 11252 ;; *************** function _buggylight_init *****************
 11253 ;; Defined at:
 11254 ;;		line 13 in file "color.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		None
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;Total ram usage:        0 bytes
 11273 ;; Hardware stack levels used: 1
 11274 ;; Hardware stack levels required when called: 2
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_main
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text59
 11283  005842                     __ptext59:
 11284                           	callstack 0
 11285  005842                     _buggylight_init:
 11286                           	callstack 28
 11287  005842                     
 11288                           ;color.c: 15:     TRISHbits.TRISH1=0;
 11289  005842  9288               	bcf	136,1,c	;volatile
 11290                           
 11291                           ;color.c: 16:     TRISDbits.TRISD4=0;
 11292  005844  9884               	bcf	132,4,c	;volatile
 11293                           
 11294                           ;color.c: 17:     TRISDbits.TRISD3=0;
 11295  005846  9684               	bcf	132,3,c	;volatile
 11296                           
 11297                           ;color.c: 18:     TRISFbits.TRISF0=0;
 11298  005848  9086               	bcf	134,0,c	;volatile
 11299                           
 11300                           ;color.c: 19:     TRISHbits.TRISH0=0;
 11301  00584A  9088               	bcf	136,0,c	;volatile
 11302                           
 11303                           ;color.c: 21:     LATHbits.LATH1 = 0;
 11304  00584C  9280               	bcf	128,1,c	;volatile
 11305                           
 11306                           ;color.c: 22:     LATDbits.LATD4 = 0;
 11307  00584E  987C               	bcf	124,4,c	;volatile
 11308                           
 11309                           ;color.c: 23:     LATDbits.LATD3 = 0;
 11310  005850  967C               	bcf	124,3,c	;volatile
 11311                           
 11312                           ;color.c: 24:     LATFbits.LATF0 = 0;
 11313  005852  907E               	bcf	126,0,c	;volatile
 11314                           
 11315                           ;color.c: 25:     LATHbits.LATH0 = 0;
 11316  005854  9080               	bcf	128,0,c	;volatile
 11317  005856  0012               	return		;funcret
 11318  005858                     __end_of_buggylight_init:
 11319                           	callstack 0
 11320                           
 11321 ;; *************** function _action *****************
 11322 ;; Defined at:
 11323 ;;		line 18 in file "movement.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  color           1    wreg     unsigned char 
 11326 ;;  mL              2   59[COMRAM] PTR struct DC_motor
 11327 ;;		 -> main@motorL(10), 
 11328 ;;  mR              2   61[COMRAM] PTR struct DC_motor
 11329 ;;		 -> main@motorR(10), 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  color           1   65[COMRAM] unsigned char 
 11332 ;; Return value:  Size  Location     Type
 11333 ;;                  1    wreg      void 
 11334 ;; Registers used:
 11335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/0
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11345 ;;Total ram usage:        7 bytes
 11346 ;; Hardware stack levels used: 1
 11347 ;; Hardware stack levels required when called: 8
 11348 ;; This function calls:
 11349 ;;		_goback
 11350 ;;		_reverse_square
 11351 ;;		_short_reverse
 11352 ;;		_stop
 11353 ;;		_turnLeft
 11354 ;;		_turnRight
 11355 ;; This function is called by:
 11356 ;;		_main
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text60
 11361  00298C                     __ptext60:
 11362                           	callstack 0
 11363  00298C                     _action:
 11364                           	callstack 22
 11365                           
 11366                           ;incstack = 0
 11367                           ;action@color stored from wreg
 11368  00298C  6E42               	movwf	action@color^0,c
 11369  00298E                     
 11370                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 21:     if (color != 0){
 11371  00298E  5042               	movf	action@color^0,w,c
 11372  002990  B4D8               	btfsc	status,2,c
 11373  002992  EFCD  F014         	goto	u5481
 11374  002996  EFCF  F014         	goto	u5480
 11375  00299A                     u5481:
 11376  00299A  EF42  F016         	goto	l637
 11377  00299E                     u5480:
 11378  00299E                     
 11379                           ;movement.c: 22:         T0CON0bits.T0EN=0;
 11380  00299E  9ED5               	bcf	213,7,c	;volatile
 11381                           
 11382                           ;movement.c: 23:         stop_move = second;
 11383  0029A0  C160  F15C         	movff	_second,_stop_move
 11384  0029A4  C161  F15D         	movff	_second+1,_stop_move+1
 11385  0029A8                     
 11386                           ;movement.c: 24:         memory[array_index] = (start_move-stop_move);
 11387  0029A8  0101               	movlb	1	; () banked
 11388  0029AA  515C               	movf	_stop_move& (0+255),w,b
 11389  0029AC  5D5E               	subwf	_start_move& (0+255),w,b
 11390  0029AE  6E40               	movwf	??_action^0,c
 11391  0029B0  515D               	movf	(_stop_move+1)& (0+255),w,b
 11392  0029B2  595F               	subwfb	(_start_move+1)& (0+255),w,b
 11393  0029B4  6E41               	movwf	(??_action+1)^0,c
 11394  0029B6  505A               	movf	_array_index^0,w,c
 11395  0029B8  0D02               	mullw	2
 11396  0029BA  0E00               	movlw	low _memory
 11397  0029BC  24F3               	addwf	243,w,c
 11398  0029BE  6ED9               	movwf	fsr2l,c
 11399  0029C0  0E01               	movlw	high _memory
 11400  0029C2  20F4               	addwfc	prodh,w,c
 11401  0029C4  6EDA               	movwf	fsr2h,c
 11402  0029C6  C040  FFDE         	movff	??_action,postinc2
 11403  0029CA  C041  FFDD         	movff	??_action+1,postdec2
 11404  0029CE                     
 11405                           ; BSR set to: 1
 11406                           ;movement.c: 25:         array_index++;
 11407  0029CE  2A5A               	incf	_array_index^0,f,c
 11408  0029D0                     
 11409                           ; BSR set to: 1
 11410                           ;movement.c: 26:         stop(mL,mR);
 11411  0029D0  C03C  F01C         	movff	action@mL,stop@mL
 11412  0029D4  C03D  F01D         	movff	action@mL+1,stop@mL+1
 11413  0029D8  C03E  F01E         	movff	action@mR,stop@mR
 11414  0029DC  C03F  F01F         	movff	action@mR+1,stop@mR+1
 11415  0029E0  EC17  F027         	call	_stop	;wreg free
 11416  0029E4                     
 11417                           ;movement.c: 27:         if (color == 1){
 11418  0029E4  0442               	decf	action@color^0,w,c
 11419  0029E6  A4D8               	btfss	status,2,c
 11420  0029E8  EFF8  F014         	goto	u5491
 11421  0029EC  EFFA  F014         	goto	u5490
 11422  0029F0                     u5491:
 11423  0029F0  EF1D  F015         	goto	l5392
 11424  0029F4                     u5490:
 11425  0029F4                     
 11426                           ;movement.c: 28:             short_reverse(mL,mR);
 11427  0029F4  C03C  F028         	movff	action@mL,short_reverse@mL
 11428  0029F8  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11429  0029FC  C03E  F02A         	movff	action@mR,short_reverse@mR
 11430  002A00  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11431  002A04  EC2F  F02A         	call	_short_reverse	;wreg free
 11432                           
 11433                           ;movement.c: 29:             turnRight(mL,mR,90);
 11434  002A08  C03C  F022         	movff	action@mL,turnRight@mL
 11435  002A0C  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11436  002A10  C03E  F024         	movff	action@mR,turnRight@mR
 11437  002A14  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11438  002A18  0E5A               	movlw	90
 11439  002A1A  6E26               	movwf	turnRight@angle_right^0,c
 11440  002A1C  EC52  F020         	call	_turnRight	;wreg free
 11441  002A20                     
 11442                           ;movement.c: 30:             memory[array_index] = 1;
 11443  002A20  505A               	movf	_array_index^0,w,c
 11444  002A22  0D02               	mullw	2
 11445  002A24  0E00               	movlw	low _memory
 11446  002A26  24F3               	addwf	243,w,c
 11447  002A28  6ED9               	movwf	fsr2l,c
 11448  002A2A  0E01               	movlw	high _memory
 11449  002A2C  20F4               	addwfc	prodh,w,c
 11450  002A2E  6EDA               	movwf	fsr2h,c
 11451  002A30  0E01               	movlw	1
 11452  002A32  6EDE               	movwf	postinc2,c
 11453  002A34  0E00               	movlw	0
 11454  002A36  6EDD               	movwf	postdec2,c
 11455  002A38                     
 11456                           ;movement.c: 31:             array_index++;
 11457  002A38  2A5A               	incf	_array_index^0,f,c
 11458  002A3A                     l5392:
 11459                           
 11460                           ;movement.c: 33:         if (color == 2){
 11461  002A3A  0E02               	movlw	2
 11462  002A3C  1842               	xorwf	action@color^0,w,c
 11463  002A3E  A4D8               	btfss	status,2,c
 11464  002A40  EF24  F015         	goto	u5501
 11465  002A44  EF26  F015         	goto	u5500
 11466  002A48                     u5501:
 11467  002A48  EF49  F015         	goto	l5400
 11468  002A4C                     u5500:
 11469  002A4C                     
 11470                           ;movement.c: 34:             short_reverse(mL,mR);
 11471  002A4C  C03C  F028         	movff	action@mL,short_reverse@mL
 11472  002A50  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11473  002A54  C03E  F02A         	movff	action@mR,short_reverse@mR
 11474  002A58  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11475  002A5C  EC2F  F02A         	call	_short_reverse	;wreg free
 11476                           
 11477                           ;movement.c: 35:             turnLeft(mL,mR,90);
 11478  002A60  C03C  F022         	movff	action@mL,turnLeft@mL
 11479  002A64  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11480  002A68  C03E  F024         	movff	action@mR,turnLeft@mR
 11481  002A6C  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11482  002A70  0E5A               	movlw	90
 11483  002A72  6E26               	movwf	turnLeft@angle_left^0,c
 11484  002A74  EC12  F021         	call	_turnLeft	;wreg free
 11485  002A78                     
 11486                           ;movement.c: 36:             memory[array_index] = 2;
 11487  002A78  505A               	movf	_array_index^0,w,c
 11488  002A7A  0D02               	mullw	2
 11489  002A7C  0E00               	movlw	low _memory
 11490  002A7E  24F3               	addwf	243,w,c
 11491  002A80  6ED9               	movwf	fsr2l,c
 11492  002A82  0E01               	movlw	high _memory
 11493  002A84  20F4               	addwfc	prodh,w,c
 11494  002A86  6EDA               	movwf	fsr2h,c
 11495  002A88  0E02               	movlw	2
 11496  002A8A  6EDE               	movwf	postinc2,c
 11497  002A8C  0E00               	movlw	0
 11498  002A8E  6EDD               	movwf	postdec2,c
 11499  002A90                     
 11500                           ;movement.c: 37:             array_index++;
 11501  002A90  2A5A               	incf	_array_index^0,f,c
 11502  002A92                     l5400:
 11503                           
 11504                           ;movement.c: 39:         if (color == 3){
 11505  002A92  0E03               	movlw	3
 11506  002A94  1842               	xorwf	action@color^0,w,c
 11507  002A96  A4D8               	btfss	status,2,c
 11508  002A98  EF50  F015         	goto	u5511
 11509  002A9C  EF52  F015         	goto	u5510
 11510  002AA0                     u5511:
 11511  002AA0  EF75  F015         	goto	l5408
 11512  002AA4                     u5510:
 11513  002AA4                     
 11514                           ;movement.c: 40:             short_reverse(mL,mR);
 11515  002AA4  C03C  F028         	movff	action@mL,short_reverse@mL
 11516  002AA8  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11517  002AAC  C03E  F02A         	movff	action@mR,short_reverse@mR
 11518  002AB0  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11519  002AB4  EC2F  F02A         	call	_short_reverse	;wreg free
 11520                           
 11521                           ;movement.c: 41:             turnLeft(mL,mR,180);
 11522  002AB8  C03C  F022         	movff	action@mL,turnLeft@mL
 11523  002ABC  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11524  002AC0  C03E  F024         	movff	action@mR,turnLeft@mR
 11525  002AC4  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11526  002AC8  0EB4               	movlw	180
 11527  002ACA  6E26               	movwf	turnLeft@angle_left^0,c
 11528  002ACC  EC12  F021         	call	_turnLeft	;wreg free
 11529  002AD0                     
 11530                           ;movement.c: 42:             memory[array_index] = 3;
 11531  002AD0  505A               	movf	_array_index^0,w,c
 11532  002AD2  0D02               	mullw	2
 11533  002AD4  0E00               	movlw	low _memory
 11534  002AD6  24F3               	addwf	243,w,c
 11535  002AD8  6ED9               	movwf	fsr2l,c
 11536  002ADA  0E01               	movlw	high _memory
 11537  002ADC  20F4               	addwfc	prodh,w,c
 11538  002ADE  6EDA               	movwf	fsr2h,c
 11539  002AE0  0E03               	movlw	3
 11540  002AE2  6EDE               	movwf	postinc2,c
 11541  002AE4  0E00               	movlw	0
 11542  002AE6  6EDD               	movwf	postdec2,c
 11543  002AE8                     
 11544                           ;movement.c: 43:             array_index++;
 11545  002AE8  2A5A               	incf	_array_index^0,f,c
 11546  002AEA                     l5408:
 11547                           
 11548                           ;movement.c: 45:         if (color == 4){
 11549  002AEA  0E04               	movlw	4
 11550  002AEC  1842               	xorwf	action@color^0,w,c
 11551  002AEE  A4D8               	btfss	status,2,c
 11552  002AF0  EF7C  F015         	goto	u5521
 11553  002AF4  EF7E  F015         	goto	u5520
 11554  002AF8                     u5521:
 11555  002AF8  EFA1  F015         	goto	l5416
 11556  002AFC                     u5520:
 11557  002AFC                     
 11558                           ;movement.c: 46:             reverse_square(mL,mR);
 11559  002AFC  C03C  F028         	movff	action@mL,reverse_square@mL
 11560  002B00  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11561  002B04  C03E  F02A         	movff	action@mR,reverse_square@mR
 11562  002B08  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11563  002B0C  EC50  F02A         	call	_reverse_square	;wreg free
 11564                           
 11565                           ;movement.c: 47:             turnRight(mL,mR,90);
 11566  002B10  C03C  F022         	movff	action@mL,turnRight@mL
 11567  002B14  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11568  002B18  C03E  F024         	movff	action@mR,turnRight@mR
 11569  002B1C  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11570  002B20  0E5A               	movlw	90
 11571  002B22  6E26               	movwf	turnRight@angle_right^0,c
 11572  002B24  EC52  F020         	call	_turnRight	;wreg free
 11573  002B28                     
 11574                           ;movement.c: 48:             memory[array_index] = 4;
 11575  002B28  505A               	movf	_array_index^0,w,c
 11576  002B2A  0D02               	mullw	2
 11577  002B2C  0E00               	movlw	low _memory
 11578  002B2E  24F3               	addwf	243,w,c
 11579  002B30  6ED9               	movwf	fsr2l,c
 11580  002B32  0E01               	movlw	high _memory
 11581  002B34  20F4               	addwfc	prodh,w,c
 11582  002B36  6EDA               	movwf	fsr2h,c
 11583  002B38  0E04               	movlw	4
 11584  002B3A  6EDE               	movwf	postinc2,c
 11585  002B3C  0E00               	movlw	0
 11586  002B3E  6EDD               	movwf	postdec2,c
 11587  002B40                     
 11588                           ;movement.c: 49:             array_index++;
 11589  002B40  2A5A               	incf	_array_index^0,f,c
 11590  002B42                     l5416:
 11591                           
 11592                           ;movement.c: 51:         if (color == 5){
 11593  002B42  0E05               	movlw	5
 11594  002B44  1842               	xorwf	action@color^0,w,c
 11595  002B46  A4D8               	btfss	status,2,c
 11596  002B48  EFA8  F015         	goto	u5531
 11597  002B4C  EFAA  F015         	goto	u5530
 11598  002B50                     u5531:
 11599  002B50  EFCD  F015         	goto	l5424
 11600  002B54                     u5530:
 11601  002B54                     
 11602                           ;movement.c: 52:             reverse_square(mL,mR);
 11603  002B54  C03C  F028         	movff	action@mL,reverse_square@mL
 11604  002B58  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11605  002B5C  C03E  F02A         	movff	action@mR,reverse_square@mR
 11606  002B60  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11607  002B64  EC50  F02A         	call	_reverse_square	;wreg free
 11608                           
 11609                           ;movement.c: 53:             turnLeft(mL,mR,90);
 11610  002B68  C03C  F022         	movff	action@mL,turnLeft@mL
 11611  002B6C  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11612  002B70  C03E  F024         	movff	action@mR,turnLeft@mR
 11613  002B74  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11614  002B78  0E5A               	movlw	90
 11615  002B7A  6E26               	movwf	turnLeft@angle_left^0,c
 11616  002B7C  EC12  F021         	call	_turnLeft	;wreg free
 11617  002B80                     
 11618                           ;movement.c: 54:             memory[array_index] = 5;
 11619  002B80  505A               	movf	_array_index^0,w,c
 11620  002B82  0D02               	mullw	2
 11621  002B84  0E00               	movlw	low _memory
 11622  002B86  24F3               	addwf	243,w,c
 11623  002B88  6ED9               	movwf	fsr2l,c
 11624  002B8A  0E01               	movlw	high _memory
 11625  002B8C  20F4               	addwfc	prodh,w,c
 11626  002B8E  6EDA               	movwf	fsr2h,c
 11627  002B90  0E05               	movlw	5
 11628  002B92  6EDE               	movwf	postinc2,c
 11629  002B94  0E00               	movlw	0
 11630  002B96  6EDD               	movwf	postdec2,c
 11631  002B98                     
 11632                           ;movement.c: 55:             array_index++;
 11633  002B98  2A5A               	incf	_array_index^0,f,c
 11634  002B9A                     l5424:
 11635                           
 11636                           ;movement.c: 57:         if (color == 6){
 11637  002B9A  0E06               	movlw	6
 11638  002B9C  1842               	xorwf	action@color^0,w,c
 11639  002B9E  A4D8               	btfss	status,2,c
 11640  002BA0  EFD4  F015         	goto	u5541
 11641  002BA4  EFD6  F015         	goto	u5540
 11642  002BA8                     u5541:
 11643  002BA8  EFF9  F015         	goto	l5432
 11644  002BAC                     u5540:
 11645  002BAC                     
 11646                           ;movement.c: 58:             short_reverse(mL,mR);
 11647  002BAC  C03C  F028         	movff	action@mL,short_reverse@mL
 11648  002BB0  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11649  002BB4  C03E  F02A         	movff	action@mR,short_reverse@mR
 11650  002BB8  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11651  002BBC  EC2F  F02A         	call	_short_reverse	;wreg free
 11652                           
 11653                           ;movement.c: 59:             turnRight(mL,mR,135);
 11654  002BC0  C03C  F022         	movff	action@mL,turnRight@mL
 11655  002BC4  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11656  002BC8  C03E  F024         	movff	action@mR,turnRight@mR
 11657  002BCC  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11658  002BD0  0E87               	movlw	135
 11659  002BD2  6E26               	movwf	turnRight@angle_right^0,c
 11660  002BD4  EC52  F020         	call	_turnRight	;wreg free
 11661  002BD8                     
 11662                           ;movement.c: 60:             memory[array_index] = 6;
 11663  002BD8  505A               	movf	_array_index^0,w,c
 11664  002BDA  0D02               	mullw	2
 11665  002BDC  0E00               	movlw	low _memory
 11666  002BDE  24F3               	addwf	243,w,c
 11667  002BE0  6ED9               	movwf	fsr2l,c
 11668  002BE2  0E01               	movlw	high _memory
 11669  002BE4  20F4               	addwfc	prodh,w,c
 11670  002BE6  6EDA               	movwf	fsr2h,c
 11671  002BE8  0E06               	movlw	6
 11672  002BEA  6EDE               	movwf	postinc2,c
 11673  002BEC  0E00               	movlw	0
 11674  002BEE  6EDD               	movwf	postdec2,c
 11675  002BF0                     
 11676                           ;movement.c: 61:             array_index++;
 11677  002BF0  2A5A               	incf	_array_index^0,f,c
 11678  002BF2                     l5432:
 11679                           
 11680                           ;movement.c: 63:         if (color == 7){
 11681  002BF2  0E07               	movlw	7
 11682  002BF4  1842               	xorwf	action@color^0,w,c
 11683  002BF6  A4D8               	btfss	status,2,c
 11684  002BF8  EF00  F016         	goto	u5551
 11685  002BFC  EF02  F016         	goto	u5550
 11686  002C00                     u5551:
 11687  002C00  EF25  F016         	goto	l5440
 11688  002C04                     u5550:
 11689  002C04                     
 11690                           ;movement.c: 64:             short_reverse(mL,mR);
 11691  002C04  C03C  F028         	movff	action@mL,short_reverse@mL
 11692  002C08  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11693  002C0C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11694  002C10  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11695  002C14  EC2F  F02A         	call	_short_reverse	;wreg free
 11696                           
 11697                           ;movement.c: 65:             turnLeft(mL,mR,135);
 11698  002C18  C03C  F022         	movff	action@mL,turnLeft@mL
 11699  002C1C  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11700  002C20  C03E  F024         	movff	action@mR,turnLeft@mR
 11701  002C24  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11702  002C28  0E87               	movlw	135
 11703  002C2A  6E26               	movwf	turnLeft@angle_left^0,c
 11704  002C2C  EC12  F021         	call	_turnLeft	;wreg free
 11705  002C30                     
 11706                           ;movement.c: 66:             memory[array_index] = 7;
 11707  002C30  505A               	movf	_array_index^0,w,c
 11708  002C32  0D02               	mullw	2
 11709  002C34  0E00               	movlw	low _memory
 11710  002C36  24F3               	addwf	243,w,c
 11711  002C38  6ED9               	movwf	fsr2l,c
 11712  002C3A  0E01               	movlw	high _memory
 11713  002C3C  20F4               	addwfc	prodh,w,c
 11714  002C3E  6EDA               	movwf	fsr2h,c
 11715  002C40  0E07               	movlw	7
 11716  002C42  6EDE               	movwf	postinc2,c
 11717  002C44  0E00               	movlw	0
 11718  002C46  6EDD               	movwf	postdec2,c
 11719  002C48                     
 11720                           ;movement.c: 67:             array_index++;
 11721  002C48  2A5A               	incf	_array_index^0,f,c
 11722  002C4A                     l5440:
 11723                           
 11724                           ;movement.c: 69:         if (color == 8){
 11725  002C4A  0E08               	movlw	8
 11726  002C4C  1842               	xorwf	action@color^0,w,c
 11727  002C4E  A4D8               	btfss	status,2,c
 11728  002C50  EF2C  F016         	goto	u5561
 11729  002C54  EF2E  F016         	goto	u5560
 11730  002C58                     u5561:
 11731  002C58  EF42  F016         	goto	l637
 11732  002C5C                     u5560:
 11733  002C5C                     
 11734                           ;movement.c: 70:             short_reverse(mL,mR);
 11735  002C5C  C03C  F028         	movff	action@mL,short_reverse@mL
 11736  002C60  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11737  002C64  C03E  F02A         	movff	action@mR,short_reverse@mR
 11738  002C68  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11739  002C6C  EC2F  F02A         	call	_short_reverse	;wreg free
 11740                           
 11741                           ;movement.c: 71:             goback(mL,mR);
 11742  002C70  C03C  F034         	movff	action@mL,goback@mL
 11743  002C74  C03D  F035         	movff	action@mL+1,goback@mL+1
 11744  002C78  C03E  F036         	movff	action@mR,goback@mR
 11745  002C7C  C03F  F037         	movff	action@mR+1,goback@mR+1
 11746  002C80  EC0A  F019         	call	_goback	;wreg free
 11747  002C84                     l637:
 11748  002C84  0012               	return		;funcret
 11749  002C86                     __end_of_action:
 11750                           	callstack 0
 11751                           
 11752 ;; *************** function _short_reverse *****************
 11753 ;; Defined at:
 11754 ;;		line 183 in file "dc_motor.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 11757 ;;		 -> main@motorL(10), 
 11758 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 11759 ;;		 -> main@motorR(10), 
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;Total ram usage:        6 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 6
 11778 ;; This function calls:
 11779 ;;		_fullSpeedBack
 11780 ;;		_stop
 11781 ;; This function is called by:
 11782 ;;		_action
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text61
 11787  00545E                     __ptext61:
 11788                           	callstack 0
 11789  00545E                     _short_reverse:
 11790                           	callstack 23
 11791  00545E                     
 11792                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 11793  00545E  C028  F022         	movff	short_reverse@mL,fullSpeedBack@mL
 11794  005462  C029  F023         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 11795  005466  C02A  F024         	movff	short_reverse@mR,fullSpeedBack@mR
 11796  00546A  C02B  F025         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 11797  00546E  ECB7  F026         	call	_fullSpeedBack	;wreg free
 11798  005472                     
 11799                           ;dc_motor.c: 185:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11800  005472  0E29               	movlw	41
 11801  005474  6E2D               	movwf	(??_short_reverse+1)^0,c
 11802  005476  0E96               	movlw	150
 11803  005478  6E2C               	movwf	??_short_reverse^0,c
 11804  00547A  0E7F               	movlw	127
 11805  00547C                     u7207:
 11806  00547C  2EE8               	decfsz	wreg,f,c
 11807  00547E  D7FE               	bra	u7207
 11808  005480  2E2C               	decfsz	??_short_reverse^0,f,c
 11809  005482  D7FC               	bra	u7207
 11810  005484  2E2D               	decfsz	(??_short_reverse+1)^0,f,c
 11811  005486  D7FA               	bra	u7207
 11812  005488  F000               	nop	
 11813  00548A                     
 11814                           ;dc_motor.c: 186:     stop(mL,mR);
 11815  00548A  C028  F01C         	movff	short_reverse@mL,stop@mL
 11816  00548E  C029  F01D         	movff	short_reverse@mL+1,stop@mL+1
 11817  005492  C02A  F01E         	movff	short_reverse@mR,stop@mR
 11818  005496  C02B  F01F         	movff	short_reverse@mR+1,stop@mR+1
 11819  00549A  EC17  F027         	call	_stop	;wreg free
 11820  00549E  0012               	return		;funcret
 11821  0054A0                     __end_of_short_reverse:
 11822                           	callstack 0
 11823                           
 11824 ;; *************** function _goback *****************
 11825 ;; Defined at:
 11826 ;;		line 112 in file "movement.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;  mL              2   51[COMRAM] PTR struct DC_motor
 11829 ;;		 -> main@motorL(10), 
 11830 ;;  mR              2   53[COMRAM] PTR struct DC_motor
 11831 ;;		 -> main@motorR(10), 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  i               2   57[COMRAM] unsigned int 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11847 ;;Total ram usage:        8 bytes
 11848 ;; Hardware stack levels used: 1
 11849 ;; Hardware stack levels required when called: 7
 11850 ;; This function calls:
 11851 ;;		_fullSpeedAhead
 11852 ;;		_reverse_square
 11853 ;;		_stop
 11854 ;;		_turnLeft
 11855 ;;		_turnRight
 11856 ;; This function is called by:
 11857 ;;		_action
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	text62
 11862  003214                     __ptext62:
 11863                           	callstack 0
 11864  003214                     _goback:
 11865                           	callstack 22
 11866  003214                     
 11867                           ;movement.c: 112: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 113:
      +                           { turnLeft(mL,mR,180);
 11868  003214  C034  F022         	movff	goback@mL,turnLeft@mL
 11869  003218  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11870  00321C  C036  F024         	movff	goback@mR,turnLeft@mR
 11871  003220  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11872  003224  0EB4               	movlw	180
 11873  003226  6E26               	movwf	turnLeft@angle_left^0,c
 11874  003228  EC12  F021         	call	_turnLeft	;wreg free
 11875                           
 11876                           ;movement.c: 114:     while(array_index > 0){
 11877  00322C  EF4A  F01A         	goto	l5238
 11878  003230                     l5178:
 11879                           
 11880                           ;movement.c: 115:         fullSpeedAhead(mL,mR);
 11881  003230  C034  F01C         	movff	goback@mL,fullSpeedAhead@mL
 11882  003234  C035  F01D         	movff	goback@mL+1,fullSpeedAhead@mL+1
 11883  003238  C036  F01E         	movff	goback@mR,fullSpeedAhead@mR
 11884  00323C  C037  F01F         	movff	goback@mR+1,fullSpeedAhead@mR+1
 11885  003240  ECCD  F027         	call	_fullSpeedAhead	;wreg free
 11886  003244                     
 11887                           ;movement.c: 116:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 11888  003244  0E00               	movlw	0
 11889  003246  6E3B               	movwf	(goback@i+1)^0,c
 11890  003248  0E00               	movlw	0
 11891  00324A  6E3A               	movwf	goback@i^0,c
 11892  00324C  EF36  F019         	goto	l5186
 11893  003250                     l5182:
 11894  003250  0E52               	movlw	82
 11895  003252  6E39               	movwf	(??_goback+1)^0,c
 11896  003254  0E2B               	movlw	43
 11897  003256  6E38               	movwf	??_goback^0,c
 11898  003258  0E00               	movlw	0
 11899  00325A                     u7217:
 11900  00325A  2EE8               	decfsz	wreg,f,c
 11901  00325C  D7FE               	bra	u7217
 11902  00325E  2E38               	decfsz	??_goback^0,f,c
 11903  003260  D7FC               	bra	u7217
 11904  003262  2E39               	decfsz	(??_goback+1)^0,f,c
 11905  003264  D7FA               	bra	u7217
 11906  003266  D000               	nop2	
 11907  003268  4A3A               	infsnz	goback@i^0,f,c
 11908  00326A  2A3B               	incf	(goback@i+1)^0,f,c
 11909  00326C                     l5186:
 11910  00326C  505A               	movf	_array_index^0,w,c
 11911  00326E  0D02               	mullw	2
 11912  003270  0E00               	movlw	low _memory
 11913  003272  24F3               	addwf	243,w,c
 11914  003274  6ED9               	movwf	fsr2l,c
 11915  003276  0E01               	movlw	high _memory
 11916  003278  20F4               	addwfc	prodh,w,c
 11917  00327A  6EDA               	movwf	fsr2h,c
 11918  00327C  50DE               	movf	postinc2,w,c
 11919  00327E  5C3A               	subwf	goback@i^0,w,c
 11920  003280  50DE               	movf	postinc2,w,c
 11921  003282  583B               	subwfb	(goback@i+1)^0,w,c
 11922  003284  A0D8               	btfss	status,0,c
 11923  003286  EF47  F019         	goto	u5261
 11924  00328A  EF49  F019         	goto	u5260
 11925  00328E                     u5261:
 11926  00328E  EF28  F019         	goto	l5182
 11927  003292                     u5260:
 11928  003292                     
 11929                           ;movement.c: 117:         stop(mL,mR);
 11930  003292  C034  F01C         	movff	goback@mL,stop@mL
 11931  003296  C035  F01D         	movff	goback@mL+1,stop@mL+1
 11932  00329A  C036  F01E         	movff	goback@mR,stop@mR
 11933  00329E  C037  F01F         	movff	goback@mR+1,stop@mR+1
 11934  0032A2  EC17  F027         	call	_stop	;wreg free
 11935  0032A6                     
 11936                           ;movement.c: 118:         if (array_index == 0){break;}
 11937  0032A6  505A               	movf	_array_index^0,w,c
 11938  0032A8  A4D8               	btfss	status,2,c
 11939  0032AA  EF59  F019         	goto	u5271
 11940  0032AE  EF5B  F019         	goto	u5270
 11941  0032B2                     u5271:
 11942  0032B2  EF5D  F019         	goto	l5194
 11943  0032B6                     u5270:
 11944  0032B6  EF52  F01A         	goto	l660
 11945  0032BA                     l5194:
 11946                           
 11947                           ;movement.c: 119:         array_index--;
 11948  0032BA  065A               	decf	_array_index^0,f,c
 11949  0032BC                     
 11950                           ;movement.c: 121:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 11951  0032BC  505A               	movf	_array_index^0,w,c
 11952  0032BE  0D02               	mullw	2
 11953  0032C0  0E00               	movlw	low _memory
 11954  0032C2  24F3               	addwf	243,w,c
 11955  0032C4  6ED9               	movwf	fsr2l,c
 11956  0032C6  0E01               	movlw	high _memory
 11957  0032C8  20F4               	addwfc	prodh,w,c
 11958  0032CA  6EDA               	movwf	fsr2h,c
 11959  0032CC  04DE               	decf	postinc2,w,c
 11960  0032CE  10DE               	iorwf	postinc2,w,c
 11961  0032D0  A4D8               	btfss	status,2,c
 11962  0032D2  EF6D  F019         	goto	u5281
 11963  0032D6  EF6F  F019         	goto	u5280
 11964  0032DA                     u5281:
 11965  0032DA  EF7C  F019         	goto	l5202
 11966  0032DE                     u5280:
 11967  0032DE  C034  F022         	movff	goback@mL,turnLeft@mL
 11968  0032E2  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11969  0032E6  C036  F024         	movff	goback@mR,turnLeft@mR
 11970  0032EA  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11971  0032EE  0E5A               	movlw	90
 11972  0032F0  6E26               	movwf	turnLeft@angle_left^0,c
 11973  0032F2  EC12  F021         	call	_turnLeft	;wreg free
 11974  0032F6  065A               	decf	_array_index^0,f,c
 11975  0032F8                     l5202:
 11976                           
 11977                           ;movement.c: 122:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11978  0032F8  505A               	movf	_array_index^0,w,c
 11979  0032FA  0D02               	mullw	2
 11980  0032FC  0E00               	movlw	low _memory
 11981  0032FE  24F3               	addwf	243,w,c
 11982  003300  6ED9               	movwf	fsr2l,c
 11983  003302  0E01               	movlw	high _memory
 11984  003304  20F4               	addwfc	prodh,w,c
 11985  003306  6EDA               	movwf	fsr2h,c
 11986  003308  0E02               	movlw	2
 11987  00330A  18DE               	xorwf	postinc2,w,c
 11988  00330C  10DE               	iorwf	postinc2,w,c
 11989  00330E  A4D8               	btfss	status,2,c
 11990  003310  EF8C  F019         	goto	u5291
 11991  003314  EF8E  F019         	goto	u5290
 11992  003318                     u5291:
 11993  003318  EF9B  F019         	goto	l5208
 11994  00331C                     u5290:
 11995  00331C  C034  F022         	movff	goback@mL,turnRight@mL
 11996  003320  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11997  003324  C036  F024         	movff	goback@mR,turnRight@mR
 11998  003328  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11999  00332C  0E5A               	movlw	90
 12000  00332E  6E26               	movwf	turnRight@angle_right^0,c
 12001  003330  EC52  F020         	call	_turnRight	;wreg free
 12002  003334  065A               	decf	_array_index^0,f,c
 12003  003336                     l5208:
 12004                           
 12005                           ;movement.c: 123:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 12006  003336  505A               	movf	_array_index^0,w,c
 12007  003338  0D02               	mullw	2
 12008  00333A  0E00               	movlw	low _memory
 12009  00333C  24F3               	addwf	243,w,c
 12010  00333E  6ED9               	movwf	fsr2l,c
 12011  003340  0E01               	movlw	high _memory
 12012  003342  20F4               	addwfc	prodh,w,c
 12013  003344  6EDA               	movwf	fsr2h,c
 12014  003346  0E03               	movlw	3
 12015  003348  18DE               	xorwf	postinc2,w,c
 12016  00334A  10DE               	iorwf	postinc2,w,c
 12017  00334C  A4D8               	btfss	status,2,c
 12018  00334E  EFAB  F019         	goto	u5301
 12019  003352  EFAD  F019         	goto	u5300
 12020  003356                     u5301:
 12021  003356  EFBA  F019         	goto	l5214
 12022  00335A                     u5300:
 12023  00335A  C034  F022         	movff	goback@mL,turnLeft@mL
 12024  00335E  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 12025  003362  C036  F024         	movff	goback@mR,turnLeft@mR
 12026  003366  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 12027  00336A  0EB4               	movlw	180
 12028  00336C  6E26               	movwf	turnLeft@angle_left^0,c
 12029  00336E  EC12  F021         	call	_turnLeft	;wreg free
 12030  003372  065A               	decf	_array_index^0,f,c
 12031  003374                     l5214:
 12032                           
 12033                           ;movement.c: 124:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 12034  003374  505A               	movf	_array_index^0,w,c
 12035  003376  0D02               	mullw	2
 12036  003378  0E00               	movlw	low _memory
 12037  00337A  24F3               	addwf	243,w,c
 12038  00337C  6ED9               	movwf	fsr2l,c
 12039  00337E  0E01               	movlw	high _memory
 12040  003380  20F4               	addwfc	prodh,w,c
 12041  003382  6EDA               	movwf	fsr2h,c
 12042  003384  0E04               	movlw	4
 12043  003386  18DE               	xorwf	postinc2,w,c
 12044  003388  10DE               	iorwf	postinc2,w,c
 12045  00338A  A4D8               	btfss	status,2,c
 12046  00338C  EFCA  F019         	goto	u5311
 12047  003390  EFCC  F019         	goto	u5310
 12048  003394                     u5311:
 12049  003394  EFE3  F019         	goto	l5220
 12050  003398                     u5310:
 12051  003398  C034  F028         	movff	goback@mL,reverse_square@mL
 12052  00339C  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 12053  0033A0  C036  F02A         	movff	goback@mR,reverse_square@mR
 12054  0033A4  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 12055  0033A8  EC50  F02A         	call	_reverse_square	;wreg free
 12056  0033AC  C034  F022         	movff	goback@mL,turnLeft@mL
 12057  0033B0  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 12058  0033B4  C036  F024         	movff	goback@mR,turnLeft@mR
 12059  0033B8  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 12060  0033BC  0E5A               	movlw	90
 12061  0033BE  6E26               	movwf	turnLeft@angle_left^0,c
 12062  0033C0  EC12  F021         	call	_turnLeft	;wreg free
 12063  0033C4  065A               	decf	_array_index^0,f,c
 12064  0033C6                     l5220:
 12065                           
 12066                           ;movement.c: 125:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 12067  0033C6  505A               	movf	_array_index^0,w,c
 12068  0033C8  0D02               	mullw	2
 12069  0033CA  0E00               	movlw	low _memory
 12070  0033CC  24F3               	addwf	243,w,c
 12071  0033CE  6ED9               	movwf	fsr2l,c
 12072  0033D0  0E01               	movlw	high _memory
 12073  0033D2  20F4               	addwfc	prodh,w,c
 12074  0033D4  6EDA               	movwf	fsr2h,c
 12075  0033D6  0E05               	movlw	5
 12076  0033D8  18DE               	xorwf	postinc2,w,c
 12077  0033DA  10DE               	iorwf	postinc2,w,c
 12078  0033DC  A4D8               	btfss	status,2,c
 12079  0033DE  EFF3  F019         	goto	u5321
 12080  0033E2  EFF5  F019         	goto	u5320
 12081  0033E6                     u5321:
 12082  0033E6  EF0C  F01A         	goto	l5226
 12083  0033EA                     u5320:
 12084  0033EA  C034  F028         	movff	goback@mL,reverse_square@mL
 12085  0033EE  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 12086  0033F2  C036  F02A         	movff	goback@mR,reverse_square@mR
 12087  0033F6  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 12088  0033FA  EC50  F02A         	call	_reverse_square	;wreg free
 12089  0033FE  C034  F022         	movff	goback@mL,turnRight@mL
 12090  003402  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 12091  003406  C036  F024         	movff	goback@mR,turnRight@mR
 12092  00340A  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 12093  00340E  0E5A               	movlw	90
 12094  003410  6E26               	movwf	turnRight@angle_right^0,c
 12095  003412  EC52  F020         	call	_turnRight	;wreg free
 12096  003416  065A               	decf	_array_index^0,f,c
 12097  003418                     l5226:
 12098                           
 12099                           ;movement.c: 126:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 12100  003418  505A               	movf	_array_index^0,w,c
 12101  00341A  0D02               	mullw	2
 12102  00341C  0E00               	movlw	low _memory
 12103  00341E  24F3               	addwf	243,w,c
 12104  003420  6ED9               	movwf	fsr2l,c
 12105  003422  0E01               	movlw	high _memory
 12106  003424  20F4               	addwfc	prodh,w,c
 12107  003426  6EDA               	movwf	fsr2h,c
 12108  003428  0E06               	movlw	6
 12109  00342A  18DE               	xorwf	postinc2,w,c
 12110  00342C  10DE               	iorwf	postinc2,w,c
 12111  00342E  A4D8               	btfss	status,2,c
 12112  003430  EF1C  F01A         	goto	u5331
 12113  003434  EF1E  F01A         	goto	u5330
 12114  003438                     u5331:
 12115  003438  EF2B  F01A         	goto	l5232
 12116  00343C                     u5330:
 12117  00343C  C034  F022         	movff	goback@mL,turnLeft@mL
 12118  003440  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 12119  003444  C036  F024         	movff	goback@mR,turnLeft@mR
 12120  003448  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 12121  00344C  0E87               	movlw	135
 12122  00344E  6E26               	movwf	turnLeft@angle_left^0,c
 12123  003450  EC12  F021         	call	_turnLeft	;wreg free
 12124  003454  065A               	decf	_array_index^0,f,c
 12125  003456                     l5232:
 12126                           
 12127                           ;movement.c: 127:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 12128  003456  505A               	movf	_array_index^0,w,c
 12129  003458  0D02               	mullw	2
 12130  00345A  0E00               	movlw	low _memory
 12131  00345C  24F3               	addwf	243,w,c
 12132  00345E  6ED9               	movwf	fsr2l,c
 12133  003460  0E01               	movlw	high _memory
 12134  003462  20F4               	addwfc	prodh,w,c
 12135  003464  6EDA               	movwf	fsr2h,c
 12136  003466  0E07               	movlw	7
 12137  003468  18DE               	xorwf	postinc2,w,c
 12138  00346A  10DE               	iorwf	postinc2,w,c
 12139  00346C  A4D8               	btfss	status,2,c
 12140  00346E  EF3B  F01A         	goto	u5341
 12141  003472  EF3D  F01A         	goto	u5340
 12142  003476                     u5341:
 12143  003476  EF4A  F01A         	goto	l5238
 12144  00347A                     u5340:
 12145  00347A  C034  F022         	movff	goback@mL,turnRight@mL
 12146  00347E  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 12147  003482  C036  F024         	movff	goback@mR,turnRight@mR
 12148  003486  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 12149  00348A  0E79               	movlw	121
 12150  00348C  6E26               	movwf	turnRight@angle_right^0,c
 12151  00348E  EC52  F020         	call	_turnRight	;wreg free
 12152  003492  065A               	decf	_array_index^0,f,c
 12153  003494                     l5238:
 12154                           
 12155                           ;movement.c: 114:     while(array_index > 0){
 12156  003494  505A               	movf	_array_index^0,w,c
 12157  003496  A4D8               	btfss	status,2,c
 12158  003498  EF50  F01A         	goto	u5351
 12159  00349C  EF52  F01A         	goto	u5350
 12160  0034A0                     u5351:
 12161  0034A0  EF18  F019         	goto	l5178
 12162  0034A4                     u5350:
 12163  0034A4                     l660:
 12164  0034A4  0012               	return		;funcret
 12165  0034A6                     __end_of_goback:
 12166                           	callstack 0
 12167                           
 12168 ;; *************** function _turnRight *****************
 12169 ;; Defined at:
 12170 ;;		line 122 in file "dc_motor.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12173 ;;		 -> main@motorL(10), 
 12174 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12175 ;;		 -> main@motorR(10), 
 12176 ;;  angle_right     1   37[COMRAM] unsigned char 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;  i               2   47[COMRAM] unsigned int 
 12179 ;;  i               2   45[COMRAM] unsigned int 
 12180 ;;  i               2   43[COMRAM] unsigned int 
 12181 ;;  delay           2   49[COMRAM] unsigned int 
 12182 ;;  delay_180       2   41[COMRAM] unsigned int 
 12183 ;;  delay_135       2   39[COMRAM] unsigned int 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12193 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;Total ram usage:       18 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 5
 12200 ;; This function calls:
 12201 ;;		_setMotorPWM
 12202 ;;		_stop
 12203 ;; This function is called by:
 12204 ;;		_action
 12205 ;;		_goback
 12206 ;;		_test_action
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text63
 12211  0040A4                     __ptext63:
 12212                           	callstack 0
 12213  0040A4                     _turnRight:
 12214                           	callstack 24
 12215  0040A4                     
 12216                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 12217  0040A4  EE20 F001          	lfsr	2,1
 12218  0040A8  5022               	movf	turnRight@mL^0,w,c
 12219  0040AA  26D9               	addwf	fsr2l,f,c
 12220  0040AC  5023               	movf	(turnRight@mL+1)^0,w,c
 12221  0040AE  22DA               	addwfc	fsr2h,f,c
 12222  0040B0  0E01               	movlw	1
 12223  0040B2  6EDF               	movwf	indf2,c
 12224                           
 12225                           ;dc_motor.c: 125:     mR->direction=1;
 12226  0040B4  EE20 F001          	lfsr	2,1
 12227  0040B8  5024               	movf	turnRight@mR^0,w,c
 12228  0040BA  26D9               	addwf	fsr2l,f,c
 12229  0040BC  5025               	movf	(turnRight@mR+1)^0,w,c
 12230  0040BE  22DA               	addwfc	fsr2h,f,c
 12231  0040C0  0E01               	movlw	1
 12232  0040C2  6EDF               	movwf	indf2,c
 12233                           
 12234                           ;dc_motor.c: 126:     while (mL->power <25){
 12235  0040C4  EF83  F020         	goto	l4620
 12236  0040C8                     l4612:
 12237                           
 12238                           ;dc_motor.c: 127:         mL->power += 5;
 12239  0040C8  C022  FFD9         	movff	turnRight@mL,fsr2l
 12240  0040CC  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12241  0040D0  0E05               	movlw	5
 12242  0040D2  26DF               	addwf	indf2,f,c
 12243                           
 12244                           ;dc_motor.c: 128:         mR->power = 0;
 12245  0040D4  C024  FFD9         	movff	turnRight@mR,fsr2l
 12246  0040D8  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 12247  0040DC  0E00               	movlw	0
 12248  0040DE  6EDF               	movwf	indf2,c
 12249  0040E0                     
 12250                           ;dc_motor.c: 129:         setMotorPWM(mL);
 12251  0040E0  C022  F011         	movff	turnRight@mL,setMotorPWM@m
 12252  0040E4  C023  F012         	movff	turnRight@mL+1,setMotorPWM@m+1
 12253  0040E8  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12254  0040EC                     
 12255                           ;dc_motor.c: 130:         setMotorPWM(mR);
 12256  0040EC  C024  F011         	movff	turnRight@mR,setMotorPWM@m
 12257  0040F0  C025  F012         	movff	turnRight@mR+1,setMotorPWM@m+1
 12258  0040F4  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12259  0040F8                     
 12260                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12261  0040F8  0ED0               	movlw	208
 12262  0040FA  6E27               	movwf	??_turnRight^0,c
 12263  0040FC  0ECA               	movlw	202
 12264  0040FE                     u7227:
 12265  0040FE  2EE8               	decfsz	wreg,f,c
 12266  004100  D7FE               	bra	u7227
 12267  004102  2E27               	decfsz	??_turnRight^0,f,c
 12268  004104  D7FC               	bra	u7227
 12269  004106                     l4620:
 12270                           
 12271                           ;dc_motor.c: 126:     while (mL->power <25){
 12272  004106  C022  FFD9         	movff	turnRight@mL,fsr2l
 12273  00410A  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12274  00410E  0E18               	movlw	24
 12275  004110  64DF               	cpfsgt	indf2,c
 12276  004112  EF8D  F020         	goto	u4661
 12277  004116  EF8F  F020         	goto	u4660
 12278  00411A                     u4661:
 12279  00411A  EF64  F020         	goto	l4612
 12280  00411E                     u4660:
 12281  00411E                     
 12282                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 12283  00411E  5026               	movf	turnRight@angle_right^0,w,c
 12284  004120  0100               	movlb	0	; () banked
 12285  004122  03FE               	mulwf	_SENSITIVITY& (0+255),b
 12286  004124  CFF3 F032          	movff	prodl,turnRight@delay
 12287  004128  CFF4 F033          	movff	prodh,turnRight@delay+1
 12288  00412C                     
 12289                           ; BSR set to: 0
 12290  00412C  0E0A               	movlw	10
 12291  00412E  2432               	addwf	turnRight@delay^0,w,c
 12292  004130  6E28               	movwf	turnRight@delay_135^0,c
 12293  004132  0E00               	movlw	0
 12294  004134  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12295  004136  6E29               	movwf	(turnRight@delay_135+1)^0,c
 12296  004138                     
 12297                           ; BSR set to: 0
 12298  004138  0E14               	movlw	20
 12299  00413A  2432               	addwf	turnRight@delay^0,w,c
 12300  00413C  6E2A               	movwf	turnRight@delay_180^0,c
 12301  00413E  0E00               	movlw	0
 12302  004140  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12303  004142  6E2B               	movwf	(turnRight@delay_180+1)^0,c
 12304  004144                     
 12305                           ; BSR set to: 0
 12306                           ;dc_motor.c: 136:     if (angle_right == 180){
 12307  004144  0EB4               	movlw	180
 12308  004146  1826               	xorwf	turnRight@angle_right^0,w,c
 12309  004148  A4D8               	btfss	status,2,c
 12310  00414A  EFA9  F020         	goto	u4671
 12311  00414E  EFAB  F020         	goto	u4670
 12312  004152                     u4671:
 12313  004152  EFC6  F020         	goto	l4636
 12314  004156                     u4670:
 12315  004156                     
 12316                           ; BSR set to: 0
 12317                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12318  004156  0E00               	movlw	0
 12319  004158  6E2D               	movwf	(turnRight@i+1)^0,c
 12320  00415A  0E00               	movlw	0
 12321  00415C  6E2C               	movwf	turnRight@i^0,c
 12322  00415E  EFBB  F020         	goto	l348
 12323  004162                     l4632:
 12324  004162  0E15               	movlw	21
 12325  004164  6E27               	movwf	??_turnRight^0,c
 12326  004166  0EC6               	movlw	198
 12327  004168                     u7237:
 12328  004168  2EE8               	decfsz	wreg,f,c
 12329  00416A  D7FE               	bra	u7237
 12330  00416C  2E27               	decfsz	??_turnRight^0,f,c
 12331  00416E  D7FC               	bra	u7237
 12332  004170  D000               	nop2	
 12333  004172  4A2C               	infsnz	turnRight@i^0,f,c
 12334  004174  2A2D               	incf	(turnRight@i+1)^0,f,c
 12335  004176                     l348:
 12336  004176  502A               	movf	turnRight@delay_180^0,w,c
 12337  004178  5C2C               	subwf	turnRight@i^0,w,c
 12338  00417A  502B               	movf	(turnRight@delay_180+1)^0,w,c
 12339  00417C  582D               	subwfb	(turnRight@i+1)^0,w,c
 12340  00417E  A0D8               	btfss	status,0,c
 12341  004180  EFC4  F020         	goto	u4681
 12342  004184  EFC6  F020         	goto	u4680
 12343  004188                     u4681:
 12344  004188  EFB1  F020         	goto	l4632
 12345  00418C                     u4680:
 12346  00418C                     l4636:
 12347                           
 12348                           ;dc_motor.c: 139:     if (angle_right == 135){
 12349  00418C  0E87               	movlw	135
 12350  00418E  1826               	xorwf	turnRight@angle_right^0,w,c
 12351  004190  A4D8               	btfss	status,2,c
 12352  004192  EFCD  F020         	goto	u4691
 12353  004196  EFCF  F020         	goto	u4690
 12354  00419A                     u4691:
 12355  00419A  EFEC  F020         	goto	l4644
 12356  00419E                     u4690:
 12357  00419E                     
 12358                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12359  00419E  0E00               	movlw	0
 12360  0041A0  6E2F               	movwf	(turnRight@i_1357+1)^0,c
 12361  0041A2  0E00               	movlw	0
 12362  0041A4  6E2E               	movwf	turnRight@i_1357^0,c
 12363  0041A6  EFDF  F020         	goto	l352
 12364  0041AA                     l4640:
 12365  0041AA  0E15               	movlw	21
 12366  0041AC  6E27               	movwf	??_turnRight^0,c
 12367  0041AE  0EC6               	movlw	198
 12368  0041B0                     u7247:
 12369  0041B0  2EE8               	decfsz	wreg,f,c
 12370  0041B2  D7FE               	bra	u7247
 12371  0041B4  2E27               	decfsz	??_turnRight^0,f,c
 12372  0041B6  D7FC               	bra	u7247
 12373  0041B8  D000               	nop2	
 12374  0041BA  4A2E               	infsnz	turnRight@i_1357^0,f,c
 12375  0041BC  2A2F               	incf	(turnRight@i_1357+1)^0,f,c
 12376  0041BE                     l352:
 12377  0041BE  5028               	movf	turnRight@delay_135^0,w,c
 12378  0041C0  5C2E               	subwf	turnRight@i_1357^0,w,c
 12379  0041C2  5029               	movf	(turnRight@delay_135+1)^0,w,c
 12380  0041C4  582F               	subwfb	(turnRight@i_1357+1)^0,w,c
 12381  0041C6  A0D8               	btfss	status,0,c
 12382  0041C8  EFE8  F020         	goto	u4701
 12383  0041CC  EFEA  F020         	goto	u4700
 12384  0041D0                     u4701:
 12385  0041D0  EFD5  F020         	goto	l4640
 12386  0041D4                     u4700:
 12387  0041D4  EF07  F021         	goto	l4650
 12388  0041D8                     l4644:
 12389                           
 12390                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12391  0041D8  0E00               	movlw	0
 12392  0041DA  6E31               	movwf	(turnRight@i_1358+1)^0,c
 12393  0041DC  0E00               	movlw	0
 12394  0041DE  6E30               	movwf	turnRight@i_1358^0,c
 12395  0041E0  EFFC  F020         	goto	l356
 12396  0041E4                     l4646:
 12397  0041E4  0E15               	movlw	21
 12398  0041E6  6E27               	movwf	??_turnRight^0,c
 12399  0041E8  0EC6               	movlw	198
 12400  0041EA                     u7257:
 12401  0041EA  2EE8               	decfsz	wreg,f,c
 12402  0041EC  D7FE               	bra	u7257
 12403  0041EE  2E27               	decfsz	??_turnRight^0,f,c
 12404  0041F0  D7FC               	bra	u7257
 12405  0041F2  D000               	nop2	
 12406  0041F4  4A30               	infsnz	turnRight@i_1358^0,f,c
 12407  0041F6  2A31               	incf	(turnRight@i_1358+1)^0,f,c
 12408  0041F8                     l356:
 12409  0041F8  5032               	movf	turnRight@delay^0,w,c
 12410  0041FA  5C30               	subwf	turnRight@i_1358^0,w,c
 12411  0041FC  5033               	movf	(turnRight@delay+1)^0,w,c
 12412  0041FE  5831               	subwfb	(turnRight@i_1358+1)^0,w,c
 12413  004200  A0D8               	btfss	status,0,c
 12414  004202  EF05  F021         	goto	u4711
 12415  004206  EF07  F021         	goto	u4710
 12416  00420A                     u4711:
 12417  00420A  EFF2  F020         	goto	l4646
 12418  00420E                     u4710:
 12419  00420E                     l4650:
 12420                           
 12421                           ;dc_motor.c: 145:     stop(mL,mR);
 12422  00420E  C022  F01C         	movff	turnRight@mL,stop@mL
 12423  004212  C023  F01D         	movff	turnRight@mL+1,stop@mL+1
 12424  004216  C024  F01E         	movff	turnRight@mR,stop@mR
 12425  00421A  C025  F01F         	movff	turnRight@mR+1,stop@mR+1
 12426  00421E  EC17  F027         	call	_stop	;wreg free
 12427  004222  0012               	return		;funcret
 12428  004224                     __end_of_turnRight:
 12429                           	callstack 0
 12430                           
 12431 ;; *************** function _turnLeft *****************
 12432 ;; Defined at:
 12433 ;;		line 95 in file "dc_motor.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12436 ;;		 -> main@motorL(10), 
 12437 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12438 ;;		 -> main@motorR(10), 
 12439 ;;  angle_left      1   37[COMRAM] unsigned char 
 12440 ;; Auto vars:     Size  Location     Type
 12441 ;;  i               2   47[COMRAM] unsigned int 
 12442 ;;  i               2   45[COMRAM] unsigned int 
 12443 ;;  i               2   43[COMRAM] unsigned int 
 12444 ;;  delay           2   49[COMRAM] unsigned int 
 12445 ;;  delay_180       2   41[COMRAM] unsigned int 
 12446 ;;  delay_135       2   39[COMRAM] unsigned int 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12456 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12457 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12459 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12460 ;;Total ram usage:       18 bytes
 12461 ;; Hardware stack levels used: 1
 12462 ;; Hardware stack levels required when called: 5
 12463 ;; This function calls:
 12464 ;;		_setMotorPWM
 12465 ;;		_stop
 12466 ;; This function is called by:
 12467 ;;		_action
 12468 ;;		_goback
 12469 ;;		_test_action
 12470 ;; This function uses a non-reentrant model
 12471 ;;
 12472                           
 12473                           	psect	text64
 12474  004224                     __ptext64:
 12475                           	callstack 0
 12476  004224                     _turnLeft:
 12477                           	callstack 24
 12478  004224                     
 12479                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 12480  004224  EE20 F001          	lfsr	2,1
 12481  004228  5022               	movf	turnLeft@mL^0,w,c
 12482  00422A  26D9               	addwf	fsr2l,f,c
 12483  00422C  5023               	movf	(turnLeft@mL+1)^0,w,c
 12484  00422E  22DA               	addwfc	fsr2h,f,c
 12485  004230  0E01               	movlw	1
 12486  004232  6EDF               	movwf	indf2,c
 12487                           
 12488                           ;dc_motor.c: 98:       mR->direction=1;
 12489  004234  EE20 F001          	lfsr	2,1
 12490  004238  5024               	movf	turnLeft@mR^0,w,c
 12491  00423A  26D9               	addwf	fsr2l,f,c
 12492  00423C  5025               	movf	(turnLeft@mR+1)^0,w,c
 12493  00423E  22DA               	addwfc	fsr2h,f,c
 12494  004240  0E01               	movlw	1
 12495  004242  6EDF               	movwf	indf2,c
 12496                           
 12497                           ;dc_motor.c: 99:       while (mR->power <25){
 12498  004244  EF43  F021         	goto	l4578
 12499  004248                     l4570:
 12500                           
 12501                           ;dc_motor.c: 100:         mR->power += 5;
 12502  004248  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12503  00424C  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12504  004250  0E05               	movlw	5
 12505  004252  26DF               	addwf	indf2,f,c
 12506                           
 12507                           ;dc_motor.c: 101:         mL->power = 0;
 12508  004254  C022  FFD9         	movff	turnLeft@mL,fsr2l
 12509  004258  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 12510  00425C  0E00               	movlw	0
 12511  00425E  6EDF               	movwf	indf2,c
 12512  004260                     
 12513                           ;dc_motor.c: 102:         setMotorPWM(mL);
 12514  004260  C022  F011         	movff	turnLeft@mL,setMotorPWM@m
 12515  004264  C023  F012         	movff	turnLeft@mL+1,setMotorPWM@m+1
 12516  004268  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12517  00426C                     
 12518                           ;dc_motor.c: 103:         setMotorPWM(mR);
 12519  00426C  C024  F011         	movff	turnLeft@mR,setMotorPWM@m
 12520  004270  C025  F012         	movff	turnLeft@mR+1,setMotorPWM@m+1
 12521  004274  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12522  004278                     
 12523                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12524  004278  0ED0               	movlw	208
 12525  00427A  6E27               	movwf	??_turnLeft^0,c
 12526  00427C  0ECA               	movlw	202
 12527  00427E                     u7267:
 12528  00427E  2EE8               	decfsz	wreg,f,c
 12529  004280  D7FE               	bra	u7267
 12530  004282  2E27               	decfsz	??_turnLeft^0,f,c
 12531  004284  D7FC               	bra	u7267
 12532  004286                     l4578:
 12533                           
 12534                           ;dc_motor.c: 99:       while (mR->power <25){
 12535  004286  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12536  00428A  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12537  00428E  0E18               	movlw	24
 12538  004290  64DF               	cpfsgt	indf2,c
 12539  004292  EF4D  F021         	goto	u4601
 12540  004296  EF4F  F021         	goto	u4600
 12541  00429A                     u4601:
 12542  00429A  EF24  F021         	goto	l4570
 12543  00429E                     u4600:
 12544  00429E                     
 12545                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 12546  00429E  5026               	movf	turnLeft@angle_left^0,w,c
 12547  0042A0  0100               	movlb	0	; () banked
 12548  0042A2  03FE               	mulwf	_SENSITIVITY& (0+255),b
 12549  0042A4  CFF3 F032          	movff	prodl,turnLeft@delay
 12550  0042A8  CFF4 F033          	movff	prodh,turnLeft@delay+1
 12551  0042AC                     
 12552                           ; BSR set to: 0
 12553  0042AC  0E0A               	movlw	10
 12554  0042AE  2432               	addwf	turnLeft@delay^0,w,c
 12555  0042B0  6E28               	movwf	turnLeft@delay_135^0,c
 12556  0042B2  0E00               	movlw	0
 12557  0042B4  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12558  0042B6  6E29               	movwf	(turnLeft@delay_135+1)^0,c
 12559  0042B8                     
 12560                           ; BSR set to: 0
 12561  0042B8  0E14               	movlw	20
 12562  0042BA  2432               	addwf	turnLeft@delay^0,w,c
 12563  0042BC  6E2A               	movwf	turnLeft@delay_180^0,c
 12564  0042BE  0E00               	movlw	0
 12565  0042C0  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12566  0042C2  6E2B               	movwf	(turnLeft@delay_180+1)^0,c
 12567  0042C4                     
 12568                           ; BSR set to: 0
 12569                           ;dc_motor.c: 109:     if (angle_left == 180){
 12570  0042C4  0EB4               	movlw	180
 12571  0042C6  1826               	xorwf	turnLeft@angle_left^0,w,c
 12572  0042C8  A4D8               	btfss	status,2,c
 12573  0042CA  EF69  F021         	goto	u4611
 12574  0042CE  EF6B  F021         	goto	u4610
 12575  0042D2                     u4611:
 12576  0042D2  EF86  F021         	goto	l4594
 12577  0042D6                     u4610:
 12578  0042D6                     
 12579                           ; BSR set to: 0
 12580                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12581  0042D6  0E00               	movlw	0
 12582  0042D8  6E2D               	movwf	(turnLeft@i+1)^0,c
 12583  0042DA  0E00               	movlw	0
 12584  0042DC  6E2C               	movwf	turnLeft@i^0,c
 12585  0042DE  EF7B  F021         	goto	l330
 12586  0042E2                     l4590:
 12587  0042E2  0E15               	movlw	21
 12588  0042E4  6E27               	movwf	??_turnLeft^0,c
 12589  0042E6  0EC6               	movlw	198
 12590  0042E8                     u7277:
 12591  0042E8  2EE8               	decfsz	wreg,f,c
 12592  0042EA  D7FE               	bra	u7277
 12593  0042EC  2E27               	decfsz	??_turnLeft^0,f,c
 12594  0042EE  D7FC               	bra	u7277
 12595  0042F0  D000               	nop2	
 12596  0042F2  4A2C               	infsnz	turnLeft@i^0,f,c
 12597  0042F4  2A2D               	incf	(turnLeft@i+1)^0,f,c
 12598  0042F6                     l330:
 12599  0042F6  502A               	movf	turnLeft@delay_180^0,w,c
 12600  0042F8  5C2C               	subwf	turnLeft@i^0,w,c
 12601  0042FA  502B               	movf	(turnLeft@delay_180+1)^0,w,c
 12602  0042FC  582D               	subwfb	(turnLeft@i+1)^0,w,c
 12603  0042FE  A0D8               	btfss	status,0,c
 12604  004300  EF84  F021         	goto	u4621
 12605  004304  EF86  F021         	goto	u4620
 12606  004308                     u4621:
 12607  004308  EF71  F021         	goto	l4590
 12608  00430C                     u4620:
 12609  00430C                     l4594:
 12610                           
 12611                           ;dc_motor.c: 112:     if (angle_left == 135){
 12612  00430C  0E87               	movlw	135
 12613  00430E  1826               	xorwf	turnLeft@angle_left^0,w,c
 12614  004310  A4D8               	btfss	status,2,c
 12615  004312  EF8D  F021         	goto	u4631
 12616  004316  EF8F  F021         	goto	u4630
 12617  00431A                     u4631:
 12618  00431A  EFAC  F021         	goto	l4602
 12619  00431E                     u4630:
 12620  00431E                     
 12621                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12622  00431E  0E00               	movlw	0
 12623  004320  6E2F               	movwf	(turnLeft@i_1332+1)^0,c
 12624  004322  0E00               	movlw	0
 12625  004324  6E2E               	movwf	turnLeft@i_1332^0,c
 12626  004326  EF9F  F021         	goto	l334
 12627  00432A                     l4598:
 12628  00432A  0E15               	movlw	21
 12629  00432C  6E27               	movwf	??_turnLeft^0,c
 12630  00432E  0EC6               	movlw	198
 12631  004330                     u7287:
 12632  004330  2EE8               	decfsz	wreg,f,c
 12633  004332  D7FE               	bra	u7287
 12634  004334  2E27               	decfsz	??_turnLeft^0,f,c
 12635  004336  D7FC               	bra	u7287
 12636  004338  D000               	nop2	
 12637  00433A  4A2E               	infsnz	turnLeft@i_1332^0,f,c
 12638  00433C  2A2F               	incf	(turnLeft@i_1332+1)^0,f,c
 12639  00433E                     l334:
 12640  00433E  5028               	movf	turnLeft@delay_135^0,w,c
 12641  004340  5C2E               	subwf	turnLeft@i_1332^0,w,c
 12642  004342  5029               	movf	(turnLeft@delay_135+1)^0,w,c
 12643  004344  582F               	subwfb	(turnLeft@i_1332+1)^0,w,c
 12644  004346  A0D8               	btfss	status,0,c
 12645  004348  EFA8  F021         	goto	u4641
 12646  00434C  EFAA  F021         	goto	u4640
 12647  004350                     u4641:
 12648  004350  EF95  F021         	goto	l4598
 12649  004354                     u4640:
 12650  004354  EFC7  F021         	goto	l4608
 12651  004358                     l4602:
 12652                           
 12653                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12654  004358  0E00               	movlw	0
 12655  00435A  6E31               	movwf	(turnLeft@i_1333+1)^0,c
 12656  00435C  0E00               	movlw	0
 12657  00435E  6E30               	movwf	turnLeft@i_1333^0,c
 12658  004360  EFBC  F021         	goto	l338
 12659  004364                     l4604:
 12660  004364  0E15               	movlw	21
 12661  004366  6E27               	movwf	??_turnLeft^0,c
 12662  004368  0EC6               	movlw	198
 12663  00436A                     u7297:
 12664  00436A  2EE8               	decfsz	wreg,f,c
 12665  00436C  D7FE               	bra	u7297
 12666  00436E  2E27               	decfsz	??_turnLeft^0,f,c
 12667  004370  D7FC               	bra	u7297
 12668  004372  D000               	nop2	
 12669  004374  4A30               	infsnz	turnLeft@i_1333^0,f,c
 12670  004376  2A31               	incf	(turnLeft@i_1333+1)^0,f,c
 12671  004378                     l338:
 12672  004378  5032               	movf	turnLeft@delay^0,w,c
 12673  00437A  5C30               	subwf	turnLeft@i_1333^0,w,c
 12674  00437C  5033               	movf	(turnLeft@delay+1)^0,w,c
 12675  00437E  5831               	subwfb	(turnLeft@i_1333+1)^0,w,c
 12676  004380  A0D8               	btfss	status,0,c
 12677  004382  EFC5  F021         	goto	u4651
 12678  004386  EFC7  F021         	goto	u4650
 12679  00438A                     u4651:
 12680  00438A  EFB2  F021         	goto	l4604
 12681  00438E                     u4650:
 12682  00438E                     l4608:
 12683                           
 12684                           ;dc_motor.c: 118:     stop(mL,mR);
 12685  00438E  C022  F01C         	movff	turnLeft@mL,stop@mL
 12686  004392  C023  F01D         	movff	turnLeft@mL+1,stop@mL+1
 12687  004396  C024  F01E         	movff	turnLeft@mR,stop@mR
 12688  00439A  C025  F01F         	movff	turnLeft@mR+1,stop@mR+1
 12689  00439E  EC17  F027         	call	_stop	;wreg free
 12690  0043A2  0012               	return		;funcret
 12691  0043A4                     __end_of_turnLeft:
 12692                           	callstack 0
 12693                           
 12694 ;; *************** function _reverse_square *****************
 12695 ;; Defined at:
 12696 ;;		line 189 in file "dc_motor.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 12699 ;;		 -> main@motorL(10), 
 12700 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 12701 ;;		 -> main@motorR(10), 
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12717 ;;Total ram usage:        6 bytes
 12718 ;; Hardware stack levels used: 1
 12719 ;; Hardware stack levels required when called: 6
 12720 ;; This function calls:
 12721 ;;		_fullSpeedBack
 12722 ;;		_stop
 12723 ;; This function is called by:
 12724 ;;		_action
 12725 ;;		_goback
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           	psect	text65
 12730  0054A0                     __ptext65:
 12731                           	callstack 0
 12732  0054A0                     _reverse_square:
 12733                           	callstack 23
 12734  0054A0                     
 12735                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 12736  0054A0  C028  F022         	movff	reverse_square@mL,fullSpeedBack@mL
 12737  0054A4  C029  F023         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12738  0054A8  C02A  F024         	movff	reverse_square@mR,fullSpeedBack@mR
 12739  0054AC  C02B  F025         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12740  0054B0  ECB7  F026         	call	_fullSpeedBack	;wreg free
 12741  0054B4                     
 12742                           ;dc_motor.c: 191:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12743  0054B4  0E52               	movlw	82
 12744  0054B6  6E2D               	movwf	(??_reverse_square+1)^0,c
 12745  0054B8  0E2B               	movlw	43
 12746  0054BA  6E2C               	movwf	??_reverse_square^0,c
 12747  0054BC  0E00               	movlw	0
 12748  0054BE                     u7307:
 12749  0054BE  2EE8               	decfsz	wreg,f,c
 12750  0054C0  D7FE               	bra	u7307
 12751  0054C2  2E2C               	decfsz	??_reverse_square^0,f,c
 12752  0054C4  D7FC               	bra	u7307
 12753  0054C6  2E2D               	decfsz	(??_reverse_square+1)^0,f,c
 12754  0054C8  D7FA               	bra	u7307
 12755  0054CA  D000               	nop2	
 12756  0054CC                     
 12757                           ;dc_motor.c: 192:     stop(mL,mR);
 12758  0054CC  C028  F01C         	movff	reverse_square@mL,stop@mL
 12759  0054D0  C029  F01D         	movff	reverse_square@mL+1,stop@mL+1
 12760  0054D4  C02A  F01E         	movff	reverse_square@mR,stop@mR
 12761  0054D8  C02B  F01F         	movff	reverse_square@mR+1,stop@mR+1
 12762  0054DC  EC17  F027         	call	_stop	;wreg free
 12763  0054E0  0012               	return		;funcret
 12764  0054E2                     __end_of_reverse_square:
 12765                           	callstack 0
 12766                           
 12767 ;; *************** function _fullSpeedBack *****************
 12768 ;; Defined at:
 12769 ;;		line 168 in file "dc_motor.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12772 ;;		 -> main@motorL(10), 
 12773 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12774 ;;		 -> main@motorR(10), 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12790 ;;Total ram usage:        6 bytes
 12791 ;; Hardware stack levels used: 1
 12792 ;; Hardware stack levels required when called: 5
 12793 ;; This function calls:
 12794 ;;		_setMotorPWM
 12795 ;;		_stop
 12796 ;; This function is called by:
 12797 ;;		_short_reverse
 12798 ;;		_reverse_square
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802                           	psect	text66
 12803  004D6E                     __ptext66:
 12804                           	callstack 0
 12805  004D6E                     _fullSpeedBack:
 12806                           	callstack 23
 12807  004D6E                     
 12808                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 12809  004D6E  EE20 F001          	lfsr	2,1
 12810  004D72  5022               	movf	fullSpeedBack@mL^0,w,c
 12811  004D74  26D9               	addwf	fsr2l,f,c
 12812  004D76  5023               	movf	(fullSpeedBack@mL+1)^0,w,c
 12813  004D78  22DA               	addwfc	fsr2h,f,c
 12814  004D7A  0E00               	movlw	0
 12815  004D7C  6EDF               	movwf	indf2,c
 12816                           
 12817                           ;dc_motor.c: 171:     mR->direction=0;
 12818  004D7E  EE20 F001          	lfsr	2,1
 12819  004D82  5024               	movf	fullSpeedBack@mR^0,w,c
 12820  004D84  26D9               	addwf	fsr2l,f,c
 12821  004D86  5025               	movf	(fullSpeedBack@mR+1)^0,w,c
 12822  004D88  22DA               	addwfc	fsr2h,f,c
 12823  004D8A  0E00               	movlw	0
 12824  004D8C  6EDF               	movwf	indf2,c
 12825                           
 12826                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 12827  004D8E  EFE8  F026         	goto	l4394
 12828  004D92                     l4386:
 12829                           
 12830                           ;dc_motor.c: 173:         mL->power += 10;
 12831  004D92  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12832  004D96  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12833  004D9A  0E0A               	movlw	10
 12834  004D9C  26DF               	addwf	indf2,f,c
 12835                           
 12836                           ;dc_motor.c: 174:         mR->power += 10;
 12837  004D9E  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12838  004DA2  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12839  004DA6  0E0A               	movlw	10
 12840  004DA8  26DF               	addwf	indf2,f,c
 12841  004DAA                     
 12842                           ;dc_motor.c: 175:         setMotorPWM(mL);
 12843  004DAA  C022  F011         	movff	fullSpeedBack@mL,setMotorPWM@m
 12844  004DAE  C023  F012         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12845  004DB2  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12846  004DB6                     
 12847                           ;dc_motor.c: 176:         setMotorPWM(mR);
 12848  004DB6  C024  F011         	movff	fullSpeedBack@mR,setMotorPWM@m
 12849  004DBA  C025  F012         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12850  004DBE  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12851  004DC2                     
 12852                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12853  004DC2  0ED0               	movlw	208
 12854  004DC4  6E26               	movwf	??_fullSpeedBack^0,c
 12855  004DC6  0ECA               	movlw	202
 12856  004DC8                     u7317:
 12857  004DC8  2EE8               	decfsz	wreg,f,c
 12858  004DCA  D7FE               	bra	u7317
 12859  004DCC  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12860  004DCE  D7FC               	bra	u7317
 12861  004DD0                     l4394:
 12862                           
 12863                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 12864  004DD0  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12865  004DD4  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12866  004DD8  0E32               	movlw	50
 12867  004DDA  60DF               	cpfslt	indf2,c
 12868  004DDC  EFF2  F026         	goto	u4141
 12869  004DE0  EFF4  F026         	goto	u4140
 12870  004DE4                     u4141:
 12871  004DE4  EF00  F027         	goto	l4398
 12872  004DE8                     u4140:
 12873  004DE8  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12874  004DEC  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12875  004DF0  0E31               	movlw	49
 12876  004DF2  64DF               	cpfsgt	indf2,c
 12877  004DF4  EFFE  F026         	goto	u4151
 12878  004DF8  EF00  F027         	goto	u4150
 12879  004DFC                     u4151:
 12880  004DFC  EFC9  F026         	goto	l4386
 12881  004E00                     u4150:
 12882  004E00                     l4398:
 12883                           
 12884                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12885  004E00  0E29               	movlw	41
 12886  004E02  6E27               	movwf	(??_fullSpeedBack+1)^0,c
 12887  004E04  0E96               	movlw	150
 12888  004E06  6E26               	movwf	??_fullSpeedBack^0,c
 12889  004E08  0E7F               	movlw	127
 12890  004E0A                     u7327:
 12891  004E0A  2EE8               	decfsz	wreg,f,c
 12892  004E0C  D7FE               	bra	u7327
 12893  004E0E  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12894  004E10  D7FC               	bra	u7327
 12895  004E12  2E27               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12896  004E14  D7FA               	bra	u7327
 12897  004E16  F000               	nop	
 12898  004E18                     
 12899                           ;dc_motor.c: 180:     stop(mL,mR);
 12900  004E18  C022  F01C         	movff	fullSpeedBack@mL,stop@mL
 12901  004E1C  C023  F01D         	movff	fullSpeedBack@mL+1,stop@mL+1
 12902  004E20  C024  F01E         	movff	fullSpeedBack@mR,stop@mR
 12903  004E24  C025  F01F         	movff	fullSpeedBack@mR+1,stop@mR+1
 12904  004E28  EC17  F027         	call	_stop	;wreg free
 12905  004E2C  0012               	return		;funcret
 12906  004E2E                     __end_of_fullSpeedBack:
 12907                           	callstack 0
 12908                           
 12909 ;; *************** function _stop *****************
 12910 ;; Defined at:
 12911 ;;		line 82 in file "dc_motor.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12914 ;;		 -> main@motorL(10), 
 12915 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12916 ;;		 -> main@motorR(10), 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12932 ;;Total ram usage:        6 bytes
 12933 ;; Hardware stack levels used: 1
 12934 ;; Hardware stack levels required when called: 4
 12935 ;; This function calls:
 12936 ;;		_setMotorPWM
 12937 ;; This function is called by:
 12938 ;;		_turnLeft
 12939 ;;		_turnRight
 12940 ;;		_fullSpeedBack
 12941 ;;		_short_reverse
 12942 ;;		_reverse_square
 12943 ;;		_main
 12944 ;;		_action
 12945 ;;		_goback
 12946 ;;		_test_function
 12947 ;;		_fullSpeedAhead_test
 12948 ;;		_short_burst
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           	psect	text67
 12953  004E2E                     __ptext67:
 12954                           	callstack 0
 12955  004E2E                     _stop:
 12956                           	callstack 25
 12957  004E2E                     
 12958                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 12959  004E2E  EF50  F027         	goto	l4156
 12960  004E32                     l4142:
 12961                           
 12962                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 12963  004E32  C01C  FFD9         	movff	stop@mL,fsr2l
 12964  004E36  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12965  004E3A  50DF               	movf	indf2,w,c
 12966  004E3C  B4D8               	btfsc	status,2,c
 12967  004E3E  EF23  F027         	goto	u3821
 12968  004E42  EF25  F027         	goto	u3820
 12969  004E46                     u3821:
 12970  004E46  EF2B  F027         	goto	l4146
 12971  004E4A                     u3820:
 12972  004E4A  C01C  FFD9         	movff	stop@mL,fsr2l
 12973  004E4E  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12974  004E52  0E05               	movlw	5
 12975  004E54  5EDF               	subwf	indf2,f,c
 12976  004E56                     l4146:
 12977                           
 12978                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 12979  004E56  C01E  FFD9         	movff	stop@mR,fsr2l
 12980  004E5A  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12981  004E5E  50DF               	movf	indf2,w,c
 12982  004E60  B4D8               	btfsc	status,2,c
 12983  004E62  EF35  F027         	goto	u3831
 12984  004E66  EF37  F027         	goto	u3830
 12985  004E6A                     u3831:
 12986  004E6A  EF3D  F027         	goto	l4150
 12987  004E6E                     u3830:
 12988  004E6E  C01E  FFD9         	movff	stop@mR,fsr2l
 12989  004E72  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12990  004E76  0E05               	movlw	5
 12991  004E78  5EDF               	subwf	indf2,f,c
 12992  004E7A                     l4150:
 12993                           
 12994                           ;dc_motor.c: 87:         setMotorPWM(mL);
 12995  004E7A  C01C  F011         	movff	stop@mL,setMotorPWM@m
 12996  004E7E  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
 12997  004E82  EC4C  F01B         	call	_setMotorPWM	;wreg free
 12998  004E86                     
 12999                           ;dc_motor.c: 88:         setMotorPWM(mR);
 13000  004E86  C01E  F011         	movff	stop@mR,setMotorPWM@m
 13001  004E8A  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
 13002  004E8E  EC4C  F01B         	call	_setMotorPWM	;wreg free
 13003  004E92                     
 13004                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13005  004E92  0ED0               	movlw	208
 13006  004E94  6E20               	movwf	??_stop^0,c
 13007  004E96  0ECA               	movlw	202
 13008  004E98                     u7337:
 13009  004E98  2EE8               	decfsz	wreg,f,c
 13010  004E9A  D7FE               	bra	u7337
 13011  004E9C  2E20               	decfsz	??_stop^0,f,c
 13012  004E9E  D7FC               	bra	u7337
 13013  004EA0                     l4156:
 13014                           
 13015                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13016  004EA0  C01C  FFD9         	movff	stop@mL,fsr2l
 13017  004EA4  C01D  FFDA         	movff	stop@mL+1,fsr2h
 13018  004EA8  50DF               	movf	indf2,w,c
 13019  004EAA  A4D8               	btfss	status,2,c
 13020  004EAC  EF5A  F027         	goto	u3841
 13021  004EB0  EF5C  F027         	goto	u3840
 13022  004EB4                     u3841:
 13023  004EB4  EF19  F027         	goto	l4142
 13024  004EB8                     u3840:
 13025  004EB8  C01E  FFD9         	movff	stop@mR,fsr2l
 13026  004EBC  C01F  FFDA         	movff	stop@mR+1,fsr2h
 13027  004EC0  50DF               	movf	indf2,w,c
 13028  004EC2  A4D8               	btfss	status,2,c
 13029  004EC4  EF66  F027         	goto	u3851
 13030  004EC8  EF68  F027         	goto	u3850
 13031  004ECC                     u3851:
 13032  004ECC  EF19  F027         	goto	l4142
 13033  004ED0                     u3850:
 13034  004ED0                     
 13035                           ;dc_motor.c: 91:     _delay((unsigned long)((100)*(64000000/4000.0)));
 13036  004ED0  0E09               	movlw	9
 13037  004ED2  6E21               	movwf	(??_stop+1)^0,c
 13038  004ED4  0E1E               	movlw	30
 13039  004ED6  6E20               	movwf	??_stop^0,c
 13040  004ED8  0EE4               	movlw	228
 13041  004EDA                     u7347:
 13042  004EDA  2EE8               	decfsz	wreg,f,c
 13043  004EDC  D7FE               	bra	u7347
 13044  004EDE  2E20               	decfsz	??_stop^0,f,c
 13045  004EE0  D7FC               	bra	u7347
 13046  004EE2  2E21               	decfsz	(??_stop+1)^0,f,c
 13047  004EE4  D7FA               	bra	u7347
 13048  004EE6  D000               	nop2	
 13049  004EE8  0012               	return		;funcret
 13050  004EEA                     __end_of_stop:
 13051                           	callstack 0
 13052                           
 13053 ;; *************** function _fullSpeedAhead *****************
 13054 ;; Defined at:
 13055 ;;		line 149 in file "dc_motor.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 13058 ;;		 -> main@motorL(10), 
 13059 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 13060 ;;		 -> main@motorR(10), 
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      void 
 13065 ;; Registers used:
 13066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13075 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13076 ;;Total ram usage:        5 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; Hardware stack levels required when called: 4
 13079 ;; This function calls:
 13080 ;;		_setMotorPWM
 13081 ;; This function is called by:
 13082 ;;		_main
 13083 ;;		_goback
 13084 ;;		_test_function
 13085 ;;		_fullSpeedAhead_test
 13086 ;;		_short_burst
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           
 13090                           	psect	text68
 13091  004F9A                     __ptext68:
 13092                           	callstack 0
 13093  004F9A                     _fullSpeedAhead:
 13094                           	callstack 25
 13095  004F9A                     
 13096                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 13097  004F9A  EE20 F001          	lfsr	2,1
 13098  004F9E  501C               	movf	fullSpeedAhead@mL^0,w,c
 13099  004FA0  26D9               	addwf	fsr2l,f,c
 13100  004FA2  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
 13101  004FA4  22DA               	addwfc	fsr2h,f,c
 13102  004FA6  0E01               	movlw	1
 13103  004FA8  6EDF               	movwf	indf2,c
 13104                           
 13105                           ;dc_motor.c: 152:     mR->direction=1;
 13106  004FAA  EE20 F001          	lfsr	2,1
 13107  004FAE  501E               	movf	fullSpeedAhead@mR^0,w,c
 13108  004FB0  26D9               	addwf	fsr2l,f,c
 13109  004FB2  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
 13110  004FB4  22DA               	addwfc	fsr2h,f,c
 13111  004FB6  0E01               	movlw	1
 13112  004FB8  6EDF               	movwf	indf2,c
 13113                           
 13114                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 13115  004FBA  EFFE  F027         	goto	l4662
 13116  004FBE                     l4654:
 13117                           
 13118                           ;dc_motor.c: 154:         mL->power += 10;
 13119  004FBE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13120  004FC2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13121  004FC6  0E0A               	movlw	10
 13122  004FC8  26DF               	addwf	indf2,f,c
 13123                           
 13124                           ;dc_motor.c: 155:         mR->power += 10;
 13125  004FCA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13126  004FCE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13127  004FD2  0E0A               	movlw	10
 13128  004FD4  26DF               	addwf	indf2,f,c
 13129  004FD6                     
 13130                           ;dc_motor.c: 156:         setMotorPWM(mL);
 13131  004FD6  C01C  F011         	movff	fullSpeedAhead@mL,setMotorPWM@m
 13132  004FDA  C01D  F012         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 13133  004FDE  EC4C  F01B         	call	_setMotorPWM	;wreg free
 13134  004FE2                     
 13135                           ;dc_motor.c: 157:         setMotorPWM(mR);
 13136  004FE2  C01E  F011         	movff	fullSpeedAhead@mR,setMotorPWM@m
 13137  004FE6  C01F  F012         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 13138  004FEA  EC4C  F01B         	call	_setMotorPWM	;wreg free
 13139  004FEE                     
 13140                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13141  004FEE  0ED0               	movlw	208
 13142  004FF0  6E20               	movwf	??_fullSpeedAhead^0,c
 13143  004FF2  0ECA               	movlw	202
 13144  004FF4                     u7357:
 13145  004FF4  2EE8               	decfsz	wreg,f,c
 13146  004FF6  D7FE               	bra	u7357
 13147  004FF8  2E20               	decfsz	??_fullSpeedAhead^0,f,c
 13148  004FFA  D7FC               	bra	u7357
 13149  004FFC                     l4662:
 13150                           
 13151                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 13152  004FFC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13153  005000  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13154  005004  0E14               	movlw	20
 13155  005006  60DF               	cpfslt	indf2,c
 13156  005008  EF08  F028         	goto	u4721
 13157  00500C  EF0A  F028         	goto	u4720
 13158  005010                     u4721:
 13159  005010  EF16  F028         	goto	l367
 13160  005014                     u4720:
 13161  005014  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13162  005018  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13163  00501C  0E13               	movlw	19
 13164  00501E  64DF               	cpfsgt	indf2,c
 13165  005020  EF14  F028         	goto	u4731
 13166  005024  EF16  F028         	goto	u4730
 13167  005028                     u4731:
 13168  005028  EFDF  F027         	goto	l4654
 13169  00502C                     u4730:
 13170  00502C                     l367:
 13171  00502C  0012               	return		;funcret
 13172  00502E                     __end_of_fullSpeedAhead:
 13173                           	callstack 0
 13174                           
 13175 ;; *************** function _setMotorPWM *****************
 13176 ;; Defined at:
 13177 ;;		line 59 in file "dc_motor.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  m               2   16[COMRAM] PTR struct DC_motor
 13180 ;;		 -> main@motorR(10), main@motorL(10), 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  PWMduty         2   25[COMRAM] int 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13196 ;;Total ram usage:       11 bytes
 13197 ;; Hardware stack levels used: 1
 13198 ;; Hardware stack levels required when called: 3
 13199 ;; This function calls:
 13200 ;;		___awdiv
 13201 ;;		___wmul
 13202 ;; This function is called by:
 13203 ;;		_stop
 13204 ;;		_turnLeft
 13205 ;;		_turnRight
 13206 ;;		_fullSpeedAhead
 13207 ;;		_fullSpeedBack
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text69
 13212  003698                     __ptext69:
 13213                           	callstack 0
 13214  003698                     _setMotorPWM:
 13215                           	callstack 25
 13216  003698                     
 13217                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 13218  003698  EE20 F001          	lfsr	2,1
 13219  00369C  5011               	movf	setMotorPWM@m^0,w,c
 13220  00369E  26D9               	addwf	fsr2l,f,c
 13221  0036A0  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13222  0036A2  22DA               	addwfc	fsr2h,f,c
 13223  0036A4  50DF               	movf	indf2,w,c
 13224  0036A6  B4D8               	btfsc	status,2,c
 13225  0036A8  EF58  F01B         	goto	u3331
 13226  0036AC  EF5A  F01B         	goto	u3330
 13227  0036B0                     u3331:
 13228  0036B0  EF8B  F01B         	goto	l3856
 13229  0036B4                     u3330:
 13230  0036B4                     
 13231                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 13232  0036B4  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13233  0036B8  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13234  0036BC  50DF               	movf	indf2,w,c
 13235  0036BE  6E13               	movwf	??_setMotorPWM^0,c
 13236  0036C0  5013               	movf	??_setMotorPWM^0,w,c
 13237  0036C2  6E03               	movwf	___wmul@multiplier^0,c
 13238  0036C4  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13239  0036C6  EE20 F007          	lfsr	2,7
 13240  0036CA  5011               	movf	setMotorPWM@m^0,w,c
 13241  0036CC  26D9               	addwf	fsr2l,f,c
 13242  0036CE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13243  0036D0  22DA               	addwfc	fsr2h,f,c
 13244  0036D2  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13245  0036D6  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13246  0036DA  EC74  F02B         	call	___wmul	;wreg free
 13247  0036DE  C003  F009         	movff	?___wmul,___awdiv@dividend
 13248  0036E2  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13249  0036E6  0E00               	movlw	0
 13250  0036E8  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13251  0036EA  0E64               	movlw	100
 13252  0036EC  6E0B               	movwf	___awdiv@divisor^0,c
 13253  0036EE  EC55  F026         	call	___awdiv	;wreg free
 13254  0036F2  EE20 F007          	lfsr	2,7
 13255  0036F6  5011               	movf	setMotorPWM@m^0,w,c
 13256  0036F8  26D9               	addwf	fsr2l,f,c
 13257  0036FA  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13258  0036FC  22DA               	addwfc	fsr2h,f,c
 13259  0036FE  CFDE F014          	movff	postinc2,??_setMotorPWM+1
 13260  003702  CFDD F015          	movff	postdec2,??_setMotorPWM+2
 13261  003706  5009               	movf	?___awdiv^0,w,c
 13262  003708  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
 13263  00370A  6E1A               	movwf	setMotorPWM@PWMduty^0,c
 13264  00370C  500A               	movf	(?___awdiv+1)^0,w,c
 13265  00370E  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
 13266  003710  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
 13267                           
 13268                           ;dc_motor.c: 66:  }
 13269  003712  EFAE  F01B         	goto	l3858
 13270  003716                     l3856:
 13271                           
 13272                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13273  003716  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13274  00371A  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13275  00371E  50DF               	movf	indf2,w,c
 13276  003720  6E13               	movwf	??_setMotorPWM^0,c
 13277  003722  5013               	movf	??_setMotorPWM^0,w,c
 13278  003724  6E03               	movwf	___wmul@multiplier^0,c
 13279  003726  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13280  003728  EE20 F007          	lfsr	2,7
 13281  00372C  5011               	movf	setMotorPWM@m^0,w,c
 13282  00372E  26D9               	addwf	fsr2l,f,c
 13283  003730  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13284  003732  22DA               	addwfc	fsr2h,f,c
 13285  003734  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13286  003738  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13287  00373C  EC74  F02B         	call	___wmul	;wreg free
 13288  003740  C003  F009         	movff	?___wmul,___awdiv@dividend
 13289  003744  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13290  003748  0E00               	movlw	0
 13291  00374A  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13292  00374C  0E64               	movlw	100
 13293  00374E  6E0B               	movwf	___awdiv@divisor^0,c
 13294  003750  EC55  F026         	call	___awdiv	;wreg free
 13295  003754  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
 13296  003758  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 13297  00375C                     l3858:
 13298                           
 13299                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 13300  00375C  EE20 F002          	lfsr	2,2
 13301  003760  5011               	movf	setMotorPWM@m^0,w,c
 13302  003762  26D9               	addwf	fsr2l,f,c
 13303  003764  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13304  003766  22DA               	addwfc	fsr2h,f,c
 13305  003768  CFDE F013          	movff	postinc2,??_setMotorPWM
 13306  00376C  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13307  003770  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13308  003774  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13309  003778  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
 13310  00377C                     
 13311                           ;dc_motor.c: 74:  if (m->direction){
 13312  00377C  EE20 F001          	lfsr	2,1
 13313  003780  5011               	movf	setMotorPWM@m^0,w,c
 13314  003782  26D9               	addwf	fsr2l,f,c
 13315  003784  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13316  003786  22DA               	addwfc	fsr2h,f,c
 13317  003788  50DF               	movf	indf2,w,c
 13318  00378A  B4D8               	btfsc	status,2,c
 13319  00378C  EFCA  F01B         	goto	u3341
 13320  003790  EFCC  F01B         	goto	u3340
 13321  003794                     u3341:
 13322  003794  EF01  F01C         	goto	l3864
 13323  003798                     u3340:
 13324  003798                     
 13325                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 13326  003798  EE20 F004          	lfsr	2,4
 13327  00379C  5011               	movf	setMotorPWM@m^0,w,c
 13328  00379E  26D9               	addwf	fsr2l,f,c
 13329  0037A0  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13330  0037A2  22DA               	addwfc	fsr2h,f,c
 13331  0037A4  CFDE F013          	movff	postinc2,??_setMotorPWM
 13332  0037A8  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13333  0037AC  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13334  0037B0  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13335  0037B4  EE10 F004          	lfsr	1,4
 13336  0037B8  5011               	movf	setMotorPWM@m^0,w,c
 13337  0037BA  26E1               	addwf	fsr1l,f,c
 13338  0037BC  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13339  0037BE  22E2               	addwfc	fsr1h,f,c
 13340  0037C0  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13341  0037C4  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13342  0037C8  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13343  0037CC  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13344  0037D0  50E7               	movf	indf1,w,c
 13345  0037D2  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13346  0037D4  EE10 F006          	lfsr	1,6
 13347  0037D8  5011               	movf	setMotorPWM@m^0,w,c
 13348  0037DA  26E1               	addwf	fsr1l,f,c
 13349  0037DC  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13350  0037DE  22E2               	addwfc	fsr1h,f,c
 13351  0037E0  50E7               	movf	indf1,w,c
 13352  0037E2  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13353  0037E4  0E01               	movlw	1
 13354  0037E6  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13355  0037E8  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13356  0037EA  EFF9  F01B         	goto	u3354
 13357  0037EE                     u3355:
 13358  0037EE  90D8               	bcf	status,0,c
 13359  0037F0  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13360  0037F2                     u3354:
 13361  0037F2  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13362  0037F4  EFF7  F01B         	goto	u3355
 13363  0037F8  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13364  0037FA  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
 13365  0037FC  6EDF               	movwf	indf2,c
 13366                           
 13367                           ;dc_motor.c: 76:  } else {
 13368  0037FE  EF35  F01C         	goto	l315
 13369  003802                     l3864:
 13370                           
 13371                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13372  003802  EE20 F004          	lfsr	2,4
 13373  003806  5011               	movf	setMotorPWM@m^0,w,c
 13374  003808  26D9               	addwf	fsr2l,f,c
 13375  00380A  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13376  00380C  22DA               	addwfc	fsr2h,f,c
 13377  00380E  CFDE F013          	movff	postinc2,??_setMotorPWM
 13378  003812  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13379  003816  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13380  00381A  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13381  00381E  EE10 F004          	lfsr	1,4
 13382  003822  5011               	movf	setMotorPWM@m^0,w,c
 13383  003824  26E1               	addwf	fsr1l,f,c
 13384  003826  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13385  003828  22E2               	addwfc	fsr1h,f,c
 13386  00382A  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13387  00382E  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13388  003832  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13389  003836  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13390  00383A  50E7               	movf	indf1,w,c
 13391  00383C  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13392  00383E  EE10 F006          	lfsr	1,6
 13393  003842  5011               	movf	setMotorPWM@m^0,w,c
 13394  003844  26E1               	addwf	fsr1l,f,c
 13395  003846  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13396  003848  22E2               	addwfc	fsr1h,f,c
 13397  00384A  50E7               	movf	indf1,w,c
 13398  00384C  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13399  00384E  0E01               	movlw	1
 13400  003850  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13401  003852  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13402  003854  EF2E  F01C         	goto	u3364
 13403  003858                     u3365:
 13404  003858  90D8               	bcf	status,0,c
 13405  00385A  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13406  00385C                     u3364:
 13407  00385C  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13408  00385E  EF2C  F01C         	goto	u3365
 13409  003862  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13410  003864  0AFF               	xorlw	255
 13411  003866  1417               	andwf	(??_setMotorPWM+4)^0,w,c
 13412  003868  6EDF               	movwf	indf2,c
 13413  00386A                     l315:
 13414  00386A  0012               	return		;funcret
 13415  00386C                     __end_of_setMotorPWM:
 13416                           	callstack 0
 13417                           
 13418 ;; *************** function ___wmul *****************
 13419 ;; Defined at:
 13420 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  multiplier      2    2[COMRAM] unsigned int 
 13423 ;;  multiplicand    2    4[COMRAM] unsigned int 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;  product         2    6[COMRAM] unsigned int 
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  2    2[COMRAM] unsigned int 
 13428 ;; Registers used:
 13429 ;;		wreg, status,2, status,0, prodl, prodh
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13439 ;;Total ram usage:        6 bytes
 13440 ;; Hardware stack levels used: 1
 13441 ;; Hardware stack levels required when called: 2
 13442 ;; This function calls:
 13443 ;;		Nothing
 13444 ;; This function is called by:
 13445 ;;		_setMotorPWM
 13446 ;; This function uses a non-reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text70
 13450  0056E8                     __ptext70:
 13451                           	callstack 0
 13452  0056E8                     ___wmul:
 13453                           	callstack 25
 13454  0056E8  5003               	movf	___wmul@multiplier^0,w,c
 13455  0056EA  0205               	mulwf	___wmul@multiplicand^0,c
 13456  0056EC  CFF3 F007          	movff	prodl,___wmul@product
 13457  0056F0  CFF4 F008          	movff	prodh,___wmul@product+1
 13458  0056F4  5003               	movf	___wmul@multiplier^0,w,c
 13459  0056F6  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 13460  0056F8  50F3               	movf	243,w,c
 13461  0056FA  2608               	addwf	(___wmul@product+1)^0,f,c
 13462  0056FC  5004               	movf	(___wmul@multiplier+1)^0,w,c
 13463  0056FE  0205               	mulwf	___wmul@multiplicand^0,c
 13464  005700  50F3               	movf	243,w,c
 13465  005702  2608               	addwf	(___wmul@product+1)^0,f,c
 13466  005704  C007  F003         	movff	___wmul@product,?___wmul
 13467  005708  C008  F004         	movff	___wmul@product+1,?___wmul+1
 13468  00570C  0012               	return		;funcret
 13469  00570E                     __end_of___wmul:
 13470                           	callstack 0
 13471                           
 13472 ;; *************** function ___awdiv *****************
 13473 ;; Defined at:
 13474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  dividend        2    8[COMRAM] int 
 13477 ;;  divisor         2   10[COMRAM] int 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  quotient        2   14[COMRAM] int 
 13480 ;;  sign            1   13[COMRAM] unsigned char 
 13481 ;;  counter         1   12[COMRAM] unsigned char 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  2    8[COMRAM] int 
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13494 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13495 ;;Total ram usage:        8 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; Hardware stack levels required when called: 2
 13498 ;; This function calls:
 13499 ;;		Nothing
 13500 ;; This function is called by:
 13501 ;;		_setMotorPWM
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           	psect	text71
 13506  004CAA                     __ptext71:
 13507                           	callstack 0
 13508  004CAA                     ___awdiv:
 13509                           	callstack 25
 13510  004CAA  0E00               	movlw	0
 13511  004CAC  6E0E               	movwf	___awdiv@sign^0,c
 13512  004CAE  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 13513  004CB0  EF5E  F026         	goto	u3100
 13514  004CB4  EF5C  F026         	goto	u3101
 13515  004CB8                     u3101:
 13516  004CB8  EF64  F026         	goto	l3750
 13517  004CBC                     u3100:
 13518  004CBC  6C0B               	negf	___awdiv@divisor^0,c
 13519  004CBE  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 13520  004CC0  B0D8               	btfsc	status,0,c
 13521  004CC2  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 13522  004CC4  0E01               	movlw	1
 13523  004CC6  6E0E               	movwf	___awdiv@sign^0,c
 13524  004CC8                     l3750:
 13525  004CC8  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 13526  004CCA  EF6B  F026         	goto	u3110
 13527  004CCE  EF69  F026         	goto	u3111
 13528  004CD2                     u3111:
 13529  004CD2  EF71  F026         	goto	l3756
 13530  004CD6                     u3110:
 13531  004CD6  6C09               	negf	___awdiv@dividend^0,c
 13532  004CD8  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 13533  004CDA  B0D8               	btfsc	status,0,c
 13534  004CDC  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 13535  004CDE  0E01               	movlw	1
 13536  004CE0  1A0E               	xorwf	___awdiv@sign^0,f,c
 13537  004CE2                     l3756:
 13538  004CE2  0E00               	movlw	0
 13539  004CE4  6E10               	movwf	(___awdiv@quotient+1)^0,c
 13540  004CE6  0E00               	movlw	0
 13541  004CE8  6E0F               	movwf	___awdiv@quotient^0,c
 13542  004CEA  500B               	movf	___awdiv@divisor^0,w,c
 13543  004CEC  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 13544  004CEE  B4D8               	btfsc	status,2,c
 13545  004CF0  EF7C  F026         	goto	u3121
 13546  004CF4  EF7E  F026         	goto	u3120
 13547  004CF8                     u3121:
 13548  004CF8  EFA6  F026         	goto	l3778
 13549  004CFC                     u3120:
 13550  004CFC  0E01               	movlw	1
 13551  004CFE  6E0D               	movwf	___awdiv@counter^0,c
 13552  004D00  EF86  F026         	goto	l3764
 13553  004D04                     l3762:
 13554  004D04  90D8               	bcf	status,0,c
 13555  004D06  360B               	rlcf	___awdiv@divisor^0,f,c
 13556  004D08  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 13557  004D0A  2A0D               	incf	___awdiv@counter^0,f,c
 13558  004D0C                     l3764:
 13559  004D0C  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 13560  004D0E  EF8B  F026         	goto	u3131
 13561  004D12  EF8D  F026         	goto	u3130
 13562  004D16                     u3131:
 13563  004D16  EF82  F026         	goto	l3762
 13564  004D1A                     u3130:
 13565  004D1A                     l3766:
 13566  004D1A  90D8               	bcf	status,0,c
 13567  004D1C  360F               	rlcf	___awdiv@quotient^0,f,c
 13568  004D1E  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 13569  004D20  500B               	movf	___awdiv@divisor^0,w,c
 13570  004D22  5C09               	subwf	___awdiv@dividend^0,w,c
 13571  004D24  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13572  004D26  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 13573  004D28  A0D8               	btfss	status,0,c
 13574  004D2A  EF99  F026         	goto	u3141
 13575  004D2E  EF9B  F026         	goto	u3140
 13576  004D32                     u3141:
 13577  004D32  EFA0  F026         	goto	l3774
 13578  004D36                     u3140:
 13579  004D36  500B               	movf	___awdiv@divisor^0,w,c
 13580  004D38  5E09               	subwf	___awdiv@dividend^0,f,c
 13581  004D3A  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13582  004D3C  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 13583  004D3E  800F               	bsf	___awdiv@quotient^0,0,c
 13584  004D40                     l3774:
 13585  004D40  90D8               	bcf	status,0,c
 13586  004D42  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 13587  004D44  320B               	rrcf	___awdiv@divisor^0,f,c
 13588  004D46  2E0D               	decfsz	___awdiv@counter^0,f,c
 13589  004D48  EF8D  F026         	goto	l3766
 13590  004D4C                     l3778:
 13591  004D4C  500E               	movf	___awdiv@sign^0,w,c
 13592  004D4E  B4D8               	btfsc	status,2,c
 13593  004D50  EFAC  F026         	goto	u3151
 13594  004D54  EFAE  F026         	goto	u3150
 13595  004D58                     u3151:
 13596  004D58  EFB2  F026         	goto	l3782
 13597  004D5C                     u3150:
 13598  004D5C  6C0F               	negf	___awdiv@quotient^0,c
 13599  004D5E  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 13600  004D60  B0D8               	btfsc	status,0,c
 13601  004D62  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 13602  004D64                     l3782:
 13603  004D64  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 13604  004D68  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 13605  004D6C  0012               	return		;funcret
 13606  004D6E                     __end_of___awdiv:
 13607                           	callstack 0
 13608                           
 13609 ;; *************** function _Timer0_init *****************
 13610 ;; Defined at:
 13611 ;;		line 7 in file "timers.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;		None
 13614 ;; Auto vars:     Size  Location     Type
 13615 ;;		None
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg, status,2
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;Total ram usage:        0 bytes
 13630 ;; Hardware stack levels used: 1
 13631 ;; Hardware stack levels required when called: 2
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_main
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           	psect	text72
 13640  00580C                     __ptext72:
 13641                           	callstack 0
 13642  00580C                     _Timer0_init:
 13643                           	callstack 28
 13644  00580C                     
 13645                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13646  00580C  50D6               	movf	214,w,c	;volatile
 13647  00580E  0B1F               	andlw	-225
 13648  005810  0940               	iorlw	64
 13649  005812  6ED6               	movwf	214,c	;volatile
 13650  005814                     
 13651                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13652  005814  88D6               	bsf	214,4,c	;volatile
 13653                           
 13654                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13655  005816  50D6               	movf	214,w,c	;volatile
 13656  005818  0BF0               	andlw	-16
 13657  00581A  0908               	iorlw	8
 13658  00581C  6ED6               	movwf	214,c	;volatile
 13659  00581E                     
 13660                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13661  00581E  88D5               	bsf	213,4,c	;volatile
 13662                           
 13663                           ;timers.c: 16:     TMR0H=0b00001011;
 13664  005820  0E0B               	movlw	11
 13665  005822  6ED4               	movwf	212,c	;volatile
 13666                           
 13667                           ;timers.c: 17:     TMR0L=0b11011011;
 13668  005824  0EDB               	movlw	219
 13669  005826  6ED3               	movwf	211,c	;volatile
 13670  005828  0012               	return		;funcret
 13671  00582A                     __end_of_Timer0_init:
 13672                           	callstack 0
 13673                           
 13674 ;; *************** function _Interrupts_init *****************
 13675 ;; Defined at:
 13676 ;;		line 9 in file "interrupts.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;		None
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		None
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13694 ;;Total ram usage:        0 bytes
 13695 ;; Hardware stack levels used: 1
 13696 ;; Hardware stack levels required when called: 2
 13697 ;; This function calls:
 13698 ;;		Nothing
 13699 ;; This function is called by:
 13700 ;;		_main
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text73
 13705  005864                     __ptext73:
 13706                           	callstack 0
 13707  005864                     _Interrupts_init:
 13708                           	callstack 28
 13709  005864  8EF2               	bsf	242,7,c	;volatile
 13710                           
 13711                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13712  005866  8AF2               	bsf	242,5,c	;volatile
 13713                           
 13714                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13715  005868  8CF2               	bsf	242,6,c	;volatile
 13716                           
 13717                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13718  00586A  010E               	movlb	14	; () banked
 13719  00586C  8B29               	bsf	41,5,b	;volatile
 13720  00586E                     
 13721                           ; BSR set to: 14
 13722  00586E  0012               	return		;funcret
 13723  005870                     __end_of_Interrupts_init:
 13724                           	callstack 0
 13725                           
 13726 ;; *************** function _LowISR *****************
 13727 ;; Defined at:
 13728 ;;		line 25 in file "interrupts.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;		None
 13731 ;; Auto vars:     Size  Location     Type
 13732 ;;		None
 13733 ;; Return value:  Size  Location     Type
 13734 ;;                  1    wreg      void 
 13735 ;; Registers used:
 13736 ;;		status,2, status,0
 13737 ;; Tracked objects:
 13738 ;;		On entry : 0/0
 13739 ;;		On exit  : 0/0
 13740 ;;		Unchanged: 0/0
 13741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13746 ;;Total ram usage:        2 bytes
 13747 ;; Hardware stack levels used: 1
 13748 ;; Hardware stack levels required when called: 1
 13749 ;; This function calls:
 13750 ;;		Nothing
 13751 ;; This function is called by:
 13752 ;;		Interrupt level 1
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           	psect	intcodelo
 13757  000018                     __pintcodelo:
 13758                           	callstack 0
 13759  000018                     _LowISR:
 13760                           	callstack 18
 13761                           
 13762                           ; BSR set to: 14
 13763                           ;incstack = 0
 13764  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13765  00001A  CFD8 F001          	movff	status,??_LowISR
 13766  00001E  CFE0 F002          	movff	bsr,??_LowISR+1
 13767  000022                     
 13768                           ;interrupts.c: 27:     if(PIR0bits.TMR0IF){
 13769  000022  010E               	movlb	14	; () banked
 13770  000024  AB33               	btfss	51,5,b	;volatile
 13771  000026  EF17  F000         	goto	i1u563_21
 13772  00002A  EF19  F000         	goto	i1u563_20
 13773  00002E                     i1u563_21:
 13774  00002E  EF1E  F000         	goto	i1l690
 13775  000032                     i1u563_20:
 13776  000032                     
 13777                           ; BSR set to: 14
 13778                           ;interrupts.c: 28:         second ++;
 13779  000032  0101               	movlb	1	; () banked
 13780  000034  4B60               	infsnz	_second& (0+255),f,b
 13781  000036  2B61               	incf	(_second+1)& (0+255),f,b
 13782  000038                     
 13783                           ; BSR set to: 1
 13784                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
 13785  000038  010E               	movlb	14	; () banked
 13786  00003A  9B33               	bcf	51,5,b	;volatile
 13787  00003C                     i1l690:
 13788                           
 13789                           ; BSR set to: 14
 13790  00003C  C002  FFE0         	movff	??_LowISR+1,bsr
 13791  000040  C001  FFD8         	movff	??_LowISR,status
 13792  000044  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13793  000046  0010               	retfie	
 13794  000048                     __end_of_LowISR:
 13795                           	callstack 0
 13796                           
 13797 ;; *************** function _HighISR *****************
 13798 ;; Defined at:
 13799 ;;		line 21 in file "interrupts.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;		None
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;		None
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1    wreg      void 
 13806 ;; Registers used:
 13807 ;;		None
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13817 ;;Total ram usage:        0 bytes
 13818 ;; Hardware stack levels used: 1
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		Interrupt level 2
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	intcode
 13827  000008                     __pintcode:
 13828                           	callstack 0
 13829  000008                     _HighISR:
 13830                           	callstack 18
 13831                           
 13832                           ; BSR set to: 14
 13833                           ;incstack = 0
 13834  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13835  00000A  EF47  F02C         	goto	int_func
 13836                           
 13837                           	psect	intcode_body
 13838  00588E                     __pintcode_body:
 13839                           	callstack 18
 13840  00588E                     int_func:
 13841                           	callstack 18
 13842  00588E  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13843  005890  0011               	retfie		f
 13844  005892                     __end_of_HighISR:
 13845                           	callstack 0
 13846                           
 13847                           	psect	rparam
 13848  0000                     
 13849                           	psect	temp
 13850  00005C                     btemp:
 13851                           	callstack 0
 13852  00005C                     	ds	1
 13853  0000                     int$flags	set	btemp
 13854  0000                     wtemp8	set	btemp+1
 13855  0000                     ttemp5	set	btemp+1
 13856  0000                     ttemp6	set	btemp+4
 13857  0000                     ttemp7	set	btemp+8
 13858                           
 13859                           	psect	idloc
 13860                           
 13861                           ;Config register IDLOC0 @ 0x200000
 13862                           ;	unspecified, using default values
 13863  200000                     	org	2097152
 13864  200000  0FFF               	dw	4095
 13865                           
 13866                           ;Config register IDLOC1 @ 0x200002
 13867                           ;	unspecified, using default values
 13868  200002                     	org	2097154
 13869  200002  0FFF               	dw	4095
 13870                           
 13871                           ;Config register IDLOC2 @ 0x200004
 13872                           ;	unspecified, using default values
 13873  200004                     	org	2097156
 13874  200004  0FFF               	dw	4095
 13875                           
 13876                           ;Config register IDLOC3 @ 0x200006
 13877                           ;	unspecified, using default values
 13878  200006                     	org	2097158
 13879  200006  0FFF               	dw	4095
 13880                           
 13881                           ;Config register IDLOC4 @ 0x200008
 13882                           ;	unspecified, using default values
 13883  200008                     	org	2097160
 13884  200008  0FFF               	dw	4095
 13885                           
 13886                           ;Config register IDLOC5 @ 0x20000A
 13887                           ;	unspecified, using default values
 13888  20000A                     	org	2097162
 13889  20000A  0FFF               	dw	4095
 13890                           
 13891                           ;Config register IDLOC6 @ 0x20000C
 13892                           ;	unspecified, using default values
 13893  20000C                     	org	2097164
 13894  20000C  0FFF               	dw	4095
 13895                           
 13896                           ;Config register IDLOC7 @ 0x20000E
 13897                           ;	unspecified, using default values
 13898  20000E                     	org	2097166
 13899  20000E  0FFF               	dw	4095
 13900                           
 13901                           	psect	config
 13902                           
 13903                           ;Config register CONFIG1L @ 0x300000
 13904                           ;	External Oscillator mode Selection bits
 13905                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13906                           ;	Power-up default value for COSC bits
 13907                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13908  300000                     	org	3145728
 13909  300000  AA                 	db	170
 13910                           
 13911                           ;Config register CONFIG1H @ 0x300001
 13912                           ;	unspecified, using default values
 13913                           ;	Clock Out Enable bit
 13914                           ;	CLKOUTEN = 0x1, unprogrammed default
 13915                           ;	Clock Switch Enable bit
 13916                           ;	CSWEN = 0x1, unprogrammed default
 13917                           ;	Fail-Safe Clock Monitor Enable bit
 13918                           ;	FCMEN = 0x1, unprogrammed default
 13919  300001                     	org	3145729
 13920  300001  FF                 	db	255
 13921                           
 13922                           ;Config register CONFIG2L @ 0x300002
 13923                           ;	unspecified, using default values
 13924                           ;	Master Clear Enable bit
 13925                           ;	MCLRE = 0x1, unprogrammed default
 13926                           ;	Power-up Timer Enable bit
 13927                           ;	PWRTE = 0x1, unprogrammed default
 13928                           ;	Low-power BOR enable bit
 13929                           ;	LPBOREN = 0x1, unprogrammed default
 13930                           ;	Brown-out Reset Enable bits
 13931                           ;	BOREN = 0x3, unprogrammed default
 13932  300002                     	org	3145730
 13933  300002  FF                 	db	255
 13934                           
 13935                           ;Config register CONFIG2H @ 0x300003
 13936                           ;	unspecified, using default values
 13937                           ;	Brown Out Reset Voltage selection bits
 13938                           ;	BORV = 0x3, unprogrammed default
 13939                           ;	ZCD Disable bit
 13940                           ;	ZCD = 0x1, unprogrammed default
 13941                           ;	PPSLOCK bit One-Way Set Enable bit
 13942                           ;	PPS1WAY = 0x1, unprogrammed default
 13943                           ;	Stack Full/Underflow Reset Enable bit
 13944                           ;	STVREN = 0x1, unprogrammed default
 13945                           ;	Debugger Enable bit
 13946                           ;	DEBUG = 0x1, unprogrammed default
 13947                           ;	Extended Instruction Set Enable bit
 13948                           ;	XINST = 0x1, unprogrammed default
 13949  300003                     	org	3145731
 13950  300003  FF                 	db	255
 13951                           
 13952                           ;Config register CONFIG3L @ 0x300004
 13953                           ;	WDT Period Select bits
 13954                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13955                           ;	WDT operating mode
 13956                           ;	WDTE = OFF, WDT Disabled
 13957  300004                     	org	3145732
 13958  300004  9F                 	db	159
 13959                           
 13960                           ;Config register CONFIG3H @ 0x300005
 13961                           ;	unspecified, using default values
 13962                           ;	WDT Window Select bits
 13963                           ;	WDTCWS = 0x7, unprogrammed default
 13964                           ;	WDT input clock selector
 13965                           ;	WDTCCS = 0x7, unprogrammed default
 13966  300005                     	org	3145733
 13967  300005  FF                 	db	255
 13968                           
 13969                           ;Config register CONFIG4L @ 0x300006
 13970                           ;	unspecified, using default values
 13971                           ;	Write Protection Block 0
 13972                           ;	WRT0 = 0x1, unprogrammed default
 13973                           ;	Write Protection Block 1
 13974                           ;	WRT1 = 0x1, unprogrammed default
 13975                           ;	Write Protection Block 2
 13976                           ;	WRT2 = 0x1, unprogrammed default
 13977                           ;	Write Protection Block 3
 13978                           ;	WRT3 = 0x1, unprogrammed default
 13979                           ;	Write Protection Block 3
 13980                           ;	WRT4 = 0x1, unprogrammed default
 13981                           ;	Write Protection Block 3
 13982                           ;	WRT5 = 0x1, unprogrammed default
 13983                           ;	Write Protection Block 3
 13984                           ;	WRT6 = 0x1, unprogrammed default
 13985                           ;	Write Protection Block 3
 13986                           ;	WRT7 = 0x1, unprogrammed default
 13987  300006                     	org	3145734
 13988  300006  FF                 	db	255
 13989                           
 13990                           ;Config register CONFIG4H @ 0x300007
 13991                           ;	unspecified, using default values
 13992                           ;	Configuration Register Write Protection bit
 13993                           ;	WRTC = 0x1, unprogrammed default
 13994                           ;	Boot Block Write Protection bit
 13995                           ;	WRTB = 0x1, unprogrammed default
 13996                           ;	Data EEPROM Write Protection bit
 13997                           ;	WRTD = 0x1, unprogrammed default
 13998                           ;	Scanner Enable bit
 13999                           ;	SCANE = 0x1, unprogrammed default
 14000                           ;	Low Voltage Programming Enable bit
 14001                           ;	LVP = 0x1, unprogrammed default
 14002  300007                     	org	3145735
 14003  300007  FF                 	db	255
 14004                           
 14005                           ;Config register CONFIG5L @ 0x300008
 14006                           ;	unspecified, using default values
 14007                           ;	UserNVM Program Memory Code Protection bit
 14008                           ;	CP = 0x1, unprogrammed default
 14009                           ;	DataNVM Memory Code Protection bit
 14010                           ;	CPD = 0x1, unprogrammed default
 14011  300008                     	org	3145736
 14012  300008  FF                 	db	255
 14013                           
 14014                           ;Config register CONFIG5H @ 0x300009
 14015                           ;	unspecified, using default values
 14016  300009                     	org	3145737
 14017  300009  FF                 	db	255
 14018                           
 14019                           ;Config register CONFIG6L @ 0x30000A
 14020                           ;	unspecified, using default values
 14021                           ;	Table Read Protection Block 0
 14022                           ;	EBTR0 = 0x1, unprogrammed default
 14023                           ;	Table Read Protection Block 1
 14024                           ;	EBTR1 = 0x1, unprogrammed default
 14025                           ;	Table Read Protection Block 2
 14026                           ;	EBTR2 = 0x1, unprogrammed default
 14027                           ;	Table Read Protection Block 3
 14028                           ;	EBTR3 = 0x1, unprogrammed default
 14029                           ;	Table Read Protection Block 4
 14030                           ;	EBTR4 = 0x1, unprogrammed default
 14031                           ;	Table Read Protection Block 5
 14032                           ;	EBTR5 = 0x1, unprogrammed default
 14033                           ;	Table Read Protection Block 6
 14034                           ;	EBTR6 = 0x1, unprogrammed default
 14035                           ;	Table Read Protection Block 7
 14036                           ;	EBTR7 = 0x1, unprogrammed default
 14037  30000A                     	org	3145738
 14038  30000A  FF                 	db	255
 14039                           
 14040                           ;Config register CONFIG6H @ 0x30000B
 14041                           ;	unspecified, using default values
 14042                           ;	Boot Block Table Read Protection bit
 14043                           ;	EBTRB = 0x1, unprogrammed default
 14044  30000B                     	org	3145739
 14045  30000B  FF                 	db	255
 14046                           tosu	equ	0xFFF
 14047                           tosh	equ	0xFFE
 14048                           tosl	equ	0xFFD
 14049                           stkptr	equ	0xFFC
 14050                           pclatu	equ	0xFFB
 14051                           pclath	equ	0xFFA
 14052                           pcl	equ	0xFF9
 14053                           tblptru	equ	0xFF8
 14054                           tblptrh	equ	0xFF7
 14055                           tblptrl	equ	0xFF6
 14056                           tablat	equ	0xFF5
 14057                           prodh	equ	0xFF4
 14058                           prodl	equ	0xFF3
 14059                           indf0	equ	0xFEF
 14060                           postinc0	equ	0xFEE
 14061                           postdec0	equ	0xFED
 14062                           preinc0	equ	0xFEC
 14063                           plusw0	equ	0xFEB
 14064                           fsr0h	equ	0xFEA
 14065                           fsr0l	equ	0xFE9
 14066                           wreg	equ	0xFE8
 14067                           indf1	equ	0xFE7
 14068                           postinc1	equ	0xFE6
 14069                           postdec1	equ	0xFE5
 14070                           preinc1	equ	0xFE4
 14071                           plusw1	equ	0xFE3
 14072                           fsr1h	equ	0xFE2
 14073                           fsr1l	equ	0xFE1
 14074                           bsr	equ	0xFE0
 14075                           indf2	equ	0xFDF
 14076                           postinc2	equ	0xFDE
 14077                           postdec2	equ	0xFDD
 14078                           preinc2	equ	0xFDC
 14079                           plusw2	equ	0xFDB
 14080                           fsr2h	equ	0xFDA
 14081                           fsr2l	equ	0xFD9
 14082                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    155     159
    BANK1           256     67     200
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2815$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2815$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verify_color->_detect_color
    _detect_color->_compare
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_display
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    ___fltol->_roundf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  325435
                                              0 BANK1     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   33302
                                             85 COMRAM     2     2      0
                                             59 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  121692
                                            139 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   24308
                                             80 COMRAM     2     2      0
                                             26 BANK0     17    11      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        31    27      4   32803
                                             81 COMRAM     4     4      0
                                             32 BANK0     27    23      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    3131
                                             80 COMRAM     1     1      0
                                             26 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   16606
                                            127 BANK0     12    10      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7709
                                             25 BANK0    102   100      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1351
                                             13 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   22686
                                             80 COMRAM     2     2      0
                                             26 BANK0     12    10      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     461
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   17235
                                             22 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   15517
                                             66 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             18 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4522
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             74 COMRAM     6     6      0
                                             18 BANK0      4     0      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1812
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2737
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4   80494
                                             59 COMRAM     7     3      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11325
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   35873
                                             51 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    8191
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    9103
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11021
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6442
                                             33 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3883
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _LowISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43      C8       7       78.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9F       5       99.4%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      57        0.0%
DATA                 0      0     1FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Mar 13 12:06:12 2022

                ?_short_reverse 0028                  _color_read_Red 5210                    ___fldiv@aexp 0029  
                  ___fldiv@bexp 0028                    ___fldiv@sign 0021                 _color_read_Blue 52B0  
                 _color_predict 5668                              l75 5856                              l92 57EC  
                            l86 3212                              l78 3200                              l95 525E  
                            l89 5636                              l98 52FE                    ___awdiv@sign 000E  
                            bsr 000FE0             ___wmul@multiplicand 0005                _color_read_Clear 5300  
              _color_read_Green 5260               ??_Interrupts_init 0003                             l101 52AE  
                           l110 574C                             l104 534E                             l113 572C  
                           l122 576C                             l211 56BE                             l107 51BC  
                           l220 588C                             l116 57AC                             l133 3A28  
                           l214 56C0                             l142 5694                             l223 5878  
                           l119 578C                             l232 541A                             l136 509C  
                           l217 56E6                             l305 545C                             l145 3696  
                           l330 42F6                             l226 5882                             l315 386A  
                           l323 4EE8                             l171 5558                             l308 4A54  
                           l180 4776                             l172 555A                             l341 43A2  
                           l229 5862                             l421 580A                             l334 433E  
                           l430 582C                             l167 1950                             l183 4CA6  
                           l352 41BE                             l168 1954                             l184 4CA8  
                           l176 4F98                             l433 5840                             l338 4378  
                           l356 41F8                             l348 4176                             l701 5828  
                           l381 549E                             l367 502C                             l359 4222  
                           l439 5666                             l384 54E0                             l378 4E2C  
                           l643 57CC                             l660 34A4                             l637 2C84  
                           l921 4506                             l908 40A2                             l679 586E  
                           l794 570C               verify_color@color 00A3                ?_calibrate_white 000E  
      __end_of_distance_measure 4CAA                             _abs 54E2                             _pad 4B20  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0037  
                  ___flmul@bexp 003C                    ___flmul@sign 0036                    ___flmul@temp 0041  
                  ___flmul@prod 003D                 __end_of_LED_OFF 574E                    ___fltol@exp1 0050  
                          l1025 4D6C                            ?_abs 0015                            l1064 4982  
                          l1322 1B44                            l1091 487E                            l1059 493C  
                          l1331 1E14                            l1323 1B32                            l1412 223E  
                          l1068 55CC                            l1324 1AF8                            l1415 20D0  
                          l1408 1EDA                            l1600 5602                            l1504 4B66  
                          l1425 2200                            l1417 2148                            l1418 2136  
                          l1339 1C5E                            l1507 4BA8                            l1515 2D26  
                          l1452 3D90                            l1348 1D2E                            l1364 5394  
                          l1381 27AE                            l1349 1D1C                            l1509 4BE4  
                          l1517 2D2E                            l4110 5884                            l1390 2896  
                          l1470 5594                            l1542 3BDC                            l4102 3BA6  
                          l1463 3D28                            l1535 2F66                            l4112 5888  
                          l4120 587E                            l1376 298A                            l1456 3CCC  
                          l5000 3670                            l4104 3BCA                            l1449 3C34  
                          l1553 5518                            l4114 585A                            l1378 27EA  
                          l4130 53E8                            l4122 5870                            l5002 3674  
                          l1387 2830                            l4140 4E2E                            l4116 585E  
                          l4132 53F0                            l4124 5874                            l5004 368C  
                          l1556 5520                            l1548 50F6                            l1389 28A8  
                          l1549 50FE                            l1477 520E                            l4150 4E7A  
                          l4142 4E32                            l4118 587A                            l4134 5416  
                          l4126 53DC                            l4070 3A4E                            l4160 4ED0  
                          l4152 4E86                            l4144 4E4A                            l4400 4E18  
                          l5200 32F6                            l4136 5418                            l4128 53E0  
                          l6000 2260                            l1568 4B1E                            l3600 4A68  
                          l1576 53D8                            l4080 3ABA                            l4072 3A5C  
                          l4154 4E92                            l4146 4E56                            l5210 335A  
                          l5202 32F8                            l6010 233C                            l6002 22AA  
                          l4162 582C                            l3602 4A7A                            l4090 3B6C  
                          l4082 3B02                            l4074 3A6E                            l1587 25F0  
                          l1579 5894                            l4148 4E6E                            l4156 4EA0  
                          l5220 33C6                            l5212 3372                            l5204 331C  
                          l5300 57F8                            l6020 24E0                            l6004 22BE  
                          l4500 308A                            l4340 5210                            l4164 583C  
                          l3700 44B0                            l3604 4A84                            l3612 5396  
                          l3620 55CE                            l4092 3B80                            l4076 3A72  
                          l4068 3A2A                            l4332 509E                            l6100 396E  
                          l4158 4EB8                            l5230 3454                            l5222 33EA  
                          l5214 3374                            l5206 3334                            l5302 57FA  
                          l6022 254C                            l6014 2374                            l6006 22FA  
                          l4510 3132                            l4502 30AE                            l4342 5256  
                          l3630 3F1C                            l3702 44B6                            l3606 4AA2  
                          l3614 53A2                            l3622 55DA                            l3710 4B20  
                          l4086 3B3A                            l4078 3A96                            l4334 50A6  
                          l6110 39BC                            l6102 397A                            l5320 581E  
                          l4600 433A                            l5232 3456                            l5224 3416  
                          l5216 3398                            l5208 3336                            l5400 2A92  
                          l5240 5842                            l5304 5804                            l4360 5346  
                          l6024 2580                            l6016 2442                            l6008 231E  
                          l4520 31C8                            l4512 314A                            l4504 30C6  
                          l4352 5260                            l3640 3F60                            l3632 3F20  
                          l3704 44C6                            l3608 4AD8                            l3616 53B4  
                          l3624 55DE                            l3720 4B72                            l3712 4B30  
                          l3800 2D36                            l4088 3B5E                            l4096 3B8C  
                          l4336 50B4                            l6032 502E                            l6120 39D6  
                          l6104 3994                            l6040 5522                            l6200 178C  
                          l5314 5864                            l4602 4358                            l4610 40A4  
                          l5234 347A                            l5226 3418                            l5218 33C4  
                          l5170 545E                            l5410 2AFC                            l5402 2AA4  
                          l5250 562C                            l5242 5604                            l5306 5806  
                          l5322 57AE                            l6026 25BC                            l6018 24AE  
                          l4522 31FE                            l4514 3180                            l4506 3102  
                          l4530 570E                            l4346 52B0                            l4354 52A6  
                          l3650 3FB6                            l3642 3F80                            l3634 3F2E  
                          l3706 44E6                            l3618 53B8                            l3626 55F6  
                          l3722 4B86                            l3714 4B44                            l3810 2D6C  
                          l3802 2D48                            l4098 3B9A                            l4338 50DA  
                          l4370 51E0                            l6034 5090                            l6130 3A24  
                          l6122 39E2                            l6106 399A                            l6050 386C  
                          l6042 5526                            l6210 17EE                            l6202 17A4  
                          l5316 580C                            l4604 4364                            l4612 40C8  
                          l4620 4106                            l5236 3492                            l5228 343C  
                          l5180 3244                            l5172 5472                            l5420 2B80  
                          l5412 2B28                            l5404 2AD0                            l5244 5608  
                          l5308 5808                            l4700 2684                            l6028 25E0  
                          l6036 555C                            l4516 3192                            l4508 3114  
                          l4540 5774                            l4532 5714                            l4348 52F6  
                          l4380 564A                            l3660 4038                            l3652 3FCA  
                          l3644 3F84                            l3636 3F4E                            l3732 54E2  
                          l3724 4B8A                            l3716 4B52                            l3812 2D72  
                          l3820 2E64                            l3804 2D56                            l4372 51FC  
                          l4364 51BE                            l4524 5160                            l6124 39FC  
                          l6116 39C6                            l6108 39B6                            l6060 389E  
                          l6044 553E                            l6220 182E                            l6212 1806  
                          l6204 17AC                            l6140 0F06                            l6132 0E14  
                          l6300 4F78                            l5318 5814                            l3750 4CC8  
                          l3742 4CAA                            l4390 4DB6                            l4606 4374  
                          l4630 4156                            l4622 411E                            l4614 40E0  
                          l5190 32A6                            l5182 3250                            l5238 3494  
                          l5174 548A                            l5430 2BF0                            l5422 2B98  
                          l5414 2B40                            l5406 2AE8                            l5246 5612  
                          l4534 578E                            l4710 26BE                            l4702 2694  
                          l4358 5300                            l4518 31B0                            l4542 574E  
                          l4526 572E                            l4382 564E                            l3670 4082  
                          l3662 403A                            l3654 3FD8                            l3646 3F90  
                          l3638 3F52                            l3734 54FC                            l3726 4BB8  
                          l3718 4B5E                            l3822 2E7E                            l3830 2EE0  
                          l3814 2DF4                            l3806 2D5C                            l4366 51D0  
                          l4550 566C                            l6126 3A02                            l6118 39CA  
                          l6070 38EC                            l6062 38AA                            l6046 5554  
                          l6230 18BA                            l6222 185A                            l6206 17B6  
                          l6150 10A2                            l6142 0F22                            l6134 0E5A  
                          l6302 4F90                            ?_pad 0013                            l3760 4CFC  
                          l3752 4CD6                            l3744 4CAE                            l3736 56E8  
                          l4392 4DC2                            l4384 4D6E                            l4608 438E  
                          l4640 41AA                            l4632 4162                            l4624 412C  
                          l4616 40EC                            l5184 3268                            l5176 3214  
                          l5440 2C4A                            l5432 2BF2                            l5424 2B9A  
                          l5416 2B42                            l5408 2AEA                            l5248 5622  
                          l5280 5458                            l4536 5794                            l4800 297E  
                          l4712 26D4                            l4704 26A4                            l5600 19A4  
                          l4480 2F6A                            l4544 5754                            l4528 5734  
                          l4376 5638                            l3664 404C                            l3656 3FEA  
                          l3648 3FAE                            l3680 43D6                            l3728 4BCC  
                          l3840 2F26                            l3832 2EF2                            l3824 2E9C  
                          l3816 2DFA                            l3808 2D64                            l4368 51D8  
                          l4552 5688                            l6128 3A1E                            l6080 3906  
                          l6064 38C4                            l6056 388E                            l6232 18E8  
                          l6216 180E                            l6208 17C0                            l6160 1188  
                          l6152 10BA                            l6144 0FCA                            l6136 0E5E  
                          l6320 3DDA                            l6312 3D96                            l6400 456E  
                          l3770 4D36                            l3762 4D04                            l3754 4CDE  
                          l3746 4CBC                            l3738 5704                            l4386 4D92  
                          l4394 4DD0                            l4570 4248                            l4650 420E  
                          l4642 41BA                            l4634 4172                            l4626 4138  
                          l4618 40F8                            l5194 32BA                            l5186 326C  
                          l5178 3230                            l5442 2C5C                            l5434 2C04  
                          l5426 2BAC                            l5418 2B54                            l3850 56D0  
                          l5282 545A                            l5274 541C                            l5290 49B4  
                          l4802 2980                            l4730 2728                            l4714 26E4  
                          l4722 2704                            l4706 26A6                            l4810 3BE0  
                          l5610 19D6                            l5602 19AC                            l4490 2FF6  
                          l4482 2F76                            l6250 4690                            l6242 4650  
                          l4538 576E                            l4378 563C                            l3658 4018  
                          l3666 4052                            l3690 442E                            l3682 43DA  
                          l3674 43A4                            l3842 2F2E                            l3834 2F02  
                          l3826 2EB6                            l3818 2E00                            l6090 3954  
                          l6082 3912                            l6066 38CA                            l6058 3892  
                          l6234 18EE                            l6218 1826                            l6226 1860  
                          l6170 1320                            l6162 1230                            l6154 10BE  
                          l6146 0FE6                            l6138 0E6A                            l6330 3E1C  
                          l6322 3DEE                            l6314 3DA8                            l6410 45D6  
                          l6402 457A                            l3780 4D5C                            l3772 4D3E  
                          l3764 4D0C                            l3756 4CE2                            l3748 4CC4  
                          l3860 377C                            l3852 3698                            l4660 4FEE  
                          l4652 4F9A                            l4396 4DE8                            l4388 4DAA  
                          l4580 429E                            l4572 4260                            l4644 41D8  
                          l4636 418C                            l4628 4144                            l5196 32BC  
                          l5188 3292                            l5436 2C30                            l5428 2BD8  
                          l5380 29CE                            l5276 542C                            l5292 49C8  
                          l5284 4984                            l4740 277A                            l4732 2742  
                          l4724 2714                            l4716 26EC                            l4708 26AE  
                          l4812 3BF0                            l5700 1BAE                            l5620 1A0C  
                          l5612 19DC                            l5604 19BC                            l4492 3008  
                          l4484 2F86                            l6260 46E4                            l6252 469C  
                          l6244 466A                            l3668 4062                            l3692 4442  
                          l3684 43E8                            l3676 43A8                            l3836 2F08  
                          l3844 2F3E                            l3828 2ED0                            l6084 392C  
                          l6076 38F6                            l6068 38E6                            l6236 191C  
                          l6228 188C                            l6180 1496                            l6172 1324  
                          l6164 124C                            l6156 10CA                            l6148 108E  
                          l6340 3E66                            l6332 3E30                            l6324 3E00  
                          l6316 3DBA                            l6308 4F96                            l6420 4644  
                          l6412 45F0                            l6404 458E                            l3782 4D64  
                          l3774 4D40                            l3766 4D1A                            l3758 4CEA  
                          l3862 3798                            l3854 36B4                            l4654 4FBE  
                          l4662 4FFC                            l4398 4E00                            l4670 54CC  
                          l4590 42E2                            l4582 42AC                            l4574 426C  
                          l4646 41E4                            l4638 419E                            l5198 32DE  
                          l5438 2C48                            l5390 2A38                            l5382 29D0  
                          l5374 298E                            l5278 5444                            l5294 49D8  
                          l5286 4990                            l4750 27D6                            l4742 278A  
                          l4734 2752                            l4726 2714                            l4718 26F0  
                          l4830 3CB6                            l4822 3C6E                            l4814 3BFE  
                          l5702 1BB2                            l5710 1BD2                            l5630 1A48  
                          l5622 1A1C                            l5614 19EA                            l5606 19C2  
                          l4494 3028                            l4486 2FA6                            l6262 46FC  
                          l6254 46B4                            l6246 4674                            l3694 4450  
                          l3686 4408                            l3678 43B6                            l3598 4A56  
                          l3838 2F1A                            l3790 2CCE                            l6086 3932  
                          l6078 38FA                            l6238 194A                            l6190 15BC  
                          l6182 14B2                            l6174 1330                            l6166 12F4  
                          l6158 116C                            l6270 4BE6                            l6350 3E9E  
                          l6342 3E72                            l6334 3E48                            l6326 3E04  
                          l6318 3DC6                            l6414 460A                            l6406 45B0  
                          l3776 4D46                            l3768 4D20                            l3864 3802  
                          l3856 3716                            l4664 5014                            l4656 4FD6  
                          l4592 42F2                            l4584 42B8                            l4576 4278  
                          l4568 4224                            l4648 41F4                            l5392 2A3A  
                          l5384 29E4                            l5376 299E                            l3848 56C0  
                          l5296 49EC                            l5288 49A0                            l4760 2816  
                          l4752 27D8                            l4744 279E                            l4736 2762  
                          l4680 261E                            l4672 25F2                            l4840 3D36  
                          l4832 3CC2                            l4824 3C76                            l4816 3C44  
                          l5800 1E62                            l5712 1BF8                            l5720 1C4E  
                          l5704 1BC0                            l5640 1A66                            l5632 1A56  
                          l5624 1A1E                            l5616 19EC                            l5608 19D4  
                          l4496 3040                            l4488 2FBE                            l6264 4764  
                          l6256 46C0                            l6248 4678                            l3696 447E  
                          l3688 4426                            l3792 2CEE                            l6096 395E  
                          l6088 394E                            l6192 168A                            l6184 155A  
                          l6176 13D2                            l6168 1308                            l6280 4C28  
                          l6272 4BFC                            l6360 3F10                            l6352 3EB2  
                          l6344 3E78                            l6336 3E4E                            l6328 3E10  
                          l6416 4628                            l6408 45C2                            l3778 4D4C  
                          l3858 375C                            l4658 4FE2                            l4666 54A0  
                          l4594 430C                            l4586 42C4                            l4578 4286  
                          l5394 2A4C                            l5386 29F4                            l5378 29A8  
                          l5298 57EE                            l4770 2852                            l4762 2820  
                          l4754 27E8                            l4746 27AC                            l4738 2772  
                          l4690 2658                            l4682 262E                            l4674 25FE  
                          l4850 3D7E                            l4842 3D38                            l4834 3CFE  
                          l4826 3C82                            l4818 3C5A                            l5810 1E92  
                          l5802 1E68                            l5730 1CA2                            l5722 1C74  
                          l5714 1C2C                            l5706 1BC2                            l5650 1A7A  
                          l5642 1A6A                            l5634 1A5A                            l5618 19FC  
                          l5626 1A26                            l4498 3078                            l6266 476E  
                          l6258 46D8                            l3698 449E                            l3794 2CFE  
                          l3786 2C86                            l6098 3962                            l6194 1694  
                          l6186 1576                            l6178 13EE                            l6282 4C6E  
                          l6274 4C00                            l6354 3ED2                            l6346 3E88  
                          l6290 4EEE                            l6418 463E                            l6370 4508  
                          l4668 54B4                            l4596 431E                            l4588 42D6  
                          l5396 2A78                            l5388 2A20                            l4860 56A6  
                          l4780 28C4                            l4772 2860                            l4764 282E  
                          l4756 27FA                            l4748 27B8                            l4692 265E  
                          l4684 263E                            l4676 260C                            l4852 3D80  
                          l4844 3D3C                            l4836 3D0A                            l4828 3CB4  
                          l5900 21CE                            l5820 1ECA                            l5812 1E94  
                          l5804 1E78                            l5740 1CCC                            l5732 1CB0  
                          l5724 1C84                            l5716 1C2E                            l5708 1BCC  
                          l5660 1A8E                            l5652 1A7E                            l5644 1A6E  
                          l5636 1A5E                            l5628 1A36                            l3796 2D00  
                          l3788 2CA6                            l6196 169E                            l6188 158E  
                          l6284 4C8A                            l6276 4C18                            l6356 3EE2  
                          l6292 4F06                            l6380 4524                            l6372 450C  
                          l4598 432A                            l5398 2A90                            l4862 56A8  
                          l4790 2930                            l4782 28D2                            l4774 288E  
                          l4758 2810                            l4766 2840                            l4694 2664  
                          l4686 2640                            l4678 260E                            l4846 3D60  
                          l4838 3D18                            l5910 2224                            l5902 21E8  
                          l5830 1F1A                            l5822 1EEA                            l5814 1EA4  
                          l5806 1E7E                            l5750 1CFE                            l5742 1CDC  
                          l5734 1CB2                            l5718 1C3E                            l5670 1AE0  
                          l5662 1A92                            l5654 1A82                            l5646 1A72  
                          l5638 1A62                            l5590 1970                            l3798 2D1A  
                          l6198 16CC                            l6286 4CA2                            l6278 4C24  
                          l6358 3EF6                            l6294 4F24                            l6390 454A  
                          l6382 4528                            l6374 4510                            l4864 56AA  
                          l4856 5696                            l4792 294A                            l4784 28FC  
                          l4768 284E                            l4696 2672                            l4688 2648  
                          l4848 3D70                            l5904 2204                            l5912 222A  
                          l5840 1F6A                            l5832 1F24                            l5824 1EFA  
                          l5816 1EB4                            l5808 1E84                            l5760 1D58  
                          l5752 1D14                            l5736 1CC0                            l5728 1C98  
                          l5744 1CDE                            l5680 1B24                            l5672 1AF0  
                          l5656 1A86                            l5648 1A76                            l5664 1A96  
                          l5592 1972                            l5920 5360                            l4960 34D0  
                          l4952 34A6                            l6296 4F3C                            l6392 454A  
                          l6384 452C                            l6376 4514                            l4866 56AC  
                          l4858 56A0                            l4794 2966                            l4778 28B8  
                          l4786 2900                            l4698 2674                            l5930 48EC  
                          l5914 222E                            l5906 2214                            l5850 1FAC  
                          l5842 1F76                            l5834 1F3A                            l5818 1EC4  
                          l5770 1DD4                            l5762 1D92                            l5738 1CC8  
                          l5746 1CEC                            l5682 1B26                            l5674 1B06  
                          l5666 1A9A                            l5658 1A8A                            l5594 1982  
                          l5586 1956                            l4970 3530                            l4962 34E4  
                          l4954 34AA                            l6298 4F5A                            l6394 4556  
                          l6386 4530                            l6378 4518                            l4868 57D0  
                          l4796 296A                            l4788 291A                            l5940 497A  
                          l5932 48FC                            l5924 4880                            l5908 2222  
                          l5860 200E                            l5852 1FBC                            l5844 1F84  
                          l5836 1F46                            l5828 1F0E                            l5780 1DF4  
                          l5772 1DD8                            l5756 1D3E                            l5764 1D94  
                          l5748 1CF0                            l5692 1B76                            l5684 1B30  
                          l5676 1B12                            l5668 1AC4                            l5596 1992  
                          l5588 1962                            l4980 3594                            l4972 3548  
                          l4964 34FC                            l4956 34B4                            l6388 4544  
                          l4798 2978                            l5942 4980                            l5934 490A  
                          l5926 48AE                            l5870 20B6                            l5862 202A  
                          l5854 1FD6                            l5846 1F90                            l5838 1F5E  
                          l5790 1E22                            l5950 55BC                            l5782 1E02  
                          l5774 1DE6                            l5766 1DA4                            l5758 1D4A  
                          l5694 1B86                            l5686 1B52                            l5678 1B16  
                          l5598 19A2                            l5918 5350                            l4990 35F8  
                          l4982 35AC                            l4974 3560                            l4966 3514  
                          l4958 34CC                            l6398 456C                            l5960 47A4  
                          l5936 491C                            l5928 48BE                            l5880 20F2  
                          l5872 20C0                            l5864 2054                            l5856 1FE6  
                          l5848 1FA0                            l5792 1E30                            l5784 1E04  
                          l5776 1DEC                            l5768 1DB4                            l5696 1B94  
                          l5688 1B62                            l4992 3610                            l4984 35C4  
                          l4976 3578                            l4968 352C                            l5970 47F2  
                          l5962 47CE                            l5954 4778                            l5938 492A  
                          l5890 2164                            l5882 2100                            l5874 20CE  
                          l5866 208A                            l5858 2002                            l5794 1E32  
                          l5946 5596                            l5778 1DEE                            l5698 1BA2  
                          l4994 3628                            l4986 35DC                            l4978 3590  
                          l5980 481E                            l5964 47D0                            l5956 4790  
                          l5892 2172                            l5884 212E                            l5876 20E0  
                          l5868 2098                            l5796 1E42                            l5788 1E16  
                          l5948 55AC                            l4996 3640                            l4988 35F4  
                          l5990 484E                            l5966 47E0                            l5894 219C  
                          l5878 20EE                            l5798 1E52                            l4998 3658  
                          l5992 485E                            l5976 480A                            l5968 47E4  
                          l5888 2158                            l5896 21A0                            l5994 486E  
                          l5986 4832                            l5978 4814                            l5898 21BA  
                          l5988 483E                            l5998 2240                            STR_1 0E05  
                          STR_3 0E0D                            u3000 43E8                            u3001 43E4  
                          u3010 4426                            u3011 4422                            u3100 4CBC  
                          u3020 4450                            u3101 4CB8                            u3021 444C  
                          u3110 4CD6                            u3030 447E                            u3111 4CD2  
                          u3031 447A                            u3120 4CFC                            u3040 44C6  
                          u3200 2D1A                    _BAUD4CONbits 000EE9                            u3121 4CF8  
                          u3041 44C2                            u3201 2D16                            _LATE 000F7D  
                          u3130 4D1A                            u3050 4B30                            u3210 2D48  
                          u3131 4D16                            u3051 4B2C                            u3211 2D44  
                          _LATG 000F7F                            u3140 4D36                            u3060 4B52  
                          u3300 2F1A                            u3220 2D56                            u3141 4D32  
                          u3061 4B4E                            u3301 2F16                            u3221 2D52  
                          u3150 4D5C                            u3310 56D0                            u3070 4BA8  
                          u3230 2E7E                            u3151 4D58                            u3311 56CC  
                          u3071 4BA4                            u3231 2E7A                            u3320 56E6  
                          u5000 3CB0                            u3080 4BB8                            u3240 2E9C  
                          u3160 2CB6                            u4120 50F6                            u3321 56E2  
                          u5001 3CAC                            u3081 4BB4                            u3241 2E98  
                          u3161 2CB0                            u4121 50F2                            u3330 36B4  
                          u5010 3CFA                            u4130 5666                            u3090 54FC  
                          u3250 2EB6                            u3170 2CB8                            _T2PR 000FBC  
                          u3331 36B0                            u5011 3CF6                            u4131 5662  
                          u3091 54F8                            u3251 2EB2                            u3340 3798  
                          u4140 4DE8                            u5020 3D18                            u3260 2ED0  
                          u3180 2CCE                            u3341 3794                            u4141 4DE4  
                          u5021 3D14                            u3261 2ECC                            u3181 2CCA  
                          u4150 4E00                            u5030 3D28                            u3270 2EE0  
                          u3190 2CFE                            u4151 4DFC                            u5031 3D24  
                          u3271 2EDC                            u3191 2CFA                            u5040 3D36  
                          u6000 1D2A                            u4400 3052                            u4320 2F86  
                          u3280 2EF2                            u5041 3D32                            u6001 1D26  
                          u4401 304A                            u4321 2F82                            u3281 2EEE  
                          u3354 37F2                            u5050 3D70                            u6010 1D3E  
                          u4330 2F98                            u3290 2F02                            u3355 37EE  
                          u5051 3D6C                            u6011 1D3A                            u4331 2F90  
                          u3291 2EFE                            u3364 385C                            u5300 335A  
                          u5060 3D7E                            u6100 1E42                            u6020 1D58  
                          u4500 315C                            u4420 308A                            u2900 53D8  
                          u3365 3858                            u5301 3356                            u5061 3D7A  
                          u6101 1E3E                            u6021 1D54                            u4501 3154  
                          u4421 3086                            u2901 53D4                            u5310 3398  
                          u6110 1E52                            u6030 1D92                            u4430 309C  
                          u4350 2FD0                            u2910 55F6                            u5311 3394  
                          u6111 1E4E                            u6031 1D8E                            u4431 3094  
                          u4351 2FC8                            u2911 55F2                            u4600 429E  
                          u5320 33EA                            u3800 5404                            u6200 2100  
                          u6120 1E92                            u6040 1DA4                            u4520 3192  
                          u2920 3F2E                            u4601 429A                            u5321 33E6  
                          u3801 53FC                            u6201 20FC                            u6121 1E8E  
                          u6041 1DA0                            u4521 318E                            u2921 3F2A  
                          u4610 42D6                            u5330 343C                            u6210 212E  
                          u6130 1EA4                            u6050 1DB4                            u4530 31A4  
                          u4450 30D8                            u4418 3054                            u4370 3008  
                          u2930 3F60              verify_color@color2 00A1                            u4611 42D2  
                          u5331 3438                            u6211 212A                            u6131 1EA0  
                          u6051 1DB0                            u4531 319C                            u4451 30D0  
                          u4371 3004                            u2931 3F5C              verify_color@color3 009F  
                          u3820 4E4A                            u4620 430C                            u4700 41D4  
                          u5340 347A                            u5260 3292                            u5500 2A4C  
                          u6300 490A                            u6220 2144                            u6140 1EB4  
                          u6060 1DD4                            u4380 301A                            u4348 2F9A  
                          u2860 4A68                            u3821 4E46                            u4621 4308  
                          u4701 41D0                            u5341 3476                            u5261 328E  
                          u5501 2A48                            u6301 4906                            u6221 2140  
                          u6141 1EB0                            u6061 1DD0                            u4381 3012  
                          u2941 3F8A                            u2861 4A64                            u3830 4E6E  
                          u4630 431E                            u4710 420E                            u5350 34A4  
                          u5270 32B6                            u5510 2AA4                            u6310 492A  
                          u6230 2158                            u6150 1EEA                            u6070 1DE6  
                          u4550 31DA                            u4518 315E                            u4470 3114  
                          u2950 3FAE                            u2870 4A7A                            u3831 4E6A  
                          u4631 431A                            u4711 420A                            u5351 34A0  
                          u5271 32B2                            u5511 2AA0                            u6311 4926  
                          u6231 2154                            u6151 1EE6                            u6071 1DE2  
                          u4551 31D2                            u4471 3110                            u7007 571E  
                          u2951 3FAA                            u2871 4A76                            u4720 5014  
                          u3840 4EB8                            u4640 4354                            u5280 32DE  
                          u5520 2AFC                            u4800 26D4                            u6400 485E  
                          u6320 497A                            u6240 2172                            u6160 1EFA  
                          u6080 1E02                            u4480 3126                            u4448 309E  
                          u4368 2FD2                            u2960 3FD8                            u2880 4AA2  
                          u3760 3A4E                            u4721 5010                            u3841 4EB4  
                          u4641 4350                            u5281 32DA                            u5521 2AF8  
                          u4801 26D0                            u6401 485A                            u6321 4976  
                          u6241 216E                            u6161 1EF6                            u6081 1DFE  
                          u4481 311E                            u7017 573E                            u2961 3FD4  
                          u2881 4A9E                            u3761 3A4A                            u4730 502C  
                          u3850 4ED0                            u4650 438E                            u5290 331C  
                          u5530 2B54                            u4810 2714                            u3818 5406  
                          u6250 21BA                            u6170 2074                            u6090 1E30  
                          u6330 55AC                            u6410 2280                            u4570 3212  
                          u2970 4018                            u2890 4AD8                            u3770 3A96  
                          u4731 5028                            u3851 4ECC                            u4651 438A  
                          u5291 3318                            u5531 2B50                            u4811 2710  
                          u6251 21B6                            u6091 1E2C                            u6331 55A8  
                          u4571 320E                            u7107 3032                            u7027 575E  
                          u2971 4014                            u2891 4AD4                            u3771 3A92  
                          u4660 411E                            u5540 2BAC                            u4900 288E  
                          u4820 278A                            u4740 260C                            u6340 4790  
                          u6260 21E8                            u6180 20CE                            u5700 1970  
                          u6420 22AA                            u4548 31A6                            u4468 30DA  
                          u3860 583C                            u2980 4062                            u3780 3ABA  
                          u6500 553E                            u4661 411A                            u5541 2BA8  
                          u4901 288A                            u4821 2786                            u4741 2608  
                          u6341 478C                            u6261 21E4                            u6181 20CA  
                          u5701 196C                            u6421 22A6                            u7117 306A  
                          u7037 577E                            u3861 5838                            u2981 405E  
                          u3781 3AB6                            u6501 553A                            u4670 4156  
                          u5550 2C04                            u4910 28A4                            u4830 27AC  
                          u4750 261E                            u6350 47C4                            u6270 2222  
                          u6190 20EE                            u5710 1982                            u6430 22DE  
                          u4398 301C                            u2990 43B6                            u3790 3B5E  
                          u6510 5554                            u4671 4152                            u7207 547C  
                          u5551 2C00                            u4911 28A0                            u4831 27A8  
                          u4751 261A                            u6271 221E                            u6191 20EA  
                          u6175 206A                            u5711 197E                            u6415 2276  
                          u7127 30B8                            u7047 4682                            u2991 43B2  
                          u3791 3B5A                            u6511 5550                            u4680 418C  
                          u5560 2C5C                            u5480 299E                            u4920 28B8  
                          u4840 27D6                            u4760 262E                            u6360 47F2  
                          u6280 48AE                            u5800 1ADC                            u5720 1992  
                          u6440 22FA                            u4568 31DC                            u6520 38E6  
                          u6600 17A4                            u4681 4188                            u7217 325A  
                          u5561 2C58                            u5481 299A                            u4921 28B4  
                          u4841 27D2                            u4761 262A                            u6361 47EE  
                          u6281 48AA                            u5801 1AD6                            u5721 198E  
                          u6441 22F6                            u7137 30F4                            u7057 46A6  
                          u6521 38E2                            u6601 17A0                            u4690 419E  
                          u5490 29F4                            u4930 28D2                            u4850 27FA  
                          u4770 2672                            u6370 4806                            u6290 48EC  
                          u5810 1ADE                            u5730 19D4                            u6450 233C  
                          u4498 3128                            u6530 394E                            u6610 17EE  
                          u7307 54BE                            u4691 419A                            u7227 40FE  
                          u5491 29F0                            u4931 28CE                            u4851 27F6  
                          u4771 266E                            u6371 4802                            u6355 47BA  
                          u6291 48E8                            u5731 19D0                            u6451 2338  
                          u6435 22D4                            u7147 313C                            u7067 46CA  
                          u6531 394A                            u6611 17EA                            u4940 291A  
                          u4860 2810                            u4780 2684                            u6380 482E  
                          u5900 1BF8                            u5820 1B06                            u5740 19EA  
                          u6460 2442                            u6540 39B6                            u6620 1806  
                          u6700 4CA2                            u7317 4DC8                            u7237 4168  
                          u4941 2916                            u4861 280C                            u4781 2680  
                          u6381 482A                            u5901 1BF4                            u5821 1B02  
                          u5741 19E6                            u6461 243E                            u7157 3172  
                          u7077 46EE                            u6541 39B2                            u6621 1802  
                          u6701 4C9E                            u4950 294A                            u4870 282E  
                          u4790 2694                            u6390 484E                            u5910 1C3E  
                          u5830 1B24                            u5750 19FC                            u6470 24E0  
                          u6550 3A1E                            u6630 1826                            u6710 4F78  
                          u7327 4E0A                            u7247 41B0                            u4951 2946  
                          u4871 282A                            u4791 2690                            u6391 484A  
                          u5911 1C3A                            u5831 1B20                            u5751 19F8  
                          u6471 24DC                            u7167 31BA                            u7087 2FB0  
                          u6551 3A1A                            u6631 1822                            u6711 4F74  
                          u4960 2978                            u4880 284E                            u5920 1C74  
                          u5840 1B44                            u5760 1A0C                            u6480 25A0  
                          u6640 185A                            u6560 15BC                            u6800 3EE2  
                          u6720 4F90                            u7337 4E98                            u7257 41EA  
                          u4961 2974                            u4881 284A                            u5921 1C70  
                          u5841 1B40                            u5761 1A08                            u7177 31F0  
                          u7097 2FE8                            u6641 1856                            u6561 15B8  
                          u6801 3EDE                            u6721 4F8C                            u4890 2860  
                          u4970 3BF0                            u5930 1C84                            u5850 1B52  
                          u5770 1A48                            u6490 25BC                            u6650 188C  
                          u6570 168A                            u6730 3DBA                            u6810 45C2  
                          u7347 4EDA                            u7267 427E                            u7187 579E  
                          u4891 285C                            u4971 3BEC                            u5931 1C80  
                          u5851 1B4E                            u5771 1A44                            u6491 25B8  
                          u6651 1888                            u6571 1686                            u6731 3DB6  
                          u6811 45BE                            u4980 3BFE                            u5940 1CB0  
                          u5860 1B62                            u5780 1A56                            u6660 18BA  
                          u6580 16CC                            u6740 3DDA                            u7357 4FF4  
                          u7277 42E8                            u7197 5618                            u4981 3BFA  
                          u5941 1CAC                            u5861 1B5E                            u5781 1A52  
                          u6485 2596                            u6661 18B6                            u6581 16C8  
                          u6741 3DD6                            u4990 3C5A                            u5950 1CC0  
                          u5870 1B94                            u5790 1AC4                            u6670 18E8  
                          u6590 178C                            u6750 3E00                            u7287 4330  
                          u4991 3C56                            u5951 1CBC                            u5871 1B90  
                          u5791 1AC0                            u6671 18E4                            u6591 1788  
                          u6751 3DFC                            u5960 1CDC                            u5880 1BA2  
                          u6680 191C                            u6760 3E30                            u7297 436A  
                          u5961 1CD8                            u5881 1B9E                            u6681 1918  
                          u6761 3E2C                            u5970 1CEC                            u5890 1BC0  
                          u6690 194A                            u6770 3E62                            u5971 1CE8  
                          u5891 1BBC                            u6907 38B6                            u6691 1946  
                          u6771 3E5E                            u6827 45E2                            u5980 1CFE  
                          u6780 3E88                            u5981 1CFA                            u6917 391E  
                          u6781 3E84                            u6837 4EF8                            u5990 1D14  
                          u6790 3E9A                            u5991 1D10                            u6927 3986  
                          u6791 3E96                            u6847 4F2E                            u6937 39EE  
                          u6857 3F02                            u6947 34BE                            u6867 4C0A  
                          u6957 351E                            u6877 10AC                            u6967 3582  
                          u6887 1312                            u6977 35E6                            u6897 1580  
                          u6987 3662                            u6997 367E                            abs@a 0015  
                          _dbuf 0163                            _main 4508                            _dtoa 2C86  
                          _prec 0158                            _nout 0154                            pad@i 001A  
                          pad@p 0017                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001C                            fsr2l 000FD9                            btemp 005C  
                          _stop 4E2E                            prodh 000FF4                            prodl 000FF3  
                          start 0048                  ?_color_display 0079                 ___fldiv@new_exp 0022  
        __end_of_color_read_Red 5260                 __end_of_HighISR 5892                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0017                           ??_pad 0019  
                 ___fltol@sign1 004F                 __end_of___aodiv 40A4       amb_light_measure@CC_amb_1 0080  
     amb_light_measure@CC_amb_2 0082       amb_light_measure@CC_amb_3 0084                 __end_of___fladd 1E16  
                         ?_main 0001                           ?_dtoa 001E                 __end_of___aomod 4508  
               __end_of___fldiv 298C                 __end_of___awdiv 4D6E                 __end_of___flneg 55CE  
               __end_of___flmul 2240                 __end_of___flsub 5396                 __end_of___fltol 4880  
                         ?_stop 001C                 ___awdiv@divisor 000B                           _LED_B 576E  
                         _LED_C 578E                           _LED_G 574E                           _LED_R 570E  
                         i1l690 003C                           i2l684 588E                 ___awdiv@counter 000D  
                  vfpfcnvrt@fmt 0044                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5842      __end_of_I2C_2_Master_Start 588E         ??_color_data_collection 00E1  
    __end_of_I2C_2_Master_Write 5864                 __end_of_compare 555C                    compare@lower 007A  
                         _flags 015A                           _color 0162                    compare@upper 007E  
                         _fputc 4A56                           _fputs 5396                           pad@fp 0013  
                         _width 0156                           _putch 5894                           _toint 0E01  
                         dtoa@d 0020                           dtoa@i 0040                           dtoa@n 0038  
                         dtoa@p 0032                           dtoa@s 0036                           dtoa@w 0034  
               ??_test_function 00F3            amb_light_measure@amb 007A                           tablat 000FF5  
               __end_of_lroundf 5596                           ttemp5 005D                           ttemp6 0060  
                         ttemp7 0064                           status 000FD8                           wtemp8 005D  
               __end_of_sprintf 5210                color_display@buf 007B         __end_of_color_read_Blue 5300  
         _I2C_2_Master_RepStart 5870                 ??_short_reverse 002C                 ?_color_read_Red 0007  
               __initialization 5100                    __end_of_main 4650                    __end_of_dtoa 2F68  
                 main@amb_light 018D            __end_of_detect_color 1956                    __end_of_stop 4EEA  
        color_data_collection@i 00E3          color_data_collection@j 00E5          color_data_collection@k 00E7  
        color_data_collection@m 00DF          color_data_collection@x 00E9                          ??_main 0183  
                        ??_dtoa 0028                          ??_stop 0020                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5842                       ??_LED_OFF 0003  
        _initDCmotors_parameter 4984                    ?_setMotorPWM 0011                          ?_fputc 0003  
                        ?_fputs 000C                ___awdiv@dividend 0009                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i1l5552 0022                          i1l5554 0032                          i1l5556 0038  
            turnLeft@angle_left 0026                       ??_HighISR 0001        __end_of_color_click_init 5638  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3D92                          _LowISR 0018                   ??_Timer0_init 0003  
               ??_color_predict 005A                    vfprintf@cfmt 0058                          ___flge 4880  
                     ??___aodiv 0013                       ??___fladd 000B                       ??___aomod 0013  
                        ___wmul 56E8                       ??___fldiv 0019                       ??___awdiv 000D  
                     ??___flneg 0007                       ??___flmul 0032                          _action 298C  
                     ??___flsub 001B                       ??___fltol 004B                          _goback 3214  
                 compare@result 0051                          _memory 0100                          clear_0 5130  
                        clear_1 513C                ___awdiv@quotient 000F                          _second 0160  
                        _motorL 0146                          _motorR 013C                          isa$std 000001  
                        pad@buf 0015                          _roundf 2240                          dtoa@fp 001E  
                        _strlen 55CE                       ??_compare 0051                   toggle_light@i 0006  
              __end_of_pin_init 57CE                          fputc@c 0003         toggle_light@lightnumber 0007  
                        fputs@c 0010                          fputs@i 0011                          fputs@s 000C  
                test_function@m 00EB                  test_function@w 00ED                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 0051                     read_color@m 000E  
                        putch@c 0001                __end_of_vfprintf 5100                          stop@mL 001C  
                        stop@mR 001E               ??_initDCmotorsPWM 0005                       ??_sprintf 005A  
              __end_of_turnLeft 43A4                      ___flge@ff1 0003                      ___flge@ff2 0007  
                  ___xxtofl@arg 000D                    ___xxtofl@exp 000C                    ___xxtofl@val 0003  
              calibrate_white@w 000E                 fullSpeedBack@mL 0022                 fullSpeedBack@mR 0024  
                    __accesstop 0060         __end_of__initialization 514E                   verify_color@m 009B  
                 verify_color@w 009D        __end_of_color_read_Clear 5350                      ___flneg@f1 0003  
      __end_of_color_read_Green 52B0          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0003    initDCmotors_parameter@motorR 0005                   ___rparam_used 000001  
                    ___fltol@f1 0072                   __end_of_LED_B 578E                   __end_of_LED_C 57AE  
                 __end_of_LED_G 576E                   __end_of_LED_R 572E                ?_color_read_Blue 0007  
               _Interrupts_init 5864                  __pcstackCOMRAM 0001                   _fullSpeedBack 4D6E  
                  __pidataBANK0 5896                    __pidataBANK1 5892         __end_of_buggylight_init 5858  
          turnRight@angle_right 0026           _distance_measure$3266 0082                   __end_of_fputc 4B20  
             detect_color@color 0094                   __end_of_fputs 53DA                   __end_of_putch 5896  
                 __end_of_toint 0E05             __end_of_Timer0_init 582A                         ??_LED_B 0003  
                       ??_LED_C 0003                         ??_LED_G 0003                         ??_LED_R 0003  
             ?_distance_measure 007A              ??_distance_measure 0051                         ??_fputc 0007  
                       ??_fputs 0010                         ??_putch 0003                      __pbssBANK0 00FB  
                    __pbssBANK1 0100                      __pbssBANK2 0200                color_predict@buf 0079  
     distance_measure@amb_light 007E                         ?_LowISR 0001               _color_writetoaddr 57CE  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0022                         ?___flge 0003  
            ?_color_writetoaddr 0005                         ?___wmul 0003                         ?_action 003C  
                       ?_goback 0034                         ?_roundf 0043             ??_color_writetoaddr 0006  
                       ?_strlen 0003                         _LED_OFF 572E                       ?___xxtofl 0003  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 007C                    _detect_color 0E14   __end_of_color_data_collection 3A2A  
       __end_of_Interrupts_init 5870          color_writetoaddr@value 0005                ??_color_read_Red 0009  
                       _HighISR 0008       __end_of_color_writetoaddr 57EE              _I2C_2_Master_Start 5884  
                    _initUSART4 57EE              _I2C_2_Master_Write 5858                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00F7                         __Lparam 0000  
             color_read_Red@tmp 000C                     _Timer0_init 580C         sendStringSerial4@string 0004  
                       ___aodiv 3F1C                         ___fladd 1956                         ___aomod 43A4  
                       ___fldiv 25F2                         ___awdiv 4CAA                         ___flneg 5596  
                       ___flmul 1E16                         ___flsub 5350                         ___fltol 4778  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0052                    __psmallconst 0E00       distance_measure@threshold 0088  
                       __pcinit 5100                         __ramtop 0E00                      _read_color 5160  
                     ?_turnLeft 0022                         __ptext0 4508                         __ptext1 4EEA  
                       __ptext2 3D92                         __ptext3 4BE6                         __ptext4 0E14  
                       __ptext5 5522                         __ptext6 386C                         __ptext7 5160  
                       __ptext8 5668                         __ptext9 502E                         _compare 5522  
       ?_initDCmotors_parameter 0003                       _T2CONbits 000FBD                      ??___xxtofl 0007  
                     _T2HLTbits 000FBE                         _lroundf 555C                   _RxBufWriteCnt 00FD  
                       goback@i 003A          distance_measure@CC_amb 0086                         main@amb 0185  
        distance_measure@CG_amb 0080                         _sprintf 51BE                         main@rgb 0190  
          ??_I2C_2_Master_Start 0004            ??_I2C_2_Master_Write 0004                  __pintcode_body 588E  
          end_of_initialization 514E              setMotorPWM@PWMduty 001A                 _CALIBRATION_135 01C7  
               _CALIBRATION_180 01C6                         fputc@fp 0005           __end_of_test_function 3F1C  
                       int_func 588E                         fputs@fp 000E               ?_color_click_init 0001  
               test_function@mL 00EF                 test_function@mR 00F1                 ??_fullSpeedBack 0026  
                    ??_pin_init 0003              ??_color_click_init 0007               __end_of_vfpfcnvrt 3BDE  
         __end_of_short_reverse 54A0                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       roundf@e 0064                         roundf@u 006A                         roundf@x 0043  
                       roundf@y 006E                      ??_vfprintf 0058                         strlen@a 0005  
                       strlen@s 0003                 _initDCmotorsPWM 541C                      ??_turnLeft 0027  
__end_of_initDCmotors_parameter 4A56                       _PORTFbits 000F8E        test_function@stop_signal 00F9  
             __end_of_turnRight 4224                     ___fladd@grs 0012                   ___xxtofl@sign 000B  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0024                     ___fldiv@rem 001D  
              fullSpeedAhead@mL 001C                fullSpeedAhead@mR 001E        color_writetoaddr@address 0006  
       ??_I2C_2_Master_RepStart 0004                      _start_move 015E                ?_Interrupts_init 0001  
                   ___flmul@grs 0038                   ?_toggle_light 0003               ?_color_read_Clear 0007  
                  _EUSART4RXbuf 0128                    _EUSART4TXbuf 0200               ?_color_read_Green 0007  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0003                   ?_verify_color 009B  
         __end_of_color_display 509E                      main@motorL 01B2                      main@motorR 01BC  
   amb_light_measure@CC_amb_ave 007E               ??_calibrate_white 0010              ??_color_read_Clear 0009  
                color_display@m 0079              ??_color_read_Green 0009                  detect_color@BB 0092  
                detect_color@BG 0095                  detect_color@GB 0086                  detect_color@GG 008C  
                detect_color@BR 0090                  detect_color@GR 008A                  detect_color@RB 0084  
                detect_color@RG 0088                  detect_color@RR 008E                  __end_of_LowISR 0048  
         __end_of_color_predict 5696                  __end_of___flge 4984                  _fullSpeedAhead 4F9A  
                   vfpfcnvrt@ap 0046                     vfpfcnvrt@fp 0042                     vfpfcnvrt@ll 004A  
                __end_of___wmul 570E                  __end_of_action 2C86                     ?_read_color 000E  
                __end_of_goback 34A6                  __end_of_roundf 25F2              turnRight@delay_135 0028  
            turnRight@delay_180 002A                  __end_of_strlen 5604             color_read_Clear@tmp 000C  
           start_initialization 5100                     __end_of_abs 5522                     __end_of_pad 4BE6  
                 _TxBufWriteCnt 005B               turnLeft@delay_135 0028               turnLeft@delay_180 002A  
                ??_toggle_light 0004                  ??_verify_color 0056             color_read_Green@tmp 000C  
                      ??_LowISR 0001                  _reverse_square 54A0         __end_of_initDCmotorsPWM 545E  
                   vfprintf@fmt 0054          __end_of_fullSpeedAhead 502E                        ??___flge 000B  
                      ??___wmul 0007                        ??_action 0040                        ??_goback 0038  
               short_reverse@mL 0028                 short_reverse@mR 002A                     __pdataBANK0 00FE  
                   __pdataBANK1 01C6                        ??_roundf 0047                        ??_strlen 0005  
                     ___fladd@a 0007                       ___fladd@b 0003                        ?_LED_OFF 0001  
                     ___fldiv@a 0015                       ___fldiv@b 0011                       ___flmul@a 002E  
                     ___flmul@b 002A                     __pbssCOMRAM 005A                       ___flsub@a 0017  
                     ___flsub@b 0013                   __pcstackBANK0 0060                   __pcstackBANK1 0183  
              ___aodiv@dividend 0003                        ?_HighISR 0001          __end_of_reverse_square 54E2  
                     _dtoa$2897 0030                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001C  
                     __pintcode 0008                        ?___aodiv 0003                        ?___fladd 0003  
                      ?___aomod 0003                        ?___fldiv 0011                        ?___awdiv 0009  
              ___aodiv@quotient 0015                        ?___flneg 0003                        ?___flmul 002A  
                      ?___flsub 0013                        ?___fltol 0072              test_function@color 00F8  
                   __pintcodelo 0018                 turnRight@i_1357 002E                 turnRight@i_1358 0030  
                turnLeft@i_1332 002E                  turnLeft@i_1333 0030            I2C_2_Master_Read@ack 0005  
          I2C_2_Master_Read@tmp 0006                        ?_compare 007A                     __smallconst 0E00  
             _I2C_2_Master_Idle 56C0               _I2C_2_Master_Init 5696               _I2C_2_Master_Read 53DA  
             _I2C_2_Master_Stop 587A          toggle_light@toggletime 0003                    _RxBufReadCnt 00FC  
                      ?_lroundf 0076              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0013              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0003                        ?_sprintf 0060               _sendStringSerial4 5638  
         _color_data_collection 386C             ??_I2C_2_Master_Idle 0003             ??_I2C_2_Master_Init 0003  
           ??_I2C_2_Master_Read 0004                  ___wmul@product 0007                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0004                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                 ?_reverse_square 0028                        _PIE0bits 000E29  
            ?_sendStringSerial4 0004                        _PIE4bits 000E2D                     turnRight@mL 0022  
                   turnRight@mR 0024                        i1u563_20 0032                        i1u563_21 002E  
                      _PIR0bits 000E33                        _PIR4bits 000E37                ?_initDCmotorsPWM 0003  
             ??_sendCharSerial4 0003                        _SSP2CON2 000EDA             ??_sendStringSerial4 0006  
                      _SSP2STAT 000ED8                     _array_index 005A                       _vfpfcnvrt 3A2A  
     __end_of_I2C_2_Master_Idle 56E8            __end_of_toggle_light 3214       __end_of_I2C_2_Master_Init 56C0  
     __end_of_I2C_2_Master_Read 541C               ___wmul@multiplier 0003       __end_of_I2C_2_Master_Stop 5884  
                  setMotorPWM@m 0011     I2C_2_Master_Write@data_byte 0004            __end_of_verify_color 4F9A  
        test_function@amb_light 00F5                       main@white 0198               ??_color_read_Blue 0009  
                     _stop_move 015C                   detect_color@m 0080                   detect_color@w 0082  
                  _TxBufReadCnt 00FB                       _turnRight 40A4                 _calibrate_white 34A6  
     __end_of_sendStringSerial4 5668               _amb_light_measure 4650   __end_of_I2C_2_Master_RepStart 587A  
            color_read_Blue@tmp 000C             __end_of_setMotorPWM 386C                      roundf@F527 0150  
              _distance_measure 4BE6                    ??_initUSART4 0003              ?_amb_light_measure 007A  
                      __Hrparam 0000                      vfprintf@ap 0056                        __Lrparam 0000  
                    vfprintf@fp 0052           __end_of_fullSpeedBack 4E2E                    __Lsmallconst 0E00  
          compare@value2compare 007C             ??_amb_light_measure 0051                      ?_vfpfcnvrt 0042  
                  ??_read_color 0010                 ___aodiv@divisor 000B                 ___aodiv@counter 0013  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                     action@color 0042  
                    sprintf@fmt 0062                        ___xxtofl 3BDE                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6              __end_of_initUSART4 580C                      ?_turnRight 0022  
                      __ptext10 51BE                        __ptext11 509E                        __ptext20 43A4  
                      __ptext12 3A2A                        __ptext21 3F1C                        __ptext13 2C86  
                      __ptext30 574E                        __ptext22 5638                        __ptext14 4B20  
                      __ptext31 576E                        __ptext23 582A                        __ptext15 55CE  
                      __ptext40 4880                        __ptext32 4650                        __ptext24 34A6  
                      __ptext16 5396                        __ptext41 4778                        __ptext33 2F68  
                      __ptext25 5210                        __ptext17 4A56                        __ptext50 4984  
                      __ptext42 5300                        __ptext34 555C                        __ptext26 5260  
                      __ptext18 5894                        __ptext51 541C                        __ptext43 5870  
                      __ptext35 2240                        __ptext27 52B0                        __ptext19 54E2  
                      __ptext60 298C                        __ptext52 5604                        __ptext44 53DA  
                      __ptext36 5350                        __ptext28 570E                        __ptext61 545E  
                      __ptext53 57CE                        __ptext45 3BDE                        __ptext37 1956  
                      __ptext29 572E                        __ptext70 56E8                        __ptext62 3214  
                      __ptext54 5858                        __ptext46 25F2                        __ptext38 5596  
                      __ptext71 4CAA                        __ptext63 40A4                        __ptext55 587A  
                      __ptext47 578E                        __ptext39 1E16                        __ptext72 580C  
                      __ptext64 4224                        __ptext56 5884                        __ptext48 57AE  
                      __ptext73 5864                        __ptext65 54A0                        __ptext57 56C0  
                      __ptext49 57EE                        __ptext66 4D6E                        __ptext58 5696  
                      __ptext67 4E2E                        __ptext59 5842                        __ptext68 4F9A  
                      __ptext69 3698       __end_of_amb_light_measure 4778                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 00DF                  turnRight@delay 0032  
        test_function@test_code 00FA                   turnLeft@delay 0032                        action@mL 003C  
                      action@mR 003E                      turnLeft@mL 0022                      turnLeft@mR 0024  
            __end_of_read_color 51BE                        _pin_init 57AE                      turnRight@i 002C  
                      isa$xinst 000000            distance_measure@stop 008A                      _RC4STAbits 000EE7  
                      int$flags 005C                     _SENSITIVITY 00FE                        goback@mL 0034  
                      goback@mR 0036                        _vfprintf 509E                        _turnLeft 4224  
              ___aomod@dividend 0003         __end_of_calibrate_white 3698                      _INTCONbits 000FF2  
                   _setMotorPWM 3698                   ?_detect_color 0080                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel1 0000                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0003                ??_fullSpeedAhead 0020  
                 _test_function 3D92                       turnLeft@i 002C                reverse_square@mL 0028  
              reverse_square@mR 002A                        lroundf@x 0076        ??_initDCmotors_parameter 0007  
                 _short_reverse 545E                 ___aomod@divisor 000B                     ??_vfpfcnvrt 0048  
               ___aomod@counter 0013                _color_click_init 5604                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3265 0097                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 007A              distance_measure@mR 007C  
                ??_detect_color 0052                     ??_turnRight 0027                   ___fladd@signs 000F  
              ??_reverse_square 002C                      _TX4STAbits 000EE8                    ___aodiv@sign 0014  
               _sendCharSerial4 582A                    ___fladd@aexp 0010                    ___fladd@bexp 0011  
                ?_test_function 00EB                    _toggle_light 2F68                    ___aomod@sign 0014  
                  _verify_color 4EEA                     _roundf$3267 0066                     _roundf$3268 0060  
                 _color_display 502E                 main@stop_signal 018F  
