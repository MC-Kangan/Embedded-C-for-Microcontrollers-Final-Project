

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 17 16:33:07 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  005CE2                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _SENSITIVITY
   136  005CE2  0064               	dw	100
   137                           
   138                           	psect	smallconst
   139  000E00                     __psmallconst:
   140                           	callstack 0
   141  000E00  00                 	db	0
   142  000E01  0000               	dw	0
   143  000E03  4B00               	dw	19200
   144  000E05                     __end_of_toint:
   145                           	callstack 0
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISEbits	set	3973
   151  0000                     _LATFbits	set	3966
   152  0000                     _LATGbits	set	3967
   153  0000                     _TRISGbits	set	3975
   154  0000                     _LATHbits	set	3968
   155  0000                     _TRISHbits	set	3976
   156  0000                     _SSP2CON2bits	set	3802
   157  0000                     _LATG	set	3967
   158  0000                     _LATE	set	3965
   159  0000                     _RX4PPS	set	3605
   160  0000                     _SSP2CLKPPS	set	3612
   161  0000                     _SSP2DATPPS	set	3613
   162  0000                     _ANSELDbits	set	3751
   163  0000                     _ANSELFbits	set	3764
   164  0000                     _TRISFbits	set	3974
   165  0000                     _SSP2BUF	set	3797
   166  0000                     _SSP2ADD	set	3798
   167  0000                     _SSP2CON1bits	set	3801
   168  0000                     _LATAbits	set	3961
   169  0000                     _LATDbits	set	3964
   170  0000                     _TRISDbits	set	3972
   171  0000                     _PORTFbits	set	3982
   172  0000                     _T2PR	set	4028
   173  0000                     _T2CONbits	set	4029
   174  0000                     _PWM7DCH	set	4000
   175  0000                     _PWM6DCH	set	4003
   176  0000                     _TRISCbits	set	3971
   177  0000                     _TRISAbits	set	3969
   178  0000                     _LATCbits	set	3963
   179  0000                     _RC4REG	set	3811
   180  0000                     _SP4BRGL	set	3813
   181  0000                     _TX4STAbits	set	3816
   182  0000                     _BAUD4CONbits	set	3817
   183  0000                     _SSP2CON2	set	3802
   184  0000                     _SSP2STAT	set	3800
   185  0000                     _PIE0bits	set	3625
   186  0000                     _PIR4bits	set	3639
   187  0000                     _RC0PPS	set	3682
   188  0000                     _RC7PPS	set	3689
   189  0000                     _RD5PPS	set	3695
   190  0000                     _RE2PPS	set	3700
   191  0000                     _RD6PPS	set	3696
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON0bits	set	4053
   195  0000                     _T2CLKCONbits	set	4031
   196  0000                     _T2HLTbits	set	4030
   197  0000                     _PWM6CONbits	set	4004
   198  0000                     _PWM7CONbits	set	4001
   199  0000                     _T0CON1bits	set	4054
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PIR0bits	set	3635
   202  000E05                     STR_1:
   203                           
   204                           ; BSR set to: 14
   205  000E05  25                 	db	37
   206  000E06  64                 	db	100	;'d'
   207  000E07  09                 	db	9
   208  000E08  25                 	db	37
   209  000E09  64                 	db	100	;'d'
   210  000E0A  09                 	db	9
   211  000E0B  25                 	db	37
   212  000E0C  64                 	db	100	;'d'
   213  000E0D  09                 	db	9
   214  000E0E  25                 	db	37
   215  000E0F  64                 	db	100	;'d'
   216  000E10  0D                 	db	13
   217  000E11  0A                 	db	10
   218  000E12  00                 	db	0
   219  000E13  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  005832                     __pcinit:
   225                           	callstack 0
   226  005832                     start_initialization:
   227                           	callstack 0
   228  005832                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (2 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  005832  0EE2               	movlw	low __pidataBANK0
   234  005834  6EF6               	movwf	tblptrl,c
   235  005836  0E5C               	movlw	high __pidataBANK0
   236  005838  6EF7               	movwf	tblptrh,c
   237  00583A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  00583C  6EF8               	movwf	tblptru,c
   239  00583E  0009               	tblrd		*+	;fetch initializer
   240  005840  CFF5 F0FC          	movff	tablat,__pdataBANK0
   241  005844  0009               	tblrd		*+	;fetch initializer
   242  005846  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   243                           
   244                           ; Clear objects allocated to BANK1 (158 bytes)
   245  00584A  EE01  F000         	lfsr	0,__pbssBANK1
   246  00584E  0E9E               	movlw	158
   247  005850                     clear_0:
   248  005850  6AEE               	clrf	postinc0,c
   249  005852  06E8               	decf	wreg,f,c
   250  005854  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (8 bytes)
   253  005856  EE00  F0F4         	lfsr	0,__pbssBANK0
   254  00585A  0E08               	movlw	8
   255  00585C                     clear_1:
   256  00585C  6AEE               	clrf	postinc0,c
   257  00585E  06E8               	decf	wreg,f,c
   258  005860  E1FD               	bnz	clear_1
   259  005862                     end_of_initialization:
   260                           	callstack 0
   261  005862                     __end_of__initialization:
   262                           	callstack 0
   263  005862  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  005864  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  005866  0E00               	movlw	low (__Lsmallconst shr (0+16))
   266  005868  6EF8               	movwf	tblptru,c
   267  00586A  0E0E               	movlw	high __Lsmallconst
   268  00586C  6EF7               	movwf	tblptrh,c
   269  00586E  0100               	movlb	0
   270  005870  EF1D  F01B         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssBANK0
   273  0000F4                     __pbssBANK0:
   274                           	callstack 0
   275  0000F4                     _nout:
   276                           	callstack 0
   277  0000F4                     	ds	2
   278  0000F6                     _width:
   279                           	callstack 0
   280  0000F6                     	ds	2
   281  0000F8                     _prec:
   282                           	callstack 0
   283  0000F8                     	ds	2
   284  0000FA                     _flags:
   285                           	callstack 0
   286  0000FA                     	ds	2
   287                           
   288                           	psect	dataBANK0
   289  0000FC                     __pdataBANK0:
   290                           	callstack 0
   291  0000FC                     _SENSITIVITY:
   292                           	callstack 0
   293  0000FC                     	ds	2
   294                           
   295                           	psect	bssBANK1
   296  000100                     __pbssBANK1:
   297                           	callstack 0
   298  000100                     _memory:
   299                           	callstack 0
   300  000100                     	ds	100
   301  000164                     _motorR:
   302                           	callstack 0
   303  000164                     	ds	9
   304  00016D                     _motorL:
   305                           	callstack 0
   306  00016D                     	ds	9
   307  000176                     roundf@F527:
   308                           	callstack 0
   309  000176                     	ds	4
   310  00017A                     _centisecond:
   311                           	callstack 0
   312  00017A                     	ds	2
   313  00017C                     _color:
   314                           	callstack 0
   315  00017C                     	ds	1
   316  00017D                     _array_index:
   317                           	callstack 0
   318  00017D                     	ds	1
   319  00017E                     _dbuf:
   320                           	callstack 0
   321  00017E                     	ds	32
   322                           
   323                           	psect	cstackBANK1
   324  00019E                     __pcstackBANK1:
   325                           	callstack 0
   326  00019E                     main@amb:
   327                           	callstack 0
   328                           
   329                           ; 8 bytes @ 0x0
   330  00019E                     	ds	8
   331  0001A6                     main@amb_light:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x8
   335  0001A6                     	ds	2
   336  0001A8                     main@stop_signal:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xA
   340  0001A8                     	ds	1
   341  0001A9                     main@accident:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xB
   345  0001A9                     	ds	1
   346  0001AA                     main@start_time:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xC
   350  0001AA                     	ds	2
   351  0001AC                     main@stop_time:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0xE
   355  0001AC                     	ds	2
   356  0001AE                     main@rgb:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x10
   360  0001AE                     	ds	8
   361  0001B6                     main@white:
   362                           	callstack 0
   363                           
   364                           ; 28 bytes @ 0x18
   365  0001B6                     	ds	28
   366  0001D2                     main@motorL:
   367                           	callstack 0
   368                           
   369                           ; 9 bytes @ 0x34
   370  0001D2                     	ds	9
   371  0001DB                     main@motorR:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x3D
   375  0001DB                     	ds	9
   376                           
   377                           	psect	cstackBANK0
   378  000060                     __pcstackBANK0:
   379                           	callstack 0
   380  000060                     ?_sprintf:
   381                           	callstack 0
   382  000060                     ?_setup:
   383                           	callstack 0
   384  000060                     detect_color@RG:
   385                           	callstack 0
   386  000060                     setup@white:
   387                           	callstack 0
   388  000060                     sprintf@s:
   389                           	callstack 0
   390  000060                     _detect_wall$2932:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x0
   394  000060                     	ds	2
   395  000062                     detect_color@BC:
   396                           	callstack 0
   397  000062                     setup@amb:
   398                           	callstack 0
   399  000062                     sprintf@fmt:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000062                     	ds	2
   404  000064                     detect_color@GR:
   405                           	callstack 0
   406  000064                     detect_wall@CC_amb:
   407                           	callstack 0
   408  000064                     setup@mL:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x4
   412  000064                     	ds	2
   413  000066                     detect_color@BR:
   414                           	callstack 0
   415  000066                     detect_wall@threshold:
   416                           	callstack 0
   417  000066                     setup@mR:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x6
   421  000066                     	ds	2
   422  000068                     detect_wall@stop:
   423                           	callstack 0
   424  000068                     detect_color@RB:
   425                           	callstack 0
   426  000068                     setup@amb_light:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x8
   430  000068                     	ds	2
   431  00006A                     detect_color@GB:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0xA
   435  00006A                     	ds	2
   436  00006C                     detect_color@BB:
   437                           	callstack 0
   438  00006C                     sprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xC
   442  00006C                     	ds	2
   443  00006E                     detect_color@GG:
   444                           	callstack 0
   445  00006E                     sprintf@f:
   446                           	callstack 0
   447                           
   448                           ; 11 bytes @ 0xE
   449  00006E                     	ds	2
   450  000070                     detect_color@RR:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454  000070                     	ds	2
   455  000072                     detect_color@color:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x12
   459  000072                     	ds	1
   460  000073                     detect_color@BG:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x13
   464  000073                     	ds	2
   465  000075                     _detect_color$2931:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x15
   469  000075                     	ds	4
   470  000079                     verify_color@m:
   471                           	callstack 0
   472  000079                     color_display@buf:
   473                           	callstack 0
   474  000079                     color_predict@buf:
   475                           	callstack 0
   476                           
   477                           ; 100 bytes @ 0x19
   478  000079                     	ds	2
   479  00007B                     verify_color@w:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x1B
   483  00007B                     	ds	2
   484  00007D                     ??_verify_color:
   485                           
   486                           ; 1 bytes @ 0x1D
   487  00007D                     	ds	2
   488  00007F                     verify_color@color2:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x1F
   492  00007F                     	ds	2
   493  000081                     verify_color@color:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x21
   497  000081                     	ds	92
   498  0000DD                     color_predict@color:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x7D
   502  0000DD                     	ds	1
   503  0000DE                     color_data_collection@i:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x7E
   507  0000DE                     	ds	2
   508  0000E0                     test_function@m:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x80
   512  0000E0                     	ds	2
   513  0000E2                     test_function@w:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x82
   517  0000E2                     	ds	2
   518  0000E4                     test_function@mL:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x84
   522  0000E4                     	ds	2
   523  0000E6                     test_function@mR:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x86
   527  0000E6                     	ds	2
   528  0000E8                     ??_test_function:
   529                           
   530                           ; 1 bytes @ 0x88
   531  0000E8                     	ds	2
   532  0000EA                     test_function@amb_light:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x8A
   536  0000EA                     	ds	2
   537  0000EC                     test_function@complete:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x8C
   541  0000EC                     	ds	1
   542  0000ED                     test_function@color:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x8D
   546  0000ED                     	ds	1
   547  0000EE                     test_function@stop_signal:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x8E
   551  0000EE                     	ds	1
   552  0000EF                     test_function@test_code:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x8F
   556  0000EF                     	ds	1
   557  0000F0                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x90
   560  0000F0                     	ds	4
   561                           
   562                           	psect	cstackCOMRAM
   563  000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565  000001                     ??_LED_OFF:
   566  000001                     ??_LED_R:
   567  000001                     ??_LED_C:
   568  000001                     ??_LED_B:
   569  000001                     ??_LED_G:
   570  000001                     ??_I2C_2_Master_Idle:
   571  000001                     ?_strlen:
   572                           	callstack 0
   573  000001                     ?___wmul:
   574                           	callstack 0
   575  000001                     ?___fladd:
   576                           	callstack 0
   577  000001                     ?___flneg:
   578                           	callstack 0
   579  000001                     ?___xxtofl:
   580                           	callstack 0
   581  000001                     ?___aodiv:
   582                           	callstack 0
   583  000001                     ?___aomod:
   584                           	callstack 0
   585  000001                     toggle_light@toggletime:
   586                           	callstack 0
   587  000001                     sendCharSerial4@charToSend:
   588                           	callstack 0
   589  000001                     initDCmotorsPWM@PWMperiod:
   590                           	callstack 0
   591  000001                     initDCmotors_parameter@motorL:
   592                           	callstack 0
   593  000001                     ___wmul@multiplier:
   594                           	callstack 0
   595  000001                     fputc@c:
   596                           	callstack 0
   597  000001                     strlen@s:
   598                           	callstack 0
   599  000001                     ___flge@ff1:
   600                           	callstack 0
   601  000001                     ___flneg@f1:
   602                           	callstack 0
   603  000001                     ___fladd@b:
   604                           	callstack 0
   605  000001                     ___xxtofl@val:
   606                           	callstack 0
   607  000001                     ___aodiv@dividend:
   608                           	callstack 0
   609  000001                     ___aomod@dividend:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0x0
   613  000001                     	ds	1
   614  000002                     ??_I2C_2_Master_Read:
   615  000002                     ??_toggle_light:
   616  000002                     I2C_2_Master_Write@data_byte:
   617                           	callstack 0
   618  000002                     sendStringSerial4@string:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x1
   622  000002                     	ds	1
   623  000003                     color_writetoaddr@value:
   624                           	callstack 0
   625  000003                     I2C_2_Master_Read@ack:
   626                           	callstack 0
   627  000003                     initDCmotors_parameter@motorR:
   628                           	callstack 0
   629  000003                     ___wmul@multiplicand:
   630                           	callstack 0
   631  000003                     fputc@fp:
   632                           	callstack 0
   633  000003                     strlen@a:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2
   637  000003                     	ds	1
   638  000004                     toggle_light@i:
   639                           	callstack 0
   640  000004                     color_writetoaddr@address:
   641                           	callstack 0
   642  000004                     I2C_2_Master_Read@tmp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x3
   646  000004                     	ds	1
   647  000005                     ??_fputc:
   648  000005                     ??_color_click_init:
   649  000005                     ??___xxtofl:
   650  000005                     ?_color_read_Red:
   651                           	callstack 0
   652  000005                     ?_color_read_Blue:
   653                           	callstack 0
   654  000005                     ?_color_read_Green:
   655                           	callstack 0
   656  000005                     ?_color_read_Clear:
   657                           	callstack 0
   658  000005                     toggle_light@lightnumber:
   659                           	callstack 0
   660  000005                     ___wmul@product:
   661                           	callstack 0
   662  000005                     ___flge@ff2:
   663                           	callstack 0
   664  000005                     ___fladd@a:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x4
   668  000005                     	ds	2
   669  000007                     ??_color_read_Red:
   670  000007                     ??_color_read_Blue:
   671  000007                     ??_color_read_Green:
   672  000007                     ??_color_read_Clear:
   673  000007                     ?___awdiv:
   674                           	callstack 0
   675  000007                     ___awdiv@dividend:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x6
   679  000007                     	ds	2
   680  000009                     ??___fladd:
   681  000009                     ??___flge:
   682  000009                     ___xxtofl@sign:
   683                           	callstack 0
   684  000009                     ___awdiv@divisor:
   685                           	callstack 0
   686  000009                     ___aodiv@divisor:
   687                           	callstack 0
   688  000009                     ___aomod@divisor:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x8
   692  000009                     	ds	1
   693  00000A                     ___xxtofl@exp:
   694                           	callstack 0
   695  00000A                     color_read_Red@tmp:
   696                           	callstack 0
   697  00000A                     color_read_Blue@tmp:
   698                           	callstack 0
   699  00000A                     color_read_Green@tmp:
   700                           	callstack 0
   701  00000A                     color_read_Clear@tmp:
   702                           	callstack 0
   703  00000A                     fputs@s:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x9
   707  00000A                     	ds	1
   708  00000B                     ___awdiv@counter:
   709                           	callstack 0
   710  00000B                     ___xxtofl@arg:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xA
   714  00000B                     	ds	1
   715  00000C                     ___awdiv@sign:
   716                           	callstack 0
   717  00000C                     read_color@m:
   718                           	callstack 0
   719  00000C                     calibrate_white@w:
   720                           	callstack 0
   721  00000C                     fputs@fp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0xB
   725  00000C                     	ds	1
   726  00000D                     ___fladd@signs:
   727                           	callstack 0
   728  00000D                     ___awdiv@quotient:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xC
   732  00000D                     	ds	1
   733  00000E                     ??_calibrate_white:
   734  00000E                     ___fladd@aexp:
   735                           	callstack 0
   736  00000E                     fputs@c:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0xD
   740  00000E                     	ds	1
   741  00000F                     ?___flmul:
   742                           	callstack 0
   743  00000F                     ___fladd@bexp:
   744                           	callstack 0
   745  00000F                     setMotorPWM@m:
   746                           	callstack 0
   747  00000F                     fputs@i:
   748                           	callstack 0
   749  00000F                     ___flmul@b:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0xE
   753  00000F                     	ds	1
   754  000010                     ___fladd@grs:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xF
   758  000010                     	ds	1
   759  000011                     ??_setMotorPWM:
   760  000011                     ?_pad:
   761                           	callstack 0
   762  000011                     ?___flsub:
   763                           	callstack 0
   764  000011                     ___aodiv@counter:
   765                           	callstack 0
   766  000011                     ___aomod@counter:
   767                           	callstack 0
   768  000011                     pad@fp:
   769                           	callstack 0
   770  000011                     ___flsub@b:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x10
   774  000011                     	ds	1
   775  000012                     ___aodiv@sign:
   776                           	callstack 0
   777  000012                     ___aomod@sign:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x11
   781  000012                     	ds	1
   782  000013                     ?_abs:
   783                           	callstack 0
   784  000013                     pad@buf:
   785                           	callstack 0
   786  000013                     abs@a:
   787                           	callstack 0
   788  000013                     ___flmul@a:
   789                           	callstack 0
   790  000013                     ___aodiv@quotient:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x12
   794  000013                     	ds	2
   795  000015                     ??_abs:
   796  000015                     pad@p:
   797                           	callstack 0
   798  000015                     ___flsub@a:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x14
   802  000015                     	ds	2
   803  000017                     ??___flmul:
   804  000017                     ??_pad:
   805                           
   806                           ; 1 bytes @ 0x16
   807  000017                     	ds	1
   808  000018                     setMotorPWM@PWMduty:
   809                           	callstack 0
   810  000018                     pad@i:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x17
   814  000018                     	ds	1
   815  000019                     
   816                           ; 1 bytes @ 0x18
   817  000019                     	ds	1
   818  00001A                     stop@mL:
   819                           	callstack 0
   820  00001A                     fullSpeedAhead@mL:
   821                           	callstack 0
   822  00001A                     pad@w:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x19
   826  00001A                     	ds	1
   827  00001B                     ___flmul@sign:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1A
   831  00001B                     	ds	1
   832  00001C                     ?_dtoa:
   833                           	callstack 0
   834  00001C                     stop@mR:
   835                           	callstack 0
   836  00001C                     fullSpeedAhead@mR:
   837                           	callstack 0
   838  00001C                     dtoa@fp:
   839                           	callstack 0
   840  00001C                     ___flmul@grs:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x1B
   844  00001C                     	ds	2
   845  00001E                     ??_stop:
   846  00001E                     ??_fullSpeedAhead:
   847  00001E                     dtoa@d:
   848                           	callstack 0
   849                           
   850                           ; 8 bytes @ 0x1D
   851  00001E                     	ds	2
   852  000020                     ___flmul@aexp:
   853                           	callstack 0
   854  000020                     turn45@mL:
   855                           	callstack 0
   856  000020                     fullSpeedBack@mL:
   857                           	callstack 0
   858  000020                     short_burst@mL:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1F
   862  000020                     	ds	1
   863  000021                     ___flmul@bexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x20
   867  000021                     	ds	1
   868  000022                     turn45@mR:
   869                           	callstack 0
   870  000022                     fullSpeedBack@mR:
   871                           	callstack 0
   872  000022                     short_burst@mR:
   873                           	callstack 0
   874  000022                     ___flmul@prod:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x21
   878  000022                     	ds	2
   879  000024                     ??_short_burst:
   880  000024                     turn45@turn_time:
   881                           	callstack 0
   882  000024                     fullSpeedBack@instruction:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x23
   886  000024                     	ds	1
   887  000025                     ??_fullSpeedBack:
   888  000025                     turn45@direction:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x24
   892  000025                     	ds	1
   893  000026                     ??_turn45:
   894  000026                     ??_dtoa:
   895  000026                     ___flmul@temp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x25
   899  000026                     	ds	2
   900  000028                     ?___fldiv:
   901                           	callstack 0
   902  000028                     ?_roundf:
   903                           	callstack 0
   904  000028                     turn45@i_1327:
   905                           	callstack 0
   906  000028                     ___fldiv@b:
   907                           	callstack 0
   908  000028                     roundf@x:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x27
   912  000028                     	ds	2
   913  00002A                     turn45@i_1329:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x29
   917  00002A                     	ds	2
   918  00002C                     ??_roundf:
   919  00002C                     turn45@i:
   920                           	callstack 0
   921  00002C                     ___fldiv@a:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x2B
   925  00002C                     	ds	1
   926  00002D                     goback@mL:
   927                           	callstack 0
   928  00002D                     test_action@mL:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x2C
   932  00002D                     	ds	1
   933  00002E                     _dtoa$2601:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2D
   937  00002E                     	ds	1
   938  00002F                     goback@mR:
   939                           	callstack 0
   940  00002F                     test_action@mR:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x2E
   944  00002F                     	ds	1
   945  000030                     ??___fldiv:
   946  000030                     dtoa@p:
   947                           	callstack 0
   948  000030                     _roundf$2934:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x2F
   952  000030                     	ds	1
   953  000031                     ??_goback:
   954  000031                     ??_test_action:
   955                           
   956                           ; 1 bytes @ 0x30
   957  000031                     	ds	1
   958  000032                     dtoa@w:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x31
   962  000032                     	ds	1
   963  000033                     goback@i:
   964                           	callstack 0
   965  000033                     calibration_motor@mL:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x32
   969  000033                     	ds	1
   970  000034                     dtoa@s:
   971                           	callstack 0
   972  000034                     roundf@e:
   973                           	callstack 0
   974  000034                     ___fldiv@rem:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x33
   978  000034                     	ds	1
   979  000035                     turning_action@mL:
   980                           	callstack 0
   981  000035                     calibration_motor@mR:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x34
   985  000035                     	ds	1
   986  000036                     _roundf$2933:
   987                           	callstack 0
   988  000036                     dtoa@n:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0x35
   992  000036                     	ds	1
   993  000037                     ??_calibration_motor:
   994  000037                     turning_action@mR:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x36
   998  000037                     	ds	1
   999  000038                     ___fldiv@sign:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x37
  1003  000038                     	ds	1
  1004  000039                     turning_action@color:
  1005                           	callstack 0
  1006  000039                     ___fldiv@new_exp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x38
  1010  000039                     	ds	1
  1011  00003A                     roundf@u:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x39
  1015  00003A                     	ds	1
  1016  00003B                     ___fldiv@grs:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x3A
  1020  00003B                     	ds	3
  1021  00003E                     dtoa@i:
  1022                           	callstack 0
  1023  00003E                     roundf@y:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3D
  1027  00003E                     	ds	1
  1028  00003F                     ___fldiv@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x3E
  1032  00003F                     	ds	1
  1033  000040                     ?_vfpfcnvrt:
  1034                           	callstack 0
  1035  000040                     ___fldiv@aexp:
  1036                           	callstack 0
  1037  000040                     vfpfcnvrt@fp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x3F
  1041  000040                     	ds	2
  1042  000042                     ?___fltol:
  1043                           	callstack 0
  1044  000042                     vfpfcnvrt@fmt:
  1045                           	callstack 0
  1046  000042                     ___fltol@f1:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x41
  1050  000042                     	ds	2
  1051  000044                     vfpfcnvrt@ap:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x43
  1055  000044                     	ds	2
  1056  000046                     ??___fltol:
  1057  000046                     ??_vfpfcnvrt:
  1058                           
  1059                           ; 1 bytes @ 0x45
  1060  000046                     	ds	2
  1061  000048                     vfpfcnvrt@ll:
  1062                           	callstack 0
  1063                           
  1064                           ; 8 bytes @ 0x47
  1065  000048                     	ds	2
  1066  00004A                     ___fltol@sign1:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x49
  1070  00004A                     	ds	1
  1071  00004B                     ___fltol@exp1:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x4A
  1075  00004B                     	ds	1
  1076  00004C                     ?_lroundf:
  1077                           	callstack 0
  1078  00004C                     lroundf@x:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x4B
  1082  00004C                     	ds	4
  1083  000050                     ?_vfprintf:
  1084                           	callstack 0
  1085  000050                     ?_amb_light_measure:
  1086                           	callstack 0
  1087  000050                     compare@lower:
  1088                           	callstack 0
  1089  000050                     amb_light_measure@amb:
  1090                           	callstack 0
  1091  000050                     detect_wall@mL:
  1092                           	callstack 0
  1093  000050                     vfprintf@fp:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x4F
  1097  000050                     	ds	2
  1098  000052                     ??_amb_light_measure:
  1099  000052                     compare@value2compare:
  1100                           	callstack 0
  1101  000052                     detect_wall@mR:
  1102                           	callstack 0
  1103  000052                     vfprintf@fmt:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x51
  1107  000052                     	ds	2
  1108  000054                     compare@upper:
  1109                           	callstack 0
  1110  000054                     amb_light_measure@CC_amb_ave:
  1111                           	callstack 0
  1112  000054                     detect_wall@amb_light:
  1113                           	callstack 0
  1114  000054                     vfprintf@ap:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x53
  1118  000054                     	ds	2
  1119  000056                     ??_detect_wall:
  1120  000056                     compare@result:
  1121                           	callstack 0
  1122  000056                     amb_light_measure@CC_amb_1:
  1123                           	callstack 0
  1124  000056                     vfprintf@cfmt:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x55
  1128  000056                     	ds	1
  1129  000057                     detect_color@m:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x56
  1133  000057                     	ds	1
  1134  000058                     color_display@m:
  1135                           	callstack 0
  1136  000058                     amb_light_measure@CC_amb_2:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x57
  1140  000058                     	ds	1
  1141  000059                     detect_color@w:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x58
  1145  000059                     	ds	1
  1146  00005A                     color_data_collection@m:
  1147                           	callstack 0
  1148  00005A                     amb_light_measure@CC_amb_3:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x59
  1152  00005A                     	ds	1
  1153  00005B                     ??_detect_color:
  1154                           
  1155                           ; 1 bytes @ 0x5A
  1156  00005B                     	ds	1
  1157  00005C                     ??_setup:
  1158  00005C                     ??_color_data_collection:
  1159                           
  1160                           ; 1 bytes @ 0x5B
  1161  00005C                     	ds	3
  1162                           
  1163 ;;
  1164 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1165 ;;
  1166 ;; *************** function _main *****************
  1167 ;; Defined at:
  1168 ;;		line 27 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  white          28   24[BANK1 ] struct white_card
  1173 ;;  motorR          9   61[BANK1 ] struct DC_motor
  1174 ;;  motorL          9   52[BANK1 ] struct DC_motor
  1175 ;;  rgb             8   16[BANK1 ] struct color_rgb
  1176 ;;  amb             8    0[BANK1 ] struct color_rgb
  1177 ;;  stop_time       2   14[BANK1 ] unsigned int 
  1178 ;;  start_time      2   12[BANK1 ] unsigned int 
  1179 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1180 ;;  accident        1   11[BANK1 ] unsigned char 
  1181 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Totals:         0       4      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;Total ram usage:       74 bytes
  1196 ;; Hardware stack levels required when called: 12
  1197 ;; This function calls:
  1198 ;;		_Interrupts_init
  1199 ;;		_Timer0_init
  1200 ;;		_color_click_init
  1201 ;;		_detect_color
  1202 ;;		_detect_wall
  1203 ;;		_fullSpeedAhead
  1204 ;;		_goback
  1205 ;;		_initDCmotorsPWM
  1206 ;;		_initDCmotors_parameter
  1207 ;;		_initUSART4
  1208 ;;		_pin_init
  1209 ;;		_setup
  1210 ;;		_short_burst
  1211 ;;		_stop
  1212 ;;		_test_function
  1213 ;;		_turning_action
  1214 ;;		_verify_color
  1215 ;; This function is called by:
  1216 ;;		Startup code after reset
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text0
  1221  00363A                     __ptext0:
  1222                           	callstack 0
  1223  00363A                     _main:
  1224                           	callstack 19
  1225  00363A                     
  1226                           ;main.c: 30:     struct color_rgb rgb, amb;;main.c: 31:     struct white_card white;;mai
      +                          n.c: 32:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1227  00363A  EC47  F02D         	call	_color_click_init	;wreg free
  1228  00363E                     
  1229                           ;main.c: 36:     pin_init();
  1230  00363E  EC2D  F02D         	call	_pin_init	;wreg free
  1231  003642                     
  1232                           ;main.c: 37:     initDCmotorsPWM(199);
  1233  003642  0E00               	movlw	0
  1234  003644  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1235  003646  0EC7               	movlw	199
  1236  003648  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1237  00364A  EC7C  F02C         	call	_initDCmotorsPWM	;wreg free
  1238  00364E                     
  1239                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1240  00364E  0ED2               	movlw	low main@motorL
  1241  003650  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1242  003652  0E01               	movlw	high main@motorL
  1243  003654  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1244  003656  0EDB               	movlw	low main@motorR
  1245  003658  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1246  00365A  0E01               	movlw	high main@motorR
  1247  00365C  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1248  00365E  ECE1  F027         	call	_initDCmotors_parameter	;wreg free
  1249  003662                     
  1250                           ;main.c: 39:     initUSART4();
  1251  003662  EC2C  F02E         	call	_initUSART4	;wreg free
  1252  003666                     
  1253                           ;main.c: 40:     Timer0_init();
  1254  003666  EC3B  F02E         	call	_Timer0_init	;wreg free
  1255  00366A                     
  1256                           ;main.c: 41:     Interrupts_init();
  1257  00366A  EC5C  F02E         	call	_Interrupts_init	;wreg free
  1258  00366E                     
  1259                           ;main.c: 44:     unsigned char stop_signal = 0;
  1260  00366E  0E00               	movlw	0
  1261  003670  0101               	movlb	1	; () banked
  1262  003672  6FA8               	movwf	main@stop_signal& (0+255),b
  1263  003674                     
  1264                           ; BSR set to: 1
  1265                           ;main.c: 46:     unsigned char accident = 0;
  1266  003674  0E00               	movlw	0
  1267  003676  6FA9               	movwf	main@accident& (0+255),b
  1268  003678                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 51:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1271  003678  0EB6               	movlw	low main@white
  1272  00367A  0100               	movlb	0	; () banked
  1273  00367C  6F60               	movwf	setup@white& (0+255),b
  1274  00367E  0E01               	movlw	high main@white
  1275  003680  6F61               	movwf	(setup@white+1)& (0+255),b
  1276  003682  0E9E               	movlw	low main@amb
  1277  003684  6F62               	movwf	setup@amb& (0+255),b
  1278  003686  0E01               	movlw	high main@amb
  1279  003688  6F63               	movwf	(setup@amb+1)& (0+255),b
  1280  00368A  0ED2               	movlw	low main@motorL
  1281  00368C  6F64               	movwf	setup@mL& (0+255),b
  1282  00368E  0E01               	movlw	high main@motorL
  1283  003690  6F65               	movwf	(setup@mL+1)& (0+255),b
  1284  003692  0EDB               	movlw	low main@motorR
  1285  003694  6F66               	movwf	setup@mR& (0+255),b
  1286  003696  0E01               	movlw	high main@motorR
  1287  003698  6F67               	movwf	(setup@mR+1)& (0+255),b
  1288  00369A  ECA1  F023         	call	_setup	;wreg free
  1289  00369E  C060  F1A6         	movff	?_setup,main@amb_light
  1290  0036A2  C061  F1A7         	movff	?_setup+1,main@amb_light+1
  1291  0036A6                     l5284:
  1292                           
  1293                           ;main.c: 57:             T0CON0bits.T0EN=1;
  1294  0036A6  8ED5               	bsf	213,7,c	;volatile
  1295  0036A8                     
  1296                           ;main.c: 58:             start_time = centisecond;
  1297  0036A8  C17A  F1AA         	movff	_centisecond,main@start_time
  1298  0036AC  C17B  F1AB         	movff	_centisecond+1,main@start_time+1
  1299                           
  1300                           ;main.c: 59:             while (stop_signal == 0){
  1301  0036B0  EF74  F01B         	goto	l5292
  1302  0036B4                     l5288:
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 60:                 fullSpeedAhead(&motorL, &motorR);
  1306  0036B4  0ED2               	movlw	low main@motorL
  1307  0036B6  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1308  0036B8  0E01               	movlw	high main@motorL
  1309  0036BA  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1310  0036BC  0EDB               	movlw	low main@motorR
  1311  0036BE  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1312  0036C0  0E01               	movlw	high main@motorR
  1313  0036C2  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1314  0036C4  EC12  F029         	call	_fullSpeedAhead	;wreg free
  1315  0036C8                     
  1316                           ;main.c: 61:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1317  0036C8  0ED2               	movlw	low main@motorL
  1318  0036CA  6E50               	movwf	detect_wall@mL^0,c
  1319  0036CC  0E01               	movlw	high main@motorL
  1320  0036CE  6E51               	movwf	(detect_wall@mL+1)^0,c
  1321  0036D0  0EDB               	movlw	low main@motorR
  1322  0036D2  6E52               	movwf	detect_wall@mR^0,c
  1323  0036D4  0E01               	movlw	high main@motorR
  1324  0036D6  6E53               	movwf	(detect_wall@mR+1)^0,c
  1325  0036D8  C1A6  F054         	movff	main@amb_light,detect_wall@amb_light
  1326  0036DC  C1A7  F055         	movff	main@amb_light+1,detect_wall@amb_light+1
  1327  0036E0  EC73  F027         	call	_detect_wall	;wreg free
  1328  0036E4  0101               	movlb	1	; () banked
  1329  0036E6  6FA8               	movwf	main@stop_signal& (0+255),b
  1330  0036E8                     l5292:
  1331                           
  1332                           ;main.c: 59:             while (stop_signal == 0){
  1333  0036E8  0101               	movlb	1	; () banked
  1334  0036EA  51A8               	movf	main@stop_signal& (0+255),w,b
  1335  0036EC  B4D8               	btfsc	status,2,c
  1336  0036EE  EF7B  F01B         	goto	u5791
  1337  0036F2  EF7D  F01B         	goto	u5790
  1338  0036F6                     u5791:
  1339  0036F6  EF5A  F01B         	goto	l5288
  1340  0036FA                     u5790:
  1341  0036FA                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 64:             T0CON0bits.T0EN=0;
  1344  0036FA  9ED5               	bcf	213,7,c	;volatile
  1345                           
  1346                           ;main.c: 65:             stop_time = centisecond;
  1347  0036FC  C17A  F1AC         	movff	_centisecond,main@stop_time
  1348  003700  C17B  F1AD         	movff	_centisecond+1,main@stop_time+1
  1349  003704                     
  1350                           ; BSR set to: 1
  1351                           ;main.c: 66:             if ((stop_time-start_time)>10){
  1352  003704  51AA               	movf	main@start_time& (0+255),w,b
  1353  003706  5DAC               	subwf	main@stop_time& (0+255),w,b
  1354  003708  0100               	movlb	0	; () banked
  1355  00370A  6FF0               	movwf	??_main& (0+255),b
  1356  00370C  0101               	movlb	1	; () banked
  1357  00370E  51AB               	movf	(main@start_time+1)& (0+255),w,b
  1358  003710  59AD               	subwfb	(main@stop_time+1)& (0+255),w,b
  1359  003712  0100               	movlb	0	; () banked
  1360  003714  6FF1               	movwf	(??_main+1)& (0+255),b
  1361  003716  51F1               	movf	(??_main+1)& (0+255),w,b
  1362  003718  E109               	bnz	u5800
  1363  00371A  0E0B               	movlw	11
  1364  00371C  5DF0               	subwf	??_main& (0+255),w,b
  1365  00371E  A0D8               	btfss	status,0,c
  1366  003720  EF94  F01B         	goto	u5801
  1367  003724  EF96  F01B         	goto	u5800
  1368  003728                     u5801:
  1369  003728  EFB8  F01B         	goto	l5300
  1370  00372C                     u5800:
  1371  00372C                     
  1372                           ; BSR set to: 0
  1373                           ;main.c: 67:                 memory[array_index] = (stop_time-start_time-3);
  1374  00372C  0EFD               	movlw	253
  1375  00372E  6FF0               	movwf	??_main& (0+255),b
  1376  003730  0EFF               	movlw	255
  1377  003732  6FF1               	movwf	(??_main+1)& (0+255),b
  1378  003734  0101               	movlb	1	; () banked
  1379  003736  51AA               	movf	main@start_time& (0+255),w,b
  1380  003738  5DAC               	subwf	main@stop_time& (0+255),w,b
  1381  00373A  0100               	movlb	0	; () banked
  1382  00373C  6FF2               	movwf	(??_main+2)& (0+255),b
  1383  00373E  0101               	movlb	1	; () banked
  1384  003740  51AB               	movf	(main@start_time+1)& (0+255),w,b
  1385  003742  59AD               	subwfb	(main@stop_time+1)& (0+255),w,b
  1386  003744  0100               	movlb	0	; () banked
  1387  003746  6FF3               	movwf	(??_main+3)& (0+255),b
  1388  003748  51F0               	movf	??_main& (0+255),w,b
  1389  00374A  27F2               	addwf	(??_main+2)& (0+255),f,b
  1390  00374C  51F1               	movf	(??_main+1)& (0+255),w,b
  1391  00374E  23F3               	addwfc	(??_main+3)& (0+255),f,b
  1392  003750  0101               	movlb	1	; () banked
  1393  003752  517D               	movf	_array_index& (0+255),w,b
  1394  003754  0D02               	mullw	2
  1395  003756  0E00               	movlw	low _memory
  1396  003758  24F3               	addwf	243,w,c
  1397  00375A  6ED9               	movwf	fsr2l,c
  1398  00375C  0E01               	movlw	high _memory
  1399  00375E  20F4               	addwfc	prodh,w,c
  1400  003760  6EDA               	movwf	fsr2h,c
  1401  003762  C0F2  FFDE         	movff	??_main+2,postinc2
  1402  003766  C0F3  FFDD         	movff	??_main+3,postdec2
  1403  00376A                     
  1404                           ; BSR set to: 1
  1405                           ;main.c: 68:                 array_index++;
  1406  00376A  2B7D               	incf	_array_index& (0+255),f,b
  1407                           
  1408                           ;main.c: 69:             }
  1409  00376C  EFCF  F01B         	goto	l5308
  1410  003770                     l5300:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;main.c: 71:                 accident++;
  1414  003770  0101               	movlb	1	; () banked
  1415  003772  2BA9               	incf	main@accident& (0+255),f,b
  1416  003774                     
  1417                           ; BSR set to: 1
  1418                           ;main.c: 72:                 if (accident >= 10){
  1419  003774  0E09               	movlw	9
  1420  003776  65A9               	cpfsgt	main@accident& (0+255),b
  1421  003778  EFC0  F01B         	goto	u5811
  1422  00377C  EFC2  F01B         	goto	u5810
  1423  003780                     u5811:
  1424  003780  EFCF  F01B         	goto	l5308
  1425  003784                     u5810:
  1426  003784                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 73:                     goback(&motorL, &motorR);
  1429  003784  0ED2               	movlw	low main@motorL
  1430  003786  6E2D               	movwf	goback@mL^0,c
  1431  003788  0E01               	movlw	high main@motorL
  1432  00378A  6E2E               	movwf	(goback@mL+1)^0,c
  1433  00378C  0EDB               	movlw	low main@motorR
  1434  00378E  6E2F               	movwf	goback@mR^0,c
  1435  003790  0E01               	movlw	high main@motorR
  1436  003792  6E30               	movwf	(goback@mR+1)^0,c
  1437  003794  EC3E  F013         	call	_goback	;wreg free
  1438  003798                     
  1439                           ;main.c: 74:                     accident = 0;
  1440  003798  0E00               	movlw	0
  1441  00379A  0101               	movlb	1	; () banked
  1442  00379C  6FA9               	movwf	main@accident& (0+255),b
  1443  00379E                     l5308:
  1444                           
  1445                           ; BSR set to: 1
  1446                           ;main.c: 77:             stop(&motorL, &motorR);
  1447  00379E  0ED2               	movlw	low main@motorL
  1448  0037A0  6E1A               	movwf	stop@mL^0,c
  1449  0037A2  0E01               	movlw	high main@motorL
  1450  0037A4  6E1B               	movwf	(stop@mL+1)^0,c
  1451  0037A6  0EDB               	movlw	low main@motorR
  1452  0037A8  6E1C               	movwf	stop@mR^0,c
  1453  0037AA  0E01               	movlw	high main@motorR
  1454  0037AC  6E1D               	movwf	(stop@mR+1)^0,c
  1455  0037AE  ECD6  F029         	call	_stop	;wreg free
  1456  0037B2                     
  1457                           ;main.c: 78:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1458  0037B2  0E52               	movlw	82
  1459  0037B4  0100               	movlb	0	; () banked
  1460  0037B6  6FF1               	movwf	(??_main+1)& (0+255),b
  1461  0037B8  0E2B               	movlw	43
  1462  0037BA  6FF0               	movwf	??_main& (0+255),b
  1463  0037BC  0E00               	movlw	0
  1464  0037BE                     u5847:
  1465  0037BE  2EE8               	decfsz	wreg,f,c
  1466  0037C0  D7FE               	bra	u5847
  1467  0037C2  2FF0               	decfsz	??_main& (0+255),f,b
  1468  0037C4  D7FC               	bra	u5847
  1469  0037C6  2FF1               	decfsz	(??_main+1)& (0+255),f,b
  1470  0037C8  D7FA               	bra	u5847
  1471  0037CA  F000               	nop	
  1472  0037CC                     
  1473                           ;main.c: 79:             short_burst(&motorL, &motorR);
  1474  0037CC  0ED2               	movlw	low main@motorL
  1475  0037CE  6E20               	movwf	short_burst@mL^0,c
  1476  0037D0  0E01               	movlw	high main@motorL
  1477  0037D2  6E21               	movwf	(short_burst@mL+1)^0,c
  1478  0037D4  0EDB               	movlw	low main@motorR
  1479  0037D6  6E22               	movwf	short_burst@mR^0,c
  1480  0037D8  0E01               	movlw	high main@motorR
  1481  0037DA  6E23               	movwf	(short_burst@mR+1)^0,c
  1482  0037DC  EC3A  F02C         	call	_short_burst	;wreg free
  1483  0037E0                     
  1484                           ;main.c: 80:             color = detect_color(&rgb, &white);
  1485  0037E0  0EAE               	movlw	low main@rgb
  1486  0037E2  6E57               	movwf	detect_color@m^0,c
  1487  0037E4  0E01               	movlw	high main@rgb
  1488  0037E6  6E58               	movwf	(detect_color@m+1)^0,c
  1489  0037E8  0EB6               	movlw	low main@white
  1490  0037EA  6E59               	movwf	detect_color@w^0,c
  1491  0037EC  0E01               	movlw	high main@white
  1492  0037EE  6E5A               	movwf	(detect_color@w+1)^0,c
  1493  0037F0  EC0A  F007         	call	_detect_color	;wreg free
  1494  0037F4  0101               	movlb	1	; () banked
  1495  0037F6  6F7C               	movwf	_color& (0+255),b
  1496  0037F8                     
  1497                           ; BSR set to: 1
  1498                           ;main.c: 81:             color = verify_color(color, &rgb, &white);
  1499  0037F8  0EAE               	movlw	low main@rgb
  1500  0037FA  0100               	movlb	0	; () banked
  1501  0037FC  6F79               	movwf	verify_color@m& (0+255),b
  1502  0037FE  0E01               	movlw	high main@rgb
  1503  003800  6F7A               	movwf	(verify_color@m+1)& (0+255),b
  1504  003802  0EB6               	movlw	low main@white
  1505  003804  6F7B               	movwf	verify_color@w& (0+255),b
  1506  003806  0E01               	movlw	high main@white
  1507  003808  6F7C               	movwf	(verify_color@w+1)& (0+255),b
  1508  00380A  0101               	movlb	1	; () banked
  1509  00380C  517C               	movf	_color& (0+255),w,b
  1510  00380E  EC35  F02A         	call	_verify_color
  1511  003812  0101               	movlb	1	; () banked
  1512  003814  6F7C               	movwf	_color& (0+255),b
  1513  003816                     
  1514                           ; BSR set to: 1
  1515                           ;main.c: 82:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1516  003816  517C               	movf	_color& (0+255),w,b
  1517  003818  B4D8               	btfsc	status,2,c
  1518  00381A  EF11  F01C         	goto	u5821
  1519  00381E  EF13  F01C         	goto	u5820
  1520  003822                     u5821:
  1521  003822  EF21  F01C         	goto	l5324
  1522  003826                     u5820:
  1523  003826                     
  1524                           ; BSR set to: 1
  1525  003826  0ED2               	movlw	low main@motorL
  1526  003828  6E35               	movwf	turning_action@mL^0,c
  1527  00382A  0E01               	movlw	high main@motorL
  1528  00382C  6E36               	movwf	(turning_action@mL+1)^0,c
  1529  00382E  0EDB               	movlw	low main@motorR
  1530  003830  6E37               	movwf	turning_action@mR^0,c
  1531  003832  0E01               	movlw	high main@motorR
  1532  003834  6E38               	movwf	(turning_action@mR+1)^0,c
  1533  003836  517C               	movf	_color& (0+255),w,b
  1534  003838  ECDD  F016         	call	_turning_action
  1535  00383C  0E00               	movlw	0
  1536  00383E  0101               	movlb	1	; () banked
  1537  003840  6F7C               	movwf	_color& (0+255),b
  1538  003842                     l5324:
  1539                           
  1540                           ; BSR set to: 1
  1541                           ;main.c: 83:             stop_signal = 0;
  1542  003842  0E00               	movlw	0
  1543  003844  6FA8               	movwf	main@stop_signal& (0+255),b
  1544  003846  EF53  F01B         	goto	l5284
  1545  00384A  EF18  F000         	goto	start
  1546  00384E                     __end_of_main:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _verify_color *****************
  1550 ;; Defined at:
  1551 ;;		line 364 in file "color.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  color           1    wreg     unsigned char 
  1554 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  1555 ;;		 -> main@rgb(8), 
  1556 ;;  w               2   27[BANK0 ] PTR struct white_card
  1557 ;;		 -> main@white(28), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  color           1   33[BANK0 ] unsigned char 
  1560 ;;  color2          2   31[BANK0 ] unsigned int 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        9 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 6
  1577 ;; This function calls:
  1578 ;;		_detect_color
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text1
  1585  00546A                     __ptext1:
  1586                           	callstack 0
  1587  00546A                     _verify_color:
  1588                           	callstack 24
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;incstack = 0
  1592                           ;verify_color@color stored from wreg
  1593  00546A  0100               	movlb	0	; () banked
  1594  00546C  6F81               	movwf	verify_color@color& (0+255),b
  1595  00546E                     
  1596                           ;color.c: 364: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 365: {;color.c: 366:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1597  00546E  0E05               	movlw	5
  1598  005470  0100               	movlb	0	; () banked
  1599  005472  6F7E               	movwf	(??_verify_color+1)& (0+255),b
  1600  005474  0E0F               	movlw	15
  1601  005476  6F7D               	movwf	??_verify_color& (0+255),b
  1602  005478  0EF1               	movlw	241
  1603  00547A                     u5857:
  1604  00547A  2EE8               	decfsz	wreg,f,c
  1605  00547C  D7FE               	bra	u5857
  1606  00547E  2F7D               	decfsz	??_verify_color& (0+255),f,b
  1607  005480  D7FC               	bra	u5857
  1608  005482  2F7E               	decfsz	(??_verify_color+1)& (0+255),f,b
  1609  005484  D7FA               	bra	u5857
  1610  005486                     
  1611                           ;color.c: 367:     unsigned int color2;;color.c: 368:     color2 = detect_color(m,w);
  1612  005486  C079  F057         	movff	verify_color@m,detect_color@m
  1613  00548A  C07A  F058         	movff	verify_color@m+1,detect_color@m+1
  1614  00548E  C07B  F059         	movff	verify_color@w,detect_color@w
  1615  005492  C07C  F05A         	movff	verify_color@w+1,detect_color@w+1
  1616  005496  EC0A  F007         	call	_detect_color	;wreg free
  1617  00549A  0100               	movlb	0	; () banked
  1618  00549C  6F7D               	movwf	??_verify_color& (0+255),b
  1619  00549E  517D               	movf	??_verify_color& (0+255),w,b
  1620  0054A0  6F7F               	movwf	verify_color@color2& (0+255),b
  1621  0054A2  6B80               	clrf	(verify_color@color2+1)& (0+255),b
  1622  0054A4                     
  1623                           ; BSR set to: 0
  1624                           ;color.c: 369:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1625  0054A4  0E05               	movlw	5
  1626  0054A6  0100               	movlb	0	; () banked
  1627  0054A8  6F7E               	movwf	(??_verify_color+1)& (0+255),b
  1628  0054AA  0E0F               	movlw	15
  1629  0054AC  6F7D               	movwf	??_verify_color& (0+255),b
  1630  0054AE  0EF1               	movlw	241
  1631  0054B0                     u5867:
  1632  0054B0  2EE8               	decfsz	wreg,f,c
  1633  0054B2  D7FE               	bra	u5867
  1634  0054B4  2F7D               	decfsz	??_verify_color& (0+255),f,b
  1635  0054B6  D7FC               	bra	u5867
  1636  0054B8  2F7E               	decfsz	(??_verify_color+1)& (0+255),f,b
  1637  0054BA  D7FA               	bra	u5867
  1638  0054BC                     
  1639                           ;color.c: 370:     if (color == color2){return color;}
  1640  0054BC  0100               	movlb	0	; () banked
  1641  0054BE  5181               	movf	verify_color@color& (0+255),w,b
  1642  0054C0  6F7D               	movwf	??_verify_color& (0+255),b
  1643  0054C2  6B7E               	clrf	(??_verify_color+1)& (0+255),b
  1644  0054C4  517F               	movf	verify_color@color2& (0+255),w,b
  1645  0054C6  197D               	xorwf	??_verify_color& (0+255),w,b
  1646  0054C8  E107               	bnz	u5501
  1647  0054CA  5180               	movf	(verify_color@color2+1)& (0+255),w,b
  1648  0054CC  197E               	xorwf	(??_verify_color+1)& (0+255),w,b
  1649  0054CE  A4D8               	btfss	status,2,c
  1650  0054D0  EF6C  F02A         	goto	u5501
  1651  0054D4  EF6E  F02A         	goto	u5500
  1652  0054D8                     u5501:
  1653  0054D8  EF71  F02A         	goto	l5040
  1654  0054DC                     u5500:
  1655  0054DC                     
  1656                           ; BSR set to: 0
  1657  0054DC  5181               	movf	verify_color@color& (0+255),w,b
  1658  0054DE  EF72  F02A         	goto	l144
  1659  0054E2                     l5040:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;color.c: 373:         return color;}
  1663  0054E2  0E00               	movlw	0
  1664  0054E4                     l144:
  1665                           
  1666                           ; BSR set to: 0
  1667  0054E4  0012               	return		;funcret
  1668  0054E6                     __end_of_verify_color:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _turning_action *****************
  1672 ;; Defined at:
  1673 ;;		line 14 in file "movement.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  color           1    wreg     unsigned char 
  1676 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1677 ;;		 -> main@motorL(9), 
  1678 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1679 ;;		 -> main@motorR(9), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  color           1   56[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;Total ram usage:        5 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 6
  1698 ;; This function calls:
  1699 ;;		_fullSpeedBack
  1700 ;;		_goback
  1701 ;;		_toggle_light
  1702 ;;		_turn45
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text2
  1709  002DBA                     __ptext2:
  1710                           	callstack 0
  1711  002DBA                     _turning_action:
  1712                           	callstack 24
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;incstack = 0
  1716                           ;turning_action@color stored from wreg
  1717  002DBA  6E39               	movwf	turning_action@color^0,c
  1718  002DBC                     
  1719                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1720  002DBC  5039               	movf	turning_action@color^0,w,c
  1721  002DBE  B4D8               	btfsc	status,2,c
  1722  002DC0  EFE4  F016         	goto	u5701
  1723  002DC4  EFE6  F016         	goto	u5700
  1724  002DC8                     u5701:
  1725  002DC8  EF54  F018         	goto	l453
  1726  002DCC                     u5700:
  1727  002DCC                     
  1728                           ;movement.c: 16:         if (color == 1){
  1729  002DCC  0439               	decf	turning_action@color^0,w,c
  1730  002DCE  A4D8               	btfss	status,2,c
  1731  002DD0  EFEC  F016         	goto	u5711
  1732  002DD4  EFEE  F016         	goto	u5710
  1733  002DD8                     u5711:
  1734  002DD8  EF16  F017         	goto	l5202
  1735  002DDC                     u5710:
  1736  002DDC                     
  1737                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1738  002DDC  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1739  002DE0  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1740  002DE4  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1741  002DE8  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1742  002DEC  0E01               	movlw	1
  1743  002DEE  6E24               	movwf	fullSpeedBack@instruction^0,c
  1744  002DF0  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1745                           
  1746                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1747  002DF4  C035  F020         	movff	turning_action@mL,turn45@mL
  1748  002DF8  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1749  002DFC  C037  F022         	movff	turning_action@mR,turn45@mR
  1750  002E00  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1751  002E04  0E02               	movlw	2
  1752  002E06  6E24               	movwf	turn45@turn_time^0,c
  1753  002E08  0E02               	movlw	2
  1754  002E0A  6E25               	movwf	turn45@direction^0,c
  1755  002E0C  ECA9  F020         	call	_turn45	;wreg free
  1756  002E10                     
  1757                           ;movement.c: 19:             memory[array_index] = 1;
  1758  002E10  0101               	movlb	1	; () banked
  1759  002E12  517D               	movf	_array_index& (0+255),w,b
  1760  002E14  0D02               	mullw	2
  1761  002E16  0E00               	movlw	low _memory
  1762  002E18  24F3               	addwf	243,w,c
  1763  002E1A  6ED9               	movwf	fsr2l,c
  1764  002E1C  0E01               	movlw	high _memory
  1765  002E1E  20F4               	addwfc	prodh,w,c
  1766  002E20  6EDA               	movwf	fsr2h,c
  1767  002E22  0E01               	movlw	1
  1768  002E24  6EDE               	movwf	postinc2,c
  1769  002E26  0E00               	movlw	0
  1770  002E28  6EDD               	movwf	postdec2,c
  1771  002E2A                     
  1772                           ; BSR set to: 1
  1773                           ;movement.c: 20:             array_index++;
  1774  002E2A  2B7D               	incf	_array_index& (0+255),f,b
  1775  002E2C                     l5202:
  1776                           
  1777                           ;movement.c: 22:         if (color == 2){
  1778  002E2C  0E02               	movlw	2
  1779  002E2E  1839               	xorwf	turning_action@color^0,w,c
  1780  002E30  A4D8               	btfss	status,2,c
  1781  002E32  EF1D  F017         	goto	u5721
  1782  002E36  EF1F  F017         	goto	u5720
  1783  002E3A                     u5721:
  1784  002E3A  EF47  F017         	goto	l5210
  1785  002E3E                     u5720:
  1786  002E3E                     
  1787                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1788  002E3E  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1789  002E42  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1790  002E46  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1791  002E4A  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1792  002E4E  0E01               	movlw	1
  1793  002E50  6E24               	movwf	fullSpeedBack@instruction^0,c
  1794  002E52  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1795                           
  1796                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1797  002E56  C035  F020         	movff	turning_action@mL,turn45@mL
  1798  002E5A  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1799  002E5E  C037  F022         	movff	turning_action@mR,turn45@mR
  1800  002E62  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1801  002E66  0E02               	movlw	2
  1802  002E68  6E24               	movwf	turn45@turn_time^0,c
  1803  002E6A  0E01               	movlw	1
  1804  002E6C  6E25               	movwf	turn45@direction^0,c
  1805  002E6E  ECA9  F020         	call	_turn45	;wreg free
  1806  002E72                     
  1807                           ;movement.c: 25:             memory[array_index] = 2;
  1808  002E72  0101               	movlb	1	; () banked
  1809  002E74  517D               	movf	_array_index& (0+255),w,b
  1810  002E76  0D02               	mullw	2
  1811  002E78  0E00               	movlw	low _memory
  1812  002E7A  24F3               	addwf	243,w,c
  1813  002E7C  6ED9               	movwf	fsr2l,c
  1814  002E7E  0E01               	movlw	high _memory
  1815  002E80  20F4               	addwfc	prodh,w,c
  1816  002E82  6EDA               	movwf	fsr2h,c
  1817  002E84  0E02               	movlw	2
  1818  002E86  6EDE               	movwf	postinc2,c
  1819  002E88  0E00               	movlw	0
  1820  002E8A  6EDD               	movwf	postdec2,c
  1821  002E8C                     
  1822                           ; BSR set to: 1
  1823                           ;movement.c: 26:             array_index++;
  1824  002E8C  2B7D               	incf	_array_index& (0+255),f,b
  1825  002E8E                     l5210:
  1826                           
  1827                           ;movement.c: 28:         if (color == 3){
  1828  002E8E  0E03               	movlw	3
  1829  002E90  1839               	xorwf	turning_action@color^0,w,c
  1830  002E92  A4D8               	btfss	status,2,c
  1831  002E94  EF4E  F017         	goto	u5731
  1832  002E98  EF50  F017         	goto	u5730
  1833  002E9C                     u5731:
  1834  002E9C  EF78  F017         	goto	l5218
  1835  002EA0                     u5730:
  1836  002EA0                     
  1837                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1838  002EA0  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1839  002EA4  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1840  002EA8  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1841  002EAC  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1842  002EB0  0E01               	movlw	1
  1843  002EB2  6E24               	movwf	fullSpeedBack@instruction^0,c
  1844  002EB4  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1845                           
  1846                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1847  002EB8  C035  F020         	movff	turning_action@mL,turn45@mL
  1848  002EBC  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1849  002EC0  C037  F022         	movff	turning_action@mR,turn45@mR
  1850  002EC4  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1851  002EC8  0E04               	movlw	4
  1852  002ECA  6E24               	movwf	turn45@turn_time^0,c
  1853  002ECC  0E01               	movlw	1
  1854  002ECE  6E25               	movwf	turn45@direction^0,c
  1855  002ED0  ECA9  F020         	call	_turn45	;wreg free
  1856  002ED4                     
  1857                           ;movement.c: 31:             memory[array_index] = 3;
  1858  002ED4  0101               	movlb	1	; () banked
  1859  002ED6  517D               	movf	_array_index& (0+255),w,b
  1860  002ED8  0D02               	mullw	2
  1861  002EDA  0E00               	movlw	low _memory
  1862  002EDC  24F3               	addwf	243,w,c
  1863  002EDE  6ED9               	movwf	fsr2l,c
  1864  002EE0  0E01               	movlw	high _memory
  1865  002EE2  20F4               	addwfc	prodh,w,c
  1866  002EE4  6EDA               	movwf	fsr2h,c
  1867  002EE6  0E03               	movlw	3
  1868  002EE8  6EDE               	movwf	postinc2,c
  1869  002EEA  0E00               	movlw	0
  1870  002EEC  6EDD               	movwf	postdec2,c
  1871  002EEE                     
  1872                           ; BSR set to: 1
  1873                           ;movement.c: 32:             array_index++;
  1874  002EEE  2B7D               	incf	_array_index& (0+255),f,b
  1875  002EF0                     l5218:
  1876                           
  1877                           ;movement.c: 34:         if (color == 4){
  1878  002EF0  0E04               	movlw	4
  1879  002EF2  1839               	xorwf	turning_action@color^0,w,c
  1880  002EF4  A4D8               	btfss	status,2,c
  1881  002EF6  EF7F  F017         	goto	u5741
  1882  002EFA  EF81  F017         	goto	u5740
  1883  002EFE                     u5741:
  1884  002EFE  EFA9  F017         	goto	l5226
  1885  002F02                     u5740:
  1886  002F02                     
  1887                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1888  002F02  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1889  002F06  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1890  002F0A  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1891  002F0E  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1892  002F12  0E03               	movlw	3
  1893  002F14  6E24               	movwf	fullSpeedBack@instruction^0,c
  1894  002F16  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1895                           
  1896                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1897  002F1A  C035  F020         	movff	turning_action@mL,turn45@mL
  1898  002F1E  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1899  002F22  C037  F022         	movff	turning_action@mR,turn45@mR
  1900  002F26  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1901  002F2A  0E02               	movlw	2
  1902  002F2C  6E24               	movwf	turn45@turn_time^0,c
  1903  002F2E  0E02               	movlw	2
  1904  002F30  6E25               	movwf	turn45@direction^0,c
  1905  002F32  ECA9  F020         	call	_turn45	;wreg free
  1906  002F36                     
  1907                           ;movement.c: 37:             memory[array_index] = 4;
  1908  002F36  0101               	movlb	1	; () banked
  1909  002F38  517D               	movf	_array_index& (0+255),w,b
  1910  002F3A  0D02               	mullw	2
  1911  002F3C  0E00               	movlw	low _memory
  1912  002F3E  24F3               	addwf	243,w,c
  1913  002F40  6ED9               	movwf	fsr2l,c
  1914  002F42  0E01               	movlw	high _memory
  1915  002F44  20F4               	addwfc	prodh,w,c
  1916  002F46  6EDA               	movwf	fsr2h,c
  1917  002F48  0E04               	movlw	4
  1918  002F4A  6EDE               	movwf	postinc2,c
  1919  002F4C  0E00               	movlw	0
  1920  002F4E  6EDD               	movwf	postdec2,c
  1921  002F50                     
  1922                           ; BSR set to: 1
  1923                           ;movement.c: 38:             array_index++;
  1924  002F50  2B7D               	incf	_array_index& (0+255),f,b
  1925  002F52                     l5226:
  1926                           
  1927                           ;movement.c: 40:         if (color == 5){
  1928  002F52  0E05               	movlw	5
  1929  002F54  1839               	xorwf	turning_action@color^0,w,c
  1930  002F56  A4D8               	btfss	status,2,c
  1931  002F58  EFB0  F017         	goto	u5751
  1932  002F5C  EFB2  F017         	goto	u5750
  1933  002F60                     u5751:
  1934  002F60  EFDA  F017         	goto	l5234
  1935  002F64                     u5750:
  1936  002F64                     
  1937                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  1938  002F64  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1939  002F68  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1940  002F6C  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1941  002F70  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1942  002F74  0E03               	movlw	3
  1943  002F76  6E24               	movwf	fullSpeedBack@instruction^0,c
  1944  002F78  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1945                           
  1946                           ;movement.c: 42:             turn45(mL,mR,2,1);
  1947  002F7C  C035  F020         	movff	turning_action@mL,turn45@mL
  1948  002F80  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1949  002F84  C037  F022         	movff	turning_action@mR,turn45@mR
  1950  002F88  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1951  002F8C  0E02               	movlw	2
  1952  002F8E  6E24               	movwf	turn45@turn_time^0,c
  1953  002F90  0E01               	movlw	1
  1954  002F92  6E25               	movwf	turn45@direction^0,c
  1955  002F94  ECA9  F020         	call	_turn45	;wreg free
  1956  002F98                     
  1957                           ;movement.c: 43:             memory[array_index] = 5;
  1958  002F98  0101               	movlb	1	; () banked
  1959  002F9A  517D               	movf	_array_index& (0+255),w,b
  1960  002F9C  0D02               	mullw	2
  1961  002F9E  0E00               	movlw	low _memory
  1962  002FA0  24F3               	addwf	243,w,c
  1963  002FA2  6ED9               	movwf	fsr2l,c
  1964  002FA4  0E01               	movlw	high _memory
  1965  002FA6  20F4               	addwfc	prodh,w,c
  1966  002FA8  6EDA               	movwf	fsr2h,c
  1967  002FAA  0E05               	movlw	5
  1968  002FAC  6EDE               	movwf	postinc2,c
  1969  002FAE  0E00               	movlw	0
  1970  002FB0  6EDD               	movwf	postdec2,c
  1971  002FB2                     
  1972                           ; BSR set to: 1
  1973                           ;movement.c: 44:             array_index++;
  1974  002FB2  2B7D               	incf	_array_index& (0+255),f,b
  1975  002FB4                     l5234:
  1976                           
  1977                           ;movement.c: 46:         if (color == 6){
  1978  002FB4  0E06               	movlw	6
  1979  002FB6  1839               	xorwf	turning_action@color^0,w,c
  1980  002FB8  A4D8               	btfss	status,2,c
  1981  002FBA  EFE1  F017         	goto	u5761
  1982  002FBE  EFE3  F017         	goto	u5760
  1983  002FC2                     u5761:
  1984  002FC2  EF0B  F018         	goto	l5242
  1985  002FC6                     u5760:
  1986  002FC6                     
  1987                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  1988  002FC6  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1989  002FCA  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1990  002FCE  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1991  002FD2  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1992  002FD6  0E01               	movlw	1
  1993  002FD8  6E24               	movwf	fullSpeedBack@instruction^0,c
  1994  002FDA  ECF7  F022         	call	_fullSpeedBack	;wreg free
  1995                           
  1996                           ;movement.c: 48:             turn45(mL,mR,3,2);
  1997  002FDE  C035  F020         	movff	turning_action@mL,turn45@mL
  1998  002FE2  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1999  002FE6  C037  F022         	movff	turning_action@mR,turn45@mR
  2000  002FEA  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2001  002FEE  0E03               	movlw	3
  2002  002FF0  6E24               	movwf	turn45@turn_time^0,c
  2003  002FF2  0E02               	movlw	2
  2004  002FF4  6E25               	movwf	turn45@direction^0,c
  2005  002FF6  ECA9  F020         	call	_turn45	;wreg free
  2006  002FFA                     
  2007                           ;movement.c: 49:             memory[array_index] = 6;
  2008  002FFA  0101               	movlb	1	; () banked
  2009  002FFC  517D               	movf	_array_index& (0+255),w,b
  2010  002FFE  0D02               	mullw	2
  2011  003000  0E00               	movlw	low _memory
  2012  003002  24F3               	addwf	243,w,c
  2013  003004  6ED9               	movwf	fsr2l,c
  2014  003006  0E01               	movlw	high _memory
  2015  003008  20F4               	addwfc	prodh,w,c
  2016  00300A  6EDA               	movwf	fsr2h,c
  2017  00300C  0E06               	movlw	6
  2018  00300E  6EDE               	movwf	postinc2,c
  2019  003010  0E00               	movlw	0
  2020  003012  6EDD               	movwf	postdec2,c
  2021  003014                     
  2022                           ; BSR set to: 1
  2023                           ;movement.c: 50:             array_index++;
  2024  003014  2B7D               	incf	_array_index& (0+255),f,b
  2025  003016                     l5242:
  2026                           
  2027                           ;movement.c: 52:         if (color == 7){
  2028  003016  0E07               	movlw	7
  2029  003018  1839               	xorwf	turning_action@color^0,w,c
  2030  00301A  A4D8               	btfss	status,2,c
  2031  00301C  EF12  F018         	goto	u5771
  2032  003020  EF14  F018         	goto	u5770
  2033  003024                     u5771:
  2034  003024  EF3C  F018         	goto	l5250
  2035  003028                     u5770:
  2036  003028                     
  2037                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2038  003028  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2039  00302C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2040  003030  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2041  003034  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2042  003038  0E01               	movlw	1
  2043  00303A  6E24               	movwf	fullSpeedBack@instruction^0,c
  2044  00303C  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2045                           
  2046                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2047  003040  C035  F020         	movff	turning_action@mL,turn45@mL
  2048  003044  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2049  003048  C037  F022         	movff	turning_action@mR,turn45@mR
  2050  00304C  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2051  003050  0E03               	movlw	3
  2052  003052  6E24               	movwf	turn45@turn_time^0,c
  2053  003054  0E01               	movlw	1
  2054  003056  6E25               	movwf	turn45@direction^0,c
  2055  003058  ECA9  F020         	call	_turn45	;wreg free
  2056  00305C                     
  2057                           ;movement.c: 55:             memory[array_index] = 7;
  2058  00305C  0101               	movlb	1	; () banked
  2059  00305E  517D               	movf	_array_index& (0+255),w,b
  2060  003060  0D02               	mullw	2
  2061  003062  0E00               	movlw	low _memory
  2062  003064  24F3               	addwf	243,w,c
  2063  003066  6ED9               	movwf	fsr2l,c
  2064  003068  0E01               	movlw	high _memory
  2065  00306A  20F4               	addwfc	prodh,w,c
  2066  00306C  6EDA               	movwf	fsr2h,c
  2067  00306E  0E07               	movlw	7
  2068  003070  6EDE               	movwf	postinc2,c
  2069  003072  0E00               	movlw	0
  2070  003074  6EDD               	movwf	postdec2,c
  2071  003076                     
  2072                           ; BSR set to: 1
  2073                           ;movement.c: 56:             array_index++;
  2074  003076  2B7D               	incf	_array_index& (0+255),f,b
  2075  003078                     l5250:
  2076                           
  2077                           ;movement.c: 58:         if (color == 8){
  2078  003078  0E08               	movlw	8
  2079  00307A  1839               	xorwf	turning_action@color^0,w,c
  2080  00307C  A4D8               	btfss	status,2,c
  2081  00307E  EF43  F018         	goto	u5781
  2082  003082  EF45  F018         	goto	u5780
  2083  003086                     u5781:
  2084  003086  EF54  F018         	goto	l453
  2085  00308A                     u5780:
  2086  00308A                     
  2087                           ;movement.c: 59:             toggle_light(2,1);
  2088  00308A  0E01               	movlw	1
  2089  00308C  6E01               	movwf	toggle_light@toggletime^0,c
  2090  00308E  0E02               	movlw	2
  2091  003090  ECC7  F019         	call	_toggle_light
  2092  003094                     
  2093                           ;movement.c: 60:             goback(mL,mR);
  2094  003094  C035  F02D         	movff	turning_action@mL,goback@mL
  2095  003098  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2096  00309C  C037  F02F         	movff	turning_action@mR,goback@mR
  2097  0030A0  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2098  0030A4  EC3E  F013         	call	_goback	;wreg free
  2099  0030A8                     l453:
  2100  0030A8  0012               	return		;funcret
  2101  0030AA                     __end_of_turning_action:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _goback *****************
  2105 ;; Defined at:
  2106 ;;		line 65 in file "movement.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2109 ;;		 -> main@motorL(9), 
  2110 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2111 ;;		 -> main@motorR(9), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  i               2   50[COMRAM] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 5
  2130 ;; This function calls:
  2131 ;;		_fullSpeedAhead
  2132 ;;		_fullSpeedBack
  2133 ;;		_stop
  2134 ;;		_turn45
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;;		_turning_action
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text3
  2142  00267C                     __ptext3:
  2143                           	callstack 0
  2144  00267C                     _goback:
  2145                           	callstack 24
  2146  00267C                     
  2147                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2148  00267C  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2149  002680  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2150  002684  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2151  002688  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2152  00268C  0E01               	movlw	1
  2153  00268E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2154  002690  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2155                           
  2156                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2157  002694  C02D  F020         	movff	goback@mL,turn45@mL
  2158  002698  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2159  00269C  C02F  F022         	movff	goback@mR,turn45@mR
  2160  0026A0  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2161  0026A4  0E04               	movlw	4
  2162  0026A6  6E24               	movwf	turn45@turn_time^0,c
  2163  0026A8  0E01               	movlw	1
  2164  0026AA  6E25               	movwf	turn45@direction^0,c
  2165  0026AC  ECA9  F020         	call	_turn45	;wreg free
  2166                           
  2167                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2168  0026B0  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2169  0026B4  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2170  0026B8  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2171  0026BC  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2172  0026C0  0E02               	movlw	2
  2173  0026C2  6E24               	movwf	fullSpeedBack@instruction^0,c
  2174  0026C4  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2175  0026C8                     l4918:
  2176                           
  2177                           ;movement.c: 69:     array_index--;
  2178  0026C8  0101               	movlb	1	; () banked
  2179  0026CA  077D               	decf	_array_index& (0+255),f,b
  2180  0026CC                     l4920:
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2184  0026CC  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2185  0026D0  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2186  0026D4  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2187  0026D8  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2188  0026DC  EC12  F029         	call	_fullSpeedAhead	;wreg free
  2189  0026E0                     
  2190                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2191  0026E0  0E00               	movlw	0
  2192  0026E2  6E34               	movwf	(goback@i+1)^0,c
  2193  0026E4  0E00               	movlw	0
  2194  0026E6  6E33               	movwf	goback@i^0,c
  2195  0026E8  EF84  F013         	goto	l4928
  2196  0026EC                     l4924:
  2197                           
  2198                           ; BSR set to: 1
  2199  0026EC  0E09               	movlw	9
  2200  0026EE  6E32               	movwf	(??_goback+1)^0,c
  2201  0026F0  0E1E               	movlw	30
  2202  0026F2  6E31               	movwf	??_goback^0,c
  2203  0026F4  0EE4               	movlw	228
  2204  0026F6                     u5877:
  2205  0026F6  2EE8               	decfsz	wreg,f,c
  2206  0026F8  D7FE               	bra	u5877
  2207  0026FA  2E31               	decfsz	??_goback^0,f,c
  2208  0026FC  D7FC               	bra	u5877
  2209  0026FE  2E32               	decfsz	(??_goback+1)^0,f,c
  2210  002700  D7FA               	bra	u5877
  2211  002702  D000               	nop2	
  2212  002704  4A33               	infsnz	goback@i^0,f,c
  2213  002706  2A34               	incf	(goback@i+1)^0,f,c
  2214  002708                     l4928:
  2215  002708  0101               	movlb	1	; () banked
  2216  00270A  517D               	movf	_array_index& (0+255),w,b
  2217  00270C  0D02               	mullw	2
  2218  00270E  0E00               	movlw	low _memory
  2219  002710  24F3               	addwf	243,w,c
  2220  002712  6ED9               	movwf	fsr2l,c
  2221  002714  0E01               	movlw	high _memory
  2222  002716  20F4               	addwfc	prodh,w,c
  2223  002718  6EDA               	movwf	fsr2h,c
  2224  00271A  50DE               	movf	postinc2,w,c
  2225  00271C  5C33               	subwf	goback@i^0,w,c
  2226  00271E  50DE               	movf	postinc2,w,c
  2227  002720  5834               	subwfb	(goback@i+1)^0,w,c
  2228  002722  A0D8               	btfss	status,0,c
  2229  002724  EF96  F013         	goto	u5331
  2230  002728  EF98  F013         	goto	u5330
  2231  00272C                     u5331:
  2232  00272C  EF76  F013         	goto	l4924
  2233  002730                     u5330:
  2234  002730                     
  2235                           ; BSR set to: 1
  2236                           ;movement.c: 73:         stop(mL,mR);
  2237  002730  C02D  F01A         	movff	goback@mL,stop@mL
  2238  002734  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2239  002738  C02F  F01C         	movff	goback@mR,stop@mR
  2240  00273C  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2241  002740  ECD6  F029         	call	_stop	;wreg free
  2242  002744                     
  2243                           ;movement.c: 74:         if (array_index == 0){break;}
  2244  002744  0101               	movlb	1	; () banked
  2245  002746  517D               	movf	_array_index& (0+255),w,b
  2246  002748  A4D8               	btfss	status,2,c
  2247  00274A  EFA9  F013         	goto	u5341
  2248  00274E  EFAB  F013         	goto	u5340
  2249  002752                     u5341:
  2250  002752  EFAD  F013         	goto	l4936
  2251  002756                     u5340:
  2252  002756  EFF1  F014         	goto	l462
  2253  00275A                     l4936:
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;movement.c: 75:         array_index--;
  2257  00275A  077D               	decf	_array_index& (0+255),f,b
  2258  00275C                     
  2259                           ; BSR set to: 1
  2260                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2261  00275C  517D               	movf	_array_index& (0+255),w,b
  2262  00275E  0D02               	mullw	2
  2263  002760  0E00               	movlw	low _memory
  2264  002762  24F3               	addwf	243,w,c
  2265  002764  6ED9               	movwf	fsr2l,c
  2266  002766  0E01               	movlw	high _memory
  2267  002768  20F4               	addwfc	prodh,w,c
  2268  00276A  6EDA               	movwf	fsr2h,c
  2269  00276C  04DE               	decf	postinc2,w,c
  2270  00276E  10DE               	iorwf	postinc2,w,c
  2271  002770  A4D8               	btfss	status,2,c
  2272  002772  EFBD  F013         	goto	u5351
  2273  002776  EFBF  F013         	goto	u5350
  2274  00277A                     u5351:
  2275  00277A  EFDB  F013         	goto	l4944
  2276  00277E                     u5350:
  2277  00277E                     
  2278                           ; BSR set to: 1
  2279  00277E  C02D  F020         	movff	goback@mL,turn45@mL
  2280  002782  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2281  002786  C02F  F022         	movff	goback@mR,turn45@mR
  2282  00278A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2283  00278E  0E02               	movlw	2
  2284  002790  6E24               	movwf	turn45@turn_time^0,c
  2285  002792  0E01               	movlw	1
  2286  002794  6E25               	movwf	turn45@direction^0,c
  2287  002796  ECA9  F020         	call	_turn45	;wreg free
  2288  00279A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2289  00279E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2290  0027A2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2291  0027A6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2292  0027AA  0E02               	movlw	2
  2293  0027AC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2294  0027AE  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2295  0027B2  EF64  F013         	goto	l4918
  2296  0027B6                     l4944:
  2297                           
  2298                           ; BSR set to: 1
  2299  0027B6  517D               	movf	_array_index& (0+255),w,b
  2300  0027B8  0D02               	mullw	2
  2301  0027BA  0E00               	movlw	low _memory
  2302  0027BC  24F3               	addwf	243,w,c
  2303  0027BE  6ED9               	movwf	fsr2l,c
  2304  0027C0  0E01               	movlw	high _memory
  2305  0027C2  20F4               	addwfc	prodh,w,c
  2306  0027C4  6EDA               	movwf	fsr2h,c
  2307  0027C6  0E02               	movlw	2
  2308  0027C8  18DE               	xorwf	postinc2,w,c
  2309  0027CA  10DE               	iorwf	postinc2,w,c
  2310  0027CC  A4D8               	btfss	status,2,c
  2311  0027CE  EFEB  F013         	goto	u5361
  2312  0027D2  EFED  F013         	goto	u5360
  2313  0027D6                     u5361:
  2314  0027D6  EF09  F014         	goto	l4950
  2315  0027DA                     u5360:
  2316  0027DA                     
  2317                           ; BSR set to: 1
  2318  0027DA  C02D  F020         	movff	goback@mL,turn45@mL
  2319  0027DE  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2320  0027E2  C02F  F022         	movff	goback@mR,turn45@mR
  2321  0027E6  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2322  0027EA  0E02               	movlw	2
  2323  0027EC  6E24               	movwf	turn45@turn_time^0,c
  2324  0027EE  0E02               	movlw	2
  2325  0027F0  6E25               	movwf	turn45@direction^0,c
  2326  0027F2  ECA9  F020         	call	_turn45	;wreg free
  2327  0027F6  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2328  0027FA  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2329  0027FE  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2330  002802  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2331  002806  0E02               	movlw	2
  2332  002808  6E24               	movwf	fullSpeedBack@instruction^0,c
  2333  00280A  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2334  00280E  EF64  F013         	goto	l4918
  2335  002812                     l4950:
  2336                           
  2337                           ; BSR set to: 1
  2338  002812  517D               	movf	_array_index& (0+255),w,b
  2339  002814  0D02               	mullw	2
  2340  002816  0E00               	movlw	low _memory
  2341  002818  24F3               	addwf	243,w,c
  2342  00281A  6ED9               	movwf	fsr2l,c
  2343  00281C  0E01               	movlw	high _memory
  2344  00281E  20F4               	addwfc	prodh,w,c
  2345  002820  6EDA               	movwf	fsr2h,c
  2346  002822  0E03               	movlw	3
  2347  002824  18DE               	xorwf	postinc2,w,c
  2348  002826  10DE               	iorwf	postinc2,w,c
  2349  002828  A4D8               	btfss	status,2,c
  2350  00282A  EF19  F014         	goto	u5371
  2351  00282E  EF1B  F014         	goto	u5370
  2352  002832                     u5371:
  2353  002832  EF37  F014         	goto	l4956
  2354  002836                     u5370:
  2355  002836                     
  2356                           ; BSR set to: 1
  2357  002836  C02D  F020         	movff	goback@mL,turn45@mL
  2358  00283A  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2359  00283E  C02F  F022         	movff	goback@mR,turn45@mR
  2360  002842  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2361  002846  0E04               	movlw	4
  2362  002848  6E24               	movwf	turn45@turn_time^0,c
  2363  00284A  0E02               	movlw	2
  2364  00284C  6E25               	movwf	turn45@direction^0,c
  2365  00284E  ECA9  F020         	call	_turn45	;wreg free
  2366  002852  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2367  002856  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2368  00285A  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2369  00285E  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2370  002862  0E02               	movlw	2
  2371  002864  6E24               	movwf	fullSpeedBack@instruction^0,c
  2372  002866  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2373  00286A  EF64  F013         	goto	l4918
  2374  00286E                     l4956:
  2375                           
  2376                           ; BSR set to: 1
  2377  00286E  517D               	movf	_array_index& (0+255),w,b
  2378  002870  0D02               	mullw	2
  2379  002872  0E00               	movlw	low _memory
  2380  002874  24F3               	addwf	243,w,c
  2381  002876  6ED9               	movwf	fsr2l,c
  2382  002878  0E01               	movlw	high _memory
  2383  00287A  20F4               	addwfc	prodh,w,c
  2384  00287C  6EDA               	movwf	fsr2h,c
  2385  00287E  0E04               	movlw	4
  2386  002880  18DE               	xorwf	postinc2,w,c
  2387  002882  10DE               	iorwf	postinc2,w,c
  2388  002884  A4D8               	btfss	status,2,c
  2389  002886  EF47  F014         	goto	u5381
  2390  00288A  EF49  F014         	goto	u5380
  2391  00288E                     u5381:
  2392  00288E  EF65  F014         	goto	l4962
  2393  002892                     u5380:
  2394  002892                     
  2395                           ; BSR set to: 1
  2396  002892  C02D  F020         	movff	goback@mL,turn45@mL
  2397  002896  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2398  00289A  C02F  F022         	movff	goback@mR,turn45@mR
  2399  00289E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2400  0028A2  0E02               	movlw	2
  2401  0028A4  6E24               	movwf	turn45@turn_time^0,c
  2402  0028A6  0E01               	movlw	1
  2403  0028A8  6E25               	movwf	turn45@direction^0,c
  2404  0028AA  ECA9  F020         	call	_turn45	;wreg free
  2405  0028AE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2406  0028B2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2407  0028B6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2408  0028BA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2409  0028BE  0E03               	movlw	3
  2410  0028C0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2411  0028C2  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2412  0028C6  EF64  F013         	goto	l4918
  2413  0028CA                     l4962:
  2414                           
  2415                           ; BSR set to: 1
  2416  0028CA  517D               	movf	_array_index& (0+255),w,b
  2417  0028CC  0D02               	mullw	2
  2418  0028CE  0E00               	movlw	low _memory
  2419  0028D0  24F3               	addwf	243,w,c
  2420  0028D2  6ED9               	movwf	fsr2l,c
  2421  0028D4  0E01               	movlw	high _memory
  2422  0028D6  20F4               	addwfc	prodh,w,c
  2423  0028D8  6EDA               	movwf	fsr2h,c
  2424  0028DA  0E05               	movlw	5
  2425  0028DC  18DE               	xorwf	postinc2,w,c
  2426  0028DE  10DE               	iorwf	postinc2,w,c
  2427  0028E0  A4D8               	btfss	status,2,c
  2428  0028E2  EF75  F014         	goto	u5391
  2429  0028E6  EF77  F014         	goto	u5390
  2430  0028EA                     u5391:
  2431  0028EA  EF93  F014         	goto	l4968
  2432  0028EE                     u5390:
  2433  0028EE                     
  2434                           ; BSR set to: 1
  2435  0028EE  C02D  F020         	movff	goback@mL,turn45@mL
  2436  0028F2  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2437  0028F6  C02F  F022         	movff	goback@mR,turn45@mR
  2438  0028FA  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2439  0028FE  0E02               	movlw	2
  2440  002900  6E24               	movwf	turn45@turn_time^0,c
  2441  002902  0E02               	movlw	2
  2442  002904  6E25               	movwf	turn45@direction^0,c
  2443  002906  ECA9  F020         	call	_turn45	;wreg free
  2444  00290A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2445  00290E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2446  002912  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2447  002916  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2448  00291A  0E03               	movlw	3
  2449  00291C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2450  00291E  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2451  002922  EF64  F013         	goto	l4918
  2452  002926                     l4968:
  2453                           
  2454                           ; BSR set to: 1
  2455  002926  517D               	movf	_array_index& (0+255),w,b
  2456  002928  0D02               	mullw	2
  2457  00292A  0E00               	movlw	low _memory
  2458  00292C  24F3               	addwf	243,w,c
  2459  00292E  6ED9               	movwf	fsr2l,c
  2460  002930  0E01               	movlw	high _memory
  2461  002932  20F4               	addwfc	prodh,w,c
  2462  002934  6EDA               	movwf	fsr2h,c
  2463  002936  0E06               	movlw	6
  2464  002938  18DE               	xorwf	postinc2,w,c
  2465  00293A  10DE               	iorwf	postinc2,w,c
  2466  00293C  A4D8               	btfss	status,2,c
  2467  00293E  EFA3  F014         	goto	u5401
  2468  002942  EFA5  F014         	goto	u5400
  2469  002946                     u5401:
  2470  002946  EFC1  F014         	goto	l4974
  2471  00294A                     u5400:
  2472  00294A                     
  2473                           ; BSR set to: 1
  2474  00294A  C02D  F020         	movff	goback@mL,turn45@mL
  2475  00294E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2476  002952  C02F  F022         	movff	goback@mR,turn45@mR
  2477  002956  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2478  00295A  0E03               	movlw	3
  2479  00295C  6E24               	movwf	turn45@turn_time^0,c
  2480  00295E  0E01               	movlw	1
  2481  002960  6E25               	movwf	turn45@direction^0,c
  2482  002962  ECA9  F020         	call	_turn45	;wreg free
  2483  002966  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2484  00296A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2485  00296E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2486  002972  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2487  002976  0E02               	movlw	2
  2488  002978  6E24               	movwf	fullSpeedBack@instruction^0,c
  2489  00297A  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2490  00297E  EF64  F013         	goto	l4918
  2491  002982                     l4974:
  2492                           
  2493                           ; BSR set to: 1
  2494  002982  517D               	movf	_array_index& (0+255),w,b
  2495  002984  0D02               	mullw	2
  2496  002986  0E00               	movlw	low _memory
  2497  002988  24F3               	addwf	243,w,c
  2498  00298A  6ED9               	movwf	fsr2l,c
  2499  00298C  0E01               	movlw	high _memory
  2500  00298E  20F4               	addwfc	prodh,w,c
  2501  002990  6EDA               	movwf	fsr2h,c
  2502  002992  0E07               	movlw	7
  2503  002994  18DE               	xorwf	postinc2,w,c
  2504  002996  10DE               	iorwf	postinc2,w,c
  2505  002998  A4D8               	btfss	status,2,c
  2506  00299A  EFD1  F014         	goto	u5411
  2507  00299E  EFD3  F014         	goto	u5410
  2508  0029A2                     u5411:
  2509  0029A2  EFEF  F014         	goto	l470
  2510  0029A6                     u5410:
  2511  0029A6                     
  2512                           ; BSR set to: 1
  2513  0029A6  C02D  F020         	movff	goback@mL,turn45@mL
  2514  0029AA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2515  0029AE  C02F  F022         	movff	goback@mR,turn45@mR
  2516  0029B2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2517  0029B6  0E03               	movlw	3
  2518  0029B8  6E24               	movwf	turn45@turn_time^0,c
  2519  0029BA  0E02               	movlw	2
  2520  0029BC  6E25               	movwf	turn45@direction^0,c
  2521  0029BE  ECA9  F020         	call	_turn45	;wreg free
  2522  0029C2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2523  0029C6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2524  0029CA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2525  0029CE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2526  0029D2  0E02               	movlw	2
  2527  0029D4  6E24               	movwf	fullSpeedBack@instruction^0,c
  2528  0029D6  ECF7  F022         	call	_fullSpeedBack	;wreg free
  2529  0029DA  EF64  F013         	goto	l4918
  2530  0029DE                     l470:
  2531                           
  2532                           ; BSR set to: 1
  2533  0029DE  EF66  F013         	goto	l4920
  2534  0029E2                     l462:
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2538  0029E2  8E7C               	bsf	124,7,c	;volatile
  2539                           
  2540                           ;movement.c: 85:     while(PORTFbits.RF2){
  2541  0029E4  EF08  F015         	goto	l476
  2542  0029E8                     l4980:
  2543                           
  2544                           ;movement.c: 86:         stop(mL,mR);
  2545  0029E8  C02D  F01A         	movff	goback@mL,stop@mL
  2546  0029EC  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2547  0029F0  C02F  F01C         	movff	goback@mR,stop@mR
  2548  0029F4  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2549  0029F8  ECD6  F029         	call	_stop	;wreg free
  2550  0029FC                     
  2551                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2552  0029FC  B48E               	btfsc	142,2,c	;volatile
  2553  0029FE  EF03  F015         	goto	u5421
  2554  002A02  EF05  F015         	goto	u5420
  2555  002A06                     u5421:
  2556  002A06  EF08  F015         	goto	l476
  2557  002A0A                     u5420:
  2558  002A0A  9E7C               	bcf	124,7,c	;volatile
  2559  002A0C  EF0F  F015         	goto	l480
  2560  002A10                     l476:
  2561                           
  2562                           ;movement.c: 85:     while(PORTFbits.RF2){
  2563  002A10  B48E               	btfsc	142,2,c	;volatile
  2564  002A12  EF0D  F015         	goto	u5431
  2565  002A16  EF0F  F015         	goto	u5430
  2566  002A1A                     u5431:
  2567  002A1A  EFF4  F014         	goto	l4980
  2568  002A1E                     u5430:
  2569  002A1E                     l480:
  2570  002A1E  0012               	return		;funcret
  2571  002A20                     __end_of_goback:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _fullSpeedBack *****************
  2575 ;; Defined at:
  2576 ;;		line 136 in file "dc_motor.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2579 ;;		 -> main@motorL(9), 
  2580 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2581 ;;		 -> main@motorR(9), 
  2582 ;;  instruction     1   35[COMRAM] unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2594 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;Total ram usage:        7 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 4
  2601 ;; This function calls:
  2602 ;;		_setMotorPWM
  2603 ;;		_stop
  2604 ;; This function is called by:
  2605 ;;		_turning_action
  2606 ;;		_goback
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text4
  2611  0045EE                     __ptext4:
  2612                           	callstack 0
  2613  0045EE                     _fullSpeedBack:
  2614                           	callstack 24
  2615  0045EE                     
  2616                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2617  0045EE  EE20 F001          	lfsr	2,1
  2618  0045F2  5020               	movf	fullSpeedBack@mL^0,w,c
  2619  0045F4  26D9               	addwf	fsr2l,f,c
  2620  0045F6  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2621  0045F8  22DA               	addwfc	fsr2h,f,c
  2622  0045FA  0E00               	movlw	0
  2623  0045FC  6EDF               	movwf	indf2,c
  2624                           
  2625                           ;dc_motor.c: 139:     mR->direction=0;
  2626  0045FE  EE20 F001          	lfsr	2,1
  2627  004602  5022               	movf	fullSpeedBack@mR^0,w,c
  2628  004604  26D9               	addwf	fsr2l,f,c
  2629  004606  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2630  004608  22DA               	addwfc	fsr2h,f,c
  2631  00460A  0E00               	movlw	0
  2632  00460C  6EDF               	movwf	indf2,c
  2633                           
  2634                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2635  00460E  EF41  F023         	goto	l4420
  2636  004612                     l4406:
  2637                           
  2638                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2639  004612  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2640  004616  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2641  00461A  0E2C               	movlw	44
  2642  00461C  60DF               	cpfslt	indf2,c
  2643  00461E  EF13  F023         	goto	u4761
  2644  004622  EF15  F023         	goto	u4760
  2645  004626                     u4761:
  2646  004626  EF1B  F023         	goto	l4410
  2647  00462A                     u4760:
  2648  00462A  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2649  00462E  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2650  004632  0E02               	movlw	2
  2651  004634  26DF               	addwf	indf2,f,c
  2652  004636                     l4410:
  2653                           
  2654                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2655  004636  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2656  00463A  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2657  00463E  0E2C               	movlw	44
  2658  004640  60DF               	cpfslt	indf2,c
  2659  004642  EF25  F023         	goto	u4771
  2660  004646  EF27  F023         	goto	u4770
  2661  00464A                     u4771:
  2662  00464A  EF2D  F023         	goto	l4414
  2663  00464E                     u4770:
  2664  00464E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2665  004652  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2666  004656  0E02               	movlw	2
  2667  004658  26DF               	addwf	indf2,f,c
  2668  00465A                     l4414:
  2669                           
  2670                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2671  00465A  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2672  00465E  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2673  004662  EC2C  F01D         	call	_setMotorPWM	;wreg free
  2674  004666                     
  2675                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2676  004666  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2677  00466A  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2678  00466E  EC2C  F01D         	call	_setMotorPWM	;wreg free
  2679  004672                     
  2680                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2681  004672  0E68               	movlw	104
  2682  004674  6E25               	movwf	??_fullSpeedBack^0,c
  2683  004676  0EE4               	movlw	228
  2684  004678                     u5887:
  2685  004678  2EE8               	decfsz	wreg,f,c
  2686  00467A  D7FE               	bra	u5887
  2687  00467C  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2688  00467E  D7FC               	bra	u5887
  2689  004680  D000               	nop2	
  2690  004682                     l4420:
  2691                           
  2692                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2693  004682  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2694  004686  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2695  00468A  0E2B               	movlw	43
  2696  00468C  64DF               	cpfsgt	indf2,c
  2697  00468E  EF4B  F023         	goto	u4781
  2698  004692  EF4D  F023         	goto	u4780
  2699  004696                     u4781:
  2700  004696  EF09  F023         	goto	l4406
  2701  00469A                     u4780:
  2702  00469A  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2703  00469E  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2704  0046A2  0E2B               	movlw	43
  2705  0046A4  64DF               	cpfsgt	indf2,c
  2706  0046A6  EF57  F023         	goto	u4791
  2707  0046AA  EF59  F023         	goto	u4790
  2708  0046AE                     u4791:
  2709  0046AE  EF09  F023         	goto	l4406
  2710  0046B2                     u4790:
  2711  0046B2                     
  2712                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2713  0046B2  0424               	decf	fullSpeedBack@instruction^0,w,c
  2714  0046B4  A4D8               	btfss	status,2,c
  2715  0046B6  EF5F  F023         	goto	u4801
  2716  0046BA  EF61  F023         	goto	u4800
  2717  0046BE                     u4801:
  2718  0046BE  EF6C  F023         	goto	l4428
  2719  0046C2                     u4800:
  2720  0046C2  0E31               	movlw	49
  2721  0046C4  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2722  0046C6  0EB4               	movlw	180
  2723  0046C8  6E25               	movwf	??_fullSpeedBack^0,c
  2724  0046CA  0E66               	movlw	102
  2725  0046CC                     u5897:
  2726  0046CC  2EE8               	decfsz	wreg,f,c
  2727  0046CE  D7FE               	bra	u5897
  2728  0046D0  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2729  0046D2  D7FC               	bra	u5897
  2730  0046D4  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2731  0046D6  D7FA               	bra	u5897
  2732  0046D8                     l4428:
  2733                           
  2734                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2735  0046D8  0E02               	movlw	2
  2736  0046DA  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2737  0046DC  A4D8               	btfss	status,2,c
  2738  0046DE  EF73  F023         	goto	u4811
  2739  0046E2  EF75  F023         	goto	u4810
  2740  0046E6                     u4811:
  2741  0046E6  EF81  F023         	goto	l4432
  2742  0046EA                     u4810:
  2743  0046EA  0E52               	movlw	82
  2744  0046EC  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2745  0046EE  0E2B               	movlw	43
  2746  0046F0  6E25               	movwf	??_fullSpeedBack^0,c
  2747  0046F2  0E00               	movlw	0
  2748  0046F4                     u5907:
  2749  0046F4  2EE8               	decfsz	wreg,f,c
  2750  0046F6  D7FE               	bra	u5907
  2751  0046F8  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2752  0046FA  D7FC               	bra	u5907
  2753  0046FC  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2754  0046FE  D7FA               	bra	u5907
  2755  004700  D000               	nop2	
  2756  004702                     l4432:
  2757                           
  2758                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((2000)*(64000000/400
      +                          0.0)));}
  2759  004702  0E03               	movlw	3
  2760  004704  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2761  004706  A4D8               	btfss	status,2,c
  2762  004708  EF88  F023         	goto	u4821
  2763  00470C  EF8A  F023         	goto	u4820
  2764  004710                     u4821:
  2765  004710  EF96  F023         	goto	l4436
  2766  004714                     u4820:
  2767  004714  0EA3               	movlw	163
  2768  004716  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2769  004718  0E57               	movlw	87
  2770  00471A  6E25               	movwf	??_fullSpeedBack^0,c
  2771  00471C  0E02               	movlw	2
  2772  00471E                     u5917:
  2773  00471E  2EE8               	decfsz	wreg,f,c
  2774  004720  D7FE               	bra	u5917
  2775  004722  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2776  004724  D7FC               	bra	u5917
  2777  004726  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2778  004728  D7FA               	bra	u5917
  2779  00472A  D000               	nop2	
  2780  00472C                     l4436:
  2781                           
  2782                           ;dc_motor.c: 151:     stop(mL,mR);
  2783  00472C  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2784  004730  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2785  004734  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2786  004738  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2787  00473C  ECD6  F029         	call	_stop	;wreg free
  2788  004740  0012               	return		;funcret
  2789  004742                     __end_of_fullSpeedBack:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _test_function *****************
  2793 ;; Defined at:
  2794 ;;		line 46 in file "test_and_calibration.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  test_code       1    wreg     unsigned char 
  2797 ;;  m               2  128[BANK0 ] PTR struct color_rgb
  2798 ;;		 -> main@rgb(8), 
  2799 ;;  w               2  130[BANK0 ] PTR struct white_card
  2800 ;;		 -> main@white(28), 
  2801 ;;  mL              2  132[BANK0 ] PTR struct DC_motor
  2802 ;;		 -> main@motorL(9), 
  2803 ;;  mR              2  134[BANK0 ] PTR struct DC_motor
  2804 ;;		 -> main@motorR(9), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  test_code       1  143[BANK0 ] unsigned char 
  2807 ;;  amb_light       2  138[BANK0 ] unsigned int 
  2808 ;;  stop_signal     1  142[BANK0 ] unsigned char 
  2809 ;;  color           1  141[BANK0 ] unsigned char 
  2810 ;;  complete        1  140[BANK0 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;Total ram usage:       16 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 11
  2827 ;; This function calls:
  2828 ;;		_LED_C
  2829 ;;		_amb_light_measure
  2830 ;;		_calibrate_white
  2831 ;;		_color_data_collection
  2832 ;;		_color_display
  2833 ;;		_color_predict
  2834 ;;		_detect_color
  2835 ;;		_detect_wall
  2836 ;;		_fullSpeedAhead
  2837 ;;		_read_color
  2838 ;;		_stop
  2839 ;;		_test_action
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text5
  2846  003C2C                     __ptext5:
  2847                           	callstack 0
  2848  003C2C                     _test_function:
  2849                           	callstack 19
  2850                           
  2851                           ;incstack = 0
  2852                           ;test_function@test_code stored from wreg
  2853  003C2C  0100               	movlb	0	; () banked
  2854  003C2E  6FEF               	movwf	test_function@test_code& (0+255),b
  2855  003C30                     
  2856                           ;test_and_calibration.c: 46: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 47: {;test_and_calibration.c: 48:     unsigned char complete = 0;
  2857  003C30  0E00               	movlw	0
  2858  003C32  0100               	movlb	0	; () banked
  2859  003C34  6FEC               	movwf	test_function@complete& (0+255),b
  2860                           
  2861                           ;test_and_calibration.c: 50:     unsigned char stop_signal = 0;
  2862  003C36  0E00               	movlw	0
  2863  003C38  6FEE               	movwf	test_function@stop_signal& (0+255),b
  2864                           
  2865                           ;test_and_calibration.c: 51:     unsigned int amb_light = 0;
  2866  003C3A  0E00               	movlw	0
  2867  003C3C  6FEB               	movwf	(test_function@amb_light+1)& (0+255),b
  2868  003C3E  0E00               	movlw	0
  2869  003C40  6FEA               	movwf	test_function@amb_light& (0+255),b
  2870  003C42                     
  2871                           ; BSR set to: 0
  2872                           ;test_and_calibration.c: 53:     if (test_code == 2){calibrate_white(w);}
  2873  003C42  0E02               	movlw	2
  2874  003C44  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2875  003C46  A4D8               	btfss	status,2,c
  2876  003C48  EF28  F01E         	goto	u5611
  2877  003C4C  EF2A  F01E         	goto	u5610
  2878  003C50                     u5611:
  2879  003C50  EF30  F01E         	goto	l5136
  2880  003C54                     u5610:
  2881  003C54                     
  2882                           ; BSR set to: 0
  2883  003C54  C0E2  F00C         	movff	test_function@w,calibrate_white@w
  2884  003C58  C0E3  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2885  003C5C  EC27  F01C         	call	_calibrate_white	;wreg free
  2886  003C60                     l5136:
  2887                           
  2888                           ;test_and_calibration.c: 54:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2889  003C60  0E04               	movlw	4
  2890  003C62  0100               	movlb	0	; () banked
  2891  003C64  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2892  003C66  A4D8               	btfss	status,2,c
  2893  003C68  EF38  F01E         	goto	u5621
  2894  003C6C  EF3A  F01E         	goto	u5620
  2895  003C70                     u5621:
  2896  003C70  EF44  F01E         	goto	l5140
  2897  003C74                     u5620:
  2898  003C74                     
  2899                           ; BSR set to: 0
  2900  003C74  C0E0  F050         	movff	test_function@m,amb_light_measure@amb
  2901  003C78  C0E1  F051         	movff	test_function@m+1,amb_light_measure@amb+1
  2902  003C7C  ECE2  F024         	call	_amb_light_measure	;wreg free
  2903  003C80  C050  F0EA         	movff	?_amb_light_measure,test_function@amb_light
  2904  003C84  C051  F0EB         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2905  003C88                     l5140:
  2906                           
  2907                           ;test_and_calibration.c: 58:         if (test_code == 1){
  2908  003C88  0100               	movlb	0	; () banked
  2909  003C8A  05EF               	decf	test_function@test_code& (0+255),w,b
  2910  003C8C  A4D8               	btfss	status,2,c
  2911  003C8E  EF4B  F01E         	goto	u5631
  2912  003C92  EF4D  F01E         	goto	u5630
  2913  003C96                     u5631:
  2914  003C96  EF5B  F01E         	goto	l5148
  2915  003C9A                     u5630:
  2916  003C9A                     
  2917                           ; BSR set to: 0
  2918                           ;test_and_calibration.c: 59:             LED_C();
  2919  003C9A  EC0C  F02E         	call	_LED_C	;wreg free
  2920  003C9E                     
  2921                           ;test_and_calibration.c: 60:             read_color(m);
  2922  003C9E  C0E0  F00C         	movff	test_function@m,read_color@m
  2923  003CA2  C0E1  F00D         	movff	test_function@m+1,read_color@m+1
  2924  003CA6  ECDC  F02A         	call	_read_color	;wreg free
  2925  003CAA                     
  2926                           ;test_and_calibration.c: 61:             color_display(m);
  2927  003CAA  C0E0  F058         	movff	test_function@m,color_display@m
  2928  003CAE  C0E1  F059         	movff	test_function@m+1,color_display@m+1
  2929  003CB2  EC73  F02A         	call	_color_display	;wreg free
  2930  003CB6                     l5148:
  2931                           
  2932                           ;test_and_calibration.c: 64:         if (test_code == 2){
  2933  003CB6  0E02               	movlw	2
  2934  003CB8  0100               	movlb	0	; () banked
  2935  003CBA  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2936  003CBC  A4D8               	btfss	status,2,c
  2937  003CBE  EF63  F01E         	goto	u5641
  2938  003CC2  EF65  F01E         	goto	u5640
  2939  003CC6                     u5641:
  2940  003CC6  EF7B  F01E         	goto	l5156
  2941  003CCA                     u5640:
  2942  003CCA                     
  2943                           ; BSR set to: 0
  2944                           ;test_and_calibration.c: 65:             color = detect_color(m,w);
  2945  003CCA  C0E0  F057         	movff	test_function@m,detect_color@m
  2946  003CCE  C0E1  F058         	movff	test_function@m+1,detect_color@m+1
  2947  003CD2  C0E2  F059         	movff	test_function@w,detect_color@w
  2948  003CD6  C0E3  F05A         	movff	test_function@w+1,detect_color@w+1
  2949  003CDA  EC0A  F007         	call	_detect_color	;wreg free
  2950  003CDE  0100               	movlb	0	; () banked
  2951  003CE0  6FED               	movwf	test_function@color& (0+255),b
  2952  003CE2                     
  2953                           ; BSR set to: 0
  2954                           ;test_and_calibration.c: 66:             color_display(m);
  2955  003CE2  C0E0  F058         	movff	test_function@m,color_display@m
  2956  003CE6  C0E1  F059         	movff	test_function@m+1,color_display@m+1
  2957  003CEA  EC73  F02A         	call	_color_display	;wreg free
  2958  003CEE                     
  2959                           ;test_and_calibration.c: 67:             color_predict(color);
  2960  003CEE  0100               	movlb	0	; () banked
  2961  003CF0  51ED               	movf	test_function@color& (0+255),w,b
  2962  003CF2  EC79  F02D         	call	_color_predict
  2963  003CF6                     l5156:
  2964                           
  2965                           ;test_and_calibration.c: 70:         if (test_code == 3){
  2966  003CF6  0E03               	movlw	3
  2967  003CF8  0100               	movlb	0	; () banked
  2968  003CFA  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2969  003CFC  A4D8               	btfss	status,2,c
  2970  003CFE  EF83  F01E         	goto	u5651
  2971  003D02  EF85  F01E         	goto	u5650
  2972  003D06                     u5651:
  2973  003D06  EF98  F01E         	goto	l5166
  2974  003D0A                     u5650:
  2975  003D0A  EF90  F01E         	goto	l5164
  2976  003D0E                     l5160:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;test_and_calibration.c: 72:                 color_data_collection(m);
  2980  003D0E  C0E0  F05A         	movff	test_function@m,color_data_collection@m
  2981  003D12  C0E1  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2982  003D16  EC70  F025         	call	_color_data_collection	;wreg free
  2983  003D1A                     
  2984                           ;test_and_calibration.c: 73:                 complete = 1;
  2985  003D1A  0E01               	movlw	1
  2986  003D1C  0100               	movlb	0	; () banked
  2987  003D1E  6FEC               	movwf	test_function@complete& (0+255),b
  2988  003D20                     l5164:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;test_and_calibration.c: 71:             while (complete == 0){
  2992  003D20  51EC               	movf	test_function@complete& (0+255),w,b
  2993  003D22  B4D8               	btfsc	status,2,c
  2994  003D24  EF96  F01E         	goto	u5661
  2995  003D28  EF98  F01E         	goto	u5660
  2996  003D2C                     u5661:
  2997  003D2C  EF87  F01E         	goto	l5160
  2998  003D30                     u5660:
  2999  003D30                     l5166:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;test_and_calibration.c: 77:         if (test_code == 4){
  3003  003D30  0E04               	movlw	4
  3004  003D32  19EF               	xorwf	test_function@test_code& (0+255),w,b
  3005  003D34  A4D8               	btfss	status,2,c
  3006  003D36  EF9F  F01E         	goto	u5671
  3007  003D3A  EFA1  F01E         	goto	u5670
  3008  003D3E                     u5671:
  3009  003D3E  EFDF  F01E         	goto	l5182
  3010  003D42                     u5670:
  3011  003D42  EFBD  F01E         	goto	l5174
  3012  003D46                     l5170:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;test_and_calibration.c: 79:                 fullSpeedAhead(mL, mR);
  3016  003D46  C0E4  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3017  003D4A  C0E5  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3018  003D4E  C0E6  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3019  003D52  C0E7  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3020  003D56  EC12  F029         	call	_fullSpeedAhead	;wreg free
  3021  003D5A                     
  3022                           ;test_and_calibration.c: 80:                 stop_signal = detect_wall(mL, mR, amb_light
      +                          );
  3023  003D5A  C0E4  F050         	movff	test_function@mL,detect_wall@mL
  3024  003D5E  C0E5  F051         	movff	test_function@mL+1,detect_wall@mL+1
  3025  003D62  C0E6  F052         	movff	test_function@mR,detect_wall@mR
  3026  003D66  C0E7  F053         	movff	test_function@mR+1,detect_wall@mR+1
  3027  003D6A  C0EA  F054         	movff	test_function@amb_light,detect_wall@amb_light
  3028  003D6E  C0EB  F055         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3029  003D72  EC73  F027         	call	_detect_wall	;wreg free
  3030  003D76  0100               	movlb	0	; () banked
  3031  003D78  6FEE               	movwf	test_function@stop_signal& (0+255),b
  3032  003D7A                     l5174:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;test_and_calibration.c: 78:             while (stop_signal == 0){
  3036  003D7A  51EE               	movf	test_function@stop_signal& (0+255),w,b
  3037  003D7C  B4D8               	btfsc	status,2,c
  3038  003D7E  EFC3  F01E         	goto	u5681
  3039  003D82  EFC5  F01E         	goto	u5680
  3040  003D86                     u5681:
  3041  003D86  EFA3  F01E         	goto	l5170
  3042  003D8A                     u5680:
  3043  003D8A                     
  3044                           ; BSR set to: 0
  3045                           ;test_and_calibration.c: 82:             stop(mL, mR);
  3046  003D8A  C0E4  F01A         	movff	test_function@mL,stop@mL
  3047  003D8E  C0E5  F01B         	movff	test_function@mL+1,stop@mL+1
  3048  003D92  C0E6  F01C         	movff	test_function@mR,stop@mR
  3049  003D96  C0E7  F01D         	movff	test_function@mR+1,stop@mR+1
  3050  003D9A  ECD6  F029         	call	_stop	;wreg free
  3051  003D9E                     
  3052                           ;test_and_calibration.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  3053  003D9E  0E52               	movlw	82
  3054  003DA0  0100               	movlb	0	; () banked
  3055  003DA2  6FE9               	movwf	(??_test_function+1)& (0+255),b
  3056  003DA4  0E2B               	movlw	43
  3057  003DA6  6FE8               	movwf	??_test_function& (0+255),b
  3058  003DA8  0E00               	movlw	0
  3059  003DAA                     u5927:
  3060  003DAA  2EE8               	decfsz	wreg,f,c
  3061  003DAC  D7FE               	bra	u5927
  3062  003DAE  2FE8               	decfsz	??_test_function& (0+255),f,b
  3063  003DB0  D7FC               	bra	u5927
  3064  003DB2  2FE9               	decfsz	(??_test_function+1)& (0+255),f,b
  3065  003DB4  D7FA               	bra	u5927
  3066  003DB6  F000               	nop	
  3067  003DB8                     
  3068                           ;test_and_calibration.c: 84:             stop_signal = 0;
  3069  003DB8  0E00               	movlw	0
  3070  003DBA  0100               	movlb	0	; () banked
  3071  003DBC  6FEE               	movwf	test_function@stop_signal& (0+255),b
  3072  003DBE                     l5182:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;test_and_calibration.c: 87:         if (test_code == 5){
  3076  003DBE  0E05               	movlw	5
  3077  003DC0  19EF               	xorwf	test_function@test_code& (0+255),w,b
  3078  003DC2  A4D8               	btfss	status,2,c
  3079  003DC4  EFE6  F01E         	goto	u5691
  3080  003DC8  EFE8  F01E         	goto	u5690
  3081  003DCC                     u5691:
  3082  003DCC  EF44  F01E         	goto	l5140
  3083  003DD0                     u5690:
  3084  003DD0                     
  3085                           ; BSR set to: 0
  3086                           ;test_and_calibration.c: 88:             test_action(mL,mR);
  3087  003DD0  C0E4  F02D         	movff	test_function@mL,test_action@mL
  3088  003DD4  C0E5  F02E         	movff	test_function@mL+1,test_action@mL+1
  3089  003DD8  C0E6  F02F         	movff	test_function@mR,test_action@mR
  3090  003DDC  C0E7  F030         	movff	test_function@mR+1,test_action@mR+1
  3091  003DE0  EC4B  F024         	call	_test_action	;wreg free
  3092  003DE4  EF44  F01E         	goto	l5140
  3093  003DE8  0012               	return		;funcret
  3094  003DEA                     __end_of_test_function:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _detect_wall *****************
  3098 ;; Defined at:
  3099 ;;		line 403 in file "color.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  mL              2   79[COMRAM] PTR struct DC_motor
  3102 ;;		 -> main@motorL(9), 
  3103 ;;  mR              2   81[COMRAM] PTR struct DC_motor
  3104 ;;		 -> main@motorR(9), 
  3105 ;;  amb_light       2   83[COMRAM] unsigned int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  threshold       2    6[BANK0 ] unsigned int 
  3108 ;;  CC_amb          2    4[BANK0 ] unsigned int 
  3109 ;;  stop            1    8[BANK0 ] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      unsigned char 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:       17 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 5
  3126 ;; This function calls:
  3127 ;;		_LED_C
  3128 ;;		___fldiv
  3129 ;;		___flmul
  3130 ;;		___xxtofl
  3131 ;;		_color_read_Clear
  3132 ;;		_lroundf
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;;		_test_function
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text6
  3140  004EE6                     __ptext6:
  3141                           	callstack 0
  3142  004EE6                     _detect_wall:
  3143                           	callstack 24
  3144  004EE6                     
  3145                           ;color.c: 406:     unsigned char stop = 0;
  3146  004EE6  0E00               	movlw	0
  3147  004EE8  0100               	movlb	0	; () banked
  3148  004EEA  6F68               	movwf	detect_wall@stop& (0+255),b
  3149                           
  3150                           ;color.c: 407:     unsigned int threshold = 0;
  3151  004EEC  0E00               	movlw	0
  3152  004EEE  6F67               	movwf	(detect_wall@threshold+1)& (0+255),b
  3153  004EF0  0E00               	movlw	0
  3154  004EF2  6F66               	movwf	detect_wall@threshold& (0+255),b
  3155  004EF4                     
  3156                           ; BSR set to: 0
  3157                           ;color.c: 408:     LED_C();
  3158  004EF4  EC0C  F02E         	call	_LED_C	;wreg free
  3159  004EF8                     
  3160                           ;color.c: 409:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3161  004EF8  0E09               	movlw	9
  3162  004EFA  6E57               	movwf	(??_detect_wall+1)^0,c
  3163  004EFC  0E1E               	movlw	30
  3164  004EFE  6E56               	movwf	??_detect_wall^0,c
  3165  004F00  0EE4               	movlw	228
  3166  004F02                     u5937:
  3167  004F02  2EE8               	decfsz	wreg,f,c
  3168  004F04  D7FE               	bra	u5937
  3169  004F06  2E56               	decfsz	??_detect_wall^0,f,c
  3170  004F08  D7FC               	bra	u5937
  3171  004F0A  2E57               	decfsz	(??_detect_wall+1)^0,f,c
  3172  004F0C  D7FA               	bra	u5937
  3173  004F0E  D000               	nop2	
  3174  004F10                     
  3175                           ;color.c: 410:     CC_amb = color_read_Clear();
  3176  004F10  ECAC  F02B         	call	_color_read_Clear	;wreg free
  3177  004F14  C005  F064         	movff	?_color_read_Clear,detect_wall@CC_amb
  3178  004F18  C006  F065         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3179  004F1C                     
  3180                           ;color.c: 411:     threshold = lroundf((float)amb_light * 110 / 100);
  3181  004F1C  0E00               	movlw	0
  3182  004F1E  6E13               	movwf	___flmul@a^0,c
  3183  004F20  0E00               	movlw	0
  3184  004F22  6E14               	movwf	(___flmul@a+1)^0,c
  3185  004F24  0EDC               	movlw	220
  3186  004F26  6E15               	movwf	(___flmul@a+2)^0,c
  3187  004F28  0E42               	movlw	66
  3188  004F2A  6E16               	movwf	(___flmul@a+3)^0,c
  3189  004F2C  C054  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3190  004F30  C055  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3191  004F34  6A03               	clrf	(___xxtofl@val+2)^0,c
  3192  004F36  6A04               	clrf	(___xxtofl@val+3)^0,c
  3193  004F38  0E00               	movlw	0
  3194  004F3A  ECCF  F01F         	call	___xxtofl
  3195  004F3E  C001  F00F         	movff	?___xxtofl,___flmul@b
  3196  004F42  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3197  004F46  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3198  004F4A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3199  004F4E  EC52  F00F         	call	___flmul	;wreg free
  3200  004F52  C00F  F028         	movff	?___flmul,___fldiv@b
  3201  004F56  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3202  004F5A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3203  004F5E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3204  004F62  0E00               	movlw	0
  3205  004F64  6E2C               	movwf	___fldiv@a^0,c
  3206  004F66  0E00               	movlw	0
  3207  004F68  6E2D               	movwf	(___fldiv@a+1)^0,c
  3208  004F6A  0EC8               	movlw	200
  3209  004F6C  6E2E               	movwf	(___fldiv@a+2)^0,c
  3210  004F6E  0E42               	movlw	66
  3211  004F70  6E2F               	movwf	(___fldiv@a+3)^0,c
  3212  004F72  EC10  F015         	call	___fldiv	;wreg free
  3213  004F76  C028  F060         	movff	?___fldiv,_detect_wall$2932
  3214  004F7A  C029  F061         	movff	?___fldiv+1,_detect_wall$2932+1
  3215  004F7E  C02A  F062         	movff	?___fldiv+2,_detect_wall$2932+2
  3216  004F82  C02B  F063         	movff	?___fldiv+3,_detect_wall$2932+3
  3217  004F86                     
  3218                           ;color.c: 411:     threshold = lroundf((float)amb_light * 110 / 100);
  3219  004F86  C060  F04C         	movff	_detect_wall$2932,lroundf@x
  3220  004F8A  C061  F04D         	movff	_detect_wall$2932+1,lroundf@x+1
  3221  004F8E  C062  F04E         	movff	_detect_wall$2932+2,lroundf@x+2
  3222  004F92  C063  F04F         	movff	_detect_wall$2932+3,lroundf@x+3
  3223  004F96  ECBD  F02C         	call	_lroundf	;wreg free
  3224  004F9A  C04C  F066         	movff	?_lroundf,detect_wall@threshold
  3225  004F9E  C04D  F067         	movff	?_lroundf+1,detect_wall@threshold+1
  3226  004FA2                     
  3227                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  3228  004FA2  0100               	movlb	0	; () banked
  3229  004FA4  5166               	movf	detect_wall@threshold& (0+255),w,b
  3230  004FA6  5D64               	subwf	detect_wall@CC_amb& (0+255),w,b
  3231  004FA8  5167               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3232  004FAA  5965               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3233  004FAC  A0D8               	btfss	status,0,c
  3234  004FAE  EFDB  F027         	goto	u5321
  3235  004FB2  EFDD  F027         	goto	u5320
  3236  004FB6                     u5321:
  3237  004FB6  EFDF  F027         	goto	l151
  3238  004FBA                     u5320:
  3239  004FBA                     
  3240                           ; BSR set to: 0
  3241  004FBA  0E01               	movlw	1
  3242  004FBC  6F68               	movwf	detect_wall@stop& (0+255),b
  3243  004FBE                     l151:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;color.c: 414:     return stop;
  3247  004FBE  5168               	movf	detect_wall@stop& (0+255),w,b
  3248  004FC0                     
  3249                           ; BSR set to: 0
  3250  004FC0  0012               	return		;funcret
  3251  004FC2                     __end_of_detect_wall:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _detect_color *****************
  3255 ;; Defined at:
  3256 ;;		line 229 in file "color.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  m               2   86[COMRAM] PTR struct color_rgb
  3259 ;;		 -> main@rgb(8), 
  3260 ;;  w               2   88[COMRAM] PTR struct white_card
  3261 ;;		 -> main@white(28), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  BG              2   19[BANK0 ] unsigned int 
  3264 ;;  RR              2   16[BANK0 ] unsigned int 
  3265 ;;  GG              2   14[BANK0 ] unsigned int 
  3266 ;;  BB              2   12[BANK0 ] unsigned int 
  3267 ;;  GB              2   10[BANK0 ] unsigned int 
  3268 ;;  RB              2    8[BANK0 ] unsigned int 
  3269 ;;  BR              2    6[BANK0 ] unsigned int 
  3270 ;;  GR              2    4[BANK0 ] unsigned int 
  3271 ;;  BC              2    2[BANK0 ] unsigned int 
  3272 ;;  RG              2    0[BANK0 ] unsigned int 
  3273 ;;  color           1   18[BANK0 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Totals:         8      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;Total ram usage:       33 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 5
  3290 ;; This function calls:
  3291 ;;		_LED_B
  3292 ;;		_LED_G
  3293 ;;		_LED_R
  3294 ;;		___fldiv
  3295 ;;		___flmul
  3296 ;;		___xxtofl
  3297 ;;		_compare
  3298 ;;		_lroundf
  3299 ;;		_read_color
  3300 ;;		_toggle_light
  3301 ;; This function is called by:
  3302 ;;		_verify_color
  3303 ;;		_main
  3304 ;;		_test_function
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text7
  3309  000E14                     __ptext7:
  3310                           	callstack 0
  3311  000E14                     _detect_color:
  3312                           	callstack 24
  3313  000E14  0E00               	movlw	0
  3314  000E16  0100               	movlb	0	; () banked
  3315  000E18  6F61               	movwf	(detect_color@RG+1)& (0+255),b
  3316  000E1A  0E00               	movlw	0
  3317  000E1C  6F60               	movwf	detect_color@RG& (0+255),b
  3318  000E1E  0E00               	movlw	0
  3319  000E20  6F69               	movwf	(detect_color@RB+1)& (0+255),b
  3320  000E22  0E00               	movlw	0
  3321  000E24  6F68               	movwf	detect_color@RB& (0+255),b
  3322  000E26  0E00               	movlw	0
  3323  000E28  6F65               	movwf	(detect_color@GR+1)& (0+255),b
  3324  000E2A  0E00               	movlw	0
  3325  000E2C  6F64               	movwf	detect_color@GR& (0+255),b
  3326  000E2E  0E00               	movlw	0
  3327  000E30  6F6F               	movwf	(detect_color@GG+1)& (0+255),b
  3328  000E32  0E00               	movlw	0
  3329  000E34  6F6E               	movwf	detect_color@GG& (0+255),b
  3330  000E36  0E00               	movlw	0
  3331  000E38  6F6B               	movwf	(detect_color@GB+1)& (0+255),b
  3332  000E3A  0E00               	movlw	0
  3333  000E3C  6F6A               	movwf	detect_color@GB& (0+255),b
  3334  000E3E  0E00               	movlw	0
  3335  000E40  6F67               	movwf	(detect_color@BR+1)& (0+255),b
  3336  000E42  0E00               	movlw	0
  3337  000E44  6F66               	movwf	detect_color@BR& (0+255),b
  3338  000E46  0E00               	movlw	0
  3339  000E48  6F74               	movwf	(detect_color@BG+1)& (0+255),b
  3340  000E4A  0E00               	movlw	0
  3341  000E4C  6F73               	movwf	detect_color@BG& (0+255),b
  3342  000E4E  0E00               	movlw	0
  3343  000E50  6F6D               	movwf	(detect_color@BB+1)& (0+255),b
  3344  000E52  0E00               	movlw	0
  3345  000E54  6F6C               	movwf	detect_color@BB& (0+255),b
  3346  000E56  0E00               	movlw	0
  3347  000E58  6F63               	movwf	(detect_color@BC+1)& (0+255),b
  3348  000E5A  0E00               	movlw	0
  3349  000E5C  6F62               	movwf	detect_color@BC& (0+255),b
  3350                           
  3351                           ;color.c: 234:     unsigned char color = 0;
  3352  000E5E  0E00               	movlw	0
  3353  000E60  6F72               	movwf	detect_color@color& (0+255),b
  3354  000E62                     
  3355                           ; BSR set to: 0
  3356                           ;color.c: 236:     LED_R();
  3357  000E62  ECCC  F02D         	call	_LED_R	;wreg free
  3358  000E66                     
  3359                           ;color.c: 237:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3360  000E66  0E09               	movlw	9
  3361  000E68  6E5C               	movwf	(??_detect_color+1)^0,c
  3362  000E6A  0E1E               	movlw	30
  3363  000E6C  6E5B               	movwf	??_detect_color^0,c
  3364  000E6E  0EE4               	movlw	228
  3365  000E70                     u5947:
  3366  000E70  2EE8               	decfsz	wreg,f,c
  3367  000E72  D7FE               	bra	u5947
  3368  000E74  2E5B               	decfsz	??_detect_color^0,f,c
  3369  000E76  D7FC               	bra	u5947
  3370  000E78  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3371  000E7A  D7FA               	bra	u5947
  3372  000E7C  D000               	nop2	
  3373  000E7E                     
  3374                           ;color.c: 238:     read_color(m);
  3375  000E7E  C057  F00C         	movff	detect_color@m,read_color@m
  3376  000E82  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3377  000E86  ECDC  F02A         	call	_read_color	;wreg free
  3378  000E8A                     
  3379                           ;color.c: 240:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3380  000E8A  C059  FFD9         	movff	detect_color@w,fsr2l
  3381  000E8E  C05A  FFDA         	movff	detect_color@w+1,fsr2h
  3382  000E92  CFDE F05B          	movff	postinc2,??_detect_color
  3383  000E96  CFDD F05C          	movff	postdec2,??_detect_color+1
  3384  000E9A  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3385  000E9E  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3386  000EA2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3387  000EA4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3388  000EA6  0E00               	movlw	0
  3389  000EA8  ECCF  F01F         	call	___xxtofl
  3390  000EAC  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3391  000EB0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3392  000EB4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3393  000EB8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3394  000EBC  C057  FFD9         	movff	detect_color@m,fsr2l
  3395  000EC0  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3396  000EC4  CFDE F05D          	movff	postinc2,??_detect_color+2
  3397  000EC8  CFDD F05E          	movff	postdec2,??_detect_color+3
  3398  000ECC  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3399  000ED0  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3400  000ED4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3401  000ED6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3402  000ED8  0E00               	movlw	0
  3403  000EDA  ECCF  F01F         	call	___xxtofl
  3404  000EDE  C001  F028         	movff	?___xxtofl,___fldiv@b
  3405  000EE2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3406  000EE6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3407  000EEA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3408  000EEE  EC10  F015         	call	___fldiv	;wreg free
  3409  000EF2  C028  F00F         	movff	?___fldiv,___flmul@b
  3410  000EF6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3411  000EFA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3412  000EFE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3413  000F02  0E00               	movlw	0
  3414  000F04  6E13               	movwf	___flmul@a^0,c
  3415  000F06  0E00               	movlw	0
  3416  000F08  6E14               	movwf	(___flmul@a+1)^0,c
  3417  000F0A  0EC8               	movlw	200
  3418  000F0C  6E15               	movwf	(___flmul@a+2)^0,c
  3419  000F0E  0E42               	movlw	66
  3420  000F10  6E16               	movwf	(___flmul@a+3)^0,c
  3421  000F12  EC52  F00F         	call	___flmul	;wreg free
  3422  000F16  C00F  F075         	movff	?___flmul,_detect_color$2931
  3423  000F1A  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3424  000F1E  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3425  000F22  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3426  000F26                     
  3427                           ;color.c: 240:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3428  000F26  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3429  000F2A  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3430  000F2E  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3431  000F32  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3432  000F36  ECBD  F02C         	call	_lroundf	;wreg free
  3433  000F3A  C04C  F070         	movff	?_lroundf,detect_color@RR
  3434  000F3E  C04D  F071         	movff	?_lroundf+1,detect_color@RR+1
  3435  000F42  EE20 F002          	lfsr	2,2
  3436  000F46  5059               	movf	detect_color@w^0,w,c
  3437  000F48  26D9               	addwf	fsr2l,f,c
  3438  000F4A  505A               	movf	(detect_color@w+1)^0,w,c
  3439  000F4C  22DA               	addwfc	fsr2h,f,c
  3440  000F4E  CFDE F05B          	movff	postinc2,??_detect_color
  3441  000F52  CFDD F05C          	movff	postdec2,??_detect_color+1
  3442  000F56  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3443  000F5A  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3444  000F5E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3445  000F60  6A04               	clrf	(___xxtofl@val+3)^0,c
  3446  000F62  0E00               	movlw	0
  3447  000F64  ECCF  F01F         	call	___xxtofl
  3448  000F68  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3449  000F6C  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3450  000F70  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3451  000F74  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3452  000F78  EE20 F002          	lfsr	2,2
  3453  000F7C  5057               	movf	detect_color@m^0,w,c
  3454  000F7E  26D9               	addwf	fsr2l,f,c
  3455  000F80  5058               	movf	(detect_color@m+1)^0,w,c
  3456  000F82  22DA               	addwfc	fsr2h,f,c
  3457  000F84  CFDE F05D          	movff	postinc2,??_detect_color+2
  3458  000F88  CFDD F05E          	movff	postdec2,??_detect_color+3
  3459  000F8C  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3460  000F90  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3461  000F94  6A03               	clrf	(___xxtofl@val+2)^0,c
  3462  000F96  6A04               	clrf	(___xxtofl@val+3)^0,c
  3463  000F98  0E00               	movlw	0
  3464  000F9A  ECCF  F01F         	call	___xxtofl
  3465  000F9E  C001  F028         	movff	?___xxtofl,___fldiv@b
  3466  000FA2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3467  000FA6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3468  000FAA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3469  000FAE  EC10  F015         	call	___fldiv	;wreg free
  3470  000FB2  C028  F00F         	movff	?___fldiv,___flmul@b
  3471  000FB6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3472  000FBA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3473  000FBE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3474  000FC2  0E00               	movlw	0
  3475  000FC4  6E13               	movwf	___flmul@a^0,c
  3476  000FC6  0E00               	movlw	0
  3477  000FC8  6E14               	movwf	(___flmul@a+1)^0,c
  3478  000FCA  0EC8               	movlw	200
  3479  000FCC  6E15               	movwf	(___flmul@a+2)^0,c
  3480  000FCE  0E42               	movlw	66
  3481  000FD0  6E16               	movwf	(___flmul@a+3)^0,c
  3482  000FD2  EC52  F00F         	call	___flmul	;wreg free
  3483  000FD6  C00F  F075         	movff	?___flmul,_detect_color$2931
  3484  000FDA  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3485  000FDE  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3486  000FE2  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3487  000FE6  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3488  000FEA  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3489  000FEE  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3490  000FF2  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3491  000FF6  ECBD  F02C         	call	_lroundf	;wreg free
  3492  000FFA  EE20 F004          	lfsr	2,4
  3493  000FFE  5059               	movf	detect_color@w^0,w,c
  3494  001000  26D9               	addwf	fsr2l,f,c
  3495  001002  505A               	movf	(detect_color@w+1)^0,w,c
  3496  001004  22DA               	addwfc	fsr2h,f,c
  3497  001006  CFDE F05B          	movff	postinc2,??_detect_color
  3498  00100A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3499  00100E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3500  001012  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3501  001016  6A03               	clrf	(___xxtofl@val+2)^0,c
  3502  001018  6A04               	clrf	(___xxtofl@val+3)^0,c
  3503  00101A  0E00               	movlw	0
  3504  00101C  ECCF  F01F         	call	___xxtofl
  3505  001020  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3506  001024  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3507  001028  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3508  00102C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3509  001030  EE20 F004          	lfsr	2,4
  3510  001034  5057               	movf	detect_color@m^0,w,c
  3511  001036  26D9               	addwf	fsr2l,f,c
  3512  001038  5058               	movf	(detect_color@m+1)^0,w,c
  3513  00103A  22DA               	addwfc	fsr2h,f,c
  3514  00103C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3515  001040  CFDD F05E          	movff	postdec2,??_detect_color+3
  3516  001044  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3517  001048  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3518  00104C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3519  00104E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3520  001050  0E00               	movlw	0
  3521  001052  ECCF  F01F         	call	___xxtofl
  3522  001056  C001  F028         	movff	?___xxtofl,___fldiv@b
  3523  00105A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3524  00105E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3525  001062  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3526  001066  EC10  F015         	call	___fldiv	;wreg free
  3527  00106A  C028  F00F         	movff	?___fldiv,___flmul@b
  3528  00106E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3529  001072  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3530  001076  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3531  00107A  0E00               	movlw	0
  3532  00107C  6E13               	movwf	___flmul@a^0,c
  3533  00107E  0E00               	movlw	0
  3534  001080  6E14               	movwf	(___flmul@a+1)^0,c
  3535  001082  0EC8               	movlw	200
  3536  001084  6E15               	movwf	(___flmul@a+2)^0,c
  3537  001086  0E42               	movlw	66
  3538  001088  6E16               	movwf	(___flmul@a+3)^0,c
  3539  00108A  EC52  F00F         	call	___flmul	;wreg free
  3540  00108E  C00F  F075         	movff	?___flmul,_detect_color$2931
  3541  001092  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3542  001096  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3543  00109A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3544  00109E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3545  0010A2  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3546  0010A6  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3547  0010AA  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3548  0010AE  ECBD  F02C         	call	_lroundf	;wreg free
  3549  0010B2  C04C  F068         	movff	?_lroundf,detect_color@RB
  3550  0010B6  C04D  F069         	movff	?_lroundf+1,detect_color@RB+1
  3551  0010BA                     
  3552                           ;color.c: 241:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3553  0010BA  0E05               	movlw	5
  3554  0010BC  6E5C               	movwf	(??_detect_color+1)^0,c
  3555  0010BE  0E0F               	movlw	15
  3556  0010C0  6E5B               	movwf	??_detect_color^0,c
  3557  0010C2  0EF1               	movlw	241
  3558  0010C4                     u5957:
  3559  0010C4  2EE8               	decfsz	wreg,f,c
  3560  0010C6  D7FE               	bra	u5957
  3561  0010C8  2E5B               	decfsz	??_detect_color^0,f,c
  3562  0010CA  D7FC               	bra	u5957
  3563  0010CC  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3564  0010CE  D7FA               	bra	u5957
  3565  0010D0  F000               	nop	
  3566  0010D2                     
  3567                           ;color.c: 243:     LED_G();
  3568  0010D2  ECEC  F02D         	call	_LED_G	;wreg free
  3569  0010D6                     
  3570                           ;color.c: 244:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3571  0010D6  0E09               	movlw	9
  3572  0010D8  6E5C               	movwf	(??_detect_color+1)^0,c
  3573  0010DA  0E1E               	movlw	30
  3574  0010DC  6E5B               	movwf	??_detect_color^0,c
  3575  0010DE  0EE4               	movlw	228
  3576  0010E0                     u5967:
  3577  0010E0  2EE8               	decfsz	wreg,f,c
  3578  0010E2  D7FE               	bra	u5967
  3579  0010E4  2E5B               	decfsz	??_detect_color^0,f,c
  3580  0010E6  D7FC               	bra	u5967
  3581  0010E8  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3582  0010EA  D7FA               	bra	u5967
  3583  0010EC  D000               	nop2	
  3584  0010EE                     
  3585                           ;color.c: 245:     read_color(m);
  3586  0010EE  C057  F00C         	movff	detect_color@m,read_color@m
  3587  0010F2  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3588  0010F6  ECDC  F02A         	call	_read_color	;wreg free
  3589  0010FA                     
  3590                           ;color.c: 247:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3591  0010FA  EE20 F006          	lfsr	2,6
  3592  0010FE  5059               	movf	detect_color@w^0,w,c
  3593  001100  26D9               	addwf	fsr2l,f,c
  3594  001102  505A               	movf	(detect_color@w+1)^0,w,c
  3595  001104  22DA               	addwfc	fsr2h,f,c
  3596  001106  CFDE F05B          	movff	postinc2,??_detect_color
  3597  00110A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3598  00110E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3599  001112  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3600  001116  6A03               	clrf	(___xxtofl@val+2)^0,c
  3601  001118  6A04               	clrf	(___xxtofl@val+3)^0,c
  3602  00111A  0E00               	movlw	0
  3603  00111C  ECCF  F01F         	call	___xxtofl
  3604  001120  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3605  001124  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3606  001128  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3607  00112C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3608  001130  C057  FFD9         	movff	detect_color@m,fsr2l
  3609  001134  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3610  001138  CFDE F05D          	movff	postinc2,??_detect_color+2
  3611  00113C  CFDD F05E          	movff	postdec2,??_detect_color+3
  3612  001140  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3613  001144  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3614  001148  6A03               	clrf	(___xxtofl@val+2)^0,c
  3615  00114A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3616  00114C  0E00               	movlw	0
  3617  00114E  ECCF  F01F         	call	___xxtofl
  3618  001152  C001  F028         	movff	?___xxtofl,___fldiv@b
  3619  001156  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3620  00115A  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3621  00115E  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3622  001162  EC10  F015         	call	___fldiv	;wreg free
  3623  001166  C028  F00F         	movff	?___fldiv,___flmul@b
  3624  00116A  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3625  00116E  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3626  001172  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3627  001176  0E00               	movlw	0
  3628  001178  6E13               	movwf	___flmul@a^0,c
  3629  00117A  0E00               	movlw	0
  3630  00117C  6E14               	movwf	(___flmul@a+1)^0,c
  3631  00117E  0EC8               	movlw	200
  3632  001180  6E15               	movwf	(___flmul@a+2)^0,c
  3633  001182  0E42               	movlw	66
  3634  001184  6E16               	movwf	(___flmul@a+3)^0,c
  3635  001186  EC52  F00F         	call	___flmul	;wreg free
  3636  00118A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3637  00118E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3638  001192  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3639  001196  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3640  00119A                     
  3641                           ;color.c: 247:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3642  00119A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3643  00119E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3644  0011A2  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3645  0011A6  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3646  0011AA  ECBD  F02C         	call	_lroundf	;wreg free
  3647  0011AE  C04C  F064         	movff	?_lroundf,detect_color@GR
  3648  0011B2  C04D  F065         	movff	?_lroundf+1,detect_color@GR+1
  3649  0011B6  EE20 F008          	lfsr	2,8
  3650  0011BA  5059               	movf	detect_color@w^0,w,c
  3651  0011BC  26D9               	addwf	fsr2l,f,c
  3652  0011BE  505A               	movf	(detect_color@w+1)^0,w,c
  3653  0011C0  22DA               	addwfc	fsr2h,f,c
  3654  0011C2  CFDE F05B          	movff	postinc2,??_detect_color
  3655  0011C6  CFDD F05C          	movff	postdec2,??_detect_color+1
  3656  0011CA  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3657  0011CE  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3658  0011D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3659  0011D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3660  0011D6  0E00               	movlw	0
  3661  0011D8  ECCF  F01F         	call	___xxtofl
  3662  0011DC  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3663  0011E0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3664  0011E4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3665  0011E8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3666  0011EC  EE20 F002          	lfsr	2,2
  3667  0011F0  5057               	movf	detect_color@m^0,w,c
  3668  0011F2  26D9               	addwf	fsr2l,f,c
  3669  0011F4  5058               	movf	(detect_color@m+1)^0,w,c
  3670  0011F6  22DA               	addwfc	fsr2h,f,c
  3671  0011F8  CFDE F05D          	movff	postinc2,??_detect_color+2
  3672  0011FC  CFDD F05E          	movff	postdec2,??_detect_color+3
  3673  001200  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3674  001204  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3675  001208  6A03               	clrf	(___xxtofl@val+2)^0,c
  3676  00120A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3677  00120C  0E00               	movlw	0
  3678  00120E  ECCF  F01F         	call	___xxtofl
  3679  001212  C001  F028         	movff	?___xxtofl,___fldiv@b
  3680  001216  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3681  00121A  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3682  00121E  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3683  001222  EC10  F015         	call	___fldiv	;wreg free
  3684  001226  C028  F00F         	movff	?___fldiv,___flmul@b
  3685  00122A  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3686  00122E  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3687  001232  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3688  001236  0E00               	movlw	0
  3689  001238  6E13               	movwf	___flmul@a^0,c
  3690  00123A  0E00               	movlw	0
  3691  00123C  6E14               	movwf	(___flmul@a+1)^0,c
  3692  00123E  0EC8               	movlw	200
  3693  001240  6E15               	movwf	(___flmul@a+2)^0,c
  3694  001242  0E42               	movlw	66
  3695  001244  6E16               	movwf	(___flmul@a+3)^0,c
  3696  001246  EC52  F00F         	call	___flmul	;wreg free
  3697  00124A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3698  00124E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3699  001252  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3700  001256  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3701  00125A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3702  00125E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3703  001262  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3704  001266  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3705  00126A  ECBD  F02C         	call	_lroundf	;wreg free
  3706  00126E  C04C  F06E         	movff	?_lroundf,detect_color@GG
  3707  001272  C04D  F06F         	movff	?_lroundf+1,detect_color@GG+1
  3708  001276  EE20 F00A          	lfsr	2,10
  3709  00127A  5059               	movf	detect_color@w^0,w,c
  3710  00127C  26D9               	addwf	fsr2l,f,c
  3711  00127E  505A               	movf	(detect_color@w+1)^0,w,c
  3712  001280  22DA               	addwfc	fsr2h,f,c
  3713  001282  CFDE F05B          	movff	postinc2,??_detect_color
  3714  001286  CFDD F05C          	movff	postdec2,??_detect_color+1
  3715  00128A  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3716  00128E  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3717  001292  6A03               	clrf	(___xxtofl@val+2)^0,c
  3718  001294  6A04               	clrf	(___xxtofl@val+3)^0,c
  3719  001296  0E00               	movlw	0
  3720  001298  ECCF  F01F         	call	___xxtofl
  3721  00129C  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3722  0012A0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3723  0012A4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3724  0012A8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3725  0012AC  EE20 F004          	lfsr	2,4
  3726  0012B0  5057               	movf	detect_color@m^0,w,c
  3727  0012B2  26D9               	addwf	fsr2l,f,c
  3728  0012B4  5058               	movf	(detect_color@m+1)^0,w,c
  3729  0012B6  22DA               	addwfc	fsr2h,f,c
  3730  0012B8  CFDE F05D          	movff	postinc2,??_detect_color+2
  3731  0012BC  CFDD F05E          	movff	postdec2,??_detect_color+3
  3732  0012C0  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3733  0012C4  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3734  0012C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3735  0012CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3736  0012CC  0E00               	movlw	0
  3737  0012CE  ECCF  F01F         	call	___xxtofl
  3738  0012D2  C001  F028         	movff	?___xxtofl,___fldiv@b
  3739  0012D6  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3740  0012DA  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3741  0012DE  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3742  0012E2  EC10  F015         	call	___fldiv	;wreg free
  3743  0012E6  C028  F00F         	movff	?___fldiv,___flmul@b
  3744  0012EA  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3745  0012EE  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3746  0012F2  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3747  0012F6  0E00               	movlw	0
  3748  0012F8  6E13               	movwf	___flmul@a^0,c
  3749  0012FA  0E00               	movlw	0
  3750  0012FC  6E14               	movwf	(___flmul@a+1)^0,c
  3751  0012FE  0EC8               	movlw	200
  3752  001300  6E15               	movwf	(___flmul@a+2)^0,c
  3753  001302  0E42               	movlw	66
  3754  001304  6E16               	movwf	(___flmul@a+3)^0,c
  3755  001306  EC52  F00F         	call	___flmul	;wreg free
  3756  00130A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3757  00130E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3758  001312  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3759  001316  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3760  00131A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3761  00131E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3762  001322  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3763  001326  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3764  00132A  ECBD  F02C         	call	_lroundf	;wreg free
  3765  00132E  C04C  F06A         	movff	?_lroundf,detect_color@GB
  3766  001332  C04D  F06B         	movff	?_lroundf+1,detect_color@GB+1
  3767  001336                     
  3768                           ;color.c: 250:     LED_B();
  3769  001336  ECFC  F02D         	call	_LED_B	;wreg free
  3770  00133A                     
  3771                           ;color.c: 251:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3772  00133A  0E09               	movlw	9
  3773  00133C  6E5C               	movwf	(??_detect_color+1)^0,c
  3774  00133E  0E1E               	movlw	30
  3775  001340  6E5B               	movwf	??_detect_color^0,c
  3776  001342  0EE4               	movlw	228
  3777  001344                     u5977:
  3778  001344  2EE8               	decfsz	wreg,f,c
  3779  001346  D7FE               	bra	u5977
  3780  001348  2E5B               	decfsz	??_detect_color^0,f,c
  3781  00134A  D7FC               	bra	u5977
  3782  00134C  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3783  00134E  D7FA               	bra	u5977
  3784  001350  D000               	nop2	
  3785  001352                     
  3786                           ;color.c: 252:     read_color(m);
  3787  001352  C057  F00C         	movff	detect_color@m,read_color@m
  3788  001356  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3789  00135A  ECDC  F02A         	call	_read_color	;wreg free
  3790  00135E                     
  3791                           ;color.c: 254:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3792  00135E  EE20 F00C          	lfsr	2,12
  3793  001362  5059               	movf	detect_color@w^0,w,c
  3794  001364  26D9               	addwf	fsr2l,f,c
  3795  001366  505A               	movf	(detect_color@w+1)^0,w,c
  3796  001368  22DA               	addwfc	fsr2h,f,c
  3797  00136A  CFDE F05B          	movff	postinc2,??_detect_color
  3798  00136E  CFDD F05C          	movff	postdec2,??_detect_color+1
  3799  001372  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3800  001376  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3801  00137A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3802  00137C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3803  00137E  0E00               	movlw	0
  3804  001380  ECCF  F01F         	call	___xxtofl
  3805  001384  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3806  001388  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3807  00138C  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3808  001390  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3809  001394  C057  FFD9         	movff	detect_color@m,fsr2l
  3810  001398  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3811  00139C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3812  0013A0  CFDD F05E          	movff	postdec2,??_detect_color+3
  3813  0013A4  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3814  0013A8  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3815  0013AC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3816  0013AE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3817  0013B0  0E00               	movlw	0
  3818  0013B2  ECCF  F01F         	call	___xxtofl
  3819  0013B6  C001  F028         	movff	?___xxtofl,___fldiv@b
  3820  0013BA  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3821  0013BE  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3822  0013C2  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3823  0013C6  EC10  F015         	call	___fldiv	;wreg free
  3824  0013CA  C028  F00F         	movff	?___fldiv,___flmul@b
  3825  0013CE  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3826  0013D2  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3827  0013D6  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3828  0013DA  0E00               	movlw	0
  3829  0013DC  6E13               	movwf	___flmul@a^0,c
  3830  0013DE  0E00               	movlw	0
  3831  0013E0  6E14               	movwf	(___flmul@a+1)^0,c
  3832  0013E2  0EC8               	movlw	200
  3833  0013E4  6E15               	movwf	(___flmul@a+2)^0,c
  3834  0013E6  0E42               	movlw	66
  3835  0013E8  6E16               	movwf	(___flmul@a+3)^0,c
  3836  0013EA  EC52  F00F         	call	___flmul	;wreg free
  3837  0013EE  C00F  F075         	movff	?___flmul,_detect_color$2931
  3838  0013F2  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3839  0013F6  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3840  0013FA  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3841  0013FE                     
  3842                           ;color.c: 254:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3843  0013FE  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3844  001402  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3845  001406  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3846  00140A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3847  00140E  ECBD  F02C         	call	_lroundf	;wreg free
  3848  001412  C04C  F066         	movff	?_lroundf,detect_color@BR
  3849  001416  C04D  F067         	movff	?_lroundf+1,detect_color@BR+1
  3850  00141A  EE20 F00E          	lfsr	2,14
  3851  00141E  5059               	movf	detect_color@w^0,w,c
  3852  001420  26D9               	addwf	fsr2l,f,c
  3853  001422  505A               	movf	(detect_color@w+1)^0,w,c
  3854  001424  22DA               	addwfc	fsr2h,f,c
  3855  001426  CFDE F05B          	movff	postinc2,??_detect_color
  3856  00142A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3857  00142E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3858  001432  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3859  001436  6A03               	clrf	(___xxtofl@val+2)^0,c
  3860  001438  6A04               	clrf	(___xxtofl@val+3)^0,c
  3861  00143A  0E00               	movlw	0
  3862  00143C  ECCF  F01F         	call	___xxtofl
  3863  001440  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3864  001444  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3865  001448  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3866  00144C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3867  001450  EE20 F002          	lfsr	2,2
  3868  001454  5057               	movf	detect_color@m^0,w,c
  3869  001456  26D9               	addwf	fsr2l,f,c
  3870  001458  5058               	movf	(detect_color@m+1)^0,w,c
  3871  00145A  22DA               	addwfc	fsr2h,f,c
  3872  00145C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3873  001460  CFDD F05E          	movff	postdec2,??_detect_color+3
  3874  001464  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3875  001468  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3876  00146C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3877  00146E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3878  001470  0E00               	movlw	0
  3879  001472  ECCF  F01F         	call	___xxtofl
  3880  001476  C001  F028         	movff	?___xxtofl,___fldiv@b
  3881  00147A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3882  00147E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3883  001482  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3884  001486  EC10  F015         	call	___fldiv	;wreg free
  3885  00148A  C028  F00F         	movff	?___fldiv,___flmul@b
  3886  00148E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3887  001492  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3888  001496  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3889  00149A  0E00               	movlw	0
  3890  00149C  6E13               	movwf	___flmul@a^0,c
  3891  00149E  0E00               	movlw	0
  3892  0014A0  6E14               	movwf	(___flmul@a+1)^0,c
  3893  0014A2  0EC8               	movlw	200
  3894  0014A4  6E15               	movwf	(___flmul@a+2)^0,c
  3895  0014A6  0E42               	movlw	66
  3896  0014A8  6E16               	movwf	(___flmul@a+3)^0,c
  3897  0014AA  EC52  F00F         	call	___flmul	;wreg free
  3898  0014AE  C00F  F075         	movff	?___flmul,_detect_color$2931
  3899  0014B2  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3900  0014B6  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3901  0014BA  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3902  0014BE  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3903  0014C2  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3904  0014C6  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3905  0014CA  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3906  0014CE  ECBD  F02C         	call	_lroundf	;wreg free
  3907  0014D2  C04C  F073         	movff	?_lroundf,detect_color@BG
  3908  0014D6  C04D  F074         	movff	?_lroundf+1,detect_color@BG+1
  3909  0014DA  EE20 F010          	lfsr	2,16
  3910  0014DE  5059               	movf	detect_color@w^0,w,c
  3911  0014E0  26D9               	addwf	fsr2l,f,c
  3912  0014E2  505A               	movf	(detect_color@w+1)^0,w,c
  3913  0014E4  22DA               	addwfc	fsr2h,f,c
  3914  0014E6  CFDE F05B          	movff	postinc2,??_detect_color
  3915  0014EA  CFDD F05C          	movff	postdec2,??_detect_color+1
  3916  0014EE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3917  0014F2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3918  0014F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3919  0014F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3920  0014FA  0E00               	movlw	0
  3921  0014FC  ECCF  F01F         	call	___xxtofl
  3922  001500  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3923  001504  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3924  001508  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3925  00150C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3926  001510  EE20 F004          	lfsr	2,4
  3927  001514  5057               	movf	detect_color@m^0,w,c
  3928  001516  26D9               	addwf	fsr2l,f,c
  3929  001518  5058               	movf	(detect_color@m+1)^0,w,c
  3930  00151A  22DA               	addwfc	fsr2h,f,c
  3931  00151C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3932  001520  CFDD F05E          	movff	postdec2,??_detect_color+3
  3933  001524  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3934  001528  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3935  00152C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3936  00152E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3937  001530  0E00               	movlw	0
  3938  001532  ECCF  F01F         	call	___xxtofl
  3939  001536  C001  F028         	movff	?___xxtofl,___fldiv@b
  3940  00153A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3941  00153E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3942  001542  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3943  001546  EC10  F015         	call	___fldiv	;wreg free
  3944  00154A  C028  F00F         	movff	?___fldiv,___flmul@b
  3945  00154E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3946  001552  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3947  001556  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3948  00155A  0E00               	movlw	0
  3949  00155C  6E13               	movwf	___flmul@a^0,c
  3950  00155E  0E00               	movlw	0
  3951  001560  6E14               	movwf	(___flmul@a+1)^0,c
  3952  001562  0EC8               	movlw	200
  3953  001564  6E15               	movwf	(___flmul@a+2)^0,c
  3954  001566  0E42               	movlw	66
  3955  001568  6E16               	movwf	(___flmul@a+3)^0,c
  3956  00156A  EC52  F00F         	call	___flmul	;wreg free
  3957  00156E  C00F  F075         	movff	?___flmul,_detect_color$2931
  3958  001572  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3959  001576  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3960  00157A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3961  00157E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3962  001582  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3963  001586  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3964  00158A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3965  00158E  ECBD  F02C         	call	_lroundf	;wreg free
  3966  001592  C04C  F06C         	movff	?_lroundf,detect_color@BB
  3967  001596  C04D  F06D         	movff	?_lroundf+1,detect_color@BB+1
  3968  00159A                     
  3969                           ;color.c: 255:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3970  00159A  EE20 F01A          	lfsr	2,26
  3971  00159E  5059               	movf	detect_color@w^0,w,c
  3972  0015A0  26D9               	addwf	fsr2l,f,c
  3973  0015A2  505A               	movf	(detect_color@w+1)^0,w,c
  3974  0015A4  22DA               	addwfc	fsr2h,f,c
  3975  0015A6  CFDE F05B          	movff	postinc2,??_detect_color
  3976  0015AA  CFDD F05C          	movff	postdec2,??_detect_color+1
  3977  0015AE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3978  0015B2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3979  0015B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3980  0015B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3981  0015BA  0E00               	movlw	0
  3982  0015BC  ECCF  F01F         	call	___xxtofl
  3983  0015C0  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3984  0015C4  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3985  0015C8  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3986  0015CC  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3987  0015D0  EE20 F006          	lfsr	2,6
  3988  0015D4  5057               	movf	detect_color@m^0,w,c
  3989  0015D6  26D9               	addwf	fsr2l,f,c
  3990  0015D8  5058               	movf	(detect_color@m+1)^0,w,c
  3991  0015DA  22DA               	addwfc	fsr2h,f,c
  3992  0015DC  CFDE F05D          	movff	postinc2,??_detect_color+2
  3993  0015E0  CFDD F05E          	movff	postdec2,??_detect_color+3
  3994  0015E4  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3995  0015E8  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3996  0015EC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3997  0015EE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3998  0015F0  0E00               	movlw	0
  3999  0015F2  ECCF  F01F         	call	___xxtofl
  4000  0015F6  C001  F028         	movff	?___xxtofl,___fldiv@b
  4001  0015FA  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4002  0015FE  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4003  001602  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4004  001606  EC10  F015         	call	___fldiv	;wreg free
  4005  00160A  C028  F00F         	movff	?___fldiv,___flmul@b
  4006  00160E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4007  001612  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4008  001616  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4009  00161A  0E00               	movlw	0
  4010  00161C  6E13               	movwf	___flmul@a^0,c
  4011  00161E  0E00               	movlw	0
  4012  001620  6E14               	movwf	(___flmul@a+1)^0,c
  4013  001622  0EC8               	movlw	200
  4014  001624  6E15               	movwf	(___flmul@a+2)^0,c
  4015  001626  0E42               	movlw	66
  4016  001628  6E16               	movwf	(___flmul@a+3)^0,c
  4017  00162A  EC52  F00F         	call	___flmul	;wreg free
  4018  00162E  C00F  F075         	movff	?___flmul,_detect_color$2931
  4019  001632  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4020  001636  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4021  00163A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4022  00163E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4023  001642  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4024  001646  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4025  00164A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4026  00164E  ECBD  F02C         	call	_lroundf	;wreg free
  4027  001652                     
  4028                           ;color.c: 258:     if (compare(0, RR, 45)){
  4029  001652  0E00               	movlw	0
  4030  001654  6E51               	movwf	(compare@lower+1)^0,c
  4031  001656  0E00               	movlw	0
  4032  001658  6E50               	movwf	compare@lower^0,c
  4033  00165A  C070  F052         	movff	detect_color@RR,compare@value2compare
  4034  00165E  C071  F053         	movff	detect_color@RR+1,compare@value2compare+1
  4035  001662  0E00               	movlw	0
  4036  001664  6E55               	movwf	(compare@upper+1)^0,c
  4037  001666  0E2D               	movlw	45
  4038  001668  6E54               	movwf	compare@upper^0,c
  4039  00166A  ECDA  F02C         	call	_compare	;wreg free
  4040  00166E  0900               	iorlw	0
  4041  001670  B4D8               	btfsc	status,2,c
  4042  001672  EF3D  F00B         	goto	u5161
  4043  001676  EF3F  F00B         	goto	u5160
  4044  00167A                     u5161:
  4045  00167A  EFAE  F00B         	goto	l4726
  4046  00167E                     u5160:
  4047  00167E                     
  4048                           ;color.c: 259:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4049  00167E  C06C  F001         	movff	detect_color@BB,___xxtofl@val
  4050  001682  C06D  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4051  001686  6A03               	clrf	(___xxtofl@val+2)^0,c
  4052  001688  6A04               	clrf	(___xxtofl@val+3)^0,c
  4053  00168A  0E00               	movlw	0
  4054  00168C  ECCF  F01F         	call	___xxtofl
  4055  001690  C001  F02C         	movff	?___xxtofl,___fldiv@a
  4056  001694  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  4057  001698  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  4058  00169C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  4059  0016A0  0100               	movlb	0	; () banked
  4060  0016A2  5173               	movf	detect_color@BG& (0+255),w,b
  4061  0016A4  256E               	addwf	detect_color@GG& (0+255),w,b
  4062  0016A6  6E5B               	movwf	??_detect_color^0,c
  4063  0016A8  5174               	movf	(detect_color@BG+1)& (0+255),w,b
  4064  0016AA  216F               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4065  0016AC  6E5C               	movwf	(??_detect_color+1)^0,c
  4066  0016AE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  4067  0016B2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4068  0016B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  4069  0016B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  4070  0016BA  0E00               	movlw	0
  4071  0016BC  ECCF  F01F         	call	___xxtofl
  4072  0016C0  C001  F028         	movff	?___xxtofl,___fldiv@b
  4073  0016C4  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4074  0016C8  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4075  0016CC  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4076  0016D0  EC10  F015         	call	___fldiv	;wreg free
  4077  0016D4  C028  F00F         	movff	?___fldiv,___flmul@b
  4078  0016D8  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4079  0016DC  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4080  0016E0  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4081  0016E4  0E00               	movlw	0
  4082  0016E6  6E13               	movwf	___flmul@a^0,c
  4083  0016E8  0E00               	movlw	0
  4084  0016EA  6E14               	movwf	(___flmul@a+1)^0,c
  4085  0016EC  0E48               	movlw	72
  4086  0016EE  6E15               	movwf	(___flmul@a+2)^0,c
  4087  0016F0  0E43               	movlw	67
  4088  0016F2  6E16               	movwf	(___flmul@a+3)^0,c
  4089  0016F4  EC52  F00F         	call	___flmul	;wreg free
  4090  0016F8  C00F  F075         	movff	?___flmul,_detect_color$2931
  4091  0016FC  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4092  001700  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4093  001704  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4094                           
  4095                           ;color.c: 259:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4096  001708  0E00               	movlw	0
  4097  00170A  6E51               	movwf	(compare@lower+1)^0,c
  4098  00170C  0E00               	movlw	0
  4099  00170E  6E50               	movwf	compare@lower^0,c
  4100  001710  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4101  001714  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4102  001718  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4103  00171C  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4104  001720  ECBD  F02C         	call	_lroundf	;wreg free
  4105  001724  C04C  F052         	movff	?_lroundf,compare@value2compare
  4106  001728  C04D  F053         	movff	?_lroundf+1,compare@value2compare+1
  4107  00172C  0E01               	movlw	1
  4108  00172E  6E55               	movwf	(compare@upper+1)^0,c
  4109  001730  0ED3               	movlw	211
  4110  001732  6E54               	movwf	compare@upper^0,c
  4111  001734  ECDA  F02C         	call	_compare	;wreg free
  4112  001738  0900               	iorlw	0
  4113  00173A  B4D8               	btfsc	status,2,c
  4114  00173C  EFA2  F00B         	goto	u5171
  4115  001740  EFA4  F00B         	goto	u5170
  4116  001744                     u5171:
  4117  001744  EFA9  F00B         	goto	l4724
  4118  001748                     u5170:
  4119  001748  0E03               	movlw	3
  4120  00174A  0100               	movlb	0	; () banked
  4121  00174C  6F72               	movwf	detect_color@color& (0+255),b
  4122  00174E  EF67  F00C         	goto	l4752
  4123  001752                     l4724:
  4124  001752  0E02               	movlw	2
  4125  001754  0100               	movlb	0	; () banked
  4126  001756  6F72               	movwf	detect_color@color& (0+255),b
  4127  001758  EF67  F00C         	goto	l4752
  4128  00175C                     l4726:
  4129                           
  4130                           ;color.c: 263:         if (GG <= 30 && GB <= 30){
  4131  00175C  0100               	movlb	0	; () banked
  4132  00175E  516F               	movf	(detect_color@GG+1)& (0+255),w,b
  4133  001760  E107               	bnz	u5181
  4134  001762  0E1F               	movlw	31
  4135  001764  5D6E               	subwf	detect_color@GG& (0+255),w,b
  4136  001766  B0D8               	btfsc	status,0,c
  4137  001768  EFB8  F00B         	goto	u5181
  4138  00176C  EFBA  F00B         	goto	u5180
  4139  001770                     u5181:
  4140  001770  EF2D  F00C         	goto	l4736
  4141  001774                     u5180:
  4142  001774                     
  4143                           ; BSR set to: 0
  4144  001774  516B               	movf	(detect_color@GB+1)& (0+255),w,b
  4145  001776  E107               	bnz	u5191
  4146  001778  0E1F               	movlw	31
  4147  00177A  5D6A               	subwf	detect_color@GB& (0+255),w,b
  4148  00177C  B0D8               	btfsc	status,0,c
  4149  00177E  EFC3  F00B         	goto	u5191
  4150  001782  EFC5  F00B         	goto	u5190
  4151  001786                     u5191:
  4152  001786  EF2D  F00C         	goto	l4736
  4153  00178A                     u5190:
  4154  00178A                     
  4155                           ; BSR set to: 0
  4156                           ;color.c: 265:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4157  00178A  C070  F001         	movff	detect_color@RR,___xxtofl@val
  4158  00178E  C071  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4159  001792  6A03               	clrf	(___xxtofl@val+2)^0,c
  4160  001794  6A04               	clrf	(___xxtofl@val+3)^0,c
  4161  001796  0E00               	movlw	0
  4162  001798  ECCF  F01F         	call	___xxtofl
  4163  00179C  C001  F02C         	movff	?___xxtofl,___fldiv@a
  4164  0017A0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  4165  0017A4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  4166  0017A8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  4167  0017AC  C064  F001         	movff	detect_color@GR,___xxtofl@val
  4168  0017B0  C065  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4169  0017B4  6A03               	clrf	(___xxtofl@val+2)^0,c
  4170  0017B6  6A04               	clrf	(___xxtofl@val+3)^0,c
  4171  0017B8  0E00               	movlw	0
  4172  0017BA  ECCF  F01F         	call	___xxtofl
  4173  0017BE  C001  F028         	movff	?___xxtofl,___fldiv@b
  4174  0017C2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4175  0017C6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4176  0017CA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4177  0017CE  EC10  F015         	call	___fldiv	;wreg free
  4178  0017D2  C028  F00F         	movff	?___fldiv,___flmul@b
  4179  0017D6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4180  0017DA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4181  0017DE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4182  0017E2  0E00               	movlw	0
  4183  0017E4  6E13               	movwf	___flmul@a^0,c
  4184  0017E6  0E00               	movlw	0
  4185  0017E8  6E14               	movwf	(___flmul@a+1)^0,c
  4186  0017EA  0EFA               	movlw	250
  4187  0017EC  6E15               	movwf	(___flmul@a+2)^0,c
  4188  0017EE  0E43               	movlw	67
  4189  0017F0  6E16               	movwf	(___flmul@a+3)^0,c
  4190  0017F2  EC52  F00F         	call	___flmul	;wreg free
  4191  0017F6  C00F  F075         	movff	?___flmul,_detect_color$2931
  4192  0017FA  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4193  0017FE  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4194  001802  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4195                           
  4196                           ;color.c: 265:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4197  001806  0E00               	movlw	0
  4198  001808  6E51               	movwf	(compare@lower+1)^0,c
  4199  00180A  0E00               	movlw	0
  4200  00180C  6E50               	movwf	compare@lower^0,c
  4201  00180E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4202  001812  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4203  001816  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4204  00181A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4205  00181E  ECBD  F02C         	call	_lroundf	;wreg free
  4206  001822  C04C  F052         	movff	?_lroundf,compare@value2compare
  4207  001826  C04D  F053         	movff	?_lroundf+1,compare@value2compare+1
  4208  00182A  0E00               	movlw	0
  4209  00182C  6E55               	movwf	(compare@upper+1)^0,c
  4210  00182E  0E96               	movlw	150
  4211  001830  6E54               	movwf	compare@upper^0,c
  4212  001832  ECDA  F02C         	call	_compare	;wreg free
  4213  001836  0900               	iorlw	0
  4214  001838  B4D8               	btfsc	status,2,c
  4215  00183A  EF21  F00C         	goto	u5201
  4216  00183E  EF23  F00C         	goto	u5200
  4217  001842                     u5201:
  4218  001842  EF28  F00C         	goto	l4734
  4219  001846                     u5200:
  4220  001846  0E01               	movlw	1
  4221  001848  0100               	movlb	0	; () banked
  4222  00184A  6F72               	movwf	detect_color@color& (0+255),b
  4223  00184C  EF67  F00C         	goto	l4752
  4224  001850                     l4734:
  4225  001850  0E06               	movlw	6
  4226  001852  0100               	movlb	0	; () banked
  4227  001854  6F72               	movwf	detect_color@color& (0+255),b
  4228  001856  EF67  F00C         	goto	l4752
  4229  00185A                     l4736:
  4230                           
  4231                           ; BSR set to: 0
  4232  00185A  516F               	movf	(detect_color@GG+1)& (0+255),w,b
  4233  00185C  E109               	bnz	u5210
  4234  00185E  0E1F               	movlw	31
  4235  001860  5D6E               	subwf	detect_color@GG& (0+255),w,b
  4236  001862  A0D8               	btfss	status,0,c
  4237  001864  EF36  F00C         	goto	u5211
  4238  001868  EF38  F00C         	goto	u5210
  4239  00186C                     u5211:
  4240  00186C  EF65  F00C         	goto	l4750
  4241  001870                     u5210:
  4242  001870                     
  4243                           ; BSR set to: 0
  4244  001870  516B               	movf	(detect_color@GB+1)& (0+255),w,b
  4245  001872  E109               	bnz	u5220
  4246  001874  0E1F               	movlw	31
  4247  001876  5D6A               	subwf	detect_color@GB& (0+255),w,b
  4248  001878  A0D8               	btfss	status,0,c
  4249  00187A  EF41  F00C         	goto	u5221
  4250  00187E  EF43  F00C         	goto	u5220
  4251  001882                     u5221:
  4252  001882  EF65  F00C         	goto	l4750
  4253  001886                     u5220:
  4254  001886                     
  4255                           ; BSR set to: 0
  4256                           ;color.c: 270:             if (BB >= 80){color = 7;}
  4257  001886  516D               	movf	(detect_color@BB+1)& (0+255),w,b
  4258  001888  E109               	bnz	u5230
  4259  00188A  0E50               	movlw	80
  4260  00188C  5D6C               	subwf	detect_color@BB& (0+255),w,b
  4261  00188E  A0D8               	btfss	status,0,c
  4262  001890  EF4C  F00C         	goto	u5231
  4263  001894  EF4E  F00C         	goto	u5230
  4264  001898                     u5231:
  4265  001898  EF52  F00C         	goto	l4744
  4266  00189C                     u5230:
  4267  00189C                     
  4268                           ; BSR set to: 0
  4269  00189C  0E07               	movlw	7
  4270  00189E  6F72               	movwf	detect_color@color& (0+255),b
  4271  0018A0  EF67  F00C         	goto	l4752
  4272  0018A4                     l4744:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;color.c: 272:                 if (BG < 48){color = 4;}
  4276  0018A4  5174               	movf	(detect_color@BG+1)& (0+255),w,b
  4277  0018A6  E107               	bnz	u5241
  4278  0018A8  0E30               	movlw	48
  4279  0018AA  5D73               	subwf	detect_color@BG& (0+255),w,b
  4280  0018AC  B0D8               	btfsc	status,0,c
  4281  0018AE  EF5B  F00C         	goto	u5241
  4282  0018B2  EF5D  F00C         	goto	u5240
  4283  0018B6                     u5241:
  4284  0018B6  EF61  F00C         	goto	l4748
  4285  0018BA                     u5240:
  4286  0018BA                     
  4287                           ; BSR set to: 0
  4288  0018BA  0E04               	movlw	4
  4289  0018BC  6F72               	movwf	detect_color@color& (0+255),b
  4290  0018BE  EF67  F00C         	goto	l4752
  4291  0018C2                     l4748:
  4292                           
  4293                           ; BSR set to: 0
  4294  0018C2  0E05               	movlw	5
  4295  0018C4  6F72               	movwf	detect_color@color& (0+255),b
  4296  0018C6  EF67  F00C         	goto	l4752
  4297  0018CA                     l4750:
  4298                           
  4299                           ; BSR set to: 0
  4300  0018CA  0E00               	movlw	0
  4301  0018CC  6F72               	movwf	detect_color@color& (0+255),b
  4302  0018CE                     l4752:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;color.c: 280:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4306  0018CE  0E00               	movlw	0
  4307  0018D0  6E51               	movwf	(compare@lower+1)^0,c
  4308  0018D2  0E5A               	movlw	90
  4309  0018D4  6E50               	movwf	compare@lower^0,c
  4310  0018D6  C070  F052         	movff	detect_color@RR,compare@value2compare
  4311  0018DA  C071  F053         	movff	detect_color@RR+1,compare@value2compare+1
  4312  0018DE  90D8               	bcf	status,0,c
  4313  0018E0  3570               	rlcf	detect_color@RR& (0+255),w,b
  4314  0018E2  6E54               	movwf	compare@upper^0,c
  4315  0018E4  3571               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4316  0018E6  6E55               	movwf	(compare@upper+1)^0,c
  4317  0018E8  ECDA  F02C         	call	_compare	;wreg free
  4318  0018EC  0900               	iorlw	0
  4319  0018EE  B4D8               	btfsc	status,2,c
  4320  0018F0  EF7C  F00C         	goto	u5251
  4321  0018F4  EF7E  F00C         	goto	u5250
  4322  0018F8                     u5251:
  4323  0018F8  EFB1  F00C         	goto	l4760
  4324  0018FC                     u5250:
  4325  0018FC  0E00               	movlw	0
  4326  0018FE  6E51               	movwf	(compare@lower+1)^0,c
  4327  001900  0E5A               	movlw	90
  4328  001902  6E50               	movwf	compare@lower^0,c
  4329  001904  C068  F052         	movff	detect_color@RB,compare@value2compare
  4330  001908  C069  F053         	movff	detect_color@RB+1,compare@value2compare+1
  4331  00190C  90D8               	bcf	status,0,c
  4332  00190E  0100               	movlb	0	; () banked
  4333  001910  3568               	rlcf	detect_color@RB& (0+255),w,b
  4334  001912  6E54               	movwf	compare@upper^0,c
  4335  001914  3569               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4336  001916  6E55               	movwf	(compare@upper+1)^0,c
  4337  001918  ECDA  F02C         	call	_compare	;wreg free
  4338  00191C  0900               	iorlw	0
  4339  00191E  B4D8               	btfsc	status,2,c
  4340  001920  EF94  F00C         	goto	u5261
  4341  001924  EF96  F00C         	goto	u5260
  4342  001928                     u5261:
  4343  001928  EFB1  F00C         	goto	l4760
  4344  00192C                     u5260:
  4345  00192C  0E00               	movlw	0
  4346  00192E  6E51               	movwf	(compare@lower+1)^0,c
  4347  001930  0E5A               	movlw	90
  4348  001932  6E50               	movwf	compare@lower^0,c
  4349  001934  C073  F052         	movff	detect_color@BG,compare@value2compare
  4350  001938  C074  F053         	movff	detect_color@BG+1,compare@value2compare+1
  4351  00193C  90D8               	bcf	status,0,c
  4352  00193E  0100               	movlb	0	; () banked
  4353  001940  3573               	rlcf	detect_color@BG& (0+255),w,b
  4354  001942  6E54               	movwf	compare@upper^0,c
  4355  001944  3574               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4356  001946  6E55               	movwf	(compare@upper+1)^0,c
  4357  001948  ECDA  F02C         	call	_compare	;wreg free
  4358  00194C  0900               	iorlw	0
  4359  00194E  B4D8               	btfsc	status,2,c
  4360  001950  EFAC  F00C         	goto	u5271
  4361  001954  EFAE  F00C         	goto	u5270
  4362  001958                     u5271:
  4363  001958  EFB1  F00C         	goto	l4760
  4364  00195C                     u5270:
  4365  00195C  0E08               	movlw	8
  4366  00195E  0100               	movlb	0	; () banked
  4367  001960  6F72               	movwf	detect_color@color& (0+255),b
  4368  001962                     l4760:
  4369                           
  4370                           ;color.c: 283:     if (compare(0, BR, 30) && compare(0,BG,30)){color = 0;}
  4371  001962  0E00               	movlw	0
  4372  001964  6E51               	movwf	(compare@lower+1)^0,c
  4373  001966  0E00               	movlw	0
  4374  001968  6E50               	movwf	compare@lower^0,c
  4375  00196A  C066  F052         	movff	detect_color@BR,compare@value2compare
  4376  00196E  C067  F053         	movff	detect_color@BR+1,compare@value2compare+1
  4377  001972  0E00               	movlw	0
  4378  001974  6E55               	movwf	(compare@upper+1)^0,c
  4379  001976  0E1E               	movlw	30
  4380  001978  6E54               	movwf	compare@upper^0,c
  4381  00197A  ECDA  F02C         	call	_compare	;wreg free
  4382  00197E  0900               	iorlw	0
  4383  001980  B4D8               	btfsc	status,2,c
  4384  001982  EFC5  F00C         	goto	u5281
  4385  001986  EFC7  F00C         	goto	u5280
  4386  00198A                     u5281:
  4387  00198A  EFE0  F00C         	goto	l4766
  4388  00198E                     u5280:
  4389  00198E  0E00               	movlw	0
  4390  001990  6E51               	movwf	(compare@lower+1)^0,c
  4391  001992  0E00               	movlw	0
  4392  001994  6E50               	movwf	compare@lower^0,c
  4393  001996  C073  F052         	movff	detect_color@BG,compare@value2compare
  4394  00199A  C074  F053         	movff	detect_color@BG+1,compare@value2compare+1
  4395  00199E  0E00               	movlw	0
  4396  0019A0  6E55               	movwf	(compare@upper+1)^0,c
  4397  0019A2  0E1E               	movlw	30
  4398  0019A4  6E54               	movwf	compare@upper^0,c
  4399  0019A6  ECDA  F02C         	call	_compare	;wreg free
  4400  0019AA  0900               	iorlw	0
  4401  0019AC  B4D8               	btfsc	status,2,c
  4402  0019AE  EFDB  F00C         	goto	u5291
  4403  0019B2  EFDD  F00C         	goto	u5290
  4404  0019B6                     u5291:
  4405  0019B6  EFE0  F00C         	goto	l4766
  4406  0019BA                     u5290:
  4407  0019BA  0E00               	movlw	0
  4408  0019BC  0100               	movlb	0	; () banked
  4409  0019BE  6F72               	movwf	detect_color@color& (0+255),b
  4410  0019C0                     l4766:
  4411                           
  4412                           ;color.c: 285:     if (color == 8) {toggle_light(2,1);}
  4413  0019C0  0E08               	movlw	8
  4414  0019C2  0100               	movlb	0	; () banked
  4415  0019C4  1972               	xorwf	detect_color@color& (0+255),w,b
  4416  0019C6  A4D8               	btfss	status,2,c
  4417  0019C8  EFE8  F00C         	goto	u5301
  4418  0019CC  EFEA  F00C         	goto	u5300
  4419  0019D0                     u5301:
  4420  0019D0  EFEF  F00C         	goto	l4770
  4421  0019D4                     u5300:
  4422  0019D4                     
  4423                           ; BSR set to: 0
  4424  0019D4  0E01               	movlw	1
  4425  0019D6  6E01               	movwf	toggle_light@toggletime^0,c
  4426  0019D8  0E02               	movlw	2
  4427  0019DA  ECC7  F019         	call	_toggle_light
  4428  0019DE                     l4770:
  4429                           
  4430                           ;color.c: 287:     return color;
  4431  0019DE  0100               	movlb	0	; () banked
  4432  0019E0  5172               	movf	detect_color@color& (0+255),w,b
  4433  0019E2                     
  4434                           ; BSR set to: 0
  4435  0019E2  0012               	return		;funcret
  4436  0019E4                     __end_of_detect_color:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _compare *****************
  4440 ;; Defined at:
  4441 ;;		line 220 in file "color.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  lower           2   79[COMRAM] unsigned int 
  4444 ;;  value2compar    2   81[COMRAM] unsigned int 
  4445 ;;  upper           2   83[COMRAM] unsigned int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  result          1   85[COMRAM] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      unsigned char 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4457 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4460 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;Total ram usage:        7 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_detect_color
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text8
  4472  0059B4                     __ptext8:
  4473                           	callstack 0
  4474  0059B4                     _compare:
  4475                           	callstack 27
  4476  0059B4                     
  4477                           ;color.c: 220: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 221: {;color.c: 222:     unsigned char result = 0;
  4478  0059B4  0E00               	movlw	0
  4479  0059B6  6E56               	movwf	compare@result^0,c
  4480  0059B8                     
  4481                           ;color.c: 223:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4482  0059B8  5052               	movf	compare@value2compare^0,w,c
  4483  0059BA  5C50               	subwf	compare@lower^0,w,c
  4484  0059BC  5053               	movf	(compare@value2compare+1)^0,w,c
  4485  0059BE  5851               	subwfb	(compare@lower+1)^0,w,c
  4486  0059C0  B0D8               	btfsc	status,0,c
  4487  0059C2  EFE5  F02C         	goto	u4741
  4488  0059C6  EFE7  F02C         	goto	u4740
  4489  0059CA                     u4741:
  4490  0059CA  EFF4  F02C         	goto	l105
  4491  0059CE                     u4740:
  4492  0059CE  5052               	movf	compare@value2compare^0,w,c
  4493  0059D0  5C54               	subwf	compare@upper^0,w,c
  4494  0059D2  5053               	movf	(compare@value2compare+1)^0,w,c
  4495  0059D4  5855               	subwfb	(compare@upper+1)^0,w,c
  4496  0059D6  A0D8               	btfss	status,0,c
  4497  0059D8  EFF0  F02C         	goto	u4751
  4498  0059DC  EFF2  F02C         	goto	u4750
  4499  0059E0                     u4751:
  4500  0059E0  EFF4  F02C         	goto	l105
  4501  0059E4                     u4750:
  4502  0059E4  0E01               	movlw	1
  4503  0059E6  6E56               	movwf	compare@result^0,c
  4504  0059E8                     l105:
  4505                           
  4506                           ;color.c: 224:     return result;
  4507  0059E8  5056               	movf	compare@result^0,w,c
  4508  0059EA  0012               	return		;funcret
  4509  0059EC                     __end_of_compare:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _color_data_collection *****************
  4513 ;; Defined at:
  4514 ;;		line 335 in file "color.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4517 ;;		 -> main@rgb(8), 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  i               2  126[BANK0 ] int 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;Total ram usage:        6 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 10
  4536 ;; This function calls:
  4537 ;;		_LED_B
  4538 ;;		_LED_C
  4539 ;;		_LED_G
  4540 ;;		_LED_R
  4541 ;;		_color_display
  4542 ;;		_color_predict
  4543 ;;		_read_color
  4544 ;; This function is called by:
  4545 ;;		_test_function
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text9
  4550  004AE0                     __ptext9:
  4551                           	callstack 0
  4552  004AE0                     _color_data_collection:
  4553                           	callstack 19
  4554  004AE0                     
  4555                           ;color.c: 335: void color_data_collection(struct color_rgb *m);color.c: 336: {;color.c: 
      +                          337:     int i = 0;
  4556  004AE0  0E00               	movlw	0
  4557  004AE2  0100               	movlb	0	; () banked
  4558  004AE4  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4559  004AE6  0E00               	movlw	0
  4560  004AE8  6FDE               	movwf	color_data_collection@i& (0+255),b
  4561                           
  4562                           ;color.c: 338:     for (i = 0; i < 1; ++i){
  4563  004AEA  0E00               	movlw	0
  4564  004AEC  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4565  004AEE  0E00               	movlw	0
  4566  004AF0  6FDE               	movwf	color_data_collection@i& (0+255),b
  4567  004AF2                     l4834:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;color.c: 339:         LED_C();
  4571  004AF2  EC0C  F02E         	call	_LED_C	;wreg free
  4572  004AF6                     
  4573                           ;color.c: 340:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4574  004AF6  0E09               	movlw	9
  4575  004AF8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4576  004AFA  0E1E               	movlw	30
  4577  004AFC  6E5C               	movwf	??_color_data_collection^0,c
  4578  004AFE  0EE4               	movlw	228
  4579  004B00                     u5987:
  4580  004B00  2EE8               	decfsz	wreg,f,c
  4581  004B02  D7FE               	bra	u5987
  4582  004B04  2E5C               	decfsz	??_color_data_collection^0,f,c
  4583  004B06  D7FC               	bra	u5987
  4584  004B08  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4585  004B0A  D7FA               	bra	u5987
  4586  004B0C  D000               	nop2	
  4587  004B0E                     
  4588                           ;color.c: 341:         read_color(m);
  4589  004B0E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4590  004B12  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4591  004B16  ECDC  F02A         	call	_read_color	;wreg free
  4592  004B1A                     
  4593                           ;color.c: 342:         color_display(m);
  4594  004B1A  C05A  F058         	movff	color_data_collection@m,color_display@m
  4595  004B1E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4596  004B22  EC73  F02A         	call	_color_display	;wreg free
  4597  004B26                     
  4598                           ;color.c: 344:         LED_R();
  4599  004B26  ECCC  F02D         	call	_LED_R	;wreg free
  4600  004B2A                     
  4601                           ;color.c: 345:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4602  004B2A  0E09               	movlw	9
  4603  004B2C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4604  004B2E  0E1E               	movlw	30
  4605  004B30  6E5C               	movwf	??_color_data_collection^0,c
  4606  004B32  0EE4               	movlw	228
  4607  004B34                     u5997:
  4608  004B34  2EE8               	decfsz	wreg,f,c
  4609  004B36  D7FE               	bra	u5997
  4610  004B38  2E5C               	decfsz	??_color_data_collection^0,f,c
  4611  004B3A  D7FC               	bra	u5997
  4612  004B3C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4613  004B3E  D7FA               	bra	u5997
  4614  004B40  D000               	nop2	
  4615  004B42                     
  4616                           ;color.c: 346:         read_color(m);
  4617  004B42  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4618  004B46  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4619  004B4A  ECDC  F02A         	call	_read_color	;wreg free
  4620                           
  4621                           ;color.c: 347:         color_display(m);
  4622  004B4E  C05A  F058         	movff	color_data_collection@m,color_display@m
  4623  004B52  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4624  004B56  EC73  F02A         	call	_color_display	;wreg free
  4625  004B5A                     
  4626                           ;color.c: 349:         LED_G();
  4627  004B5A  ECEC  F02D         	call	_LED_G	;wreg free
  4628  004B5E                     
  4629                           ;color.c: 350:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4630  004B5E  0E09               	movlw	9
  4631  004B60  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4632  004B62  0E1E               	movlw	30
  4633  004B64  6E5C               	movwf	??_color_data_collection^0,c
  4634  004B66  0EE4               	movlw	228
  4635  004B68                     u6007:
  4636  004B68  2EE8               	decfsz	wreg,f,c
  4637  004B6A  D7FE               	bra	u6007
  4638  004B6C  2E5C               	decfsz	??_color_data_collection^0,f,c
  4639  004B6E  D7FC               	bra	u6007
  4640  004B70  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4641  004B72  D7FA               	bra	u6007
  4642  004B74  D000               	nop2	
  4643  004B76                     
  4644                           ;color.c: 351:         read_color(m);
  4645  004B76  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4646  004B7A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4647  004B7E  ECDC  F02A         	call	_read_color	;wreg free
  4648  004B82                     
  4649                           ;color.c: 352:         color_display(m);
  4650  004B82  C05A  F058         	movff	color_data_collection@m,color_display@m
  4651  004B86  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4652  004B8A  EC73  F02A         	call	_color_display	;wreg free
  4653  004B8E                     
  4654                           ;color.c: 354:         LED_B();
  4655  004B8E  ECFC  F02D         	call	_LED_B	;wreg free
  4656  004B92                     
  4657                           ;color.c: 355:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4658  004B92  0E09               	movlw	9
  4659  004B94  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4660  004B96  0E1E               	movlw	30
  4661  004B98  6E5C               	movwf	??_color_data_collection^0,c
  4662  004B9A  0EE4               	movlw	228
  4663  004B9C                     u6017:
  4664  004B9C  2EE8               	decfsz	wreg,f,c
  4665  004B9E  D7FE               	bra	u6017
  4666  004BA0  2E5C               	decfsz	??_color_data_collection^0,f,c
  4667  004BA2  D7FC               	bra	u6017
  4668  004BA4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4669  004BA6  D7FA               	bra	u6017
  4670  004BA8  D000               	nop2	
  4671                           
  4672                           ;color.c: 356:         read_color(m);
  4673  004BAA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4674  004BAE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4675  004BB2  ECDC  F02A         	call	_read_color	;wreg free
  4676  004BB6                     
  4677                           ;color.c: 357:         color_display(m);
  4678  004BB6  C05A  F058         	movff	color_data_collection@m,color_display@m
  4679  004BBA  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4680  004BBE  EC73  F02A         	call	_color_display	;wreg free
  4681  004BC2                     
  4682                           ;color.c: 358:     }
  4683  004BC2  0100               	movlb	0	; () banked
  4684  004BC4  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4685  004BC6  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4686  004BC8                     
  4687                           ; BSR set to: 0
  4688  004BC8  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4689  004BCA  EFEF  F025         	goto	u5311
  4690  004BCE  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4691  004BD0  E108               	bnz	u5310
  4692  004BD2  05DE               	decf	color_data_collection@i& (0+255),w,b
  4693  004BD4  A0D8               	btfss	status,0,c
  4694  004BD6  EFEF  F025         	goto	u5311
  4695  004BDA  EFF1  F025         	goto	u5310
  4696  004BDE                     u5311:
  4697  004BDE  EF79  F025         	goto	l4834
  4698  004BE2                     u5310:
  4699  004BE2                     
  4700                           ; BSR set to: 0
  4701                           ;color.c: 359:     color_predict(1);
  4702  004BE2  0E01               	movlw	1
  4703  004BE4  EC79  F02D         	call	_color_predict
  4704  004BE8                     
  4705                           ;color.c: 360:     LED_C();
  4706  004BE8  EC0C  F02E         	call	_LED_C	;wreg free
  4707  004BEC  0012               	return		;funcret
  4708  004BEE                     __end_of_color_data_collection:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _read_color *****************
  4712 ;; Defined at:
  4713 ;;		line 166 in file "color.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4716 ;;		 -> main@rgb(8), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 4
  4735 ;; This function calls:
  4736 ;;		_color_read_Blue
  4737 ;;		_color_read_Clear
  4738 ;;		_color_read_Green
  4739 ;;		_color_read_Red
  4740 ;; This function is called by:
  4741 ;;		_detect_color
  4742 ;;		_color_data_collection
  4743 ;;		_test_function
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text10
  4748  0055B8                     __ptext10:
  4749                           	callstack 0
  4750  0055B8                     _read_color:
  4751                           	callstack 24
  4752  0055B8                     
  4753                           ;color.c: 166: void read_color (struct color_rgb *m);color.c: 167: {;color.c: 168:     m
      +                          ->R = color_read_Red();
  4754  0055B8  EC34  F02B         	call	_color_read_Red	;wreg free
  4755  0055BC  C00C  FFD9         	movff	read_color@m,fsr2l
  4756  0055C0  C00D  FFDA         	movff	read_color@m+1,fsr2h
  4757  0055C4  C005  FFDE         	movff	?_color_read_Red,postinc2
  4758  0055C8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4759                           
  4760                           ;color.c: 169:     m->B = color_read_Blue();
  4761  0055CC  EC84  F02B         	call	_color_read_Blue	;wreg free
  4762  0055D0  EE20 F004          	lfsr	2,4
  4763  0055D4  500C               	movf	read_color@m^0,w,c
  4764  0055D6  26D9               	addwf	fsr2l,f,c
  4765  0055D8  500D               	movf	(read_color@m+1)^0,w,c
  4766  0055DA  22DA               	addwfc	fsr2h,f,c
  4767  0055DC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4768  0055E0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4769                           
  4770                           ;color.c: 170:     m->G = color_read_Green();
  4771  0055E4  EC5C  F02B         	call	_color_read_Green	;wreg free
  4772  0055E8  EE20 F002          	lfsr	2,2
  4773  0055EC  500C               	movf	read_color@m^0,w,c
  4774  0055EE  26D9               	addwf	fsr2l,f,c
  4775  0055F0  500D               	movf	(read_color@m+1)^0,w,c
  4776  0055F2  22DA               	addwfc	fsr2h,f,c
  4777  0055F4  C005  FFDE         	movff	?_color_read_Green,postinc2
  4778  0055F8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4779                           
  4780                           ;color.c: 171:     m->C = color_read_Clear();
  4781  0055FC  ECAC  F02B         	call	_color_read_Clear	;wreg free
  4782  005600  EE20 F006          	lfsr	2,6
  4783  005604  500C               	movf	read_color@m^0,w,c
  4784  005606  26D9               	addwf	fsr2l,f,c
  4785  005608  500D               	movf	(read_color@m+1)^0,w,c
  4786  00560A  22DA               	addwfc	fsr2h,f,c
  4787  00560C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4788  005610  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4789  005614  0012               	return		;funcret
  4790  005616                     __end_of_read_color:
  4791                           	callstack 0
  4792                           
  4793 ;; *************** function _color_predict *****************
  4794 ;; Defined at:
  4795 ;;		line 299 in file "color.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  color           1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  color           1  125[BANK0 ] unsigned char 
  4800 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;Total ram usage:      101 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 9
  4817 ;; This function calls:
  4818 ;;		_sendStringSerial4
  4819 ;;		_sprintf
  4820 ;; This function is called by:
  4821 ;;		_color_data_collection
  4822 ;;		_test_function
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text11
  4827  005AF2                     __ptext11:
  4828                           	callstack 0
  4829  005AF2                     _color_predict:
  4830                           	callstack 20
  4831                           
  4832                           ;incstack = 0
  4833                           ;color_predict@color stored from wreg
  4834  005AF2  0100               	movlb	0	; () banked
  4835  005AF4  6FDD               	movwf	color_predict@color& (0+255),b
  4836  005AF6                     
  4837                           ;color.c: 299: void color_predict(unsigned char color);color.c: 300: {;color.c: 301:    
      +                           char buf[100];;color.c: 302:     sprintf(buf,"\t%d\r\n", color);
  4838  005AF6  0E79               	movlw	low color_predict@buf
  4839  005AF8  0100               	movlb	0	; () banked
  4840  005AFA  6F60               	movwf	sprintf@s& (0+255),b
  4841  005AFC  0E00               	movlw	high color_predict@buf
  4842  005AFE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4843  005B00  0E0D               	movlw	low (STR_1+8)
  4844  005B02  6F62               	movwf	sprintf@fmt& (0+255),b
  4845  005B04  0E0E               	movlw	high (STR_1+8)
  4846  005B06  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4847  005B08  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4848  005B0C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4849  005B0E  EC0B  F02B         	call	_sprintf	;wreg free
  4850  005B12                     
  4851                           ;color.c: 303:     sendStringSerial4(buf);
  4852  005B12  0E79               	movlw	low color_predict@buf
  4853  005B14  6E02               	movwf	sendStringSerial4@string^0,c
  4854  005B16  0E00               	movlw	high color_predict@buf
  4855  005B18  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4856  005B1A  EC61  F02D         	call	_sendStringSerial4	;wreg free
  4857  005B1E  0012               	return		;funcret
  4858  005B20                     __end_of_color_predict:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _color_display *****************
  4862 ;; Defined at:
  4863 ;;		line 291 in file "color.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  m               2   87[COMRAM] PTR struct color_rgb
  4866 ;;		 -> main@rgb(8), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;Total ram usage:      102 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 9
  4885 ;; This function calls:
  4886 ;;		_sendStringSerial4
  4887 ;;		_sprintf
  4888 ;; This function is called by:
  4889 ;;		_color_data_collection
  4890 ;;		_test_function
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text12
  4895  0054E6                     __ptext12:
  4896                           	callstack 0
  4897  0054E6                     _color_display:
  4898                           	callstack 20
  4899  0054E6                     
  4900                           ;color.c: 291: void color_display(struct color_rgb *m);color.c: 292: {;color.c: 293:    
      +                           char buf[100];;color.c: 294:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4901  0054E6  0E79               	movlw	low color_display@buf
  4902  0054E8  0100               	movlb	0	; () banked
  4903  0054EA  6F60               	movwf	sprintf@s& (0+255),b
  4904  0054EC  0E00               	movlw	high color_display@buf
  4905  0054EE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4906  0054F0  0E05               	movlw	low STR_1
  4907  0054F2  6F62               	movwf	sprintf@fmt& (0+255),b
  4908  0054F4  0E0E               	movlw	high STR_1
  4909  0054F6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4910  0054F8  C058  FFD9         	movff	color_display@m,fsr2l
  4911  0054FC  C059  FFDA         	movff	color_display@m+1,fsr2h
  4912  005500  CFDE F064          	movff	postinc2,?_sprintf+4
  4913  005504  CFDD F065          	movff	postdec2,?_sprintf+5
  4914  005508  EE20 F002          	lfsr	2,2
  4915  00550C  5058               	movf	color_display@m^0,w,c
  4916  00550E  26D9               	addwf	fsr2l,f,c
  4917  005510  5059               	movf	(color_display@m+1)^0,w,c
  4918  005512  22DA               	addwfc	fsr2h,f,c
  4919  005514  CFDE F066          	movff	postinc2,?_sprintf+6
  4920  005518  CFDD F067          	movff	postdec2,?_sprintf+7
  4921  00551C  EE20 F004          	lfsr	2,4
  4922  005520  5058               	movf	color_display@m^0,w,c
  4923  005522  26D9               	addwf	fsr2l,f,c
  4924  005524  5059               	movf	(color_display@m+1)^0,w,c
  4925  005526  22DA               	addwfc	fsr2h,f,c
  4926  005528  CFDE F068          	movff	postinc2,?_sprintf+8
  4927  00552C  CFDD F069          	movff	postdec2,?_sprintf+9
  4928  005530  EE20 F006          	lfsr	2,6
  4929  005534  5058               	movf	color_display@m^0,w,c
  4930  005536  26D9               	addwf	fsr2l,f,c
  4931  005538  5059               	movf	(color_display@m+1)^0,w,c
  4932  00553A  22DA               	addwfc	fsr2h,f,c
  4933  00553C  CFDE F06A          	movff	postinc2,?_sprintf+10
  4934  005540  CFDD F06B          	movff	postdec2,?_sprintf+11
  4935  005544  EC0B  F02B         	call	_sprintf	;wreg free
  4936  005548                     
  4937                           ;color.c: 295:     sendStringSerial4(buf);
  4938  005548  0E79               	movlw	low color_display@buf
  4939  00554A  6E02               	movwf	sendStringSerial4@string^0,c
  4940  00554C  0E00               	movlw	high color_display@buf
  4941  00554E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4942  005550  EC61  F02D         	call	_sendStringSerial4	;wreg free
  4943  005554  0012               	return		;funcret
  4944  005556                     __end_of_color_display:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _sprintf *****************
  4948 ;; Defined at:
  4949 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4952 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  4953 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4954 ;;		 -> STR_2(6), STR_1(14), 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4957 ;;  ap              2   12[BANK0 ] PTR void [1]
  4958 ;;		 -> ?_sprintf(2), 
  4959 ;;  ret             2    0        int 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    0[BANK0 ] int 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4969 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;Total ram usage:       25 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 8
  4976 ;; This function calls:
  4977 ;;		_vfprintf
  4978 ;; This function is called by:
  4979 ;;		_color_display
  4980 ;;		_color_predict
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text13
  4985  005616                     __ptext13:
  4986                           	callstack 0
  4987  005616                     _sprintf:
  4988                           	callstack 20
  4989  005616  0E64               	movlw	low (?_sprintf+4)
  4990  005618  0100               	movlb	0	; () banked
  4991  00561A  6F6C               	movwf	sprintf@ap& (0+255),b
  4992  00561C  0E00               	movlw	high (?_sprintf+4)
  4993  00561E  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4994  005620  C060  F06E         	movff	sprintf@s,sprintf@f
  4995  005624  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4996  005628                     
  4997                           ; BSR set to: 0
  4998  005628  0E00               	movlw	0
  4999  00562A  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5000  00562C  0E00               	movlw	0
  5001  00562E  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5002  005630                     
  5003                           ; BSR set to: 0
  5004  005630  0E00               	movlw	0
  5005  005632  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5006  005634  0E00               	movlw	0
  5007  005636  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5008  005638                     
  5009                           ; BSR set to: 0
  5010  005638  0E6E               	movlw	low sprintf@f
  5011  00563A  6E50               	movwf	vfprintf@fp^0,c
  5012  00563C  0E00               	movlw	high sprintf@f
  5013  00563E  6E51               	movwf	(vfprintf@fp+1)^0,c
  5014  005640  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5015  005644  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5016  005648  0E6C               	movlw	low sprintf@ap
  5017  00564A  6E54               	movwf	vfprintf@ap^0,c
  5018  00564C  0E00               	movlw	high sprintf@ap
  5019  00564E  6E55               	movwf	(vfprintf@ap+1)^0,c
  5020  005650  ECAB  F02A         	call	_vfprintf	;wreg free
  5021  005654  0100               	movlb	0	; () banked
  5022  005656  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5023  005658  2560               	addwf	sprintf@s& (0+255),w,b
  5024  00565A  6ED9               	movwf	fsr2l,c
  5025  00565C  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5026  00565E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5027  005660  6EDA               	movwf	fsr2h,c
  5028  005662  0E00               	movlw	0
  5029  005664  6EDF               	movwf	indf2,c
  5030  005666                     
  5031                           ; BSR set to: 0
  5032  005666  0012               	return		;funcret
  5033  005668                     __end_of_sprintf:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _vfprintf *****************
  5037 ;; Defined at:
  5038 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5041 ;;		 -> sprintf@f(11), 
  5042 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5043 ;;		 -> STR_2(6), STR_1(14), 
  5044 ;;  ap              2   83[COMRAM] PTR PTR void 
  5045 ;;		 -> sprintf@ap(2), 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5048 ;;		 -> STR_2(6), STR_1(14), 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2   79[COMRAM] int 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;Total ram usage:        8 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 7
  5065 ;; This function calls:
  5066 ;;		_vfpfcnvrt
  5067 ;; This function is called by:
  5068 ;;		_sprintf
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text14
  5073  005556                     __ptext14:
  5074                           	callstack 0
  5075  005556                     _vfprintf:
  5076                           	callstack 20
  5077  005556                     
  5078                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5079  005556  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5080  00555A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5081  00555E                     
  5082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5083  00555E  0E00               	movlw	0
  5084  005560  0100               	movlb	0	; () banked
  5085  005562  6FF5               	movwf	(_nout+1)& (0+255),b
  5086  005564  0E00               	movlw	0
  5087  005566  6FF4               	movwf	_nout& (0+255),b
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5090  005568  EFC9  F02A         	goto	l4120
  5091  00556C                     l4118:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5095  00556C  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5096  005570  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5097  005574  0E56               	movlw	low vfprintf@cfmt
  5098  005576  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5099  005578  0E00               	movlw	high vfprintf@cfmt
  5100  00557A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5101  00557C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5102  005580  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5103  005584  ECF5  F01E         	call	_vfpfcnvrt	;wreg free
  5104  005588  5040               	movf	?_vfpfcnvrt^0,w,c
  5105  00558A  0100               	movlb	0	; () banked
  5106  00558C  27F4               	addwf	_nout& (0+255),f,b
  5107  00558E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5108  005590  23F5               	addwfc	(_nout+1)& (0+255),f,b
  5109  005592                     l4120:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5113  005592  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5114  005596  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5115  00559A                     	if	0	;tblptru may be non-zero
  5116  00559A                     	endif
  5117  00559A                     	if	0	;tblptru may be non-zero
  5118  00559A                     	endif
  5119  00559A  0008               	tblrd		*
  5120  00559C  50F5               	movf	tablat,w,c
  5121  00559E  0900               	iorlw	0
  5122  0055A0  A4D8               	btfss	status,2,c
  5123  0055A2  EFD5  F02A         	goto	u4191
  5124  0055A6  EFD7  F02A         	goto	u4190
  5125  0055AA                     u4191:
  5126  0055AA  EFB6  F02A         	goto	l4118
  5127  0055AE                     u4190:
  5128  0055AE                     
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5131  0055AE  C0F4  F050         	movff	_nout,?_vfprintf
  5132  0055B2  C0F5  F051         	movff	_nout+1,?_vfprintf+1
  5133  0055B6                     
  5134                           ; BSR set to: 0
  5135  0055B6  0012               	return		;funcret
  5136  0055B8                     __end_of_vfprintf:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _vfpfcnvrt *****************
  5140 ;; Defined at:
  5141 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5144 ;;		 -> sprintf@f(11), 
  5145 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5146 ;;		 -> vfprintf@cfmt(2), 
  5147 ;;  ap              2   67[COMRAM] PTR PTR void 
  5148 ;;		 -> sprintf@ap(2), 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  ll              8   71[COMRAM] long long 
  5151 ;;  llu             8    0        unsigned long long 
  5152 ;;  f               4    0        unsigned long long 
  5153 ;;  vp              3    0        PTR void 
  5154 ;;  ct              3    0        unsigned char [3]
  5155 ;;  cp              3    0        PTR unsigned char 
  5156 ;;  i               2    0        int 
  5157 ;;  done            2    0        int 
  5158 ;;  c               1    0        unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  2   63[COMRAM] int 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;Total ram usage:       16 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 6
  5175 ;; This function calls:
  5176 ;;		_dtoa
  5177 ;;		_fputc
  5178 ;; This function is called by:
  5179 ;;		_vfprintf
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text15
  5184  003DEA                     __ptext15:
  5185                           	callstack 0
  5186  003DEA                     _vfpfcnvrt:
  5187                           	callstack 20
  5188  003DEA                     
  5189                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5190  003DEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5191  003DEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5192  003DF2  CFDE FFF6          	movff	postinc2,tblptrl
  5193  003DF6  CFDD FFF7          	movff	postdec2,tblptrh
  5194  003DFA                     	if	0	;tblptru may be non-zero
  5195  003DFA                     	endif
  5196  003DFA                     	if	0	;tblptru may be non-zero
  5197  003DFA                     	endif
  5198  003DFA  0008               	tblrd		*
  5199  003DFC  50F5               	movf	tablat,w,c
  5200  003DFE  0A25               	xorlw	37
  5201  003E00  A4D8               	btfss	status,2,c
  5202  003E02  EF05  F01F         	goto	u3831
  5203  003E06  EF07  F01F         	goto	u3830
  5204  003E0A                     u3831:
  5205  003E0A  EFB3  F01F         	goto	l3884
  5206  003E0E                     u3830:
  5207  003E0E                     
  5208                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5209  003E0E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5210  003E12  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5211  003E16  2ADE               	incf	postinc2,f,c
  5212  003E18  0E00               	movlw	0
  5213  003E1A  22DD               	addwfc	postdec2,f,c
  5214  003E1C                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5216  003E1C  0E00               	movlw	0
  5217  003E1E  0100               	movlb	0	; () banked
  5218  003E20  6FF7               	movwf	(_width+1)& (0+255),b
  5219  003E22  0E00               	movlw	0
  5220  003E24  6FF6               	movwf	_width& (0+255),b
  5221  003E26  C0F6  F0FA         	movff	_width,_flags
  5222  003E2A  C0F7  F0FB         	movff	_width+1,_flags+1
  5223  003E2E                     
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5226  003E2E  69F8               	setf	_prec& (0+255),b
  5227  003E30  69F9               	setf	(_prec+1)& (0+255),b
  5228  003E32                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5231  003E32  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5232  003E36  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5233  003E3A  CFDE FFF6          	movff	postinc2,tblptrl
  5234  003E3E  CFDD FFF7          	movff	postdec2,tblptrh
  5235  003E42                     	if	0	;tblptru may be non-zero
  5236  003E42                     	endif
  5237  003E42                     	if	0	;tblptru may be non-zero
  5238  003E42                     	endif
  5239  003E42  0008               	tblrd		*
  5240  003E44  50F5               	movf	tablat,w,c
  5241  003E46  0A64               	xorlw	100
  5242  003E48  B4D8               	btfsc	status,2,c
  5243  003E4A  EF29  F01F         	goto	u3841
  5244  003E4E  EF2B  F01F         	goto	u3840
  5245  003E52                     u3841:
  5246  003E52  EF3D  F01F         	goto	l3862
  5247  003E56                     u3840:
  5248  003E56                     
  5249                           ; BSR set to: 0
  5250  003E56  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5251  003E5A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5252  003E5E  CFDE FFF6          	movff	postinc2,tblptrl
  5253  003E62  CFDD FFF7          	movff	postdec2,tblptrh
  5254  003E66                     	if	0	;tblptru may be non-zero
  5255  003E66                     	endif
  5256  003E66                     	if	0	;tblptru may be non-zero
  5257  003E66                     	endif
  5258  003E66  0008               	tblrd		*
  5259  003E68  50F5               	movf	tablat,w,c
  5260  003E6A  0A69               	xorlw	105
  5261  003E6C  A4D8               	btfss	status,2,c
  5262  003E6E  EF3B  F01F         	goto	u3851
  5263  003E72  EF3D  F01F         	goto	u3850
  5264  003E76                     u3851:
  5265  003E76  EF7D  F01F         	goto	l3868
  5266  003E7A                     u3850:
  5267  003E7A                     l3862:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5271  003E7A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5272  003E7E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5273  003E82  2ADE               	incf	postinc2,f,c
  5274  003E84  0E00               	movlw	0
  5275  003E86  22DD               	addwfc	postdec2,f,c
  5276                           
  5277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5278  003E88  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5279  003E8C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5280  003E90  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5281  003E94  0E02               	movlw	2
  5282  003E96  26DE               	addwf	postinc2,f,c
  5283  003E98  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5284  003E9C  0E00               	movlw	0
  5285  003E9E  22DD               	addwfc	postdec2,f,c
  5286  003EA0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5287  003EA4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5288  003EA8  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5289  003EAC  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5290  003EB0  0E00               	movlw	0
  5291  003EB2  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5292  003EB4  0EFF               	movlw	-1
  5293  003EB6  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5294  003EB8  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5295  003EBA  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5296  003EBC  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5297  003EBE  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5298  003EC0  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5299  003EC2                     
  5300                           ; BSR set to: 0
  5301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5302  003EC2  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5303  003EC6  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5304  003ECA  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5305  003ECE  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5306  003ED2  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5307  003ED6  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5308  003EDA  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5309  003EDE  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5310  003EE2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5311  003EE6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5312  003EEA  EC55  F018         	call	_dtoa	;wreg free
  5313  003EEE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5314  003EF2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5315  003EF6  EFCE  F01F         	goto	l1360
  5316  003EFA                     l3868:
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5320  003EFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5321  003EFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5322  003F02  CFDE FFF6          	movff	postinc2,tblptrl
  5323  003F06  CFDD FFF7          	movff	postdec2,tblptrh
  5324  003F0A                     	if	0	;tblptru may be non-zero
  5325  003F0A                     	endif
  5326  003F0A                     	if	0	;tblptru may be non-zero
  5327  003F0A                     	endif
  5328  003F0A  0008               	tblrd		*
  5329  003F0C  50F5               	movf	tablat,w,c
  5330  003F0E  0A25               	xorlw	37
  5331  003F10  A4D8               	btfss	status,2,c
  5332  003F12  EF8D  F01F         	goto	u3861
  5333  003F16  EF8F  F01F         	goto	u3860
  5334  003F1A                     u3861:
  5335  003F1A  EFA6  F01F         	goto	l3878
  5336  003F1E                     u3860:
  5337  003F1E                     
  5338                           ; BSR set to: 0
  5339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5340  003F1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5341  003F22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5342  003F26  2ADE               	incf	postinc2,f,c
  5343  003F28  0E00               	movlw	0
  5344  003F2A  22DD               	addwfc	postdec2,f,c
  5345  003F2C                     
  5346                           ; BSR set to: 0
  5347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5348  003F2C  0E00               	movlw	0
  5349  003F2E  6E02               	movwf	(fputc@c+1)^0,c
  5350  003F30  0E25               	movlw	37
  5351  003F32  6E01               	movwf	fputc@c^0,c
  5352  003F34  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5353  003F38  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5354  003F3C  EC4A  F028         	call	_fputc	;wreg free
  5355  003F40                     l3874:
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5358  003F40  0E00               	movlw	0
  5359  003F42  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5360  003F44  0E01               	movlw	1
  5361  003F46  6E40               	movwf	?_vfpfcnvrt^0,c
  5362  003F48  EFCE  F01F         	goto	l1360
  5363  003F4C                     l3878:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5367  003F4C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5368  003F50  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5369  003F54  2ADE               	incf	postinc2,f,c
  5370  003F56  0E00               	movlw	0
  5371  003F58  22DD               	addwfc	postdec2,f,c
  5372  003F5A                     
  5373                           ; BSR set to: 0
  5374                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5375  003F5A  0E00               	movlw	0
  5376  003F5C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5377  003F5E  0E00               	movlw	0
  5378  003F60  6E40               	movwf	?_vfpfcnvrt^0,c
  5379  003F62  EFCE  F01F         	goto	l1360
  5380  003F66                     l3884:
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5383  003F66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5384  003F6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5385  003F6E  CFDE FFF6          	movff	postinc2,tblptrl
  5386  003F72  CFDD FFF7          	movff	postdec2,tblptrh
  5387  003F76                     	if	0	;tblptru may be non-zero
  5388  003F76                     	endif
  5389  003F76                     	if	0	;tblptru may be non-zero
  5390  003F76                     	endif
  5391  003F76  0008               	tblrd		*
  5392  003F78  50F5               	movf	tablat,w,c
  5393  003F7A  6E01               	movwf	fputc@c^0,c
  5394  003F7C  6A02               	clrf	(fputc@c+1)^0,c
  5395  003F7E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5396  003F82  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5397  003F86  EC4A  F028         	call	_fputc	;wreg free
  5398  003F8A                     
  5399                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5400  003F8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  003F8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  003F92  2ADE               	incf	postinc2,f,c
  5403  003F94  0E00               	movlw	0
  5404  003F96  22DD               	addwfc	postdec2,f,c
  5405  003F98  EFA0  F01F         	goto	l3874
  5406  003F9C                     l1360:
  5407  003F9C  0012               	return		;funcret
  5408  003F9E                     __end_of_vfpfcnvrt:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _dtoa *****************
  5412 ;; Defined at:
  5413 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5416 ;;		 -> sprintf@f(11), 
  5417 ;;  d               8   29[COMRAM] long long 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  n               8   53[COMRAM] long long 
  5420 ;;  i               2   61[COMRAM] int 
  5421 ;;  s               2   51[COMRAM] int 
  5422 ;;  w               2   49[COMRAM] int 
  5423 ;;  p               2   47[COMRAM] int 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  2   27[COMRAM] int 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5433 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;Total ram usage:       36 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 5
  5440 ;; This function calls:
  5441 ;;		___aodiv
  5442 ;;		___aomod
  5443 ;;		_abs
  5444 ;;		_pad
  5445 ;; This function is called by:
  5446 ;;		_vfpfcnvrt
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text16
  5451  0030AA                     __ptext16:
  5452                           	callstack 0
  5453  0030AA                     _dtoa:
  5454                           	callstack 20
  5455  0030AA                     
  5456                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5457  0030AA  C01E  F036         	movff	dtoa@d,dtoa@n
  5458  0030AE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5459  0030B2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5460  0030B6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5461  0030BA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5462  0030BE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5463  0030C2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5464  0030C6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5465  0030CA                     
  5466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5467  0030CA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5468  0030CC  EF6A  F018         	goto	u3231
  5469  0030D0  EF6D  F018         	goto	u3230
  5470  0030D4                     u3231:
  5471  0030D4  0E01               	movlw	1
  5472  0030D6  EF6E  F018         	goto	u3240
  5473  0030DA                     u3230:
  5474  0030DA  0E00               	movlw	0
  5475  0030DC                     u3240:
  5476  0030DC  6E34               	movwf	dtoa@s^0,c
  5477  0030DE  6A35               	clrf	(dtoa@s+1)^0,c
  5478                           
  5479                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5480  0030E0  5034               	movf	dtoa@s^0,w,c
  5481  0030E2  1035               	iorwf	(dtoa@s+1)^0,w,c
  5482  0030E4  B4D8               	btfsc	status,2,c
  5483  0030E6  EF77  F018         	goto	u3251
  5484  0030EA  EF79  F018         	goto	u3250
  5485  0030EE                     u3251:
  5486  0030EE  EF89  F018         	goto	l3574
  5487  0030F2                     u3250:
  5488  0030F2                     
  5489                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5490  0030F2  1E3D               	comf	(dtoa@n+7)^0,f,c
  5491  0030F4  1E3C               	comf	(dtoa@n+6)^0,f,c
  5492  0030F6  1E3B               	comf	(dtoa@n+5)^0,f,c
  5493  0030F8  1E3A               	comf	(dtoa@n+4)^0,f,c
  5494  0030FA  1E39               	comf	(dtoa@n+3)^0,f,c
  5495  0030FC  1E38               	comf	(dtoa@n+2)^0,f,c
  5496  0030FE  1E37               	comf	(dtoa@n+1)^0,f,c
  5497  003100  6C36               	negf	dtoa@n^0,c
  5498  003102  0E00               	movlw	0
  5499  003104  2237               	addwfc	(dtoa@n+1)^0,f,c
  5500  003106  2238               	addwfc	(dtoa@n+2)^0,f,c
  5501  003108  2239               	addwfc	(dtoa@n+3)^0,f,c
  5502  00310A  223A               	addwfc	(dtoa@n+4)^0,f,c
  5503  00310C  223B               	addwfc	(dtoa@n+5)^0,f,c
  5504  00310E  223C               	addwfc	(dtoa@n+6)^0,f,c
  5505  003110  223D               	addwfc	(dtoa@n+7)^0,f,c
  5506  003112                     l3574:
  5507                           
  5508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5509  003112  0100               	movlb	0	; () banked
  5510  003114  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5511  003116  EF8F  F018         	goto	u3261
  5512  00311A  EF91  F018         	goto	u3260
  5513  00311E                     u3261:
  5514  00311E  EF92  F018         	goto	l3578
  5515  003122                     u3260:
  5516  003122                     
  5517                           ; BSR set to: 0
  5518                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5519  003122  93FA               	bcf	_flags& (0+255),1,b
  5520  003124                     l3578:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5524  003124  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5525  003126  EF9F  F018         	goto	u3270
  5526  00312A  51F9               	movf	(_prec+1)& (0+255),w,b
  5527  00312C  E106               	bnz	u3271
  5528  00312E  05F8               	decf	_prec& (0+255),w,b
  5529  003130  B0D8               	btfsc	status,0,c
  5530  003132  EF9D  F018         	goto	u3271
  5531  003136  EF9F  F018         	goto	u3270
  5532  00313A                     u3271:
  5533  00313A  EFA5  F018         	goto	l1333
  5534  00313E                     u3270:
  5535  00313E                     
  5536                           ; BSR set to: 0
  5537  00313E  0E00               	movlw	0
  5538  003140  6E31               	movwf	(dtoa@p+1)^0,c
  5539  003142  0E01               	movlw	1
  5540  003144  6E30               	movwf	dtoa@p^0,c
  5541  003146  EFA9  F018         	goto	l1335
  5542  00314A                     l1333:
  5543                           
  5544                           ; BSR set to: 0
  5545  00314A  C0F8  F030         	movff	_prec,dtoa@p
  5546  00314E  C0F9  F031         	movff	_prec+1,dtoa@p+1
  5547  003152                     l1335:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5551  003152  C0F6  F032         	movff	_width,dtoa@w
  5552  003156  C0F7  F033         	movff	_width+1,dtoa@w+1
  5553  00315A                     
  5554                           ; BSR set to: 0
  5555                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5556  00315A  5034               	movf	dtoa@s^0,w,c
  5557  00315C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5558  00315E  A4D8               	btfss	status,2,c
  5559  003160  EFB4  F018         	goto	u3281
  5560  003164  EFB6  F018         	goto	u3280
  5561  003168                     u3281:
  5562  003168  EFBD  F018         	goto	l3586
  5563  00316C                     u3280:
  5564  00316C                     
  5565                           ; BSR set to: 0
  5566  00316C  A5FA               	btfss	_flags& (0+255),2,b
  5567  00316E  EFBB  F018         	goto	u3291
  5568  003172  EFBD  F018         	goto	u3290
  5569  003176                     u3291:
  5570  003176  EFC0  F018         	goto	l3588
  5571  00317A                     u3290:
  5572  00317A                     l3586:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5576  00317A  0632               	decf	dtoa@w^0,f,c
  5577  00317C  A0D8               	btfss	status,0,c
  5578  00317E  0633               	decf	(dtoa@w+1)^0,f,c
  5579  003180                     l3588:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5583  003180  0E00               	movlw	0
  5584  003182  6E3F               	movwf	(dtoa@i+1)^0,c
  5585  003184  0E1F               	movlw	31
  5586  003186  6E3E               	movwf	dtoa@i^0,c
  5587  003188                     
  5588                           ; BSR set to: 0
  5589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5590  003188  0E00               	movlw	0
  5591  00318A  0101               	movlb	1	; () banked
  5592  00318C  6F9D               	movwf	(_dbuf+31)& (0+255),b
  5593                           
  5594                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5595  00318E  EF45  F019         	goto	l3602
  5596  003192                     l3592:
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5599  003192  063E               	decf	dtoa@i^0,f,c
  5600  003194  A0D8               	btfss	status,0,c
  5601  003196  063F               	decf	(dtoa@i+1)^0,f,c
  5602  003198                     
  5603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5604  003198  0E7E               	movlw	low _dbuf
  5605  00319A  243E               	addwf	dtoa@i^0,w,c
  5606  00319C  6ED9               	movwf	fsr2l,c
  5607  00319E  0E01               	movlw	high _dbuf
  5608  0031A0  203F               	addwfc	(dtoa@i+1)^0,w,c
  5609  0031A2  6EDA               	movwf	fsr2h,c
  5610  0031A4  C036  F001         	movff	dtoa@n,___aomod@dividend
  5611  0031A8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5612  0031AC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5613  0031B0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5614  0031B4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5615  0031B8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5616  0031BC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5617  0031C0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5618  0031C4  0E0A               	movlw	10
  5619  0031C6  6E09               	movwf	___aomod@divisor^0,c
  5620  0031C8  0E00               	movlw	0
  5621  0031CA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5622  0031CC  0E00               	movlw	0
  5623  0031CE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5624  0031D0  0E00               	movlw	0
  5625  0031D2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5626  0031D4  0E00               	movlw	0
  5627  0031D6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5628  0031D8  0E00               	movlw	0
  5629  0031DA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5630  0031DC  0E00               	movlw	0
  5631  0031DE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5632  0031E0  0E00               	movlw	0
  5633  0031E2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5634  0031E4  EC45  F022         	call	___aomod	;wreg free
  5635  0031E8  C001  F026         	movff	?___aomod,??_dtoa
  5636  0031EC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5637  0031F0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5638  0031F4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5639  0031F8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5640  0031FC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5641  003200  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5642  003204  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5643  003208  C026  F013         	movff	??_dtoa,abs@a
  5644  00320C  C028  F014         	movff	??_dtoa+2,abs@a+1
  5645  003210  EC9D  F02C         	call	_abs	;wreg free
  5646  003214  5013               	movf	?_abs^0,w,c
  5647  003216  0F30               	addlw	48
  5648  003218  6EDF               	movwf	indf2,c
  5649  00321A                     
  5650                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5651  00321A  0630               	decf	dtoa@p^0,f,c
  5652  00321C  A0D8               	btfss	status,0,c
  5653  00321E  0631               	decf	(dtoa@p+1)^0,f,c
  5654  003220                     
  5655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5656  003220  0632               	decf	dtoa@w^0,f,c
  5657  003222  A0D8               	btfss	status,0,c
  5658  003224  0633               	decf	(dtoa@w+1)^0,f,c
  5659  003226                     
  5660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5661  003226  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5662  00322A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5663  00322E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5664  003232  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5665  003236  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5666  00323A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5667  00323E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5668  003242  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5669  003246  0E0A               	movlw	10
  5670  003248  6E09               	movwf	___aodiv@divisor^0,c
  5671  00324A  0E00               	movlw	0
  5672  00324C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5673  00324E  0E00               	movlw	0
  5674  003250  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5675  003252  0E00               	movlw	0
  5676  003254  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5677  003256  0E00               	movlw	0
  5678  003258  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5679  00325A  0E00               	movlw	0
  5680  00325C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5681  00325E  0E00               	movlw	0
  5682  003260  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5683  003262  0E00               	movlw	0
  5684  003264  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5685  003266  EC81  F021         	call	___aodiv	;wreg free
  5686  00326A  C001  F036         	movff	?___aodiv,dtoa@n
  5687  00326E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5688  003272  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5689  003276  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5690  00327A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5691  00327E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5692  003282  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5693  003286  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5694  00328A                     l3602:
  5695                           
  5696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5697  00328A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5698  00328C  EF50  F019         	goto	u3301
  5699  003290  503F               	movf	(dtoa@i+1)^0,w,c
  5700  003292  E108               	bnz	u3300
  5701  003294  043E               	decf	dtoa@i^0,w,c
  5702  003296  A0D8               	btfss	status,0,c
  5703  003298  EF50  F019         	goto	u3301
  5704  00329C  EF52  F019         	goto	u3300
  5705  0032A0                     u3301:
  5706  0032A0  EF83  F019         	goto	l3612
  5707  0032A4                     u3300:
  5708  0032A4  5036               	movf	dtoa@n^0,w,c
  5709  0032A6  1037               	iorwf	(dtoa@n+1)^0,w,c
  5710  0032A8  1038               	iorwf	(dtoa@n+2)^0,w,c
  5711  0032AA  1039               	iorwf	(dtoa@n+3)^0,w,c
  5712  0032AC  103A               	iorwf	(dtoa@n+4)^0,w,c
  5713  0032AE  103B               	iorwf	(dtoa@n+5)^0,w,c
  5714  0032B0  103C               	iorwf	(dtoa@n+6)^0,w,c
  5715  0032B2  103D               	iorwf	(dtoa@n+7)^0,w,c
  5716  0032B4  A4D8               	btfss	status,2,c
  5717  0032B6  EF5F  F019         	goto	u3311
  5718  0032BA  EF61  F019         	goto	u3310
  5719  0032BE                     u3311:
  5720  0032BE  EFC9  F018         	goto	l3592
  5721  0032C2                     u3310:
  5722  0032C2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5723  0032C4  EF6E  F019         	goto	u3320
  5724  0032C8  5031               	movf	(dtoa@p+1)^0,w,c
  5725  0032CA  E106               	bnz	u3321
  5726  0032CC  0430               	decf	dtoa@p^0,w,c
  5727  0032CE  B0D8               	btfsc	status,0,c
  5728  0032D0  EF6C  F019         	goto	u3321
  5729  0032D4  EF6E  F019         	goto	u3320
  5730  0032D8                     u3321:
  5731  0032D8  EFC9  F018         	goto	l3592
  5732  0032DC                     u3320:
  5733  0032DC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5734  0032DE  EF79  F019         	goto	u3331
  5735  0032E2  5033               	movf	(dtoa@w+1)^0,w,c
  5736  0032E4  E108               	bnz	u3330
  5737  0032E6  0432               	decf	dtoa@w^0,w,c
  5738  0032E8  A0D8               	btfss	status,0,c
  5739  0032EA  EF79  F019         	goto	u3331
  5740  0032EE  EF7B  F019         	goto	u3330
  5741  0032F2                     u3331:
  5742  0032F2  EF83  F019         	goto	l3612
  5743  0032F6                     u3330:
  5744  0032F6  0100               	movlb	0	; () banked
  5745  0032F8  B3FA               	btfsc	_flags& (0+255),1,b
  5746  0032FA  EF81  F019         	goto	u3341
  5747  0032FE  EF83  F019         	goto	u3340
  5748  003302                     u3341:
  5749  003302  EFC9  F018         	goto	l3592
  5750  003306                     u3340:
  5751  003306                     l3612:
  5752                           
  5753                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5754  003306  5034               	movf	dtoa@s^0,w,c
  5755  003308  1035               	iorwf	(dtoa@s+1)^0,w,c
  5756  00330A  A4D8               	btfss	status,2,c
  5757  00330C  EF8A  F019         	goto	u3351
  5758  003310  EF8C  F019         	goto	u3350
  5759  003314                     u3351:
  5760  003314  EF94  F019         	goto	l3616
  5761  003318                     u3350:
  5762  003318  0100               	movlb	0	; () banked
  5763  00331A  A5FA               	btfss	_flags& (0+255),2,b
  5764  00331C  EF92  F019         	goto	u3361
  5765  003320  EF94  F019         	goto	u3360
  5766  003324                     u3361:
  5767  003324  EFB2  F019         	goto	l3626
  5768  003328                     u3360:
  5769  003328                     l3616:
  5770                           
  5771                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5772  003328  063E               	decf	dtoa@i^0,f,c
  5773  00332A  A0D8               	btfss	status,0,c
  5774  00332C  063F               	decf	(dtoa@i+1)^0,f,c
  5775  00332E                     
  5776                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5777  00332E  5034               	movf	dtoa@s^0,w,c
  5778  003330  1035               	iorwf	(dtoa@s+1)^0,w,c
  5779  003332  A4D8               	btfss	status,2,c
  5780  003334  EF9E  F019         	goto	u3371
  5781  003338  EFA0  F019         	goto	u3370
  5782  00333C                     u3371:
  5783  00333C  EFA6  F019         	goto	l3622
  5784  003340                     u3370:
  5785  003340  0E00               	movlw	0
  5786  003342  6E2F               	movwf	(_dtoa$2601+1)^0,c
  5787  003344  0E2B               	movlw	43
  5788  003346  6E2E               	movwf	_dtoa$2601^0,c
  5789  003348  EFAA  F019         	goto	l3624
  5790  00334C                     l3622:
  5791  00334C  0E00               	movlw	0
  5792  00334E  6E2F               	movwf	(_dtoa$2601+1)^0,c
  5793  003350  0E2D               	movlw	45
  5794  003352  6E2E               	movwf	_dtoa$2601^0,c
  5795  003354                     l3624:
  5796  003354  0E7E               	movlw	low _dbuf
  5797  003356  243E               	addwf	dtoa@i^0,w,c
  5798  003358  6ED9               	movwf	fsr2l,c
  5799  00335A  0E01               	movlw	high _dbuf
  5800  00335C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5801  00335E  6EDA               	movwf	fsr2h,c
  5802  003360  C02E  FFDF         	movff	_dtoa$2601,indf2
  5803  003364                     l3626:
  5804                           
  5805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5806  003364  C01C  F011         	movff	dtoa@fp,pad@fp
  5807  003368  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5808  00336C  0E7E               	movlw	low _dbuf
  5809  00336E  243E               	addwf	dtoa@i^0,w,c
  5810  003370  6E13               	movwf	pad@buf^0,c
  5811  003372  0E01               	movlw	high _dbuf
  5812  003374  203F               	addwfc	(dtoa@i+1)^0,w,c
  5813  003376  6E14               	movwf	(pad@buf+1)^0,c
  5814  003378  C032  F015         	movff	dtoa@w,pad@p
  5815  00337C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5816  003380  ECAF  F028         	call	_pad	;wreg free
  5817  003384  C011  F01C         	movff	?_pad,?_dtoa
  5818  003388  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5819  00338C  0012               	return		;funcret
  5820  00338E                     __end_of_dtoa:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _pad *****************
  5824 ;; Defined at:
  5825 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5828 ;;		 -> sprintf@f(11), 
  5829 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5830 ;;		 -> dbuf(32), 
  5831 ;;  p               2   20[COMRAM] int 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  w               2   25[COMRAM] int 
  5834 ;;  i               2   23[COMRAM] int 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2   16[COMRAM] int 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;Total ram usage:       11 bytes
  5849 ;; Hardware stack levels used: 1
  5850 ;; Hardware stack levels required when called: 4
  5851 ;; This function calls:
  5852 ;;		_fputc
  5853 ;;		_fputs
  5854 ;;		_strlen
  5855 ;; This function is called by:
  5856 ;;		_dtoa
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text17
  5861  00515E                     __ptext17:
  5862                           	callstack 0
  5863  00515E                     _pad:
  5864                           	callstack 20
  5865  00515E                     
  5866                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5867  00515E  0100               	movlb	0	; () banked
  5868  005160  A1FA               	btfss	_flags& (0+255),0,b
  5869  005162  EFB5  F028         	goto	u3121
  5870  005166  EFB7  F028         	goto	u3120
  5871  00516A                     u3121:
  5872  00516A  EFC1  F028         	goto	l3496
  5873  00516E                     u3120:
  5874  00516E                     
  5875                           ; BSR set to: 0
  5876                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5877  00516E  C013  F00A         	movff	pad@buf,fputs@s
  5878  005172  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5879  005176  C011  F00C         	movff	pad@fp,fputs@fp
  5880  00517A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5881  00517E  ECF7  F02B         	call	_fputs	;wreg free
  5882  005182                     l3496:
  5883                           
  5884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5885  005182  BE16               	btfsc	(pad@p+1)^0,7,c
  5886  005184  EFC6  F028         	goto	u3131
  5887  005188  EFC8  F028         	goto	u3130
  5888  00518C                     u3131:
  5889  00518C  EFCE  F028         	goto	l3500
  5890  005190                     u3130:
  5891  005190  C015  F01A         	movff	pad@p,pad@w
  5892  005194  C016  F01B         	movff	pad@p+1,pad@w+1
  5893  005198  EFD2  F028         	goto	l1322
  5894  00519C                     l3500:
  5895  00519C  0E00               	movlw	0
  5896  00519E  6E1B               	movwf	(pad@w+1)^0,c
  5897  0051A0  0E00               	movlw	0
  5898  0051A2  6E1A               	movwf	pad@w^0,c
  5899  0051A4                     l1322:
  5900                           
  5901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5902  0051A4  0E00               	movlw	0
  5903  0051A6  6E19               	movwf	(pad@i+1)^0,c
  5904  0051A8  0E00               	movlw	0
  5905  0051AA  6E18               	movwf	pad@i^0,c
  5906                           
  5907                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5908  0051AC  EFE4  F028         	goto	l3506
  5909  0051B0                     l3502:
  5910                           
  5911                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5912  0051B0  0E00               	movlw	0
  5913  0051B2  6E02               	movwf	(fputc@c+1)^0,c
  5914  0051B4  0E20               	movlw	32
  5915  0051B6  6E01               	movwf	fputc@c^0,c
  5916  0051B8  C011  F003         	movff	pad@fp,fputc@fp
  5917  0051BC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5918  0051C0  EC4A  F028         	call	_fputc	;wreg free
  5919  0051C4                     
  5920                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5921  0051C4  4A18               	infsnz	pad@i^0,f,c
  5922  0051C6  2A19               	incf	(pad@i+1)^0,f,c
  5923  0051C8                     l3506:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5926  0051C8  501A               	movf	pad@w^0,w,c
  5927  0051CA  5C18               	subwf	pad@i^0,w,c
  5928  0051CC  5019               	movf	(pad@i+1)^0,w,c
  5929  0051CE  0A80               	xorlw	128
  5930  0051D0  6E17               	movwf	??_pad^0,c
  5931  0051D2  501B               	movf	(pad@w+1)^0,w,c
  5932  0051D4  0A80               	xorlw	128
  5933  0051D6  5817               	subwfb	??_pad^0,w,c
  5934  0051D8  A0D8               	btfss	status,0,c
  5935  0051DA  EFF1  F028         	goto	u3141
  5936  0051DE  EFF3  F028         	goto	u3140
  5937  0051E2                     u3141:
  5938  0051E2  EFD8  F028         	goto	l3502
  5939  0051E6                     u3140:
  5940  0051E6                     
  5941                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5942  0051E6  0100               	movlb	0	; () banked
  5943  0051E8  B1FA               	btfsc	_flags& (0+255),0,b
  5944  0051EA  EFF9  F028         	goto	u3151
  5945  0051EE  EFFB  F028         	goto	u3150
  5946  0051F2                     u3151:
  5947  0051F2  EF05  F029         	goto	l3510
  5948  0051F6                     u3150:
  5949  0051F6                     
  5950                           ; BSR set to: 0
  5951                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5952  0051F6  C013  F00A         	movff	pad@buf,fputs@s
  5953  0051FA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5954  0051FE  C011  F00C         	movff	pad@fp,fputs@fp
  5955  005202  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5956  005206  ECF7  F02B         	call	_fputs	;wreg free
  5957  00520A                     l3510:
  5958                           
  5959                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5960  00520A  C013  F001         	movff	pad@buf,strlen@s
  5961  00520E  C014  F002         	movff	pad@buf+1,strlen@s+1
  5962  005212  EC12  F02D         	call	_strlen	;wreg free
  5963  005216  501A               	movf	pad@w^0,w,c
  5964  005218  2401               	addwf	?_strlen^0,w,c
  5965  00521A  6E11               	movwf	?_pad^0,c
  5966  00521C  501B               	movf	(pad@w+1)^0,w,c
  5967  00521E  2002               	addwfc	(?_strlen+1)^0,w,c
  5968  005220  6E12               	movwf	(?_pad+1)^0,c
  5969  005222  0012               	return		;funcret
  5970  005224                     __end_of_pad:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _strlen *****************
  5974 ;; Defined at:
  5975 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5978 ;;		 -> dbuf(32), 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5981 ;;		 -> dbuf(32), 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2    0[COMRAM] unsigned int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;Total ram usage:        4 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 1
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_pad
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text18
  6006  005A24                     __ptext18:
  6007                           	callstack 0
  6008  005A24                     _strlen:
  6009                           	callstack 22
  6010  005A24  C001  F003         	movff	strlen@s,strlen@a
  6011  005A28  C002  F004         	movff	strlen@s+1,strlen@a+1
  6012  005A2C  EF1A  F02D         	goto	l3406
  6013  005A30                     l3404:
  6014  005A30  4A01               	infsnz	strlen@s^0,f,c
  6015  005A32  2A02               	incf	(strlen@s+1)^0,f,c
  6016  005A34                     l3406:
  6017  005A34  C001  FFD9         	movff	strlen@s,fsr2l
  6018  005A38  C002  FFDA         	movff	strlen@s+1,fsr2h
  6019  005A3C  50DF               	movf	indf2,w,c
  6020  005A3E  A4D8               	btfss	status,2,c
  6021  005A40  EF24  F02D         	goto	u2981
  6022  005A44  EF26  F02D         	goto	u2980
  6023  005A48                     u2981:
  6024  005A48  EF18  F02D         	goto	l3404
  6025  005A4C                     u2980:
  6026  005A4C  5003               	movf	strlen@a^0,w,c
  6027  005A4E  5C01               	subwf	strlen@s^0,w,c
  6028  005A50  6E01               	movwf	?_strlen^0,c
  6029  005A52  5004               	movf	(strlen@a+1)^0,w,c
  6030  005A54  5802               	subwfb	(strlen@s+1)^0,w,c
  6031  005A56  6E02               	movwf	(?_strlen+1)^0,c
  6032  005A58  0012               	return		;funcret
  6033  005A5A                     __end_of_strlen:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _fputs *****************
  6037 ;; Defined at:
  6038 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6041 ;;		 -> dbuf(32), 
  6042 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6043 ;;		 -> sprintf@f(11), 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  i               2   14[COMRAM] int 
  6046 ;;  c               1   13[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  2    9[COMRAM] int 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        7 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 3
  6063 ;; This function calls:
  6064 ;;		_fputc
  6065 ;; This function is called by:
  6066 ;;		_pad
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text19
  6071  0057EE                     __ptext19:
  6072                           	callstack 0
  6073  0057EE                     _fputs:
  6074                           	callstack 20
  6075  0057EE  0E00               	movlw	0
  6076  0057F0  6E10               	movwf	(fputs@i+1)^0,c
  6077  0057F2  0E00               	movlw	0
  6078  0057F4  6E0F               	movwf	fputs@i^0,c
  6079  0057F6  EF08  F02C         	goto	l3400
  6080  0057FA                     l3396:
  6081  0057FA  C00E  F001         	movff	fputs@c,fputc@c
  6082  0057FE  6A02               	clrf	(fputc@c+1)^0,c
  6083  005800  C00C  F003         	movff	fputs@fp,fputc@fp
  6084  005804  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6085  005808  EC4A  F028         	call	_fputc	;wreg free
  6086  00580C  4A0F               	infsnz	fputs@i^0,f,c
  6087  00580E  2A10               	incf	(fputs@i+1)^0,f,c
  6088  005810                     l3400:
  6089  005810  500F               	movf	fputs@i^0,w,c
  6090  005812  240A               	addwf	fputs@s^0,w,c
  6091  005814  6ED9               	movwf	fsr2l,c
  6092  005816  5010               	movf	(fputs@i+1)^0,w,c
  6093  005818  200B               	addwfc	(fputs@s+1)^0,w,c
  6094  00581A  6EDA               	movwf	fsr2h,c
  6095  00581C  50DF               	movf	indf2,w,c
  6096  00581E  6E0E               	movwf	fputs@c^0,c
  6097  005820  500E               	movf	fputs@c^0,w,c
  6098  005822  A4D8               	btfss	status,2,c
  6099  005824  EF16  F02C         	goto	u2971
  6100  005828  EF18  F02C         	goto	u2970
  6101  00582C                     u2971:
  6102  00582C  EFFD  F02B         	goto	l3396
  6103  005830                     u2970:
  6104  005830  0012               	return		;funcret
  6105  005832                     __end_of_fputs:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _fputc *****************
  6109 ;; Defined at:
  6110 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  c               2    0[COMRAM] int 
  6113 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6114 ;;		 -> sprintf@f(11), 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2    0[COMRAM] int 
  6119 ;; Registers used:
  6120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;Total ram usage:        9 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; Hardware stack levels required when called: 2
  6133 ;; This function calls:
  6134 ;;		_putch
  6135 ;; This function is called by:
  6136 ;;		_pad
  6137 ;;		_vfpfcnvrt
  6138 ;;		_fputs
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text20
  6143  005094                     __ptext20:
  6144                           	callstack 0
  6145  005094                     _fputc:
  6146                           	callstack 23
  6147  005094  5003               	movf	fputc@fp^0,w,c
  6148  005096  1004               	iorwf	(fputc@fp+1)^0,w,c
  6149  005098  B4D8               	btfsc	status,2,c
  6150  00509A  EF51  F028         	goto	u2931
  6151  00509E  EF53  F028         	goto	u2930
  6152  0050A2                     u2931:
  6153  0050A2  EF5C  F028         	goto	l3384
  6154  0050A6                     u2930:
  6155  0050A6  5003               	movf	fputc@fp^0,w,c
  6156  0050A8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6157  0050AA  A4D8               	btfss	status,2,c
  6158  0050AC  EF5A  F028         	goto	u2941
  6159  0050B0  EF5C  F028         	goto	u2940
  6160  0050B4                     u2941:
  6161  0050B4  EF61  F028         	goto	l3386
  6162  0050B8                     u2940:
  6163  0050B8                     l3384:
  6164  0050B8  5001               	movf	fputc@c^0,w,c
  6165  0050BA  EC72  F02E         	call	_putch
  6166  0050BE  EFAE  F028         	goto	l1386
  6167  0050C2                     l3386:
  6168  0050C2  EE20 F009          	lfsr	2,9
  6169  0050C6  5003               	movf	fputc@fp^0,w,c
  6170  0050C8  26D9               	addwf	fsr2l,f,c
  6171  0050CA  5004               	movf	(fputc@fp+1)^0,w,c
  6172  0050CC  22DA               	addwfc	fsr2h,f,c
  6173  0050CE  50DE               	movf	postinc2,w,c
  6174  0050D0  10DE               	iorwf	postinc2,w,c
  6175  0050D2  B4D8               	btfsc	status,2,c
  6176  0050D4  EF6E  F028         	goto	u2951
  6177  0050D8  EF70  F028         	goto	u2950
  6178  0050DC                     u2951:
  6179  0050DC  EF8B  F028         	goto	l3390
  6180  0050E0                     u2950:
  6181  0050E0  EE20 F009          	lfsr	2,9
  6182  0050E4  5003               	movf	fputc@fp^0,w,c
  6183  0050E6  26D9               	addwf	fsr2l,f,c
  6184  0050E8  5004               	movf	(fputc@fp+1)^0,w,c
  6185  0050EA  22DA               	addwfc	fsr2h,f,c
  6186  0050EC  EE10 F003          	lfsr	1,3
  6187  0050F0  5003               	movf	fputc@fp^0,w,c
  6188  0050F2  26E1               	addwf	fsr1l,f,c
  6189  0050F4  5004               	movf	(fputc@fp+1)^0,w,c
  6190  0050F6  22E2               	addwfc	fsr1h,f,c
  6191  0050F8  50DE               	movf	postinc2,w,c
  6192  0050FA  5CE6               	subwf	postinc1,w,c
  6193  0050FC  50E6               	movf	postinc1,w,c
  6194  0050FE  0A80               	xorlw	128
  6195  005100  6E09               	movwf	(??_fputc+4)^0,c
  6196  005102  50DE               	movf	postinc2,w,c
  6197  005104  0A80               	xorlw	128
  6198  005106  5809               	subwfb	(??_fputc+4)^0,w,c
  6199  005108  B0D8               	btfsc	status,0,c
  6200  00510A  EF89  F028         	goto	u2961
  6201  00510E  EF8B  F028         	goto	u2960
  6202  005112                     u2961:
  6203  005112  EFAE  F028         	goto	l1386
  6204  005116                     u2960:
  6205  005116                     l3390:
  6206  005116  EE20 F003          	lfsr	2,3
  6207  00511A  5003               	movf	fputc@fp^0,w,c
  6208  00511C  26D9               	addwf	fsr2l,f,c
  6209  00511E  5004               	movf	(fputc@fp+1)^0,w,c
  6210  005120  22DA               	addwfc	fsr2h,f,c
  6211  005122  CFDE F005          	movff	postinc2,??_fputc
  6212  005126  CFDD F006          	movff	postdec2,??_fputc+1
  6213  00512A  C003  FFD9         	movff	fputc@fp,fsr2l
  6214  00512E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6215  005132  CFDE F007          	movff	postinc2,??_fputc+2
  6216  005136  CFDD F008          	movff	postdec2,??_fputc+3
  6217  00513A  5005               	movf	??_fputc^0,w,c
  6218  00513C  2407               	addwf	(??_fputc+2)^0,w,c
  6219  00513E  6ED9               	movwf	fsr2l,c
  6220  005140  5006               	movf	(??_fputc+1)^0,w,c
  6221  005142  2008               	addwfc	(??_fputc+3)^0,w,c
  6222  005144  6EDA               	movwf	fsr2h,c
  6223  005146  C001  FFDF         	movff	fputc@c,indf2
  6224  00514A  EE20 F003          	lfsr	2,3
  6225  00514E  5003               	movf	fputc@fp^0,w,c
  6226  005150  26D9               	addwf	fsr2l,f,c
  6227  005152  5004               	movf	(fputc@fp+1)^0,w,c
  6228  005154  22DA               	addwfc	fsr2h,f,c
  6229  005156  2ADE               	incf	postinc2,f,c
  6230  005158  0E00               	movlw	0
  6231  00515A  22DD               	addwfc	postdec2,f,c
  6232  00515C                     l1386:
  6233  00515C  0012               	return		;funcret
  6234  00515E                     __end_of_fputc:
  6235                           	callstack 0
  6236                           
  6237 ;; *************** function _putch *****************
  6238 ;; Defined at:
  6239 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  c               1    wreg     unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  c               1    0[COMRAM] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;Total ram usage:        0 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 1
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_fputc
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text21
  6268  005CE4                     __ptext21:
  6269                           	callstack 0
  6270  005CE4                     _putch:
  6271                           	callstack 23
  6272  005CE4  0012               	return		;funcret
  6273  005CE6                     __end_of_putch:
  6274                           	callstack 0
  6275                           
  6276 ;; *************** function _abs *****************
  6277 ;; Defined at:
  6278 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  a               2   18[COMRAM] int 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2   18[COMRAM] int 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;Total ram usage:        4 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 1
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_dtoa
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text22
  6307  00593A                     __ptext22:
  6308                           	callstack 0
  6309  00593A                     _abs:
  6310                           	callstack 23
  6311  00593A  BE14               	btfsc	(abs@a+1)^0,7,c
  6312  00593C  EFAA  F02C         	goto	u3160
  6313  005940  5014               	movf	(abs@a+1)^0,w,c
  6314  005942  E106               	bnz	u3161
  6315  005944  0413               	decf	abs@a^0,w,c
  6316  005946  B0D8               	btfsc	status,0,c
  6317  005948  EFA8  F02C         	goto	u3161
  6318  00594C  EFAA  F02C         	goto	u3160
  6319  005950                     u3161:
  6320  005950  EFB8  F02C         	goto	l1371
  6321  005954                     u3160:
  6322  005954  C013  F015         	movff	abs@a,??_abs
  6323  005958  C014  F016         	movff	abs@a+1,??_abs+1
  6324  00595C  1E15               	comf	??_abs^0,f,c
  6325  00595E  1E16               	comf	(??_abs+1)^0,f,c
  6326  005960  4A15               	infsnz	??_abs^0,f,c
  6327  005962  2A16               	incf	(??_abs+1)^0,f,c
  6328  005964  C015  F013         	movff	??_abs,?_abs
  6329  005968  C016  F014         	movff	??_abs+1,?_abs+1
  6330  00596C  EFBC  F02C         	goto	l1374
  6331  005970                     l1371:
  6332  005970  C013  F013         	movff	abs@a,?_abs
  6333  005974  C014  F014         	movff	abs@a+1,?_abs+1
  6334  005978                     l1374:
  6335  005978  0012               	return		;funcret
  6336  00597A                     __end_of_abs:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function ___aomod *****************
  6340 ;; Defined at:
  6341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  dividend        8    0[COMRAM] long long 
  6344 ;;  divisor         8    8[COMRAM] long long 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  sign            1   17[COMRAM] unsigned char 
  6347 ;;  counter         1   16[COMRAM] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  8    0[COMRAM] long long 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6357 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;Total ram usage:       18 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; Hardware stack levels required when called: 1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_dtoa
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text23
  6372  00448A                     __ptext23:
  6373                           	callstack 0
  6374  00448A                     ___aomod:
  6375                           	callstack 23
  6376  00448A  0E00               	movlw	0
  6377  00448C  6E12               	movwf	___aomod@sign^0,c
  6378  00448E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6379  004490  EF4E  F022         	goto	u3060
  6380  004494  EF4C  F022         	goto	u3061
  6381  004498                     u3061:
  6382  004498  EF60  F022         	goto	l3464
  6383  00449C                     u3060:
  6384  00449C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6385  00449E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6386  0044A0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6387  0044A2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6388  0044A4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6389  0044A6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6390  0044A8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6391  0044AA  6C01               	negf	___aomod@dividend^0,c
  6392  0044AC  0E00               	movlw	0
  6393  0044AE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6394  0044B0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6395  0044B2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6396  0044B4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6397  0044B6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6398  0044B8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6399  0044BA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6400  0044BC  0E01               	movlw	1
  6401  0044BE  6E12               	movwf	___aomod@sign^0,c
  6402  0044C0                     l3464:
  6403  0044C0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6404  0044C2  EF67  F022         	goto	u3070
  6405  0044C6  EF65  F022         	goto	u3071
  6406  0044CA                     u3071:
  6407  0044CA  EF77  F022         	goto	l3468
  6408  0044CE                     u3070:
  6409  0044CE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6410  0044D0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6411  0044D2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6412  0044D4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6413  0044D6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6414  0044D8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6415  0044DA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6416  0044DC  6C09               	negf	___aomod@divisor^0,c
  6417  0044DE  0E00               	movlw	0
  6418  0044E0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6419  0044E2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6420  0044E4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6421  0044E6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6422  0044E8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6423  0044EA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6424  0044EC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6425  0044EE                     l3468:
  6426  0044EE  5009               	movf	___aomod@divisor^0,w,c
  6427  0044F0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6428  0044F2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6429  0044F4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6430  0044F6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6431  0044F8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6432  0044FA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6433  0044FC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6434  0044FE  B4D8               	btfsc	status,2,c
  6435  004500  EF84  F022         	goto	u3081
  6436  004504  EF86  F022         	goto	u3080
  6437  004508                     u3081:
  6438  004508  EFCE  F022         	goto	l3484
  6439  00450C                     u3080:
  6440  00450C  0E01               	movlw	1
  6441  00450E  6E11               	movwf	___aomod@counter^0,c
  6442  004510  EF94  F022         	goto	l3474
  6443  004514                     l3472:
  6444  004514  90D8               	bcf	status,0,c
  6445  004516  3609               	rlcf	___aomod@divisor^0,f,c
  6446  004518  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6447  00451A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6448  00451C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6449  00451E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6450  004520  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6451  004522  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6452  004524  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6453  004526  2A11               	incf	___aomod@counter^0,f,c
  6454  004528                     l3474:
  6455  004528  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6456  00452A  EF99  F022         	goto	u3091
  6457  00452E  EF9B  F022         	goto	u3090
  6458  004532                     u3091:
  6459  004532  EF8A  F022         	goto	l3472
  6460  004536                     u3090:
  6461  004536                     l3476:
  6462  004536  5009               	movf	___aomod@divisor^0,w,c
  6463  004538  5C01               	subwf	___aomod@dividend^0,w,c
  6464  00453A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6465  00453C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6466  00453E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6467  004540  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6468  004542  500C               	movf	(___aomod@divisor+3)^0,w,c
  6469  004544  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6470  004546  500D               	movf	(___aomod@divisor+4)^0,w,c
  6471  004548  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6472  00454A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6473  00454C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6474  00454E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6475  004550  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6476  004552  5010               	movf	(___aomod@divisor+7)^0,w,c
  6477  004554  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6478  004556  A0D8               	btfss	status,0,c
  6479  004558  EFB0  F022         	goto	u3101
  6480  00455C  EFB2  F022         	goto	u3100
  6481  004560                     u3101:
  6482  004560  EFC2  F022         	goto	l3480
  6483  004564                     u3100:
  6484  004564  5009               	movf	___aomod@divisor^0,w,c
  6485  004566  5E01               	subwf	___aomod@dividend^0,f,c
  6486  004568  500A               	movf	(___aomod@divisor+1)^0,w,c
  6487  00456A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6488  00456C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6489  00456E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6490  004570  500C               	movf	(___aomod@divisor+3)^0,w,c
  6491  004572  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6492  004574  500D               	movf	(___aomod@divisor+4)^0,w,c
  6493  004576  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6494  004578  500E               	movf	(___aomod@divisor+5)^0,w,c
  6495  00457A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6496  00457C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6497  00457E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6498  004580  5010               	movf	(___aomod@divisor+7)^0,w,c
  6499  004582  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6500  004584                     l3480:
  6501  004584  90D8               	bcf	status,0,c
  6502  004586  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6503  004588  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6504  00458A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6505  00458C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6506  00458E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6507  004590  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6508  004592  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6509  004594  3209               	rrcf	___aomod@divisor^0,f,c
  6510  004596  2E11               	decfsz	___aomod@counter^0,f,c
  6511  004598  EF9B  F022         	goto	l3476
  6512  00459C                     l3484:
  6513  00459C  5012               	movf	___aomod@sign^0,w,c
  6514  00459E  B4D8               	btfsc	status,2,c
  6515  0045A0  EFD4  F022         	goto	u3111
  6516  0045A4  EFD6  F022         	goto	u3110
  6517  0045A8                     u3111:
  6518  0045A8  EFE6  F022         	goto	l3488
  6519  0045AC                     u3110:
  6520  0045AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6521  0045AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6522  0045B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6523  0045B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6524  0045B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6525  0045B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6526  0045B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6527  0045BA  6C01               	negf	___aomod@dividend^0,c
  6528  0045BC  0E00               	movlw	0
  6529  0045BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6530  0045C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6531  0045C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6532  0045C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6533  0045C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6534  0045C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6535  0045CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6536  0045CC                     l3488:
  6537  0045CC  C001  F001         	movff	___aomod@dividend,?___aomod
  6538  0045D0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6539  0045D4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6540  0045D8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6541  0045DC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6542  0045E0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6543  0045E4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6544  0045E8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6545  0045EC  0012               	return		;funcret
  6546  0045EE                     __end_of___aomod:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function ___aodiv *****************
  6550 ;; Defined at:
  6551 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  dividend        8    0[COMRAM] long long 
  6554 ;;  divisor         8    8[COMRAM] long long 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  quotient        8   18[COMRAM] long long 
  6557 ;;  sign            1   17[COMRAM] unsigned char 
  6558 ;;  counter         1   16[COMRAM] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  8    0[COMRAM] long long 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6568 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;Total ram usage:       26 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_dtoa
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text24
  6583  004302                     __ptext24:
  6584                           	callstack 0
  6585  004302                     ___aodiv:
  6586                           	callstack 23
  6587  004302  0E00               	movlw	0
  6588  004304  6E12               	movwf	___aodiv@sign^0,c
  6589  004306  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6590  004308  EF8A  F021         	goto	u2990
  6591  00430C  EF88  F021         	goto	u2991
  6592  004310                     u2991:
  6593  004310  EF9C  F021         	goto	l3420
  6594  004314                     u2990:
  6595  004314  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6596  004316  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6597  004318  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6598  00431A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6599  00431C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6600  00431E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6601  004320  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6602  004322  6C09               	negf	___aodiv@divisor^0,c
  6603  004324  0E00               	movlw	0
  6604  004326  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6605  004328  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6606  00432A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6607  00432C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6608  00432E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6609  004330  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6610  004332  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6611  004334  0E01               	movlw	1
  6612  004336  6E12               	movwf	___aodiv@sign^0,c
  6613  004338                     l3420:
  6614  004338  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6615  00433A  EFA3  F021         	goto	u3000
  6616  00433E  EFA1  F021         	goto	u3001
  6617  004342                     u3001:
  6618  004342  EFB5  F021         	goto	l3426
  6619  004346                     u3000:
  6620  004346  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6621  004348  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6622  00434A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6623  00434C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6624  00434E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6625  004350  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6626  004352  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6627  004354  6C01               	negf	___aodiv@dividend^0,c
  6628  004356  0E00               	movlw	0
  6629  004358  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6630  00435A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6631  00435C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6632  00435E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6633  004360  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6634  004362  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6635  004364  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6636  004366  0E01               	movlw	1
  6637  004368  1A12               	xorwf	___aodiv@sign^0,f,c
  6638  00436A                     l3426:
  6639  00436A  EE20  F013         	lfsr	2,___aodiv@quotient
  6640  00436E  0E07               	movlw	7
  6641  004370                     u3011:
  6642  004370  6ADE               	clrf	postinc2,c
  6643  004372  06E8               	decf	wreg,f,c
  6644  004374  E2FD               	bc	u3011
  6645  004376  5009               	movf	___aodiv@divisor^0,w,c
  6646  004378  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6647  00437A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6648  00437C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6649  00437E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6650  004380  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6651  004382  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6652  004384  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6653  004386  B4D8               	btfsc	status,2,c
  6654  004388  EFC8  F021         	goto	u3021
  6655  00438C  EFCA  F021         	goto	u3020
  6656  004390                     u3021:
  6657  004390  EF1C  F022         	goto	l3448
  6658  004394                     u3020:
  6659  004394  0E01               	movlw	1
  6660  004396  6E11               	movwf	___aodiv@counter^0,c
  6661  004398  EFD8  F021         	goto	l3434
  6662  00439C                     l3432:
  6663  00439C  90D8               	bcf	status,0,c
  6664  00439E  3609               	rlcf	___aodiv@divisor^0,f,c
  6665  0043A0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6666  0043A2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6667  0043A4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6668  0043A6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6669  0043A8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6670  0043AA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6671  0043AC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6672  0043AE  2A11               	incf	___aodiv@counter^0,f,c
  6673  0043B0                     l3434:
  6674  0043B0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6675  0043B2  EFDD  F021         	goto	u3031
  6676  0043B6  EFDF  F021         	goto	u3030
  6677  0043BA                     u3031:
  6678  0043BA  EFCE  F021         	goto	l3432
  6679  0043BE                     u3030:
  6680  0043BE                     l3436:
  6681  0043BE  90D8               	bcf	status,0,c
  6682  0043C0  3613               	rlcf	___aodiv@quotient^0,f,c
  6683  0043C2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6684  0043C4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6685  0043C6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6686  0043C8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6687  0043CA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6688  0043CC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6689  0043CE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6690  0043D0  5009               	movf	___aodiv@divisor^0,w,c
  6691  0043D2  5C01               	subwf	___aodiv@dividend^0,w,c
  6692  0043D4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6693  0043D6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6694  0043D8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6695  0043DA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6696  0043DC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6697  0043DE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6698  0043E0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6699  0043E2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6700  0043E4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6701  0043E6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6702  0043E8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6703  0043EA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6704  0043EC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6705  0043EE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6706  0043F0  A0D8               	btfss	status,0,c
  6707  0043F2  EFFD  F021         	goto	u3041
  6708  0043F6  EFFF  F021         	goto	u3040
  6709  0043FA                     u3041:
  6710  0043FA  EF10  F022         	goto	l3444
  6711  0043FE                     u3040:
  6712  0043FE  5009               	movf	___aodiv@divisor^0,w,c
  6713  004400  5E01               	subwf	___aodiv@dividend^0,f,c
  6714  004402  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6715  004404  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6716  004406  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6717  004408  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6718  00440A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6719  00440C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6720  00440E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6721  004410  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6722  004412  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6723  004414  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6724  004416  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6725  004418  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6726  00441A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6727  00441C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6728  00441E  8013               	bsf	___aodiv@quotient^0,0,c
  6729  004420                     l3444:
  6730  004420  90D8               	bcf	status,0,c
  6731  004422  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6732  004424  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6733  004426  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6734  004428  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6735  00442A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6736  00442C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6737  00442E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6738  004430  3209               	rrcf	___aodiv@divisor^0,f,c
  6739  004432  2E11               	decfsz	___aodiv@counter^0,f,c
  6740  004434  EFDF  F021         	goto	l3436
  6741  004438                     l3448:
  6742  004438  5012               	movf	___aodiv@sign^0,w,c
  6743  00443A  B4D8               	btfsc	status,2,c
  6744  00443C  EF22  F022         	goto	u3051
  6745  004440  EF24  F022         	goto	u3050
  6746  004444                     u3051:
  6747  004444  EF34  F022         	goto	l3452
  6748  004448                     u3050:
  6749  004448  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6750  00444A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6751  00444C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6752  00444E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6753  004450  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6754  004452  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6755  004454  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6756  004456  6C13               	negf	___aodiv@quotient^0,c
  6757  004458  0E00               	movlw	0
  6758  00445A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6759  00445C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6760  00445E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6761  004460  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6762  004462  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6763  004464  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6764  004466  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6765  004468                     l3452:
  6766  004468  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6767  00446C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6768  004470  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6769  004474  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6770  004478  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6771  00447C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6772  004480  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6773  004484  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6774  004488  0012               	return		;funcret
  6775  00448A                     __end_of___aodiv:
  6776                           	callstack 0
  6777                           
  6778 ;; *************** function _sendStringSerial4 *****************
  6779 ;; Defined at:
  6780 ;;		line 35 in file "serial.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  string          2    1[COMRAM] PTR unsigned char 
  6783 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used: 1
  6801 ;; Hardware stack levels required when called: 2
  6802 ;; This function calls:
  6803 ;;		_sendCharSerial4
  6804 ;; This function is called by:
  6805 ;;		_color_display
  6806 ;;		_color_predict
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text25
  6811  005AC2                     __ptext25:
  6812                           	callstack 0
  6813  005AC2                     _sendStringSerial4:
  6814                           	callstack 26
  6815  005AC2                     
  6816                           ;serial.c: 37:     while(*string != 0){
  6817  005AC2  EF6C  F02D         	goto	l4164
  6818  005AC6                     l4160:
  6819                           
  6820                           ;serial.c: 38:   sendCharSerial4(*string++);}
  6821  005AC6  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6822  005ACA  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6823  005ACE  50DF               	movf	indf2,w,c
  6824  005AD0  EC4A  F02E         	call	_sendCharSerial4
  6825  005AD4  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6826  005AD6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6827  005AD8                     l4164:
  6828                           
  6829                           ;serial.c: 37:     while(*string != 0){
  6830  005AD8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6831  005ADC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6832  005AE0  50DF               	movf	indf2,w,c
  6833  005AE2  A4D8               	btfss	status,2,c
  6834  005AE4  EF76  F02D         	goto	u4201
  6835  005AE8  EF78  F02D         	goto	u4200
  6836  005AEC                     u4201:
  6837  005AEC  EF63  F02D         	goto	l4160
  6838  005AF0                     u4200:
  6839  005AF0  0012               	return		;funcret
  6840  005AF2                     __end_of_sendStringSerial4:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _sendCharSerial4 *****************
  6844 ;; Defined at:
  6845 ;;		line 29 in file "serial.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  charToSend      1    wreg     unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  charToSend      1    0[COMRAM] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      void 
  6852 ;; Registers used:
  6853 ;;		wreg
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;Total ram usage:        1 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_sendStringSerial4
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text26
  6874  005C94                     __ptext26:
  6875                           	callstack 0
  6876  005C94                     _sendCharSerial4:
  6877                           	callstack 26
  6878                           
  6879                           ;incstack = 0
  6880                           ;sendCharSerial4@charToSend stored from wreg
  6881  005C94  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6882  005C96                     l337:
  6883  005C96  010E               	movlb	14	; () banked
  6884  005C98  A537               	btfss	55,2,b	;volatile
  6885  005C9A  EF51  F02E         	goto	u3931
  6886  005C9E  EF53  F02E         	goto	u3930
  6887  005CA2                     u3931:
  6888  005CA2  EF4B  F02E         	goto	l337
  6889  005CA6                     u3930:
  6890  005CA6                     
  6891                           ; BSR set to: 14
  6892                           ;serial.c: 31:     TX4REG = charToSend;
  6893  005CA6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6894  005CAA                     
  6895                           ; BSR set to: 14
  6896  005CAA  0012               	return		;funcret
  6897  005CAC                     __end_of_sendCharSerial4:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _short_burst *****************
  6901 ;; Defined at:
  6902 ;;		line 7 in file "movement.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6905 ;;		 -> main@motorL(9), 
  6906 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6907 ;;		 -> main@motorR(9), 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;Total ram usage:        6 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 4
  6926 ;; This function calls:
  6927 ;;		_fullSpeedAhead
  6928 ;;		_stop
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text27
  6935  005874                     __ptext27:
  6936                           	callstack 0
  6937  005874                     _short_burst:
  6938                           	callstack 26
  6939  005874                     
  6940                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  6941  005874  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  6942  005878  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  6943  00587C  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  6944  005880  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  6945  005884  EC12  F029         	call	_fullSpeedAhead	;wreg free
  6946  005888                     
  6947                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  6948  005888  0E21               	movlw	33
  6949  00588A  6E25               	movwf	(??_short_burst+1)^0,c
  6950  00588C  0E78               	movlw	120
  6951  00588E  6E24               	movwf	??_short_burst^0,c
  6952  005890  0E98               	movlw	152
  6953  005892                     u6027:
  6954  005892  2EE8               	decfsz	wreg,f,c
  6955  005894  D7FE               	bra	u6027
  6956  005896  2E24               	decfsz	??_short_burst^0,f,c
  6957  005898  D7FC               	bra	u6027
  6958  00589A  2E25               	decfsz	(??_short_burst+1)^0,f,c
  6959  00589C  D7FA               	bra	u6027
  6960  00589E  D000               	nop2	
  6961  0058A0                     
  6962                           ;movement.c: 11:     stop(mL,mR);
  6963  0058A0  C020  F01A         	movff	short_burst@mL,stop@mL
  6964  0058A4  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  6965  0058A8  C022  F01C         	movff	short_burst@mR,stop@mR
  6966  0058AC  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  6967  0058B0  ECD6  F029         	call	_stop	;wreg free
  6968  0058B4  0012               	return		;funcret
  6969  0058B6                     __end_of_short_burst:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _setup *****************
  6973 ;; Defined at:
  6974 ;;		line 6 in file "test_and_calibration.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  white           2    0[BANK0 ] PTR struct white_card
  6977 ;;		 -> main@white(28), 
  6978 ;;  amb             2    2[BANK0 ] PTR struct color_rgb
  6979 ;;		 -> main@amb(8), 
  6980 ;;  mL              2    4[BANK0 ] PTR struct DC_motor
  6981 ;;		 -> main@motorL(9), 
  6982 ;;  mR              2    6[BANK0 ] PTR struct DC_motor
  6983 ;;		 -> main@motorR(9), 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  amb_light       2    8[BANK0 ] unsigned int 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2    0[BANK0 ] unsigned int 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6995 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;Total ram usage:       12 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 7
  7002 ;; This function calls:
  7003 ;;		_LED_OFF
  7004 ;;		_amb_light_measure
  7005 ;;		_calibrate_white
  7006 ;;		_calibration_motor
  7007 ;; This function is called by:
  7008 ;;		_main
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text28
  7013  004742                     __ptext28:
  7014                           	callstack 0
  7015  004742                     _setup:
  7016                           	callstack 23
  7017  004742                     
  7018                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7019  004742  0E00               	movlw	0
  7020  004744  0100               	movlb	0	; () banked
  7021  004746  6F69               	movwf	(setup@amb_light+1)& (0+255),b
  7022  004748  0E00               	movlw	0
  7023  00474A  6F68               	movwf	setup@amb_light& (0+255),b
  7024  00474C                     
  7025                           ; BSR set to: 0
  7026                           ;test_and_calibration.c: 9:     LED_OFF();
  7027  00474C  ECDC  F02D         	call	_LED_OFF	;wreg free
  7028  004750                     
  7029                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7030  004750  8E7C               	bsf	124,7,c	;volatile
  7031  004752                     
  7032                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7033  004752  8680               	bsf	128,3,c	;volatile
  7034  004754                     l557:
  7035  004754  B48E               	btfsc	142,2,c	;volatile
  7036  004756  EFAF  F023         	goto	u5511
  7037  00475A  EFB1  F023         	goto	u5510
  7038  00475E                     u5511:
  7039  00475E  EFAA  F023         	goto	l557
  7040  004762                     u5510:
  7041  004762                     
  7042                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7043  004762  B48E               	btfsc	142,2,c	;volatile
  7044  004764  EFB6  F023         	goto	u5521
  7045  004768  EFB8  F023         	goto	u5520
  7046  00476C                     u5521:
  7047  00476C  EFCB  F023         	goto	l561
  7048  004770                     u5520:
  7049  004770  C060  F00C         	movff	setup@white,calibrate_white@w
  7050  004774  C061  F00D         	movff	setup@white+1,calibrate_white@w+1
  7051  004778  EC27  F01C         	call	_calibrate_white	;wreg free
  7052  00477C  9E7C               	bcf	124,7,c	;volatile
  7053  00477E  0E29               	movlw	41
  7054  004780  6E5D               	movwf	(??_setup+1)^0,c
  7055  004782  0E96               	movlw	150
  7056  004784  6E5C               	movwf	??_setup^0,c
  7057  004786  0E7F               	movlw	127
  7058  004788                     u6037:
  7059  004788  2EE8               	decfsz	wreg,f,c
  7060  00478A  D7FE               	bra	u6037
  7061  00478C  2E5C               	decfsz	??_setup^0,f,c
  7062  00478E  D7FC               	bra	u6037
  7063  004790  2E5D               	decfsz	(??_setup+1)^0,f,c
  7064  004792  D7FA               	bra	u6037
  7065  004794  F000               	nop	
  7066  004796                     l561:
  7067  004796  B68E               	btfsc	142,3,c	;volatile
  7068  004798  EFD0  F023         	goto	u5531
  7069  00479C  EFD2  F023         	goto	u5530
  7070  0047A0                     u5531:
  7071  0047A0  EFCB  F023         	goto	l561
  7072  0047A4                     u5530:
  7073  0047A4                     
  7074                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7075  0047A4  B68E               	btfsc	142,3,c	;volatile
  7076  0047A6  EFD7  F023         	goto	u5541
  7077  0047AA  EFD9  F023         	goto	u5540
  7078  0047AE                     u5541:
  7079  0047AE  EF11  F024         	goto	l5112
  7080  0047B2                     u5540:
  7081  0047B2  C062  F050         	movff	setup@amb,amb_light_measure@amb
  7082  0047B6  C063  F051         	movff	setup@amb+1,amb_light_measure@amb+1
  7083  0047BA  ECE2  F024         	call	_amb_light_measure	;wreg free
  7084  0047BE  C050  F068         	movff	?_amb_light_measure,setup@amb_light
  7085  0047C2  C051  F069         	movff	?_amb_light_measure+1,setup@amb_light+1
  7086  0047C6  9680               	bcf	128,3,c	;volatile
  7087  0047C8  0E29               	movlw	41
  7088  0047CA  6E5D               	movwf	(??_setup+1)^0,c
  7089  0047CC  0E96               	movlw	150
  7090  0047CE  6E5C               	movwf	??_setup^0,c
  7091  0047D0  0E7F               	movlw	127
  7092  0047D2                     u6047:
  7093  0047D2  2EE8               	decfsz	wreg,f,c
  7094  0047D4  D7FE               	bra	u6047
  7095  0047D6  2E5C               	decfsz	??_setup^0,f,c
  7096  0047D8  D7FC               	bra	u6047
  7097  0047DA  2E5D               	decfsz	(??_setup+1)^0,f,c
  7098  0047DC  D7FA               	bra	u6047
  7099  0047DE  F000               	nop	
  7100  0047E0  EF11  F024         	goto	l5112
  7101  0047E4                     l567:
  7102  0047E4  8E7C               	bsf	124,7,c	;volatile
  7103  0047E6  A680               	btfss	128,3,c	;volatile
  7104  0047E8  EFF8  F023         	goto	u5551
  7105  0047EC  EFFC  F023         	goto	u5550
  7106  0047F0                     u5551:
  7107  0047F0  6A5C               	clrf	??_setup^0,c
  7108  0047F2  2A5C               	incf	??_setup^0,f,c
  7109  0047F4  EFFD  F023         	goto	u5568
  7110  0047F8                     u5550:
  7111  0047F8  6A5C               	clrf	??_setup^0,c
  7112  0047FA                     u5568:
  7113  0047FA  465C               	rlncf	??_setup^0,f,c
  7114  0047FC  465C               	rlncf	??_setup^0,f,c
  7115  0047FE  465C               	rlncf	??_setup^0,f,c
  7116  004800  5080               	movf	128,w,c	;volatile
  7117  004802  185C               	xorwf	??_setup^0,w,c
  7118  004804  0BF7               	andlw	-9
  7119  004806  185C               	xorwf	??_setup^0,w,c
  7120  004808  6E80               	movwf	128,c	;volatile
  7121  00480A  0E11               	movlw	17
  7122  00480C  6E5D               	movwf	(??_setup+1)^0,c
  7123  00480E  0E3C               	movlw	60
  7124  004810  6E5C               	movwf	??_setup^0,c
  7125  004812  0ECB               	movlw	203
  7126  004814                     u6057:
  7127  004814  2EE8               	decfsz	wreg,f,c
  7128  004816  D7FE               	bra	u6057
  7129  004818  2E5C               	decfsz	??_setup^0,f,c
  7130  00481A  D7FC               	bra	u6057
  7131  00481C  2E5D               	decfsz	(??_setup+1)^0,f,c
  7132  00481E  D7FA               	bra	u6057
  7133  004820  F000               	nop	
  7134  004822                     l5112:
  7135  004822  A68E               	btfss	142,3,c	;volatile
  7136  004824  EF16  F024         	goto	u5571
  7137  004828  EF18  F024         	goto	u5570
  7138  00482C                     u5571:
  7139  00482C  EF1F  F024         	goto	l570
  7140  004830                     u5570:
  7141  004830  B48E               	btfsc	142,2,c	;volatile
  7142  004832  EF1D  F024         	goto	u5581
  7143  004836  EF1F  F024         	goto	u5580
  7144  00483A                     u5581:
  7145  00483A  EFF2  F023         	goto	l567
  7146  00483E                     u5580:
  7147  00483E                     l570:
  7148                           
  7149                           ;test_and_calibration.c: 20:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7150  00483E  B68E               	btfsc	142,3,c	;volatile
  7151  004840  EF24  F024         	goto	u5591
  7152  004844  EF26  F024         	goto	u5590
  7153  004848                     u5591:
  7154  004848  EF31  F024         	goto	l5120
  7155  00484C                     u5590:
  7156  00484C  C064  F033         	movff	setup@mL,calibration_motor@mL
  7157  004850  C065  F034         	movff	setup@mL+1,calibration_motor@mL+1
  7158  004854  C066  F035         	movff	setup@mR,calibration_motor@mR
  7159  004858  C067  F036         	movff	setup@mR+1,calibration_motor@mR+1
  7160  00485C  ECFC  F026         	call	_calibration_motor	;wreg free
  7161  004860  9E7C               	bcf	124,7,c	;volatile
  7162  004862                     l5120:
  7163                           
  7164                           ;test_and_calibration.c: 21:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7165  004862  B48E               	btfsc	142,2,c	;volatile
  7166  004864  EF36  F024         	goto	u5601
  7167  004868  EF38  F024         	goto	u5600
  7168  00486C                     u5601:
  7169  00486C  EF11  F024         	goto	l5112
  7170  004870                     u5600:
  7171  004870  9E7C               	bcf	124,7,c	;volatile
  7172  004872  9680               	bcf	128,3,c	;volatile
  7173  004874  0E29               	movlw	41
  7174  004876  6E5D               	movwf	(??_setup+1)^0,c
  7175  004878  0E96               	movlw	150
  7176  00487A  6E5C               	movwf	??_setup^0,c
  7177  00487C  0E7F               	movlw	127
  7178  00487E                     u6067:
  7179  00487E  2EE8               	decfsz	wreg,f,c
  7180  004880  D7FE               	bra	u6067
  7181  004882  2E5C               	decfsz	??_setup^0,f,c
  7182  004884  D7FC               	bra	u6067
  7183  004886  2E5D               	decfsz	(??_setup+1)^0,f,c
  7184  004888  D7FA               	bra	u6067
  7185  00488A  F000               	nop	
  7186  00488C  C068  F060         	movff	setup@amb_light,?_setup
  7187  004890  C069  F061         	movff	setup@amb_light+1,?_setup+1
  7188  004894  0012               	return		;funcret
  7189  004896                     __end_of_setup:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _calibration_motor *****************
  7193 ;; Defined at:
  7194 ;;		line 93 in file "test_and_calibration.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  7197 ;;		 -> main@motorL(9), 
  7198 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  7199 ;;		 -> main@motorR(9), 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      void 
  7204 ;; Registers used:
  7205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7215 ;;Total ram usage:        6 bytes
  7216 ;; Hardware stack levels used: 1
  7217 ;; Hardware stack levels required when called: 6
  7218 ;; This function calls:
  7219 ;;		_test_action
  7220 ;; This function is called by:
  7221 ;;		_setup
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text29
  7226  004DF8                     __ptext29:
  7227                           	callstack 0
  7228  004DF8                     _calibration_motor:
  7229                           	callstack 23
  7230  004DF8                     l600:
  7231                           
  7232                           ;test_and_calibration.c: 96:         LATDbits.LATD7 = 1;
  7233  004DF8  8E7C               	bsf	124,7,c	;volatile
  7234                           
  7235                           ;test_and_calibration.c: 97:         LATHbits.LATH3 = 1;
  7236  004DFA  8680               	bsf	128,3,c	;volatile
  7237                           
  7238                           ;test_and_calibration.c: 98:         if (!PORTFbits.RF2) {
  7239  004DFC  B48E               	btfsc	142,2,c	;volatile
  7240  004DFE  EF03  F027         	goto	u5441
  7241  004E02  EF05  F027         	goto	u5440
  7242  004E06                     u5441:
  7243  004E06  EF31  F027         	goto	l601
  7244  004E0A                     u5440:
  7245  004E0A                     
  7246                           ;test_and_calibration.c: 99:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  7247  004E0A  0E19               	movlw	25
  7248  004E0C  6E38               	movwf	(??_calibration_motor+1)^0,c
  7249  004E0E  0E5A               	movlw	90
  7250  004E10  6E37               	movwf	??_calibration_motor^0,c
  7251  004E12  0EB2               	movlw	178
  7252  004E14                     u6077:
  7253  004E14  2EE8               	decfsz	wreg,f,c
  7254  004E16  D7FE               	bra	u6077
  7255  004E18  2E37               	decfsz	??_calibration_motor^0,f,c
  7256  004E1A  D7FC               	bra	u6077
  7257  004E1C  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7258  004E1E  D7FA               	bra	u6077
  7259  004E20                     
  7260                           ;test_and_calibration.c: 100:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7261  004E20  B48E               	btfsc	142,2,c	;volatile
  7262  004E22  EF15  F027         	goto	u5451
  7263  004E26  EF17  F027         	goto	u5450
  7264  004E2A                     u5451:
  7265  004E2A  EF28  F027         	goto	l4996
  7266  004E2E                     u5450:
  7267  004E2E  9E7C               	bcf	124,7,c	;volatile
  7268  004E30  0E19               	movlw	25
  7269  004E32  6E38               	movwf	(??_calibration_motor+1)^0,c
  7270  004E34  0E5A               	movlw	90
  7271  004E36  6E37               	movwf	??_calibration_motor^0,c
  7272  004E38  0EB2               	movlw	178
  7273  004E3A                     u6087:
  7274  004E3A  2EE8               	decfsz	wreg,f,c
  7275  004E3C  D7FE               	bra	u6087
  7276  004E3E  2E37               	decfsz	??_calibration_motor^0,f,c
  7277  004E40  D7FC               	bra	u6087
  7278  004E42  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7279  004E44  D7FA               	bra	u6087
  7280  004E46  0E05               	movlw	5
  7281  004E48  0100               	movlb	0	; () banked
  7282  004E4A  27FC               	addwf	_SENSITIVITY& (0+255),f,b
  7283  004E4C  0E00               	movlw	0
  7284  004E4E  23FD               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7285  004E50                     l4996:
  7286                           
  7287                           ;test_and_calibration.c: 101:             if (!PORTFbits.RF3){break;}
  7288  004E50  B68E               	btfsc	142,3,c	;volatile
  7289  004E52  EF2D  F027         	goto	u5461
  7290  004E56  EF2F  F027         	goto	u5460
  7291  004E5A                     u5461:
  7292  004E5A  EF31  F027         	goto	l601
  7293  004E5E                     u5460:
  7294  004E5E  EF66  F027         	goto	l604
  7295  004E62                     l601:
  7296                           
  7297                           ;test_and_calibration.c: 103:         if (!PORTFbits.RF3) {
  7298  004E62  B68E               	btfsc	142,3,c	;volatile
  7299  004E64  EF36  F027         	goto	u5471
  7300  004E68  EF38  F027         	goto	u5470
  7301  004E6C                     u5471:
  7302  004E6C  EFFC  F026         	goto	l600
  7303  004E70                     u5470:
  7304  004E70                     
  7305                           ;test_and_calibration.c: 104:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7306  004E70  0E19               	movlw	25
  7307  004E72  6E38               	movwf	(??_calibration_motor+1)^0,c
  7308  004E74  0E5A               	movlw	90
  7309  004E76  6E37               	movwf	??_calibration_motor^0,c
  7310  004E78  0EB2               	movlw	178
  7311  004E7A                     u6097:
  7312  004E7A  2EE8               	decfsz	wreg,f,c
  7313  004E7C  D7FE               	bra	u6097
  7314  004E7E  2E37               	decfsz	??_calibration_motor^0,f,c
  7315  004E80  D7FC               	bra	u6097
  7316  004E82  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7317  004E84  D7FA               	bra	u6097
  7318  004E86                     
  7319                           ;test_and_calibration.c: 105:             if (!PORTFbits.RF2){break;}
  7320  004E86  B48E               	btfsc	142,2,c	;volatile
  7321  004E88  EF48  F027         	goto	u5481
  7322  004E8C  EF4A  F027         	goto	u5480
  7323  004E90                     u5481:
  7324  004E90  EF4C  F027         	goto	l606
  7325  004E94                     u5480:
  7326  004E94  EF66  F027         	goto	l604
  7327  004E98                     l606:
  7328                           
  7329                           ;test_and_calibration.c: 106:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7330  004E98  B68E               	btfsc	142,3,c	;volatile
  7331  004E9A  EF51  F027         	goto	u5491
  7332  004E9E  EF53  F027         	goto	u5490
  7333  004EA2                     u5491:
  7334  004EA2  EFFC  F026         	goto	l600
  7335  004EA6                     u5490:
  7336  004EA6  9680               	bcf	128,3,c	;volatile
  7337  004EA8  0E19               	movlw	25
  7338  004EAA  6E38               	movwf	(??_calibration_motor+1)^0,c
  7339  004EAC  0E5A               	movlw	90
  7340  004EAE  6E37               	movwf	??_calibration_motor^0,c
  7341  004EB0  0EB2               	movlw	178
  7342  004EB2                     u6107:
  7343  004EB2  2EE8               	decfsz	wreg,f,c
  7344  004EB4  D7FE               	bra	u6107
  7345  004EB6  2E37               	decfsz	??_calibration_motor^0,f,c
  7346  004EB8  D7FC               	bra	u6107
  7347  004EBA  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7348  004EBC  D7FA               	bra	u6107
  7349  004EBE  0E05               	movlw	5
  7350  004EC0  0100               	movlb	0	; () banked
  7351  004EC2  5FFC               	subwf	_SENSITIVITY& (0+255),f,b
  7352  004EC4  0E00               	movlw	0
  7353  004EC6  5BFD               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7354  004EC8  EFFC  F026         	goto	l600
  7355  004ECC                     l604:
  7356                           
  7357                           ;test_and_calibration.c: 109:     LATDbits.LATD7 = 0;
  7358  004ECC  9E7C               	bcf	124,7,c	;volatile
  7359                           
  7360                           ;test_and_calibration.c: 110:     LATHbits.LATH3 = 0;
  7361  004ECE  9680               	bcf	128,3,c	;volatile
  7362  004ED0                     
  7363                           ;test_and_calibration.c: 111:     test_action(mL, mR);
  7364  004ED0  C033  F02D         	movff	calibration_motor@mL,test_action@mL
  7365  004ED4  C034  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7366  004ED8  C035  F02F         	movff	calibration_motor@mR,test_action@mR
  7367  004EDC  C036  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7368  004EE0  EC4B  F024         	call	_test_action	;wreg free
  7369  004EE4  0012               	return		;funcret
  7370  004EE6                     __end_of_calibration_motor:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _test_action *****************
  7374 ;; Defined at:
  7375 ;;		line 28 in file "test_and_calibration.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7378 ;;		 -> main@motorL(9), 
  7379 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7380 ;;		 -> main@motorR(9), 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;Total ram usage:        6 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 5
  7399 ;; This function calls:
  7400 ;;		_fullSpeedAhead
  7401 ;;		_stop
  7402 ;;		_turn45
  7403 ;; This function is called by:
  7404 ;;		_test_function
  7405 ;;		_calibration_motor
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text30
  7410  004896                     __ptext30:
  7411                           	callstack 0
  7412  004896                     _test_action:
  7413                           	callstack 24
  7414  004896                     
  7415                           ;test_and_calibration.c: 28: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 29: {;test_and_calibration.c: 30:     stop(mL,mR);
  7416  004896  C02D  F01A         	movff	test_action@mL,stop@mL
  7417  00489A  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7418  00489E  C02F  F01C         	movff	test_action@mR,stop@mR
  7419  0048A2  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7420  0048A6  ECD6  F029         	call	_stop	;wreg free
  7421  0048AA                     
  7422                           ;test_and_calibration.c: 31:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7423  0048AA  0EA3               	movlw	163
  7424  0048AC  6E32               	movwf	(??_test_action+1)^0,c
  7425  0048AE  0E57               	movlw	87
  7426  0048B0  6E31               	movwf	??_test_action^0,c
  7427  0048B2  0E02               	movlw	2
  7428  0048B4                     u6117:
  7429  0048B4  2EE8               	decfsz	wreg,f,c
  7430  0048B6  D7FE               	bra	u6117
  7431  0048B8  2E31               	decfsz	??_test_action^0,f,c
  7432  0048BA  D7FC               	bra	u6117
  7433  0048BC  2E32               	decfsz	(??_test_action+1)^0,f,c
  7434  0048BE  D7FA               	bra	u6117
  7435  0048C0  D000               	nop2	
  7436  0048C2                     
  7437                           ;test_and_calibration.c: 32:     turn45(mL,mR,8,1);
  7438  0048C2  C02D  F020         	movff	test_action@mL,turn45@mL
  7439  0048C6  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7440  0048CA  C02F  F022         	movff	test_action@mR,turn45@mR
  7441  0048CE  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7442  0048D2  0E08               	movlw	8
  7443  0048D4  6E24               	movwf	turn45@turn_time^0,c
  7444  0048D6  0E01               	movlw	1
  7445  0048D8  6E25               	movwf	turn45@direction^0,c
  7446  0048DA  ECA9  F020         	call	_turn45	;wreg free
  7447  0048DE                     
  7448                           ;test_and_calibration.c: 33:     stop(mL,mR);
  7449  0048DE  C02D  F01A         	movff	test_action@mL,stop@mL
  7450  0048E2  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7451  0048E6  C02F  F01C         	movff	test_action@mR,stop@mR
  7452  0048EA  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7453  0048EE  ECD6  F029         	call	_stop	;wreg free
  7454  0048F2                     
  7455                           ;test_and_calibration.c: 34:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7456  0048F2  0EA3               	movlw	163
  7457  0048F4  6E32               	movwf	(??_test_action+1)^0,c
  7458  0048F6  0E57               	movlw	87
  7459  0048F8  6E31               	movwf	??_test_action^0,c
  7460  0048FA  0E02               	movlw	2
  7461  0048FC                     u6127:
  7462  0048FC  2EE8               	decfsz	wreg,f,c
  7463  0048FE  D7FE               	bra	u6127
  7464  004900  2E31               	decfsz	??_test_action^0,f,c
  7465  004902  D7FC               	bra	u6127
  7466  004904  2E32               	decfsz	(??_test_action+1)^0,f,c
  7467  004906  D7FA               	bra	u6127
  7468  004908  D000               	nop2	
  7469                           
  7470                           ;test_and_calibration.c: 35:     turn45(mL,mR,8,2);
  7471  00490A  C02D  F020         	movff	test_action@mL,turn45@mL
  7472  00490E  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7473  004912  C02F  F022         	movff	test_action@mR,turn45@mR
  7474  004916  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7475  00491A  0E08               	movlw	8
  7476  00491C  6E24               	movwf	turn45@turn_time^0,c
  7477  00491E  0E02               	movlw	2
  7478  004920  6E25               	movwf	turn45@direction^0,c
  7479  004922  ECA9  F020         	call	_turn45	;wreg free
  7480                           
  7481                           ;test_and_calibration.c: 36:     fullSpeedAhead(mL,mR);
  7482  004926  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7483  00492A  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7484  00492E  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7485  004932  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7486  004936  EC12  F029         	call	_fullSpeedAhead	;wreg free
  7487  00493A                     
  7488                           ;test_and_calibration.c: 37:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7489  00493A  0EF4               	movlw	244
  7490  00493C  6E32               	movwf	(??_test_action+1)^0,c
  7491  00493E  0E82               	movlw	130
  7492  004940  6E31               	movwf	??_test_action^0,c
  7493  004942  0E05               	movlw	5
  7494  004944                     u6137:
  7495  004944  2EE8               	decfsz	wreg,f,c
  7496  004946  D7FE               	bra	u6137
  7497  004948  2E31               	decfsz	??_test_action^0,f,c
  7498  00494A  D7FC               	bra	u6137
  7499  00494C  2E32               	decfsz	(??_test_action+1)^0,f,c
  7500  00494E  D7FA               	bra	u6137
  7501  004950  F000               	nop	
  7502  004952                     
  7503                           ;test_and_calibration.c: 38:     stop(mL,mR);
  7504  004952  C02D  F01A         	movff	test_action@mL,stop@mL
  7505  004956  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7506  00495A  C02F  F01C         	movff	test_action@mR,stop@mR
  7507  00495E  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7508  004962  ECD6  F029         	call	_stop	;wreg free
  7509  004966                     
  7510                           ;test_and_calibration.c: 39:     turn45(mL,mR,4,1);
  7511  004966  C02D  F020         	movff	test_action@mL,turn45@mL
  7512  00496A  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7513  00496E  C02F  F022         	movff	test_action@mR,turn45@mR
  7514  004972  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7515  004976  0E04               	movlw	4
  7516  004978  6E24               	movwf	turn45@turn_time^0,c
  7517  00497A  0E01               	movlw	1
  7518  00497C  6E25               	movwf	turn45@direction^0,c
  7519  00497E  ECA9  F020         	call	_turn45	;wreg free
  7520  004982                     
  7521                           ;test_and_calibration.c: 40:     fullSpeedAhead(mL,mR);
  7522  004982  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7523  004986  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7524  00498A  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7525  00498E  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7526  004992  EC12  F029         	call	_fullSpeedAhead	;wreg free
  7527                           
  7528                           ;test_and_calibration.c: 41:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7529  004996  0EF4               	movlw	244
  7530  004998  6E32               	movwf	(??_test_action+1)^0,c
  7531  00499A  0E82               	movlw	130
  7532  00499C  6E31               	movwf	??_test_action^0,c
  7533  00499E  0E05               	movlw	5
  7534  0049A0                     u6147:
  7535  0049A0  2EE8               	decfsz	wreg,f,c
  7536  0049A2  D7FE               	bra	u6147
  7537  0049A4  2E31               	decfsz	??_test_action^0,f,c
  7538  0049A6  D7FC               	bra	u6147
  7539  0049A8  2E32               	decfsz	(??_test_action+1)^0,f,c
  7540  0049AA  D7FA               	bra	u6147
  7541  0049AC  F000               	nop	
  7542  0049AE                     
  7543                           ;test_and_calibration.c: 42:     stop(mL,mR);
  7544  0049AE  C02D  F01A         	movff	test_action@mL,stop@mL
  7545  0049B2  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7546  0049B6  C02F  F01C         	movff	test_action@mR,stop@mR
  7547  0049BA  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7548  0049BE  ECD6  F029         	call	_stop	;wreg free
  7549  0049C2  0012               	return		;funcret
  7550  0049C4                     __end_of_test_action:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _turn45 *****************
  7554 ;; Defined at:
  7555 ;;		line 88 in file "dc_motor.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7558 ;;		 -> main@motorL(9), 
  7559 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7560 ;;		 -> main@motorR(9), 
  7561 ;;  turn_time       1   35[COMRAM] unsigned char 
  7562 ;;  direction       1   36[COMRAM] unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  i               2   41[COMRAM] unsigned int 
  7565 ;;  i               2   39[COMRAM] unsigned int 
  7566 ;;  i               1   43[COMRAM] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7576 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;Total ram usage:       13 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 4
  7583 ;; This function calls:
  7584 ;;		_setMotorPWM
  7585 ;;		_stop
  7586 ;; This function is called by:
  7587 ;;		_turning_action
  7588 ;;		_goback
  7589 ;;		_test_action
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text31
  7594  004152                     __ptext31:
  7595                           	callstack 0
  7596  004152                     _turn45:
  7597                           	callstack 25
  7598  004152                     
  7599                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  7600  004152  0E00               	movlw	0
  7601  004154  6E2C               	movwf	turn45@i^0,c
  7602                           
  7603                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  7604  004156  0E00               	movlw	0
  7605  004158  6E2C               	movwf	turn45@i^0,c
  7606  00415A  EF77  F021         	goto	l4216
  7607  00415E                     l4168:
  7608                           
  7609                           ;dc_motor.c: 93:         mL->direction=1;
  7610  00415E  EE20 F001          	lfsr	2,1
  7611  004162  5020               	movf	turn45@mL^0,w,c
  7612  004164  26D9               	addwf	fsr2l,f,c
  7613  004166  5021               	movf	(turn45@mL+1)^0,w,c
  7614  004168  22DA               	addwfc	fsr2h,f,c
  7615  00416A  0E01               	movlw	1
  7616  00416C  6EDF               	movwf	indf2,c
  7617                           
  7618                           ;dc_motor.c: 94:         mR->direction=1;
  7619  00416E  EE20 F001          	lfsr	2,1
  7620  004172  5022               	movf	turn45@mR^0,w,c
  7621  004174  26D9               	addwf	fsr2l,f,c
  7622  004176  5023               	movf	(turn45@mR+1)^0,w,c
  7623  004178  22DA               	addwfc	fsr2h,f,c
  7624  00417A  0E01               	movlw	1
  7625  00417C  6EDF               	movwf	indf2,c
  7626  00417E                     
  7627                           ;dc_motor.c: 95:         if (direction == 1){
  7628  00417E  0425               	decf	turn45@direction^0,w,c
  7629  004180  A4D8               	btfss	status,2,c
  7630  004182  EFC5  F020         	goto	u4211
  7631  004186  EFC7  F020         	goto	u4210
  7632  00418A                     u4211:
  7633  00418A  EF22  F021         	goto	l4192
  7634  00418E                     u4210:
  7635  00418E  EFE8  F020         	goto	l4182
  7636  004192                     l4174:
  7637                           
  7638                           ;dc_motor.c: 97:                 mR->power += 5;
  7639  004192  C022  FFD9         	movff	turn45@mR,fsr2l
  7640  004196  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7641  00419A  0E05               	movlw	5
  7642  00419C  26DF               	addwf	indf2,f,c
  7643                           
  7644                           ;dc_motor.c: 98:                 mL->power = 0;
  7645  00419E  C020  FFD9         	movff	turn45@mL,fsr2l
  7646  0041A2  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7647  0041A6  0E00               	movlw	0
  7648  0041A8  6EDF               	movwf	indf2,c
  7649  0041AA                     
  7650                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  7651  0041AA  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7652  0041AE  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7653  0041B2  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7654  0041B6                     
  7655                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  7656  0041B6  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7657  0041BA  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7658  0041BE  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7659  0041C2                     
  7660                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7661  0041C2  0ED0               	movlw	208
  7662  0041C4  6E26               	movwf	??_turn45^0,c
  7663  0041C6  0ECA               	movlw	202
  7664  0041C8                     u6157:
  7665  0041C8  2EE8               	decfsz	wreg,f,c
  7666  0041CA  D7FE               	bra	u6157
  7667  0041CC  2E26               	decfsz	??_turn45^0,f,c
  7668  0041CE  D7FC               	bra	u6157
  7669  0041D0                     l4182:
  7670                           
  7671                           ;dc_motor.c: 96:             while (mR->power <60){
  7672  0041D0  C022  FFD9         	movff	turn45@mR,fsr2l
  7673  0041D4  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7674  0041D8  0E3B               	movlw	59
  7675  0041DA  64DF               	cpfsgt	indf2,c
  7676  0041DC  EFF2  F020         	goto	u4221
  7677  0041E0  EFF4  F020         	goto	u4220
  7678  0041E4                     u4221:
  7679  0041E4  EFC9  F020         	goto	l4174
  7680  0041E8                     u4220:
  7681  0041E8                     
  7682                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY + 15; i++){_delay((u
      +                          nsigned long)((1)*(64000000/4000.0)));}
  7683  0041E8  0E00               	movlw	0
  7684  0041EA  6E29               	movwf	(turn45@i_1327+1)^0,c
  7685  0041EC  0E00               	movlw	0
  7686  0041EE  6E28               	movwf	turn45@i_1327^0,c
  7687  0041F0  EF04  F021         	goto	l274
  7688  0041F4                     l4186:
  7689                           
  7690                           ; BSR set to: 0
  7691  0041F4  0E15               	movlw	21
  7692  0041F6  6E26               	movwf	??_turn45^0,c
  7693  0041F8  0EC6               	movlw	198
  7694  0041FA                     u6167:
  7695  0041FA  2EE8               	decfsz	wreg,f,c
  7696  0041FC  D7FE               	bra	u6167
  7697  0041FE  2E26               	decfsz	??_turn45^0,f,c
  7698  004200  D7FC               	bra	u6167
  7699  004202  D000               	nop2	
  7700  004204  4A28               	infsnz	turn45@i_1327^0,f,c
  7701  004206  2A29               	incf	(turn45@i_1327+1)^0,f,c
  7702  004208                     l274:
  7703  004208  0E0F               	movlw	15
  7704  00420A  0100               	movlb	0	; () banked
  7705  00420C  25FC               	addwf	_SENSITIVITY& (0+255),w,b
  7706  00420E  6E26               	movwf	??_turn45^0,c
  7707  004210  0E00               	movlw	0
  7708  004212  21FD               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  7709  004214  6E27               	movwf	(??_turn45+1)^0,c
  7710  004216  5026               	movf	??_turn45^0,w,c
  7711  004218  5C28               	subwf	turn45@i_1327^0,w,c
  7712  00421A  5027               	movf	(??_turn45+1)^0,w,c
  7713  00421C  5829               	subwfb	(turn45@i_1327+1)^0,w,c
  7714  00421E  A0D8               	btfss	status,0,c
  7715  004220  EF14  F021         	goto	u4231
  7716  004224  EF16  F021         	goto	u4230
  7717  004228                     u4231:
  7718  004228  EFFA  F020         	goto	l4186
  7719  00422C                     u4230:
  7720  00422C                     l4190:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;dc_motor.c: 104:             stop(mL,mR);
  7724  00422C  C020  F01A         	movff	turn45@mL,stop@mL
  7725  004230  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  7726  004234  C022  F01C         	movff	turn45@mR,stop@mR
  7727  004238  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  7728  00423C  ECD6  F029         	call	_stop	;wreg free
  7729                           
  7730                           ;dc_motor.c: 105:         }
  7731  004240  EF76  F021         	goto	l4214
  7732  004244                     l4192:
  7733  004244  0E02               	movlw	2
  7734  004246  1825               	xorwf	turn45@direction^0,w,c
  7735  004248  A4D8               	btfss	status,2,c
  7736  00424A  EF29  F021         	goto	u4241
  7737  00424E  EF2B  F021         	goto	u4240
  7738  004252                     u4241:
  7739  004252  EF76  F021         	goto	l4214
  7740  004256                     u4240:
  7741  004256  EF4C  F021         	goto	l4204
  7742  00425A                     l4196:
  7743                           
  7744                           ;dc_motor.c: 108:                 mL->power += 5;
  7745  00425A  C020  FFD9         	movff	turn45@mL,fsr2l
  7746  00425E  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7747  004262  0E05               	movlw	5
  7748  004264  26DF               	addwf	indf2,f,c
  7749                           
  7750                           ;dc_motor.c: 109:                 mR->power = 0;
  7751  004266  C022  FFD9         	movff	turn45@mR,fsr2l
  7752  00426A  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7753  00426E  0E00               	movlw	0
  7754  004270  6EDF               	movwf	indf2,c
  7755  004272                     
  7756                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  7757  004272  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7758  004276  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7759  00427A  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7760  00427E                     
  7761                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  7762  00427E  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7763  004282  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7764  004286  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7765  00428A                     
  7766                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7767  00428A  0ED0               	movlw	208
  7768  00428C  6E26               	movwf	??_turn45^0,c
  7769  00428E  0ECA               	movlw	202
  7770  004290                     u6177:
  7771  004290  2EE8               	decfsz	wreg,f,c
  7772  004292  D7FE               	bra	u6177
  7773  004294  2E26               	decfsz	??_turn45^0,f,c
  7774  004296  D7FC               	bra	u6177
  7775  004298                     l4204:
  7776                           
  7777                           ;dc_motor.c: 107:             while (mL->power <60){
  7778  004298  C020  FFD9         	movff	turn45@mL,fsr2l
  7779  00429C  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7780  0042A0  0E3B               	movlw	59
  7781  0042A2  64DF               	cpfsgt	indf2,c
  7782  0042A4  EF56  F021         	goto	u4251
  7783  0042A8  EF58  F021         	goto	u4250
  7784  0042AC                     u4251:
  7785  0042AC  EF2D  F021         	goto	l4196
  7786  0042B0                     u4250:
  7787  0042B0                     
  7788                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  7789  0042B0  0E00               	movlw	0
  7790  0042B2  6E2B               	movwf	(turn45@i_1329+1)^0,c
  7791  0042B4  0E00               	movlw	0
  7792  0042B6  6E2A               	movwf	turn45@i_1329^0,c
  7793  0042B8  EF68  F021         	goto	l282
  7794  0042BC                     l4208:
  7795                           
  7796                           ; BSR set to: 0
  7797  0042BC  0E15               	movlw	21
  7798  0042BE  6E26               	movwf	??_turn45^0,c
  7799  0042C0  0EC6               	movlw	198
  7800  0042C2                     u6187:
  7801  0042C2  2EE8               	decfsz	wreg,f,c
  7802  0042C4  D7FE               	bra	u6187
  7803  0042C6  2E26               	decfsz	??_turn45^0,f,c
  7804  0042C8  D7FC               	bra	u6187
  7805  0042CA  D000               	nop2	
  7806  0042CC  4A2A               	infsnz	turn45@i_1329^0,f,c
  7807  0042CE  2A2B               	incf	(turn45@i_1329+1)^0,f,c
  7808  0042D0                     l282:
  7809  0042D0  0100               	movlb	0	; () banked
  7810  0042D2  51FC               	movf	_SENSITIVITY& (0+255),w,b
  7811  0042D4  5C2A               	subwf	turn45@i_1329^0,w,c
  7812  0042D6  51FD               	movf	(_SENSITIVITY+1)& (0+255),w,b
  7813  0042D8  582B               	subwfb	(turn45@i_1329+1)^0,w,c
  7814  0042DA  A0D8               	btfss	status,0,c
  7815  0042DC  EF72  F021         	goto	u4261
  7816  0042E0  EF74  F021         	goto	u4260
  7817  0042E4                     u4261:
  7818  0042E4  EF5E  F021         	goto	l4208
  7819  0042E8                     u4260:
  7820  0042E8  EF16  F021         	goto	l4190
  7821  0042EC                     l4214:
  7822                           
  7823                           ;dc_motor.c: 117:     }
  7824  0042EC  2A2C               	incf	turn45@i^0,f,c
  7825  0042EE                     l4216:
  7826  0042EE  5024               	movf	turn45@turn_time^0,w,c
  7827  0042F0  5C2C               	subwf	turn45@i^0,w,c
  7828  0042F2  A0D8               	btfss	status,0,c
  7829  0042F4  EF7E  F021         	goto	u4271
  7830  0042F8  EF80  F021         	goto	u4270
  7831  0042FC                     u4271:
  7832  0042FC  EFAF  F020         	goto	l4168
  7833  004300                     u4270:
  7834  004300  0012               	return		;funcret
  7835  004302                     __end_of_turn45:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _stop *****************
  7839 ;; Defined at:
  7840 ;;		line 76 in file "dc_motor.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7843 ;;		 -> main@motorL(9), 
  7844 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7845 ;;		 -> main@motorR(9), 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;Total ram usage:        6 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; Hardware stack levels required when called: 3
  7864 ;; This function calls:
  7865 ;;		_setMotorPWM
  7866 ;; This function is called by:
  7867 ;;		_turn45
  7868 ;;		_fullSpeedBack
  7869 ;;		_main
  7870 ;;		_short_burst
  7871 ;;		_goback
  7872 ;;		_test_action
  7873 ;;		_test_function
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text32
  7878  0053AC                     __ptext32:
  7879                           	callstack 0
  7880  0053AC                     _stop:
  7881                           	callstack 25
  7882  0053AC                     
  7883                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  7884  0053AC  EF10  F02A         	goto	l3938
  7885  0053B0                     l3924:
  7886                           
  7887                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  7888  0053B0  C01A  FFD9         	movff	stop@mL,fsr2l
  7889  0053B4  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7890  0053B8  50DF               	movf	indf2,w,c
  7891  0053BA  B4D8               	btfsc	status,2,c
  7892  0053BC  EFE2  F029         	goto	u3891
  7893  0053C0  EFE4  F029         	goto	u3890
  7894  0053C4                     u3891:
  7895  0053C4  EFEA  F029         	goto	l3928
  7896  0053C8                     u3890:
  7897  0053C8  C01A  FFD9         	movff	stop@mL,fsr2l
  7898  0053CC  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7899  0053D0  0E02               	movlw	2
  7900  0053D2  5EDF               	subwf	indf2,f,c
  7901  0053D4                     l3928:
  7902                           
  7903                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  7904  0053D4  C01C  FFD9         	movff	stop@mR,fsr2l
  7905  0053D8  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7906  0053DC  50DF               	movf	indf2,w,c
  7907  0053DE  B4D8               	btfsc	status,2,c
  7908  0053E0  EFF4  F029         	goto	u3901
  7909  0053E4  EFF6  F029         	goto	u3900
  7910  0053E8                     u3901:
  7911  0053E8  EFFC  F029         	goto	l3932
  7912  0053EC                     u3900:
  7913  0053EC  C01C  FFD9         	movff	stop@mR,fsr2l
  7914  0053F0  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7915  0053F4  0E02               	movlw	2
  7916  0053F6  5EDF               	subwf	indf2,f,c
  7917  0053F8                     l3932:
  7918                           
  7919                           ;dc_motor.c: 81:         setMotorPWM(mL);
  7920  0053F8  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  7921  0053FC  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  7922  005400  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7923  005404                     
  7924                           ;dc_motor.c: 82:         setMotorPWM(mR);
  7925  005404  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  7926  005408  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  7927  00540C  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7928  005410                     
  7929                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  7930  005410  0E68               	movlw	104
  7931  005412  6E1E               	movwf	??_stop^0,c
  7932  005414  0EE4               	movlw	228
  7933  005416                     u6197:
  7934  005416  2EE8               	decfsz	wreg,f,c
  7935  005418  D7FE               	bra	u6197
  7936  00541A  2E1E               	decfsz	??_stop^0,f,c
  7937  00541C  D7FC               	bra	u6197
  7938  00541E  D000               	nop2	
  7939  005420                     l3938:
  7940                           
  7941                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  7942  005420  C01A  FFD9         	movff	stop@mL,fsr2l
  7943  005424  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7944  005428  50DF               	movf	indf2,w,c
  7945  00542A  A4D8               	btfss	status,2,c
  7946  00542C  EF1A  F02A         	goto	u3911
  7947  005430  EF1C  F02A         	goto	u3910
  7948  005434                     u3911:
  7949  005434  EFD8  F029         	goto	l3924
  7950  005438                     u3910:
  7951  005438  C01C  FFD9         	movff	stop@mR,fsr2l
  7952  00543C  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7953  005440  50DF               	movf	indf2,w,c
  7954  005442  A4D8               	btfss	status,2,c
  7955  005444  EF26  F02A         	goto	u3921
  7956  005448  EF28  F02A         	goto	u3920
  7957  00544C                     u3921:
  7958  00544C  EFD8  F029         	goto	l3924
  7959  005450                     u3920:
  7960  005450                     
  7961                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7962  005450  0E29               	movlw	41
  7963  005452  6E1F               	movwf	(??_stop+1)^0,c
  7964  005454  0E96               	movlw	150
  7965  005456  6E1E               	movwf	??_stop^0,c
  7966  005458  0E7F               	movlw	127
  7967  00545A                     u6207:
  7968  00545A  2EE8               	decfsz	wreg,f,c
  7969  00545C  D7FE               	bra	u6207
  7970  00545E  2E1E               	decfsz	??_stop^0,f,c
  7971  005460  D7FC               	bra	u6207
  7972  005462  2E1F               	decfsz	(??_stop+1)^0,f,c
  7973  005464  D7FA               	bra	u6207
  7974  005466  F000               	nop	
  7975  005468  0012               	return		;funcret
  7976  00546A                     __end_of_stop:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _fullSpeedAhead *****************
  7980 ;; Defined at:
  7981 ;;		line 121 in file "dc_motor.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7984 ;;		 -> main@motorL(9), 
  7985 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7986 ;;		 -> main@motorR(9), 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8002 ;;Total ram usage:        5 bytes
  8003 ;; Hardware stack levels used: 1
  8004 ;; Hardware stack levels required when called: 3
  8005 ;; This function calls:
  8006 ;;		_setMotorPWM
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;;		_short_burst
  8010 ;;		_goback
  8011 ;;		_test_action
  8012 ;;		_test_function
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text33
  8017  005224                     __ptext33:
  8018                           	callstack 0
  8019  005224                     _fullSpeedAhead:
  8020                           	callstack 25
  8021  005224                     
  8022                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8023  005224  EE20 F001          	lfsr	2,1
  8024  005228  501A               	movf	fullSpeedAhead@mL^0,w,c
  8025  00522A  26D9               	addwf	fsr2l,f,c
  8026  00522C  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8027  00522E  22DA               	addwfc	fsr2h,f,c
  8028  005230  0E01               	movlw	1
  8029  005232  6EDF               	movwf	indf2,c
  8030                           
  8031                           ;dc_motor.c: 124:     mR->direction=1;
  8032  005234  EE20 F001          	lfsr	2,1
  8033  005238  501C               	movf	fullSpeedAhead@mR^0,w,c
  8034  00523A  26D9               	addwf	fsr2l,f,c
  8035  00523C  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8036  00523E  22DA               	addwfc	fsr2h,f,c
  8037  005240  0E01               	movlw	1
  8038  005242  6EDF               	movwf	indf2,c
  8039                           
  8040                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8041  005244  EF5B  F029         	goto	l4234
  8042  005248                     l4220:
  8043                           
  8044                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8045  005248  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8046  00524C  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8047  005250  0E1E               	movlw	30
  8048  005252  60DF               	cpfslt	indf2,c
  8049  005254  EF2E  F029         	goto	u4281
  8050  005258  EF30  F029         	goto	u4280
  8051  00525C                     u4281:
  8052  00525C  EF36  F029         	goto	l4224
  8053  005260                     u4280:
  8054  005260  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8055  005264  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8056  005268  0E02               	movlw	2
  8057  00526A  26DF               	addwf	indf2,f,c
  8058  00526C                     l4224:
  8059                           
  8060                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8061  00526C  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8062  005270  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8063  005274  0E1E               	movlw	30
  8064  005276  60DF               	cpfslt	indf2,c
  8065  005278  EF40  F029         	goto	u4291
  8066  00527C  EF42  F029         	goto	u4290
  8067  005280                     u4291:
  8068  005280  EF48  F029         	goto	l4228
  8069  005284                     u4290:
  8070  005284  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8071  005288  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8072  00528C  0E02               	movlw	2
  8073  00528E  26DF               	addwf	indf2,f,c
  8074  005290                     l4228:
  8075                           
  8076                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8077  005290  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8078  005294  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8079  005298  EC2C  F01D         	call	_setMotorPWM	;wreg free
  8080  00529C                     
  8081                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8082  00529C  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8083  0052A0  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8084  0052A4  EC2C  F01D         	call	_setMotorPWM	;wreg free
  8085  0052A8                     
  8086                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8087  0052A8  0ED0               	movlw	208
  8088  0052AA  6E1E               	movwf	??_fullSpeedAhead^0,c
  8089  0052AC  0ECA               	movlw	202
  8090  0052AE                     u6217:
  8091  0052AE  2EE8               	decfsz	wreg,f,c
  8092  0052B0  D7FE               	bra	u6217
  8093  0052B2  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8094  0052B4  D7FC               	bra	u6217
  8095  0052B6                     l4234:
  8096                           
  8097                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8098  0052B6  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8099  0052BA  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8100  0052BE  0E1D               	movlw	29
  8101  0052C0  64DF               	cpfsgt	indf2,c
  8102  0052C2  EF65  F029         	goto	u4301
  8103  0052C6  EF67  F029         	goto	u4300
  8104  0052CA                     u4301:
  8105  0052CA  EF24  F029         	goto	l4220
  8106  0052CE                     u4300:
  8107  0052CE  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8108  0052D2  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8109  0052D6  0E1D               	movlw	29
  8110  0052D8  64DF               	cpfsgt	indf2,c
  8111  0052DA  EF71  F029         	goto	u4311
  8112  0052DE  EF73  F029         	goto	u4310
  8113  0052E2                     u4311:
  8114  0052E2  EF24  F029         	goto	l4220
  8115  0052E6                     u4310:
  8116  0052E6  0012               	return		;funcret
  8117  0052E8                     __end_of_fullSpeedAhead:
  8118                           	callstack 0
  8119                           
  8120 ;; *************** function _setMotorPWM *****************
  8121 ;; Defined at:
  8122 ;;		line 56 in file "dc_motor.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8125 ;;		 -> main@motorR(9), main@motorL(9), 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;  PWMduty         2   23[COMRAM] int 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8140 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8141 ;;Total ram usage:       11 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 2
  8144 ;; This function calls:
  8145 ;;		___awdiv
  8146 ;;		___wmul
  8147 ;; This function is called by:
  8148 ;;		_stop
  8149 ;;		_turn45
  8150 ;;		_fullSpeedAhead
  8151 ;;		_fullSpeedBack
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text34
  8156  003A58                     __ptext34:
  8157                           	callstack 0
  8158  003A58                     _setMotorPWM:
  8159                           	callstack 25
  8160  003A58                     
  8161                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8162  003A58  EE20 F001          	lfsr	2,1
  8163  003A5C  500F               	movf	setMotorPWM@m^0,w,c
  8164  003A5E  26D9               	addwf	fsr2l,f,c
  8165  003A60  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8166  003A62  22DA               	addwfc	fsr2h,f,c
  8167  003A64  50DF               	movf	indf2,w,c
  8168  003A66  B4D8               	btfsc	status,2,c
  8169  003A68  EF38  F01D         	goto	u3401
  8170  003A6C  EF3A  F01D         	goto	u3400
  8171  003A70                     u3401:
  8172  003A70  EF6B  F01D         	goto	l3638
  8173  003A74                     u3400:
  8174  003A74                     
  8175                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8176  003A74  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8177  003A78  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8178  003A7C  50DF               	movf	indf2,w,c
  8179  003A7E  6E11               	movwf	??_setMotorPWM^0,c
  8180  003A80  5011               	movf	??_setMotorPWM^0,w,c
  8181  003A82  6E01               	movwf	___wmul@multiplier^0,c
  8182  003A84  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8183  003A86  EE20 F007          	lfsr	2,7
  8184  003A8A  500F               	movf	setMotorPWM@m^0,w,c
  8185  003A8C  26D9               	addwf	fsr2l,f,c
  8186  003A8E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8187  003A90  22DA               	addwfc	fsr2h,f,c
  8188  003A92  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8189  003A96  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8190  003A9A  ECB9  F02D         	call	___wmul	;wreg free
  8191  003A9E  C001  F007         	movff	?___wmul,___awdiv@dividend
  8192  003AA2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8193  003AA6  0E00               	movlw	0
  8194  003AA8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8195  003AAA  0E64               	movlw	100
  8196  003AAC  6E09               	movwf	___awdiv@divisor^0,c
  8197  003AAE  EC74  F029         	call	___awdiv	;wreg free
  8198  003AB2  EE20 F007          	lfsr	2,7
  8199  003AB6  500F               	movf	setMotorPWM@m^0,w,c
  8200  003AB8  26D9               	addwf	fsr2l,f,c
  8201  003ABA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8202  003ABC  22DA               	addwfc	fsr2h,f,c
  8203  003ABE  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8204  003AC2  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8205  003AC6  5007               	movf	?___awdiv^0,w,c
  8206  003AC8  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8207  003ACA  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8208  003ACC  5008               	movf	(?___awdiv+1)^0,w,c
  8209  003ACE  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8210  003AD0  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8211                           
  8212                           ;dc_motor.c: 62:  }
  8213  003AD2  EF8E  F01D         	goto	l3640
  8214  003AD6                     l3638:
  8215                           
  8216                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8217  003AD6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8218  003ADA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8219  003ADE  50DF               	movf	indf2,w,c
  8220  003AE0  6E11               	movwf	??_setMotorPWM^0,c
  8221  003AE2  5011               	movf	??_setMotorPWM^0,w,c
  8222  003AE4  6E01               	movwf	___wmul@multiplier^0,c
  8223  003AE6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8224  003AE8  EE20 F007          	lfsr	2,7
  8225  003AEC  500F               	movf	setMotorPWM@m^0,w,c
  8226  003AEE  26D9               	addwf	fsr2l,f,c
  8227  003AF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8228  003AF2  22DA               	addwfc	fsr2h,f,c
  8229  003AF4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8230  003AF8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8231  003AFC  ECB9  F02D         	call	___wmul	;wreg free
  8232  003B00  C001  F007         	movff	?___wmul,___awdiv@dividend
  8233  003B04  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8234  003B08  0E00               	movlw	0
  8235  003B0A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8236  003B0C  0E64               	movlw	100
  8237  003B0E  6E09               	movwf	___awdiv@divisor^0,c
  8238  003B10  EC74  F029         	call	___awdiv	;wreg free
  8239  003B14  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8240  003B18  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8241  003B1C                     l3640:
  8242                           
  8243                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8244  003B1C  EE20 F002          	lfsr	2,2
  8245  003B20  500F               	movf	setMotorPWM@m^0,w,c
  8246  003B22  26D9               	addwf	fsr2l,f,c
  8247  003B24  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8248  003B26  22DA               	addwfc	fsr2h,f,c
  8249  003B28  CFDE F011          	movff	postinc2,??_setMotorPWM
  8250  003B2C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8251  003B30  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8252  003B34  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8253  003B38  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8254  003B3C                     
  8255                           ;dc_motor.c: 68:  if (m->direction){
  8256  003B3C  EE20 F001          	lfsr	2,1
  8257  003B40  500F               	movf	setMotorPWM@m^0,w,c
  8258  003B42  26D9               	addwf	fsr2l,f,c
  8259  003B44  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8260  003B46  22DA               	addwfc	fsr2h,f,c
  8261  003B48  50DF               	movf	indf2,w,c
  8262  003B4A  B4D8               	btfsc	status,2,c
  8263  003B4C  EFAA  F01D         	goto	u3411
  8264  003B50  EFAC  F01D         	goto	u3410
  8265  003B54                     u3411:
  8266  003B54  EFE1  F01D         	goto	l3646
  8267  003B58                     u3410:
  8268  003B58                     
  8269                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8270  003B58  EE20 F004          	lfsr	2,4
  8271  003B5C  500F               	movf	setMotorPWM@m^0,w,c
  8272  003B5E  26D9               	addwf	fsr2l,f,c
  8273  003B60  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8274  003B62  22DA               	addwfc	fsr2h,f,c
  8275  003B64  CFDE F011          	movff	postinc2,??_setMotorPWM
  8276  003B68  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8277  003B6C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8278  003B70  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8279  003B74  EE10 F004          	lfsr	1,4
  8280  003B78  500F               	movf	setMotorPWM@m^0,w,c
  8281  003B7A  26E1               	addwf	fsr1l,f,c
  8282  003B7C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8283  003B7E  22E2               	addwfc	fsr1h,f,c
  8284  003B80  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8285  003B84  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8286  003B88  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8287  003B8C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8288  003B90  50E7               	movf	indf1,w,c
  8289  003B92  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8290  003B94  EE10 F006          	lfsr	1,6
  8291  003B98  500F               	movf	setMotorPWM@m^0,w,c
  8292  003B9A  26E1               	addwf	fsr1l,f,c
  8293  003B9C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8294  003B9E  22E2               	addwfc	fsr1h,f,c
  8295  003BA0  50E7               	movf	indf1,w,c
  8296  003BA2  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8297  003BA4  0E01               	movlw	1
  8298  003BA6  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8299  003BA8  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8300  003BAA  EFD9  F01D         	goto	u3424
  8301  003BAE                     u3425:
  8302  003BAE  90D8               	bcf	status,0,c
  8303  003BB0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8304  003BB2                     u3424:
  8305  003BB2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8306  003BB4  EFD7  F01D         	goto	u3425
  8307  003BB8  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8308  003BBA  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8309  003BBC  6EDF               	movwf	indf2,c
  8310                           
  8311                           ;dc_motor.c: 70:  } else {
  8312  003BBE  EF15  F01E         	goto	l257
  8313  003BC2                     l3646:
  8314                           
  8315                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8316  003BC2  EE20 F004          	lfsr	2,4
  8317  003BC6  500F               	movf	setMotorPWM@m^0,w,c
  8318  003BC8  26D9               	addwf	fsr2l,f,c
  8319  003BCA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8320  003BCC  22DA               	addwfc	fsr2h,f,c
  8321  003BCE  CFDE F011          	movff	postinc2,??_setMotorPWM
  8322  003BD2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8323  003BD6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8324  003BDA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8325  003BDE  EE10 F004          	lfsr	1,4
  8326  003BE2  500F               	movf	setMotorPWM@m^0,w,c
  8327  003BE4  26E1               	addwf	fsr1l,f,c
  8328  003BE6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8329  003BE8  22E2               	addwfc	fsr1h,f,c
  8330  003BEA  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8331  003BEE  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8332  003BF2  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8333  003BF6  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8334  003BFA  50E7               	movf	indf1,w,c
  8335  003BFC  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8336  003BFE  EE10 F006          	lfsr	1,6
  8337  003C02  500F               	movf	setMotorPWM@m^0,w,c
  8338  003C04  26E1               	addwf	fsr1l,f,c
  8339  003C06  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8340  003C08  22E2               	addwfc	fsr1h,f,c
  8341  003C0A  50E7               	movf	indf1,w,c
  8342  003C0C  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8343  003C0E  0E01               	movlw	1
  8344  003C10  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8345  003C12  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8346  003C14  EF0E  F01E         	goto	u3434
  8347  003C18                     u3435:
  8348  003C18  90D8               	bcf	status,0,c
  8349  003C1A  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8350  003C1C                     u3434:
  8351  003C1C  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8352  003C1E  EF0C  F01E         	goto	u3435
  8353  003C22  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8354  003C24  0AFF               	xorlw	255
  8355  003C26  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8356  003C28  6EDF               	movwf	indf2,c
  8357  003C2A                     l257:
  8358  003C2A  0012               	return		;funcret
  8359  003C2C                     __end_of_setMotorPWM:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function ___wmul *****************
  8363 ;; Defined at:
  8364 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  multiplier      2    0[COMRAM] unsigned int 
  8367 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  product         2    4[COMRAM] unsigned int 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  2    0[COMRAM] unsigned int 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, prodl, prodh
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;Total ram usage:        6 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 1
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_setMotorPWM
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text35
  8394  005B72                     __ptext35:
  8395                           	callstack 0
  8396  005B72                     ___wmul:
  8397                           	callstack 25
  8398  005B72  5001               	movf	___wmul@multiplier^0,w,c
  8399  005B74  0203               	mulwf	___wmul@multiplicand^0,c
  8400  005B76  CFF3 F005          	movff	prodl,___wmul@product
  8401  005B7A  CFF4 F006          	movff	prodh,___wmul@product+1
  8402  005B7E  5001               	movf	___wmul@multiplier^0,w,c
  8403  005B80  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8404  005B82  50F3               	movf	243,w,c
  8405  005B84  2606               	addwf	(___wmul@product+1)^0,f,c
  8406  005B86  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8407  005B88  0203               	mulwf	___wmul@multiplicand^0,c
  8408  005B8A  50F3               	movf	243,w,c
  8409  005B8C  2606               	addwf	(___wmul@product+1)^0,f,c
  8410  005B8E  C005  F001         	movff	___wmul@product,?___wmul
  8411  005B92  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8412  005B96  0012               	return		;funcret
  8413  005B98                     __end_of___wmul:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function ___awdiv *****************
  8417 ;; Defined at:
  8418 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  dividend        2    6[COMRAM] int 
  8421 ;;  divisor         2    8[COMRAM] int 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  quotient        2   12[COMRAM] int 
  8424 ;;  sign            1   11[COMRAM] unsigned char 
  8425 ;;  counter         1   10[COMRAM] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  2    6[COMRAM] int 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;Total ram usage:        8 bytes
  8440 ;; Hardware stack levels used: 1
  8441 ;; Hardware stack levels required when called: 1
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_setMotorPWM
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text36
  8450  0052E8                     __ptext36:
  8451                           	callstack 0
  8452  0052E8                     ___awdiv:
  8453                           	callstack 25
  8454  0052E8  0E00               	movlw	0
  8455  0052EA  6E0C               	movwf	___awdiv@sign^0,c
  8456  0052EC  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8457  0052EE  EF7D  F029         	goto	u3170
  8458  0052F2  EF7B  F029         	goto	u3171
  8459  0052F6                     u3171:
  8460  0052F6  EF83  F029         	goto	l3532
  8461  0052FA                     u3170:
  8462  0052FA  6C09               	negf	___awdiv@divisor^0,c
  8463  0052FC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8464  0052FE  B0D8               	btfsc	status,0,c
  8465  005300  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8466  005302  0E01               	movlw	1
  8467  005304  6E0C               	movwf	___awdiv@sign^0,c
  8468  005306                     l3532:
  8469  005306  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8470  005308  EF8A  F029         	goto	u3180
  8471  00530C  EF88  F029         	goto	u3181
  8472  005310                     u3181:
  8473  005310  EF90  F029         	goto	l3538
  8474  005314                     u3180:
  8475  005314  6C07               	negf	___awdiv@dividend^0,c
  8476  005316  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8477  005318  B0D8               	btfsc	status,0,c
  8478  00531A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8479  00531C  0E01               	movlw	1
  8480  00531E  1A0C               	xorwf	___awdiv@sign^0,f,c
  8481  005320                     l3538:
  8482  005320  0E00               	movlw	0
  8483  005322  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8484  005324  0E00               	movlw	0
  8485  005326  6E0D               	movwf	___awdiv@quotient^0,c
  8486  005328  5009               	movf	___awdiv@divisor^0,w,c
  8487  00532A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8488  00532C  B4D8               	btfsc	status,2,c
  8489  00532E  EF9B  F029         	goto	u3191
  8490  005332  EF9D  F029         	goto	u3190
  8491  005336                     u3191:
  8492  005336  EFC5  F029         	goto	l3560
  8493  00533A                     u3190:
  8494  00533A  0E01               	movlw	1
  8495  00533C  6E0B               	movwf	___awdiv@counter^0,c
  8496  00533E  EFA5  F029         	goto	l3546
  8497  005342                     l3544:
  8498  005342  90D8               	bcf	status,0,c
  8499  005344  3609               	rlcf	___awdiv@divisor^0,f,c
  8500  005346  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8501  005348  2A0B               	incf	___awdiv@counter^0,f,c
  8502  00534A                     l3546:
  8503  00534A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8504  00534C  EFAA  F029         	goto	u3201
  8505  005350  EFAC  F029         	goto	u3200
  8506  005354                     u3201:
  8507  005354  EFA1  F029         	goto	l3544
  8508  005358                     u3200:
  8509  005358                     l3548:
  8510  005358  90D8               	bcf	status,0,c
  8511  00535A  360D               	rlcf	___awdiv@quotient^0,f,c
  8512  00535C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8513  00535E  5009               	movf	___awdiv@divisor^0,w,c
  8514  005360  5C07               	subwf	___awdiv@dividend^0,w,c
  8515  005362  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8516  005364  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8517  005366  A0D8               	btfss	status,0,c
  8518  005368  EFB8  F029         	goto	u3211
  8519  00536C  EFBA  F029         	goto	u3210
  8520  005370                     u3211:
  8521  005370  EFBF  F029         	goto	l3556
  8522  005374                     u3210:
  8523  005374  5009               	movf	___awdiv@divisor^0,w,c
  8524  005376  5E07               	subwf	___awdiv@dividend^0,f,c
  8525  005378  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8526  00537A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8527  00537C  800D               	bsf	___awdiv@quotient^0,0,c
  8528  00537E                     l3556:
  8529  00537E  90D8               	bcf	status,0,c
  8530  005380  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8531  005382  3209               	rrcf	___awdiv@divisor^0,f,c
  8532  005384  2E0B               	decfsz	___awdiv@counter^0,f,c
  8533  005386  EFAC  F029         	goto	l3548
  8534  00538A                     l3560:
  8535  00538A  500C               	movf	___awdiv@sign^0,w,c
  8536  00538C  B4D8               	btfsc	status,2,c
  8537  00538E  EFCB  F029         	goto	u3221
  8538  005392  EFCD  F029         	goto	u3220
  8539  005396                     u3221:
  8540  005396  EFD1  F029         	goto	l3564
  8541  00539A                     u3220:
  8542  00539A  6C0D               	negf	___awdiv@quotient^0,c
  8543  00539C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8544  00539E  B0D8               	btfsc	status,0,c
  8545  0053A0  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8546  0053A2                     l3564:
  8547  0053A2  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8548  0053A6  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8549  0053AA  0012               	return		;funcret
  8550  0053AC                     __end_of___awdiv:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function _calibrate_white *****************
  8554 ;; Defined at:
  8555 ;;		line 307 in file "color.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  w               2   11[COMRAM] PTR struct white_card
  8558 ;;		 -> main@white(28), 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      void 
  8563 ;; Registers used:
  8564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;Total ram usage:        4 bytes
  8575 ;; Hardware stack levels used: 1
  8576 ;; Hardware stack levels required when called: 4
  8577 ;; This function calls:
  8578 ;;		_LED_B
  8579 ;;		_LED_C
  8580 ;;		_LED_G
  8581 ;;		_LED_OFF
  8582 ;;		_LED_R
  8583 ;;		_color_read_Blue
  8584 ;;		_color_read_Clear
  8585 ;;		_color_read_Green
  8586 ;;		_color_read_Red
  8587 ;;		_toggle_light
  8588 ;; This function is called by:
  8589 ;;		_setup
  8590 ;;		_test_function
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text37
  8595  00384E                     __ptext37:
  8596                           	callstack 0
  8597  00384E                     _calibrate_white:
  8598                           	callstack 25
  8599  00384E                     
  8600                           ;color.c: 307: void calibrate_white(struct white_card *w);color.c: 308: {;color.c: 309: 
      +                              LED_OFF();
  8601  00384E  ECDC  F02D         	call	_LED_OFF	;wreg free
  8602  003852                     
  8603                           ;color.c: 310:     toggle_light(1,2);
  8604  003852  0E02               	movlw	2
  8605  003854  6E01               	movwf	toggle_light@toggletime^0,c
  8606  003856  0E01               	movlw	1
  8607  003858  ECC7  F019         	call	_toggle_light
  8608  00385C                     
  8609                           ;color.c: 311:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8610  00385C  0E29               	movlw	41
  8611  00385E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8612  003860  0E96               	movlw	150
  8613  003862  6E0E               	movwf	??_calibrate_white^0,c
  8614  003864  0E7F               	movlw	127
  8615  003866                     u6227:
  8616  003866  2EE8               	decfsz	wreg,f,c
  8617  003868  D7FE               	bra	u6227
  8618  00386A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8619  00386C  D7FC               	bra	u6227
  8620  00386E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8621  003870  D7FA               	bra	u6227
  8622  003872  F000               	nop	
  8623  003874                     
  8624                           ;color.c: 313:     LED_R();
  8625  003874  ECCC  F02D         	call	_LED_R	;wreg free
  8626  003878                     
  8627                           ;color.c: 314:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8628  003878  0E09               	movlw	9
  8629  00387A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8630  00387C  0E1E               	movlw	30
  8631  00387E  6E0E               	movwf	??_calibrate_white^0,c
  8632  003880  0EE4               	movlw	228
  8633  003882                     u6237:
  8634  003882  2EE8               	decfsz	wreg,f,c
  8635  003884  D7FE               	bra	u6237
  8636  003886  2E0E               	decfsz	??_calibrate_white^0,f,c
  8637  003888  D7FC               	bra	u6237
  8638  00388A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8639  00388C  D7FA               	bra	u6237
  8640  00388E  D000               	nop2	
  8641  003890                     
  8642                           ;color.c: 315:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8643  003890  EC34  F02B         	call	_color_read_Red	;wreg free
  8644  003894  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8645  003898  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8646  00389C  C005  FFDE         	movff	?_color_read_Red,postinc2
  8647  0038A0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8648  0038A4  EC5C  F02B         	call	_color_read_Green	;wreg free
  8649  0038A8  EE20 F002          	lfsr	2,2
  8650  0038AC  500C               	movf	calibrate_white@w^0,w,c
  8651  0038AE  26D9               	addwf	fsr2l,f,c
  8652  0038B0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8653  0038B2  22DA               	addwfc	fsr2h,f,c
  8654  0038B4  C005  FFDE         	movff	?_color_read_Green,postinc2
  8655  0038B8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8656  0038BC  EC84  F02B         	call	_color_read_Blue	;wreg free
  8657  0038C0  EE20 F004          	lfsr	2,4
  8658  0038C4  500C               	movf	calibrate_white@w^0,w,c
  8659  0038C6  26D9               	addwf	fsr2l,f,c
  8660  0038C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8661  0038CA  22DA               	addwfc	fsr2h,f,c
  8662  0038CC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8663  0038D0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8664  0038D4                     
  8665                           ;color.c: 317:     LED_G();
  8666  0038D4  ECEC  F02D         	call	_LED_G	;wreg free
  8667  0038D8                     
  8668                           ;color.c: 318:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8669  0038D8  0E09               	movlw	9
  8670  0038DA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8671  0038DC  0E1E               	movlw	30
  8672  0038DE  6E0E               	movwf	??_calibrate_white^0,c
  8673  0038E0  0EE4               	movlw	228
  8674  0038E2                     u6247:
  8675  0038E2  2EE8               	decfsz	wreg,f,c
  8676  0038E4  D7FE               	bra	u6247
  8677  0038E6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8678  0038E8  D7FC               	bra	u6247
  8679  0038EA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8680  0038EC  D7FA               	bra	u6247
  8681  0038EE  D000               	nop2	
  8682  0038F0                     
  8683                           ;color.c: 319:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8684  0038F0  EC34  F02B         	call	_color_read_Red	;wreg free
  8685  0038F4  EE20 F006          	lfsr	2,6
  8686  0038F8  500C               	movf	calibrate_white@w^0,w,c
  8687  0038FA  26D9               	addwf	fsr2l,f,c
  8688  0038FC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8689  0038FE  22DA               	addwfc	fsr2h,f,c
  8690  003900  C005  FFDE         	movff	?_color_read_Red,postinc2
  8691  003904  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8692  003908  EC5C  F02B         	call	_color_read_Green	;wreg free
  8693  00390C  EE20 F008          	lfsr	2,8
  8694  003910  500C               	movf	calibrate_white@w^0,w,c
  8695  003912  26D9               	addwf	fsr2l,f,c
  8696  003914  500D               	movf	(calibrate_white@w+1)^0,w,c
  8697  003916  22DA               	addwfc	fsr2h,f,c
  8698  003918  C005  FFDE         	movff	?_color_read_Green,postinc2
  8699  00391C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8700  003920  EC84  F02B         	call	_color_read_Blue	;wreg free
  8701  003924  EE20 F00A          	lfsr	2,10
  8702  003928  500C               	movf	calibrate_white@w^0,w,c
  8703  00392A  26D9               	addwf	fsr2l,f,c
  8704  00392C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8705  00392E  22DA               	addwfc	fsr2h,f,c
  8706  003930  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8707  003934  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8708  003938                     
  8709                           ;color.c: 321:     LED_B();
  8710  003938  ECFC  F02D         	call	_LED_B	;wreg free
  8711  00393C                     
  8712                           ;color.c: 322:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8713  00393C  0E09               	movlw	9
  8714  00393E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8715  003940  0E1E               	movlw	30
  8716  003942  6E0E               	movwf	??_calibrate_white^0,c
  8717  003944  0EE4               	movlw	228
  8718  003946                     u6257:
  8719  003946  2EE8               	decfsz	wreg,f,c
  8720  003948  D7FE               	bra	u6257
  8721  00394A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8722  00394C  D7FC               	bra	u6257
  8723  00394E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8724  003950  D7FA               	bra	u6257
  8725  003952  D000               	nop2	
  8726  003954                     
  8727                           ;color.c: 323:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  8728  003954  EC34  F02B         	call	_color_read_Red	;wreg free
  8729  003958  EE20 F00C          	lfsr	2,12
  8730  00395C  500C               	movf	calibrate_white@w^0,w,c
  8731  00395E  26D9               	addwf	fsr2l,f,c
  8732  003960  500D               	movf	(calibrate_white@w+1)^0,w,c
  8733  003962  22DA               	addwfc	fsr2h,f,c
  8734  003964  C005  FFDE         	movff	?_color_read_Red,postinc2
  8735  003968  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8736  00396C  EC5C  F02B         	call	_color_read_Green	;wreg free
  8737  003970  EE20 F00E          	lfsr	2,14
  8738  003974  500C               	movf	calibrate_white@w^0,w,c
  8739  003976  26D9               	addwf	fsr2l,f,c
  8740  003978  500D               	movf	(calibrate_white@w+1)^0,w,c
  8741  00397A  22DA               	addwfc	fsr2h,f,c
  8742  00397C  C005  FFDE         	movff	?_color_read_Green,postinc2
  8743  003980  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8744  003984  EC84  F02B         	call	_color_read_Blue	;wreg free
  8745  003988  EE20 F010          	lfsr	2,16
  8746  00398C  500C               	movf	calibrate_white@w^0,w,c
  8747  00398E  26D9               	addwf	fsr2l,f,c
  8748  003990  500D               	movf	(calibrate_white@w+1)^0,w,c
  8749  003992  22DA               	addwfc	fsr2h,f,c
  8750  003994  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8751  003998  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8752  00399C  ECAC  F02B         	call	_color_read_Clear	;wreg free
  8753  0039A0  EE20 F01A          	lfsr	2,26
  8754  0039A4  500C               	movf	calibrate_white@w^0,w,c
  8755  0039A6  26D9               	addwf	fsr2l,f,c
  8756  0039A8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8757  0039AA  22DA               	addwfc	fsr2h,f,c
  8758  0039AC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8759  0039B0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8760  0039B4                     
  8761                           ;color.c: 325:     LED_C();
  8762  0039B4  EC0C  F02E         	call	_LED_C	;wreg free
  8763  0039B8                     
  8764                           ;color.c: 326:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8765  0039B8  0E09               	movlw	9
  8766  0039BA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8767  0039BC  0E1E               	movlw	30
  8768  0039BE  6E0E               	movwf	??_calibrate_white^0,c
  8769  0039C0  0EE4               	movlw	228
  8770  0039C2                     u6267:
  8771  0039C2  2EE8               	decfsz	wreg,f,c
  8772  0039C4  D7FE               	bra	u6267
  8773  0039C6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8774  0039C8  D7FC               	bra	u6267
  8775  0039CA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8776  0039CC  D7FA               	bra	u6267
  8777  0039CE  D000               	nop2	
  8778  0039D0                     
  8779                           ;color.c: 327:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  8780  0039D0  EC34  F02B         	call	_color_read_Red	;wreg free
  8781  0039D4  EE20 F012          	lfsr	2,18
  8782  0039D8  500C               	movf	calibrate_white@w^0,w,c
  8783  0039DA  26D9               	addwf	fsr2l,f,c
  8784  0039DC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8785  0039DE  22DA               	addwfc	fsr2h,f,c
  8786  0039E0  C005  FFDE         	movff	?_color_read_Red,postinc2
  8787  0039E4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8788  0039E8  EC5C  F02B         	call	_color_read_Green	;wreg free
  8789  0039EC  EE20 F014          	lfsr	2,20
  8790  0039F0  500C               	movf	calibrate_white@w^0,w,c
  8791  0039F2  26D9               	addwf	fsr2l,f,c
  8792  0039F4  500D               	movf	(calibrate_white@w+1)^0,w,c
  8793  0039F6  22DA               	addwfc	fsr2h,f,c
  8794  0039F8  C005  FFDE         	movff	?_color_read_Green,postinc2
  8795  0039FC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8796  003A00  EC84  F02B         	call	_color_read_Blue	;wreg free
  8797  003A04  EE20 F016          	lfsr	2,22
  8798  003A08  500C               	movf	calibrate_white@w^0,w,c
  8799  003A0A  26D9               	addwf	fsr2l,f,c
  8800  003A0C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8801  003A0E  22DA               	addwfc	fsr2h,f,c
  8802  003A10  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8803  003A14  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8804  003A18  ECAC  F02B         	call	_color_read_Clear	;wreg free
  8805  003A1C  EE20 F018          	lfsr	2,24
  8806  003A20  500C               	movf	calibrate_white@w^0,w,c
  8807  003A22  26D9               	addwf	fsr2l,f,c
  8808  003A24  500D               	movf	(calibrate_white@w+1)^0,w,c
  8809  003A26  22DA               	addwfc	fsr2h,f,c
  8810  003A28  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8811  003A2C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8812  003A30                     
  8813                           ;color.c: 329:     LED_OFF();
  8814  003A30  ECDC  F02D         	call	_LED_OFF	;wreg free
  8815  003A34                     
  8816                           ;color.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8817  003A34  0E29               	movlw	41
  8818  003A36  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8819  003A38  0E96               	movlw	150
  8820  003A3A  6E0E               	movwf	??_calibrate_white^0,c
  8821  003A3C  0E7F               	movlw	127
  8822  003A3E                     u6277:
  8823  003A3E  2EE8               	decfsz	wreg,f,c
  8824  003A40  D7FE               	bra	u6277
  8825  003A42  2E0E               	decfsz	??_calibrate_white^0,f,c
  8826  003A44  D7FC               	bra	u6277
  8827  003A46  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8828  003A48  D7FA               	bra	u6277
  8829  003A4A  F000               	nop	
  8830                           
  8831                           ;color.c: 331:     toggle_light(1,2);
  8832  003A4C  0E02               	movlw	2
  8833  003A4E  6E01               	movwf	toggle_light@toggletime^0,c
  8834  003A50  0E01               	movlw	1
  8835  003A52  ECC7  F019         	call	_toggle_light
  8836  003A56  0012               	return		;funcret
  8837  003A58                     __end_of_calibrate_white:
  8838                           	callstack 0
  8839                           
  8840 ;; *************** function _color_read_Red *****************
  8841 ;; Defined at:
  8842 ;;		line 109 in file "color.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  tmp             2    9[COMRAM] unsigned int 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  2    4[COMRAM] unsigned int 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;Total ram usage:        7 bytes
  8861 ;; Hardware stack levels used: 1
  8862 ;; Hardware stack levels required when called: 3
  8863 ;; This function calls:
  8864 ;;		_I2C_2_Master_Read
  8865 ;;		_I2C_2_Master_RepStart
  8866 ;;		_I2C_2_Master_Start
  8867 ;;		_I2C_2_Master_Stop
  8868 ;;		_I2C_2_Master_Write
  8869 ;; This function is called by:
  8870 ;;		_read_color
  8871 ;;		_calibrate_white
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text38
  8876  005668                     __ptext38:
  8877                           	callstack 0
  8878  005668                     _color_read_Red:
  8879                           	callstack 24
  8880  005668                     
  8881                           ;color.c: 111:  unsigned int tmp;;color.c: 112:  I2C_2_Master_Start();
  8882  005668  EC6C  F02E         	call	_I2C_2_Master_Start	;wreg free
  8883                           
  8884                           ;color.c: 113:  I2C_2_Master_Write(0x52 | 0x00);
  8885  00566C  0E52               	movlw	82
  8886  00566E  EC56  F02E         	call	_I2C_2_Master_Write
  8887                           
  8888                           ;color.c: 114:  I2C_2_Master_Write(0xA0 | 0x16);
  8889  005672  0EB6               	movlw	182
  8890  005674  EC56  F02E         	call	_I2C_2_Master_Write
  8891                           
  8892                           ;color.c: 115:  I2C_2_Master_RepStart();
  8893  005678  EC62  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  8894                           
  8895                           ;color.c: 116:  I2C_2_Master_Write(0x52 | 0x01);
  8896  00567C  0E53               	movlw	83
  8897  00567E  EC56  F02E         	call	_I2C_2_Master_Write
  8898                           
  8899                           ;color.c: 117:  tmp=I2C_2_Master_Read(1);
  8900  005682  0E01               	movlw	1
  8901  005684  EC5B  F02C         	call	_I2C_2_Master_Read
  8902  005688  6E07               	movwf	??_color_read_Red^0,c
  8903  00568A  5007               	movf	??_color_read_Red^0,w,c
  8904  00568C  6E0A               	movwf	color_read_Red@tmp^0,c
  8905  00568E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8906                           
  8907                           ;color.c: 118:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8908  005690  0E00               	movlw	0
  8909  005692  EC5B  F02C         	call	_I2C_2_Master_Read
  8910  005696  6E07               	movwf	??_color_read_Red^0,c
  8911  005698  5007               	movf	??_color_read_Red^0,w,c
  8912  00569A  6E09               	movwf	(??_color_read_Red+2)^0,c
  8913  00569C  6A08               	clrf	(??_color_read_Red+1)^0,c
  8914  00569E  500A               	movf	color_read_Red@tmp^0,w,c
  8915  0056A0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8916  0056A2  6E0A               	movwf	color_read_Red@tmp^0,c
  8917  0056A4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8918  0056A6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8919  0056A8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8920                           
  8921                           ;color.c: 119:  I2C_2_Master_Stop();
  8922  0056AA  EC67  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8923  0056AE                     
  8924                           ;color.c: 120:  return tmp;
  8925  0056AE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8926  0056B2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8927  0056B6  0012               	return		;funcret
  8928  0056B8                     __end_of_color_read_Red:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _color_read_Green *****************
  8932 ;; Defined at:
  8933 ;;		line 137 in file "color.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  tmp             2    9[COMRAM] unsigned int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  2    4[COMRAM] unsigned int 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;Total ram usage:        7 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 3
  8954 ;; This function calls:
  8955 ;;		_I2C_2_Master_Read
  8956 ;;		_I2C_2_Master_RepStart
  8957 ;;		_I2C_2_Master_Start
  8958 ;;		_I2C_2_Master_Stop
  8959 ;;		_I2C_2_Master_Write
  8960 ;; This function is called by:
  8961 ;;		_read_color
  8962 ;;		_calibrate_white
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text39
  8967  0056B8                     __ptext39:
  8968                           	callstack 0
  8969  0056B8                     _color_read_Green:
  8970                           	callstack 24
  8971  0056B8                     
  8972                           ;color.c: 139:  unsigned int tmp;;color.c: 140:  I2C_2_Master_Start();
  8973  0056B8  EC6C  F02E         	call	_I2C_2_Master_Start	;wreg free
  8974                           
  8975                           ;color.c: 141:  I2C_2_Master_Write(0x52 | 0x00);
  8976  0056BC  0E52               	movlw	82
  8977  0056BE  EC56  F02E         	call	_I2C_2_Master_Write
  8978                           
  8979                           ;color.c: 142:  I2C_2_Master_Write(0xA0 | 0x18);
  8980  0056C2  0EB8               	movlw	184
  8981  0056C4  EC56  F02E         	call	_I2C_2_Master_Write
  8982                           
  8983                           ;color.c: 143:  I2C_2_Master_RepStart();
  8984  0056C8  EC62  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  8985                           
  8986                           ;color.c: 144:  I2C_2_Master_Write(0x52 | 0x01);
  8987  0056CC  0E53               	movlw	83
  8988  0056CE  EC56  F02E         	call	_I2C_2_Master_Write
  8989                           
  8990                           ;color.c: 145:  tmp=I2C_2_Master_Read(1);
  8991  0056D2  0E01               	movlw	1
  8992  0056D4  EC5B  F02C         	call	_I2C_2_Master_Read
  8993  0056D8  6E07               	movwf	??_color_read_Green^0,c
  8994  0056DA  5007               	movf	??_color_read_Green^0,w,c
  8995  0056DC  6E0A               	movwf	color_read_Green@tmp^0,c
  8996  0056DE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8997                           
  8998                           ;color.c: 146:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8999  0056E0  0E00               	movlw	0
  9000  0056E2  EC5B  F02C         	call	_I2C_2_Master_Read
  9001  0056E6  6E07               	movwf	??_color_read_Green^0,c
  9002  0056E8  5007               	movf	??_color_read_Green^0,w,c
  9003  0056EA  6E09               	movwf	(??_color_read_Green+2)^0,c
  9004  0056EC  6A08               	clrf	(??_color_read_Green+1)^0,c
  9005  0056EE  500A               	movf	color_read_Green@tmp^0,w,c
  9006  0056F0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9007  0056F2  6E0A               	movwf	color_read_Green@tmp^0,c
  9008  0056F4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9009  0056F6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9010  0056F8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9011                           
  9012                           ;color.c: 147:  I2C_2_Master_Stop();
  9013  0056FA  EC67  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9014  0056FE                     
  9015                           ;color.c: 148:  return tmp;
  9016  0056FE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9017  005702  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9018  005706  0012               	return		;funcret
  9019  005708                     __end_of_color_read_Green:
  9020                           	callstack 0
  9021                           
  9022 ;; *************** function _color_read_Blue *****************
  9023 ;; Defined at:
  9024 ;;		line 123 in file "color.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  tmp             2    9[COMRAM] unsigned int 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  2    4[COMRAM] unsigned int 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9041 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9042 ;;Total ram usage:        7 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; Hardware stack levels required when called: 3
  9045 ;; This function calls:
  9046 ;;		_I2C_2_Master_Read
  9047 ;;		_I2C_2_Master_RepStart
  9048 ;;		_I2C_2_Master_Start
  9049 ;;		_I2C_2_Master_Stop
  9050 ;;		_I2C_2_Master_Write
  9051 ;; This function is called by:
  9052 ;;		_read_color
  9053 ;;		_calibrate_white
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text40
  9058  005708                     __ptext40:
  9059                           	callstack 0
  9060  005708                     _color_read_Blue:
  9061                           	callstack 24
  9062  005708                     
  9063                           ;color.c: 125:  unsigned int tmp;;color.c: 126:  I2C_2_Master_Start();
  9064  005708  EC6C  F02E         	call	_I2C_2_Master_Start	;wreg free
  9065                           
  9066                           ;color.c: 127:  I2C_2_Master_Write(0x52 | 0x00);
  9067  00570C  0E52               	movlw	82
  9068  00570E  EC56  F02E         	call	_I2C_2_Master_Write
  9069                           
  9070                           ;color.c: 128:  I2C_2_Master_Write(0xA0 | 0x1A);
  9071  005712  0EBA               	movlw	186
  9072  005714  EC56  F02E         	call	_I2C_2_Master_Write
  9073                           
  9074                           ;color.c: 129:  I2C_2_Master_RepStart();
  9075  005718  EC62  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9076                           
  9077                           ;color.c: 130:  I2C_2_Master_Write(0x52 | 0x01);
  9078  00571C  0E53               	movlw	83
  9079  00571E  EC56  F02E         	call	_I2C_2_Master_Write
  9080                           
  9081                           ;color.c: 131:  tmp=I2C_2_Master_Read(1);
  9082  005722  0E01               	movlw	1
  9083  005724  EC5B  F02C         	call	_I2C_2_Master_Read
  9084  005728  6E07               	movwf	??_color_read_Blue^0,c
  9085  00572A  5007               	movf	??_color_read_Blue^0,w,c
  9086  00572C  6E0A               	movwf	color_read_Blue@tmp^0,c
  9087  00572E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9088                           
  9089                           ;color.c: 132:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9090  005730  0E00               	movlw	0
  9091  005732  EC5B  F02C         	call	_I2C_2_Master_Read
  9092  005736  6E07               	movwf	??_color_read_Blue^0,c
  9093  005738  5007               	movf	??_color_read_Blue^0,w,c
  9094  00573A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9095  00573C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9096  00573E  500A               	movf	color_read_Blue@tmp^0,w,c
  9097  005740  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9098  005742  6E0A               	movwf	color_read_Blue@tmp^0,c
  9099  005744  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9100  005746  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9101  005748  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9102                           
  9103                           ;color.c: 133:  I2C_2_Master_Stop();
  9104  00574A  EC67  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9105  00574E                     
  9106                           ;color.c: 134:  return tmp;
  9107  00574E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9108  005752  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9109  005756  0012               	return		;funcret
  9110  005758                     __end_of_color_read_Blue:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _LED_R *****************
  9114 ;; Defined at:
  9115 ;;		line 184 in file "color.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;Total ram usage:        2 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 1
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_detect_color
  9140 ;;		_calibrate_white
  9141 ;;		_color_data_collection
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text41
  9146  005B98                     __ptext41:
  9147                           	callstack 0
  9148  005B98                     _LED_R:
  9149                           	callstack 27
  9150  005B98                     
  9151                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9152  005B98  827F               	bsf	127,1,c	;volatile
  9153                           
  9154                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9155  005B9A  9E7E               	bcf	126,7,c	;volatile
  9156                           
  9157                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9158  005B9C  9879               	bcf	121,4,c	;volatile
  9159  005B9E                     
  9160                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9161  005B9E  0E11               	movlw	17
  9162  005BA0  6E02               	movwf	(??_LED_R+1)^0,c
  9163  005BA2  0E3C               	movlw	60
  9164  005BA4  6E01               	movwf	??_LED_R^0,c
  9165  005BA6  0ECB               	movlw	203
  9166  005BA8                     u6287:
  9167  005BA8  2EE8               	decfsz	wreg,f,c
  9168  005BAA  D7FE               	bra	u6287
  9169  005BAC  2E01               	decfsz	??_LED_R^0,f,c
  9170  005BAE  D7FC               	bra	u6287
  9171  005BB0  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9172  005BB2  D7FA               	bra	u6287
  9173  005BB4  F000               	nop	
  9174  005BB6  0012               	return		;funcret
  9175  005BB8                     __end_of_LED_R:
  9176                           	callstack 0
  9177                           
  9178 ;; *************** function _LED_OFF *****************
  9179 ;; Defined at:
  9180 ;;		line 175 in file "color.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;		None
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  1    wreg      void 
  9187 ;; Registers used:
  9188 ;;		wreg
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;Total ram usage:        2 bytes
  9199 ;; Hardware stack levels used: 1
  9200 ;; Hardware stack levels required when called: 1
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_calibrate_white
  9205 ;;		_setup
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text42
  9210  005BB8                     __ptext42:
  9211                           	callstack 0
  9212  005BB8                     _LED_OFF:
  9213                           	callstack 27
  9214  005BB8                     
  9215                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9216  005BB8  927F               	bcf	127,1,c	;volatile
  9217                           
  9218                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9219  005BBA  9E7E               	bcf	126,7,c	;volatile
  9220                           
  9221                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9222  005BBC  9879               	bcf	121,4,c	;volatile
  9223  005BBE                     
  9224                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9225  005BBE  0E11               	movlw	17
  9226  005BC0  6E02               	movwf	(??_LED_OFF+1)^0,c
  9227  005BC2  0E3C               	movlw	60
  9228  005BC4  6E01               	movwf	??_LED_OFF^0,c
  9229  005BC6  0ECB               	movlw	203
  9230  005BC8                     u6297:
  9231  005BC8  2EE8               	decfsz	wreg,f,c
  9232  005BCA  D7FE               	bra	u6297
  9233  005BCC  2E01               	decfsz	??_LED_OFF^0,f,c
  9234  005BCE  D7FC               	bra	u6297
  9235  005BD0  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9236  005BD2  D7FA               	bra	u6297
  9237  005BD4  F000               	nop	
  9238  005BD6  0012               	return		;funcret
  9239  005BD8                     __end_of_LED_OFF:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _LED_G *****************
  9243 ;; Defined at:
  9244 ;;		line 211 in file "color.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9262 ;;Total ram usage:        2 bytes
  9263 ;; Hardware stack levels used: 1
  9264 ;; Hardware stack levels required when called: 1
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_detect_color
  9269 ;;		_calibrate_white
  9270 ;;		_color_data_collection
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text43
  9275  005BD8                     __ptext43:
  9276                           	callstack 0
  9277  005BD8                     _LED_G:
  9278                           	callstack 27
  9279  005BD8                     
  9280                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9281  005BD8  927F               	bcf	127,1,c	;volatile
  9282                           
  9283                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9284  005BDA  9E7E               	bcf	126,7,c	;volatile
  9285                           
  9286                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9287  005BDC  8879               	bsf	121,4,c	;volatile
  9288  005BDE                     
  9289                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9290  005BDE  0E11               	movlw	17
  9291  005BE0  6E02               	movwf	(??_LED_G+1)^0,c
  9292  005BE2  0E3C               	movlw	60
  9293  005BE4  6E01               	movwf	??_LED_G^0,c
  9294  005BE6  0ECB               	movlw	203
  9295  005BE8                     u6307:
  9296  005BE8  2EE8               	decfsz	wreg,f,c
  9297  005BEA  D7FE               	bra	u6307
  9298  005BEC  2E01               	decfsz	??_LED_G^0,f,c
  9299  005BEE  D7FC               	bra	u6307
  9300  005BF0  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9301  005BF2  D7FA               	bra	u6307
  9302  005BF4  F000               	nop	
  9303  005BF6  0012               	return		;funcret
  9304  005BF8                     __end_of_LED_G:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function _LED_B *****************
  9308 ;; Defined at:
  9309 ;;		line 202 in file "color.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;		None
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  1    wreg      void 
  9316 ;; Registers used:
  9317 ;;		wreg
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;Total ram usage:        2 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; Hardware stack levels required when called: 1
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_detect_color
  9334 ;;		_calibrate_white
  9335 ;;		_color_data_collection
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text44
  9340  005BF8                     __ptext44:
  9341                           	callstack 0
  9342  005BF8                     _LED_B:
  9343                           	callstack 27
  9344  005BF8                     
  9345                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9346  005BF8  927F               	bcf	127,1,c	;volatile
  9347                           
  9348                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9349  005BFA  8E7E               	bsf	126,7,c	;volatile
  9350                           
  9351                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9352  005BFC  9879               	bcf	121,4,c	;volatile
  9353  005BFE                     
  9354                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9355  005BFE  0E11               	movlw	17
  9356  005C00  6E02               	movwf	(??_LED_B+1)^0,c
  9357  005C02  0E3C               	movlw	60
  9358  005C04  6E01               	movwf	??_LED_B^0,c
  9359  005C06  0ECB               	movlw	203
  9360  005C08                     u6317:
  9361  005C08  2EE8               	decfsz	wreg,f,c
  9362  005C0A  D7FE               	bra	u6317
  9363  005C0C  2E01               	decfsz	??_LED_B^0,f,c
  9364  005C0E  D7FC               	bra	u6317
  9365  005C10  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9366  005C12  D7FA               	bra	u6317
  9367  005C14  F000               	nop	
  9368  005C16  0012               	return		;funcret
  9369  005C18                     __end_of_LED_B:
  9370                           	callstack 0
  9371                           
  9372 ;; *************** function _amb_light_measure *****************
  9373 ;; Defined at:
  9374 ;;		line 378 in file "color.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  amb             2   79[COMRAM] PTR struct color_rgb
  9377 ;;		 -> main@rgb(8), main@amb(8), 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  CC_amb_3        2   89[COMRAM] unsigned int 
  9380 ;;  CC_amb_2        2   87[COMRAM] unsigned int 
  9381 ;;  CC_amb_1        2   85[COMRAM] unsigned int 
  9382 ;;  CC_amb_ave      2   83[COMRAM] unsigned int 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  2   79[COMRAM] unsigned int 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9396 ;;Total ram usage:       12 bytes
  9397 ;; Hardware stack levels used: 1
  9398 ;; Hardware stack levels required when called: 5
  9399 ;; This function calls:
  9400 ;;		_LED_C
  9401 ;;		___fldiv
  9402 ;;		___xxtofl
  9403 ;;		_color_read_Clear
  9404 ;;		_lroundf
  9405 ;;		_toggle_light
  9406 ;; This function is called by:
  9407 ;;		_setup
  9408 ;;		_test_function
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text45
  9413  0049C4                     __ptext45:
  9414                           	callstack 0
  9415  0049C4                     _amb_light_measure:
  9416                           	callstack 24
  9417  0049C4  0E00               	movlw	0
  9418  0049C6  6E59               	movwf	(amb_light_measure@CC_amb_2+1)^0,c
  9419  0049C8  0E00               	movlw	0
  9420  0049CA  6E58               	movwf	amb_light_measure@CC_amb_2^0,c
  9421  0049CC  0E00               	movlw	0
  9422  0049CE  6E5B               	movwf	(amb_light_measure@CC_amb_3+1)^0,c
  9423  0049D0  0E00               	movlw	0
  9424  0049D2  6E5A               	movwf	amb_light_measure@CC_amb_3^0,c
  9425  0049D4                     
  9426                           ;color.c: 381:     toggle_light(2,2);
  9427  0049D4  0E02               	movlw	2
  9428  0049D6  6E01               	movwf	toggle_light@toggletime^0,c
  9429  0049D8  0E02               	movlw	2
  9430  0049DA  ECC7  F019         	call	_toggle_light
  9431  0049DE                     
  9432                           ;color.c: 382:     LED_C();
  9433  0049DE  EC0C  F02E         	call	_LED_C	;wreg free
  9434  0049E2                     
  9435                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9436  0049E2  0E29               	movlw	41
  9437  0049E4  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9438  0049E6  0E96               	movlw	150
  9439  0049E8  6E52               	movwf	??_amb_light_measure^0,c
  9440  0049EA  0E7F               	movlw	127
  9441  0049EC                     u6327:
  9442  0049EC  2EE8               	decfsz	wreg,f,c
  9443  0049EE  D7FE               	bra	u6327
  9444  0049F0  2E52               	decfsz	??_amb_light_measure^0,f,c
  9445  0049F2  D7FC               	bra	u6327
  9446  0049F4  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9447  0049F6  D7FA               	bra	u6327
  9448  0049F8  F000               	nop	
  9449  0049FA                     
  9450                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  9451  0049FA  ECAC  F02B         	call	_color_read_Clear	;wreg free
  9452  0049FE  C005  F056         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9453  004A02  C006  F057         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9454  004A06                     
  9455                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9456  004A06  0E11               	movlw	17
  9457  004A08  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9458  004A0A  0E3C               	movlw	60
  9459  004A0C  6E52               	movwf	??_amb_light_measure^0,c
  9460  004A0E  0ECB               	movlw	203
  9461  004A10                     u6337:
  9462  004A10  2EE8               	decfsz	wreg,f,c
  9463  004A12  D7FE               	bra	u6337
  9464  004A14  2E52               	decfsz	??_amb_light_measure^0,f,c
  9465  004A16  D7FC               	bra	u6337
  9466  004A18  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9467  004A1A  D7FA               	bra	u6337
  9468  004A1C  F000               	nop	
  9469  004A1E                     
  9470                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  9471  004A1E  ECAC  F02B         	call	_color_read_Clear	;wreg free
  9472  004A22  C005  F058         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9473  004A26  C006  F059         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9474  004A2A                     
  9475                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9476  004A2A  0E11               	movlw	17
  9477  004A2C  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9478  004A2E  0E3C               	movlw	60
  9479  004A30  6E52               	movwf	??_amb_light_measure^0,c
  9480  004A32  0ECB               	movlw	203
  9481  004A34                     u6347:
  9482  004A34  2EE8               	decfsz	wreg,f,c
  9483  004A36  D7FE               	bra	u6347
  9484  004A38  2E52               	decfsz	??_amb_light_measure^0,f,c
  9485  004A3A  D7FC               	bra	u6347
  9486  004A3C  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9487  004A3E  D7FA               	bra	u6347
  9488  004A40  F000               	nop	
  9489  004A42                     
  9490                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  9491  004A42  ECAC  F02B         	call	_color_read_Clear	;wreg free
  9492  004A46  C005  F05A         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9493  004A4A  C006  F05B         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9494  004A4E                     
  9495                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9496  004A4E  0E11               	movlw	17
  9497  004A50  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9498  004A52  0E3C               	movlw	60
  9499  004A54  6E52               	movwf	??_amb_light_measure^0,c
  9500  004A56  0ECB               	movlw	203
  9501  004A58                     u6357:
  9502  004A58  2EE8               	decfsz	wreg,f,c
  9503  004A5A  D7FE               	bra	u6357
  9504  004A5C  2E52               	decfsz	??_amb_light_measure^0,f,c
  9505  004A5E  D7FC               	bra	u6357
  9506  004A60  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9507  004A62  D7FA               	bra	u6357
  9508  004A64  F000               	nop	
  9509  004A66                     
  9510                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9511  004A66  5058               	movf	amb_light_measure@CC_amb_2^0,w,c
  9512  004A68  2456               	addwf	amb_light_measure@CC_amb_1^0,w,c
  9513  004A6A  6E52               	movwf	??_amb_light_measure^0,c
  9514  004A6C  5059               	movf	(amb_light_measure@CC_amb_2+1)^0,w,c
  9515  004A6E  2057               	addwfc	(amb_light_measure@CC_amb_1+1)^0,w,c
  9516  004A70  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9517  004A72  505A               	movf	amb_light_measure@CC_amb_3^0,w,c
  9518  004A74  2652               	addwf	??_amb_light_measure^0,f,c
  9519  004A76  505B               	movf	(amb_light_measure@CC_amb_3+1)^0,w,c
  9520  004A78  2253               	addwfc	(??_amb_light_measure+1)^0,f,c
  9521  004A7A  C052  F001         	movff	??_amb_light_measure,___xxtofl@val
  9522  004A7E  C053  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9523  004A82  6A03               	clrf	(___xxtofl@val+2)^0,c
  9524  004A84  6A04               	clrf	(___xxtofl@val+3)^0,c
  9525  004A86  0E00               	movlw	0
  9526  004A88  ECCF  F01F         	call	___xxtofl
  9527  004A8C  C001  F028         	movff	?___xxtofl,___fldiv@b
  9528  004A90  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  9529  004A94  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  9530  004A98  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  9531  004A9C  0E00               	movlw	0
  9532  004A9E  6E2C               	movwf	___fldiv@a^0,c
  9533  004AA0  0E00               	movlw	0
  9534  004AA2  6E2D               	movwf	(___fldiv@a+1)^0,c
  9535  004AA4  0E40               	movlw	64
  9536  004AA6  6E2E               	movwf	(___fldiv@a+2)^0,c
  9537  004AA8  0E40               	movlw	64
  9538  004AAA  6E2F               	movwf	(___fldiv@a+3)^0,c
  9539  004AAC  EC10  F015         	call	___fldiv	;wreg free
  9540  004AB0  C028  F04C         	movff	?___fldiv,lroundf@x
  9541  004AB4  C029  F04D         	movff	?___fldiv+1,lroundf@x+1
  9542  004AB8  C02A  F04E         	movff	?___fldiv+2,lroundf@x+2
  9543  004ABC  C02B  F04F         	movff	?___fldiv+3,lroundf@x+3
  9544  004AC0  ECBD  F02C         	call	_lroundf	;wreg free
  9545  004AC4  C04C  F054         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9546  004AC8  C04D  F055         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9547  004ACC                     
  9548                           ;color.c: 396:     toggle_light(2,2);
  9549  004ACC  0E02               	movlw	2
  9550  004ACE  6E01               	movwf	toggle_light@toggletime^0,c
  9551  004AD0  0E02               	movlw	2
  9552  004AD2  ECC7  F019         	call	_toggle_light
  9553  004AD6                     
  9554                           ;color.c: 398:     return CC_amb_ave;
  9555  004AD6  C054  F050         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9556  004ADA  C055  F051         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9557  004ADE  0012               	return		;funcret
  9558  004AE0                     __end_of_amb_light_measure:
  9559                           	callstack 0
  9560                           
  9561 ;; *************** function _toggle_light *****************
  9562 ;; Defined at:
  9563 ;;		line 52 in file "color.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  lightnumber     1    wreg     unsigned char 
  9566 ;;  toggletime      1    0[COMRAM] unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9569 ;;  i               1    3[COMRAM] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, status,2, status,0
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9579 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9582 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9583 ;;Total ram usage:        5 bytes
  9584 ;; Hardware stack levels used: 1
  9585 ;; Hardware stack levels required when called: 1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_detect_color
  9590 ;;		_calibrate_white
  9591 ;;		_amb_light_measure
  9592 ;;		_turning_action
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text46
  9597  00338E                     __ptext46:
  9598                           	callstack 0
  9599  00338E                     _toggle_light:
  9600                           	callstack 27
  9601                           
  9602                           ;incstack = 0
  9603                           ;toggle_light@lightnumber stored from wreg
  9604  00338E  6E05               	movwf	toggle_light@lightnumber^0,c
  9605  003390                     
  9606                           ;color.c: 52: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 53: {;color.c: 54:     unsigned char i = 0;
  9607  003390  0E00               	movlw	0
  9608  003392  6E04               	movwf	toggle_light@i^0,c
  9609                           
  9610                           ;color.c: 56:     for (i = 0; i < toggletime; i++){
  9611  003394  0E00               	movlw	0
  9612  003396  6E04               	movwf	toggle_light@i^0,c
  9613  003398  EF13  F01B         	goto	l58
  9614  00339C                     l4318:
  9615                           
  9616                           ;color.c: 57:         if (lightnumber == 1){
  9617  00339C  0405               	decf	toggle_light@lightnumber^0,w,c
  9618  00339E  A4D8               	btfss	status,2,c
  9619  0033A0  EFD4  F019         	goto	u4481
  9620  0033A4  EFD6  F019         	goto	u4480
  9621  0033A8                     u4481:
  9622  0033A8  EF0E  F01A         	goto	l4326
  9623  0033AC                     u4480:
  9624  0033AC                     
  9625                           ;color.c: 58:             LATHbits.LATH1 = !LATHbits.LATH1;
  9626  0033AC  A280               	btfss	128,1,c	;volatile
  9627  0033AE  EFDB  F019         	goto	u4491
  9628  0033B2  EFDF  F019         	goto	u4490
  9629  0033B6                     u4491:
  9630  0033B6  6A02               	clrf	??_toggle_light^0,c
  9631  0033B8  2A02               	incf	??_toggle_light^0,f,c
  9632  0033BA  EFE0  F019         	goto	u4508
  9633  0033BE                     u4490:
  9634  0033BE  6A02               	clrf	??_toggle_light^0,c
  9635  0033C0                     u4508:
  9636  0033C0  4602               	rlncf	??_toggle_light^0,f,c
  9637  0033C2  5080               	movf	128,w,c	;volatile
  9638  0033C4  1802               	xorwf	??_toggle_light^0,w,c
  9639  0033C6  0BFD               	andlw	-3
  9640  0033C8  1802               	xorwf	??_toggle_light^0,w,c
  9641  0033CA  6E80               	movwf	128,c	;volatile
  9642  0033CC                     
  9643                           ;color.c: 59:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9644  0033CC  0E29               	movlw	41
  9645  0033CE  6E03               	movwf	(??_toggle_light+1)^0,c
  9646  0033D0  0E96               	movlw	150
  9647  0033D2  6E02               	movwf	??_toggle_light^0,c
  9648  0033D4  0E7F               	movlw	127
  9649  0033D6                     u6367:
  9650  0033D6  2EE8               	decfsz	wreg,f,c
  9651  0033D8  D7FE               	bra	u6367
  9652  0033DA  2E02               	decfsz	??_toggle_light^0,f,c
  9653  0033DC  D7FC               	bra	u6367
  9654  0033DE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9655  0033E0  D7FA               	bra	u6367
  9656  0033E2  F000               	nop	
  9657  0033E4                     
  9658                           ;color.c: 60:             LATHbits.LATH1 = !LATHbits.LATH1;
  9659  0033E4  A280               	btfss	128,1,c	;volatile
  9660  0033E6  EFF7  F019         	goto	u4511
  9661  0033EA  EFFB  F019         	goto	u4510
  9662  0033EE                     u4511:
  9663  0033EE  6A02               	clrf	??_toggle_light^0,c
  9664  0033F0  2A02               	incf	??_toggle_light^0,f,c
  9665  0033F2  EFFC  F019         	goto	u4528
  9666  0033F6                     u4510:
  9667  0033F6  6A02               	clrf	??_toggle_light^0,c
  9668  0033F8                     u4528:
  9669  0033F8  4602               	rlncf	??_toggle_light^0,f,c
  9670  0033FA  5080               	movf	128,w,c	;volatile
  9671  0033FC  1802               	xorwf	??_toggle_light^0,w,c
  9672  0033FE  0BFD               	andlw	-3
  9673  003400  1802               	xorwf	??_toggle_light^0,w,c
  9674  003402  6E80               	movwf	128,c	;volatile
  9675                           
  9676                           ;color.c: 61:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9677  003404  0E29               	movlw	41
  9678  003406  6E03               	movwf	(??_toggle_light+1)^0,c
  9679  003408  0E96               	movlw	150
  9680  00340A  6E02               	movwf	??_toggle_light^0,c
  9681  00340C  0E7F               	movlw	127
  9682  00340E                     u6377:
  9683  00340E  2EE8               	decfsz	wreg,f,c
  9684  003410  D7FE               	bra	u6377
  9685  003412  2E02               	decfsz	??_toggle_light^0,f,c
  9686  003414  D7FC               	bra	u6377
  9687  003416  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9688  003418  D7FA               	bra	u6377
  9689  00341A  F000               	nop	
  9690  00341C                     l4326:
  9691                           
  9692                           ;color.c: 63:         if (lightnumber == 2){
  9693  00341C  0E02               	movlw	2
  9694  00341E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9695  003420  A4D8               	btfss	status,2,c
  9696  003422  EF15  F01A         	goto	u4531
  9697  003426  EF17  F01A         	goto	u4530
  9698  00342A                     u4531:
  9699  00342A  EF4F  F01A         	goto	l4334
  9700  00342E                     u4530:
  9701  00342E                     
  9702                           ;color.c: 64:             LATDbits.LATD4 = !LATDbits.LATD4;
  9703  00342E  A87C               	btfss	124,4,c	;volatile
  9704  003430  EF1C  F01A         	goto	u4541
  9705  003434  EF20  F01A         	goto	u4540
  9706  003438                     u4541:
  9707  003438  6A02               	clrf	??_toggle_light^0,c
  9708  00343A  2A02               	incf	??_toggle_light^0,f,c
  9709  00343C  EF21  F01A         	goto	u4558
  9710  003440                     u4540:
  9711  003440  6A02               	clrf	??_toggle_light^0,c
  9712  003442                     u4558:
  9713  003442  3A02               	swapf	??_toggle_light^0,f,c
  9714  003444  507C               	movf	124,w,c	;volatile
  9715  003446  1802               	xorwf	??_toggle_light^0,w,c
  9716  003448  0BEF               	andlw	-17
  9717  00344A  1802               	xorwf	??_toggle_light^0,w,c
  9718  00344C  6E7C               	movwf	124,c	;volatile
  9719  00344E                     
  9720                           ;color.c: 65:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9721  00344E  0E29               	movlw	41
  9722  003450  6E03               	movwf	(??_toggle_light+1)^0,c
  9723  003452  0E96               	movlw	150
  9724  003454  6E02               	movwf	??_toggle_light^0,c
  9725  003456  0E7F               	movlw	127
  9726  003458                     u6387:
  9727  003458  2EE8               	decfsz	wreg,f,c
  9728  00345A  D7FE               	bra	u6387
  9729  00345C  2E02               	decfsz	??_toggle_light^0,f,c
  9730  00345E  D7FC               	bra	u6387
  9731  003460  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9732  003462  D7FA               	bra	u6387
  9733  003464  F000               	nop	
  9734  003466                     
  9735                           ;color.c: 66:             LATDbits.LATD4 = !LATDbits.LATD4;
  9736  003466  A87C               	btfss	124,4,c	;volatile
  9737  003468  EF38  F01A         	goto	u4561
  9738  00346C  EF3C  F01A         	goto	u4560
  9739  003470                     u4561:
  9740  003470  6A02               	clrf	??_toggle_light^0,c
  9741  003472  2A02               	incf	??_toggle_light^0,f,c
  9742  003474  EF3D  F01A         	goto	u4578
  9743  003478                     u4560:
  9744  003478  6A02               	clrf	??_toggle_light^0,c
  9745  00347A                     u4578:
  9746  00347A  3A02               	swapf	??_toggle_light^0,f,c
  9747  00347C  507C               	movf	124,w,c	;volatile
  9748  00347E  1802               	xorwf	??_toggle_light^0,w,c
  9749  003480  0BEF               	andlw	-17
  9750  003482  1802               	xorwf	??_toggle_light^0,w,c
  9751  003484  6E7C               	movwf	124,c	;volatile
  9752                           
  9753                           ;color.c: 67:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9754  003486  0E29               	movlw	41
  9755  003488  6E03               	movwf	(??_toggle_light+1)^0,c
  9756  00348A  0E96               	movlw	150
  9757  00348C  6E02               	movwf	??_toggle_light^0,c
  9758  00348E  0E7F               	movlw	127
  9759  003490                     u6397:
  9760  003490  2EE8               	decfsz	wreg,f,c
  9761  003492  D7FE               	bra	u6397
  9762  003494  2E02               	decfsz	??_toggle_light^0,f,c
  9763  003496  D7FC               	bra	u6397
  9764  003498  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9765  00349A  D7FA               	bra	u6397
  9766  00349C  F000               	nop	
  9767  00349E                     l4334:
  9768                           
  9769                           ;color.c: 69:         if (lightnumber == 3){
  9770  00349E  0E03               	movlw	3
  9771  0034A0  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9772  0034A2  A4D8               	btfss	status,2,c
  9773  0034A4  EF56  F01A         	goto	u4581
  9774  0034A8  EF58  F01A         	goto	u4580
  9775  0034AC                     u4581:
  9776  0034AC  EF94  F01A         	goto	l4342
  9777  0034B0                     u4580:
  9778  0034B0                     
  9779                           ;color.c: 70:             LATDbits.LATD3 = !LATDbits.LATD3;
  9780  0034B0  A67C               	btfss	124,3,c	;volatile
  9781  0034B2  EF5D  F01A         	goto	u4591
  9782  0034B6  EF61  F01A         	goto	u4590
  9783  0034BA                     u4591:
  9784  0034BA  6A02               	clrf	??_toggle_light^0,c
  9785  0034BC  2A02               	incf	??_toggle_light^0,f,c
  9786  0034BE  EF62  F01A         	goto	u4608
  9787  0034C2                     u4590:
  9788  0034C2  6A02               	clrf	??_toggle_light^0,c
  9789  0034C4                     u4608:
  9790  0034C4  4602               	rlncf	??_toggle_light^0,f,c
  9791  0034C6  4602               	rlncf	??_toggle_light^0,f,c
  9792  0034C8  4602               	rlncf	??_toggle_light^0,f,c
  9793  0034CA  507C               	movf	124,w,c	;volatile
  9794  0034CC  1802               	xorwf	??_toggle_light^0,w,c
  9795  0034CE  0BF7               	andlw	-9
  9796  0034D0  1802               	xorwf	??_toggle_light^0,w,c
  9797  0034D2  6E7C               	movwf	124,c	;volatile
  9798  0034D4                     
  9799                           ;color.c: 71:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9800  0034D4  0E29               	movlw	41
  9801  0034D6  6E03               	movwf	(??_toggle_light+1)^0,c
  9802  0034D8  0E96               	movlw	150
  9803  0034DA  6E02               	movwf	??_toggle_light^0,c
  9804  0034DC  0E7F               	movlw	127
  9805  0034DE                     u6407:
  9806  0034DE  2EE8               	decfsz	wreg,f,c
  9807  0034E0  D7FE               	bra	u6407
  9808  0034E2  2E02               	decfsz	??_toggle_light^0,f,c
  9809  0034E4  D7FC               	bra	u6407
  9810  0034E6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9811  0034E8  D7FA               	bra	u6407
  9812  0034EA  F000               	nop	
  9813  0034EC                     
  9814                           ;color.c: 72:             LATDbits.LATD3 = !LATDbits.LATD3;
  9815  0034EC  A67C               	btfss	124,3,c	;volatile
  9816  0034EE  EF7B  F01A         	goto	u4611
  9817  0034F2  EF7F  F01A         	goto	u4610
  9818  0034F6                     u4611:
  9819  0034F6  6A02               	clrf	??_toggle_light^0,c
  9820  0034F8  2A02               	incf	??_toggle_light^0,f,c
  9821  0034FA  EF80  F01A         	goto	u4628
  9822  0034FE                     u4610:
  9823  0034FE  6A02               	clrf	??_toggle_light^0,c
  9824  003500                     u4628:
  9825  003500  4602               	rlncf	??_toggle_light^0,f,c
  9826  003502  4602               	rlncf	??_toggle_light^0,f,c
  9827  003504  4602               	rlncf	??_toggle_light^0,f,c
  9828  003506  507C               	movf	124,w,c	;volatile
  9829  003508  1802               	xorwf	??_toggle_light^0,w,c
  9830  00350A  0BF7               	andlw	-9
  9831  00350C  1802               	xorwf	??_toggle_light^0,w,c
  9832  00350E  6E7C               	movwf	124,c	;volatile
  9833                           
  9834                           ;color.c: 73:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9835  003510  0E29               	movlw	41
  9836  003512  6E03               	movwf	(??_toggle_light+1)^0,c
  9837  003514  0E96               	movlw	150
  9838  003516  6E02               	movwf	??_toggle_light^0,c
  9839  003518  0E7F               	movlw	127
  9840  00351A                     u6417:
  9841  00351A  2EE8               	decfsz	wreg,f,c
  9842  00351C  D7FE               	bra	u6417
  9843  00351E  2E02               	decfsz	??_toggle_light^0,f,c
  9844  003520  D7FC               	bra	u6417
  9845  003522  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9846  003524  D7FA               	bra	u6417
  9847  003526  F000               	nop	
  9848  003528                     l4342:
  9849                           
  9850                           ;color.c: 75:         if (lightnumber == 4){
  9851  003528  0E04               	movlw	4
  9852  00352A  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9853  00352C  A4D8               	btfss	status,2,c
  9854  00352E  EF9B  F01A         	goto	u4631
  9855  003532  EF9D  F01A         	goto	u4630
  9856  003536                     u4631:
  9857  003536  EFD3  F01A         	goto	l4350
  9858  00353A                     u4630:
  9859  00353A                     
  9860                           ;color.c: 76:             LATFbits.LATF0 = !LATFbits.LATF0;
  9861  00353A  A07E               	btfss	126,0,c	;volatile
  9862  00353C  EFA2  F01A         	goto	u4641
  9863  003540  EFA6  F01A         	goto	u4640
  9864  003544                     u4641:
  9865  003544  6A02               	clrf	??_toggle_light^0,c
  9866  003546  2A02               	incf	??_toggle_light^0,f,c
  9867  003548  EFA7  F01A         	goto	u4658
  9868  00354C                     u4640:
  9869  00354C  6A02               	clrf	??_toggle_light^0,c
  9870  00354E                     u4658:
  9871  00354E  507E               	movf	126,w,c	;volatile
  9872  003550  1802               	xorwf	??_toggle_light^0,w,c
  9873  003552  0BFE               	andlw	-2
  9874  003554  1802               	xorwf	??_toggle_light^0,w,c
  9875  003556  6E7E               	movwf	126,c	;volatile
  9876  003558                     
  9877                           ;color.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9878  003558  0E29               	movlw	41
  9879  00355A  6E03               	movwf	(??_toggle_light+1)^0,c
  9880  00355C  0E96               	movlw	150
  9881  00355E  6E02               	movwf	??_toggle_light^0,c
  9882  003560  0E7F               	movlw	127
  9883  003562                     u6427:
  9884  003562  2EE8               	decfsz	wreg,f,c
  9885  003564  D7FE               	bra	u6427
  9886  003566  2E02               	decfsz	??_toggle_light^0,f,c
  9887  003568  D7FC               	bra	u6427
  9888  00356A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9889  00356C  D7FA               	bra	u6427
  9890  00356E  F000               	nop	
  9891  003570                     
  9892                           ;color.c: 78:             LATFbits.LATF0 = !LATFbits.LATF0;
  9893  003570  A07E               	btfss	126,0,c	;volatile
  9894  003572  EFBD  F01A         	goto	u4661
  9895  003576  EFC1  F01A         	goto	u4660
  9896  00357A                     u4661:
  9897  00357A  6A02               	clrf	??_toggle_light^0,c
  9898  00357C  2A02               	incf	??_toggle_light^0,f,c
  9899  00357E  EFC2  F01A         	goto	u4678
  9900  003582                     u4660:
  9901  003582  6A02               	clrf	??_toggle_light^0,c
  9902  003584                     u4678:
  9903  003584  507E               	movf	126,w,c	;volatile
  9904  003586  1802               	xorwf	??_toggle_light^0,w,c
  9905  003588  0BFE               	andlw	-2
  9906  00358A  1802               	xorwf	??_toggle_light^0,w,c
  9907  00358C  6E7E               	movwf	126,c	;volatile
  9908                           
  9909                           ;color.c: 79:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9910  00358E  0E29               	movlw	41
  9911  003590  6E03               	movwf	(??_toggle_light+1)^0,c
  9912  003592  0E96               	movlw	150
  9913  003594  6E02               	movwf	??_toggle_light^0,c
  9914  003596  0E7F               	movlw	127
  9915  003598                     u6437:
  9916  003598  2EE8               	decfsz	wreg,f,c
  9917  00359A  D7FE               	bra	u6437
  9918  00359C  2E02               	decfsz	??_toggle_light^0,f,c
  9919  00359E  D7FC               	bra	u6437
  9920  0035A0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9921  0035A2  D7FA               	bra	u6437
  9922  0035A4  F000               	nop	
  9923  0035A6                     l4350:
  9924                           
  9925                           ;color.c: 81:         if (lightnumber == 5){
  9926  0035A6  0E05               	movlw	5
  9927  0035A8  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9928  0035AA  A4D8               	btfss	status,2,c
  9929  0035AC  EFDA  F01A         	goto	u4681
  9930  0035B0  EFDC  F01A         	goto	u4680
  9931  0035B4                     u4681:
  9932  0035B4  EF12  F01B         	goto	l4358
  9933  0035B8                     u4680:
  9934  0035B8                     
  9935                           ;color.c: 82:             LATHbits.LATH0 = !LATHbits.LATH0;
  9936  0035B8  A080               	btfss	128,0,c	;volatile
  9937  0035BA  EFE1  F01A         	goto	u4691
  9938  0035BE  EFE5  F01A         	goto	u4690
  9939  0035C2                     u4691:
  9940  0035C2  6A02               	clrf	??_toggle_light^0,c
  9941  0035C4  2A02               	incf	??_toggle_light^0,f,c
  9942  0035C6  EFE6  F01A         	goto	u4708
  9943  0035CA                     u4690:
  9944  0035CA  6A02               	clrf	??_toggle_light^0,c
  9945  0035CC                     u4708:
  9946  0035CC  5080               	movf	128,w,c	;volatile
  9947  0035CE  1802               	xorwf	??_toggle_light^0,w,c
  9948  0035D0  0BFE               	andlw	-2
  9949  0035D2  1802               	xorwf	??_toggle_light^0,w,c
  9950  0035D4  6E80               	movwf	128,c	;volatile
  9951  0035D6                     
  9952                           ;color.c: 83:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9953  0035D6  0E29               	movlw	41
  9954  0035D8  6E03               	movwf	(??_toggle_light+1)^0,c
  9955  0035DA  0E96               	movlw	150
  9956  0035DC  6E02               	movwf	??_toggle_light^0,c
  9957  0035DE  0E7F               	movlw	127
  9958  0035E0                     u6447:
  9959  0035E0  2EE8               	decfsz	wreg,f,c
  9960  0035E2  D7FE               	bra	u6447
  9961  0035E4  2E02               	decfsz	??_toggle_light^0,f,c
  9962  0035E6  D7FC               	bra	u6447
  9963  0035E8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9964  0035EA  D7FA               	bra	u6447
  9965  0035EC  F000               	nop	
  9966  0035EE                     
  9967                           ;color.c: 84:             LATHbits.LATH0 = !LATHbits.LATH0;
  9968  0035EE  A080               	btfss	128,0,c	;volatile
  9969  0035F0  EFFC  F01A         	goto	u4711
  9970  0035F4  EF00  F01B         	goto	u4710
  9971  0035F8                     u4711:
  9972  0035F8  6A02               	clrf	??_toggle_light^0,c
  9973  0035FA  2A02               	incf	??_toggle_light^0,f,c
  9974  0035FC  EF01  F01B         	goto	u4728
  9975  003600                     u4710:
  9976  003600  6A02               	clrf	??_toggle_light^0,c
  9977  003602                     u4728:
  9978  003602  5080               	movf	128,w,c	;volatile
  9979  003604  1802               	xorwf	??_toggle_light^0,w,c
  9980  003606  0BFE               	andlw	-2
  9981  003608  1802               	xorwf	??_toggle_light^0,w,c
  9982  00360A  6E80               	movwf	128,c	;volatile
  9983                           
  9984                           ;color.c: 85:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9985  00360C  0E29               	movlw	41
  9986  00360E  6E03               	movwf	(??_toggle_light+1)^0,c
  9987  003610  0E96               	movlw	150
  9988  003612  6E02               	movwf	??_toggle_light^0,c
  9989  003614  0E7F               	movlw	127
  9990  003616                     u6457:
  9991  003616  2EE8               	decfsz	wreg,f,c
  9992  003618  D7FE               	bra	u6457
  9993  00361A  2E02               	decfsz	??_toggle_light^0,f,c
  9994  00361C  D7FC               	bra	u6457
  9995  00361E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9996  003620  D7FA               	bra	u6457
  9997  003622  F000               	nop	
  9998  003624                     l4358:
  9999                           
 10000                           ;color.c: 87:     }
 10001  003624  2A04               	incf	toggle_light@i^0,f,c
 10002  003626                     l58:
 10003  003626  5001               	movf	toggle_light@toggletime^0,w,c
 10004  003628  5C04               	subwf	toggle_light@i^0,w,c
 10005  00362A  A0D8               	btfss	status,0,c
 10006  00362C  EF1A  F01B         	goto	u4731
 10007  003630  EF1C  F01B         	goto	u4730
 10008  003634                     u4731:
 10009  003634  EFCE  F019         	goto	l4318
 10010  003638                     u4730:
 10011  003638  0012               	return		;funcret
 10012  00363A                     __end_of_toggle_light:
 10013                           	callstack 0
 10014                           
 10015 ;; *************** function _lroundf *****************
 10016 ;; Defined at:
 10017 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  x               4   75[COMRAM] float 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  4   75[COMRAM] long 
 10024 ;; Registers used:
 10025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;Total ram usage:        4 bytes
 10036 ;; Hardware stack levels used: 1
 10037 ;; Hardware stack levels required when called: 4
 10038 ;; This function calls:
 10039 ;;		___fltol
 10040 ;;		_roundf
 10041 ;; This function is called by:
 10042 ;;		_detect_color
 10043 ;;		_amb_light_measure
 10044 ;;		_detect_wall
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           	psect	text47
 10049  00597A                     __ptext47:
 10050                           	callstack 0
 10051  00597A                     _lroundf:
 10052                           	callstack 24
 10053  00597A  C04C  F028         	movff	lroundf@x,roundf@x
 10054  00597E  C04D  F029         	movff	lroundf@x+1,roundf@x+1
 10055  005982  C04E  F02A         	movff	lroundf@x+2,roundf@x+2
 10056  005986  C04F  F02B         	movff	lroundf@x+3,roundf@x+3
 10057  00598A  EC67  F011         	call	_roundf	;wreg free
 10058  00598E  C028  F042         	movff	?_roundf,___fltol@f1
 10059  005992  C029  F043         	movff	?_roundf+1,___fltol@f1+1
 10060  005996  C02A  F044         	movff	?_roundf+2,___fltol@f1+2
 10061  00599A  C02B  F045         	movff	?_roundf+3,___fltol@f1+3
 10062  00599E  ECF7  F025         	call	___fltol	;wreg free
 10063  0059A2  C042  F04C         	movff	?___fltol,?_lroundf
 10064  0059A6  C043  F04D         	movff	?___fltol+1,?_lroundf+1
 10065  0059AA  C044  F04E         	movff	?___fltol+2,?_lroundf+2
 10066  0059AE  C045  F04F         	movff	?___fltol+3,?_lroundf+3
 10067  0059B2  0012               	return		;funcret
 10068  0059B4                     __end_of_lroundf:
 10069                           	callstack 0
 10070                           
 10071 ;; *************** function _roundf *****************
 10072 ;; Defined at:
 10073 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  x               4   39[COMRAM] float 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;  y               4   61[COMRAM] float 
 10078 ;;  u               4   57[COMRAM] struct .
 10079 ;;  e               2   51[COMRAM] int 
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  4   39[COMRAM] float 
 10082 ;; Registers used:
 10083 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;Total ram usage:       26 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; Hardware stack levels required when called: 3
 10096 ;; This function calls:
 10097 ;;		___fladd
 10098 ;;		___flge
 10099 ;;		___flmul
 10100 ;;		___flneg
 10101 ;;		___flsub
 10102 ;; This function is called by:
 10103 ;;		_lroundf
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text48
 10108  0022CE                     __ptext48:
 10109                           	callstack 0
 10110  0022CE                     _roundf:
 10111                           	callstack 24
 10112  0022CE  C176  F03A         	movff	roundf@F527,roundf@u
 10113  0022D2  C177  F03B         	movff	roundf@F527+1,roundf@u+1
 10114  0022D6  C178  F03C         	movff	roundf@F527+2,roundf@u+2
 10115  0022DA  C179  F03D         	movff	roundf@F527+3,roundf@u+3
 10116  0022DE  C028  F03A         	movff	roundf@x,roundf@u
 10117  0022E2  C029  F03B         	movff	roundf@x+1,roundf@u+1
 10118  0022E6  C02A  F03C         	movff	roundf@x+2,roundf@u+2
 10119  0022EA  C02B  F03D         	movff	roundf@x+3,roundf@u+3
 10120  0022EE  C03A  F02C         	movff	roundf@u,??_roundf
 10121  0022F2  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10122  0022F6  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10123  0022FA  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10124  0022FE  0E18               	movlw	24
 10125  002300  EF87  F011         	goto	u4390
 10126  002304                     u4395:
 10127  002304  90D8               	bcf	status,0,c
 10128  002306  322F               	rrcf	(??_roundf+3)^0,f,c
 10129  002308  322E               	rrcf	(??_roundf+2)^0,f,c
 10130  00230A  322D               	rrcf	(??_roundf+1)^0,f,c
 10131  00230C  322C               	rrcf	??_roundf^0,f,c
 10132  00230E                     u4390:
 10133  00230E  2EE8               	decfsz	wreg,f,c
 10134  002310  EF82  F011         	goto	u4395
 10135  002314  502C               	movf	??_roundf^0,w,c
 10136  002316  6E34               	movwf	roundf@e^0,c
 10137  002318  6A35               	clrf	(roundf@e+1)^0,c
 10138  00231A  BE35               	btfsc	(roundf@e+1)^0,7,c
 10139  00231C  EF99  F011         	goto	u4401
 10140  002320  5035               	movf	(roundf@e+1)^0,w,c
 10141  002322  E109               	bnz	u4400
 10142  002324  0E96               	movlw	150
 10143  002326  5C34               	subwf	roundf@e^0,w,c
 10144  002328  A0D8               	btfss	status,0,c
 10145  00232A  EF99  F011         	goto	u4401
 10146  00232E  EF9B  F011         	goto	u4400
 10147  002332                     u4401:
 10148  002332  EFA5  F011         	goto	l4288
 10149  002336                     u4400:
 10150  002336  C028  F028         	movff	roundf@x,?_roundf
 10151  00233A  C029  F029         	movff	roundf@x+1,?_roundf+1
 10152  00233E  C02A  F02A         	movff	roundf@x+2,?_roundf+2
 10153  002342  C02B  F02B         	movff	roundf@x+3,?_roundf+3
 10154  002346  EF3D  F013         	goto	l1405
 10155  00234A                     l4288:
 10156  00234A  C03A  F02C         	movff	roundf@u,??_roundf
 10157  00234E  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10158  002352  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10159  002356  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10160  00235A  0E20               	movlw	32
 10161  00235C  EFB5  F011         	goto	u4410
 10162  002360                     u4415:
 10163  002360  90D8               	bcf	status,0,c
 10164  002362  322F               	rrcf	(??_roundf+3)^0,f,c
 10165  002364  322E               	rrcf	(??_roundf+2)^0,f,c
 10166  002366  322D               	rrcf	(??_roundf+1)^0,f,c
 10167  002368  322C               	rrcf	??_roundf^0,f,c
 10168  00236A                     u4410:
 10169  00236A  2EE8               	decfsz	wreg,f,c
 10170  00236C  EFB0  F011         	goto	u4415
 10171  002370  502C               	movf	??_roundf^0,w,c
 10172  002372  102D               	iorwf	(??_roundf+1)^0,w,c
 10173  002374  102E               	iorwf	(??_roundf+2)^0,w,c
 10174  002376  102F               	iorwf	(??_roundf+3)^0,w,c
 10175  002378  B4D8               	btfsc	status,2,c
 10176  00237A  EFC1  F011         	goto	u4421
 10177  00237E  EFC3  F011         	goto	u4420
 10178  002382                     u4421:
 10179  002382  EFD5  F011         	goto	l4292
 10180  002386                     u4420:
 10181  002386  C028  F001         	movff	roundf@x,___flneg@f1
 10182  00238A  C029  F002         	movff	roundf@x+1,___flneg@f1+1
 10183  00238E  C02A  F003         	movff	roundf@x+2,___flneg@f1+2
 10184  002392  C02B  F004         	movff	roundf@x+3,___flneg@f1+3
 10185  002396  ECF6  F02C         	call	___flneg	;wreg free
 10186  00239A  C001  F028         	movff	?___flneg,roundf@x
 10187  00239E  C002  F029         	movff	?___flneg+1,roundf@x+1
 10188  0023A2  C003  F02A         	movff	?___flneg+2,roundf@x+2
 10189  0023A6  C004  F02B         	movff	?___flneg+3,roundf@x+3
 10190  0023AA                     l4292:
 10191  0023AA  BE35               	btfsc	(roundf@e+1)^0,7,c
 10192  0023AC  EFE3  F011         	goto	u4430
 10193  0023B0  5035               	movf	(roundf@e+1)^0,w,c
 10194  0023B2  E107               	bnz	u4431
 10195  0023B4  0E7E               	movlw	126
 10196  0023B6  5C34               	subwf	roundf@e^0,w,c
 10197  0023B8  B0D8               	btfsc	status,0,c
 10198  0023BA  EFE1  F011         	goto	u4431
 10199  0023BE  EFE3  F011         	goto	u4430
 10200  0023C2                     u4431:
 10201  0023C2  EFFF  F011         	goto	l4298
 10202  0023C6                     u4430:
 10203  0023C6  C03A  F00F         	movff	roundf@u,___flmul@b
 10204  0023CA  C03B  F010         	movff	roundf@u+1,___flmul@b+1
 10205  0023CE  C03C  F011         	movff	roundf@u+2,___flmul@b+2
 10206  0023D2  C03D  F012         	movff	roundf@u+3,___flmul@b+3
 10207  0023D6  0E00               	movlw	0
 10208  0023D8  6E13               	movwf	___flmul@a^0,c
 10209  0023DA  0E00               	movlw	0
 10210  0023DC  6E14               	movwf	(___flmul@a+1)^0,c
 10211  0023DE  0E00               	movlw	0
 10212  0023E0  6E15               	movwf	(___flmul@a+2)^0,c
 10213  0023E2  0E00               	movlw	0
 10214  0023E4  6E16               	movwf	(___flmul@a+3)^0,c
 10215  0023E6  EC52  F00F         	call	___flmul	;wreg free
 10216  0023EA  C00F  F028         	movff	?___flmul,?_roundf
 10217  0023EE  C010  F029         	movff	?___flmul+1,?_roundf+1
 10218  0023F2  C011  F02A         	movff	?___flmul+2,?_roundf+2
 10219  0023F6  C012  F02B         	movff	?___flmul+3,?_roundf+3
 10220  0023FA  EF3D  F013         	goto	l1405
 10221  0023FE                     l4298:
 10222  0023FE  0E00               	movlw	0
 10223  002400  6E05               	movwf	___fladd@a^0,c
 10224  002402  0E00               	movlw	0
 10225  002404  6E06               	movwf	(___fladd@a+1)^0,c
 10226  002406  0E00               	movlw	0
 10227  002408  6E07               	movwf	(___fladd@a+2)^0,c
 10228  00240A  0E4B               	movlw	75
 10229  00240C  6E08               	movwf	(___fladd@a+3)^0,c
 10230  00240E  C028  F001         	movff	roundf@x,___fladd@b
 10231  002412  C029  F002         	movff	roundf@x+1,___fladd@b+1
 10232  002416  C02A  F003         	movff	roundf@x+2,___fladd@b+2
 10233  00241A  C02B  F004         	movff	roundf@x+3,___fladd@b+3
 10234  00241E  ECF2  F00C         	call	___fladd	;wreg free
 10235  002422  C001  F036         	movff	?___fladd,_roundf$2933
 10236  002426  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10237  00242A  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10238  00242E  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10239  002432  0E00               	movlw	0
 10240  002434  6E05               	movwf	___fladd@a^0,c
 10241  002436  0E00               	movlw	0
 10242  002438  6E06               	movwf	(___fladd@a+1)^0,c
 10243  00243A  0E00               	movlw	0
 10244  00243C  6E07               	movwf	(___fladd@a+2)^0,c
 10245  00243E  0ECB               	movlw	203
 10246  002440  6E08               	movwf	(___fladd@a+3)^0,c
 10247  002442  C036  F001         	movff	_roundf$2933,___fladd@b
 10248  002446  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10249  00244A  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10250  00244E  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10251  002452  ECF2  F00C         	call	___fladd	;wreg free
 10252  002456  C001  F030         	movff	?___fladd,_roundf$2934
 10253  00245A  C002  F031         	movff	?___fladd+1,_roundf$2934+1
 10254  00245E  C003  F032         	movff	?___fladd+2,_roundf$2934+2
 10255  002462  C004  F033         	movff	?___fladd+3,_roundf$2934+3
 10256  002466  C030  F011         	movff	_roundf$2934,___flsub@b
 10257  00246A  C031  F012         	movff	_roundf$2934+1,___flsub@b+1
 10258  00246E  C032  F013         	movff	_roundf$2934+2,___flsub@b+2
 10259  002472  C033  F014         	movff	_roundf$2934+3,___flsub@b+3
 10260  002476  C028  F015         	movff	roundf@x,___flsub@a
 10261  00247A  C029  F016         	movff	roundf@x+1,___flsub@a+1
 10262  00247E  C02A  F017         	movff	roundf@x+2,___flsub@a+2
 10263  002482  C02B  F018         	movff	roundf@x+3,___flsub@a+3
 10264  002486  ECD4  F02B         	call	___flsub	;wreg free
 10265  00248A  C011  F03E         	movff	?___flsub,roundf@y
 10266  00248E  C012  F03F         	movff	?___flsub+1,roundf@y+1
 10267  002492  C013  F040         	movff	?___flsub+2,roundf@y+2
 10268  002496  C014  F041         	movff	?___flsub+3,roundf@y+3
 10269  00249A  0E00               	movlw	0
 10270  00249C  6E01               	movwf	___flge@ff1^0,c
 10271  00249E  0E00               	movlw	0
 10272  0024A0  6E02               	movwf	(___flge@ff1+1)^0,c
 10273  0024A2  0E00               	movlw	0
 10274  0024A4  6E03               	movwf	(___flge@ff1+2)^0,c
 10275  0024A6  0E3F               	movlw	63
 10276  0024A8  6E04               	movwf	(___flge@ff1+3)^0,c
 10277  0024AA  C03E  F005         	movff	roundf@y,___flge@ff2
 10278  0024AE  C03F  F006         	movff	roundf@y+1,___flge@ff2+1
 10279  0024B2  C040  F007         	movff	roundf@y+2,___flge@ff2+2
 10280  0024B6  C041  F008         	movff	roundf@y+3,___flge@ff2+3
 10281  0024BA  EC7A  F026         	call	___flge	;wreg free
 10282  0024BE  B0D8               	btfsc	status,0,c
 10283  0024C0  EF64  F012         	goto	u4441
 10284  0024C4  EF66  F012         	goto	u4440
 10285  0024C8                     u4441:
 10286  0024C8  EF9C  F012         	goto	l4302
 10287  0024CC                     u4440:
 10288  0024CC  C028  F005         	movff	roundf@x,___fladd@a
 10289  0024D0  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10290  0024D4  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10291  0024D8  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10292  0024DC  C03E  F001         	movff	roundf@y,___fladd@b
 10293  0024E0  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10294  0024E4  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10295  0024E8  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10296  0024EC  ECF2  F00C         	call	___fladd	;wreg free
 10297  0024F0  C001  F036         	movff	?___fladd,_roundf$2933
 10298  0024F4  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10299  0024F8  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10300  0024FC  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10301  002500  C036  F001         	movff	_roundf$2933,___fladd@b
 10302  002504  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10303  002508  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10304  00250C  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10305  002510  0E00               	movlw	0
 10306  002512  6E05               	movwf	___fladd@a^0,c
 10307  002514  0E00               	movlw	0
 10308  002516  6E06               	movwf	(___fladd@a+1)^0,c
 10309  002518  0E80               	movlw	128
 10310  00251A  6E07               	movwf	(___fladd@a+2)^0,c
 10311  00251C  0EBF               	movlw	191
 10312  00251E  6E08               	movwf	(___fladd@a+3)^0,c
 10313  002520  ECF2  F00C         	call	___fladd	;wreg free
 10314  002524  C001  F03E         	movff	?___fladd,roundf@y
 10315  002528  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10316  00252C  C003  F040         	movff	?___fladd+2,roundf@y+2
 10317  002530  C004  F041         	movff	?___fladd+3,roundf@y+3
 10318  002534  EF05  F013         	goto	l4308
 10319  002538                     l4302:
 10320  002538  0E00               	movlw	0
 10321  00253A  6E01               	movwf	___flge@ff1^0,c
 10322  00253C  0E00               	movlw	0
 10323  00253E  6E02               	movwf	(___flge@ff1+1)^0,c
 10324  002540  0E00               	movlw	0
 10325  002542  6E03               	movwf	(___flge@ff1+2)^0,c
 10326  002544  0EBF               	movlw	191
 10327  002546  6E04               	movwf	(___flge@ff1+3)^0,c
 10328  002548  C03E  F005         	movff	roundf@y,___flge@ff2
 10329  00254C  C03F  F006         	movff	roundf@y+1,___flge@ff2+1
 10330  002550  C040  F007         	movff	roundf@y+2,___flge@ff2+2
 10331  002554  C041  F008         	movff	roundf@y+3,___flge@ff2+3
 10332  002558  EC7A  F026         	call	___flge	;wreg free
 10333  00255C  A0D8               	btfss	status,0,c
 10334  00255E  EFB3  F012         	goto	u4451
 10335  002562  EFB5  F012         	goto	u4450
 10336  002566                     u4451:
 10337  002566  EFEB  F012         	goto	l4306
 10338  00256A                     u4450:
 10339  00256A  C028  F005         	movff	roundf@x,___fladd@a
 10340  00256E  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10341  002572  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10342  002576  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10343  00257A  C03E  F001         	movff	roundf@y,___fladd@b
 10344  00257E  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10345  002582  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10346  002586  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10347  00258A  ECF2  F00C         	call	___fladd	;wreg free
 10348  00258E  C001  F036         	movff	?___fladd,_roundf$2933
 10349  002592  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10350  002596  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10351  00259A  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10352  00259E  C036  F001         	movff	_roundf$2933,___fladd@b
 10353  0025A2  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10354  0025A6  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10355  0025AA  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10356  0025AE  0E00               	movlw	0
 10357  0025B0  6E05               	movwf	___fladd@a^0,c
 10358  0025B2  0E00               	movlw	0
 10359  0025B4  6E06               	movwf	(___fladd@a+1)^0,c
 10360  0025B6  0E80               	movlw	128
 10361  0025B8  6E07               	movwf	(___fladd@a+2)^0,c
 10362  0025BA  0E3F               	movlw	63
 10363  0025BC  6E08               	movwf	(___fladd@a+3)^0,c
 10364  0025BE  ECF2  F00C         	call	___fladd	;wreg free
 10365  0025C2  C001  F03E         	movff	?___fladd,roundf@y
 10366  0025C6  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10367  0025CA  C003  F040         	movff	?___fladd+2,roundf@y+2
 10368  0025CE  C004  F041         	movff	?___fladd+3,roundf@y+3
 10369  0025D2  EF05  F013         	goto	l4308
 10370  0025D6                     l4306:
 10371  0025D6  C03E  F001         	movff	roundf@y,___fladd@b
 10372  0025DA  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10373  0025DE  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10374  0025E2  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10375  0025E6  C028  F005         	movff	roundf@x,___fladd@a
 10376  0025EA  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10377  0025EE  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10378  0025F2  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10379  0025F6  ECF2  F00C         	call	___fladd	;wreg free
 10380  0025FA  C001  F03E         	movff	?___fladd,roundf@y
 10381  0025FE  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10382  002602  C003  F040         	movff	?___fladd+2,roundf@y+2
 10383  002606  C004  F041         	movff	?___fladd+3,roundf@y+3
 10384  00260A                     l4308:
 10385  00260A  C03A  F02C         	movff	roundf@u,??_roundf
 10386  00260E  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10387  002612  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10388  002616  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10389  00261A  0E20               	movlw	32
 10390  00261C  EF15  F013         	goto	u4460
 10391  002620                     u4465:
 10392  002620  90D8               	bcf	status,0,c
 10393  002622  322F               	rrcf	(??_roundf+3)^0,f,c
 10394  002624  322E               	rrcf	(??_roundf+2)^0,f,c
 10395  002626  322D               	rrcf	(??_roundf+1)^0,f,c
 10396  002628  322C               	rrcf	??_roundf^0,f,c
 10397  00262A                     u4460:
 10398  00262A  2EE8               	decfsz	wreg,f,c
 10399  00262C  EF10  F013         	goto	u4465
 10400  002630  502C               	movf	??_roundf^0,w,c
 10401  002632  102D               	iorwf	(??_roundf+1)^0,w,c
 10402  002634  102E               	iorwf	(??_roundf+2)^0,w,c
 10403  002636  102F               	iorwf	(??_roundf+3)^0,w,c
 10404  002638  B4D8               	btfsc	status,2,c
 10405  00263A  EF21  F013         	goto	u4471
 10406  00263E  EF23  F013         	goto	u4470
 10407  002642                     u4471:
 10408  002642  EF35  F013         	goto	l4312
 10409  002646                     u4470:
 10410  002646  C03E  F001         	movff	roundf@y,___flneg@f1
 10411  00264A  C03F  F002         	movff	roundf@y+1,___flneg@f1+1
 10412  00264E  C040  F003         	movff	roundf@y+2,___flneg@f1+2
 10413  002652  C041  F004         	movff	roundf@y+3,___flneg@f1+3
 10414  002656  ECF6  F02C         	call	___flneg	;wreg free
 10415  00265A  C001  F03E         	movff	?___flneg,roundf@y
 10416  00265E  C002  F03F         	movff	?___flneg+1,roundf@y+1
 10417  002662  C003  F040         	movff	?___flneg+2,roundf@y+2
 10418  002666  C004  F041         	movff	?___flneg+3,roundf@y+3
 10419  00266A                     l4312:
 10420  00266A  C03E  F028         	movff	roundf@y,?_roundf
 10421  00266E  C03F  F029         	movff	roundf@y+1,?_roundf+1
 10422  002672  C040  F02A         	movff	roundf@y+2,?_roundf+2
 10423  002676  C041  F02B         	movff	roundf@y+3,?_roundf+3
 10424  00267A                     l1405:
 10425  00267A  0012               	return		;funcret
 10426  00267C                     __end_of_roundf:
 10427                           	callstack 0
 10428                           
 10429 ;; *************** function ___flsub *****************
 10430 ;; Defined at:
 10431 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  b               4   16[COMRAM] float 
 10434 ;;  a               4   20[COMRAM] float 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  4   16[COMRAM] float 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10446 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10450 ;;Total ram usage:        8 bytes
 10451 ;; Hardware stack levels used: 1
 10452 ;; Hardware stack levels required when called: 2
 10453 ;; This function calls:
 10454 ;;		___fladd
 10455 ;; This function is called by:
 10456 ;;		_roundf
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text49
 10461  0057A8                     __ptext49:
 10462                           	callstack 0
 10463  0057A8                     ___flsub:
 10464                           	callstack 24
 10465  0057A8  0E00               	movlw	0
 10466  0057AA  1A15               	xorwf	___flsub@a^0,f,c
 10467  0057AC  0E00               	movlw	0
 10468  0057AE  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10469  0057B0  0E00               	movlw	0
 10470  0057B2  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10471  0057B4  0E80               	movlw	128
 10472  0057B6  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10473  0057B8  C011  F001         	movff	___flsub@b,___fladd@b
 10474  0057BC  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10475  0057C0  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10476  0057C4  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10477  0057C8  C015  F005         	movff	___flsub@a,___fladd@a
 10478  0057CC  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10479  0057D0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10480  0057D4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10481  0057D8  ECF2  F00C         	call	___fladd	;wreg free
 10482  0057DC  C001  F011         	movff	?___fladd,?___flsub
 10483  0057E0  C002  F012         	movff	?___fladd+1,?___flsub+1
 10484  0057E4  C003  F013         	movff	?___fladd+2,?___flsub+2
 10485  0057E8  C004  F014         	movff	?___fladd+3,?___flsub+3
 10486  0057EC  0012               	return		;funcret
 10487  0057EE                     __end_of___flsub:
 10488                           	callstack 0
 10489                           
 10490 ;; *************** function ___fladd *****************
 10491 ;; Defined at:
 10492 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  b               4    0[COMRAM] float 
 10495 ;;  a               4    4[COMRAM] float 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  grs             1   15[COMRAM] unsigned char 
 10498 ;;  bexp            1   14[COMRAM] unsigned char 
 10499 ;;  aexp            1   13[COMRAM] unsigned char 
 10500 ;;  signs           1   12[COMRAM] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  4    0[COMRAM] unsigned char 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10510 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;Total ram usage:       16 bytes
 10515 ;; Hardware stack levels used: 1
 10516 ;; Hardware stack levels required when called: 1
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		___flsub
 10521 ;;		_roundf
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           	psect	text50
 10526  0019E4                     __ptext50:
 10527                           	callstack 0
 10528  0019E4                     ___fladd:
 10529                           	callstack 24
 10530  0019E4  5004               	movf	(___fladd@b+3)^0,w,c
 10531  0019E6  0B80               	andlw	128
 10532  0019E8  6E0D               	movwf	___fladd@signs^0,c
 10533  0019EA  5004               	movf	(___fladd@b+3)^0,w,c
 10534  0019EC  2404               	addwf	(___fladd@b+3)^0,w,c
 10535  0019EE  6E0F               	movwf	___fladd@bexp^0,c
 10536  0019F0  AE03               	btfss	(___fladd@b+2)^0,7,c
 10537  0019F2  EFFD  F00C         	goto	u3441
 10538  0019F6  EFFF  F00C         	goto	u3440
 10539  0019FA                     u3441:
 10540  0019FA  EF00  F00D         	goto	l3654
 10541  0019FE                     u3440:
 10542  0019FE  800F               	bsf	___fladd@bexp^0,0,c
 10543  001A00                     l3654:
 10544  001A00  500F               	movf	___fladd@bexp^0,w,c
 10545  001A02  B4D8               	btfsc	status,2,c
 10546  001A04  EF06  F00D         	goto	u3451
 10547  001A08  EF08  F00D         	goto	u3450
 10548  001A0C                     u3451:
 10549  001A0C  EF1D  F00D         	goto	l3664
 10550  001A10                     u3450:
 10551  001A10  280F               	incf	___fladd@bexp^0,w,c
 10552  001A12  A4D8               	btfss	status,2,c
 10553  001A14  EF0E  F00D         	goto	u3461
 10554  001A18  EF10  F00D         	goto	u3460
 10555  001A1C                     u3461:
 10556  001A1C  EF18  F00D         	goto	l3660
 10557  001A20                     u3460:
 10558  001A20  0E00               	movlw	0
 10559  001A22  6E01               	movwf	___fladd@b^0,c
 10560  001A24  0E00               	movlw	0
 10561  001A26  6E02               	movwf	(___fladd@b+1)^0,c
 10562  001A28  0E00               	movlw	0
 10563  001A2A  6E03               	movwf	(___fladd@b+2)^0,c
 10564  001A2C  0E00               	movlw	0
 10565  001A2E  6E04               	movwf	(___fladd@b+3)^0,c
 10566  001A30                     l3660:
 10567  001A30  8E03               	bsf	(___fladd@b+2)^0,7,c
 10568  001A32  0E00               	movlw	0
 10569  001A34  6E04               	movwf	(___fladd@b+3)^0,c
 10570  001A36  EF25  F00D         	goto	l3666
 10571  001A3A                     l3664:
 10572  001A3A  0E00               	movlw	0
 10573  001A3C  6E01               	movwf	___fladd@b^0,c
 10574  001A3E  0E00               	movlw	0
 10575  001A40  6E02               	movwf	(___fladd@b+1)^0,c
 10576  001A42  0E00               	movlw	0
 10577  001A44  6E03               	movwf	(___fladd@b+2)^0,c
 10578  001A46  0E00               	movlw	0
 10579  001A48  6E04               	movwf	(___fladd@b+3)^0,c
 10580  001A4A                     l3666:
 10581  001A4A  5008               	movf	(___fladd@a+3)^0,w,c
 10582  001A4C  0B80               	andlw	128
 10583  001A4E  6E0E               	movwf	___fladd@aexp^0,c
 10584  001A50  500D               	movf	___fladd@signs^0,w,c
 10585  001A52  180E               	xorwf	___fladd@aexp^0,w,c
 10586  001A54  B4D8               	btfsc	status,2,c
 10587  001A56  EF2F  F00D         	goto	u3471
 10588  001A5A  EF31  F00D         	goto	u3470
 10589  001A5E                     u3471:
 10590  001A5E  EF32  F00D         	goto	l3672
 10591  001A62                     u3470:
 10592  001A62  8C0D               	bsf	___fladd@signs^0,6,c
 10593  001A64                     l3672:
 10594  001A64  5008               	movf	(___fladd@a+3)^0,w,c
 10595  001A66  2408               	addwf	(___fladd@a+3)^0,w,c
 10596  001A68  6E0E               	movwf	___fladd@aexp^0,c
 10597  001A6A  AE07               	btfss	(___fladd@a+2)^0,7,c
 10598  001A6C  EF3A  F00D         	goto	u3481
 10599  001A70  EF3C  F00D         	goto	u3480
 10600  001A74                     u3481:
 10601  001A74  EF3D  F00D         	goto	l3678
 10602  001A78                     u3480:
 10603  001A78  800E               	bsf	___fladd@aexp^0,0,c
 10604  001A7A                     l3678:
 10605  001A7A  500E               	movf	___fladd@aexp^0,w,c
 10606  001A7C  B4D8               	btfsc	status,2,c
 10607  001A7E  EF43  F00D         	goto	u3491
 10608  001A82  EF45  F00D         	goto	u3490
 10609  001A86                     u3491:
 10610  001A86  EF5A  F00D         	goto	l3688
 10611  001A8A                     u3490:
 10612  001A8A  280E               	incf	___fladd@aexp^0,w,c
 10613  001A8C  A4D8               	btfss	status,2,c
 10614  001A8E  EF4B  F00D         	goto	u3501
 10615  001A92  EF4D  F00D         	goto	u3500
 10616  001A96                     u3501:
 10617  001A96  EF55  F00D         	goto	l3684
 10618  001A9A                     u3500:
 10619  001A9A  0E00               	movlw	0
 10620  001A9C  6E05               	movwf	___fladd@a^0,c
 10621  001A9E  0E00               	movlw	0
 10622  001AA0  6E06               	movwf	(___fladd@a+1)^0,c
 10623  001AA2  0E00               	movlw	0
 10624  001AA4  6E07               	movwf	(___fladd@a+2)^0,c
 10625  001AA6  0E00               	movlw	0
 10626  001AA8  6E08               	movwf	(___fladd@a+3)^0,c
 10627  001AAA                     l3684:
 10628  001AAA  8E07               	bsf	(___fladd@a+2)^0,7,c
 10629  001AAC  0E00               	movlw	0
 10630  001AAE  6E08               	movwf	(___fladd@a+3)^0,c
 10631  001AB0  EF62  F00D         	goto	l3690
 10632  001AB4                     l3688:
 10633  001AB4  0E00               	movlw	0
 10634  001AB6  6E05               	movwf	___fladd@a^0,c
 10635  001AB8  0E00               	movlw	0
 10636  001ABA  6E06               	movwf	(___fladd@a+1)^0,c
 10637  001ABC  0E00               	movlw	0
 10638  001ABE  6E07               	movwf	(___fladd@a+2)^0,c
 10639  001AC0  0E00               	movlw	0
 10640  001AC2  6E08               	movwf	(___fladd@a+3)^0,c
 10641  001AC4                     l3690:
 10642  001AC4  500F               	movf	___fladd@bexp^0,w,c
 10643  001AC6  5C0E               	subwf	___fladd@aexp^0,w,c
 10644  001AC8  B0D8               	btfsc	status,0,c
 10645  001ACA  EF69  F00D         	goto	u3511
 10646  001ACE  EF6B  F00D         	goto	u3510
 10647  001AD2                     u3511:
 10648  001AD2  EF92  F00D         	goto	l3726
 10649  001AD6                     u3510:
 10650  001AD6  AC0D               	btfss	___fladd@signs^0,6,c
 10651  001AD8  EF70  F00D         	goto	u3521
 10652  001ADC  EF72  F00D         	goto	u3520
 10653  001AE0                     u3521:
 10654  001AE0  EF74  F00D         	goto	l3696
 10655  001AE4                     u3520:
 10656  001AE4  0E80               	movlw	128
 10657  001AE6  1A0D               	xorwf	___fladd@signs^0,f,c
 10658  001AE8                     l3696:
 10659  001AE8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10660  001AEC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10661  001AF0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10662  001AF4  C001  F010         	movff	___fladd@b,___fladd@grs
 10663  001AF8  C005  F001         	movff	___fladd@a,___fladd@b
 10664  001AFC  C010  F005         	movff	___fladd@grs,___fladd@a
 10665  001B00  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10666  001B04  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10667  001B08  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10668  001B0C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10669  001B10  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10670  001B14  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10671  001B18  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10672  001B1C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10673  001B20  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10674  001B24                     l3726:
 10675  001B24  0E00               	movlw	0
 10676  001B26  6E10               	movwf	___fladd@grs^0,c
 10677  001B28  500F               	movf	___fladd@bexp^0,w,c
 10678  001B2A  C00E  F009         	movff	___fladd@aexp,??___fladd
 10679  001B2E  6A0A               	clrf	(??___fladd+1)^0,c
 10680  001B30  5E09               	subwf	??___fladd^0,f,c
 10681  001B32  0E00               	movlw	0
 10682  001B34  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10683  001B36  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10684  001B38  EFA7  F00D         	goto	u3531
 10685  001B3C  500A               	movf	(??___fladd+1)^0,w,c
 10686  001B3E  E109               	bnz	u3530
 10687  001B40  0E1A               	movlw	26
 10688  001B42  5C09               	subwf	??___fladd^0,w,c
 10689  001B44  A0D8               	btfss	status,0,c
 10690  001B46  EFA7  F00D         	goto	u3531
 10691  001B4A  EFA9  F00D         	goto	u3530
 10692  001B4E                     u3531:
 10693  001B4E  EFE0  F00D         	goto	l1141
 10694  001B52                     u3530:
 10695  001B52  5001               	movf	___fladd@b^0,w,c
 10696  001B54  1002               	iorwf	(___fladd@b+1)^0,w,c
 10697  001B56  1003               	iorwf	(___fladd@b+2)^0,w,c
 10698  001B58  1004               	iorwf	(___fladd@b+3)^0,w,c
 10699  001B5A  A4D8               	btfss	status,2,c
 10700  001B5C  EFB2  F00D         	goto	u3541
 10701  001B60  EFB5  F00D         	goto	u3540
 10702  001B64                     u3541:
 10703  001B64  0E01               	movlw	1
 10704  001B66  EFB6  F00D         	goto	u3550
 10705  001B6A                     u3540:
 10706  001B6A  0E00               	movlw	0
 10707  001B6C                     u3550:
 10708  001B6C  6E10               	movwf	___fladd@grs^0,c
 10709  001B6E  0E00               	movlw	0
 10710  001B70  6E01               	movwf	___fladd@b^0,c
 10711  001B72  0E00               	movlw	0
 10712  001B74  6E02               	movwf	(___fladd@b+1)^0,c
 10713  001B76  0E00               	movlw	0
 10714  001B78  6E03               	movwf	(___fladd@b+2)^0,c
 10715  001B7A  0E00               	movlw	0
 10716  001B7C  6E04               	movwf	(___fladd@b+3)^0,c
 10717  001B7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10718  001B82  EFE9  F00D         	goto	l1140
 10719  001B86                     l1142:
 10720  001B86  A010               	btfss	___fladd@grs^0,0,c
 10721  001B88  EFC8  F00D         	goto	u3561
 10722  001B8C  EFCA  F00D         	goto	u3560
 10723  001B90                     u3561:
 10724  001B90  EFD0  F00D         	goto	l3738
 10725  001B94                     u3560:
 10726  001B94  90D8               	bcf	status,0,c
 10727  001B96  3010               	rrcf	___fladd@grs^0,w,c
 10728  001B98  0901               	iorlw	1
 10729  001B9A  6E10               	movwf	___fladd@grs^0,c
 10730  001B9C  EFD2  F00D         	goto	l3740
 10731  001BA0                     l3738:
 10732  001BA0  90D8               	bcf	status,0,c
 10733  001BA2  3210               	rrcf	___fladd@grs^0,f,c
 10734  001BA4                     l3740:
 10735  001BA4  A001               	btfss	___fladd@b^0,0,c
 10736  001BA6  EFD7  F00D         	goto	u3571
 10737  001BAA  EFD9  F00D         	goto	u3570
 10738  001BAE                     u3571:
 10739  001BAE  EFDA  F00D         	goto	l3744
 10740  001BB2                     u3570:
 10741  001BB2  8E10               	bsf	___fladd@grs^0,7,c
 10742  001BB4                     l3744:
 10743  001BB4  3404               	rlcf	(___fladd@b+3)^0,w,c
 10744  001BB6  3204               	rrcf	(___fladd@b+3)^0,f,c
 10745  001BB8  3203               	rrcf	(___fladd@b+2)^0,f,c
 10746  001BBA  3202               	rrcf	(___fladd@b+1)^0,f,c
 10747  001BBC  3201               	rrcf	___fladd@b^0,f,c
 10748  001BBE  2A0F               	incf	___fladd@bexp^0,f,c
 10749  001BC0                     l1141:
 10750  001BC0  500E               	movf	___fladd@aexp^0,w,c
 10751  001BC2  5C0F               	subwf	___fladd@bexp^0,w,c
 10752  001BC4  A0D8               	btfss	status,0,c
 10753  001BC6  EFE7  F00D         	goto	u3581
 10754  001BCA  EFE9  F00D         	goto	u3580
 10755  001BCE                     u3581:
 10756  001BCE  EFC3  F00D         	goto	l1142
 10757  001BD2                     u3580:
 10758  001BD2                     l1140:
 10759  001BD2  BC0D               	btfsc	___fladd@signs^0,6,c
 10760  001BD4  EFEE  F00D         	goto	u3591
 10761  001BD8  EFF0  F00D         	goto	u3590
 10762  001BDC                     u3591:
 10763  001BDC  EF30  F00E         	goto	l3772
 10764  001BE0                     u3590:
 10765  001BE0  500F               	movf	___fladd@bexp^0,w,c
 10766  001BE2  A4D8               	btfss	status,2,c
 10767  001BE4  EFF6  F00D         	goto	u3601
 10768  001BE8  EFF8  F00D         	goto	u3600
 10769  001BEC                     u3601:
 10770  001BEC  EF02  F00E         	goto	l3754
 10771  001BF0                     u3600:
 10772  001BF0  0E00               	movlw	0
 10773  001BF2  6E01               	movwf	?___fladd^0,c
 10774  001BF4  0E00               	movlw	0
 10775  001BF6  6E02               	movwf	(?___fladd+1)^0,c
 10776  001BF8  0E00               	movlw	0
 10777  001BFA  6E03               	movwf	(?___fladd+2)^0,c
 10778  001BFC  0E00               	movlw	0
 10779  001BFE  6E04               	movwf	(?___fladd+3)^0,c
 10780  001C00  EF51  F00F         	goto	l1149
 10781  001C04                     l3754:
 10782  001C04  5005               	movf	___fladd@a^0,w,c
 10783  001C06  2601               	addwf	___fladd@b^0,f,c
 10784  001C08  5006               	movf	(___fladd@a+1)^0,w,c
 10785  001C0A  2202               	addwfc	(___fladd@b+1)^0,f,c
 10786  001C0C  5007               	movf	(___fladd@a+2)^0,w,c
 10787  001C0E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10788  001C10  5008               	movf	(___fladd@a+3)^0,w,c
 10789  001C12  2204               	addwfc	(___fladd@b+3)^0,f,c
 10790  001C14  A004               	btfss	(___fladd@b+3)^0,0,c
 10791  001C16  EF0F  F00E         	goto	u3611
 10792  001C1A  EF11  F00E         	goto	u3610
 10793  001C1E                     u3611:
 10794  001C1E  EFBD  F00E         	goto	l3808
 10795  001C22                     u3610:
 10796  001C22  A010               	btfss	___fladd@grs^0,0,c
 10797  001C24  EF16  F00E         	goto	u3621
 10798  001C28  EF18  F00E         	goto	u3620
 10799  001C2C                     u3621:
 10800  001C2C  EF1E  F00E         	goto	l3762
 10801  001C30                     u3620:
 10802  001C30  90D8               	bcf	status,0,c
 10803  001C32  3010               	rrcf	___fladd@grs^0,w,c
 10804  001C34  0901               	iorlw	1
 10805  001C36  6E10               	movwf	___fladd@grs^0,c
 10806  001C38  EF20  F00E         	goto	l3764
 10807  001C3C                     l3762:
 10808  001C3C  90D8               	bcf	status,0,c
 10809  001C3E  3210               	rrcf	___fladd@grs^0,f,c
 10810  001C40                     l3764:
 10811  001C40  A001               	btfss	___fladd@b^0,0,c
 10812  001C42  EF25  F00E         	goto	u3631
 10813  001C46  EF27  F00E         	goto	u3630
 10814  001C4A                     u3631:
 10815  001C4A  EF28  F00E         	goto	l3768
 10816  001C4E                     u3630:
 10817  001C4E  8E10               	bsf	___fladd@grs^0,7,c
 10818  001C50                     l3768:
 10819  001C50  3404               	rlcf	(___fladd@b+3)^0,w,c
 10820  001C52  3204               	rrcf	(___fladd@b+3)^0,f,c
 10821  001C54  3203               	rrcf	(___fladd@b+2)^0,f,c
 10822  001C56  3202               	rrcf	(___fladd@b+1)^0,f,c
 10823  001C58  3201               	rrcf	___fladd@b^0,f,c
 10824  001C5A  2A0F               	incf	___fladd@bexp^0,f,c
 10825  001C5C  EFBD  F00E         	goto	l3808
 10826  001C60                     l3772:
 10827  001C60  5005               	movf	___fladd@a^0,w,c
 10828  001C62  5C01               	subwf	___fladd@b^0,w,c
 10829  001C64  5006               	movf	(___fladd@a+1)^0,w,c
 10830  001C66  5802               	subwfb	(___fladd@b+1)^0,w,c
 10831  001C68  5007               	movf	(___fladd@a+2)^0,w,c
 10832  001C6A  5803               	subwfb	(___fladd@b+2)^0,w,c
 10833  001C6C  5004               	movf	(___fladd@b+3)^0,w,c
 10834  001C6E  0A80               	xorlw	128
 10835  001C70  6E09               	movwf	??___fladd^0,c
 10836  001C72  5008               	movf	(___fladd@a+3)^0,w,c
 10837  001C74  0A80               	xorlw	128
 10838  001C76  5809               	subwfb	??___fladd^0,w,c
 10839  001C78  B0D8               	btfsc	status,0,c
 10840  001C7A  EF41  F00E         	goto	u3641
 10841  001C7E  EF43  F00E         	goto	u3640
 10842  001C82                     u3641:
 10843  001C82  EF6E  F00E         	goto	l3782
 10844  001C86                     u3640:
 10845  001C86  5001               	movf	___fladd@b^0,w,c
 10846  001C88  5C05               	subwf	___fladd@a^0,w,c
 10847  001C8A  6E09               	movwf	??___fladd^0,c
 10848  001C8C  5002               	movf	(___fladd@b+1)^0,w,c
 10849  001C8E  5806               	subwfb	(___fladd@a+1)^0,w,c
 10850  001C90  6E0A               	movwf	(??___fladd+1)^0,c
 10851  001C92  5003               	movf	(___fladd@b+2)^0,w,c
 10852  001C94  5807               	subwfb	(___fladd@a+2)^0,w,c
 10853  001C96  6E0B               	movwf	(??___fladd+2)^0,c
 10854  001C98  5004               	movf	(___fladd@b+3)^0,w,c
 10855  001C9A  5808               	subwfb	(___fladd@a+3)^0,w,c
 10856  001C9C  6E0C               	movwf	(??___fladd+3)^0,c
 10857  001C9E  0EFF               	movlw	255
 10858  001CA0  2409               	addwf	??___fladd^0,w,c
 10859  001CA2  6E01               	movwf	___fladd@b^0,c
 10860  001CA4  0EFF               	movlw	255
 10861  001CA6  200A               	addwfc	(??___fladd+1)^0,w,c
 10862  001CA8  6E02               	movwf	(___fladd@b+1)^0,c
 10863  001CAA  0EFF               	movlw	255
 10864  001CAC  200B               	addwfc	(??___fladd+2)^0,w,c
 10865  001CAE  6E03               	movwf	(___fladd@b+2)^0,c
 10866  001CB0  0EFF               	movlw	255
 10867  001CB2  200C               	addwfc	(??___fladd+3)^0,w,c
 10868  001CB4  6E04               	movwf	(___fladd@b+3)^0,c
 10869  001CB6  0E80               	movlw	128
 10870  001CB8  1A0D               	xorwf	___fladd@signs^0,f,c
 10871  001CBA  6C10               	negf	___fladd@grs^0,c
 10872  001CBC  5010               	movf	___fladd@grs^0,w,c
 10873  001CBE  A4D8               	btfss	status,2,c
 10874  001CC0  EF64  F00E         	goto	u3651
 10875  001CC4  EF66  F00E         	goto	u3650
 10876  001CC8                     u3651:
 10877  001CC8  EF76  F00E         	goto	l1157
 10878  001CCC                     u3650:
 10879  001CCC  0E01               	movlw	1
 10880  001CCE  2601               	addwf	___fladd@b^0,f,c
 10881  001CD0  0E00               	movlw	0
 10882  001CD2  2202               	addwfc	(___fladd@b+1)^0,f,c
 10883  001CD4  2203               	addwfc	(___fladd@b+2)^0,f,c
 10884  001CD6  2204               	addwfc	(___fladd@b+3)^0,f,c
 10885  001CD8  EF76  F00E         	goto	l1157
 10886  001CDC                     l3782:
 10887  001CDC  5005               	movf	___fladd@a^0,w,c
 10888  001CDE  5E01               	subwf	___fladd@b^0,f,c
 10889  001CE0  5006               	movf	(___fladd@a+1)^0,w,c
 10890  001CE2  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10891  001CE4  5007               	movf	(___fladd@a+2)^0,w,c
 10892  001CE6  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10893  001CE8  5008               	movf	(___fladd@a+3)^0,w,c
 10894  001CEA  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10895  001CEC                     l1157:
 10896  001CEC  5001               	movf	___fladd@b^0,w,c
 10897  001CEE  1002               	iorwf	(___fladd@b+1)^0,w,c
 10898  001CF0  1003               	iorwf	(___fladd@b+2)^0,w,c
 10899  001CF2  1004               	iorwf	(___fladd@b+3)^0,w,c
 10900  001CF4  A4D8               	btfss	status,2,c
 10901  001CF6  EF7F  F00E         	goto	u3661
 10902  001CFA  EF81  F00E         	goto	u3660
 10903  001CFE                     u3661:
 10904  001CFE  EFB6  F00E         	goto	l3806
 10905  001D02                     u3660:
 10906  001D02  5010               	movf	___fladd@grs^0,w,c
 10907  001D04  A4D8               	btfss	status,2,c
 10908  001D06  EF87  F00E         	goto	u3671
 10909  001D0A  EF89  F00E         	goto	u3670
 10910  001D0E                     u3671:
 10911  001D0E  EFB6  F00E         	goto	l3806
 10912  001D12                     u3670:
 10913  001D12  0E00               	movlw	0
 10914  001D14  6E01               	movwf	?___fladd^0,c
 10915  001D16  0E00               	movlw	0
 10916  001D18  6E02               	movwf	(?___fladd+1)^0,c
 10917  001D1A  0E00               	movlw	0
 10918  001D1C  6E03               	movwf	(?___fladd+2)^0,c
 10919  001D1E  0E00               	movlw	0
 10920  001D20  6E04               	movwf	(?___fladd+3)^0,c
 10921  001D22  EF51  F00F         	goto	l1149
 10922  001D26                     l3790:
 10923  001D26  90D8               	bcf	status,0,c
 10924  001D28  3601               	rlcf	___fladd@b^0,f,c
 10925  001D2A  3602               	rlcf	(___fladd@b+1)^0,f,c
 10926  001D2C  3603               	rlcf	(___fladd@b+2)^0,f,c
 10927  001D2E  3604               	rlcf	(___fladd@b+3)^0,f,c
 10928  001D30  AE10               	btfss	___fladd@grs^0,7,c
 10929  001D32  EF9D  F00E         	goto	u3681
 10930  001D36  EF9F  F00E         	goto	u3680
 10931  001D3A                     u3681:
 10932  001D3A  EFA0  F00E         	goto	l3796
 10933  001D3E                     u3680:
 10934  001D3E  8001               	bsf	___fladd@b^0,0,c
 10935  001D40                     l3796:
 10936  001D40  A010               	btfss	___fladd@grs^0,0,c
 10937  001D42  EFA5  F00E         	goto	u3691
 10938  001D46  EFA7  F00E         	goto	u3690
 10939  001D4A                     u3691:
 10940  001D4A  EFAB  F00E         	goto	l3800
 10941  001D4E                     u3690:
 10942  001D4E  80D8               	bsf	status,0,c
 10943  001D50  3610               	rlcf	___fladd@grs^0,f,c
 10944  001D52  EFAD  F00E         	goto	l3802
 10945  001D56                     l3800:
 10946  001D56  90D8               	bcf	status,0,c
 10947  001D58  3610               	rlcf	___fladd@grs^0,f,c
 10948  001D5A                     l3802:
 10949  001D5A  500F               	movf	___fladd@bexp^0,w,c
 10950  001D5C  B4D8               	btfsc	status,2,c
 10951  001D5E  EFB3  F00E         	goto	u3701
 10952  001D62  EFB5  F00E         	goto	u3700
 10953  001D66                     u3701:
 10954  001D66  EFB6  F00E         	goto	l3806
 10955  001D6A                     u3700:
 10956  001D6A  060F               	decf	___fladd@bexp^0,f,c
 10957  001D6C                     l3806:
 10958  001D6C  AE03               	btfss	(___fladd@b+2)^0,7,c
 10959  001D6E  EFBB  F00E         	goto	u3711
 10960  001D72  EFBD  F00E         	goto	u3710
 10961  001D76                     u3711:
 10962  001D76  EF93  F00E         	goto	l3790
 10963  001D7A                     u3710:
 10964  001D7A                     l3808:
 10965  001D7A  0E00               	movlw	0
 10966  001D7C  6E0E               	movwf	___fladd@aexp^0,c
 10967  001D7E  AE10               	btfss	___fladd@grs^0,7,c
 10968  001D80  EFC4  F00E         	goto	u3721
 10969  001D84  EFC6  F00E         	goto	u3720
 10970  001D88                     u3721:
 10971  001D88  EFDE  F00E         	goto	l1166
 10972  001D8C                     u3720:
 10973  001D8C  C010  F009         	movff	___fladd@grs,??___fladd
 10974  001D90  0E7F               	movlw	127
 10975  001D92  1609               	andwf	??___fladd^0,f,c
 10976  001D94  B4D8               	btfsc	status,2,c
 10977  001D96  EFCF  F00E         	goto	u3731
 10978  001D9A  EFD1  F00E         	goto	u3730
 10979  001D9E                     u3731:
 10980  001D9E  EFD5  F00E         	goto	l1167
 10981  001DA2                     u3730:
 10982  001DA2                     l3814:
 10983  001DA2  0E01               	movlw	1
 10984  001DA4  6E0E               	movwf	___fladd@aexp^0,c
 10985  001DA6  EFDE  F00E         	goto	l1166
 10986  001DAA                     l1167:
 10987  001DAA  A001               	btfss	___fladd@b^0,0,c
 10988  001DAC  EFDA  F00E         	goto	u3741
 10989  001DB0  EFDC  F00E         	goto	u3740
 10990  001DB4                     u3741:
 10991  001DB4  EFDE  F00E         	goto	l1166
 10992  001DB8                     u3740:
 10993  001DB8  EFD1  F00E         	goto	l3814
 10994  001DBC                     l1166:
 10995  001DBC  500E               	movf	___fladd@aexp^0,w,c
 10996  001DBE  B4D8               	btfsc	status,2,c
 10997  001DC0  EFE4  F00E         	goto	u3751
 10998  001DC4  EFE6  F00E         	goto	u3750
 10999  001DC8                     u3751:
 11000  001DC8  EF11  F00F         	goto	l3826
 11001  001DCC                     u3750:
 11002  001DCC  0E01               	movlw	1
 11003  001DCE  2601               	addwf	___fladd@b^0,f,c
 11004  001DD0  0E00               	movlw	0
 11005  001DD2  2202               	addwfc	(___fladd@b+1)^0,f,c
 11006  001DD4  2203               	addwfc	(___fladd@b+2)^0,f,c
 11007  001DD6  2204               	addwfc	(___fladd@b+3)^0,f,c
 11008  001DD8  A004               	btfss	(___fladd@b+3)^0,0,c
 11009  001DDA  EFF1  F00E         	goto	u3761
 11010  001DDE  EFF3  F00E         	goto	u3760
 11011  001DE2                     u3761:
 11012  001DE2  EF11  F00F         	goto	l3826
 11013  001DE6                     u3760:
 11014  001DE6  C001  F009         	movff	___fladd@b,??___fladd
 11015  001DEA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11016  001DEE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11017  001DF2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11018  001DF6  340C               	rlcf	(??___fladd+3)^0,w,c
 11019  001DF8  320C               	rrcf	(??___fladd+3)^0,f,c
 11020  001DFA  320B               	rrcf	(??___fladd+2)^0,f,c
 11021  001DFC  320A               	rrcf	(??___fladd+1)^0,f,c
 11022  001DFE  3209               	rrcf	??___fladd^0,f,c
 11023  001E00  C009  F001         	movff	??___fladd,___fladd@b
 11024  001E04  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11025  001E08  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11026  001E0C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11027  001E10  280F               	incf	___fladd@bexp^0,w,c
 11028  001E12  B4D8               	btfsc	status,2,c
 11029  001E14  EF0E  F00F         	goto	u3771
 11030  001E18  EF10  F00F         	goto	u3770
 11031  001E1C                     u3771:
 11032  001E1C  EF11  F00F         	goto	l3826
 11033  001E20                     u3770:
 11034  001E20  2A0F               	incf	___fladd@bexp^0,f,c
 11035  001E22                     l3826:
 11036  001E22  280F               	incf	___fladd@bexp^0,w,c
 11037  001E24  B4D8               	btfsc	status,2,c
 11038  001E26  EF17  F00F         	goto	u3781
 11039  001E2A  EF19  F00F         	goto	u3780
 11040  001E2E                     u3781:
 11041  001E2E  EF21  F00F         	goto	l3830
 11042  001E32                     u3780:
 11043  001E32  500F               	movf	___fladd@bexp^0,w,c
 11044  001E34  A4D8               	btfss	status,2,c
 11045  001E36  EF1F  F00F         	goto	u3791
 11046  001E3A  EF21  F00F         	goto	u3790
 11047  001E3E                     u3791:
 11048  001E3E  EF33  F00F         	goto	l3834
 11049  001E42                     u3790:
 11050  001E42                     l3830:
 11051  001E42  0E00               	movlw	0
 11052  001E44  6E01               	movwf	___fladd@b^0,c
 11053  001E46  0E00               	movlw	0
 11054  001E48  6E02               	movwf	(___fladd@b+1)^0,c
 11055  001E4A  0E00               	movlw	0
 11056  001E4C  6E03               	movwf	(___fladd@b+2)^0,c
 11057  001E4E  0E00               	movlw	0
 11058  001E50  6E04               	movwf	(___fladd@b+3)^0,c
 11059  001E52  500F               	movf	___fladd@bexp^0,w,c
 11060  001E54  A4D8               	btfss	status,2,c
 11061  001E56  EF2F  F00F         	goto	u3801
 11062  001E5A  EF31  F00F         	goto	u3800
 11063  001E5E                     u3801:
 11064  001E5E  EF33  F00F         	goto	l3834
 11065  001E62                     u3800:
 11066  001E62  0E00               	movlw	0
 11067  001E64  6E0D               	movwf	___fladd@signs^0,c
 11068  001E66                     l3834:
 11069  001E66  A00F               	btfss	___fladd@bexp^0,0,c
 11070  001E68  EF38  F00F         	goto	u3811
 11071  001E6C  EF3A  F00F         	goto	u3810
 11072  001E70                     u3811:
 11073  001E70  EF3D  F00F         	goto	l3838
 11074  001E74                     u3810:
 11075  001E74  8E03               	bsf	(___fladd@b+2)^0,7,c
 11076  001E76  EF3E  F00F         	goto	l3840
 11077  001E7A                     l3838:
 11078  001E7A  9E03               	bcf	(___fladd@b+2)^0,7,c
 11079  001E7C                     l3840:
 11080  001E7C  90D8               	bcf	status,0,c
 11081  001E7E  300F               	rrcf	___fladd@bexp^0,w,c
 11082  001E80  6E04               	movwf	(___fladd@b+3)^0,c
 11083  001E82  AE0D               	btfss	___fladd@signs^0,7,c
 11084  001E84  EF46  F00F         	goto	u3821
 11085  001E88  EF48  F00F         	goto	u3820
 11086  001E8C                     u3821:
 11087  001E8C  EF49  F00F         	goto	l3846
 11088  001E90                     u3820:
 11089  001E90  8E04               	bsf	(___fladd@b+3)^0,7,c
 11090  001E92                     l3846:
 11091  001E92  C001  F001         	movff	___fladd@b,?___fladd
 11092  001E96  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11093  001E9A  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11094  001E9E  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11095  001EA2                     l1149:
 11096  001EA2  0012               	return		;funcret
 11097  001EA4                     __end_of___fladd:
 11098                           	callstack 0
 11099                           
 11100 ;; *************** function ___flneg *****************
 11101 ;; Defined at:
 11102 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  f1              4    0[COMRAM] unsigned char 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  4    0[COMRAM] unsigned char 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11120 ;;Total ram usage:        4 bytes
 11121 ;; Hardware stack levels used: 1
 11122 ;; Hardware stack levels required when called: 1
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_roundf
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text51
 11131  0059EC                     __ptext51:
 11132                           	callstack 0
 11133  0059EC                     ___flneg:
 11134                           	callstack 25
 11135  0059EC  5001               	movf	___flneg@f1^0,w,c
 11136  0059EE  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11137  0059F0  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11138  0059F2  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11139  0059F4  B4D8               	btfsc	status,2,c
 11140  0059F6  EFFF  F02C         	goto	u4181
 11141  0059FA  EF01  F02D         	goto	u4180
 11142  0059FE                     u4181:
 11143  0059FE  EF09  F02D         	goto	l4110
 11144  005A02                     u4180:
 11145  005A02  0E00               	movlw	0
 11146  005A04  1A01               	xorwf	___flneg@f1^0,f,c
 11147  005A06  0E00               	movlw	0
 11148  005A08  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11149  005A0A  0E00               	movlw	0
 11150  005A0C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11151  005A0E  0E80               	movlw	128
 11152  005A10  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11153  005A12                     l4110:
 11154  005A12  C001  F001         	movff	___flneg@f1,?___flneg
 11155  005A16  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11156  005A1A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11157  005A1E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11158  005A22  0012               	return		;funcret
 11159  005A24                     __end_of___flneg:
 11160                           	callstack 0
 11161                           
 11162 ;; *************** function ___flmul *****************
 11163 ;; Defined at:
 11164 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  b               4   14[COMRAM] unsigned char 
 11167 ;;  a               4   18[COMRAM] unsigned char 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;  prod            4   33[COMRAM] struct .
 11170 ;;  grs             4   27[COMRAM] unsigned long 
 11171 ;;  temp            2   37[COMRAM] struct .
 11172 ;;  bexp            1   32[COMRAM] unsigned char 
 11173 ;;  aexp            1   31[COMRAM] unsigned char 
 11174 ;;  sign            1   26[COMRAM] unsigned char 
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  4   14[COMRAM] unsigned char 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0, prodl, prodh
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11184 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11185 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11186 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11187 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11188 ;;Total ram usage:       25 bytes
 11189 ;; Hardware stack levels used: 1
 11190 ;; Hardware stack levels required when called: 1
 11191 ;; This function calls:
 11192 ;;		Nothing
 11193 ;; This function is called by:
 11194 ;;		_detect_color
 11195 ;;		_detect_wall
 11196 ;;		_roundf
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text52
 11201  001EA4                     __ptext52:
 11202                           	callstack 0
 11203  001EA4                     ___flmul:
 11204                           	callstack 25
 11205  001EA4  5012               	movf	(___flmul@b+3)^0,w,c
 11206  001EA6  0B80               	andlw	128
 11207  001EA8  6E1B               	movwf	___flmul@sign^0,c
 11208  001EAA  5012               	movf	(___flmul@b+3)^0,w,c
 11209  001EAC  2412               	addwf	(___flmul@b+3)^0,w,c
 11210  001EAE  6E21               	movwf	___flmul@bexp^0,c
 11211  001EB0  AE11               	btfss	(___flmul@b+2)^0,7,c
 11212  001EB2  EF5D  F00F         	goto	u3941
 11213  001EB6  EF5F  F00F         	goto	u3940
 11214  001EBA                     u3941:
 11215  001EBA  EF60  F00F         	goto	l3954
 11216  001EBE                     u3940:
 11217  001EBE  8021               	bsf	___flmul@bexp^0,0,c
 11218  001EC0                     l3954:
 11219  001EC0  5021               	movf	___flmul@bexp^0,w,c
 11220  001EC2  B4D8               	btfsc	status,2,c
 11221  001EC4  EF66  F00F         	goto	u3951
 11222  001EC8  EF68  F00F         	goto	u3950
 11223  001ECC                     u3951:
 11224  001ECC  EF7B  F00F         	goto	l3962
 11225  001ED0                     u3950:
 11226  001ED0  2821               	incf	___flmul@bexp^0,w,c
 11227  001ED2  A4D8               	btfss	status,2,c
 11228  001ED4  EF6E  F00F         	goto	u3961
 11229  001ED8  EF70  F00F         	goto	u3960
 11230  001EDC                     u3961:
 11231  001EDC  EF78  F00F         	goto	l3960
 11232  001EE0                     u3960:
 11233  001EE0  0E00               	movlw	0
 11234  001EE2  6E0F               	movwf	___flmul@b^0,c
 11235  001EE4  0E00               	movlw	0
 11236  001EE6  6E10               	movwf	(___flmul@b+1)^0,c
 11237  001EE8  0E00               	movlw	0
 11238  001EEA  6E11               	movwf	(___flmul@b+2)^0,c
 11239  001EEC  0E00               	movlw	0
 11240  001EEE  6E12               	movwf	(___flmul@b+3)^0,c
 11241  001EF0                     l3960:
 11242  001EF0  8E11               	bsf	(___flmul@b+2)^0,7,c
 11243  001EF2  EF83  F00F         	goto	l3964
 11244  001EF6                     l3962:
 11245  001EF6  0E00               	movlw	0
 11246  001EF8  6E0F               	movwf	___flmul@b^0,c
 11247  001EFA  0E00               	movlw	0
 11248  001EFC  6E10               	movwf	(___flmul@b+1)^0,c
 11249  001EFE  0E00               	movlw	0
 11250  001F00  6E11               	movwf	(___flmul@b+2)^0,c
 11251  001F02  0E00               	movlw	0
 11252  001F04  6E12               	movwf	(___flmul@b+3)^0,c
 11253  001F06                     l3964:
 11254  001F06  5016               	movf	(___flmul@a+3)^0,w,c
 11255  001F08  0B80               	andlw	128
 11256  001F0A  1A1B               	xorwf	___flmul@sign^0,f,c
 11257  001F0C  5016               	movf	(___flmul@a+3)^0,w,c
 11258  001F0E  2416               	addwf	(___flmul@a+3)^0,w,c
 11259  001F10  6E20               	movwf	___flmul@aexp^0,c
 11260  001F12  AE15               	btfss	(___flmul@a+2)^0,7,c
 11261  001F14  EF8E  F00F         	goto	u3971
 11262  001F18  EF90  F00F         	goto	u3970
 11263  001F1C                     u3971:
 11264  001F1C  EF91  F00F         	goto	l3972
 11265  001F20                     u3970:
 11266  001F20  8020               	bsf	___flmul@aexp^0,0,c
 11267  001F22                     l3972:
 11268  001F22  5020               	movf	___flmul@aexp^0,w,c
 11269  001F24  B4D8               	btfsc	status,2,c
 11270  001F26  EF97  F00F         	goto	u3981
 11271  001F2A  EF99  F00F         	goto	u3980
 11272  001F2E                     u3981:
 11273  001F2E  EFAC  F00F         	goto	l3980
 11274  001F32                     u3980:
 11275  001F32  2820               	incf	___flmul@aexp^0,w,c
 11276  001F34  A4D8               	btfss	status,2,c
 11277  001F36  EF9F  F00F         	goto	u3991
 11278  001F3A  EFA1  F00F         	goto	u3990
 11279  001F3E                     u3991:
 11280  001F3E  EFA9  F00F         	goto	l3978
 11281  001F42                     u3990:
 11282  001F42  0E00               	movlw	0
 11283  001F44  6E13               	movwf	___flmul@a^0,c
 11284  001F46  0E00               	movlw	0
 11285  001F48  6E14               	movwf	(___flmul@a+1)^0,c
 11286  001F4A  0E00               	movlw	0
 11287  001F4C  6E15               	movwf	(___flmul@a+2)^0,c
 11288  001F4E  0E00               	movlw	0
 11289  001F50  6E16               	movwf	(___flmul@a+3)^0,c
 11290  001F52                     l3978:
 11291  001F52  8E15               	bsf	(___flmul@a+2)^0,7,c
 11292  001F54  EFB4  F00F         	goto	l1226
 11293  001F58                     l3980:
 11294  001F58  0E00               	movlw	0
 11295  001F5A  6E13               	movwf	___flmul@a^0,c
 11296  001F5C  0E00               	movlw	0
 11297  001F5E  6E14               	movwf	(___flmul@a+1)^0,c
 11298  001F60  0E00               	movlw	0
 11299  001F62  6E15               	movwf	(___flmul@a+2)^0,c
 11300  001F64  0E00               	movlw	0
 11301  001F66  6E16               	movwf	(___flmul@a+3)^0,c
 11302  001F68                     l1226:
 11303  001F68  5020               	movf	___flmul@aexp^0,w,c
 11304  001F6A  B4D8               	btfsc	status,2,c
 11305  001F6C  EFBA  F00F         	goto	u4001
 11306  001F70  EFBC  F00F         	goto	u4000
 11307  001F74                     u4001:
 11308  001F74  EFC4  F00F         	goto	l3984
 11309  001F78                     u4000:
 11310  001F78  5021               	movf	___flmul@bexp^0,w,c
 11311  001F7A  A4D8               	btfss	status,2,c
 11312  001F7C  EFC2  F00F         	goto	u4011
 11313  001F80  EFC4  F00F         	goto	u4010
 11314  001F84                     u4011:
 11315  001F84  EFCE  F00F         	goto	l3988
 11316  001F88                     u4010:
 11317  001F88                     l3984:
 11318  001F88  0E00               	movlw	0
 11319  001F8A  6E0F               	movwf	?___flmul^0,c
 11320  001F8C  0E00               	movlw	0
 11321  001F8E  6E10               	movwf	(?___flmul+1)^0,c
 11322  001F90  0E00               	movlw	0
 11323  001F92  6E11               	movwf	(?___flmul+2)^0,c
 11324  001F94  0E00               	movlw	0
 11325  001F96  6E12               	movwf	(?___flmul+3)^0,c
 11326  001F98  EF66  F011         	goto	l1230
 11327  001F9C                     l3988:
 11328  001F9C  5015               	movf	(___flmul@a+2)^0,w,c
 11329  001F9E  020F               	mulwf	___flmul@b^0,c
 11330  001FA0  CFF3 F026          	movff	prodl,___flmul@temp
 11331  001FA4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11332  001FA8  5026               	movf	___flmul@temp^0,w,c
 11333  001FAA  6E1C               	movwf	___flmul@grs^0,c
 11334  001FAC  6A1D               	clrf	(___flmul@grs+1)^0,c
 11335  001FAE  6A1E               	clrf	(___flmul@grs+2)^0,c
 11336  001FB0  6A1F               	clrf	(___flmul@grs+3)^0,c
 11337  001FB2  5027               	movf	(___flmul@temp+1)^0,w,c
 11338  001FB4  6E22               	movwf	___flmul@prod^0,c
 11339  001FB6  6A23               	clrf	(___flmul@prod+1)^0,c
 11340  001FB8  6A24               	clrf	(___flmul@prod+2)^0,c
 11341  001FBA  6A25               	clrf	(___flmul@prod+3)^0,c
 11342  001FBC  5014               	movf	(___flmul@a+1)^0,w,c
 11343  001FBE  0210               	mulwf	(___flmul@b+1)^0,c
 11344  001FC0  CFF3 F026          	movff	prodl,___flmul@temp
 11345  001FC4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11346  001FC8  5026               	movf	___flmul@temp^0,w,c
 11347  001FCA  261C               	addwf	___flmul@grs^0,f,c
 11348  001FCC  0E00               	movlw	0
 11349  001FCE  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11350  001FD0  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11351  001FD2  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11352  001FD4  5027               	movf	(___flmul@temp+1)^0,w,c
 11353  001FD6  2622               	addwf	___flmul@prod^0,f,c
 11354  001FD8  0E00               	movlw	0
 11355  001FDA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11356  001FDC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11357  001FDE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11358  001FE0  5013               	movf	___flmul@a^0,w,c
 11359  001FE2  0211               	mulwf	(___flmul@b+2)^0,c
 11360  001FE4  CFF3 F026          	movff	prodl,___flmul@temp
 11361  001FE8  CFF4 F027          	movff	prodh,___flmul@temp+1
 11362  001FEC  5026               	movf	___flmul@temp^0,w,c
 11363  001FEE  261C               	addwf	___flmul@grs^0,f,c
 11364  001FF0  0E00               	movlw	0
 11365  001FF2  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11366  001FF4  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11367  001FF6  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11368  001FF8  5027               	movf	(___flmul@temp+1)^0,w,c
 11369  001FFA  2622               	addwf	___flmul@prod^0,f,c
 11370  001FFC  0E00               	movlw	0
 11371  001FFE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11372  002000  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11373  002002  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11374  002004  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11375  002008  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11376  00200C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11377  002010  6A1C               	clrf	___flmul@grs^0,c
 11378  002012  5013               	movf	___flmul@a^0,w,c
 11379  002014  0210               	mulwf	(___flmul@b+1)^0,c
 11380  002016  CFF3 F026          	movff	prodl,___flmul@temp
 11381  00201A  CFF4 F027          	movff	prodh,___flmul@temp+1
 11382  00201E  5026               	movf	___flmul@temp^0,w,c
 11383  002020  261C               	addwf	___flmul@grs^0,f,c
 11384  002022  5027               	movf	(___flmul@temp+1)^0,w,c
 11385  002024  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11386  002026  0E00               	movlw	0
 11387  002028  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11388  00202A  0E00               	movlw	0
 11389  00202C  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11390  00202E  5014               	movf	(___flmul@a+1)^0,w,c
 11391  002030  020F               	mulwf	___flmul@b^0,c
 11392  002032  CFF3 F026          	movff	prodl,___flmul@temp
 11393  002036  CFF4 F027          	movff	prodh,___flmul@temp+1
 11394  00203A  5026               	movf	___flmul@temp^0,w,c
 11395  00203C  261C               	addwf	___flmul@grs^0,f,c
 11396  00203E  5027               	movf	(___flmul@temp+1)^0,w,c
 11397  002040  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11398  002042  0E00               	movlw	0
 11399  002044  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11400  002046  0E00               	movlw	0
 11401  002048  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11402  00204A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11403  00204E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11404  002052  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11405  002056  6A1C               	clrf	___flmul@grs^0,c
 11406  002058  5013               	movf	___flmul@a^0,w,c
 11407  00205A  020F               	mulwf	___flmul@b^0,c
 11408  00205C  CFF3 F026          	movff	prodl,___flmul@temp
 11409  002060  CFF4 F027          	movff	prodh,___flmul@temp+1
 11410  002064  5026               	movf	___flmul@temp^0,w,c
 11411  002066  261C               	addwf	___flmul@grs^0,f,c
 11412  002068  5027               	movf	(___flmul@temp+1)^0,w,c
 11413  00206A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11414  00206C  0E00               	movlw	0
 11415  00206E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11416  002070  0E00               	movlw	0
 11417  002072  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11418  002074  5015               	movf	(___flmul@a+2)^0,w,c
 11419  002076  0210               	mulwf	(___flmul@b+1)^0,c
 11420  002078  CFF3 F026          	movff	prodl,___flmul@temp
 11421  00207C  CFF4 F027          	movff	prodh,___flmul@temp+1
 11422  002080  5026               	movf	___flmul@temp^0,w,c
 11423  002082  2622               	addwf	___flmul@prod^0,f,c
 11424  002084  5027               	movf	(___flmul@temp+1)^0,w,c
 11425  002086  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11426  002088  0E00               	movlw	0
 11427  00208A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11428  00208C  0E00               	movlw	0
 11429  00208E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11430  002090  5014               	movf	(___flmul@a+1)^0,w,c
 11431  002092  0211               	mulwf	(___flmul@b+2)^0,c
 11432  002094  CFF3 F026          	movff	prodl,___flmul@temp
 11433  002098  CFF4 F027          	movff	prodh,___flmul@temp+1
 11434  00209C  5026               	movf	___flmul@temp^0,w,c
 11435  00209E  2622               	addwf	___flmul@prod^0,f,c
 11436  0020A0  5027               	movf	(___flmul@temp+1)^0,w,c
 11437  0020A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11438  0020A4  0E00               	movlw	0
 11439  0020A6  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11440  0020A8  0E00               	movlw	0
 11441  0020AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11442  0020AC  5015               	movf	(___flmul@a+2)^0,w,c
 11443  0020AE  0211               	mulwf	(___flmul@b+2)^0,c
 11444  0020B0  CFF3 F026          	movff	prodl,___flmul@temp
 11445  0020B4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11446  0020B8  5026               	movf	___flmul@temp^0,w,c
 11447  0020BA  6E17               	movwf	??___flmul^0,c
 11448  0020BC  5027               	movf	(___flmul@temp+1)^0,w,c
 11449  0020BE  6E18               	movwf	(??___flmul+1)^0,c
 11450  0020C0  6A19               	clrf	(??___flmul+2)^0,c
 11451  0020C2  6A1A               	clrf	(??___flmul+3)^0,c
 11452  0020C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
 11453  0020C8  C018  F019         	movff	??___flmul+1,??___flmul+2
 11454  0020CC  C017  F018         	movff	??___flmul,??___flmul+1
 11455  0020D0  6A17               	clrf	??___flmul^0,c
 11456  0020D2  5017               	movf	??___flmul^0,w,c
 11457  0020D4  2622               	addwf	___flmul@prod^0,f,c
 11458  0020D6  5018               	movf	(??___flmul+1)^0,w,c
 11459  0020D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11460  0020DA  5019               	movf	(??___flmul+2)^0,w,c
 11461  0020DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11462  0020DE  501A               	movf	(??___flmul+3)^0,w,c
 11463  0020E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11464  0020E2  C01C  F017         	movff	___flmul@grs,??___flmul
 11465  0020E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 11466  0020EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 11467  0020EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 11468  0020F2  0E19               	movlw	25
 11469  0020F4  EF81  F010         	goto	u4020
 11470  0020F8                     u4025:
 11471  0020F8  90D8               	bcf	status,0,c
 11472  0020FA  321A               	rrcf	(??___flmul+3)^0,f,c
 11473  0020FC  3219               	rrcf	(??___flmul+2)^0,f,c
 11474  0020FE  3218               	rrcf	(??___flmul+1)^0,f,c
 11475  002100  3217               	rrcf	??___flmul^0,f,c
 11476  002102                     u4020:
 11477  002102  2EE8               	decfsz	wreg,f,c
 11478  002104  EF7C  F010         	goto	u4025
 11479  002108  5017               	movf	??___flmul^0,w,c
 11480  00210A  2622               	addwf	___flmul@prod^0,f,c
 11481  00210C  5018               	movf	(??___flmul+1)^0,w,c
 11482  00210E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11483  002110  5019               	movf	(??___flmul+2)^0,w,c
 11484  002112  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11485  002114  501A               	movf	(??___flmul+3)^0,w,c
 11486  002116  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11487  002118  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11488  00211C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11489  002120  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11490  002124  6A1C               	clrf	___flmul@grs^0,c
 11491  002126  5020               	movf	___flmul@aexp^0,w,c
 11492  002128  C021  F017         	movff	___flmul@bexp,??___flmul
 11493  00212C  6A18               	clrf	(??___flmul+1)^0,c
 11494  00212E  2617               	addwf	??___flmul^0,f,c
 11495  002130  0E00               	movlw	0
 11496  002132  2218               	addwfc	(??___flmul+1)^0,f,c
 11497  002134  0E82               	movlw	130
 11498  002136  2417               	addwf	??___flmul^0,w,c
 11499  002138  6E26               	movwf	___flmul@temp^0,c
 11500  00213A  0EFF               	movlw	255
 11501  00213C  2018               	addwfc	(??___flmul+1)^0,w,c
 11502  00213E  6E27               	movwf	(___flmul@temp+1)^0,c
 11503  002140  EFB7  F010         	goto	l4036
 11504  002144                     l4030:
 11505  002144  90D8               	bcf	status,0,c
 11506  002146  3622               	rlcf	___flmul@prod^0,f,c
 11507  002148  3623               	rlcf	(___flmul@prod+1)^0,f,c
 11508  00214A  3624               	rlcf	(___flmul@prod+2)^0,f,c
 11509  00214C  3625               	rlcf	(___flmul@prod+3)^0,f,c
 11510  00214E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11511  002150  EFAC  F010         	goto	u4031
 11512  002154  EFAE  F010         	goto	u4030
 11513  002158                     u4031:
 11514  002158  EFAF  F010         	goto	l1233
 11515  00215C                     u4030:
 11516  00215C  8022               	bsf	___flmul@prod^0,0,c
 11517  00215E                     l1233:
 11518  00215E  90D8               	bcf	status,0,c
 11519  002160  361C               	rlcf	___flmul@grs^0,f,c
 11520  002162  361D               	rlcf	(___flmul@grs+1)^0,f,c
 11521  002164  361E               	rlcf	(___flmul@grs+2)^0,f,c
 11522  002166  361F               	rlcf	(___flmul@grs+3)^0,f,c
 11523  002168  0626               	decf	___flmul@temp^0,f,c
 11524  00216A  A0D8               	btfss	status,0,c
 11525  00216C  0627               	decf	(___flmul@temp+1)^0,f,c
 11526  00216E                     l4036:
 11527  00216E  AE24               	btfss	(___flmul@prod+2)^0,7,c
 11528  002170  EFBC  F010         	goto	u4041
 11529  002174  EFBE  F010         	goto	u4040
 11530  002178                     u4041:
 11531  002178  EFA2  F010         	goto	l4030
 11532  00217C                     u4040:
 11533  00217C  0E00               	movlw	0
 11534  00217E  6E20               	movwf	___flmul@aexp^0,c
 11535  002180  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11536  002182  EFC5  F010         	goto	u4051
 11537  002186  EFC7  F010         	goto	u4050
 11538  00218A                     u4051:
 11539  00218A  EFEB  F010         	goto	l1235
 11540  00218E                     u4050:
 11541  00218E  0EFF               	movlw	255
 11542  002190  141C               	andwf	___flmul@grs^0,w,c
 11543  002192  6E17               	movwf	??___flmul^0,c
 11544  002194  0EFF               	movlw	255
 11545  002196  141D               	andwf	(___flmul@grs+1)^0,w,c
 11546  002198  6E18               	movwf	(??___flmul+1)^0,c
 11547  00219A  0EFF               	movlw	255
 11548  00219C  141E               	andwf	(___flmul@grs+2)^0,w,c
 11549  00219E  6E19               	movwf	(??___flmul+2)^0,c
 11550  0021A0  0E7F               	movlw	127
 11551  0021A2  141F               	andwf	(___flmul@grs+3)^0,w,c
 11552  0021A4  6E1A               	movwf	(??___flmul+3)^0,c
 11553  0021A6  5017               	movf	??___flmul^0,w,c
 11554  0021A8  1018               	iorwf	(??___flmul+1)^0,w,c
 11555  0021AA  1019               	iorwf	(??___flmul+2)^0,w,c
 11556  0021AC  101A               	iorwf	(??___flmul+3)^0,w,c
 11557  0021AE  B4D8               	btfsc	status,2,c
 11558  0021B0  EFDC  F010         	goto	u4061
 11559  0021B4  EFDE  F010         	goto	u4060
 11560  0021B8                     u4061:
 11561  0021B8  EFE2  F010         	goto	l1236
 11562  0021BC                     u4060:
 11563  0021BC                     l4044:
 11564  0021BC  0E01               	movlw	1
 11565  0021BE  6E20               	movwf	___flmul@aexp^0,c
 11566  0021C0  EFEB  F010         	goto	l1235
 11567  0021C4                     l1236:
 11568  0021C4  A022               	btfss	___flmul@prod^0,0,c
 11569  0021C6  EFE7  F010         	goto	u4071
 11570  0021CA  EFE9  F010         	goto	u4070
 11571  0021CE                     u4071:
 11572  0021CE  EFEB  F010         	goto	l1235
 11573  0021D2                     u4070:
 11574  0021D2  EFDE  F010         	goto	l4044
 11575  0021D6                     l1235:
 11576  0021D6  5020               	movf	___flmul@aexp^0,w,c
 11577  0021D8  B4D8               	btfsc	status,2,c
 11578  0021DA  EFF1  F010         	goto	u4081
 11579  0021DE  EFF3  F010         	goto	u4080
 11580  0021E2                     u4081:
 11581  0021E2  EF17  F011         	goto	l4056
 11582  0021E6                     u4080:
 11583  0021E6  0E01               	movlw	1
 11584  0021E8  2622               	addwf	___flmul@prod^0,f,c
 11585  0021EA  0E00               	movlw	0
 11586  0021EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11587  0021EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11588  0021F0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11589  0021F2  A025               	btfss	(___flmul@prod+3)^0,0,c
 11590  0021F4  EFFE  F010         	goto	u4091
 11591  0021F8  EF00  F011         	goto	u4090
 11592  0021FC                     u4091:
 11593  0021FC  EF17  F011         	goto	l4056
 11594  002200                     u4090:
 11595  002200  C022  F017         	movff	___flmul@prod,??___flmul
 11596  002204  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 11597  002208  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 11598  00220C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 11599  002210  341A               	rlcf	(??___flmul+3)^0,w,c
 11600  002212  321A               	rrcf	(??___flmul+3)^0,f,c
 11601  002214  3219               	rrcf	(??___flmul+2)^0,f,c
 11602  002216  3218               	rrcf	(??___flmul+1)^0,f,c
 11603  002218  3217               	rrcf	??___flmul^0,f,c
 11604  00221A  C017  F022         	movff	??___flmul,___flmul@prod
 11605  00221E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 11606  002222  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 11607  002226  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 11608  00222A  4A26               	infsnz	___flmul@temp^0,f,c
 11609  00222C  2A27               	incf	(___flmul@temp+1)^0,f,c
 11610  00222E                     l4056:
 11611  00222E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11612  002230  EF22  F011         	goto	u4101
 11613  002234  5027               	movf	(___flmul@temp+1)^0,w,c
 11614  002236  E108               	bnz	u4100
 11615  002238  2826               	incf	___flmul@temp^0,w,c
 11616  00223A  A0D8               	btfss	status,0,c
 11617  00223C  EF22  F011         	goto	u4101
 11618  002240  EF24  F011         	goto	u4100
 11619  002244                     u4101:
 11620  002244  EF2E  F011         	goto	l4060
 11621  002248                     u4100:
 11622  002248  0E00               	movlw	0
 11623  00224A  6E22               	movwf	___flmul@prod^0,c
 11624  00224C  0E00               	movlw	0
 11625  00224E  6E23               	movwf	(___flmul@prod+1)^0,c
 11626  002250  0E80               	movlw	128
 11627  002252  6E24               	movwf	(___flmul@prod+2)^0,c
 11628  002254  0E7F               	movlw	127
 11629  002256  6E25               	movwf	(___flmul@prod+3)^0,c
 11630  002258  EF5C  F011         	goto	l4072
 11631  00225C                     l4060:
 11632  00225C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11633  00225E  EF3B  F011         	goto	u4110
 11634  002262  5027               	movf	(___flmul@temp+1)^0,w,c
 11635  002264  E106               	bnz	u4111
 11636  002266  0426               	decf	___flmul@temp^0,w,c
 11637  002268  B0D8               	btfsc	status,0,c
 11638  00226A  EF39  F011         	goto	u4111
 11639  00226E  EF3B  F011         	goto	u4110
 11640  002272                     u4111:
 11641  002272  EF47  F011         	goto	l1243
 11642  002276                     u4110:
 11643  002276  0E00               	movlw	0
 11644  002278  6E22               	movwf	___flmul@prod^0,c
 11645  00227A  0E00               	movlw	0
 11646  00227C  6E23               	movwf	(___flmul@prod+1)^0,c
 11647  00227E  0E00               	movlw	0
 11648  002280  6E24               	movwf	(___flmul@prod+2)^0,c
 11649  002282  0E00               	movlw	0
 11650  002284  6E25               	movwf	(___flmul@prod+3)^0,c
 11651  002286  0E00               	movlw	0
 11652  002288  6E1B               	movwf	___flmul@sign^0,c
 11653  00228A  EF5C  F011         	goto	l4072
 11654  00228E                     l1243:
 11655  00228E  C026  F021         	movff	___flmul@temp,___flmul@bexp
 11656  002292  0EFF               	movlw	255
 11657  002294  1622               	andwf	___flmul@prod^0,f,c
 11658  002296  0EFF               	movlw	255
 11659  002298  1623               	andwf	(___flmul@prod+1)^0,f,c
 11660  00229A  0E7F               	movlw	127
 11661  00229C  1624               	andwf	(___flmul@prod+2)^0,f,c
 11662  00229E  0E00               	movlw	0
 11663  0022A0  1625               	andwf	(___flmul@prod+3)^0,f,c
 11664  0022A2  A021               	btfss	___flmul@bexp^0,0,c
 11665  0022A4  EF56  F011         	goto	u4121
 11666  0022A8  EF58  F011         	goto	u4120
 11667  0022AC                     u4121:
 11668  0022AC  EF59  F011         	goto	l4070
 11669  0022B0                     u4120:
 11670  0022B0  8E24               	bsf	(___flmul@prod+2)^0,7,c
 11671  0022B2                     l4070:
 11672  0022B2  90D8               	bcf	status,0,c
 11673  0022B4  3021               	rrcf	___flmul@bexp^0,w,c
 11674  0022B6  6E25               	movwf	(___flmul@prod+3)^0,c
 11675  0022B8                     l4072:
 11676  0022B8  501B               	movf	___flmul@sign^0,w,c
 11677  0022BA  1225               	iorwf	(___flmul@prod+3)^0,f,c
 11678  0022BC  C022  F00F         	movff	___flmul@prod,?___flmul
 11679  0022C0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 11680  0022C4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 11681  0022C8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 11682  0022CC                     l1230:
 11683  0022CC  0012               	return		;funcret
 11684  0022CE                     __end_of___flmul:
 11685                           	callstack 0
 11686                           
 11687 ;; *************** function ___flge *****************
 11688 ;; Defined at:
 11689 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  ff1             4    0[COMRAM] unsigned char 
 11692 ;;  ff2             4    4[COMRAM] unsigned char 
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;		None               void
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11707 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11708 ;;Total ram usage:       12 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 1
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_roundf
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text53
 11719  004CF4                     __ptext53:
 11720                           	callstack 0
 11721  004CF4                     ___flge:
 11722                           	callstack 25
 11723  004CF4  0E00               	movlw	0
 11724  004CF6  1401               	andwf	___flge@ff1^0,w,c
 11725  004CF8  6E09               	movwf	??___flge^0,c
 11726  004CFA  0E00               	movlw	0
 11727  004CFC  1402               	andwf	(___flge@ff1+1)^0,w,c
 11728  004CFE  6E0A               	movwf	(??___flge+1)^0,c
 11729  004D00  0E80               	movlw	128
 11730  004D02  1403               	andwf	(___flge@ff1+2)^0,w,c
 11731  004D04  6E0B               	movwf	(??___flge+2)^0,c
 11732  004D06  0E7F               	movlw	127
 11733  004D08  1404               	andwf	(___flge@ff1+3)^0,w,c
 11734  004D0A  6E0C               	movwf	(??___flge+3)^0,c
 11735  004D0C  5009               	movf	??___flge^0,w,c
 11736  004D0E  100A               	iorwf	(??___flge+1)^0,w,c
 11737  004D10  100B               	iorwf	(??___flge+2)^0,w,c
 11738  004D12  100C               	iorwf	(??___flge+3)^0,w,c
 11739  004D14  A4D8               	btfss	status,2,c
 11740  004D16  EF8F  F026         	goto	u4131
 11741  004D1A  EF91  F026         	goto	u4130
 11742  004D1E                     u4131:
 11743  004D1E  EF99  F026         	goto	l4088
 11744  004D22                     u4130:
 11745  004D22  0E00               	movlw	0
 11746  004D24  6E01               	movwf	___flge@ff1^0,c
 11747  004D26  0E00               	movlw	0
 11748  004D28  6E02               	movwf	(___flge@ff1+1)^0,c
 11749  004D2A  0E00               	movlw	0
 11750  004D2C  6E03               	movwf	(___flge@ff1+2)^0,c
 11751  004D2E  0E00               	movlw	0
 11752  004D30  6E04               	movwf	(___flge@ff1+3)^0,c
 11753  004D32                     l4088:
 11754  004D32  0E00               	movlw	0
 11755  004D34  1405               	andwf	___flge@ff2^0,w,c
 11756  004D36  6E09               	movwf	??___flge^0,c
 11757  004D38  0E00               	movlw	0
 11758  004D3A  1406               	andwf	(___flge@ff2+1)^0,w,c
 11759  004D3C  6E0A               	movwf	(??___flge+1)^0,c
 11760  004D3E  0E80               	movlw	128
 11761  004D40  1407               	andwf	(___flge@ff2+2)^0,w,c
 11762  004D42  6E0B               	movwf	(??___flge+2)^0,c
 11763  004D44  0E7F               	movlw	127
 11764  004D46  1408               	andwf	(___flge@ff2+3)^0,w,c
 11765  004D48  6E0C               	movwf	(??___flge+3)^0,c
 11766  004D4A  5009               	movf	??___flge^0,w,c
 11767  004D4C  100A               	iorwf	(??___flge+1)^0,w,c
 11768  004D4E  100B               	iorwf	(??___flge+2)^0,w,c
 11769  004D50  100C               	iorwf	(??___flge+3)^0,w,c
 11770  004D52  A4D8               	btfss	status,2,c
 11771  004D54  EFAE  F026         	goto	u4141
 11772  004D58  EFB0  F026         	goto	u4140
 11773  004D5C                     u4141:
 11774  004D5C  EFB8  F026         	goto	l4092
 11775  004D60                     u4140:
 11776  004D60  0E00               	movlw	0
 11777  004D62  6E05               	movwf	___flge@ff2^0,c
 11778  004D64  0E00               	movlw	0
 11779  004D66  6E06               	movwf	(___flge@ff2+1)^0,c
 11780  004D68  0E00               	movlw	0
 11781  004D6A  6E07               	movwf	(___flge@ff2+2)^0,c
 11782  004D6C  0E00               	movlw	0
 11783  004D6E  6E08               	movwf	(___flge@ff2+3)^0,c
 11784  004D70                     l4092:
 11785  004D70  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11786  004D72  EFBD  F026         	goto	u4151
 11787  004D76  EFBF  F026         	goto	u4150
 11788  004D7A                     u4151:
 11789  004D7A  EFC8  F026         	goto	l4096
 11790  004D7E                     u4150:
 11791  004D7E  6C01               	negf	___flge@ff1^0,c
 11792  004D80  1E02               	comf	(___flge@ff1+1)^0,f,c
 11793  004D82  B0D8               	btfsc	status,0,c
 11794  004D84  2A02               	incf	(___flge@ff1+1)^0,f,c
 11795  004D86  1E03               	comf	(___flge@ff1+2)^0,f,c
 11796  004D88  B0D8               	btfsc	status,0,c
 11797  004D8A  2A03               	incf	(___flge@ff1+2)^0,f,c
 11798  004D8C  0E80               	movlw	128
 11799  004D8E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11800  004D90                     l4096:
 11801  004D90  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11802  004D92  EFCD  F026         	goto	u4161
 11803  004D96  EFCF  F026         	goto	u4160
 11804  004D9A                     u4161:
 11805  004D9A  EFD8  F026         	goto	l877
 11806  004D9E                     u4160:
 11807  004D9E  6C05               	negf	___flge@ff2^0,c
 11808  004DA0  1E06               	comf	(___flge@ff2+1)^0,f,c
 11809  004DA2  B0D8               	btfsc	status,0,c
 11810  004DA4  2A06               	incf	(___flge@ff2+1)^0,f,c
 11811  004DA6  1E07               	comf	(___flge@ff2+2)^0,f,c
 11812  004DA8  B0D8               	btfsc	status,0,c
 11813  004DAA  2A07               	incf	(___flge@ff2+2)^0,f,c
 11814  004DAC  0E80               	movlw	128
 11815  004DAE  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11816  004DB0                     l877:
 11817  004DB0  0E00               	movlw	0
 11818  004DB2  1A01               	xorwf	___flge@ff1^0,f,c
 11819  004DB4  0E00               	movlw	0
 11820  004DB6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11821  004DB8  0E00               	movlw	0
 11822  004DBA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11823  004DBC  0E80               	movlw	128
 11824  004DBE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11825  004DC0  0E00               	movlw	0
 11826  004DC2  1A05               	xorwf	___flge@ff2^0,f,c
 11827  004DC4  0E00               	movlw	0
 11828  004DC6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11829  004DC8  0E00               	movlw	0
 11830  004DCA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11831  004DCC  0E80               	movlw	128
 11832  004DCE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11833  004DD0  5005               	movf	___flge@ff2^0,w,c
 11834  004DD2  5C01               	subwf	___flge@ff1^0,w,c
 11835  004DD4  5006               	movf	(___flge@ff2+1)^0,w,c
 11836  004DD6  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11837  004DD8  5007               	movf	(___flge@ff2+2)^0,w,c
 11838  004DDA  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11839  004DDC  5008               	movf	(___flge@ff2+3)^0,w,c
 11840  004DDE  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11841  004DE0  B0D8               	btfsc	status,0,c
 11842  004DE2  EFF5  F026         	goto	u4171
 11843  004DE6  EFF7  F026         	goto	u4170
 11844  004DEA                     u4171:
 11845  004DEA  EFFA  F026         	goto	l4102
 11846  004DEE                     u4170:
 11847  004DEE  90D8               	bcf	status,0,c
 11848  004DF0  EFFB  F026         	goto	l882
 11849  004DF4                     l4102:
 11850  004DF4  80D8               	bsf	status,0,c
 11851  004DF6                     l882:
 11852  004DF6  0012               	return		;funcret
 11853  004DF8                     __end_of___flge:
 11854                           	callstack 0
 11855                           
 11856 ;; *************** function ___fltol *****************
 11857 ;; Defined at:
 11858 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  f1              4   65[COMRAM] unsigned char 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  exp1            1   74[COMRAM] unsigned char 
 11863 ;;  sign1           1   73[COMRAM] unsigned char 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  4   65[COMRAM] long 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11876 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11877 ;;Total ram usage:       10 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 1
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_lroundf
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text54
 11888  004BEE                     __ptext54:
 11889                           	callstack 0
 11890  004BEE                     ___fltol:
 11891                           	callstack 26
 11892  004BEE  3444               	rlcf	(___fltol@f1+2)^0,w,c
 11893  004BF0  3445               	rlcf	(___fltol@f1+3)^0,w,c
 11894  004BF2  6E4B               	movwf	___fltol@exp1^0,c
 11895  004BF4  504B               	movf	___fltol@exp1^0,w,c
 11896  004BF6  A4D8               	btfss	status,2,c
 11897  004BF8  EF00  F026         	goto	u4321
 11898  004BFC  EF02  F026         	goto	u4320
 11899  004C00                     u4321:
 11900  004C00  EF0C  F026         	goto	l4244
 11901  004C04                     u4320:
 11902  004C04                     l4240:
 11903  004C04  0E00               	movlw	0
 11904  004C06  6E42               	movwf	?___fltol^0,c
 11905  004C08  0E00               	movlw	0
 11906  004C0A  6E43               	movwf	(?___fltol+1)^0,c
 11907  004C0C  0E00               	movlw	0
 11908  004C0E  6E44               	movwf	(?___fltol+2)^0,c
 11909  004C10  0E00               	movlw	0
 11910  004C12  6E45               	movwf	(?___fltol+3)^0,c
 11911  004C14  EF79  F026         	goto	l909
 11912  004C18                     l4244:
 11913  004C18  C042  F046         	movff	___fltol@f1,??___fltol
 11914  004C1C  C043  F047         	movff	___fltol@f1+1,??___fltol+1
 11915  004C20  C044  F048         	movff	___fltol@f1+2,??___fltol+2
 11916  004C24  C045  F049         	movff	___fltol@f1+3,??___fltol+3
 11917  004C28  0E20               	movlw	32
 11918  004C2A  EF1C  F026         	goto	u4330
 11919  004C2E                     u4335:
 11920  004C2E  90D8               	bcf	status,0,c
 11921  004C30  3249               	rrcf	(??___fltol+3)^0,f,c
 11922  004C32  3248               	rrcf	(??___fltol+2)^0,f,c
 11923  004C34  3247               	rrcf	(??___fltol+1)^0,f,c
 11924  004C36  3246               	rrcf	??___fltol^0,f,c
 11925  004C38                     u4330:
 11926  004C38  2EE8               	decfsz	wreg,f,c
 11927  004C3A  EF17  F026         	goto	u4335
 11928  004C3E  5046               	movf	??___fltol^0,w,c
 11929  004C40  6E4A               	movwf	___fltol@sign1^0,c
 11930  004C42  8E44               	bsf	(___fltol@f1+2)^0,7,c
 11931  004C44  0EFF               	movlw	255
 11932  004C46  1642               	andwf	___fltol@f1^0,f,c
 11933  004C48  0EFF               	movlw	255
 11934  004C4A  1643               	andwf	(___fltol@f1+1)^0,f,c
 11935  004C4C  0EFF               	movlw	255
 11936  004C4E  1644               	andwf	(___fltol@f1+2)^0,f,c
 11937  004C50  0E00               	movlw	0
 11938  004C52  1645               	andwf	(___fltol@f1+3)^0,f,c
 11939  004C54  0E96               	movlw	150
 11940  004C56  5E4B               	subwf	___fltol@exp1^0,f,c
 11941  004C58  BE4B               	btfsc	___fltol@exp1^0,7,c
 11942  004C5A  EF33  F026         	goto	u4340
 11943  004C5E  EF31  F026         	goto	u4341
 11944  004C62                     u4341:
 11945  004C62  EF49  F026         	goto	l4264
 11946  004C66                     u4340:
 11947  004C66  504B               	movf	___fltol@exp1^0,w,c
 11948  004C68  0A80               	xorlw	128
 11949  004C6A  0F97               	addlw	151
 11950  004C6C  B0D8               	btfsc	status,0,c
 11951  004C6E  EF3B  F026         	goto	u4351
 11952  004C72  EF3D  F026         	goto	u4350
 11953  004C76                     u4351:
 11954  004C76  EF3F  F026         	goto	l4260
 11955  004C7A                     u4350:
 11956  004C7A  EF02  F026         	goto	l4240
 11957  004C7E                     l4260:
 11958  004C7E  90D8               	bcf	status,0,c
 11959  004C80  3245               	rrcf	(___fltol@f1+3)^0,f,c
 11960  004C82  3244               	rrcf	(___fltol@f1+2)^0,f,c
 11961  004C84  3243               	rrcf	(___fltol@f1+1)^0,f,c
 11962  004C86  3242               	rrcf	___fltol@f1^0,f,c
 11963  004C88  3E4B               	incfsz	___fltol@exp1^0,f,c
 11964  004C8A  EF3F  F026         	goto	l4260
 11965  004C8E  EF61  F026         	goto	l4274
 11966  004C92                     l4264:
 11967  004C92  0E1F               	movlw	31
 11968  004C94  644B               	cpfsgt	___fltol@exp1^0,c
 11969  004C96  EF4F  F026         	goto	u4361
 11970  004C9A  EF51  F026         	goto	u4360
 11971  004C9E                     u4361:
 11972  004C9E  EF59  F026         	goto	l4272
 11973  004CA2                     u4360:
 11974  004CA2  EF02  F026         	goto	l4240
 11975  004CA6                     l4270:
 11976  004CA6  90D8               	bcf	status,0,c
 11977  004CA8  3642               	rlcf	___fltol@f1^0,f,c
 11978  004CAA  3643               	rlcf	(___fltol@f1+1)^0,f,c
 11979  004CAC  3644               	rlcf	(___fltol@f1+2)^0,f,c
 11980  004CAE  3645               	rlcf	(___fltol@f1+3)^0,f,c
 11981  004CB0  064B               	decf	___fltol@exp1^0,f,c
 11982  004CB2                     l4272:
 11983  004CB2  504B               	movf	___fltol@exp1^0,w,c
 11984  004CB4  A4D8               	btfss	status,2,c
 11985  004CB6  EF5F  F026         	goto	u4371
 11986  004CBA  EF61  F026         	goto	u4370
 11987  004CBE                     u4371:
 11988  004CBE  EF53  F026         	goto	l4270
 11989  004CC2                     u4370:
 11990  004CC2                     l4274:
 11991  004CC2  504A               	movf	___fltol@sign1^0,w,c
 11992  004CC4  B4D8               	btfsc	status,2,c
 11993  004CC6  EF67  F026         	goto	u4381
 11994  004CCA  EF69  F026         	goto	u4380
 11995  004CCE                     u4381:
 11996  004CCE  EF71  F026         	goto	l4278
 11997  004CD2                     u4380:
 11998  004CD2  1E45               	comf	(___fltol@f1+3)^0,f,c
 11999  004CD4  1E44               	comf	(___fltol@f1+2)^0,f,c
 12000  004CD6  1E43               	comf	(___fltol@f1+1)^0,f,c
 12001  004CD8  6C42               	negf	___fltol@f1^0,c
 12002  004CDA  0E00               	movlw	0
 12003  004CDC  2243               	addwfc	(___fltol@f1+1)^0,f,c
 12004  004CDE  2244               	addwfc	(___fltol@f1+2)^0,f,c
 12005  004CE0  2245               	addwfc	(___fltol@f1+3)^0,f,c
 12006  004CE2                     l4278:
 12007  004CE2  C042  F042         	movff	___fltol@f1,?___fltol
 12008  004CE6  C043  F043         	movff	___fltol@f1+1,?___fltol+1
 12009  004CEA  C044  F044         	movff	___fltol@f1+2,?___fltol+2
 12010  004CEE  C045  F045         	movff	___fltol@f1+3,?___fltol+3
 12011  004CF2                     l909:
 12012  004CF2  0012               	return		;funcret
 12013  004CF4                     __end_of___fltol:
 12014                           	callstack 0
 12015                           
 12016 ;; *************** function _color_read_Clear *****************
 12017 ;; Defined at:
 12018 ;;		line 151 in file "color.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;  tmp             2    9[COMRAM] unsigned int 
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  2    4[COMRAM] unsigned int 
 12025 ;; Registers used:
 12026 ;;		wreg, status,2, status,0, cstack
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12036 ;;Total ram usage:        7 bytes
 12037 ;; Hardware stack levels used: 1
 12038 ;; Hardware stack levels required when called: 3
 12039 ;; This function calls:
 12040 ;;		_I2C_2_Master_Read
 12041 ;;		_I2C_2_Master_RepStart
 12042 ;;		_I2C_2_Master_Start
 12043 ;;		_I2C_2_Master_Stop
 12044 ;;		_I2C_2_Master_Write
 12045 ;; This function is called by:
 12046 ;;		_read_color
 12047 ;;		_calibrate_white
 12048 ;;		_amb_light_measure
 12049 ;;		_detect_wall
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text55
 12054  005758                     __ptext55:
 12055                           	callstack 0
 12056  005758                     _color_read_Clear:
 12057                           	callstack 24
 12058  005758                     
 12059                           ;color.c: 153:  unsigned int tmp;;color.c: 154:  I2C_2_Master_Start();
 12060  005758  EC6C  F02E         	call	_I2C_2_Master_Start	;wreg free
 12061                           
 12062                           ;color.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
 12063  00575C  0E52               	movlw	82
 12064  00575E  EC56  F02E         	call	_I2C_2_Master_Write
 12065                           
 12066                           ;color.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
 12067  005762  0EB4               	movlw	180
 12068  005764  EC56  F02E         	call	_I2C_2_Master_Write
 12069                           
 12070                           ;color.c: 157:  I2C_2_Master_RepStart();
 12071  005768  EC62  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 12072                           
 12073                           ;color.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
 12074  00576C  0E53               	movlw	83
 12075  00576E  EC56  F02E         	call	_I2C_2_Master_Write
 12076                           
 12077                           ;color.c: 159:  tmp=I2C_2_Master_Read(1);
 12078  005772  0E01               	movlw	1
 12079  005774  EC5B  F02C         	call	_I2C_2_Master_Read
 12080  005778  6E07               	movwf	??_color_read_Clear^0,c
 12081  00577A  5007               	movf	??_color_read_Clear^0,w,c
 12082  00577C  6E0A               	movwf	color_read_Clear@tmp^0,c
 12083  00577E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12084                           
 12085                           ;color.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12086  005780  0E00               	movlw	0
 12087  005782  EC5B  F02C         	call	_I2C_2_Master_Read
 12088  005786  6E07               	movwf	??_color_read_Clear^0,c
 12089  005788  5007               	movf	??_color_read_Clear^0,w,c
 12090  00578A  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12091  00578C  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12092  00578E  500A               	movf	color_read_Clear@tmp^0,w,c
 12093  005790  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12094  005792  6E0A               	movwf	color_read_Clear@tmp^0,c
 12095  005794  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12096  005796  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12097  005798  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12098                           
 12099                           ;color.c: 161:  I2C_2_Master_Stop();
 12100  00579A  EC67  F02E         	call	_I2C_2_Master_Stop	;wreg free
 12101  00579E                     
 12102                           ;color.c: 162:  return tmp;
 12103  00579E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12104  0057A2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12105  0057A6  0012               	return		;funcret
 12106  0057A8                     __end_of_color_read_Clear:
 12107                           	callstack 0
 12108                           
 12109 ;; *************** function _I2C_2_Master_RepStart *****************
 12110 ;; Defined at:
 12111 ;;		line 33 in file "i2c.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      void 
 12118 ;; Registers used:
 12119 ;;		wreg, status,2, status,0, cstack
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used: 1
 12131 ;; Hardware stack levels required when called: 2
 12132 ;; This function calls:
 12133 ;;		_I2C_2_Master_Idle
 12134 ;; This function is called by:
 12135 ;;		_color_read_Red
 12136 ;;		_color_read_Blue
 12137 ;;		_color_read_Green
 12138 ;;		_color_read_Clear
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           	psect	text56
 12143  005CC4                     __ptext56:
 12144                           	callstack 0
 12145  005CC4                     _I2C_2_Master_RepStart:
 12146                           	callstack 24
 12147  005CC4                     
 12148                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12149  005CC4  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12150  005CC8                     
 12151                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12152  005CC8  010E               	movlb	14	; () banked
 12153  005CCA  83DA               	bsf	218,1,b	;volatile
 12154  005CCC                     
 12155                           ; BSR set to: 14
 12156  005CCC  0012               	return		;funcret
 12157  005CCE                     __end_of_I2C_2_Master_RepStart:
 12158                           	callstack 0
 12159                           
 12160 ;; *************** function _I2C_2_Master_Read *****************
 12161 ;; Defined at:
 12162 ;;		line 51 in file "i2c.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  ack             1    wreg     unsigned char 
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;  ack             1    2[COMRAM] unsigned char 
 12167 ;;  tmp             1    3[COMRAM] unsigned char 
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      unsigned char 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0, cstack
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;Total ram usage:        3 bytes
 12182 ;; Hardware stack levels used: 1
 12183 ;; Hardware stack levels required when called: 2
 12184 ;; This function calls:
 12185 ;;		_I2C_2_Master_Idle
 12186 ;; This function is called by:
 12187 ;;		_color_read_Red
 12188 ;;		_color_read_Blue
 12189 ;;		_color_read_Green
 12190 ;;		_color_read_Clear
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text57
 12195  0058B6                     __ptext57:
 12196                           	callstack 0
 12197  0058B6                     _I2C_2_Master_Read:
 12198                           	callstack 24
 12199                           
 12200                           ; BSR set to: 14
 12201                           ;incstack = 0
 12202                           ;I2C_2_Master_Read@ack stored from wreg
 12203  0058B6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12204  0058B8                     
 12205                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12206  0058B8  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12207  0058BC                     
 12208                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12209  0058BC  010E               	movlb	14	; () banked
 12210  0058BE  87DA               	bsf	218,3,b	;volatile
 12211                           
 12212                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12213  0058C0  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12214  0058C4                     
 12215                           ;i2c.c: 57:   tmp = SSP2BUF;
 12216  0058C4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12217                           
 12218                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12219  0058C8  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12220  0058CC                     
 12221                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12222  0058CC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12223  0058CE  B4D8               	btfsc	status,2,c
 12224  0058D0  EF6C  F02C         	goto	u3871
 12225  0058D4  EF70  F02C         	goto	u3870
 12226  0058D8                     u3871:
 12227  0058D8  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12228  0058DA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12229  0058DC  EF71  F02C         	goto	u3888
 12230  0058E0                     u3870:
 12231  0058E0  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12232  0058E2                     u3888:
 12233  0058E2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12234  0058E4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12235  0058E6  010E               	movlb	14	; () banked
 12236  0058E8  51DA               	movf	218,w,b	;volatile
 12237  0058EA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12238  0058EC  0BDF               	andlw	-33
 12239  0058EE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12240  0058F0  6FDA               	movwf	218,b	;volatile
 12241  0058F2                     
 12242                           ; BSR set to: 14
 12243                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12244  0058F2  89DA               	bsf	218,4,b	;volatile
 12245  0058F4                     
 12246                           ; BSR set to: 14
 12247                           ;i2c.c: 61:   return tmp;
 12248  0058F4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12249  0058F6                     
 12250                           ; BSR set to: 14
 12251  0058F6  0012               	return		;funcret
 12252  0058F8                     __end_of_I2C_2_Master_Read:
 12253                           	callstack 0
 12254                           
 12255 ;; *************** function ___xxtofl *****************
 12256 ;; Defined at:
 12257 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;  sign            1    wreg     unsigned char 
 12260 ;;  val             4    0[COMRAM] long 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  sign            1    8[COMRAM] unsigned char 
 12263 ;;  arg             4   10[COMRAM] unsigned long 
 12264 ;;  exp             1    9[COMRAM] unsigned char 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  4    0[COMRAM] unsigned char 
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;Total ram usage:       14 bytes
 12279 ;; Hardware stack levels used: 1
 12280 ;; Hardware stack levels required when called: 1
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_detect_color
 12285 ;;		_amb_light_measure
 12286 ;;		_detect_wall
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290                           	psect	text58
 12291  003F9E                     __ptext58:
 12292                           	callstack 0
 12293  003F9E                     ___xxtofl:
 12294                           	callstack 27
 12295                           
 12296                           ; BSR set to: 14
 12297                           ;incstack = 0
 12298                           ;___xxtofl@sign stored from wreg
 12299  003F9E  6E09               	movwf	___xxtofl@sign^0,c
 12300  003FA0  5009               	movf	___xxtofl@sign^0,w,c
 12301  003FA2  B4D8               	btfsc	status,2,c
 12302  003FA4  EFD6  F01F         	goto	u5061
 12303  003FA8  EFD8  F01F         	goto	u5060
 12304  003FAC                     u5061:
 12305  003FAC  EFFA  F01F         	goto	l1267
 12306  003FB0                     u5060:
 12307  003FB0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12308  003FB2  EFDF  F01F         	goto	u5070
 12309  003FB6  EFDD  F01F         	goto	u5071
 12310  003FBA                     u5071:
 12311  003FBA  EFFA  F01F         	goto	l1267
 12312  003FBE                     u5070:
 12313  003FBE  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12314  003FC2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12315  003FC6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12316  003FCA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12317  003FCE  1E05               	comf	??___xxtofl^0,f,c
 12318  003FD0  1E06               	comf	(??___xxtofl+1)^0,f,c
 12319  003FD2  1E07               	comf	(??___xxtofl+2)^0,f,c
 12320  003FD4  1E08               	comf	(??___xxtofl+3)^0,f,c
 12321  003FD6  2A05               	incf	??___xxtofl^0,f,c
 12322  003FD8  0E00               	movlw	0
 12323  003FDA  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12324  003FDC  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12325  003FDE  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12326  003FE0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12327  003FE4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12328  003FE8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12329  003FEC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12330  003FF0  EF02  F020         	goto	l4602
 12331  003FF4                     l1267:
 12332  003FF4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12333  003FF8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12334  003FFC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12335  004000  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12336  004004                     l4602:
 12337  004004  5001               	movf	___xxtofl@val^0,w,c
 12338  004006  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12339  004008  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12340  00400A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12341  00400C  A4D8               	btfss	status,2,c
 12342  00400E  EF0B  F020         	goto	u5081
 12343  004012  EF0D  F020         	goto	u5080
 12344  004016                     u5081:
 12345  004016  EF17  F020         	goto	l4608
 12346  00401A                     u5080:
 12347  00401A  0E00               	movlw	0
 12348  00401C  6E01               	movwf	?___xxtofl^0,c
 12349  00401E  0E00               	movlw	0
 12350  004020  6E02               	movwf	(?___xxtofl+1)^0,c
 12351  004022  0E00               	movlw	0
 12352  004024  6E03               	movwf	(?___xxtofl+2)^0,c
 12353  004026  0E00               	movlw	0
 12354  004028  6E04               	movwf	(?___xxtofl+3)^0,c
 12355  00402A  EFA8  F020         	goto	l1270
 12356  00402E                     l4608:
 12357  00402E  0E96               	movlw	150
 12358  004030  6E0A               	movwf	___xxtofl@exp^0,c
 12359  004032  EF21  F020         	goto	l4612
 12360  004036                     l4610:
 12361  004036  2A0A               	incf	___xxtofl@exp^0,f,c
 12362  004038  90D8               	bcf	status,0,c
 12363  00403A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12364  00403C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12365  00403E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12366  004040  320B               	rrcf	___xxtofl@arg^0,f,c
 12367  004042                     l4612:
 12368  004042  0E00               	movlw	0
 12369  004044  140B               	andwf	___xxtofl@arg^0,w,c
 12370  004046  6E05               	movwf	??___xxtofl^0,c
 12371  004048  0E00               	movlw	0
 12372  00404A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12373  00404C  6E06               	movwf	(??___xxtofl+1)^0,c
 12374  00404E  0E00               	movlw	0
 12375  004050  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12376  004052  6E07               	movwf	(??___xxtofl+2)^0,c
 12377  004054  0EFE               	movlw	254
 12378  004056  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12379  004058  6E08               	movwf	(??___xxtofl+3)^0,c
 12380  00405A  5005               	movf	??___xxtofl^0,w,c
 12381  00405C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12382  00405E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12383  004060  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12384  004062  A4D8               	btfss	status,2,c
 12385  004064  EF36  F020         	goto	u5091
 12386  004068  EF38  F020         	goto	u5090
 12387  00406C                     u5091:
 12388  00406C  EF1B  F020         	goto	l4610
 12389  004070                     u5090:
 12390  004070  EF46  F020         	goto	l1274
 12391  004074                     l4614:
 12392  004074  2A0A               	incf	___xxtofl@exp^0,f,c
 12393  004076  0E01               	movlw	1
 12394  004078  260B               	addwf	___xxtofl@arg^0,f,c
 12395  00407A  0E00               	movlw	0
 12396  00407C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12397  00407E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12398  004080  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12399  004082  90D8               	bcf	status,0,c
 12400  004084  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12401  004086  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12402  004088  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12403  00408A  320B               	rrcf	___xxtofl@arg^0,f,c
 12404  00408C                     l1274:
 12405  00408C  0E00               	movlw	0
 12406  00408E  140B               	andwf	___xxtofl@arg^0,w,c
 12407  004090  6E05               	movwf	??___xxtofl^0,c
 12408  004092  0E00               	movlw	0
 12409  004094  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12410  004096  6E06               	movwf	(??___xxtofl+1)^0,c
 12411  004098  0E00               	movlw	0
 12412  00409A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12413  00409C  6E07               	movwf	(??___xxtofl+2)^0,c
 12414  00409E  0EFF               	movlw	255
 12415  0040A0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12416  0040A2  6E08               	movwf	(??___xxtofl+3)^0,c
 12417  0040A4  5005               	movf	??___xxtofl^0,w,c
 12418  0040A6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12419  0040A8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12420  0040AA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12421  0040AC  A4D8               	btfss	status,2,c
 12422  0040AE  EF5B  F020         	goto	u5101
 12423  0040B2  EF5D  F020         	goto	u5100
 12424  0040B6                     u5101:
 12425  0040B6  EF3A  F020         	goto	l4614
 12426  0040BA                     u5100:
 12427  0040BA  EF65  F020         	goto	l4622
 12428  0040BE                     l4620:
 12429  0040BE  060A               	decf	___xxtofl@exp^0,f,c
 12430  0040C0  90D8               	bcf	status,0,c
 12431  0040C2  360B               	rlcf	___xxtofl@arg^0,f,c
 12432  0040C4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12433  0040C6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12434  0040C8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12435  0040CA                     l4622:
 12436  0040CA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12437  0040CC  EF6A  F020         	goto	u5111
 12438  0040D0  EF6C  F020         	goto	u5110
 12439  0040D4                     u5111:
 12440  0040D4  EF74  F020         	goto	l1281
 12441  0040D8                     u5110:
 12442  0040D8  0E02               	movlw	2
 12443  0040DA  600A               	cpfslt	___xxtofl@exp^0,c
 12444  0040DC  EF72  F020         	goto	u5121
 12445  0040E0  EF74  F020         	goto	u5120
 12446  0040E4                     u5121:
 12447  0040E4  EF5F  F020         	goto	l4620
 12448  0040E8                     u5120:
 12449  0040E8                     l1281:
 12450  0040E8  B00A               	btfsc	___xxtofl@exp^0,0,c
 12451  0040EA  EF79  F020         	goto	u5131
 12452  0040EE  EF7B  F020         	goto	u5130
 12453  0040F2                     u5131:
 12454  0040F2  EF7C  F020         	goto	l4628
 12455  0040F6                     u5130:
 12456  0040F6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12457  0040F8                     l4628:
 12458  0040F8  90D8               	bcf	status,0,c
 12459  0040FA  320A               	rrcf	___xxtofl@exp^0,f,c
 12460  0040FC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12461  004100  6A06               	clrf	(??___xxtofl+1)^0,c
 12462  004102  6A07               	clrf	(??___xxtofl+2)^0,c
 12463  004104  6A08               	clrf	(??___xxtofl+3)^0,c
 12464  004106  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12465  00410A  6A07               	clrf	(??___xxtofl+2)^0,c
 12466  00410C  6A06               	clrf	(??___xxtofl+1)^0,c
 12467  00410E  6A05               	clrf	??___xxtofl^0,c
 12468  004110  5005               	movf	??___xxtofl^0,w,c
 12469  004112  120B               	iorwf	___xxtofl@arg^0,f,c
 12470  004114  5006               	movf	(??___xxtofl+1)^0,w,c
 12471  004116  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12472  004118  5007               	movf	(??___xxtofl+2)^0,w,c
 12473  00411A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12474  00411C  5008               	movf	(??___xxtofl+3)^0,w,c
 12475  00411E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12476  004120  5009               	movf	___xxtofl@sign^0,w,c
 12477  004122  B4D8               	btfsc	status,2,c
 12478  004124  EF96  F020         	goto	u5141
 12479  004128  EF98  F020         	goto	u5140
 12480  00412C                     u5141:
 12481  00412C  EFA0  F020         	goto	l4638
 12482  004130                     u5140:
 12483  004130  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12484  004132  EF9F  F020         	goto	u5150
 12485  004136  EF9D  F020         	goto	u5151
 12486  00413A                     u5151:
 12487  00413A  EFA0  F020         	goto	l4638
 12488  00413E                     u5150:
 12489  00413E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12490  004140                     l4638:
 12491  004140  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12492  004144  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12493  004148  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12494  00414C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12495  004150                     l1270:
 12496  004150  0012               	return		;funcret
 12497  004152                     __end_of___xxtofl:
 12498                           	callstack 0
 12499                           
 12500 ;; *************** function ___fldiv *****************
 12501 ;; Defined at:
 12502 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  b               4   39[COMRAM] unsigned char 
 12505 ;;  a               4   43[COMRAM] unsigned char 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  grs             4   58[COMRAM] unsigned long 
 12508 ;;  rem             4   51[COMRAM] unsigned long 
 12509 ;;  new_exp         2   56[COMRAM] short 
 12510 ;;  aexp            1   63[COMRAM] unsigned char 
 12511 ;;  bexp            1   62[COMRAM] unsigned char 
 12512 ;;  sign            1   55[COMRAM] unsigned char 
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  4   39[COMRAM] unsigned char 
 12515 ;; Registers used:
 12516 ;;		wreg, status,2, status,0
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12522 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;Total ram usage:       25 bytes
 12527 ;; Hardware stack levels used: 1
 12528 ;; Hardware stack levels required when called: 1
 12529 ;; This function calls:
 12530 ;;		Nothing
 12531 ;; This function is called by:
 12532 ;;		_detect_color
 12533 ;;		_amb_light_measure
 12534 ;;		_detect_wall
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text59
 12539  002A20                     __ptext59:
 12540                           	callstack 0
 12541  002A20                     ___fldiv:
 12542                           	callstack 27
 12543  002A20  502B               	movf	(___fldiv@b+3)^0,w,c
 12544  002A22  0B80               	andlw	128
 12545  002A24  6E38               	movwf	___fldiv@sign^0,c
 12546  002A26  502B               	movf	(___fldiv@b+3)^0,w,c
 12547  002A28  242B               	addwf	(___fldiv@b+3)^0,w,c
 12548  002A2A  6E3F               	movwf	___fldiv@bexp^0,c
 12549  002A2C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 12550  002A2E  EF1B  F015         	goto	u4831
 12551  002A32  EF1D  F015         	goto	u4830
 12552  002A36                     u4831:
 12553  002A36  EF1E  F015         	goto	l4464
 12554  002A3A                     u4830:
 12555  002A3A  803F               	bsf	___fldiv@bexp^0,0,c
 12556  002A3C                     l4464:
 12557  002A3C  503F               	movf	___fldiv@bexp^0,w,c
 12558  002A3E  B4D8               	btfsc	status,2,c
 12559  002A40  EF24  F015         	goto	u4841
 12560  002A44  EF26  F015         	goto	u4840
 12561  002A48                     u4841:
 12562  002A48  EF3B  F015         	goto	l4474
 12563  002A4C                     u4840:
 12564  002A4C  283F               	incf	___fldiv@bexp^0,w,c
 12565  002A4E  A4D8               	btfss	status,2,c
 12566  002A50  EF2C  F015         	goto	u4851
 12567  002A54  EF2E  F015         	goto	u4850
 12568  002A58                     u4851:
 12569  002A58  EF36  F015         	goto	l4470
 12570  002A5C                     u4850:
 12571  002A5C  0E00               	movlw	0
 12572  002A5E  6E28               	movwf	___fldiv@b^0,c
 12573  002A60  0E00               	movlw	0
 12574  002A62  6E29               	movwf	(___fldiv@b+1)^0,c
 12575  002A64  0E00               	movlw	0
 12576  002A66  6E2A               	movwf	(___fldiv@b+2)^0,c
 12577  002A68  0E00               	movlw	0
 12578  002A6A  6E2B               	movwf	(___fldiv@b+3)^0,c
 12579  002A6C                     l4470:
 12580  002A6C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 12581  002A6E  0E00               	movlw	0
 12582  002A70  6E2B               	movwf	(___fldiv@b+3)^0,c
 12583  002A72  EF43  F015         	goto	l4476
 12584  002A76                     l4474:
 12585  002A76  0E00               	movlw	0
 12586  002A78  6E28               	movwf	___fldiv@b^0,c
 12587  002A7A  0E00               	movlw	0
 12588  002A7C  6E29               	movwf	(___fldiv@b+1)^0,c
 12589  002A7E  0E00               	movlw	0
 12590  002A80  6E2A               	movwf	(___fldiv@b+2)^0,c
 12591  002A82  0E00               	movlw	0
 12592  002A84  6E2B               	movwf	(___fldiv@b+3)^0,c
 12593  002A86                     l4476:
 12594  002A86  502F               	movf	(___fldiv@a+3)^0,w,c
 12595  002A88  0B80               	andlw	128
 12596  002A8A  1A38               	xorwf	___fldiv@sign^0,f,c
 12597  002A8C  502F               	movf	(___fldiv@a+3)^0,w,c
 12598  002A8E  242F               	addwf	(___fldiv@a+3)^0,w,c
 12599  002A90  6E40               	movwf	___fldiv@aexp^0,c
 12600  002A92  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 12601  002A94  EF4E  F015         	goto	u4861
 12602  002A98  EF50  F015         	goto	u4860
 12603  002A9C                     u4861:
 12604  002A9C  EF51  F015         	goto	l4484
 12605  002AA0                     u4860:
 12606  002AA0  8040               	bsf	___fldiv@aexp^0,0,c
 12607  002AA2                     l4484:
 12608  002AA2  5040               	movf	___fldiv@aexp^0,w,c
 12609  002AA4  B4D8               	btfsc	status,2,c
 12610  002AA6  EF57  F015         	goto	u4871
 12611  002AAA  EF59  F015         	goto	u4870
 12612  002AAE                     u4871:
 12613  002AAE  EF6E  F015         	goto	l4494
 12614  002AB2                     u4870:
 12615  002AB2  2840               	incf	___fldiv@aexp^0,w,c
 12616  002AB4  A4D8               	btfss	status,2,c
 12617  002AB6  EF5F  F015         	goto	u4881
 12618  002ABA  EF61  F015         	goto	u4880
 12619  002ABE                     u4881:
 12620  002ABE  EF69  F015         	goto	l4490
 12621  002AC2                     u4880:
 12622  002AC2  0E00               	movlw	0
 12623  002AC4  6E2C               	movwf	___fldiv@a^0,c
 12624  002AC6  0E00               	movlw	0
 12625  002AC8  6E2D               	movwf	(___fldiv@a+1)^0,c
 12626  002ACA  0E00               	movlw	0
 12627  002ACC  6E2E               	movwf	(___fldiv@a+2)^0,c
 12628  002ACE  0E00               	movlw	0
 12629  002AD0  6E2F               	movwf	(___fldiv@a+3)^0,c
 12630  002AD2                     l4490:
 12631  002AD2  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 12632  002AD4  0E00               	movlw	0
 12633  002AD6  6E2F               	movwf	(___fldiv@a+3)^0,c
 12634  002AD8  EF76  F015         	goto	l4496
 12635  002ADC                     l4494:
 12636  002ADC  0E00               	movlw	0
 12637  002ADE  6E2C               	movwf	___fldiv@a^0,c
 12638  002AE0  0E00               	movlw	0
 12639  002AE2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12640  002AE4  0E00               	movlw	0
 12641  002AE6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12642  002AE8  0E00               	movlw	0
 12643  002AEA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12644  002AEC                     l4496:
 12645  002AEC  502C               	movf	___fldiv@a^0,w,c
 12646  002AEE  102D               	iorwf	(___fldiv@a+1)^0,w,c
 12647  002AF0  102E               	iorwf	(___fldiv@a+2)^0,w,c
 12648  002AF2  102F               	iorwf	(___fldiv@a+3)^0,w,c
 12649  002AF4  A4D8               	btfss	status,2,c
 12650  002AF6  EF7F  F015         	goto	u4891
 12651  002AFA  EF81  F015         	goto	u4890
 12652  002AFE                     u4891:
 12653  002AFE  EF99  F015         	goto	l4508
 12654  002B02                     u4890:
 12655  002B02  0E00               	movlw	0
 12656  002B04  6E28               	movwf	___fldiv@b^0,c
 12657  002B06  0E00               	movlw	0
 12658  002B08  6E29               	movwf	(___fldiv@b+1)^0,c
 12659  002B0A  0E00               	movlw	0
 12660  002B0C  6E2A               	movwf	(___fldiv@b+2)^0,c
 12661  002B0E  0E00               	movlw	0
 12662  002B10  6E2B               	movwf	(___fldiv@b+3)^0,c
 12663  002B12  0E80               	movlw	128
 12664  002B14  122A               	iorwf	(___fldiv@b+2)^0,f,c
 12665  002B16  0E7F               	movlw	127
 12666  002B18  122B               	iorwf	(___fldiv@b+3)^0,f,c
 12667  002B1A                     l4502:
 12668  002B1A  5038               	movf	___fldiv@sign^0,w,c
 12669  002B1C  122B               	iorwf	(___fldiv@b+3)^0,f,c
 12670  002B1E  C028  F028         	movff	___fldiv@b,?___fldiv
 12671  002B22  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 12672  002B26  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 12673  002B2A  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 12674  002B2E  EFDC  F016         	goto	l1194
 12675  002B32                     l4508:
 12676  002B32  503F               	movf	___fldiv@bexp^0,w,c
 12677  002B34  A4D8               	btfss	status,2,c
 12678  002B36  EF9F  F015         	goto	u4901
 12679  002B3A  EFA1  F015         	goto	u4900
 12680  002B3E                     u4901:
 12681  002B3E  EFAB  F015         	goto	l4516
 12682  002B42                     u4900:
 12683  002B42  0E00               	movlw	0
 12684  002B44  6E28               	movwf	?___fldiv^0,c
 12685  002B46  0E00               	movlw	0
 12686  002B48  6E29               	movwf	(?___fldiv+1)^0,c
 12687  002B4A  0E00               	movlw	0
 12688  002B4C  6E2A               	movwf	(?___fldiv+2)^0,c
 12689  002B4E  0E00               	movlw	0
 12690  002B50  6E2B               	movwf	(?___fldiv+3)^0,c
 12691  002B52  EFDC  F016         	goto	l1194
 12692  002B56                     l4516:
 12693  002B56  5040               	movf	___fldiv@aexp^0,w,c
 12694  002B58  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 12695  002B5C  6A31               	clrf	(??___fldiv+1)^0,c
 12696  002B5E  5E30               	subwf	??___fldiv^0,f,c
 12697  002B60  0E00               	movlw	0
 12698  002B62  5A31               	subwfb	(??___fldiv+1)^0,f,c
 12699  002B64  0E7F               	movlw	127
 12700  002B66  2430               	addwf	??___fldiv^0,w,c
 12701  002B68  6E39               	movwf	___fldiv@new_exp^0,c
 12702  002B6A  0E00               	movlw	0
 12703  002B6C  2031               	addwfc	(??___fldiv+1)^0,w,c
 12704  002B6E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12705  002B70  C028  F034         	movff	___fldiv@b,___fldiv@rem
 12706  002B74  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 12707  002B78  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 12708  002B7C  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 12709  002B80  0E00               	movlw	0
 12710  002B82  6E28               	movwf	___fldiv@b^0,c
 12711  002B84  0E00               	movlw	0
 12712  002B86  6E29               	movwf	(___fldiv@b+1)^0,c
 12713  002B88  0E00               	movlw	0
 12714  002B8A  6E2A               	movwf	(___fldiv@b+2)^0,c
 12715  002B8C  0E00               	movlw	0
 12716  002B8E  6E2B               	movwf	(___fldiv@b+3)^0,c
 12717  002B90  0E00               	movlw	0
 12718  002B92  6E3B               	movwf	___fldiv@grs^0,c
 12719  002B94  0E00               	movlw	0
 12720  002B96  6E3C               	movwf	(___fldiv@grs+1)^0,c
 12721  002B98  0E00               	movlw	0
 12722  002B9A  6E3D               	movwf	(___fldiv@grs+2)^0,c
 12723  002B9C  0E00               	movlw	0
 12724  002B9E  6E3E               	movwf	(___fldiv@grs+3)^0,c
 12725  002BA0  0E00               	movlw	0
 12726  002BA2  6E40               	movwf	___fldiv@aexp^0,c
 12727  002BA4  EF0C  F016         	goto	l1196
 12728  002BA8                     l4526:
 12729  002BA8  5040               	movf	___fldiv@aexp^0,w,c
 12730  002BAA  B4D8               	btfsc	status,2,c
 12731  002BAC  EFDA  F015         	goto	u4911
 12732  002BB0  EFDC  F015         	goto	u4910
 12733  002BB4                     u4911:
 12734  002BB4  EFF3  F015         	goto	l4534
 12735  002BB8                     u4910:
 12736  002BB8  90D8               	bcf	status,0,c
 12737  002BBA  3634               	rlcf	___fldiv@rem^0,f,c
 12738  002BBC  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 12739  002BBE  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 12740  002BC0  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 12741  002BC2  90D8               	bcf	status,0,c
 12742  002BC4  3628               	rlcf	___fldiv@b^0,f,c
 12743  002BC6  3629               	rlcf	(___fldiv@b+1)^0,f,c
 12744  002BC8  362A               	rlcf	(___fldiv@b+2)^0,f,c
 12745  002BCA  362B               	rlcf	(___fldiv@b+3)^0,f,c
 12746  002BCC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12747  002BCE  EFEB  F015         	goto	u4921
 12748  002BD2  EFED  F015         	goto	u4920
 12749  002BD6                     u4921:
 12750  002BD6  EFEE  F015         	goto	l1199
 12751  002BDA                     u4920:
 12752  002BDA  8028               	bsf	___fldiv@b^0,0,c
 12753  002BDC                     l1199:
 12754  002BDC  90D8               	bcf	status,0,c
 12755  002BDE  363B               	rlcf	___fldiv@grs^0,f,c
 12756  002BE0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 12757  002BE2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 12758  002BE4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 12759  002BE6                     l4534:
 12760  002BE6  502C               	movf	___fldiv@a^0,w,c
 12761  002BE8  5C34               	subwf	___fldiv@rem^0,w,c
 12762  002BEA  502D               	movf	(___fldiv@a+1)^0,w,c
 12763  002BEC  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 12764  002BEE  502E               	movf	(___fldiv@a+2)^0,w,c
 12765  002BF0  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 12766  002BF2  502F               	movf	(___fldiv@a+3)^0,w,c
 12767  002BF4  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 12768  002BF6  A0D8               	btfss	status,0,c
 12769  002BF8  EF00  F016         	goto	u4931
 12770  002BFC  EF02  F016         	goto	u4930
 12771  002C00                     u4931:
 12772  002C00  EF0B  F016         	goto	l4540
 12773  002C04                     u4930:
 12774  002C04  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 12775  002C06  502C               	movf	___fldiv@a^0,w,c
 12776  002C08  5E34               	subwf	___fldiv@rem^0,f,c
 12777  002C0A  502D               	movf	(___fldiv@a+1)^0,w,c
 12778  002C0C  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 12779  002C0E  502E               	movf	(___fldiv@a+2)^0,w,c
 12780  002C10  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 12781  002C12  502F               	movf	(___fldiv@a+3)^0,w,c
 12782  002C14  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 12783  002C16                     l4540:
 12784  002C16  2A40               	incf	___fldiv@aexp^0,f,c
 12785  002C18                     l1196:
 12786  002C18  0E19               	movlw	25
 12787  002C1A  6440               	cpfsgt	___fldiv@aexp^0,c
 12788  002C1C  EF12  F016         	goto	u4941
 12789  002C20  EF14  F016         	goto	u4940
 12790  002C24                     u4941:
 12791  002C24  EFD4  F015         	goto	l4526
 12792  002C28                     u4940:
 12793  002C28  5034               	movf	___fldiv@rem^0,w,c
 12794  002C2A  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 12795  002C2C  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 12796  002C2E  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 12797  002C30  B4D8               	btfsc	status,2,c
 12798  002C32  EF1D  F016         	goto	u4951
 12799  002C36  EF1F  F016         	goto	u4950
 12800  002C3A                     u4951:
 12801  002C3A  EF37  F016         	goto	l4552
 12802  002C3E                     u4950:
 12803  002C3E  803B               	bsf	___fldiv@grs^0,0,c
 12804  002C40  EF37  F016         	goto	l4552
 12805  002C44                     l4546:
 12806  002C44  90D8               	bcf	status,0,c
 12807  002C46  3628               	rlcf	___fldiv@b^0,f,c
 12808  002C48  3629               	rlcf	(___fldiv@b+1)^0,f,c
 12809  002C4A  362A               	rlcf	(___fldiv@b+2)^0,f,c
 12810  002C4C  362B               	rlcf	(___fldiv@b+3)^0,f,c
 12811  002C4E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12812  002C50  EF2C  F016         	goto	u4961
 12813  002C54  EF2E  F016         	goto	u4960
 12814  002C58                     u4961:
 12815  002C58  EF2F  F016         	goto	l1205
 12816  002C5C                     u4960:
 12817  002C5C  8028               	bsf	___fldiv@b^0,0,c
 12818  002C5E                     l1205:
 12819  002C5E  90D8               	bcf	status,0,c
 12820  002C60  363B               	rlcf	___fldiv@grs^0,f,c
 12821  002C62  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 12822  002C64  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 12823  002C66  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 12824  002C68  0639               	decf	___fldiv@new_exp^0,f,c
 12825  002C6A  A0D8               	btfss	status,0,c
 12826  002C6C  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 12827  002C6E                     l4552:
 12828  002C6E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 12829  002C70  EF3C  F016         	goto	u4971
 12830  002C74  EF3E  F016         	goto	u4970
 12831  002C78                     u4971:
 12832  002C78  EF22  F016         	goto	l4546
 12833  002C7C                     u4970:
 12834  002C7C  0E00               	movlw	0
 12835  002C7E  6E40               	movwf	___fldiv@aexp^0,c
 12836  002C80  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12837  002C82  EF45  F016         	goto	u4981
 12838  002C86  EF47  F016         	goto	u4980
 12839  002C8A                     u4981:
 12840  002C8A  EF6B  F016         	goto	l1207
 12841  002C8E                     u4980:
 12842  002C8E  0EFF               	movlw	255
 12843  002C90  143B               	andwf	___fldiv@grs^0,w,c
 12844  002C92  6E30               	movwf	??___fldiv^0,c
 12845  002C94  0EFF               	movlw	255
 12846  002C96  143C               	andwf	(___fldiv@grs+1)^0,w,c
 12847  002C98  6E31               	movwf	(??___fldiv+1)^0,c
 12848  002C9A  0EFF               	movlw	255
 12849  002C9C  143D               	andwf	(___fldiv@grs+2)^0,w,c
 12850  002C9E  6E32               	movwf	(??___fldiv+2)^0,c
 12851  002CA0  0E7F               	movlw	127
 12852  002CA2  143E               	andwf	(___fldiv@grs+3)^0,w,c
 12853  002CA4  6E33               	movwf	(??___fldiv+3)^0,c
 12854  002CA6  5030               	movf	??___fldiv^0,w,c
 12855  002CA8  1031               	iorwf	(??___fldiv+1)^0,w,c
 12856  002CAA  1032               	iorwf	(??___fldiv+2)^0,w,c
 12857  002CAC  1033               	iorwf	(??___fldiv+3)^0,w,c
 12858  002CAE  B4D8               	btfsc	status,2,c
 12859  002CB0  EF5C  F016         	goto	u4991
 12860  002CB4  EF5E  F016         	goto	u4990
 12861  002CB8                     u4991:
 12862  002CB8  EF62  F016         	goto	l1208
 12863  002CBC                     u4990:
 12864  002CBC                     l4560:
 12865  002CBC  0E01               	movlw	1
 12866  002CBE  6E40               	movwf	___fldiv@aexp^0,c
 12867  002CC0  EF6B  F016         	goto	l1207
 12868  002CC4                     l1208:
 12869  002CC4  A028               	btfss	___fldiv@b^0,0,c
 12870  002CC6  EF67  F016         	goto	u5001
 12871  002CCA  EF69  F016         	goto	u5000
 12872  002CCE                     u5001:
 12873  002CCE  EF6B  F016         	goto	l1207
 12874  002CD2                     u5000:
 12875  002CD2  EF5E  F016         	goto	l4560
 12876  002CD6                     l1207:
 12877  002CD6  5040               	movf	___fldiv@aexp^0,w,c
 12878  002CD8  B4D8               	btfsc	status,2,c
 12879  002CDA  EF71  F016         	goto	u5011
 12880  002CDE  EF73  F016         	goto	u5010
 12881  002CE2                     u5011:
 12882  002CE2  EF97  F016         	goto	l4572
 12883  002CE6                     u5010:
 12884  002CE6  0E01               	movlw	1
 12885  002CE8  2628               	addwf	___fldiv@b^0,f,c
 12886  002CEA  0E00               	movlw	0
 12887  002CEC  2229               	addwfc	(___fldiv@b+1)^0,f,c
 12888  002CEE  222A               	addwfc	(___fldiv@b+2)^0,f,c
 12889  002CF0  222B               	addwfc	(___fldiv@b+3)^0,f,c
 12890  002CF2  A02B               	btfss	(___fldiv@b+3)^0,0,c
 12891  002CF4  EF7E  F016         	goto	u5021
 12892  002CF8  EF80  F016         	goto	u5020
 12893  002CFC                     u5021:
 12894  002CFC  EF97  F016         	goto	l4572
 12895  002D00                     u5020:
 12896  002D00  C028  F030         	movff	___fldiv@b,??___fldiv
 12897  002D04  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 12898  002D08  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 12899  002D0C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 12900  002D10  3433               	rlcf	(??___fldiv+3)^0,w,c
 12901  002D12  3233               	rrcf	(??___fldiv+3)^0,f,c
 12902  002D14  3232               	rrcf	(??___fldiv+2)^0,f,c
 12903  002D16  3231               	rrcf	(??___fldiv+1)^0,f,c
 12904  002D18  3230               	rrcf	??___fldiv^0,f,c
 12905  002D1A  C030  F028         	movff	??___fldiv,___fldiv@b
 12906  002D1E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 12907  002D22  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 12908  002D26  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 12909  002D2A  4A39               	infsnz	___fldiv@new_exp^0,f,c
 12910  002D2C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 12911  002D2E                     l4572:
 12912  002D2E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12913  002D30  EFA2  F016         	goto	u5031
 12914  002D34  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 12915  002D36  E108               	bnz	u5030
 12916  002D38  2839               	incf	___fldiv@new_exp^0,w,c
 12917  002D3A  A0D8               	btfss	status,0,c
 12918  002D3C  EFA2  F016         	goto	u5031
 12919  002D40  EFA4  F016         	goto	u5030
 12920  002D44                     u5031:
 12921  002D44  EFAF  F016         	goto	l4576
 12922  002D48                     u5030:
 12923  002D48  0E00               	movlw	0
 12924  002D4A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12925  002D4C  6839               	setf	___fldiv@new_exp^0,c
 12926  002D4E  0E00               	movlw	0
 12927  002D50  6E28               	movwf	___fldiv@b^0,c
 12928  002D52  0E00               	movlw	0
 12929  002D54  6E29               	movwf	(___fldiv@b+1)^0,c
 12930  002D56  0E00               	movlw	0
 12931  002D58  6E2A               	movwf	(___fldiv@b+2)^0,c
 12932  002D5A  0E00               	movlw	0
 12933  002D5C  6E2B               	movwf	(___fldiv@b+3)^0,c
 12934  002D5E                     l4576:
 12935  002D5E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12936  002D60  EFBC  F016         	goto	u5040
 12937  002D64  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 12938  002D66  E106               	bnz	u5041
 12939  002D68  0439               	decf	___fldiv@new_exp^0,w,c
 12940  002D6A  B0D8               	btfsc	status,0,c
 12941  002D6C  EFBA  F016         	goto	u5041
 12942  002D70  EFBC  F016         	goto	u5040
 12943  002D74                     u5041:
 12944  002D74  EFCA  F016         	goto	l4580
 12945  002D78                     u5040:
 12946  002D78  0E00               	movlw	0
 12947  002D7A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12948  002D7C  0E00               	movlw	0
 12949  002D7E  6E39               	movwf	___fldiv@new_exp^0,c
 12950  002D80  0E00               	movlw	0
 12951  002D82  6E28               	movwf	___fldiv@b^0,c
 12952  002D84  0E00               	movlw	0
 12953  002D86  6E29               	movwf	(___fldiv@b+1)^0,c
 12954  002D88  0E00               	movlw	0
 12955  002D8A  6E2A               	movwf	(___fldiv@b+2)^0,c
 12956  002D8C  0E00               	movlw	0
 12957  002D8E  6E2B               	movwf	(___fldiv@b+3)^0,c
 12958  002D90  0E00               	movlw	0
 12959  002D92  6E38               	movwf	___fldiv@sign^0,c
 12960  002D94                     l4580:
 12961  002D94  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 12962  002D98  A03F               	btfss	___fldiv@bexp^0,0,c
 12963  002D9A  EFD1  F016         	goto	u5051
 12964  002D9E  EFD3  F016         	goto	u5050
 12965  002DA2                     u5051:
 12966  002DA2  EFD6  F016         	goto	l4586
 12967  002DA6                     u5050:
 12968  002DA6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 12969  002DA8  EFD7  F016         	goto	l4588
 12970  002DAC                     l4586:
 12971  002DAC  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 12972  002DAE                     l4588:
 12973  002DAE  90D8               	bcf	status,0,c
 12974  002DB0  303F               	rrcf	___fldiv@bexp^0,w,c
 12975  002DB2  6E2B               	movwf	(___fldiv@b+3)^0,c
 12976  002DB4  EF8D  F015         	goto	l4502
 12977  002DB8                     l1194:
 12978  002DB8  0012               	return		;funcret
 12979  002DBA                     __end_of___fldiv:
 12980                           	callstack 0
 12981                           
 12982 ;; *************** function _LED_C *****************
 12983 ;; Defined at:
 12984 ;;		line 193 in file "color.c"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;		None
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;		None
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  1    wreg      void 
 12991 ;; Registers used:
 12992 ;;		wreg
 12993 ;; Tracked objects:
 12994 ;;		On entry : 0/0
 12995 ;;		On exit  : 0/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;Total ram usage:        2 bytes
 13003 ;; Hardware stack levels used: 1
 13004 ;; Hardware stack levels required when called: 1
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_calibrate_white
 13009 ;;		_color_data_collection
 13010 ;;		_amb_light_measure
 13011 ;;		_detect_wall
 13012 ;;		_test_function
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           	psect	text60
 13017  005C18                     __ptext60:
 13018                           	callstack 0
 13019  005C18                     _LED_C:
 13020                           	callstack 27
 13021  005C18                     
 13022                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13023  005C18  827F               	bsf	127,1,c	;volatile
 13024                           
 13025                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13026  005C1A  8E7E               	bsf	126,7,c	;volatile
 13027                           
 13028                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13029  005C1C  8879               	bsf	121,4,c	;volatile
 13030  005C1E                     
 13031                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13032  005C1E  0E11               	movlw	17
 13033  005C20  6E02               	movwf	(??_LED_C+1)^0,c
 13034  005C22  0E3C               	movlw	60
 13035  005C24  6E01               	movwf	??_LED_C^0,c
 13036  005C26  0ECB               	movlw	203
 13037  005C28                     u6467:
 13038  005C28  2EE8               	decfsz	wreg,f,c
 13039  005C2A  D7FE               	bra	u6467
 13040  005C2C  2E01               	decfsz	??_LED_C^0,f,c
 13041  005C2E  D7FC               	bra	u6467
 13042  005C30  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13043  005C32  D7FA               	bra	u6467
 13044  005C34  F000               	nop	
 13045  005C36  0012               	return		;funcret
 13046  005C38                     __end_of_LED_C:
 13047                           	callstack 0
 13048                           
 13049 ;; *************** function _pin_init *****************
 13050 ;; Defined at:
 13051 ;;		line 14 in file "color.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1    wreg      void 
 13058 ;; Registers used:
 13059 ;;		None
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;Total ram usage:        0 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 1
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_main
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text61
 13080  005A5A                     __ptext61:
 13081                           	callstack 0
 13082  005A5A                     _pin_init:
 13083                           	callstack 29
 13084  005A5A                     
 13085                           ;color.c: 16:     TRISFbits.TRISF2=1;
 13086  005A5A  8486               	bsf	134,2,c	;volatile
 13087                           
 13088                           ;color.c: 17:     ANSELFbits.ANSELF2=0;
 13089  005A5C  010E               	movlb	14	; () banked
 13090  005A5E  95B4               	bcf	180,2,b	;volatile
 13091                           
 13092                           ;color.c: 18:     TRISFbits.TRISF3=1;
 13093  005A60  8686               	bsf	134,3,c	;volatile
 13094                           
 13095                           ;color.c: 19:     ANSELFbits.ANSELF3=0;
 13096  005A62  97B4               	bcf	180,3,b	;volatile
 13097                           
 13098                           ;color.c: 22:     TRISDbits.TRISD7 = 0;
 13099  005A64  9E84               	bcf	132,7,c	;volatile
 13100                           
 13101                           ;color.c: 23:     LATDbits.LATD7 = 0;
 13102  005A66  9E7C               	bcf	124,7,c	;volatile
 13103                           
 13104                           ;color.c: 24:     TRISHbits.TRISH3 = 0;
 13105  005A68  9688               	bcf	136,3,c	;volatile
 13106                           
 13107                           ;color.c: 25:     LATHbits.LATH3 = 0;
 13108  005A6A  9680               	bcf	128,3,c	;volatile
 13109                           
 13110                           ;color.c: 28:     TRISGbits.TRISG1 = 0;
 13111  005A6C  9287               	bcf	135,1,c	;volatile
 13112                           
 13113                           ;color.c: 29:     TRISFbits.TRISF7 = 0;
 13114  005A6E  9E86               	bcf	134,7,c	;volatile
 13115                           
 13116                           ;color.c: 30:     TRISAbits.TRISA4 = 0;
 13117  005A70  9881               	bcf	129,4,c	;volatile
 13118                           
 13119                           ;color.c: 32:     LATGbits.LATG1 = 1;
 13120  005A72  827F               	bsf	127,1,c	;volatile
 13121                           
 13122                           ;color.c: 33:     LATFbits.LATF7 = 1;
 13123  005A74  8E7E               	bsf	126,7,c	;volatile
 13124                           
 13125                           ;color.c: 34:     LATAbits.LATA4 = 1;
 13126  005A76  8879               	bsf	121,4,c	;volatile
 13127                           
 13128                           ;color.c: 37:     TRISHbits.TRISH1=0;
 13129  005A78  9288               	bcf	136,1,c	;volatile
 13130                           
 13131                           ;color.c: 38:     TRISDbits.TRISD4=0;
 13132  005A7A  9884               	bcf	132,4,c	;volatile
 13133                           
 13134                           ;color.c: 39:     TRISDbits.TRISD3=0;
 13135  005A7C  9684               	bcf	132,3,c	;volatile
 13136                           
 13137                           ;color.c: 40:     TRISFbits.TRISF0=0;
 13138  005A7E  9086               	bcf	134,0,c	;volatile
 13139                           
 13140                           ;color.c: 41:     TRISHbits.TRISH0=0;
 13141  005A80  9088               	bcf	136,0,c	;volatile
 13142                           
 13143                           ;color.c: 43:     LATHbits.LATH1 = 0;
 13144  005A82  9280               	bcf	128,1,c	;volatile
 13145                           
 13146                           ;color.c: 44:     LATDbits.LATD4 = 0;
 13147  005A84  987C               	bcf	124,4,c	;volatile
 13148                           
 13149                           ;color.c: 45:     LATDbits.LATD3 = 0;
 13150  005A86  967C               	bcf	124,3,c	;volatile
 13151                           
 13152                           ;color.c: 46:     LATFbits.LATF0 = 0;
 13153  005A88  907E               	bcf	126,0,c	;volatile
 13154                           
 13155                           ;color.c: 47:     LATHbits.LATH0 = 0;
 13156  005A8A  9080               	bcf	128,0,c	;volatile
 13157  005A8C                     
 13158                           ; BSR set to: 14
 13159  005A8C  0012               	return		;funcret
 13160  005A8E                     __end_of_pin_init:
 13161                           	callstack 0
 13162                           
 13163 ;; *************** function _initUSART4 *****************
 13164 ;; Defined at:
 13165 ;;		line 4 in file "serial.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;		None
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;		None
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1    wreg      void 
 13172 ;; Registers used:
 13173 ;;		wreg, status,2
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13183 ;;Total ram usage:        0 bytes
 13184 ;; Hardware stack levels used: 1
 13185 ;; Hardware stack levels required when called: 1
 13186 ;; This function calls:
 13187 ;;		Nothing
 13188 ;; This function is called by:
 13189 ;;		_main
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text62
 13194  005C58                     __ptext62:
 13195                           	callstack 0
 13196  005C58                     _initUSART4:
 13197                           	callstack 29
 13198  005C58                     
 13199                           ;serial.c: 8:     RC0PPS = 0x12;
 13200  005C58  0E12               	movlw	18
 13201  005C5A  010E               	movlb	14	; () banked
 13202  005C5C  6F62               	movwf	98,b	;volatile
 13203                           
 13204                           ;serial.c: 9:     RX4PPS = 0x11;
 13205  005C5E  0E11               	movlw	17
 13206  005C60  6F15               	movwf	21,b	;volatile
 13207  005C62                     
 13208                           ; BSR set to: 14
 13209                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13210  005C62  97E9               	bcf	233,3,b	;volatile
 13211  005C64                     
 13212                           ; BSR set to: 14
 13213                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13214  005C64  95E8               	bcf	232,2,b	;volatile
 13215                           
 13216                           ;serial.c: 13:     SP4BRGL = 51;
 13217  005C66  0E33               	movlw	51
 13218  005C68  6FE5               	movwf	229,b	;volatile
 13219                           
 13220                           ;serial.c: 15:     SP4BRGH = 0;
 13221  005C6A  0E00               	movlw	0
 13222  005C6C  6FE6               	movwf	230,b	;volatile
 13223  005C6E                     
 13224                           ; BSR set to: 14
 13225                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13226  005C6E  89E7               	bsf	231,4,b	;volatile
 13227  005C70                     
 13228                           ; BSR set to: 14
 13229                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13230  005C70  8BE8               	bsf	232,5,b	;volatile
 13231  005C72                     
 13232                           ; BSR set to: 14
 13233                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13234  005C72  8FE7               	bsf	231,7,b	;volatile
 13235  005C74                     
 13236                           ; BSR set to: 14
 13237  005C74  0012               	return		;funcret
 13238  005C76                     __end_of_initUSART4:
 13239                           	callstack 0
 13240                           
 13241 ;; *************** function _initDCmotors_parameter *****************
 13242 ;; Defined at:
 13243 ;;		line 37 in file "dc_motor.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13246 ;;		 -> main@motorL(9), 
 13247 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13248 ;;		 -> main@motorR(9), 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13264 ;;Total ram usage:        4 bytes
 13265 ;; Hardware stack levels used: 1
 13266 ;; Hardware stack levels required when called: 1
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		_main
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text63
 13275  004FC2                     __ptext63:
 13276                           	callstack 0
 13277  004FC2                     _initDCmotors_parameter:
 13278                           	callstack 29
 13279  004FC2                     
 13280                           ;dc_motor.c: 39:     motorL->power = 0;
 13281  004FC2  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13282  004FC6  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13283  004FCA  0E00               	movlw	0
 13284  004FCC  6EDF               	movwf	indf2,c
 13285  004FCE                     
 13286                           ;dc_motor.c: 40:     motorL->direction = 1;
 13287  004FCE  EE20 F001          	lfsr	2,1
 13288  004FD2  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13289  004FD4  26D9               	addwf	fsr2l,f,c
 13290  004FD6  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13291  004FD8  22DA               	addwfc	fsr2h,f,c
 13292  004FDA  0E01               	movlw	1
 13293  004FDC  6EDF               	movwf	indf2,c
 13294  004FDE                     
 13295                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13296  004FDE  EE20 F002          	lfsr	2,2
 13297  004FE2  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13298  004FE4  26D9               	addwf	fsr2l,f,c
 13299  004FE6  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13300  004FE8  22DA               	addwfc	fsr2h,f,c
 13301  004FEA  0EA3               	movlw	163
 13302  004FEC  6EDE               	movwf	postinc2,c
 13303  004FEE  0E0F               	movlw	15
 13304  004FF0  6EDD               	movwf	postdec2,c
 13305  004FF2                     
 13306                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13307  004FF2  EE20 F004          	lfsr	2,4
 13308  004FF6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13309  004FF8  26D9               	addwf	fsr2l,f,c
 13310  004FFA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13311  004FFC  22DA               	addwfc	fsr2h,f,c
 13312  004FFE  0E7D               	movlw	125
 13313  005000  6EDE               	movwf	postinc2,c
 13314  005002  0E0F               	movlw	15
 13315  005004  6EDD               	movwf	postdec2,c
 13316  005006                     
 13317                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13318  005006  EE20 F006          	lfsr	2,6
 13319  00500A  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13320  00500C  26D9               	addwf	fsr2l,f,c
 13321  00500E  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13322  005010  22DA               	addwfc	fsr2h,f,c
 13323  005012  0E04               	movlw	4
 13324  005014  6EDF               	movwf	indf2,c
 13325  005016                     
 13326                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13327  005016  EE20 F007          	lfsr	2,7
 13328  00501A  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13329  00501C  26D9               	addwf	fsr2l,f,c
 13330  00501E  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13331  005020  22DA               	addwfc	fsr2h,f,c
 13332  005022  0EC7               	movlw	199
 13333  005024  6EDE               	movwf	postinc2,c
 13334  005026  0E00               	movlw	0
 13335  005028  6EDD               	movwf	postdec2,c
 13336  00502A                     
 13337                           ;dc_motor.c: 47:     motorR->power = 0;
 13338  00502A  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13339  00502E  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13340  005032  0E00               	movlw	0
 13341  005034  6EDF               	movwf	indf2,c
 13342                           
 13343                           ;dc_motor.c: 48:     motorR->direction = 1;
 13344  005036  EE20 F001          	lfsr	2,1
 13345  00503A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13346  00503C  26D9               	addwf	fsr2l,f,c
 13347  00503E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13348  005040  22DA               	addwfc	fsr2h,f,c
 13349  005042  0E01               	movlw	1
 13350  005044  6EDF               	movwf	indf2,c
 13351                           
 13352                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13353  005046  EE20 F002          	lfsr	2,2
 13354  00504A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13355  00504C  26D9               	addwf	fsr2l,f,c
 13356  00504E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13357  005050  22DA               	addwfc	fsr2h,f,c
 13358  005052  0EA0               	movlw	160
 13359  005054  6EDE               	movwf	postinc2,c
 13360  005056  0E0F               	movlw	15
 13361  005058  6EDD               	movwf	postdec2,c
 13362                           
 13363                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13364  00505A  EE20 F004          	lfsr	2,4
 13365  00505E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13366  005060  26D9               	addwf	fsr2l,f,c
 13367  005062  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13368  005064  22DA               	addwfc	fsr2h,f,c
 13369  005066  0E7F               	movlw	127
 13370  005068  6EDE               	movwf	postinc2,c
 13371  00506A  0E0F               	movlw	15
 13372  00506C  6EDD               	movwf	postdec2,c
 13373                           
 13374                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13375  00506E  EE20 F006          	lfsr	2,6
 13376  005072  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13377  005074  26D9               	addwf	fsr2l,f,c
 13378  005076  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13379  005078  22DA               	addwfc	fsr2h,f,c
 13380  00507A  0E06               	movlw	6
 13381  00507C  6EDF               	movwf	indf2,c
 13382                           
 13383                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13384  00507E  EE20 F007          	lfsr	2,7
 13385  005082  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13386  005084  26D9               	addwf	fsr2l,f,c
 13387  005086  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13388  005088  22DA               	addwfc	fsr2h,f,c
 13389  00508A  0EC7               	movlw	199
 13390  00508C  6EDE               	movwf	postinc2,c
 13391  00508E  0E00               	movlw	0
 13392  005090  6EDD               	movwf	postdec2,c
 13393  005092  0012               	return		;funcret
 13394  005094                     __end_of_initDCmotors_parameter:
 13395                           	callstack 0
 13396                           
 13397 ;; *************** function _initDCmotorsPWM *****************
 13398 ;; Defined at:
 13399 ;;		line 7 in file "dc_motor.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  PWMperiod       2    0[COMRAM] int 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, status,2
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;Total ram usage:        2 bytes
 13418 ;; Hardware stack levels used: 1
 13419 ;; Hardware stack levels required when called: 1
 13420 ;; This function calls:
 13421 ;;		Nothing
 13422 ;; This function is called by:
 13423 ;;		_main
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           	psect	text64
 13428  0058F8                     __ptext64:
 13429                           	callstack 0
 13430  0058F8                     _initDCmotorsPWM:
 13431                           	callstack 29
 13432  0058F8                     
 13433                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13434  0058F8  9485               	bcf	133,2,c	;volatile
 13435                           
 13436                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13437  0058FA  9E83               	bcf	131,7,c	;volatile
 13438                           
 13439                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13440  0058FC  9C87               	bcf	135,6,c	;volatile
 13441                           
 13442                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13443  0058FE  9885               	bcf	133,4,c	;volatile
 13444                           
 13445                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13446  005900  947D               	bcf	125,2,c	;volatile
 13447                           
 13448                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13449  005902  9E7B               	bcf	123,7,c	;volatile
 13450                           
 13451                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13452  005904  9C7F               	bcf	127,6,c	;volatile
 13453                           
 13454                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13455  005906  987D               	bcf	125,4,c	;volatile
 13456  005908                     
 13457                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13458  005908  50BD               	movf	189,w,c	;volatile
 13459  00590A  0B8F               	andlw	-113
 13460  00590C  0930               	iorlw	48
 13461  00590E  6EBD               	movwf	189,c	;volatile
 13462                           
 13463                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13464  005910  0EE0               	movlw	-32
 13465  005912  16BE               	andwf	190,f,c	;volatile
 13466                           
 13467                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13468  005914  50BF               	movf	191,w,c	;volatile
 13469  005916  0BF0               	andlw	-16
 13470  005918  0901               	iorlw	1
 13471  00591A  6EBF               	movwf	191,c	;volatile
 13472                           
 13473                           ;dc_motor.c: 25:     T2PR=200-1;
 13474  00591C  0EC7               	movlw	199
 13475  00591E  6EBC               	movwf	188,c	;volatile
 13476  005920                     
 13477                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13478  005920  8EBD               	bsf	189,7,c	;volatile
 13479                           
 13480                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13481  005922  0E0A               	movlw	10
 13482  005924  010E               	movlb	14	; () banked
 13483  005926  6F74               	movwf	116,b	;volatile
 13484                           
 13485                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13486  005928  0E0B               	movlw	11
 13487  00592A  6F69               	movwf	105,b	;volatile
 13488                           
 13489                           ;dc_motor.c: 31:     PWM6DCH=0;
 13490  00592C  0E00               	movlw	0
 13491  00592E  6EA3               	movwf	163,c	;volatile
 13492                           
 13493                           ;dc_motor.c: 32:     PWM7DCH=0;
 13494  005930  0E00               	movlw	0
 13495  005932  6EA0               	movwf	160,c	;volatile
 13496  005934                     
 13497                           ; BSR set to: 14
 13498                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13499  005934  8EA4               	bsf	164,7,c	;volatile
 13500  005936                     
 13501                           ; BSR set to: 14
 13502                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13503  005936  8EA1               	bsf	161,7,c	;volatile
 13504  005938                     
 13505                           ; BSR set to: 14
 13506  005938  0012               	return		;funcret
 13507  00593A                     __end_of_initDCmotorsPWM:
 13508                           	callstack 0
 13509                           
 13510 ;; *************** function _color_click_init *****************
 13511 ;; Defined at:
 13512 ;;		line 90 in file "color.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13530 ;;Total ram usage:        1 bytes
 13531 ;; Hardware stack levels used: 1
 13532 ;; Hardware stack levels required when called: 4
 13533 ;; This function calls:
 13534 ;;		_I2C_2_Master_Init
 13535 ;;		_color_writetoaddr
 13536 ;; This function is called by:
 13537 ;;		_main
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text65
 13542  005A8E                     __ptext65:
 13543                           	callstack 0
 13544  005A8E                     _color_click_init:
 13545                           	callstack 26
 13546  005A8E                     
 13547                           ;color.c: 93:     I2C_2_Master_Init();
 13548  005A8E  EC90  F02D         	call	_I2C_2_Master_Init	;wreg free
 13549  005A92                     
 13550                           ;color.c: 95:  color_writetoaddr(0x00, 0x01);
 13551  005A92  0E01               	movlw	1
 13552  005A94  6E03               	movwf	color_writetoaddr@value^0,c
 13553  005A96  0E00               	movlw	0
 13554  005A98  EC1C  F02E         	call	_color_writetoaddr
 13555  005A9C                     
 13556                           ;color.c: 96:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13557  005A9C  0E3F               	movlw	63
 13558  005A9E  6E05               	movwf	??_color_click_init^0,c
 13559  005AA0  0E55               	movlw	85
 13560  005AA2                     u6477:
 13561  005AA2  2EE8               	decfsz	wreg,f,c
 13562  005AA4  D7FE               	bra	u6477
 13563  005AA6  2E05               	decfsz	??_color_click_init^0,f,c
 13564  005AA8  D7FC               	bra	u6477
 13565  005AAA  F000               	nop	
 13566  005AAC                     
 13567                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 13568  005AAC  0E03               	movlw	3
 13569  005AAE  6E03               	movwf	color_writetoaddr@value^0,c
 13570  005AB0  0E00               	movlw	0
 13571  005AB2  EC1C  F02E         	call	_color_writetoaddr
 13572  005AB6                     
 13573                           ;color.c: 98:  color_writetoaddr(0x01, 0xD5);
 13574  005AB6  0ED5               	movlw	213
 13575  005AB8  6E03               	movwf	color_writetoaddr@value^0,c
 13576  005ABA  0E01               	movlw	1
 13577  005ABC  EC1C  F02E         	call	_color_writetoaddr
 13578  005AC0  0012               	return		;funcret
 13579  005AC2                     __end_of_color_click_init:
 13580                           	callstack 0
 13581                           
 13582 ;; *************** function _color_writetoaddr *****************
 13583 ;; Defined at:
 13584 ;;		line 101 in file "color.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  address         1    wreg     unsigned char 
 13587 ;;  value           1    2[COMRAM] unsigned char 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  address         1    3[COMRAM] unsigned char 
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      void 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0, cstack
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13599 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13603 ;;Total ram usage:        2 bytes
 13604 ;; Hardware stack levels used: 1
 13605 ;; Hardware stack levels required when called: 3
 13606 ;; This function calls:
 13607 ;;		_I2C_2_Master_Start
 13608 ;;		_I2C_2_Master_Stop
 13609 ;;		_I2C_2_Master_Write
 13610 ;; This function is called by:
 13611 ;;		_color_click_init
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615                           	psect	text66
 13616  005C38                     __ptext66:
 13617                           	callstack 0
 13618  005C38                     _color_writetoaddr:
 13619                           	callstack 26
 13620                           
 13621                           ;incstack = 0
 13622                           ;color_writetoaddr@address stored from wreg
 13623  005C38  6E04               	movwf	color_writetoaddr@address^0,c
 13624  005C3A                     
 13625                           ;color.c: 102:     I2C_2_Master_Start();
 13626  005C3A  EC6C  F02E         	call	_I2C_2_Master_Start	;wreg free
 13627                           
 13628                           ;color.c: 103:     I2C_2_Master_Write(0x52 | 0x00);
 13629  005C3E  0E52               	movlw	82
 13630  005C40  EC56  F02E         	call	_I2C_2_Master_Write
 13631                           
 13632                           ;color.c: 104:     I2C_2_Master_Write(0x80 | address);
 13633  005C44  5004               	movf	color_writetoaddr@address^0,w,c
 13634  005C46  0980               	iorlw	128
 13635  005C48  EC56  F02E         	call	_I2C_2_Master_Write
 13636                           
 13637                           ;color.c: 105:     I2C_2_Master_Write(value);
 13638  005C4C  5003               	movf	color_writetoaddr@value^0,w,c
 13639  005C4E  EC56  F02E         	call	_I2C_2_Master_Write
 13640                           
 13641                           ;color.c: 106:     I2C_2_Master_Stop();
 13642  005C52  EC67  F02E         	call	_I2C_2_Master_Stop	;wreg free
 13643  005C56  0012               	return		;funcret
 13644  005C58                     __end_of_color_writetoaddr:
 13645                           	callstack 0
 13646                           
 13647 ;; *************** function _I2C_2_Master_Write *****************
 13648 ;; Defined at:
 13649 ;;		line 45 in file "i2c.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;  data_byte       1    wreg     unsigned char 
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;  data_byte       1    1[COMRAM] unsigned char 
 13654 ;; Return value:  Size  Location     Type
 13655 ;;                  1    wreg      void 
 13656 ;; Registers used:
 13657 ;;		wreg, status,2, status,0, cstack
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13667 ;;Total ram usage:        1 bytes
 13668 ;; Hardware stack levels used: 1
 13669 ;; Hardware stack levels required when called: 2
 13670 ;; This function calls:
 13671 ;;		_I2C_2_Master_Idle
 13672 ;; This function is called by:
 13673 ;;		_color_writetoaddr
 13674 ;;		_color_read_Red
 13675 ;;		_color_read_Blue
 13676 ;;		_color_read_Green
 13677 ;;		_color_read_Clear
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text67
 13682  005CAC                     __ptext67:
 13683                           	callstack 0
 13684  005CAC                     _I2C_2_Master_Write:
 13685                           	callstack 24
 13686                           
 13687                           ;incstack = 0
 13688                           ;I2C_2_Master_Write@data_byte stored from wreg
 13689  005CAC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13690  005CAE                     
 13691                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 13692  005CAE  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13693  005CB2                     
 13694                           ;i2c.c: 48:   SSP2BUF = data_byte;
 13695  005CB2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13696  005CB6  0012               	return		;funcret
 13697  005CB8                     __end_of_I2C_2_Master_Write:
 13698                           	callstack 0
 13699                           
 13700 ;; *************** function _I2C_2_Master_Stop *****************
 13701 ;; Defined at:
 13702 ;;		line 39 in file "i2c.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;		None
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2, status,0, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13720 ;;Total ram usage:        0 bytes
 13721 ;; Hardware stack levels used: 1
 13722 ;; Hardware stack levels required when called: 2
 13723 ;; This function calls:
 13724 ;;		_I2C_2_Master_Idle
 13725 ;; This function is called by:
 13726 ;;		_color_writetoaddr
 13727 ;;		_color_read_Red
 13728 ;;		_color_read_Blue
 13729 ;;		_color_read_Green
 13730 ;;		_color_read_Clear
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text68
 13735  005CCE                     __ptext68:
 13736                           	callstack 0
 13737  005CCE                     _I2C_2_Master_Stop:
 13738                           	callstack 24
 13739  005CCE                     
 13740                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13741  005CCE  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13742  005CD2                     
 13743                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 13744  005CD2  010E               	movlb	14	; () banked
 13745  005CD4  85DA               	bsf	218,2,b	;volatile
 13746  005CD6                     
 13747                           ; BSR set to: 14
 13748  005CD6  0012               	return		;funcret
 13749  005CD8                     __end_of_I2C_2_Master_Stop:
 13750                           	callstack 0
 13751                           
 13752 ;; *************** function _I2C_2_Master_Start *****************
 13753 ;; Defined at:
 13754 ;;		line 27 in file "i2c.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;		None
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;		None
 13759 ;; Return value:  Size  Location     Type
 13760 ;;                  1    wreg      void 
 13761 ;; Registers used:
 13762 ;;		wreg, status,2, status,0, cstack
 13763 ;; Tracked objects:
 13764 ;;		On entry : 0/0
 13765 ;;		On exit  : 0/0
 13766 ;;		Unchanged: 0/0
 13767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13772 ;;Total ram usage:        0 bytes
 13773 ;; Hardware stack levels used: 1
 13774 ;; Hardware stack levels required when called: 2
 13775 ;; This function calls:
 13776 ;;		_I2C_2_Master_Idle
 13777 ;; This function is called by:
 13778 ;;		_color_writetoaddr
 13779 ;;		_color_read_Red
 13780 ;;		_color_read_Blue
 13781 ;;		_color_read_Green
 13782 ;;		_color_read_Clear
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text69
 13787  005CD8                     __ptext69:
 13788                           	callstack 0
 13789  005CD8                     _I2C_2_Master_Start:
 13790                           	callstack 24
 13791  005CD8                     
 13792                           ;i2c.c: 29:   I2C_2_Master_Idle();
 13793  005CD8  ECA5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13794  005CDC                     
 13795                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 13796  005CDC  010E               	movlb	14	; () banked
 13797  005CDE  81DA               	bsf	218,0,b	;volatile
 13798  005CE0                     
 13799                           ; BSR set to: 14
 13800  005CE0  0012               	return		;funcret
 13801  005CE2                     __end_of_I2C_2_Master_Start:
 13802                           	callstack 0
 13803                           
 13804 ;; *************** function _I2C_2_Master_Idle *****************
 13805 ;; Defined at:
 13806 ;;		line 22 in file "i2c.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;		None
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;		None
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1    wreg      void 
 13813 ;; Registers used:
 13814 ;;		wreg, status,2, status,0
 13815 ;; Tracked objects:
 13816 ;;		On entry : 0/0
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13824 ;;Total ram usage:        1 bytes
 13825 ;; Hardware stack levels used: 1
 13826 ;; Hardware stack levels required when called: 1
 13827 ;; This function calls:
 13828 ;;		Nothing
 13829 ;; This function is called by:
 13830 ;;		_I2C_2_Master_Start
 13831 ;;		_I2C_2_Master_RepStart
 13832 ;;		_I2C_2_Master_Stop
 13833 ;;		_I2C_2_Master_Write
 13834 ;;		_I2C_2_Master_Read
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text70
 13839  005B4A                     __ptext70:
 13840                           	callstack 0
 13841  005B4A                     _I2C_2_Master_Idle:
 13842                           	callstack 24
 13843  005B4A                     l182:
 13844  005B4A  010E               	movlb	14	; () banked
 13845  005B4C  B5D8               	btfsc	216,2,b	;volatile
 13846  005B4E  EFAB  F02D         	goto	u3381
 13847  005B52  EFAD  F02D         	goto	u3380
 13848  005B56                     u3381:
 13849  005B56  EFA5  F02D         	goto	l182
 13850  005B5A                     u3380:
 13851  005B5A                     
 13852                           ; BSR set to: 14
 13853  005B5A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 13854  005B5E  0E1F               	movlw	31
 13855  005B60  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 13856  005B62  A4D8               	btfss	status,2,c
 13857  005B64  EFB6  F02D         	goto	u3391
 13858  005B68  EFB8  F02D         	goto	u3390
 13859  005B6C                     u3391:
 13860  005B6C  EFA5  F02D         	goto	l182
 13861  005B70                     u3390:
 13862  005B70                     
 13863                           ; BSR set to: 14
 13864  005B70  0012               	return		;funcret
 13865  005B72                     __end_of_I2C_2_Master_Idle:
 13866                           	callstack 0
 13867                           
 13868 ;; *************** function _I2C_2_Master_Init *****************
 13869 ;; Defined at:
 13870 ;;		line 4 in file "i2c.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;		None
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;		None
 13875 ;; Return value:  Size  Location     Type
 13876 ;;                  1    wreg      void 
 13877 ;; Registers used:
 13878 ;;		wreg, status,2
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13888 ;;Total ram usage:        0 bytes
 13889 ;; Hardware stack levels used: 1
 13890 ;; Hardware stack levels required when called: 1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_color_click_init
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           	psect	text71
 13899  005B20                     __ptext71:
 13900                           	callstack 0
 13901  005B20                     _I2C_2_Master_Init:
 13902                           	callstack 28
 13903  005B20                     
 13904                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 13905  005B20  010E               	movlb	14	; () banked
 13906  005B22  51D9               	movf	217,w,b	;volatile
 13907  005B24  0BF0               	andlw	-16
 13908  005B26  0908               	iorlw	8
 13909  005B28  6FD9               	movwf	217,b	;volatile
 13910  005B2A                     
 13911                           ; BSR set to: 14
 13912                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 13913  005B2A  8BD9               	bsf	217,5,b	;volatile
 13914                           
 13915                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 13916  005B2C  0E9F               	movlw	159
 13917  005B2E  6FD6               	movwf	214,b	;volatile
 13918  005B30                     
 13919                           ; BSR set to: 14
 13920                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 13921  005B30  8A84               	bsf	132,5,c	;volatile
 13922  005B32                     
 13923                           ; BSR set to: 14
 13924                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 13925  005B32  8C84               	bsf	132,6,c	;volatile
 13926  005B34                     
 13927                           ; BSR set to: 14
 13928                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 13929  005B34  9BA7               	bcf	167,5,b	;volatile
 13930  005B36                     
 13931                           ; BSR set to: 14
 13932                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 13933  005B36  9DA7               	bcf	167,6,b	;volatile
 13934                           
 13935                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 13936  005B38  0E1D               	movlw	29
 13937  005B3A  6F1D               	movwf	29,b	;volatile
 13938                           
 13939                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 13940  005B3C  0E1E               	movlw	30
 13941  005B3E  6F1C               	movwf	28,b	;volatile
 13942                           
 13943                           ;i2c.c: 18:   RD5PPS=0x1C;
 13944  005B40  0E1C               	movlw	28
 13945  005B42  6F6F               	movwf	111,b	;volatile
 13946                           
 13947                           ;i2c.c: 19:   RD6PPS=0x1B;
 13948  005B44  0E1B               	movlw	27
 13949  005B46  6F70               	movwf	112,b	;volatile
 13950  005B48                     
 13951                           ; BSR set to: 14
 13952  005B48  0012               	return		;funcret
 13953  005B4A                     __end_of_I2C_2_Master_Init:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _Timer0_init *****************
 13957 ;; Defined at:
 13958 ;;		line 7 in file "timers.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      void 
 13965 ;; Registers used:
 13966 ;;		wreg, status,2
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13976 ;;Total ram usage:        0 bytes
 13977 ;; Hardware stack levels used: 1
 13978 ;; Hardware stack levels required when called: 1
 13979 ;; This function calls:
 13980 ;;		Nothing
 13981 ;; This function is called by:
 13982 ;;		_main
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986                           	psect	text72
 13987  005C76                     __ptext72:
 13988                           	callstack 0
 13989  005C76                     _Timer0_init:
 13990                           	callstack 29
 13991  005C76                     
 13992                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13993  005C76  50D6               	movf	214,w,c	;volatile
 13994  005C78  0B1F               	andlw	-225
 13995  005C7A  0940               	iorlw	64
 13996  005C7C  6ED6               	movwf	214,c	;volatile
 13997  005C7E                     
 13998                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13999  005C7E  88D6               	bsf	214,4,c	;volatile
 14000                           
 14001                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14002  005C80  50D6               	movf	214,w,c	;volatile
 14003  005C82  0BF0               	andlw	-16
 14004  005C84  0905               	iorlw	5
 14005  005C86  6ED6               	movwf	214,c	;volatile
 14006  005C88                     
 14007                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14008  005C88  88D5               	bsf	213,4,c	;volatile
 14009                           
 14010                           ;timers.c: 16:     TMR0H=0b00111100;
 14011  005C8A  0E3C               	movlw	60
 14012  005C8C  6ED4               	movwf	212,c	;volatile
 14013                           
 14014                           ;timers.c: 17:     TMR0L=0b10101111;
 14015  005C8E  0EAF               	movlw	175
 14016  005C90  6ED3               	movwf	211,c	;volatile
 14017  005C92  0012               	return		;funcret
 14018  005C94                     __end_of_Timer0_init:
 14019                           	callstack 0
 14020                           
 14021 ;; *************** function _Interrupts_init *****************
 14022 ;; Defined at:
 14023 ;;		line 9 in file "interrupts.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;		None
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;		None
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  1    wreg      void 
 14030 ;; Registers used:
 14031 ;;		None
 14032 ;; Tracked objects:
 14033 ;;		On entry : 0/0
 14034 ;;		On exit  : 0/0
 14035 ;;		Unchanged: 0/0
 14036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14041 ;;Total ram usage:        0 bytes
 14042 ;; Hardware stack levels used: 1
 14043 ;; Hardware stack levels required when called: 1
 14044 ;; This function calls:
 14045 ;;		Nothing
 14046 ;; This function is called by:
 14047 ;;		_main
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           
 14051                           	psect	text73
 14052  005CB8                     __ptext73:
 14053                           	callstack 0
 14054  005CB8                     _Interrupts_init:
 14055                           	callstack 29
 14056  005CB8  8EF2               	bsf	242,7,c	;volatile
 14057                           
 14058                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14059  005CBA  8AF2               	bsf	242,5,c	;volatile
 14060                           
 14061                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14062  005CBC  8CF2               	bsf	242,6,c	;volatile
 14063                           
 14064                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14065  005CBE  010E               	movlb	14	; () banked
 14066  005CC0  8B29               	bsf	41,5,b	;volatile
 14067  005CC2                     
 14068                           ; BSR set to: 14
 14069  005CC2  0012               	return		;funcret
 14070  005CC4                     __end_of_Interrupts_init:
 14071                           	callstack 0
 14072                           
 14073 ;; *************** function _HighISR *****************
 14074 ;; Defined at:
 14075 ;;		line 21 in file "interrupts.c"
 14076 ;; Parameters:    Size  Location     Type
 14077 ;;		None
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;		None
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  1    wreg      void 
 14082 ;; Registers used:
 14083 ;;		wreg, status,2, status,0
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14093 ;;Total ram usage:        0 bytes
 14094 ;; Hardware stack levels used: 1
 14095 ;; This function calls:
 14096 ;;		Nothing
 14097 ;; This function is called by:
 14098 ;;		Interrupt level 2
 14099 ;; This function uses a non-reentrant model
 14100 ;;
 14101                           
 14102                           	psect	intcode
 14103  000008                     __pintcode:
 14104                           	callstack 0
 14105  000008                     _HighISR:
 14106                           	callstack 19
 14107                           
 14108                           ; BSR set to: 14
 14109                           ;incstack = 0
 14110  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14111  00000A                     
 14112                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14113  00000A  010E               	movlb	14	; () banked
 14114  00000C  AB33               	btfss	51,5,b	;volatile
 14115  00000E  EF0B  F000         	goto	i2u583_41
 14116  000012  EF0D  F000         	goto	i2u583_40
 14117  000016                     i2u583_41:
 14118  000016  EF16  F000         	goto	i2l505
 14119  00001A                     i2u583_40:
 14120  00001A                     
 14121                           ; BSR set to: 14
 14122                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14123  00001A  0E3C               	movlw	60
 14124  00001C  6ED4               	movwf	212,c	;volatile
 14125                           
 14126                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14127  00001E  0EAF               	movlw	175
 14128  000020  6ED3               	movwf	211,c	;volatile
 14129  000022                     
 14130                           ; BSR set to: 14
 14131                           ;interrupts.c: 26:         centisecond ++;
 14132  000022  0101               	movlb	1	; () banked
 14133  000024  4B7A               	infsnz	_centisecond& (0+255),f,b
 14134  000026  2B7B               	incf	(_centisecond+1)& (0+255),f,b
 14135  000028                     
 14136                           ; BSR set to: 1
 14137                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14138  000028  010E               	movlb	14	; () banked
 14139  00002A  9B33               	bcf	51,5,b	;volatile
 14140  00002C                     i2l505:
 14141                           
 14142                           ; BSR set to: 14
 14143  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14144  00002E  0011               	retfie		f
 14145  000030                     __end_of_HighISR:
 14146                           	callstack 0
 14147                           
 14148                           	psect	rparam
 14149  0000                     
 14150                           	psect	temp
 14151  00005F                     btemp:
 14152                           	callstack 0
 14153  00005F                     	ds	1
 14154  0000                     int$flags	set	btemp
 14155  0000                     wtemp8	set	btemp+1
 14156  0000                     ttemp5	set	btemp+1
 14157  0000                     ttemp6	set	btemp+4
 14158  0000                     ttemp7	set	btemp+8
 14159                           
 14160                           	psect	idloc
 14161                           
 14162                           ;Config register IDLOC0 @ 0x200000
 14163                           ;	unspecified, using default values
 14164  200000                     	org	2097152
 14165  200000  0FFF               	dw	4095
 14166                           
 14167                           ;Config register IDLOC1 @ 0x200002
 14168                           ;	unspecified, using default values
 14169  200002                     	org	2097154
 14170  200002  0FFF               	dw	4095
 14171                           
 14172                           ;Config register IDLOC2 @ 0x200004
 14173                           ;	unspecified, using default values
 14174  200004                     	org	2097156
 14175  200004  0FFF               	dw	4095
 14176                           
 14177                           ;Config register IDLOC3 @ 0x200006
 14178                           ;	unspecified, using default values
 14179  200006                     	org	2097158
 14180  200006  0FFF               	dw	4095
 14181                           
 14182                           ;Config register IDLOC4 @ 0x200008
 14183                           ;	unspecified, using default values
 14184  200008                     	org	2097160
 14185  200008  0FFF               	dw	4095
 14186                           
 14187                           ;Config register IDLOC5 @ 0x20000A
 14188                           ;	unspecified, using default values
 14189  20000A                     	org	2097162
 14190  20000A  0FFF               	dw	4095
 14191                           
 14192                           ;Config register IDLOC6 @ 0x20000C
 14193                           ;	unspecified, using default values
 14194  20000C                     	org	2097164
 14195  20000C  0FFF               	dw	4095
 14196                           
 14197                           ;Config register IDLOC7 @ 0x20000E
 14198                           ;	unspecified, using default values
 14199  20000E                     	org	2097166
 14200  20000E  0FFF               	dw	4095
 14201                           
 14202                           	psect	config
 14203                           
 14204                           ;Config register CONFIG1L @ 0x300000
 14205                           ;	External Oscillator mode Selection bits
 14206                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14207                           ;	Power-up default value for COSC bits
 14208                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14209  300000                     	org	3145728
 14210  300000  AA                 	db	170
 14211                           
 14212                           ;Config register CONFIG1H @ 0x300001
 14213                           ;	unspecified, using default values
 14214                           ;	Clock Out Enable bit
 14215                           ;	CLKOUTEN = 0x1, unprogrammed default
 14216                           ;	Clock Switch Enable bit
 14217                           ;	CSWEN = 0x1, unprogrammed default
 14218                           ;	Fail-Safe Clock Monitor Enable bit
 14219                           ;	FCMEN = 0x1, unprogrammed default
 14220  300001                     	org	3145729
 14221  300001  FF                 	db	255
 14222                           
 14223                           ;Config register CONFIG2L @ 0x300002
 14224                           ;	unspecified, using default values
 14225                           ;	Master Clear Enable bit
 14226                           ;	MCLRE = 0x1, unprogrammed default
 14227                           ;	Power-up Timer Enable bit
 14228                           ;	PWRTE = 0x1, unprogrammed default
 14229                           ;	Low-power BOR enable bit
 14230                           ;	LPBOREN = 0x1, unprogrammed default
 14231                           ;	Brown-out Reset Enable bits
 14232                           ;	BOREN = 0x3, unprogrammed default
 14233  300002                     	org	3145730
 14234  300002  FF                 	db	255
 14235                           
 14236                           ;Config register CONFIG2H @ 0x300003
 14237                           ;	unspecified, using default values
 14238                           ;	Brown Out Reset Voltage selection bits
 14239                           ;	BORV = 0x3, unprogrammed default
 14240                           ;	ZCD Disable bit
 14241                           ;	ZCD = 0x1, unprogrammed default
 14242                           ;	PPSLOCK bit One-Way Set Enable bit
 14243                           ;	PPS1WAY = 0x1, unprogrammed default
 14244                           ;	Stack Full/Underflow Reset Enable bit
 14245                           ;	STVREN = 0x1, unprogrammed default
 14246                           ;	Debugger Enable bit
 14247                           ;	DEBUG = 0x1, unprogrammed default
 14248                           ;	Extended Instruction Set Enable bit
 14249                           ;	XINST = 0x1, unprogrammed default
 14250  300003                     	org	3145731
 14251  300003  FF                 	db	255
 14252                           
 14253                           ;Config register CONFIG3L @ 0x300004
 14254                           ;	WDT Period Select bits
 14255                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14256                           ;	WDT operating mode
 14257                           ;	WDTE = OFF, WDT Disabled
 14258  300004                     	org	3145732
 14259  300004  9F                 	db	159
 14260                           
 14261                           ;Config register CONFIG3H @ 0x300005
 14262                           ;	unspecified, using default values
 14263                           ;	WDT Window Select bits
 14264                           ;	WDTCWS = 0x7, unprogrammed default
 14265                           ;	WDT input clock selector
 14266                           ;	WDTCCS = 0x7, unprogrammed default
 14267  300005                     	org	3145733
 14268  300005  FF                 	db	255
 14269                           
 14270                           ;Config register CONFIG4L @ 0x300006
 14271                           ;	unspecified, using default values
 14272                           ;	Write Protection Block 0
 14273                           ;	WRT0 = 0x1, unprogrammed default
 14274                           ;	Write Protection Block 1
 14275                           ;	WRT1 = 0x1, unprogrammed default
 14276                           ;	Write Protection Block 2
 14277                           ;	WRT2 = 0x1, unprogrammed default
 14278                           ;	Write Protection Block 3
 14279                           ;	WRT3 = 0x1, unprogrammed default
 14280                           ;	Write Protection Block 3
 14281                           ;	WRT4 = 0x1, unprogrammed default
 14282                           ;	Write Protection Block 3
 14283                           ;	WRT5 = 0x1, unprogrammed default
 14284                           ;	Write Protection Block 3
 14285                           ;	WRT6 = 0x1, unprogrammed default
 14286                           ;	Write Protection Block 3
 14287                           ;	WRT7 = 0x1, unprogrammed default
 14288  300006                     	org	3145734
 14289  300006  FF                 	db	255
 14290                           
 14291                           ;Config register CONFIG4H @ 0x300007
 14292                           ;	unspecified, using default values
 14293                           ;	Configuration Register Write Protection bit
 14294                           ;	WRTC = 0x1, unprogrammed default
 14295                           ;	Boot Block Write Protection bit
 14296                           ;	WRTB = 0x1, unprogrammed default
 14297                           ;	Data EEPROM Write Protection bit
 14298                           ;	WRTD = 0x1, unprogrammed default
 14299                           ;	Scanner Enable bit
 14300                           ;	SCANE = 0x1, unprogrammed default
 14301                           ;	Low Voltage Programming Enable bit
 14302                           ;	LVP = 0x1, unprogrammed default
 14303  300007                     	org	3145735
 14304  300007  FF                 	db	255
 14305                           
 14306                           ;Config register CONFIG5L @ 0x300008
 14307                           ;	unspecified, using default values
 14308                           ;	UserNVM Program Memory Code Protection bit
 14309                           ;	CP = 0x1, unprogrammed default
 14310                           ;	DataNVM Memory Code Protection bit
 14311                           ;	CPD = 0x1, unprogrammed default
 14312  300008                     	org	3145736
 14313  300008  FF                 	db	255
 14314                           
 14315                           ;Config register CONFIG5H @ 0x300009
 14316                           ;	unspecified, using default values
 14317  300009                     	org	3145737
 14318  300009  FF                 	db	255
 14319                           
 14320                           ;Config register CONFIG6L @ 0x30000A
 14321                           ;	unspecified, using default values
 14322                           ;	Table Read Protection Block 0
 14323                           ;	EBTR0 = 0x1, unprogrammed default
 14324                           ;	Table Read Protection Block 1
 14325                           ;	EBTR1 = 0x1, unprogrammed default
 14326                           ;	Table Read Protection Block 2
 14327                           ;	EBTR2 = 0x1, unprogrammed default
 14328                           ;	Table Read Protection Block 3
 14329                           ;	EBTR3 = 0x1, unprogrammed default
 14330                           ;	Table Read Protection Block 4
 14331                           ;	EBTR4 = 0x1, unprogrammed default
 14332                           ;	Table Read Protection Block 5
 14333                           ;	EBTR5 = 0x1, unprogrammed default
 14334                           ;	Table Read Protection Block 6
 14335                           ;	EBTR6 = 0x1, unprogrammed default
 14336                           ;	Table Read Protection Block 7
 14337                           ;	EBTR7 = 0x1, unprogrammed default
 14338  30000A                     	org	3145738
 14339  30000A  FF                 	db	255
 14340                           
 14341                           ;Config register CONFIG6H @ 0x30000B
 14342                           ;	unspecified, using default values
 14343                           ;	Boot Block Table Read Protection bit
 14344                           ;	EBTRB = 0x1, unprogrammed default
 14345  30000B                     	org	3145739
 14346  30000B  FF                 	db	255
 14347                           tosu	equ	0xFFF
 14348                           tosh	equ	0xFFE
 14349                           tosl	equ	0xFFD
 14350                           stkptr	equ	0xFFC
 14351                           pclatu	equ	0xFFB
 14352                           pclath	equ	0xFFA
 14353                           pcl	equ	0xFF9
 14354                           tblptru	equ	0xFF8
 14355                           tblptrh	equ	0xFF7
 14356                           tblptrl	equ	0xFF6
 14357                           tablat	equ	0xFF5
 14358                           prodh	equ	0xFF4
 14359                           prodl	equ	0xFF3
 14360                           indf0	equ	0xFEF
 14361                           postinc0	equ	0xFEE
 14362                           postdec0	equ	0xFED
 14363                           preinc0	equ	0xFEC
 14364                           plusw0	equ	0xFEB
 14365                           fsr0h	equ	0xFEA
 14366                           fsr0l	equ	0xFE9
 14367                           wreg	equ	0xFE8
 14368                           indf1	equ	0xFE7
 14369                           postinc1	equ	0xFE6
 14370                           postdec1	equ	0xFE5
 14371                           preinc1	equ	0xFE4
 14372                           plusw1	equ	0xFE3
 14373                           fsr1h	equ	0xFE2
 14374                           fsr1l	equ	0xFE1
 14375                           bsr	equ	0xFE0
 14376                           indf2	equ	0xFDF
 14377                           postinc2	equ	0xFDE
 14378                           postdec2	equ	0xFDD
 14379                           preinc2	equ	0xFDC
 14380                           plusw2	equ	0xFDB
 14381                           fsr2h	equ	0xFDA
 14382                           fsr2l	equ	0xFD9
 14383                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    148     158
    BANK1           256     70     228
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2519$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2519$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    S422DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S422DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_detect_color
    _verify_color->_detect_color
    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _test_function->_detect_color
    _detect_wall->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _setup->_amb_light_measure
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  341969
                                            144 BANK0      4     4      0
                                              0 BANK1     70    70      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                         9     5      4   26377
                                             25 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  126656
                                            128 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         17    11      6   21327
                                             79 COMRAM     8     2      6
                                              0 BANK0      9     9      0
                              _LED_C
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26091
                                             86 COMRAM     8     4      4
                                              0 BANK0     25    25      0
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             79 COMRAM     7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                                6     4      2   15767
                                             89 COMRAM     4     2      2
                                            126 BANK0      2     2      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7421
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   40506
                                             91 COMRAM     2     2      0
                                              0 BANK0     10     2      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             50 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             44 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   12033
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   12    10      2   18434
                                             79 COMRAM    12    10      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12868
                                             75 COMRAM     4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             39 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             65 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _toggle_light
   _detect_wall
     _LED_C
     ___fldiv
     ___flmul
     ___xxtofl
     _color_read_Clear
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      E4       7       89.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9E       5       98.8%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRhhlllh     11      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BITBIGSFRlhlhh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E0      56        0.0%
DATA                 0      0     1E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 17 16:33:07 2022

                _color_read_Red 5668                    ___fldiv@aexp 0040                    ___fldiv@bexp 003F  
                  ___fldiv@sign 0038                 _color_read_Blue 5708                   _color_predict 5AF2  
                            l55 5A8C                              l72 5C56                              l81 5706  
                            l66 3638                              l58 3626                              l90 5BD6  
                            l75 56B6                              l84 57A6                              l69 5AC0  
                            l93 5BB6                              l78 5756                              l87 5614  
                            l96 5C36                              l99 5C16                    ___awdiv@sign 000C  
              _detect_wall$2932 0060             ___wmul@multiplicand 0003                _color_read_Clear 5758  
              _color_read_Green 56B8               ??_Interrupts_init 0001                             l102 5BF6  
                           l200 58F6                             l105 59E8                             l106 59EA  
                           l132 5B1E                             l140 4BEC                             l126 19E2  
                           l135 3A56                             l151 4FBE                             l152 4FC0  
                           l144 54E4                             l129 5554                             l305 4740  
                           l250 5092                             l148 4ADE                             l340 5CAA  
                           l405 36FA                             l182 5B4A                             l247 5938  
                           l191 5CCC                             l328 5C74                             l600 4DF8  
                           l185 5B70                             l257 3C2A                             l265 5468  
                           l601 4E62                             l441 58B4                             l337 5C96  
                           l194 5CD6                             l282 42D0                             l274 4208  
                           l346 5AF0                             l179 5B48                             l516 5C92  
                           l188 5CE0                             l612 5B96                             l604 4ECC  
                           l197 5CB6                             l453 30A8                             l294 52E6  
                           l286 4300                             l606 4E98                             l470 29DE  
                           l462 29E2                             l480 2A1E                             l609 4EE4  
                           l561 4796                             l570 483E                             l563 47A4  
                           l476 2A10                             l573 4894                             l557 4754  
                           l726 4488                             l567 47E4                             l559 4762  
                           l578 49C2                             l499 5CC2                             l843 53AA  
                           l739 45EC                             l909 4CF2                             l882 4DF6  
                           l877 4DB0                             l886 5A22               verify_color@color 0081  
              ?_calibrate_white 000C                             _abs 593A                             _pad 515E  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                 __end_of_LED_OFF 5BD8                    ___fltol@exp1 004B  
                          ?_abs 0013                            l1140 1BD2                            l1205 2C5E  
                          l1141 1BC0                            l1230 22CC                            l1142 1B86  
                          l1207 2CD6                            l1208 2CC4                            l1233 215E  
                          l1226 1F68                            l1322 51A4                            l1243 228E  
                          l1235 21D6                            l1236 21C4                            l1157 1CEC  
                          l1149 1EA2                            l1405 267A                            l1325 51E6  
                          l1333 314A                            l1270 4150                            l1166 1DBC  
                          l1182 57EC                            l1167 1DAA                            l1327 5222  
                          l1335 3152                            l4000 1FF8                            l1360 3F9C  
                          l1281 40E8                            l1353 338C                            l1194 2DB8  
                          l1274 408C                            l4010 203A                            l4002 2004  
                          l1418 5A58                            l1267 3FF4                            l1371 5970  
                          l1196 2C18                            l4100 4DEE                            l4020 209C  
                          l4012 204A                            l4004 2012                            l4102 4DF4  
                          l4030 2144                            l4022 20B8                            l4014 2064  
                          l4006 201E                            l4110 5A12                            l1374 5978  
                          l1366 55AE                            l1199 2BDC                            l1367 55B6  
                          l1295 5666                            l4040 2180                            l4032 214E  
                          l4024 20E2                            l4016 2074                            l4008 202E  
                          l1288 59B2                            l4200 427E                            l5000 4E70  
                          l3400 5810                            l4120 5592                            l4050 21F2  
                          l4042 218E                            l4034 215C                            l4026 2118  
                          l4018 2090                            l4106 59EC                            l4130 574E  
                          l4122 5668                            l4210 42CC                            l4202 428A  
                          l5010 4EBE                            l5002 4E86                            l1386 515C  
                          l1394 5830                            l3402 5A24                            l4114 5556  
                          l5020 5A9C                            l4140 5758                            l4060 225C  
                          l4052 2200                            l4044 21BC                            l4036 216E  
                          l4028 2126                            l4108 5A02                            l4300 24CC  
                          l4124 56AE                            l4220 5248                            l4204 4298  
                          l5012 4ED0                            l5100 477E                            l3420 4338  
                          l3412 4302                            l3404 5A30                            l3500 519C  
                          l4116 555E                            l1397 5CE4                            l5022 5AAC  
                          l5014 5A5A                            l4142 579E                            l4070 22B2  
                          l4062 2276                            l4054 222A                            l4038 217C  
                          l4310 2646                            l4302 2538                            l4134 56B8  
                          l4230 529C                            l4222 5260                            l4206 42B0  
                          l4214 42EC                            l5006 4EA6                            l5110 480A  
                          l5102 47B2                            l3430 4394                            l3422 4346  
                          l3414 4306                            l3406 5A34                            l3510 520A  
                          l3502 51B0                            l4118 556C                            l4150 5630  
                          l5030 54A4                            l5024 5AB6                            l5016 5A8E  
                          l4240 4C04                            l4064 2292                            l4072 22B8  
                          l4048 21E6                            l4056 222E                            l4080 57B8  
                          l4312 266A                            l4304 256A                            l4320 33AC  
                          l4128 5708                            l4136 56FE                            l3520 5B8E  
                          l4232 52A8                            l4224 526C                            l4208 42BC  
                          l4216 42EE                            l5008 4EA8                            l5120 4862  
                          l5104 47C6                            l5112 4822                            l4160 5AC6  
                          l3440 43FE                            l3432 439C                            l3424 4366  
                          l3416 4314                            l3408 5A4C                            l3504 51C4  
                          l3600 3226                            l4152 5638                            l4400 5AF6  
                          l5200 2E2A                            l5040 54E2                            l5032 54BC  
                          l5018 5A92                            l5050 5934                            l4250 4C54  
                          l4090 4D60                            l4074 22BC                            l4066 22A2  
                          l4058 2248                            l4306 25D6                            l4330 344E  
                          l4322 33CC                            l3530 5302                            l4226 5284  
                          l4234 52B6                            l4218 5224                            l4170 417E  
                          l5122 4870                            l5114 4830                            l5106 47C8  
                          l4162 5AD4                            l3450 4448                            l3442 441E  
                          l3434 43B0                            l3426 436A                            l3418 4334  
                          l3514 593A                            l3506 51C8                            l3610 32F6  
                          l3602 328A                            l4154 5654                            l4146 5616  
                          l4402 5B12                            l5130 3C30                            l4410 4636  
                          l5210 2E8E                            l5202 2E2C                            l5034 54DC  
                          l5026 546E                            l5052 5936                            l5044 58F8  
                          l5060 4FF2                            l4500 2B12                            l4260 4C7E  
                          l4252 4C58                            l4244 4C18                            l4092 4D70  
                          l4084 4CF4                            l4068 22B0                            l3700 1AF0  
                          l4308 260A                            l4340 34EC                            l4332 3466  
                          l4324 33E4                            l4316 3390                            l3540 5328  
                          l3532 5306                            l3524 52E8                            l4236 52CE  
                          l4228 5290                            l4180 41C2                            l5124 4874  
                          l5116 484C                            l5108 47E6                            l4164 5AD8  
                          l3452 4468                            l3444 4420                            l3436 43BE  
                          l3428 4376                            l3460 449C                            l3516 5954  
                          l3380 5094                            l3508 51F6                            l3620 3340  
                          l3604 32A4                            l3612 3306                            l4148 5628  
                          l5140 3C88                            l5132 3C42                            l4412 464E  
                          l4420 4682                            l4404 45EE                            l5220 2F02  
                          l5212 2EA0                            l5204 2E3E                            l5028 5486  
                          l5300 3770                            l3630 5B4A                            l5046 5908  
                          l5062 5006                            l5054 4FC2                            l5070 5C62  
                          l4510 2B42                            l4502 2B1A                            l4270 4CA6  
                          l4262 4C88                            l4254 4C66                            l4246 4C42  
                          l4238 4BEE                            l4094 4D7E                            l4086 4D22  
                          l3710 1B04                            l3702 1AF4                            l4078 57A8  
                          l4350 35A6                            l4342 3528                            l4334 349E  
                          l4326 341C                            l4318 339C                            l3550 535E  
                          l3542 533A                            l3534 5314                            l3526 52EC  
                          l3518 5B72                            l4190 422C                            l4174 4192  
                          l4182 41D0                            l4166 4152                            l5126 488C  
                          l5118 4860                            l4158 5AC2                            l3446 4432  
                          l3438 43D0                            l3470 450C                            l3462 44BC  
                          l3390 5116                            l3382 50A6                            l3622 334C  
                          l3614 3318                            l3606 32C2                            l5150 3CCA  
                          l5142 3C9A                            l5134 3C54                            l4430 46EA  
                          l4422 469A                            l4414 465A                            l4406 4612  
                          l5230 2F98                            l5222 2F36                            l5214 2ED4  
                          l5206 2E72                            l5310 37B2                            l5302 3774  
                          l5080 5C76                            l3632 5B5A                            l5048 5920  
                          l5064 5016                            l5056 4FCE                            l5072 5C64  
                          l4520 2B80                            l4512 2B42                            l4504 2B1E  
                          l4600 3FBE                            l4272 4CB2                            l4264 4C92  
                          l4248 4C44                            l4096 4D90                            l4088 4D32  
                          l3800 1D56                            l3720 1B18                            l3712 1B08  
                          l3704 1AF8                            l4352 35B8                            l4344 353A  
                          l4336 34B0                            l4328 342E                            l3552 5374  
                          l3544 5342                            l3560 538A                            l3536 531C  
                          l3528 52FA                            l3640 3B1C                            l4184 41E8  
                          l4176 41AA                            l4192 4244                            l4168 415E  
                          l4440 48AA                            l3448 4438                            l3480 4584  
                          l3472 4514                            l3464 44C0                            l3456 448A  
                          l3384 50B8                            l3624 3354                            l3616 3328  
                          l3608 32DC                            l4360 55B8                            l5160 3D0E  
                          l5152 3CE2                            l5144 3C9E                            l5136 3C60  
                          l4432 4702                            l4424 46B2                            l4416 4666  
                          l4408 462A                            l5240 3014                            l5232 2FB2  
                          l5224 2F50                            l5216 2EEE                            l5208 2E8C  
                          l5320 3826                            l5312 37CC                            l5304 3784  
                          l5082 5C7E                            l5066 502A                            l5058 4FDE  
                          l5074 5C6E                            l4370 5C18                            l4530 2BCC  
                          l4522 2B90                            l4610 4036                            l4602 4004  
                          l4274 4CC2                            l4098 4D9E                            l3810 1D7E  
                          l3802 1D5A                            l3730 1B52                            l3722 1B1C  
                          l3714 1B0C                            l3706 1AFC                            l3650 19F0  
                          l4290 2386                            l4282 22CE                            l4354 35D6  
                          l4346 3558                            l4338 34D4                            l4362 5BB8  
                          l3562 539A                            l3554 537C                            l3546 534A  
                          l3538 5320                            l3642 3B3C                            l3634 3A58  
                          l4186 41F4                            l4178 41B6                            l4450 4952  
                          l4442 48C2                            l5090 474C                            l3482 4596  
                          l3474 4528                            l3466 44CE                            l3458 448E  
                          l3386 50C2                            l3394 57EE                            l3618 332E  
                          l3626 3364                            l3570 30CA                            l5170 3D46  
                          l5162 3D1A                            l5154 3CEE                            l5146 3CAA  
                          l5138 3C74                            l4434 4714                            l4426 46C2  
                          l4418 4672                            l5250 3078                            l5242 3016  
                          l5234 2FB4                            l5226 2F52                            l5218 2EF0  
                          l5322 383C                            l5314 37E0                            l5306 3798  
                          l5084 5C88                            l3900 5CCE                            l5076 5C70  
                          l5068 5C58                            l4372 5C1E                            l4540 2C16  
                          l4532 2BDA                            l4524 2BA0                            l4516 2B56  
                          l4508 2B32                            l4460 2A2C                            l4620 40BE  
                          l4612 4042                            l4604 401A                            l4276 4CD2  
                          l3820 1DD8                            l3812 1D8C                            l3804 1D6A  
                          l3740 1BA4                            l3732 1B6E                            l3724 1B20  
                          l3716 1B10                            l3708 1B00                            l3660 1A30  
                          l3652 19FE                            l4292 23AA                            l4284 22EE  
                          l4356 35EE                            l4348 3570                            l4380 5BDE  
                          l4364 5BBE                            l3564 53A2                            l3556 537E  
                          l3548 5358                            l3644 3B58                            l3636 3A74  
                          l4196 425A                            l4188 4204                            l4452 4966  
                          l4444 48DE                            l5092 4750                            l3476 4536  
                          l3484 459C                            l3468 44EE                            l3388 50E0  
                          l3396 57FA                            l3492 515E                            l3580 313E  
                          l3572 30F2                            l4700 1352                            l5180 3DB8  
                          l5172 3D5A                            l5164 3D20                            l5156 3CF6  
                          l5148 3CB6                            l4436 472C                            l4428 46D8  
                          l5252 308A                            l5244 3028                            l5236 2FC6  
                          l5228 2F64                            l5324 3842                            l5316 37F8  
                          l5308 379E                            l5260 3642                            l5086 5CB8  
                          l3902 5CD2                            l5078 5C72                            l4550 2C5C  
                          l4542 2C28                            l4534 2BE6                            l4526 2BA8  
                          l4518 2B70                            l4470 2A6C                            l4462 2A3A  
                          l4630 40FC                            l4622 40CA                            l4614 4074  
                          l3910 58BC                            l4278 4CE2                            l3830 1E42  
                          l3822 1DE6                            l3814 1DA2                            l3806 1D6C  
                          l3750 1BF0                            l3742 1BB2                            l3734 1B7E  
                          l3718 1B14                            l3726 1B24                            l3670 1A62  
                          l3662 1A32                            l3654 1A00                            l4294 23C6  
                          l4286 2336                            l4358 3624                            l4374 5BF8  
                          l4366 5B98                            l3558 5384                            l3646 3BC2  
                          l3638 3AD6                            l4198 4272                            l4454 4982  
                          l4446 48F2                            l4438 4896                            l5094 4752  
                          l5190 58A0                            l3486 45AC                            l3478 4564  
                          l3398 580C                            l3494 516E                            l3590 3188  
                          l3582 315A                            l3574 3112                            l4382 59B4  
                          l4710 14DA                            l4702 135E                            l5174 3D7A  
                          l5182 3DBE                            l5166 3D30                            l5254 3094  
                          l5246 305C                            l5238 2FFA                            l5318 3816  
                          l5270 366E                            l5262 364E                            ?_pad 0011  
                          l4560 2CBC                            l4544 2C3E                            l4552 2C6E  
                          l4536 2C04                            l4528 2BB8                            l4480 2A92  
                          l4472 2A6E                            l4464 2A3C                            l4632 4120  
                          l4624 40D8                            l4616 4076                            l4608 402E  
                          l3912 58C4                            l3904 5CC4                            l3840 1E7C  
                          l3832 1E62                            l3824 1E20                            l3760 1C30  
                          l3808 1D7A                            l3744 1BB4                            l3736 1B94  
                          l3728 1B28                            l3680 1A8A                            l3672 1A64  
                          l3656 1A10                            l3664 1A3A                            l3648 19E4  
                          l4288 234A                            l4392 597A                            l4376 5BFE  
                          l4368 5B9E                            l4800 3938                            l4456 49AE  
                          l4448 493A                            l5096 4770                            l5088 4742  
                          l3488 45CC                            l3496 5182                            l3592 3192  
                          l3584 316C                            l3576 3122                            l3568 30AA  
                          l4384 59B8                            l4720 167E                            l4712 157E  
                          l4704 13FE                            l5184 3DD0                            l5176 3D8A  
                          l5248 3076                            l5192 2DBC                            l5280 3678  
                          l5272 3674                            l5264 3662                            l5256 363A  
                          l4650 5B34                            l4642 5B20                            l4570 2D2A  
                          l4554 2C7C                            l4546 2C44                            l4538 2C06  
                          l4490 2AD2                            l4482 2AA0                            l4466 2A4C  
                          l4474 2A76                            l4458 2A20                            l4634 4130  
                          l4626 40F6                            l4618 4082                            l3914 58CC  
                          l3906 5CC8                            l3842 1E82                            l3834 1E66  
                          l3818 1DCC                            l3826 1E22                            l3770 1C5A  
                          l3762 1C3C                            l3754 1C04                            l3746 1BBE  
                          l3738 1BA0                            l3690 1AC4                            l3682 1A9A  
                          l3674 1A6A                            l3666 1A4A                            l3658 1A20  
                          l4298 23FE                            l4378 5BD8                            l4810 399C  
                          l4802 393C                            l3930 53EC                            l3922 53AC  
                          l5098 477C                            l5186 5874                            l3498 5190  
                          l3594 3198                            l3586 317A                            l3578 3124  
                          l3850 3DEA                            l4386 59CE                            l4730 178A  
                          l4722 1748                            l4714 159A                            l4706 141A  
                          l5178 3D9E                            l5194 2DCC                            l5290 36C8  
                          l5274 3674                            l5266 3666                            l5258 363E  
                          l4652 5B36                            l4644 5B2A                            l4580 2D94  
                          l4564 2CE6                            l4572 2D2E                            l4556 2C80  
                          l4548 2C4E                            l4492 2AD4                            l4484 2AA2  
                          l4476 2A86                            l4468 2A5C                            l4636 413E  
                          l4628 40F8                            l3916 58F2                            l3908 58B8  
                          l3844 1E90                            l3836 1E74                            l3828 1E32  
                          l3780 1CCC                            l3764 1C40                            l3756 1C14  
                          l3748 1BE0                            l3772 1C60                            l3692 1AD6  
                          l3684 1AAA                            l3676 1A78                            l3668 1A50  
                          l4820 3A00                            l4812 39B4                            l4804 3954  
                          l3940 5438                            l3932 53F8                            l3924 53B0  
                          l5188 5888                            l3596 321A                            l3588 3180  
                          l3860 3E56                            l3852 3E0E                            l4396 54E6  
                          l4388 59E4                            l4740 1886                            l4732 1846  
                          l4724 1752                            l4716 163E                            l4708 14BE  
                          l4660 0E66                            l4900 4EF4                            l5196 2DDC  
                          l5292 36E8                            l5284 36A6                            l5276 3678  
                          l5268 366A                            l4646 5B30                            l4654 5C3A  
                          l4582 2D98                            l4574 2D48                            l4566 2CF2  
                          l4558 2C8E                            l4486 2AB2                            l4494 2ADC  
                          l4478 2A8C                            l4638 4140                            l3918 58F4  
                          l3950 1EB0                            l3846 1E92                            l3838 1E7A  
                          l3790 1D26                            l3774 1C86                            l3782 1CDC  
                          l3766 1C4E                            l3758 1C22                            l3694 1AE4  
                          l3686 1AAC                            l3678 1A7A                            l4822 3A18  
                          l4814 39B8                            l4806 396C                            l3942 5450  
                          l3934 5404                            l3926 53C8                            l3598 3220  
                          l3870 3F1E                            l3862 3E7A                            l3854 3E1C  
                          l4398 5548                            l4742 189C                            l4750 18CA  
                          l4734 1850                            l4726 175C                            l4718 1652  
                          l4670 0FE6                            l4662 0E7E                            l4910 4FA2  
                          l4902 4EF8                            l5198 2E10                            l5294 3704  
                          l5286 36A8                            l5278 3678                            l4648 5B32  
                          l4584 2DA6                            l4576 2D5E                            l4568 2D00  
                          l4496 2AEC                            l4488 2AC2                            l3960 1EF0  
                          l3952 1EBE                            l3792 1D30                            l3784 1D02  
                          l3776 1CBA                            l3768 1C50                            l3696 1AE8  
                          l3688 1AB4                            l4824 3A30                            l4816 39D0  
                          l4808 3984                            l3936 5410                            l3928 53D4  
                          l3944 5C96                            l3880 3F5A                            l3872 3F2C  
                          l3864 3EC2                            l3856 3E2E                            l4840 4B1A  
                          l4760 1962                            l4744 18A4                            l4728 1774  
                          l4736 185A                            l4752 18CE                            l4680 10D6  
                          l4672 0FFA                            l4664 0E8A                            l4656 0E14  
                          l4912 4FBA                            l4904 4F10                            l4920 26CC  
                          l5296 372C                            l5288 36B4                            l4586 2DAC  
                          l4578 2D78                            l4498 2B02                            l3970 1F20  
                          l3962 1EF6                            l3954 1EC0                            l3794 1D3E  
                          l3786 1D12                            l3778 1CBC                            l3698 1AEC  
                          l4826 3A34                            l4818 39E8                            l3938 5420  
                          l3946 5CA6                            l3874 3F40                            l3858 3E32  
                          l4850 4B5E                            l4842 4B26                            l4834 4AF2  
                          l4770 19DE                            l4762 198E                            l4754 18FC  
                          l4746 18BA                            l4738 1870                            l4690 125A  
                          l4682 10EE                            l4674 109E                            l4666 0F26  
                          l4658 0E62                            l4906 4F1C                            l4930 2730  
                          l4922 26E0                            l5298 376A                            l3892 5CD8  
                          l4588 2DAE                            l4596 3FA0                            l3980 1F58  
                          l3972 1F22                            l3964 1F06                            l3956 1ED0  
                          l3948 1EA4                            l3796 1D40                            l4780 3874  
                          l3868 3EFA                            l3884 3F66                            l4860 4BB6  
                          l4852 4B76                            l4844 4B2A                            l4836 4AF6  
                          l4828 4AE0                            l4764 19BA                            l4756 192C  
                          l4748 18C2                            l4692 1276                            l4684 10FA  
                          l4676 10BA                            l4668 0F42                            l4908 4F86  
                          l4940 277E                            l4932 2744                            l4924 26EC  
                          l4916 267C                            l3894 5CDC                            l4598 3FB0  
                          l3990 1FA8                            l3982 1F78                            l3974 1F32  
                          l3966 1F0C                            l3958 1EE0                            l3798 1D4E  
                          l4870 49C4                            l4790 38D4                            l4782 3878  
                          l4774 384E                            l3886 3F8A                            l3878 3F4C  
                          l4862 4BC2                            l4854 4B82                            l4846 4B42  
                          l4838 4B0E                            l4766 19C0                            l4758 195C  
                          l4694 131A                            l4686 119A                            l4678 10D2  
                          l4950 2812                            l4926 2704                            l4918 26C8  
                          l3896 5CAE                            l3992 1FB2                            l3984 1F88  
                          l3976 1F42                            l3968 1F12                            l4880 4A06  
                          l4872 49D4                            l4792 38D8                            l4784 3890  
                          l4776 3852                            l4864 4BC8                            l4856 4B8E  
                          l4848 4B5A                            l4768 19D4                            l4696 1336  
                          l4688 11B6                            l4952 2836                            l4944 27B6  
                          l4936 275A                            l4928 2708                            l3898 5CB2  
                          l3994 1FC8                            l3978 1F52                            l4890 4A66  
                          l4882 4A1E                            l4874 49DE                            l4794 38F0  
                          l4786 38A4                            l4778 385C                            l4866 4BE2  
                          l4858 4B92                            l4698 133A                            l4970 294A  
                          l4962 28CA                            l4946 27DA                            l4938 275C  
                          l3996 1FD4                            l3988 1F9C                            l4892 4ACC  
                          l4884 4A2A                            l4876 49E2                            l4796 3908  
                          l4788 38BC                            l4868 4BE8                            l4980 29E8  
                          l4964 28EE                            l4956 286E                            l3998 1FEC  
                          l4894 4AD6                            l4886 4A42                            l4878 49FA  
                          l4798 3920                            l4990 4E2E                            l4982 29FC  
                          l4974 2982                            l4958 2892                            l4888 4A4E  
                          l4992 4E30                            l4984 2A0A                            l4976 29A6  
                          l4968 2926                            l4994 4E46                            l4986 4E0A  
                          l4898 4EE6                            l4996 4E50                            l4988 4E20  
                          STR_1 0E05                            STR_2 0E0D                            u3000 4346  
                          u3001 4342                            u3011 4370                            u3020 4394  
                          u3100 4564                            u3021 4390                            u3101 4560  
                          u3030 43BE                            u3110 45AC                            u3031 43BA  
                          u3111 45A8                            u4000 1F78                            u3200 5358  
                          u3040 43FE                            u3120 516E                    _BAUD4CONbits 000EE9  
                          u4001 1F74                            u3201 5354                            u3041 43FA  
                          u3121 516A                            _LATE 000F7D                            u4010 1F88  
                          u3210 5374                            u3050 4448                            u3130 5190  
                          u4011 1F84                            u3211 5370                            u3051 4444  
                          u3131 518C                            _LATG 000F7F                            u4100 2248  
                          u4020 2102                            u3220 539A                            u3060 449C  
                          u3140 51E6                            u3300 32A4                            u4101 2244  
                          u3221 5396                            u3061 4498                            u3141 51E2  
                          u3301 32A0                            u4110 2276                            u4030 215C  
                          u3070 44CE                            u3150 51F6                            u3310 32C2  
                          u3230 30DA                            u4111 2272                            u4031 2158  
                          u3071 44CA                            u3151 51F2                            u3311 32BE  
                          u3231 30D4                            u5000 2CD2                            u4120 22B0  
                          u4040 217C                            u3400 3A74                            u4200 5AF0  
                          u3080 450C                            u3160 5954                            u3320 32DC  
                          u3240 30DC                            u5001 2CCE                            u4121 22AC  
                          u4041 2178                            u4025 20F8                            u3401 3A70  
                          u4201 5AEC                            u3081 4508                            u3161 5950  
                          u3321 32D8                            u5010 2CE6                            u4130 4D22  
                          u4050 218E                            u3170 52FA                            u3410 3B58  
                          u4210 418E                            u3090 4536                            u3330 32F6  
                          u3250 30F2                            _T2PR 000FBC                            u5011 2CE2  
                          u4131 4D1E                            u4051 218A                            u3171 52F6  
                          u3411 3B54                            u4211 418A                            u3091 4532  
                          u3331 32F2                            u3251 30EE                            u5020 2D00  
                          u5100 40BA                            u4140 4D60                            u4060 21BC  
                          u3500 1A9A                            u3180 5314                            u4300 52CE  
                          u4220 41E8                            u3340 3306                            u3260 3122  
                          u5021 2CFC                            u5101 40B6                            u4141 4D5C  
                          u4061 21B8                            u3501 1A96                            u3181 5310  
                          u4301 52CA                            u4221 41E4                            u3341 3302  
                          u3261 311E                            u5030 2D48                            u5110 40D8  
                          u4150 4D7E                            u4070 21D2                            u3510 1AD6  
                          u3190 533A                            u4310 52E6                            u4230 422C  
                          u3350 3318                            u3270 313E                            u5031 2D44  
                          u5111 40D4                            u4151 4D7A                            u4071 21CE  
                          u3511 1AD2                            u3191 5336                            u4311 52E2  
                          u4231 4228                            u3351 3314                            u3271 313A  
                          u5040 2D78                            u5120 40E8                            u4320 4C04  
                          u4160 4D9E                            u4080 21E6                            u3600 1BF0  
                          u3520 1AE4                            u3440 19FE                            u4400 2336  
                          u3424 3BB2                            u4240 4256                            u3360 3328  
                          u3280 316C                            u5200 1846                            u5041 2D74  
                          u5121 40E4                            u4321 4C00                            u4161 4D9A  
                          u4081 21E2                            u3601 1BEC                            u3521 1AE0  
                          u3441 19FA                            u4401 2332                            u3425 3BAE  
                          u4241 4252                            u3361 3324                            u3281 3168  
                          u5201 1842                            u5050 2DA6                            u5130 40F6  
                          u4330 4C38                            u4170 4DEE                            u4090 2200  
                          u3610 1C22                            u3530 1B52                            u3450 1A10  
                          u4410 236A                            u3434 3C1C                            u4250 42B0  
                          u3370 3340                            u3290 317A                            u5210 1870  
                          u5051 2DA2                            u5131 40F2                            u4171 4DEA  
                          u4091 21FC                            u3611 1C1E                            u3531 1B4E  
                          u3451 1A0C                            u3435 3C18                            u4251 42AC  
                          u3371 333C                            u3291 3176                            u5211 186C  
                          u3380 5B5A                            u5140 4130                            u5060 3FB0  
                          u4340 4C66                            u4180 5A02                            u3700 1D6A  
                          u3620 1C30                            u3540 1B6A                            u3460 1A20  
                          u4420 2386                            u4260 42E8                            u5300 19D4  
                          u5220 1886                            u3381 5B56                            u5141 412C  
                          u5061 3FAC                            u4341 4C62                            u4181 59FE  
                          u3701 1D66                            u3621 1C2C                            u3541 1B64  
                          u3461 1A1C                            u4421 2382                            u4261 42E4  
                          u5301 19D0                            u5221 1882                            u3390 5B70  
                          u5150 413E                            u5070 3FBE                            u4350 4C7A  
                          u3710 1D7A                            u3630 1C4E                            u3550 1B6C  
                          u3470 1A62                            u4430 23C6                            u4510 33F6  
                          u4270 4300                            u4190 55AE                            u5310 4BE2  
                          u5230 189C                            u3391 5B6C                            u5151 413A  
                          u5071 3FBA                            u4351 4C76                            u4335 4C2E  
                          u3711 1D76                            u3631 1C4A                            u3471 1A5E  
                          u4431 23C2                            u4415 2360                            u4511 33EE  
                          u4271 42FC                            u4191 55AA                            u5311 4BDE  
                          u6007 4B68                            u5231 1898                            u5080 401A  
                          u4360 4CA2                            u3800 1E62                            u3720 1D8C  
                          u3640 1C86                            u3560 1B94                            u3480 1A78  
                          u4440 24CC                            u4280 5260                            u5240 18BA  
                          u5160 167E                            u5320 4FBA                            u5400 294A  
                          u5081 4016                            u4361 4C9E                            u3801 1E5E  
                          u3721 1D88                            u3641 1C82                            u3561 1B90  
                          u3481 1A74                            u4441 24C8                            u4281 525C  
                          u6017 4B9C                            u5241 18B6                            u5161 167A  
                          u5321 4FB6                            u5401 2946                            u5090 4070  
                          u4370 4CC2                            u3810 1E74                            u3730 1DA2  
                          u3650 1CCC                            u3570 1BB2                            u3490 1A8A  
                          u4450 256A                            u4610 34FE                            u4530 342E  
                          u4290 5284                            u2930 50A6                            u5250 18FC  
                          u5170 1748                            u5410 29A6                            u5330 2730  
            verify_color@color2 007F                            u5091 406C                            u4371 4CBE  
                          u3811 1E70                            u3731 1D9E                            u3651 1CC8  
                          u3571 1BAE                            u3491 1A86                            u4451 2566  
                          u4611 34F6                            u4531 342A                            u4291 5280  
                          u6107 4EB2                            u6027 5892                            u2931 50A2  
                          u5251 18F8                            u5171 1744                            u5411 29A2  
                          u5331 272C                            u4380 4CD2                            u3820 1E90  
                          u3740 1DB8                            u3660 1D02                            u3580 1BD2  
                          u4460 262A                            u4540 3440                            u4508 33C0  
                          u3900 53EC                            u2940 50B8                            u5260 192C  
                          u5180 1774                            u5420 2A0A                            u5340 2756  
                          u5500 54DC                            u4381 4CCE                            u3821 1E8C  
                          u3741 1DB4                            u3661 1CFE                            u3581 1BCE  
                          u4541 3438                            u3901 53E8                            u6117 48B4  
                          u6037 4788                            u2941 50B4                            u5261 1928  
                          u5181 1770                            u5421 2A06                            u5341 2752  
                          u5501 54D8                            u3750 1DCC                            u3670 1D12  
                          u3590 1BE0                            u4470 2646                            u4390 230E  
                          u4710 3600                            u4630 353A                            u3910 5438  
                          u5510 4762                            u2950 50E0                            u3830 3E0E  
                          u5270 195C                            u5190 178A                            u5430 2A1E  
                          u5350 277E                            u3751 1DC8                            u3671 1D0E  
                          u3591 1BDC                            u4471 2642                            u4711 35F8  
                          u4631 3536                            u6207 545A                            u3911 5434  
                          u6127 48FC                            u6047 47D2                            u5511 475E  
                          u2951 50DC                            u3831 3E0A                            u5271 1958  
                          u5191 1786                            u5431 2A1A                            u5351 277A  
                          u3760 1DE6                            u3680 1D3E                            u4640 354C  
                          u4608 34C4                            u4560 3478                            u4528 33F8  
                          u4480 33AC                            u3920 5450                            u5440 4E0A  
                          u5600 4870                            u5520 4770                            u2960 5116  
                          u3840 3E56                            u5280 198E                            u4800 46C2  
                          u5360 27DA                            u3761 1DE2                            u3681 1D3A  
                          u4465 2620                            u4641 3544                            u4561 3470  
                          u4481 33A8                            u6217 52AE                            u3921 544C  
                          u6137 4944                            u5441 4E06                            u5601 486C  
                          u6057 4814                            u5521 476C                            u2961 5112  
                          u3841 3E52                            u5281 198A                            u4801 46BE  
                          u5361 27D6                            u3770 1E20                            u3690 1D4E  
                          u4730 3638                            u4490 33BE                            u5450 4E2E  
                          u5530 47A4                            u3930 5CA6                            u2970 5830  
                          u3850 3E7A                            u5290 19BA                            u5610 3C54  
                          u4810 46EA                            u5370 2836                            u3771 1E1C  
                          u3691 1D4A                            u4395 2304                            u4731 3634  
                          u4491 33B6                            u6307 5BE8                            u6227 3866  
                          u6147 49A0                            u5451 4E2A                            u6067 487E  
                          u5531 47A0                            u3931 5CA2                            u2971 582C  
                          u3851 3E76                            u5291 19B6                            u5611 3C50  
                          u4811 46E6                            u5371 2832                            u4900 2B42  
                          u3940 1EBE                            u3780 1E32                            u4708 35CC  
                          u4660 3582                            u4628 3500                            u4580 34B0  
                          u5460 4E5E                            u5540 47B2                            u2980 5A4C  
                          u3860 3F1E                            u4740 59CE                            u5620 3C74  
                          u4820 4714                            u5380 2892                            u5700 2DCC  
                          u4901 2B3E                            u3941 1EBA                            u3781 1E2E  
                          u4661 357A                            u4581 34AC                            u6317 5C08  
                          u6237 3882                            u6157 41C8                            u5461 4E5A  
                          u6077 4E14                            u5541 47AE                            u2981 5A48  
                          u3861 3F1A                            u4741 59CA                            u5621 3C70  
                          u4821 4710                            u5381 288E                            u5701 2DC8  
                          u4910 2BB8                            u4830 2A3A                            u3870 58E0  
                          u3950 1ED0                            u3790 1E42                            u4590 34C2  
                          u4558 3442                            u5470 4E70                            u5550 47F8  
                          u2990 4314                            u4750 59E4                            u5630 3C9A  
                          u5390 28EE                            u5710 2DDC                            u4911 2BB4  
                          u4831 2A36                            u3871 58D8                            u3951 1ECC  
                          u3791 1E3E                            u6407 34DE                            u4591 34BA  
                          u6327 49EC                            u6247 38E2                            u6167 41FA  
                          u5471 4E6C                            u6087 4E3A                            u5551 47F0  
                          u2991 4310                            u4751 59E0                            u5631 3C96  
                          u5391 28EA                            u5711 2DD8                            u4920 2BDA  
                          u4840 2A4C                            u3960 1EE0                            u4728 3602  
                          u4680 35B8                            u5480 4E94                            u5640 3CCA  
                          u4760 462A                            u5720 2E3E                            u5800 372C  
                          u4921 2BD6                            u4841 2A48                            u3961 1EDC  
                          u4681 35B4                            u6417 351A                            u6337 4A10  
                          u6257 3946                            u6177 4290                            u5481 4E90  
                          u6097 4E7A                            u5641 3CC6                            u4761 4626  
                          u5721 2E3A                            u5801 3728                            u4930 2C04  
                          u4850 2A5C                            u3970 1F20                            u4690 35CA  
                          u4658 354E                            u4578 347A                            u3890 53C8  
                          u5490 4EA6                            u5570 4830                            u5650 3D0A  
                          u4770 464E                            u5730 2EA0                            u5810 3784  
                          u4931 2C00                            u4851 2A58                            u3971 1F1C  
                          u4691 35C2                            u6427 3562                            u6347 4A34  
                          u6267 39C2                            u3891 53C4                            u6187 42C2  
                          u5491 4EA2                            u5571 482C                            u5651 3D06  
                          u4771 464A                            u5731 2E9C                            u5811 3780  
                          u4940 2C28                            u4860 2AA0                            u3980 1F32  
                          u5580 483E                            u5660 3D30                            u4780 469A  
                          u5740 2F02                            u5820 3826                            u4941 2C24  
                          u4861 2A9C                            u3981 1F2E                            u6437 3598  
                          u6357 4A58                            u6277 3A3E                            u6197 5416  
                          u5581 483A                            u5661 3D2C                            u4781 4696  
                          u5741 2EFE                            u5821 3822                            u4950 2C3E  
                          u4870 2AB2                            u3990 1F42                            u4678 3584  
                          u5590 484C                            u5670 3D42                            u4790 46B2  
                          u5750 2F64                            u4951 2C3A                            u4871 2AAE  
                          u3991 1F3E                            u6447 35E0                            u6367 33D6  
                          u6287 5BA8                            u5591 4848                            u5671 3D3E  
                          u4791 46AE                            u5751 2F60                            u4960 2C5C  
                          u4880 2AC2                            u3888 58E2                            u5568 47FA  
                          u5680 3D8A                            u5760 2FC6                            u4961 2C58  
                          u4881 2ABE                            u6457 3616                            u6377 340E  
                          u6297 5BC8                            u5681 3D86                            u5761 2FC2  
                          u4970 2C7C                            u4890 2B02                            u5690 3DD0  
                          u5770 3028                            u6467 5C28                            u4971 2C78  
                          u4891 2AFE                            u6387 3458                            u5691 3DCC  
                          u5907 46F4                            u5771 3024                            u4980 2C8E  
                          u5780 308A                            u6477 5AA2                            u4981 2C8A  
                          u6397 3490                            u5917 471E                            u5781 3086  
                          u4990 2CBC                            u5790 36FA                            u4991 2CB8  
                          u5927 3DAA                            u5847 37BE                            u5791 36F6  
                          u5937 4F02                            u5857 547A                            u5947 0E70  
                          u5867 54B0                            u5957 10C4                            u5877 26F6  
                          u5967 10E0                            u5887 4678                            u5977 1344  
                          u5897 46CC                            u5987 4B00                            u5997 4B34  
                          abs@a 0013                            _dbuf 017E                            _main 363A  
                          _dtoa 30AA                turning_action@mL 0035                turning_action@mR 0037  
                          _prec 00F8                            _nout 00F4                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 53AC                            prodh 000FF4                            prodl 000FF3  
                          start 0030                    main@accident 01A9                  ?_color_display 0058  
                 test_action@mL 002D                   test_action@mR 002F                 ___fldiv@new_exp 0039  
        __end_of_color_read_Red 56B8                 __end_of_HighISR 0030                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 004A                 __end_of___aodiv 448A       amb_light_measure@CC_amb_1 0056  
     amb_light_measure@CC_amb_2 0058       amb_light_measure@CC_amb_3 005A                 __end_of___fladd 1EA4  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 45EE  
               __end_of___fldiv 2DBA                 __end_of___awdiv 53AC                 __end_of___flneg 5A24  
               __end_of___flmul 22CE                 __end_of___flsub 57EE                 __end_of___fltol 4CF4  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 5BF8  
                         _LED_C 5C18                           _LED_G 5BD8                           _LED_R 5B98  
                         i2l505 002C                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5CAC  
    __end_of_I2C_2_Master_Start 5CE2         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5CB8  
               __end_of_compare 59EC                    compare@lower 0050                           _flags 00FA  
                         _color 017C                    compare@upper 0054                           _fputc 5094  
                         _fputs 57EE                           _setup 4742                           pad@fp 0011  
                         _width 00F6                           _putch 5CE4                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00E8            amb_light_measure@amb 0050                           tablat 000FF5  
               __end_of_lroundf 59B4                 detect_wall@stop 0068                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 5668                color_display@buf 0079  
       __end_of_color_read_Blue 5758           _I2C_2_Master_RepStart 5CC4               _calibration_motor 4DF8  
               ?_color_read_Red 0005                 __initialization 5832                   short_burst@mL 0020  
                 short_burst@mR 0022              ?_calibration_motor 0033                    __end_of_main 384E  
                  __end_of_dtoa 338E                   main@amb_light 01A6            __end_of_detect_color 19E4  
                  __end_of_stop 546A          color_data_collection@i 00DE          color_data_collection@m 005A  
           ??_calibration_motor 0037                          ??_main 00F0                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4FC2                    turn45@i_1327 0028  
                  turn45@i_1329 002A                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_setup 0060  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5330 0022                          i2l5332 0028  
                        i2l5326 000A                          i2l5328 001A                       ??_HighISR 0001  
      __end_of_color_click_init 5AC2                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A       __end_of_calibration_motor 4EE6                __end_of___xxtofl 4152  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 4CF4                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5B72                       ??___fldiv 0030  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0017  
                     ??___flsub 0019                       ??___fltol 0046                          _goback 267C  
                 compare@result 0056                          _memory 0100                          clear_0 5850  
                        clear_1 585C                ___awdiv@quotient 000D                          _motorL 016D  
                        _motorR 0164                          isa$std 000001                          pad@buf 0013  
                        _turn45 4152                          _roundf 22CE                          dtoa@fp 001C  
                        _strlen 5A24                       ??_compare 0056                   toggle_light@i 0004  
              __end_of_pin_init 5A8E                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 00E0                  test_function@w 00E2                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 0050                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 55B8                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                ??_turning_action 0039  
                  ?_test_action 002D                       ??_sprintf 0058                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                    ?_short_burst 0020                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                   main@stop_time 01AC  
                    __accesstop 0060         __end_of__initialization 5862                   verify_color@m 0079  
                 verify_color@w 007B        __end_of_color_read_Clear 57A8                      ___flneg@f1 0001  
      __end_of_color_read_Green 5708          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 0042                   __end_of_LED_B 5C18                   __end_of_LED_C 5C38  
                 __end_of_LED_G 5BF8                   __end_of_LED_R 5BB8                ?_color_read_Blue 0005  
               _Interrupts_init 5CB8                  __pcstackCOMRAM 0001                   _fullSpeedBack 45EE  
                  __pidataBANK0 5CE2                   __end_of_fputc 515E               detect_color@color 0072  
                 __end_of_fputs 5832                   __end_of_setup 4896                   __end_of_putch 5CE6  
                 __end_of_toint 0E05             __end_of_Timer0_init 5C94                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_setup 005C  
                       ??_putch 0001                      __pbssBANK0 00F4                      __pbssBANK1 0100  
           calibration_motor@mL 0033             calibration_motor@mR 0035                color_predict@buf 0079  
             _color_writetoaddr 5C38                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_goback 002D                         ?_turn45 0020                         ?_roundf 0028  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5BB8  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5                    _detect_color 0E14   __end_of_color_data_collection 4BEE  
       __end_of_Interrupts_init 5CC4          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5C58              _I2C_2_Master_Start 5CD8  
                    _initUSART4 5C58              _I2C_2_Master_Write 5CAC                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00EC                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5C76         sendStringSerial4@string 0002  
                       ___aodiv 4302                         ___fladd 19E4                         ___aomod 448A  
                       ___fldiv 2A20                         ___awdiv 52E8                         ___flneg 59EC  
                       ___flmul 1EA4                         ___flsub 57A8                         ___fltol 4BEE  
           ?_I2C_2_Master_Start 0001        fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 5832  
                       __ramtop 0E00                      _read_color 55B8                         __ptext0 363A  
                       __ptext1 546A                         __ptext2 2DBA                         __ptext3 267C  
                       __ptext4 45EE                         __ptext5 3C2C                         __ptext6 4EE6  
                       __ptext7 0E14                         __ptext8 59B4                         __ptext9 4AE0  
                       _compare 59B4         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005               detect_wall@CC_amb 0064             turning_action@color 0039  
                     _T2HLTbits 000FBE                         _lroundf 597A                         goback@i 0033  
                       main@amb 019E                         _sprintf 5616                         main@rgb 01AE  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 5862  
            setMotorPWM@PWMduty 0018                         fputc@fp 0003           __end_of_test_function 3DEA  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 00E4  
               test_function@mR 00E6                 ??_fullSpeedBack 0025                      ??_pin_init 0001  
            ??_color_click_init 0005                         setup@mL 0064               __end_of_vfpfcnvrt 3F9E  
                       setup@mR 0066                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       turn45@i 002C                         roundf@e 0034                         roundf@u 003A  
                       roundf@x 0028                         roundf@y 003E                      ??_vfprintf 0056  
                main@start_time 01AA                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 58F8                 turn45@direction 0025  __end_of_initDCmotors_parameter 5094  
                 ??_detect_wall 0056                       _PORTFbits 000F8E        test_function@stop_signal 00EE  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 003B                     ___fldiv@rem 0034                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 001C                   ?_toggle_light 0001  
             ?_color_read_Clear 0005               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 0079           __end_of_color_display 5556  
                    main@motorL 01D2                      main@motorR 01DB     amb_light_measure@CC_amb_ave 0054  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 006C                  detect_color@BC 0062  
                detect_color@BG 0073                  detect_color@GB 006A                  detect_color@GG 006E  
                detect_color@BR 0066                  detect_color@GR 0064                  detect_color@RB 0068  
                detect_color@RG 0060                  detect_color@RR 0070           __end_of_color_predict 5B20  
                __end_of___flge 4DF8                  _fullSpeedAhead 5224                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                  __end_of___wmul 5B98  
                   ?_read_color 000C                  __end_of_goback 2A20                  __end_of_turn45 4302  
                __end_of_roundf 267C                  __end_of_strlen 5A5A             color_read_Clear@tmp 000A  
           start_initialization 5832                     __end_of_abs 597A                     __end_of_pad 5224  
           __end_of_detect_wall 4FC2                 turn45@turn_time 0024                  ??_toggle_light 0002  
                ??_verify_color 007D             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 593A  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 52E8                        ??___flge 0009  
                      ??___wmul 0005                        ??_goback 0031                     __pdataBANK0 00FC  
                      ??_turn45 0026                        ??_roundf 002C                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 002C                       ___fldiv@b 0028                       ___flmul@a 0013  
                     ___flmul@b 000F                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 019E                ___aodiv@dividend 0001  
          detect_wall@amb_light 0054                        ?_HighISR 0001                       _dtoa$2601 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 0028                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 000F                        ?___flsub 0011  
                      ?___fltol 0042              test_function@color 00ED                     _centisecond 017A  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 0050  
                   _detect_wall 4EE6                     __smallconst 0E00               _I2C_2_Master_Idle 5B4A  
             _I2C_2_Master_Init 5B20               _I2C_2_Master_Read 58B6               _I2C_2_Master_Stop 5CCE  
        toggle_light@toggletime 0001                        ?_lroundf 004C              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5AC2           _color_data_collection 4AE0             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                        _PIE0bits 000E29  
            ?_sendStringSerial4 0002                        _PIR0bits 000E33                        _PIR4bits 000E37  
                      i2u583_40 001A                        i2u583_41 0016            detect_wall@threshold 0066  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 017D  
                     _vfpfcnvrt 3DEA                      setup@white 0060       __end_of_I2C_2_Master_Idle 5B72  
          __end_of_toggle_light 363A       __end_of_I2C_2_Master_Init 5B4A       __end_of_I2C_2_Master_Read 58F8  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5CD8                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 54E6          test_function@amb_light 00EA  
                     main@white 01B6               ??_color_read_Blue 0007                   detect_color@m 0057  
                 detect_color@w 0059                   ??_test_action 0031                 _calibrate_white 384E  
     __end_of_sendStringSerial4 5AF2                   detect_wall@mL 0050                   detect_wall@mR 0052  
                 ??_short_burst 0024               _amb_light_measure 49C4   __end_of_I2C_2_Master_RepStart 5CCE  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3C2C                      roundf@F527 0176  
                  ??_initUSART4 0001              ?_amb_light_measure 0050                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 4742                    __Lsmallconst 0E00            compare@value2compare 0052  
           ??_amb_light_measure 0052                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                        ___xxtofl 3F9E  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5C76  
                      __ptext10 55B8                        __ptext11 5AF2                        __ptext20 5094  
                      __ptext12 54E6                        __ptext21 5CE4                        __ptext13 5616  
                      __ptext30 4896                        __ptext22 593A                        __ptext14 5556  
                      __ptext31 4152                        __ptext23 448A                        __ptext15 3DEA  
                      __ptext40 5708                        __ptext32 53AC                        __ptext24 4302  
                      __ptext16 30AA                        __ptext41 5B98                        __ptext33 5224  
                      __ptext25 5AC2                        __ptext17 515E                        __ptext50 19E4  
                      __ptext42 5BB8                        __ptext34 3A58                        __ptext26 5C94  
                      __ptext18 5A24                        __ptext51 59EC                        __ptext43 5BD8  
                      __ptext35 5B72                        __ptext27 5874                        __ptext19 57EE  
                      __ptext60 5C18                        __ptext52 1EA4                        __ptext44 5BF8  
                      __ptext36 52E8                        __ptext28 4742                        __ptext61 5A5A  
                      __ptext53 4CF4                        __ptext45 49C4                        __ptext37 384E  
                      __ptext29 4DF8                        __ptext70 5B4A                        __ptext62 5C58  
                      __ptext54 4BEE                        __ptext46 338E                        __ptext38 5668  
                      __ptext71 5B20                        __ptext63 4FC2                        __ptext55 5758  
                      __ptext47 597A                        __ptext39 56B8                        __ptext72 5C76  
                      __ptext64 58F8                        __ptext56 5CC4                        __ptext48 22CE  
                      __ptext73 5CB8                        __ptext65 5A8E                        __ptext57 58B6  
                      __ptext49 57A8                        __ptext66 5C38                        __ptext58 3F9E  
                      __ptext67 5CAC                        __ptext59 2A20                        __ptext68 5CCE  
                      __ptext69 5CD8       __end_of_amb_light_measure 4AE0                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A          test_function@test_code 00EF  
           __end_of_test_action 49C4              __end_of_read_color 5616                        _pin_init 5A5A  
                _turning_action 2DBA             __end_of_short_burst 58B6                        isa$xinst 000000  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FC  
                      goback@mL 002D                        goback@mR 002F                        _vfprintf 5556  
              ___aomod@dividend 0001         __end_of_calibrate_white 3A58                      _INTCONbits 000FF2  
                   _setMotorPWM 3A58                   ?_detect_color 0057                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
        __end_of_turning_action 30AA                ??_fullSpeedAhead 001E                   _test_function 3C2C  
                setup@amb_light 0068                        lroundf@x 004C        ??_initDCmotors_parameter 0005  
                      setup@amb 0062                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                        turn45@mL 0020                        turn45@mR 0022  
              _color_click_init 5A8E                    ?_detect_wall 0050                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2931 0075                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                  ??_detect_color 005B                     _test_action 4896  
                 ___fladd@signs 000D                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 5C94                     _short_burst 5874                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 00E0                 ?_turning_action 0035  
                  _toggle_light 338E                    ___aomod@sign 0012                    _verify_color 546A  
                   _roundf$2933 0036                     _roundf$2934 0030                   _color_display 54E6  
               main@stop_signal 01A8  
