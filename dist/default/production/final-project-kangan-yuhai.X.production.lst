

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 14:58:58 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101  0000                     
   102                           ; Version 2.35
   103                           ; Generated 05/05/2021 GMT
   104                           ; 
   105                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution. Publication is not required when
   119                           ;        this file is used in an embedded application.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F67K40 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataBANK0
   139  005BC2                     __pidataBANK0:
   140                           	callstack 0
   141                           
   142                           ;initializer for _SENSITIVITY
   143  005BC2  0A                 	db	10
   144                           
   145                           ;initializer for _CALIBRATION_135
   146  005BC3  0F                 	db	15
   147                           
   148                           	psect	idataBANK1
   149  005BC6                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for _CALIBRATION_180
   153  005BC6  0A                 	db	10
   154                           
   155                           	psect	smallconst
   156  000E00                     __psmallconst:
   157                           	callstack 0
   158  000E00  00                 	db	0
   159  000E01  0000               	dw	0
   160  000E03  4B00               	dw	19200
   161  000E05                     __end_of_toint:
   162                           	callstack 0
   163  0000                     _TX4REG	set	3812
   164  0000                     _RC4STAbits	set	3815
   165  0000                     _SP4BRGH	set	3814
   166  0000                     _LATEbits	set	3965
   167  0000                     _TRISGbits	set	3975
   168  0000                     _TRISEbits	set	3973
   169  0000                     _LATGbits	set	3967
   170  0000                     _LATFbits	set	3966
   171  0000                     _TRISFbits	set	3974
   172  0000                     _SSP2CON2bits	set	3802
   173  0000                     _LATG	set	3967
   174  0000                     _LATE	set	3965
   175  0000                     _RX4PPS	set	3605
   176  0000                     _SSP2CLKPPS	set	3612
   177  0000                     _SSP2DATPPS	set	3613
   178  0000                     _ANSELDbits	set	3751
   179  0000                     _SSP2ADD	set	3798
   180  0000                     _SSP2CON1bits	set	3801
   181  0000                     _LATAbits	set	3961
   182  0000                     _LATDbits	set	3964
   183  0000                     _LATHbits	set	3968
   184  0000                     _TRISDbits	set	3972
   185  0000                     _TRISHbits	set	3976
   186  0000                     _PORTFbits	set	3982
   187  0000                     _T2PR	set	4028
   188  0000                     _T2CONbits	set	4029
   189  0000                     _PWM7DCH	set	4000
   190  0000                     _PWM6DCH	set	4003
   191  0000                     _TRISAbits	set	3969
   192  0000                     _TRISCbits	set	3971
   193  0000                     _LATCbits	set	3963
   194  0000                     _RC4REG	set	3811
   195  0000                     _SP4BRGL	set	3813
   196  0000                     _TX4STAbits	set	3816
   197  0000                     _BAUD4CONbits	set	3817
   198  0000                     _SSP2CON2	set	3802
   199  0000                     _SSP2STAT	set	3800
   200  0000                     _ANSELFbits	set	3764
   201  0000                     _SSP2BUF	set	3797
   202  0000                     _PIE0bits	set	3625
   203  0000                     _PIE4bits	set	3629
   204  0000                     _PIR4bits	set	3639
   205  0000                     _RC0PPS	set	3682
   206  0000                     _RC7PPS	set	3689
   207  0000                     _RD5PPS	set	3695
   208  0000                     _RE2PPS	set	3700
   209  0000                     _RD6PPS	set	3696
   210  0000                     _TMR0L	set	4051
   211  0000                     _TMR0H	set	4052
   212  0000                     _T0CON0bits	set	4053
   213  0000                     _T2CLKCONbits	set	4031
   214  0000                     _T2HLTbits	set	4030
   215  0000                     _PWM6CONbits	set	4004
   216  0000                     _PWM7CONbits	set	4001
   217  0000                     _PIR0bits	set	3635
   218  0000                     _T0CON1bits	set	4054
   219  0000                     _INTCONbits	set	4082
   220  000E05                     STR_6:
   221                           
   222                           ; BSR set to: 14
   223  000E05  67                 	db	103	;'g'
   224  000E06  6F                 	db	111	;'o'
   225  000E07  20                 	db	32
   226  000E08  62                 	db	98	;'b'
   227  000E09  61                 	db	97	;'a'
   228  000E0A  63                 	db	99	;'c'
   229  000E0B  6B                 	db	107	;'k'
   230  000E0C  20                 	db	32
   231  000E0D  66                 	db	102	;'f'
   232  000E0E  69                 	db	105	;'i'
   233  000E0F  6E                 	db	110	;'n'
   234  000E10  69                 	db	105	;'i'
   235  000E11  73                 	db	115	;'s'
   236  000E12  68                 	db	104	;'h'
   237  000E13  0D                 	db	13
   238  000E14  0A                 	db	10
   239  000E15  00                 	db	0
   240  000E16                     STR_1:
   241                           
   242                           ; BSR set to: 14
   243  000E16  25                 	db	37
   244  000E17  64                 	db	100	;'d'
   245  000E18  09                 	db	9
   246  000E19  25                 	db	37
   247  000E1A  64                 	db	100	;'d'
   248  000E1B  09                 	db	9
   249  000E1C  25                 	db	37
   250  000E1D  64                 	db	100	;'d'
   251  000E1E  09                 	db	9
   252  000E1F  25                 	db	37
   253  000E20  64                 	db	100	;'d'
   254  000E21  0D                 	db	13
   255  000E22  0A                 	db	10
   256  000E23  00                 	db	0
   257  000E24                     STR_3:
   258                           
   259                           ; BSR set to: 14
   260  000E24  72                 	db	114	;'r'
   261  000E25  65                 	db	101	;'e'
   262  000E26  73                 	db	115	;'s'
   263  000E27  75                 	db	117	;'u'
   264  000E28  6C                 	db	108	;'l'
   265  000E29  74                 	db	116	;'t'
   266  000E2A  3A                 	db	58	;':'
   267  000E2B  20                 	db	32
   268  000E2C  25                 	db	37
   269  000E2D  64                 	db	100	;'d'
   270  000E2E  0D                 	db	13
   271  000E2F  0A                 	db	10
   272  000E30  00                 	db	0
   273  000E31                     STR_4:
   274                           
   275                           ; BSR set to: 14
   276  000E31  67                 	db	103	;'g'
   277  000E32  6F                 	db	111	;'o'
   278  000E33  20                 	db	32
   279  000E34  62                 	db	98	;'b'
   280  000E35  61                 	db	97	;'a'
   281  000E36  63                 	db	99	;'c'
   282  000E37  6B                 	db	107	;'k'
   283  000E38  0D                 	db	13
   284  000E39  0A                 	db	10
   285  000E3A  00                 	db	0
   286  000E3B                     STR_5:
   287                           
   288                           ; BSR set to: 14
   289  000E3B  72                 	db	114	;'r'
   290  000E3C  65                 	db	101	;'e'
   291  000E3D  70                 	db	112	;'p'
   292  000E3E  65                 	db	101	;'e'
   293  000E3F  61                 	db	97	;'a'
   294  000E40  74                 	db	116	;'t'
   295  000E41  0D                 	db	13
   296  000E42  0A                 	db	10
   297  000E43  00                 	db	0
   298  000E44  00                 	db	0	; dummy byte at the end
   299  0000                     
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303  00535A                     __pcinit:
   304                           	callstack 0
   305  00535A                     start_initialization:
   306                           	callstack 0
   307  00535A                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK1 (1 bytes)
   311                           ; load TBLPTR registers with __pidataBANK1
   312  00535A  0EC6               	movlw	low __pidataBANK1
   313  00535C  6EF6               	movwf	tblptrl,c
   314  00535E  0E5B               	movlw	high __pidataBANK1
   315  005360  6EF7               	movwf	tblptrh,c
   316  005362  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   317  005364  6EF8               	movwf	tblptru,c
   318  005366  0009               	tblrd		*+	;fetch initializer
   319  005368  CFF5 F1FA          	movff	tablat,__pdataBANK1
   320                           
   321                           ; Initialize objects allocated to BANK0 (2 bytes)
   322                           ; load TBLPTR registers with __pidataBANK0
   323  00536C  0EC2               	movlw	low __pidataBANK0
   324  00536E  6EF6               	movwf	tblptrl,c
   325  005370  0E5B               	movlw	high __pidataBANK0
   326  005372  6EF7               	movwf	tblptrh,c
   327  005374  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   328  005376  6EF8               	movwf	tblptru,c
   329  005378  0009               	tblrd		*+	;fetch initializer
   330  00537A  CFF5 F0FE          	movff	tablat,__pdataBANK0
   331  00537E  0009               	tblrd		*+	;fetch initializer
   332  005380  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   333                           
   334                           ; Clear objects allocated to BANK3 (108 bytes)
   335  005384  EE03  F000         	lfsr	0,__pbssBANK3
   336  005388  0E6C               	movlw	108
   337  00538A                     clear_0:
   338  00538A  6AEE               	clrf	postinc0,c
   339  00538C  06E8               	decf	wreg,f,c
   340  00538E  E1FD               	bnz	clear_0
   341                           
   342                           ; Clear objects allocated to BANK2 (32 bytes)
   343  005390  EE02  F0C9         	lfsr	0,__pbssBANK2
   344  005394  0E20               	movlw	32
   345  005396                     clear_1:
   346  005396  6AEE               	clrf	postinc0,c
   347  005398  06E8               	decf	wreg,f,c
   348  00539A  E1FD               	bnz	clear_1
   349                           
   350                           ; Clear objects allocated to BANK1 (50 bytes)
   351  00539C  EE01  F0C8         	lfsr	0,__pbssBANK1
   352  0053A0  0E32               	movlw	50
   353  0053A2                     clear_2:
   354  0053A2  6AEE               	clrf	postinc0,c
   355  0053A4  06E8               	decf	wreg,f,c
   356  0053A6  E1FD               	bnz	clear_2
   357                           
   358                           ; Clear objects allocated to BANK0 (6 bytes)
   359  0053A8  0100               	movlb	0
   360  0053AA  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   361  0053AC  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   362  0053AE  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   363  0053B0  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   364  0053B2  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   365  0053B4  6BF8               	clrf	__pbssBANK0& (0+255),b
   366  0053B6                     end_of_initialization:
   367                           	callstack 0
   368  0053B6                     __end_of__initialization:
   369                           	callstack 0
   370  0053B6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   371  0053B8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   372  0053BA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   373  0053BC  6EF8               	movwf	tblptru,c
   374  0053BE  0E0E               	movlw	high __Lsmallconst
   375  0053C0  6EF7               	movwf	tblptrh,c
   376  0053C2  0100               	movlb	0
   377  0053C4  EF69  F01C         	goto	_main	;jump to C main() function
   378                           
   379                           	psect	bssBANK0
   380  0000F8                     __pbssBANK0:
   381                           	callstack 0
   382  0000F8                     _flags:
   383                           	callstack 0
   384  0000F8                     	ds	2
   385  0000FA                     _TxBufReadCnt:
   386                           	callstack 0
   387  0000FA                     	ds	1
   388  0000FB                     _TxBufWriteCnt:
   389                           	callstack 0
   390  0000FB                     	ds	1
   391  0000FC                     _RxBufReadCnt:
   392                           	callstack 0
   393  0000FC                     	ds	1
   394  0000FD                     _RxBufWriteCnt:
   395                           	callstack 0
   396  0000FD                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399  0000FE                     __pdataBANK0:
   400                           	callstack 0
   401  0000FE                     _SENSITIVITY:
   402                           	callstack 0
   403  0000FE                     	ds	1
   404  0000FF                     _CALIBRATION_135:
   405                           	callstack 0
   406  0000FF                     	ds	1
   407                           
   408                           	psect	bssBANK1
   409  0001C8                     __pbssBANK1:
   410                           	callstack 0
   411  0001C8                     _EUSART4RXbuf:
   412                           	callstack 0
   413  0001C8                     	ds	20
   414  0001DC                     _motorR:
   415                           	callstack 0
   416  0001DC                     	ds	10
   417  0001E6                     _motorL:
   418                           	callstack 0
   419  0001E6                     	ds	10
   420  0001F0                     roundf@F527:
   421                           	callstack 0
   422  0001F0                     	ds	4
   423  0001F4                     _nout:
   424                           	callstack 0
   425  0001F4                     	ds	2
   426  0001F6                     _width:
   427                           	callstack 0
   428  0001F6                     	ds	2
   429  0001F8                     _prec:
   430                           	callstack 0
   431  0001F8                     	ds	2
   432                           
   433                           	psect	dataBANK1
   434  0001FA                     __pdataBANK1:
   435                           	callstack 0
   436  0001FA                     _CALIBRATION_180:
   437                           	callstack 0
   438  0001FA                     	ds	1
   439                           
   440                           	psect	bssBANK2
   441  0002C9                     __pbssBANK2:
   442                           	callstack 0
   443  0002C9                     _dbuf:
   444                           	callstack 0
   445  0002C9                     	ds	32
   446                           
   447                           	psect	bssBANK3
   448  000300                     __pbssBANK3:
   449                           	callstack 0
   450  000300                     _EUSART4TXbuf:
   451                           	callstack 0
   452  000300                     	ds	60
   453  00033C                     _memory:
   454                           	callstack 0
   455  00033C                     	ds	40
   456  000364                     _stop_move:
   457                           	callstack 0
   458  000364                     	ds	2
   459  000366                     _start_move:
   460                           	callstack 0
   461  000366                     	ds	2
   462  000368                     _second:
   463                           	callstack 0
   464  000368                     	ds	2
   465  00036A                     _color:
   466                           	callstack 0
   467  00036A                     	ds	1
   468  00036B                     _array_index:
   469                           	callstack 0
   470  00036B                     	ds	1
   471                           
   472                           	psect	cstackBANK3
   473  00036C                     __pcstackBANK3:
   474                           	callstack 0
   475  00036C                     main@amb:
   476                           	callstack 0
   477                           
   478                           ; 8 bytes @ 0x0
   479  00036C                     	ds	8
   480  000374                     main@amb_light:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x8
   484  000374                     	ds	2
   485  000376                     main@stop_signal:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xA
   489  000376                     	ds	1
   490  000377                     main@rgb:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0xB
   494  000377                     	ds	8
   495  00037F                     main@white:
   496                           	callstack 0
   497                           
   498                           ; 28 bytes @ 0x13
   499  00037F                     	ds	28
   500  00039B                     main@motorL:
   501                           	callstack 0
   502                           
   503                           ; 10 bytes @ 0x2F
   504  00039B                     	ds	10
   505  0003A5                     main@motorR:
   506                           	callstack 0
   507                           
   508                           ; 10 bytes @ 0x39
   509  0003A5                     	ds	10
   510                           
   511                           	psect	cstackBANK2
   512  000200                     __pcstackBANK2:
   513                           	callstack 0
   514  000200                     goback@buf2:
   515                           	callstack 0
   516                           
   517                           ; 100 bytes @ 0x0
   518  000200                     	ds	100
   519  000264                     action@buf:
   520                           	callstack 0
   521                           
   522                           ; 100 bytes @ 0x64
   523  000264                     	ds	100
   524  0002C8                     action@color:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0xC8
   528  0002C8                     	ds	1
   529                           
   530                           	psect	cstackBANK1
   531  000100                     __pcstackBANK1:
   532                           	callstack 0
   533  000100                     goback@buf:
   534                           	callstack 0
   535                           
   536                           ; 100 bytes @ 0x0
   537  000100                     	ds	100
   538  000164                     goback@buf3:
   539                           	callstack 0
   540                           
   541                           ; 100 bytes @ 0x64
   542  000164                     	ds	100
   543                           
   544                           	psect	cstackBANK0
   545  000060                     __pcstackBANK0:
   546                           	callstack 0
   547  000060                     ??___fltol:
   548  000060                     ?_sprintf:
   549                           	callstack 0
   550  000060                     sprintf@s:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554  000060                     	ds	2
   555  000062                     sprintf@fmt:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000062                     	ds	2
   560  000064                     ___fltol@sign1:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x4
   564  000064                     	ds	1
   565  000065                     ___fltol@exp1:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x5
   569  000065                     	ds	1
   570  000066                     ?_lroundf:
   571                           	callstack 0
   572  000066                     lroundf@x:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x6
   576  000066                     	ds	4
   577  00006A                     ?_amb_light_measure:
   578                           	callstack 0
   579  00006A                     compare@lower:
   580                           	callstack 0
   581  00006A                     amb_light_measure@amb:
   582                           	callstack 0
   583  00006A                     distance_measure@mL:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xA
   587  00006A                     	ds	2
   588  00006C                     ??_amb_light_measure:
   589  00006C                     compare@value2compare:
   590                           	callstack 0
   591  00006C                     distance_measure@mR:
   592                           	callstack 0
   593  00006C                     sprintf@ap:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0xC
   597  00006C                     	ds	2
   598  00006E                     compare@upper:
   599                           	callstack 0
   600  00006E                     amb_light_measure@upper_bound:
   601                           	callstack 0
   602  00006E                     distance_measure@amb_light:
   603                           	callstack 0
   604  00006E                     sprintf@f:
   605                           	callstack 0
   606                           
   607                           ; 11 bytes @ 0xE
   608  00006E                     	ds	2
   609  000070                     ??_distance_measure:
   610  000070                     compare@result:
   611                           	callstack 0
   612  000070                     amb_light_measure@CC_amb_ave:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x10
   616  000070                     	ds	1
   617  000071                     detect_color@m:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x11
   621  000071                     	ds	1
   622  000072                     amb_light_measure@CC_amb_1:
   623                           	callstack 0
   624  000072                     distance_measure@CG_amb:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x12
   628  000072                     	ds	1
   629  000073                     detect_color@w:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x13
   633  000073                     	ds	1
   634  000074                     amb_light_measure@CC_amb_2:
   635                           	callstack 0
   636  000074                     _distance_measure$3258:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x14
   640  000074                     	ds	1
   641  000075                     ??_detect_color:
   642                           
   643                           ; 1 bytes @ 0x15
   644  000075                     	ds	1
   645  000076                     amb_light_measure@CC_amb_3:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x16
   649  000076                     	ds	2
   650  000078                     distance_measure@CC_amb:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x18
   654  000078                     	ds	1
   655  000079                     detect_color@RG:
   656                           	callstack 0
   657  000079                     color_display@buf:
   658                           	callstack 0
   659  000079                     color_predict@buf:
   660                           	callstack 0
   661                           
   662                           ; 100 bytes @ 0x19
   663  000079                     	ds	1
   664  00007A                     distance_measure@threshold:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x1A
   668  00007A                     	ds	1
   669  00007B                     detect_color@RB:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x1B
   673  00007B                     	ds	1
   674  00007C                     distance_measure@stop:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1C
   678  00007C                     	ds	1
   679  00007D                     detect_color@GB:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x1D
   683  00007D                     	ds	2
   684  00007F                     detect_color@BC:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1F
   688  00007F                     	ds	2
   689  000081                     detect_color@GR:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x21
   693  000081                     	ds	2
   694  000083                     detect_color@RR:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x23
   698  000083                     	ds	2
   699  000085                     detect_color@BB:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x25
   703  000085                     	ds	2
   704  000087                     detect_color@GG:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x27
   708  000087                     	ds	2
   709  000089                     detect_color@BG:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x29
   713  000089                     	ds	2
   714  00008B                     detect_color@color:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x2B
   718  00008B                     	ds	1
   719  00008C                     detect_color@BR:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x2C
   723  00008C                     	ds	2
   724  00008E                     _detect_color$3257:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x2E
   728  00008E                     	ds	4
   729  000092                     verify_color@m:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x32
   733  000092                     	ds	2
   734  000094                     verify_color@w:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x34
   738  000094                     	ds	2
   739  000096                     ??_verify_color:
   740                           
   741                           ; 1 bytes @ 0x36
   742  000096                     	ds	2
   743  000098                     verify_color@color2:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x38
   747  000098                     	ds	2
   748  00009A                     verify_color@color:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x3A
   752  00009A                     	ds	67
   753  0000DD                     color_predict@color:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x7D
   757  0000DD                     	ds	1
   758  0000DE                     color_data_collection@i:
   759                           	callstack 0
   760  0000DE                     goback@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x7E
   764  0000DE                     	ds	2
   765  0000E0                     color_data_collection@j:
   766                           	callstack 0
   767  0000E0                     action@mL:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x80
   771  0000E0                     	ds	2
   772  0000E2                     color_data_collection@k:
   773                           	callstack 0
   774  0000E2                     action@mR:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x82
   778  0000E2                     	ds	2
   779  0000E4                     color_data_collection@x:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x84
   783  0000E4                     	ds	2
   784  0000E6                     test_function@m:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x86
   788  0000E6                     	ds	2
   789  0000E8                     test_function@w:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x88
   793  0000E8                     	ds	2
   794  0000EA                     test_function@mL:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x8A
   798  0000EA                     	ds	2
   799  0000EC                     test_function@mR:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x8C
   803  0000EC                     	ds	2
   804  0000EE                     ??_test_function:
   805                           
   806                           ; 1 bytes @ 0x8E
   807  0000EE                     	ds	2
   808  0000F0                     test_function@amb_light:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x90
   812  0000F0                     	ds	2
   813  0000F2                     test_function@complete:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x92
   817  0000F2                     	ds	1
   818  0000F3                     test_function@color:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x93
   822  0000F3                     	ds	1
   823  0000F4                     test_function@stop_signal:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x94
   827  0000F4                     	ds	1
   828  0000F5                     test_function@test_code:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x95
   832  0000F5                     	ds	1
   833  0000F6                     ??_main:
   834                           
   835                           ; 1 bytes @ 0x96
   836  0000F6                     	ds	2
   837                           
   838                           	psect	cstackCOMRAM
   839  000001                     __pcstackCOMRAM:
   840                           	callstack 0
   841  000001                     ??_LED_OFF:
   842  000001                     ??_LED_R:
   843  000001                     ??_LED_C:
   844  000001                     ??_LED_B:
   845  000001                     ??_LED_G:
   846  000001                     ??_I2C_2_Master_Idle:
   847  000001                     ?_strlen:
   848                           	callstack 0
   849  000001                     ?___wmul:
   850                           	callstack 0
   851  000001                     ?___fladd:
   852                           	callstack 0
   853  000001                     ?___flneg:
   854                           	callstack 0
   855  000001                     ?___xxtofl:
   856                           	callstack 0
   857  000001                     ?___aodiv:
   858                           	callstack 0
   859  000001                     ?___aomod:
   860                           	callstack 0
   861  000001                     toggle_light@toggletime:
   862                           	callstack 0
   863  000001                     sendCharSerial4@charToSend:
   864                           	callstack 0
   865  000001                     initDCmotorsPWM@PWMperiod:
   866                           	callstack 0
   867  000001                     initDCmotors_parameter@motorL:
   868                           	callstack 0
   869  000001                     ___wmul@multiplier:
   870                           	callstack 0
   871  000001                     fputc@c:
   872                           	callstack 0
   873  000001                     strlen@s:
   874                           	callstack 0
   875  000001                     ___flge@ff1:
   876                           	callstack 0
   877  000001                     ___flneg@f1:
   878                           	callstack 0
   879  000001                     ___fladd@b:
   880                           	callstack 0
   881  000001                     ___xxtofl@val:
   882                           	callstack 0
   883  000001                     ___aodiv@dividend:
   884                           	callstack 0
   885  000001                     ___aomod@dividend:
   886                           	callstack 0
   887                           
   888                           ; 8 bytes @ 0x0
   889  000001                     	ds	1
   890  000002                     ??_I2C_2_Master_Read:
   891  000002                     ??_toggle_light:
   892  000002                     I2C_2_Master_Write@data_byte:
   893                           	callstack 0
   894  000002                     sendStringSerial4@string:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x1
   898  000002                     	ds	1
   899  000003                     color_writetoaddr@value:
   900                           	callstack 0
   901  000003                     I2C_2_Master_Read@ack:
   902                           	callstack 0
   903  000003                     initDCmotors_parameter@motorR:
   904                           	callstack 0
   905  000003                     ___wmul@multiplicand:
   906                           	callstack 0
   907  000003                     fputc@fp:
   908                           	callstack 0
   909  000003                     strlen@a:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x2
   913  000003                     	ds	1
   914  000004                     toggle_light@i:
   915                           	callstack 0
   916  000004                     color_writetoaddr@address:
   917                           	callstack 0
   918  000004                     I2C_2_Master_Read@tmp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x3
   922  000004                     	ds	1
   923  000005                     ??_fputc:
   924  000005                     ??_color_click_init:
   925  000005                     ??___xxtofl:
   926  000005                     ?_color_read_Red:
   927                           	callstack 0
   928  000005                     ?_color_read_Blue:
   929                           	callstack 0
   930  000005                     ?_color_read_Green:
   931                           	callstack 0
   932  000005                     ?_color_read_Clear:
   933                           	callstack 0
   934  000005                     toggle_light@lightnumber:
   935                           	callstack 0
   936  000005                     ___wmul@product:
   937                           	callstack 0
   938  000005                     ___flge@ff2:
   939                           	callstack 0
   940  000005                     ___fladd@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x4
   944  000005                     	ds	2
   945  000007                     ??_color_read_Red:
   946  000007                     ??_color_read_Blue:
   947  000007                     ??_color_read_Green:
   948  000007                     ??_color_read_Clear:
   949  000007                     ?___awdiv:
   950                           	callstack 0
   951  000007                     ___awdiv@dividend:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x6
   955  000007                     	ds	2
   956  000009                     ??___fladd:
   957  000009                     ??___flge:
   958  000009                     ___xxtofl@sign:
   959                           	callstack 0
   960  000009                     ___awdiv@divisor:
   961                           	callstack 0
   962  000009                     ___aodiv@divisor:
   963                           	callstack 0
   964  000009                     ___aomod@divisor:
   965                           	callstack 0
   966                           
   967                           ; 8 bytes @ 0x8
   968  000009                     	ds	1
   969  00000A                     ___xxtofl@exp:
   970                           	callstack 0
   971  00000A                     color_read_Red@tmp:
   972                           	callstack 0
   973  00000A                     color_read_Blue@tmp:
   974                           	callstack 0
   975  00000A                     color_read_Green@tmp:
   976                           	callstack 0
   977  00000A                     color_read_Clear@tmp:
   978                           	callstack 0
   979  00000A                     fputs@s:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x9
   983  00000A                     	ds	1
   984  00000B                     ___awdiv@counter:
   985                           	callstack 0
   986  00000B                     ___xxtofl@arg:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0xA
   990  00000B                     	ds	1
   991  00000C                     ___awdiv@sign:
   992                           	callstack 0
   993  00000C                     read_color@m:
   994                           	callstack 0
   995  00000C                     calibrate_white@w:
   996                           	callstack 0
   997  00000C                     fputs@fp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xB
  1001  00000C                     	ds	1
  1002  00000D                     ___fladd@signs:
  1003                           	callstack 0
  1004  00000D                     ___awdiv@quotient:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xC
  1008  00000D                     	ds	1
  1009  00000E                     ??_calibrate_white:
  1010  00000E                     ___fladd@aexp:
  1011                           	callstack 0
  1012  00000E                     fputs@c:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0xD
  1016  00000E                     	ds	1
  1017  00000F                     ?___fldiv:
  1018                           	callstack 0
  1019  00000F                     ___fladd@bexp:
  1020                           	callstack 0
  1021  00000F                     setMotorPWM@m:
  1022                           	callstack 0
  1023  00000F                     fputs@i:
  1024                           	callstack 0
  1025  00000F                     ___fldiv@b:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0xE
  1029  00000F                     	ds	1
  1030  000010                     ___fladd@grs:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0xF
  1034  000010                     	ds	1
  1035  000011                     ??_setMotorPWM:
  1036  000011                     ?_pad:
  1037                           	callstack 0
  1038  000011                     ?___flsub:
  1039                           	callstack 0
  1040  000011                     ___aodiv@counter:
  1041                           	callstack 0
  1042  000011                     ___aomod@counter:
  1043                           	callstack 0
  1044  000011                     pad@fp:
  1045                           	callstack 0
  1046  000011                     ___flsub@b:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x10
  1050  000011                     	ds	1
  1051  000012                     ___aodiv@sign:
  1052                           	callstack 0
  1053  000012                     ___aomod@sign:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x11
  1057  000012                     	ds	1
  1058  000013                     ?_abs:
  1059                           	callstack 0
  1060  000013                     pad@buf:
  1061                           	callstack 0
  1062  000013                     abs@a:
  1063                           	callstack 0
  1064  000013                     ___fldiv@a:
  1065                           	callstack 0
  1066  000013                     ___aodiv@quotient:
  1067                           	callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x12
  1070  000013                     	ds	2
  1071  000015                     ??_abs:
  1072  000015                     pad@p:
  1073                           	callstack 0
  1074  000015                     ___flsub@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x14
  1078  000015                     	ds	2
  1079  000017                     ??___fldiv:
  1080  000017                     ??_pad:
  1081                           
  1082                           ; 1 bytes @ 0x16
  1083  000017                     	ds	1
  1084  000018                     setMotorPWM@PWMduty:
  1085                           	callstack 0
  1086  000018                     pad@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x17
  1090  000018                     	ds	1
  1091  000019                     
  1092                           ; 1 bytes @ 0x18
  1093  000019                     	ds	1
  1094  00001A                     stop@mL:
  1095                           	callstack 0
  1096  00001A                     fullSpeedAhead@mL:
  1097                           	callstack 0
  1098  00001A                     pad@w:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x19
  1102  00001A                     	ds	1
  1103  00001B                     ___fldiv@rem:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x1A
  1107  00001B                     	ds	1
  1108  00001C                     ?_dtoa:
  1109                           	callstack 0
  1110  00001C                     stop@mR:
  1111                           	callstack 0
  1112  00001C                     fullSpeedAhead@mR:
  1113                           	callstack 0
  1114  00001C                     dtoa@fp:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x1B
  1118  00001C                     	ds	2
  1119  00001E                     ??_stop:
  1120  00001E                     ??_fullSpeedAhead:
  1121  00001E                     dtoa@d:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x1D
  1125  00001E                     	ds	1
  1126  00001F                     ___fldiv@sign:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x1E
  1130  00001F                     	ds	1
  1131  000020                     turnLeft@mL:
  1132                           	callstack 0
  1133  000020                     turnRight@mL:
  1134                           	callstack 0
  1135  000020                     fullSpeedBack@mL:
  1136                           	callstack 0
  1137  000020                     ___fldiv@new_exp:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x1F
  1141  000020                     	ds	2
  1142  000022                     turnLeft@mR:
  1143                           	callstack 0
  1144  000022                     turnRight@mR:
  1145                           	callstack 0
  1146  000022                     fullSpeedBack@mR:
  1147                           	callstack 0
  1148  000022                     ___fldiv@grs:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x21
  1152  000022                     	ds	2
  1153  000024                     ??_fullSpeedBack:
  1154  000024                     turnLeft@angle_left:
  1155                           	callstack 0
  1156  000024                     turnRight@angle_right:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x23
  1160  000024                     	ds	1
  1161  000025                     ??_turnLeft:
  1162  000025                     ??_turnRight:
  1163                           
  1164                           ; 1 bytes @ 0x24
  1165  000025                     	ds	1
  1166  000026                     ??_dtoa:
  1167  000026                     ___fldiv@bexp:
  1168                           	callstack 0
  1169  000026                     turnLeft@delay_135:
  1170                           	callstack 0
  1171  000026                     turnRight@delay_135:
  1172                           	callstack 0
  1173  000026                     short_reverse@mL:
  1174                           	callstack 0
  1175  000026                     reverse_square@mL:
  1176                           	callstack 0
  1177  000026                     short_burst_back@mL:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x25
  1181  000026                     	ds	1
  1182  000027                     ___fldiv@aexp:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x26
  1186  000027                     	ds	1
  1187  000028                     ?___flmul:
  1188                           	callstack 0
  1189  000028                     turnLeft@delay_180:
  1190                           	callstack 0
  1191  000028                     turnRight@delay_180:
  1192                           	callstack 0
  1193  000028                     short_reverse@mR:
  1194                           	callstack 0
  1195  000028                     reverse_square@mR:
  1196                           	callstack 0
  1197  000028                     short_burst_back@mR:
  1198                           	callstack 0
  1199  000028                     ___flmul@b:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x27
  1203  000028                     	ds	2
  1204  00002A                     ??_short_burst_back:
  1205  00002A                     ??_short_reverse:
  1206  00002A                     ??_reverse_square:
  1207  00002A                     turnLeft@i:
  1208                           	callstack 0
  1209  00002A                     turnRight@i:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x29
  1213  00002A                     	ds	2
  1214  00002C                     turnLeft@i_1333:
  1215                           	callstack 0
  1216  00002C                     turnRight@i_1358:
  1217                           	callstack 0
  1218  00002C                     ___flmul@a:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x2B
  1222  00002C                     	ds	2
  1223  00002E                     turnLeft@i_1334:
  1224                           	callstack 0
  1225  00002E                     turnRight@i_1359:
  1226                           	callstack 0
  1227  00002E                     _dtoa$2895:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2D
  1231  00002E                     	ds	2
  1232  000030                     ??___flmul:
  1233  000030                     turnLeft@delay:
  1234                           	callstack 0
  1235  000030                     turnRight@delay:
  1236                           	callstack 0
  1237  000030                     dtoa@p:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x2F
  1241  000030                     	ds	2
  1242  000032                     dtoa@w:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x31
  1246  000032                     	ds	2
  1247  000034                     ___flmul@sign:
  1248                           	callstack 0
  1249  000034                     dtoa@s:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x33
  1253  000034                     	ds	1
  1254  000035                     ___flmul@grs:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x34
  1258  000035                     	ds	1
  1259  000036                     dtoa@n:
  1260                           	callstack 0
  1261                           
  1262                           ; 8 bytes @ 0x35
  1263  000036                     	ds	3
  1264  000039                     ___flmul@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x38
  1268  000039                     	ds	1
  1269  00003A                     ___flmul@bexp:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x39
  1273  00003A                     	ds	1
  1274  00003B                     ___flmul@prod:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x3A
  1278  00003B                     	ds	3
  1279  00003E                     dtoa@i:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x3D
  1283  00003E                     	ds	1
  1284  00003F                     ___flmul@temp:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x3E
  1288  00003F                     	ds	1
  1289  000040                     ?_vfpfcnvrt:
  1290                           	callstack 0
  1291  000040                     vfpfcnvrt@fp:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x3F
  1295  000040                     	ds	1
  1296  000041                     ?_roundf:
  1297                           	callstack 0
  1298  000041                     roundf@x:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x40
  1302  000041                     	ds	1
  1303  000042                     vfpfcnvrt@fmt:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x41
  1307  000042                     	ds	2
  1308  000044                     vfpfcnvrt@ap:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x43
  1312  000044                     	ds	1
  1313  000045                     ??_roundf:
  1314                           
  1315                           ; 1 bytes @ 0x44
  1316  000045                     	ds	1
  1317  000046                     ??_vfpfcnvrt:
  1318                           
  1319                           ; 1 bytes @ 0x45
  1320  000046                     	ds	2
  1321  000048                     vfpfcnvrt@ll:
  1322                           	callstack 0
  1323                           
  1324                           ; 8 bytes @ 0x47
  1325  000048                     	ds	1
  1326  000049                     _roundf$3260:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x48
  1330  000049                     	ds	4
  1331  00004D                     roundf@e:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x4C
  1335  00004D                     	ds	2
  1336  00004F                     _roundf$3259:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x4E
  1340  00004F                     	ds	1
  1341  000050                     ?_vfprintf:
  1342                           	callstack 0
  1343  000050                     vfprintf@fp:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x4F
  1347  000050                     	ds	2
  1348  000052                     vfprintf@fmt:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x51
  1352  000052                     	ds	1
  1353  000053                     roundf@u:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x52
  1357  000053                     	ds	1
  1358  000054                     vfprintf@ap:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x53
  1362  000054                     	ds	2
  1363  000056                     vfprintf@cfmt:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x55
  1367  000056                     	ds	1
  1368  000057                     roundf@y:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x56
  1372  000057                     	ds	1
  1373  000058                     color_display@m:
  1374                           	callstack 0
  1375  000058                     goback@mL:
  1376                           	callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x57
  1379  000058                     	ds	2
  1380  00005A                     color_data_collection@m:
  1381                           	callstack 0
  1382  00005A                     goback@mR:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x59
  1386  00005A                     	ds	1
  1387  00005B                     ?___fltol:
  1388                           	callstack 0
  1389  00005B                     ___fltol@f1:
  1390                           	callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x5A
  1393  00005B                     	ds	1
  1394  00005C                     ??_goback:
  1395  00005C                     ??_color_data_collection:
  1396                           
  1397                           ; 1 bytes @ 0x5B
  1398  00005C                     	ds	2
  1399  00005E                     
  1400                           ; 1 bytes @ 0x5D
  1401  00005E                     	ds	1
  1402  00005F                     
  1403                           ; 1 bytes @ 0x5E
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 29 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  white          28   19[BANK3 ] struct white_card
  1414 ;;  motorR         10   57[BANK3 ] struct DC_motor
  1415 ;;  motorL         10   47[BANK3 ] struct DC_motor
  1416 ;;  rgb             8   11[BANK3 ] struct color_rgb
  1417 ;;  amb             8    0[BANK3 ] struct color_rgb
  1418 ;;  amb_light       2    8[BANK3 ] unsigned int 
  1419 ;;  stop_signal     1   10[BANK3 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;      Locals:         0       0       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Totals:         0       2       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;Total ram usage:       69 bytes
  1434 ;; Hardware stack levels required when called: 12
  1435 ;; This function calls:
  1436 ;;		_I2C_2_Master_Init
  1437 ;;		_Interrupts_init
  1438 ;;		_Timer0_init
  1439 ;;		_action
  1440 ;;		_amb_light_measure
  1441 ;;		_buggylight_init
  1442 ;;		_calibrate_white
  1443 ;;		_color_click_init
  1444 ;;		_color_predict
  1445 ;;		_detect_color
  1446 ;;		_distance_measure
  1447 ;;		_fullSpeedAhead
  1448 ;;		_initDCmotorsPWM
  1449 ;;		_initDCmotors_parameter
  1450 ;;		_initUSART4
  1451 ;;		_pin_init
  1452 ;;		_short_burst_back
  1453 ;;		_stop
  1454 ;;		_test_function
  1455 ;;		_verify_color
  1456 ;; This function is called by:
  1457 ;;		Startup code after reset
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text0
  1462  0038D2                     __ptext0:
  1463                           	callstack 0
  1464  0038D2                     _main:
  1465                           	callstack 19
  1466  0038D2                     
  1467                           ;main.c: 32:     I2C_2_Master_Init();
  1468  0038D2  ECE5  F02C         	call	_I2C_2_Master_Init	;wreg free
  1469  0038D6                     
  1470                           ;main.c: 33:     color_click_init();
  1471  0038D6  EC9C  F02C         	call	_color_click_init	;wreg free
  1472  0038DA                     
  1473                           ;main.c: 34:     initDCmotorsPWM(199);
  1474  0038DA  0E00               	movlw	0
  1475  0038DC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1476  0038DE  0EC7               	movlw	199
  1477  0038E0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1478  0038E2  ECAA  F02B         	call	_initDCmotorsPWM	;wreg free
  1479  0038E6                     
  1480                           ;main.c: 35:     buggylight_init();
  1481  0038E6  ECBB  F02D         	call	_buggylight_init	;wreg free
  1482  0038EA                     
  1483                           ;main.c: 36:     initUSART4();
  1484  0038EA  EC91  F02D         	call	_initUSART4	;wreg free
  1485  0038EE                     
  1486                           ;main.c: 37:     Timer0_init();
  1487  0038EE  ECA0  F02D         	call	_Timer0_init	;wreg free
  1488  0038F2                     
  1489                           ;main.c: 38:     Interrupts_init();
  1490  0038F2  ECCC  F02D         	call	_Interrupts_init	;wreg free
  1491  0038F6                     
  1492                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1493  0038F6  EC71  F02D         	call	_pin_init	;wreg free
  1494  0038FA                     
  1495                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1496  0038FA  0E9B               	movlw	low main@motorL
  1497  0038FC  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1498  0038FE  0E03               	movlw	high main@motorL
  1499  003900  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1500  003902  0EA5               	movlw	low main@motorR
  1501  003904  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1502  003906  0E03               	movlw	high main@motorR
  1503  003908  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1504  00390A  EC39  F026         	call	_initDCmotors_parameter	;wreg free
  1505  00390E                     
  1506                           ;main.c: 49:     unsigned char stop_signal = 0;
  1507  00390E  0E00               	movlw	0
  1508  003910  0103               	movlb	3	; () banked
  1509  003912  6F76               	movwf	main@stop_signal& (0+255),b
  1510  003914                     
  1511                           ; BSR set to: 3
  1512                           ;main.c: 54:         calibrate_white(&white);
  1513  003914  0E7F               	movlw	low main@white
  1514  003916  6E0C               	movwf	calibrate_white@w^0,c
  1515  003918  0E03               	movlw	high main@white
  1516  00391A  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1517  00391C  EC64  F01B         	call	_calibrate_white	;wreg free
  1518  003920                     
  1519                           ;main.c: 55:         amb_light = amb_light_measure(&amb);
  1520  003920  0E6C               	movlw	low main@amb
  1521  003922  0100               	movlb	0	; () banked
  1522  003924  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1523  003926  0E03               	movlw	high main@amb
  1524  003928  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1525  00392A  EC9F  F024         	call	_amb_light_measure	;wreg free
  1526  00392E  C06A  F374         	movff	?_amb_light_measure,main@amb_light
  1527  003932  C06B  F375         	movff	?_amb_light_measure+1,main@amb_light+1
  1528  003936                     l5578:
  1529                           
  1530                           ;main.c: 66:             T0CON0bits.T0EN=1;
  1531  003936  8ED5               	bsf	213,7,c	;volatile
  1532  003938                     
  1533                           ;main.c: 67:             start_move = second;
  1534  003938  C368  F366         	movff	_second,_start_move
  1535  00393C  C369  F367         	movff	_second+1,_start_move+1
  1536                           
  1537                           ;main.c: 68:             while (stop_signal == 0){
  1538  003940  EFBD  F01C         	goto	l5586
  1539  003944                     l5582:
  1540                           
  1541                           ; BSR set to: 3
  1542                           ;main.c: 69:                 fullSpeedAhead(&motorL, &motorR);
  1543  003944  0E9B               	movlw	low main@motorL
  1544  003946  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1545  003948  0E03               	movlw	high main@motorL
  1546  00394A  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1547  00394C  0EA5               	movlw	low main@motorR
  1548  00394E  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1549  003950  0E03               	movlw	high main@motorR
  1550  003952  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1551  003954  ECED  F028         	call	_fullSpeedAhead	;wreg free
  1552  003958                     
  1553                           ;main.c: 70:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1554  003958  0E9B               	movlw	low main@motorL
  1555  00395A  0100               	movlb	0	; () banked
  1556  00395C  6F6A               	movwf	distance_measure@mL& (0+255),b
  1557  00395E  0E03               	movlw	high main@motorL
  1558  003960  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1559  003962  0EA5               	movlw	low main@motorR
  1560  003964  6F6C               	movwf	distance_measure@mR& (0+255),b
  1561  003966  0E03               	movlw	high main@motorR
  1562  003968  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1563  00396A  C374  F06E         	movff	main@amb_light,distance_measure@amb_light
  1564  00396E  C375  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1565  003972  EC07  F027         	call	_distance_measure	;wreg free
  1566  003976  0103               	movlb	3	; () banked
  1567  003978  6F76               	movwf	main@stop_signal& (0+255),b
  1568  00397A                     l5586:
  1569                           
  1570                           ;main.c: 68:             while (stop_signal == 0){
  1571  00397A  0103               	movlb	3	; () banked
  1572  00397C  5176               	movf	main@stop_signal& (0+255),w,b
  1573  00397E  B4D8               	btfsc	status,2,c
  1574  003980  EFC4  F01C         	goto	u5571
  1575  003984  EFC6  F01C         	goto	u5570
  1576  003988                     u5571:
  1577  003988  EFA2  F01C         	goto	l5582
  1578  00398C                     u5570:
  1579  00398C                     
  1580                           ; BSR set to: 3
  1581                           ;main.c: 72:             T0CON0bits.T0EN=0;
  1582  00398C  9ED5               	bcf	213,7,c	;volatile
  1583                           
  1584                           ;main.c: 73:             stop_move = second;
  1585  00398E  C368  F364         	movff	_second,_stop_move
  1586  003992  C369  F365         	movff	_second+1,_stop_move+1
  1587  003996                     
  1588                           ; BSR set to: 3
  1589                           ;main.c: 74:             if ((stop_move-start_move)>1){
  1590  003996  5166               	movf	_start_move& (0+255),w,b
  1591  003998  5D64               	subwf	_stop_move& (0+255),w,b
  1592  00399A  0100               	movlb	0	; () banked
  1593  00399C  6FF6               	movwf	??_main& (0+255),b
  1594  00399E  0103               	movlb	3	; () banked
  1595  0039A0  5167               	movf	(_start_move+1)& (0+255),w,b
  1596  0039A2  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1597  0039A4  0100               	movlb	0	; () banked
  1598  0039A6  6FF7               	movwf	(??_main+1)& (0+255),b
  1599  0039A8  51F7               	movf	(??_main+1)& (0+255),w,b
  1600  0039AA  E109               	bnz	u5580
  1601  0039AC  0E02               	movlw	2
  1602  0039AE  5DF6               	subwf	??_main& (0+255),w,b
  1603  0039B0  A0D8               	btfss	status,0,c
  1604  0039B2  EFDD  F01C         	goto	u5581
  1605  0039B6  EFDF  F01C         	goto	u5580
  1606  0039BA                     u5581:
  1607  0039BA  EF0A  F01D         	goto	l5600
  1608  0039BE                     u5580:
  1609  0039BE                     
  1610                           ; BSR set to: 0
  1611                           ;main.c: 75:                 memory[array_index] = (stop_move-start_move);
  1612  0039BE  0103               	movlb	3	; () banked
  1613  0039C0  5166               	movf	_start_move& (0+255),w,b
  1614  0039C2  5D64               	subwf	_stop_move& (0+255),w,b
  1615  0039C4  0100               	movlb	0	; () banked
  1616  0039C6  6FF6               	movwf	??_main& (0+255),b
  1617  0039C8  0103               	movlb	3	; () banked
  1618  0039CA  5167               	movf	(_start_move+1)& (0+255),w,b
  1619  0039CC  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1620  0039CE  0100               	movlb	0	; () banked
  1621  0039D0  6FF7               	movwf	(??_main+1)& (0+255),b
  1622  0039D2  0103               	movlb	3	; () banked
  1623  0039D4  516B               	movf	_array_index& (0+255),w,b
  1624  0039D6  0D02               	mullw	2
  1625  0039D8  0E3C               	movlw	low _memory
  1626  0039DA  24F3               	addwf	243,w,c
  1627  0039DC  6ED9               	movwf	fsr2l,c
  1628  0039DE  0E03               	movlw	high _memory
  1629  0039E0  20F4               	addwfc	prodh,w,c
  1630  0039E2  6EDA               	movwf	fsr2h,c
  1631  0039E4  C0F6  FFDE         	movff	??_main,postinc2
  1632  0039E8  C0F7  FFDD         	movff	??_main+1,postdec2
  1633  0039EC                     
  1634                           ; BSR set to: 3
  1635                           ;main.c: 76:                 color_predict(array_index);
  1636  0039EC  516B               	movf	_array_index& (0+255),w,b
  1637  0039EE  ECCE  F02C         	call	_color_predict
  1638  0039F2                     
  1639                           ;main.c: 77:                 color_predict(memory[array_index]);
  1640  0039F2  0103               	movlb	3	; () banked
  1641  0039F4  516B               	movf	_array_index& (0+255),w,b
  1642  0039F6  0D02               	mullw	2
  1643  0039F8  0E3C               	movlw	low _memory
  1644  0039FA  24F3               	addwf	243,w,c
  1645  0039FC  6ED9               	movwf	fsr2l,c
  1646  0039FE  0E03               	movlw	high _memory
  1647  003A00  20F4               	addwfc	prodh,w,c
  1648  003A02  6EDA               	movwf	fsr2h,c
  1649  003A04  50DF               	movf	indf2,w,c
  1650  003A06  ECCE  F02C         	call	_color_predict
  1651  003A0A                     
  1652                           ;main.c: 78:                 color_predict(200);
  1653  003A0A  0EC8               	movlw	200
  1654  003A0C  ECCE  F02C         	call	_color_predict
  1655  003A10                     
  1656                           ;main.c: 79:                 array_index++;
  1657  003A10  0103               	movlb	3	; () banked
  1658  003A12  2B6B               	incf	_array_index& (0+255),f,b
  1659  003A14                     l5600:
  1660                           
  1661                           ;main.c: 81:             stop(&motorL, &motorR);
  1662  003A14  0E9B               	movlw	low main@motorL
  1663  003A16  6E1A               	movwf	stop@mL^0,c
  1664  003A18  0E03               	movlw	high main@motorL
  1665  003A1A  6E1B               	movwf	(stop@mL+1)^0,c
  1666  003A1C  0EA5               	movlw	low main@motorR
  1667  003A1E  6E1C               	movwf	stop@mR^0,c
  1668  003A20  0E03               	movlw	high main@motorR
  1669  003A22  6E1D               	movwf	(stop@mR+1)^0,c
  1670  003A24  EC8F  F028         	call	_stop	;wreg free
  1671  003A28                     
  1672                           ;main.c: 82:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1673  003A28  0E52               	movlw	82
  1674  003A2A  0100               	movlb	0	; () banked
  1675  003A2C  6FF7               	movwf	(??_main+1)& (0+255),b
  1676  003A2E  0E2B               	movlw	43
  1677  003A30  6FF6               	movwf	??_main& (0+255),b
  1678  003A32  0E00               	movlw	0
  1679  003A34                     u5667:
  1680  003A34  2EE8               	decfsz	wreg,f,c
  1681  003A36  D7FE               	bra	u5667
  1682  003A38  2FF6               	decfsz	??_main& (0+255),f,b
  1683  003A3A  D7FC               	bra	u5667
  1684  003A3C  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1685  003A3E  D7FA               	bra	u5667
  1686  003A40  F000               	nop	
  1687  003A42                     
  1688                           ;main.c: 83:             short_burst_back(&motorL, &motorR);
  1689  003A42  0E9B               	movlw	low main@motorL
  1690  003A44  6E26               	movwf	short_burst_back@mL^0,c
  1691  003A46  0E03               	movlw	high main@motorL
  1692  003A48  6E27               	movwf	(short_burst_back@mL+1)^0,c
  1693  003A4A  0EA5               	movlw	low main@motorR
  1694  003A4C  6E28               	movwf	short_burst_back@mR^0,c
  1695  003A4E  0E03               	movlw	high main@motorR
  1696  003A50  6E29               	movwf	(short_burst_back@mR+1)^0,c
  1697  003A52  ECE4  F029         	call	_short_burst_back	;wreg free
  1698  003A56                     
  1699                           ;main.c: 84:             color = detect_color(&rgb, &white);
  1700  003A56  0E77               	movlw	low main@rgb
  1701  003A58  0100               	movlb	0	; () banked
  1702  003A5A  6F71               	movwf	detect_color@m& (0+255),b
  1703  003A5C  0E03               	movlw	high main@rgb
  1704  003A5E  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1705  003A60  0E7F               	movlw	low main@white
  1706  003A62  6F73               	movwf	detect_color@w& (0+255),b
  1707  003A64  0E03               	movlw	high main@white
  1708  003A66  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1709  003A68  EC23  F007         	call	_detect_color	;wreg free
  1710  003A6C  0103               	movlb	3	; () banked
  1711  003A6E  6F6A               	movwf	_color& (0+255),b
  1712  003A70                     
  1713                           ; BSR set to: 3
  1714                           ;main.c: 85:             color = verify_color(color, &rgb, &white);
  1715  003A70  0E77               	movlw	low main@rgb
  1716  003A72  0100               	movlb	0	; () banked
  1717  003A74  6F92               	movwf	verify_color@m& (0+255),b
  1718  003A76  0E03               	movlw	high main@rgb
  1719  003A78  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1720  003A7A  0E7F               	movlw	low main@white
  1721  003A7C  6F94               	movwf	verify_color@w& (0+255),b
  1722  003A7E  0E03               	movlw	high main@white
  1723  003A80  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1724  003A82  0103               	movlb	3	; () banked
  1725  003A84  516A               	movf	_color& (0+255),w,b
  1726  003A86  EC37  F029         	call	_verify_color
  1727  003A8A  0103               	movlb	3	; () banked
  1728  003A8C  6F6A               	movwf	_color& (0+255),b
  1729  003A8E                     
  1730                           ; BSR set to: 3
  1731                           ;main.c: 88:             action(color, &motorL, &motorR);
  1732  003A8E  0E9B               	movlw	low main@motorL
  1733  003A90  0100               	movlb	0	; () banked
  1734  003A92  6FE0               	movwf	action@mL& (0+255),b
  1735  003A94  0E03               	movlw	high main@motorL
  1736  003A96  6FE1               	movwf	(action@mL+1)& (0+255),b
  1737  003A98  0EA5               	movlw	low main@motorR
  1738  003A9A  6FE2               	movwf	action@mR& (0+255),b
  1739  003A9C  0E03               	movlw	high main@motorR
  1740  003A9E  6FE3               	movwf	(action@mR+1)& (0+255),b
  1741  003AA0  0103               	movlb	3	; () banked
  1742  003AA2  516A               	movf	_color& (0+255),w,b
  1743  003AA4  EC15  F017         	call	_action
  1744  003AA8                     
  1745                           ;main.c: 89:             color = 0;
  1746  003AA8  0E00               	movlw	0
  1747  003AAA  0103               	movlb	3	; () banked
  1748  003AAC  6F6A               	movwf	_color& (0+255),b
  1749  003AAE                     
  1750                           ; BSR set to: 3
  1751                           ;main.c: 90:             stop_signal = 0;
  1752  003AAE  0E00               	movlw	0
  1753  003AB0  6F76               	movwf	main@stop_signal& (0+255),b
  1754  003AB2  EF9B  F01C         	goto	l5578
  1755  003AB6  EF14  F000         	goto	start
  1756  003ABA                     __end_of_main:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _verify_color *****************
  1760 ;; Defined at:
  1761 ;;		line 362 in file "color.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  color           1    wreg     unsigned char 
  1764 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1765 ;;		 -> main@rgb(8), 
  1766 ;;  w               2   52[BANK0 ] PTR struct white_card
  1767 ;;		 -> main@white(28), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  color           1   58[BANK0 ] unsigned char 
  1770 ;;  color2          2   56[BANK0 ] unsigned int 
  1771 ;;  color3          2    0        unsigned int 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      unsigned char 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;Total ram usage:        9 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 6
  1788 ;; This function calls:
  1789 ;;		_detect_color
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text1
  1796  00526E                     __ptext1:
  1797                           	callstack 0
  1798  00526E                     _verify_color:
  1799                           	callstack 24
  1800                           
  1801                           ; BSR set to: 3
  1802                           ;incstack = 0
  1803                           ;verify_color@color stored from wreg
  1804  00526E  0100               	movlb	0	; () banked
  1805  005270  6F9A               	movwf	verify_color@color& (0+255),b
  1806  005272                     
  1807                           ;color.c: 362: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 363: {;color.c: 364:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1808  005272  0E05               	movlw	5
  1809  005274  0100               	movlb	0	; () banked
  1810  005276  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1811  005278  0E0F               	movlw	15
  1812  00527A  6F96               	movwf	??_verify_color& (0+255),b
  1813  00527C  0EF1               	movlw	241
  1814  00527E                     u5677:
  1815  00527E  2EE8               	decfsz	wreg,f,c
  1816  005280  D7FE               	bra	u5677
  1817  005282  2F96               	decfsz	??_verify_color& (0+255),f,b
  1818  005284  D7FC               	bra	u5677
  1819  005286  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1820  005288  D7FA               	bra	u5677
  1821  00528A                     
  1822                           ;color.c: 365:     unsigned int color2, color3;;color.c: 366:     color2 = detect_color(
      +                          m,w);
  1823  00528A  C092  F071         	movff	verify_color@m,detect_color@m
  1824  00528E  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1825  005292  C094  F073         	movff	verify_color@w,detect_color@w
  1826  005296  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1827  00529A  EC23  F007         	call	_detect_color	;wreg free
  1828  00529E  0100               	movlb	0	; () banked
  1829  0052A0  6F96               	movwf	??_verify_color& (0+255),b
  1830  0052A2  5196               	movf	??_verify_color& (0+255),w,b
  1831  0052A4  6F98               	movwf	verify_color@color2& (0+255),b
  1832  0052A6  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1833  0052A8                     
  1834                           ; BSR set to: 0
  1835                           ;color.c: 367:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1836  0052A8  0E05               	movlw	5
  1837  0052AA  0100               	movlb	0	; () banked
  1838  0052AC  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1839  0052AE  0E0F               	movlw	15
  1840  0052B0  6F96               	movwf	??_verify_color& (0+255),b
  1841  0052B2  0EF1               	movlw	241
  1842  0052B4                     u5687:
  1843  0052B4  2EE8               	decfsz	wreg,f,c
  1844  0052B6  D7FE               	bra	u5687
  1845  0052B8  2F96               	decfsz	??_verify_color& (0+255),f,b
  1846  0052BA  D7FC               	bra	u5687
  1847  0052BC  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1848  0052BE  D7FA               	bra	u5687
  1849  0052C0                     
  1850                           ;color.c: 369:     if (color == color2){return color;}
  1851  0052C0  0100               	movlb	0	; () banked
  1852  0052C2  519A               	movf	verify_color@color& (0+255),w,b
  1853  0052C4  6F96               	movwf	??_verify_color& (0+255),b
  1854  0052C6  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1855  0052C8  5198               	movf	verify_color@color2& (0+255),w,b
  1856  0052CA  1996               	xorwf	??_verify_color& (0+255),w,b
  1857  0052CC  E107               	bnz	u5321
  1858  0052CE  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1859  0052D0  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1860  0052D2  A4D8               	btfss	status,2,c
  1861  0052D4  EF6E  F029         	goto	u5321
  1862  0052D8  EF70  F029         	goto	u5320
  1863  0052DC                     u5321:
  1864  0052DC  EF73  F029         	goto	l5320
  1865  0052E0                     u5320:
  1866  0052E0                     
  1867                           ; BSR set to: 0
  1868  0052E0  519A               	movf	verify_color@color& (0+255),w,b
  1869  0052E2  EF74  F029         	goto	l167
  1870  0052E6                     l5320:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;color.c: 372:         return color;}
  1874  0052E6  0E00               	movlw	0
  1875  0052E8                     l167:
  1876                           
  1877                           ; BSR set to: 0
  1878  0052E8  0012               	return		;funcret
  1879  0052EA                     __end_of_verify_color:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _test_function *****************
  1883 ;; Defined at:
  1884 ;;		line 16 in file "test_and_calibration.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  test_code       1    wreg     unsigned char 
  1887 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1888 ;;		 -> main@rgb(8), 
  1889 ;;  w               2  136[BANK0 ] PTR struct white_card
  1890 ;;		 -> main@white(28), 
  1891 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1892 ;;		 -> main@motorL(10), 
  1893 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1894 ;;		 -> main@motorR(10), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  test_code       1  149[BANK0 ] unsigned char 
  1897 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1898 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1899 ;;  color           1  147[BANK0 ] unsigned char 
  1900 ;;  complete        1  146[BANK0 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1910 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;Total ram usage:       16 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 11
  1917 ;; This function calls:
  1918 ;;		_LED_C
  1919 ;;		_amb_light_measure
  1920 ;;		_calibrate_white
  1921 ;;		_color_data_collection
  1922 ;;		_color_display
  1923 ;;		_color_predict
  1924 ;;		_detect_color
  1925 ;;		_distance_measure
  1926 ;;		_fullSpeedAhead
  1927 ;;		_read_color
  1928 ;;		_stop
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text2
  1935  0044C8                     __ptext2:
  1936                           	callstack 0
  1937  0044C8                     _test_function:
  1938                           	callstack 19
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;incstack = 0
  1942                           ;test_function@test_code stored from wreg
  1943  0044C8  0100               	movlb	0	; () banked
  1944  0044CA  6FF5               	movwf	test_function@test_code& (0+255),b
  1945  0044CC                     
  1946                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1947  0044CC  0E00               	movlw	0
  1948  0044CE  0100               	movlb	0	; () banked
  1949  0044D0  6FF2               	movwf	test_function@complete& (0+255),b
  1950                           
  1951                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1952  0044D2  0E00               	movlw	0
  1953  0044D4  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1954                           
  1955                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1956  0044D6  0E00               	movlw	0
  1957  0044D8  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1958  0044DA  0E00               	movlw	0
  1959  0044DC  6FF0               	movwf	test_function@amb_light& (0+255),b
  1960  0044DE                     
  1961                           ; BSR set to: 0
  1962                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1963  0044DE  0E02               	movlw	2
  1964  0044E0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1965  0044E2  A4D8               	btfss	status,2,c
  1966  0044E4  EF76  F022         	goto	u5351
  1967  0044E8  EF78  F022         	goto	u5350
  1968  0044EC                     u5351:
  1969  0044EC  EF7E  F022         	goto	l5380
  1970  0044F0                     u5350:
  1971  0044F0                     
  1972                           ; BSR set to: 0
  1973  0044F0  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1974  0044F4  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1975  0044F8  EC64  F01B         	call	_calibrate_white	;wreg free
  1976  0044FC                     l5380:
  1977                           
  1978                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1979  0044FC  0E04               	movlw	4
  1980  0044FE  0100               	movlb	0	; () banked
  1981  004500  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1982  004502  A4D8               	btfss	status,2,c
  1983  004504  EF86  F022         	goto	u5361
  1984  004508  EF88  F022         	goto	u5360
  1985  00450C                     u5361:
  1986  00450C  EF92  F022         	goto	l5384
  1987  004510                     u5360:
  1988  004510                     
  1989                           ; BSR set to: 0
  1990  004510  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1991  004514  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1992  004518  EC9F  F024         	call	_amb_light_measure	;wreg free
  1993  00451C  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1994  004520  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1995  004524                     l5384:
  1996                           
  1997                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1998  004524  0100               	movlb	0	; () banked
  1999  004526  05F5               	decf	test_function@test_code& (0+255),w,b
  2000  004528  A4D8               	btfss	status,2,c
  2001  00452A  EF99  F022         	goto	u5371
  2002  00452E  EF9B  F022         	goto	u5370
  2003  004532                     u5371:
  2004  004532  EFA9  F022         	goto	l5392
  2005  004536                     u5370:
  2006  004536                     
  2007                           ; BSR set to: 0
  2008                           ;test_and_calibration.c: 29:             LED_C();
  2009  004536  EC61  F02D         	call	_LED_C	;wreg free
  2010  00453A                     
  2011                           ;test_and_calibration.c: 30:             read_color(m);
  2012  00453A  C0E6  F00C         	movff	test_function@m,read_color@m
  2013  00453E  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2014  004542  EC4C  F02A         	call	_read_color	;wreg free
  2015  004546                     
  2016                           ;test_and_calibration.c: 31:             color_display(m);
  2017  004546  C0E6  F058         	movff	test_function@m,color_display@m
  2018  00454A  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2019  00454E  EC75  F029         	call	_color_display	;wreg free
  2020  004552                     l5392:
  2021                           
  2022                           ;test_and_calibration.c: 34:         if (test_code == 2){
  2023  004552  0E02               	movlw	2
  2024  004554  0100               	movlb	0	; () banked
  2025  004556  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2026  004558  A4D8               	btfss	status,2,c
  2027  00455A  EFB1  F022         	goto	u5381
  2028  00455E  EFB3  F022         	goto	u5380
  2029  004562                     u5381:
  2030  004562  EFC2  F022         	goto	l5398
  2031  004566                     u5380:
  2032  004566                     
  2033                           ; BSR set to: 0
  2034                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  2035  004566  C0E6  F071         	movff	test_function@m,detect_color@m
  2036  00456A  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2037  00456E  C0E8  F073         	movff	test_function@w,detect_color@w
  2038  004572  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2039  004576  EC23  F007         	call	_detect_color	;wreg free
  2040  00457A  0100               	movlb	0	; () banked
  2041  00457C  6FF3               	movwf	test_function@color& (0+255),b
  2042  00457E                     
  2043                           ; BSR set to: 0
  2044                           ;test_and_calibration.c: 37:             color_predict(color);
  2045  00457E  51F3               	movf	test_function@color& (0+255),w,b
  2046  004580  ECCE  F02C         	call	_color_predict
  2047  004584                     l5398:
  2048                           
  2049                           ;test_and_calibration.c: 40:         if (test_code == 3){
  2050  004584  0E03               	movlw	3
  2051  004586  0100               	movlb	0	; () banked
  2052  004588  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2053  00458A  A4D8               	btfss	status,2,c
  2054  00458C  EFCA  F022         	goto	u5391
  2055  004590  EFCC  F022         	goto	u5390
  2056  004594                     u5391:
  2057  004594  EFDF  F022         	goto	l5408
  2058  004598                     u5390:
  2059  004598  EFD7  F022         	goto	l5406
  2060  00459C                     l5402:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  2064  00459C  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  2065  0045A0  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2066  0045A4  EC47  F01E         	call	_color_data_collection	;wreg free
  2067  0045A8                     
  2068                           ;test_and_calibration.c: 43:                 complete = 1;
  2069  0045A8  0E01               	movlw	1
  2070  0045AA  0100               	movlb	0	; () banked
  2071  0045AC  6FF2               	movwf	test_function@complete& (0+255),b
  2072  0045AE                     l5406:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;test_and_calibration.c: 41:             while (complete == 0){
  2076  0045AE  51F2               	movf	test_function@complete& (0+255),w,b
  2077  0045B0  B4D8               	btfsc	status,2,c
  2078  0045B2  EFDD  F022         	goto	u5401
  2079  0045B6  EFDF  F022         	goto	u5400
  2080  0045BA                     u5401:
  2081  0045BA  EFCE  F022         	goto	l5402
  2082  0045BE                     u5400:
  2083  0045BE                     l5408:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;test_and_calibration.c: 47:         if (test_code == 4){
  2087  0045BE  0E04               	movlw	4
  2088  0045C0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2089  0045C2  A4D8               	btfss	status,2,c
  2090  0045C4  EFE6  F022         	goto	u5411
  2091  0045C8  EFE8  F022         	goto	u5410
  2092  0045CC                     u5411:
  2093  0045CC  EF92  F022         	goto	l5384
  2094  0045D0                     u5410:
  2095  0045D0  EF04  F023         	goto	l5416
  2096  0045D4                     l5412:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  2100  0045D4  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  2101  0045D8  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  2102  0045DC  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  2103  0045E0  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  2104  0045E4  ECED  F028         	call	_fullSpeedAhead	;wreg free
  2105  0045E8                     
  2106                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  2107  0045E8  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  2108  0045EC  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  2109  0045F0  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  2110  0045F4  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  2111  0045F8  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  2112  0045FC  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  2113  004600  EC07  F027         	call	_distance_measure	;wreg free
  2114  004604  0100               	movlb	0	; () banked
  2115  004606  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2116  004608                     l5416:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  2120  004608  51F4               	movf	test_function@stop_signal& (0+255),w,b
  2121  00460A  B4D8               	btfsc	status,2,c
  2122  00460C  EF0A  F023         	goto	u5421
  2123  004610  EF0C  F023         	goto	u5420
  2124  004614                     u5421:
  2125  004614  EFEA  F022         	goto	l5412
  2126  004618                     u5420:
  2127  004618                     
  2128                           ; BSR set to: 0
  2129                           ;test_and_calibration.c: 52:             stop(mL, mR);
  2130  004618  C0EA  F01A         	movff	test_function@mL,stop@mL
  2131  00461C  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  2132  004620  C0EC  F01C         	movff	test_function@mR,stop@mR
  2133  004624  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  2134  004628  EC8F  F028         	call	_stop	;wreg free
  2135  00462C                     
  2136                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  2137  00462C  0E52               	movlw	82
  2138  00462E  0100               	movlb	0	; () banked
  2139  004630  6FEF               	movwf	(??_test_function+1)& (0+255),b
  2140  004632  0E2B               	movlw	43
  2141  004634  6FEE               	movwf	??_test_function& (0+255),b
  2142  004636  0E00               	movlw	0
  2143  004638                     u5697:
  2144  004638  2EE8               	decfsz	wreg,f,c
  2145  00463A  D7FE               	bra	u5697
  2146  00463C  2FEE               	decfsz	??_test_function& (0+255),f,b
  2147  00463E  D7FC               	bra	u5697
  2148  004640  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  2149  004642  D7FA               	bra	u5697
  2150  004644  F000               	nop	
  2151  004646                     
  2152                           ;test_and_calibration.c: 54:             stop_signal = 0;
  2153  004646  0E00               	movlw	0
  2154  004648  0100               	movlb	0	; () banked
  2155  00464A  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2156  00464C  EF92  F022         	goto	l5384
  2157  004650  0012               	return		;funcret
  2158  004652                     __end_of_test_function:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _distance_measure *****************
  2162 ;; Defined at:
  2163 ;;		line 398 in file "color.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2166 ;;		 -> main@motorL(10), 
  2167 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2168 ;;		 -> main@motorR(10), 
  2169 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  threshold       2   26[BANK0 ] unsigned int 
  2172 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2173 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2174 ;;  stop            1   28[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;Total ram usage:       19 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 5
  2191 ;; This function calls:
  2192 ;;		_LED_C
  2193 ;;		___flmul
  2194 ;;		___xxtofl
  2195 ;;		_color_read_Clear
  2196 ;;		_color_read_Green
  2197 ;;		_lroundf
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;;		_test_function
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text3
  2205  004E0E                     __ptext3:
  2206                           	callstack 0
  2207  004E0E                     _distance_measure:
  2208                           	callstack 24
  2209  004E0E  0E00               	movlw	0
  2210  004E10  0100               	movlb	0	; () banked
  2211  004E12  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2212  004E14  0E00               	movlw	0
  2213  004E16  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2214                           
  2215                           ;color.c: 401:     unsigned char stop = 0;
  2216  004E18  0E00               	movlw	0
  2217  004E1A  6F7C               	movwf	distance_measure@stop& (0+255),b
  2218                           
  2219                           ;color.c: 402:     unsigned int threshold = 0;
  2220  004E1C  0E00               	movlw	0
  2221  004E1E  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2222  004E20  0E00               	movlw	0
  2223  004E22  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2224  004E24                     
  2225                           ; BSR set to: 0
  2226                           ;color.c: 403:     LED_C();
  2227  004E24  EC61  F02D         	call	_LED_C	;wreg free
  2228  004E28                     
  2229                           ;color.c: 404:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2230  004E28  0E09               	movlw	9
  2231  004E2A  0100               	movlb	0	; () banked
  2232  004E2C  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2233  004E2E  0E1E               	movlw	30
  2234  004E30  6F70               	movwf	??_distance_measure& (0+255),b
  2235  004E32  0EE4               	movlw	228
  2236  004E34                     u5707:
  2237  004E34  2EE8               	decfsz	wreg,f,c
  2238  004E36  D7FE               	bra	u5707
  2239  004E38  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2240  004E3A  D7FC               	bra	u5707
  2241  004E3C  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2242  004E3E  D7FA               	bra	u5707
  2243  004E40  F000               	nop	
  2244  004E42                     
  2245                           ;color.c: 405:     CC_amb = color_read_Clear();
  2246  004E42  EC1C  F02B         	call	_color_read_Clear	;wreg free
  2247  004E46  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2248  004E4A  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2249  004E4E  ECCC  F02A         	call	_color_read_Green	;wreg free
  2250  004E52                     
  2251                           ;color.c: 407:     threshold = lroundf((float)amb_light * 1.05);
  2252  004E52  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2253  004E56  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2254  004E5A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2255  004E5C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2256  004E5E  0E00               	movlw	0
  2257  004E60  EC22  F01F         	call	___xxtofl
  2258  004E64  C001  F028         	movff	?___xxtofl,___flmul@b
  2259  004E68  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2260  004E6C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2261  004E70  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2262  004E74  0E66               	movlw	102
  2263  004E76  6E2C               	movwf	___flmul@a^0,c
  2264  004E78  0E66               	movlw	102
  2265  004E7A  6E2D               	movwf	(___flmul@a+1)^0,c
  2266  004E7C  0E86               	movlw	134
  2267  004E7E  6E2E               	movwf	(___flmul@a+2)^0,c
  2268  004E80  0E3F               	movlw	63
  2269  004E82  6E2F               	movwf	(___flmul@a+3)^0,c
  2270  004E84  ECA6  F00F         	call	___flmul	;wreg free
  2271  004E88  C028  F074         	movff	?___flmul,_distance_measure$3258
  2272  004E8C  C029  F075         	movff	?___flmul+1,_distance_measure$3258+1
  2273  004E90  C02A  F076         	movff	?___flmul+2,_distance_measure$3258+2
  2274  004E94  C02B  F077         	movff	?___flmul+3,_distance_measure$3258+3
  2275  004E98                     
  2276                           ;color.c: 407:     threshold = lroundf((float)amb_light * 1.05);
  2277  004E98  C074  F066         	movff	_distance_measure$3258,lroundf@x
  2278  004E9C  C075  F067         	movff	_distance_measure$3258+1,lroundf@x+1
  2279  004EA0  C076  F068         	movff	_distance_measure$3258+2,lroundf@x+2
  2280  004EA4  C077  F069         	movff	_distance_measure$3258+3,lroundf@x+3
  2281  004EA8  EC48  F02C         	call	_lroundf	;wreg free
  2282  004EAC  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2283  004EB0  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2284  004EB4                     
  2285                           ;color.c: 410:     if (CC_amb >= threshold){stop = 1;}
  2286  004EB4  0100               	movlb	0	; () banked
  2287  004EB6  517A               	movf	distance_measure@threshold& (0+255),w,b
  2288  004EB8  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2289  004EBA  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2290  004EBC  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2291  004EBE  A0D8               	btfss	status,0,c
  2292  004EC0  EF64  F027         	goto	u5221
  2293  004EC4  EF66  F027         	goto	u5220
  2294  004EC8                     u5221:
  2295  004EC8  EF68  F027         	goto	l174
  2296  004ECC                     u5220:
  2297  004ECC                     
  2298                           ; BSR set to: 0
  2299  004ECC  0E01               	movlw	1
  2300  004ECE  6F7C               	movwf	distance_measure@stop& (0+255),b
  2301  004ED0                     l174:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;color.c: 411:     return stop;
  2305  004ED0  517C               	movf	distance_measure@stop& (0+255),w,b
  2306  004ED2                     
  2307                           ; BSR set to: 0
  2308  004ED2  0012               	return		;funcret
  2309  004ED4                     __end_of_distance_measure:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _detect_color *****************
  2313 ;; Defined at:
  2314 ;;		line 287 in file "color.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2317 ;;		 -> main@rgb(8), 
  2318 ;;  w               2   19[BANK0 ] PTR struct white_card
  2319 ;;		 -> main@white(28), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  buf           100    0        unsigned char [100]
  2322 ;;  BR              2   44[BANK0 ] unsigned int 
  2323 ;;  BG              2   41[BANK0 ] unsigned int 
  2324 ;;  GG              2   39[BANK0 ] unsigned int 
  2325 ;;  BB              2   37[BANK0 ] unsigned int 
  2326 ;;  RR              2   35[BANK0 ] unsigned int 
  2327 ;;  GR              2   33[BANK0 ] unsigned int 
  2328 ;;  BC              2   31[BANK0 ] unsigned int 
  2329 ;;  GB              2   29[BANK0 ] unsigned int 
  2330 ;;  RB              2   27[BANK0 ] unsigned int 
  2331 ;;  RG              2   25[BANK0 ] unsigned int 
  2332 ;;  color           1   43[BANK0 ] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2342 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;Total ram usage:       33 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 5
  2349 ;; This function calls:
  2350 ;;		_LED_B
  2351 ;;		_LED_G
  2352 ;;		_LED_R
  2353 ;;		___fldiv
  2354 ;;		___flmul
  2355 ;;		___wmul
  2356 ;;		___xxtofl
  2357 ;;		_compare
  2358 ;;		_lroundf
  2359 ;;		_read_color
  2360 ;;		_toggle_light
  2361 ;; This function is called by:
  2362 ;;		_verify_color
  2363 ;;		_main
  2364 ;;		_test_function
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text4
  2369  000E46                     __ptext4:
  2370                           	callstack 0
  2371  000E46                     _detect_color:
  2372                           	callstack 24
  2373  000E46  0E00               	movlw	0
  2374  000E48  0100               	movlb	0	; () banked
  2375  000E4A  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2376  000E4C  0E00               	movlw	0
  2377  000E4E  6F79               	movwf	detect_color@RG& (0+255),b
  2378  000E50  0E00               	movlw	0
  2379  000E52  6F7C               	movwf	(detect_color@RB+1)& (0+255),b
  2380  000E54  0E00               	movlw	0
  2381  000E56  6F7B               	movwf	detect_color@RB& (0+255),b
  2382  000E58  0E00               	movlw	0
  2383  000E5A  6F82               	movwf	(detect_color@GR+1)& (0+255),b
  2384  000E5C  0E00               	movlw	0
  2385  000E5E  6F81               	movwf	detect_color@GR& (0+255),b
  2386  000E60  0E00               	movlw	0
  2387  000E62  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2388  000E64  0E00               	movlw	0
  2389  000E66  6F87               	movwf	detect_color@GG& (0+255),b
  2390  000E68  0E00               	movlw	0
  2391  000E6A  6F7E               	movwf	(detect_color@GB+1)& (0+255),b
  2392  000E6C  0E00               	movlw	0
  2393  000E6E  6F7D               	movwf	detect_color@GB& (0+255),b
  2394  000E70  0E00               	movlw	0
  2395  000E72  6F8D               	movwf	(detect_color@BR+1)& (0+255),b
  2396  000E74  0E00               	movlw	0
  2397  000E76  6F8C               	movwf	detect_color@BR& (0+255),b
  2398  000E78  0E00               	movlw	0
  2399  000E7A  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2400  000E7C  0E00               	movlw	0
  2401  000E7E  6F89               	movwf	detect_color@BG& (0+255),b
  2402  000E80  0E00               	movlw	0
  2403  000E82  6F86               	movwf	(detect_color@BB+1)& (0+255),b
  2404  000E84  0E00               	movlw	0
  2405  000E86  6F85               	movwf	detect_color@BB& (0+255),b
  2406  000E88  0E00               	movlw	0
  2407  000E8A  6F80               	movwf	(detect_color@BC+1)& (0+255),b
  2408  000E8C  0E00               	movlw	0
  2409  000E8E  6F7F               	movwf	detect_color@BC& (0+255),b
  2410                           
  2411                           ;color.c: 294:     unsigned char color = 0;
  2412  000E90  0E00               	movlw	0
  2413  000E92  6F8B               	movwf	detect_color@color& (0+255),b
  2414  000E94                     
  2415                           ; BSR set to: 0
  2416                           ;color.c: 296:     LED_R();
  2417  000E94  EC21  F02D         	call	_LED_R	;wreg free
  2418  000E98                     
  2419                           ;color.c: 297:     read_color(m);
  2420  000E98  C071  F00C         	movff	detect_color@m,read_color@m
  2421  000E9C  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2422  000EA0  EC4C  F02A         	call	_read_color	;wreg free
  2423  000EA4                     
  2424                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2425  000EA4  C073  FFD9         	movff	detect_color@w,fsr2l
  2426  000EA8  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2427  000EAC  CFDE F075          	movff	postinc2,??_detect_color
  2428  000EB0  CFDD F076          	movff	postdec2,??_detect_color+1
  2429  000EB4  C075  F001         	movff	??_detect_color,___xxtofl@val
  2430  000EB8  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2431  000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2432  000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2433  000EC0  0E00               	movlw	0
  2434  000EC2  EC22  F01F         	call	___xxtofl
  2435  000EC6  C001  F013         	movff	?___xxtofl,___fldiv@a
  2436  000ECA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2437  000ECE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2438  000ED2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2439  000ED6  C071  FFD9         	movff	detect_color@m,fsr2l
  2440  000EDA  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2441  000EDE  CFDE F077          	movff	postinc2,??_detect_color+2
  2442  000EE2  CFDD F078          	movff	postdec2,??_detect_color+3
  2443  000EE6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2444  000EEA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2445  000EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2446  000EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2447  000EF2  0E00               	movlw	0
  2448  000EF4  EC22  F01F         	call	___xxtofl
  2449  000EF8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2450  000EFC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2451  000F00  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2452  000F04  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2453  000F08  EC92  F013         	call	___fldiv	;wreg free
  2454  000F0C  C00F  F028         	movff	?___fldiv,___flmul@b
  2455  000F10  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2456  000F14  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2457  000F18  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2458  000F1C  0E00               	movlw	0
  2459  000F1E  6E2C               	movwf	___flmul@a^0,c
  2460  000F20  0E00               	movlw	0
  2461  000F22  6E2D               	movwf	(___flmul@a+1)^0,c
  2462  000F24  0EC8               	movlw	200
  2463  000F26  6E2E               	movwf	(___flmul@a+2)^0,c
  2464  000F28  0E42               	movlw	66
  2465  000F2A  6E2F               	movwf	(___flmul@a+3)^0,c
  2466  000F2C  ECA6  F00F         	call	___flmul	;wreg free
  2467  000F30  C028  F08E         	movff	?___flmul,_detect_color$3257
  2468  000F34  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2469  000F38  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2470  000F3C  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2471  000F40                     
  2472                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2473  000F40  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2474  000F44  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2475  000F48  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2476  000F4C  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2477  000F50  EC48  F02C         	call	_lroundf	;wreg free
  2478  000F54  C066  F083         	movff	?_lroundf,detect_color@RR
  2479  000F58  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  2480  000F5C  0100               	movlb	0	; () banked
  2481  000F5E  EE20 F002          	lfsr	2,2
  2482  000F62  5173               	movf	detect_color@w& (0+255),w,b
  2483  000F64  26D9               	addwf	fsr2l,f,c
  2484  000F66  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2485  000F68  22DA               	addwfc	fsr2h,f,c
  2486  000F6A  CFDE F075          	movff	postinc2,??_detect_color
  2487  000F6E  CFDD F076          	movff	postdec2,??_detect_color+1
  2488  000F72  C075  F001         	movff	??_detect_color,___xxtofl@val
  2489  000F76  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2490  000F7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2491  000F7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2492  000F7E  0E00               	movlw	0
  2493  000F80  EC22  F01F         	call	___xxtofl
  2494  000F84  C001  F013         	movff	?___xxtofl,___fldiv@a
  2495  000F88  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2496  000F8C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2497  000F90  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2498  000F94  0100               	movlb	0	; () banked
  2499  000F96  EE20 F002          	lfsr	2,2
  2500  000F9A  5171               	movf	detect_color@m& (0+255),w,b
  2501  000F9C  26D9               	addwf	fsr2l,f,c
  2502  000F9E  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2503  000FA0  22DA               	addwfc	fsr2h,f,c
  2504  000FA2  CFDE F077          	movff	postinc2,??_detect_color+2
  2505  000FA6  CFDD F078          	movff	postdec2,??_detect_color+3
  2506  000FAA  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2507  000FAE  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2508  000FB2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2509  000FB4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2510  000FB6  0E00               	movlw	0
  2511  000FB8  EC22  F01F         	call	___xxtofl
  2512  000FBC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2513  000FC0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2514  000FC4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2515  000FC8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2516  000FCC  EC92  F013         	call	___fldiv	;wreg free
  2517  000FD0  C00F  F028         	movff	?___fldiv,___flmul@b
  2518  000FD4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2519  000FD8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2520  000FDC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2521  000FE0  0E00               	movlw	0
  2522  000FE2  6E2C               	movwf	___flmul@a^0,c
  2523  000FE4  0E00               	movlw	0
  2524  000FE6  6E2D               	movwf	(___flmul@a+1)^0,c
  2525  000FE8  0EC8               	movlw	200
  2526  000FEA  6E2E               	movwf	(___flmul@a+2)^0,c
  2527  000FEC  0E42               	movlw	66
  2528  000FEE  6E2F               	movwf	(___flmul@a+3)^0,c
  2529  000FF0  ECA6  F00F         	call	___flmul	;wreg free
  2530  000FF4  C028  F08E         	movff	?___flmul,_detect_color$3257
  2531  000FF8  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2532  000FFC  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2533  001000  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2534  001004  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2535  001008  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2536  00100C  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2537  001010  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2538  001014  EC48  F02C         	call	_lroundf	;wreg free
  2539  001018  0100               	movlb	0	; () banked
  2540  00101A  EE20 F004          	lfsr	2,4
  2541  00101E  5173               	movf	detect_color@w& (0+255),w,b
  2542  001020  26D9               	addwf	fsr2l,f,c
  2543  001022  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2544  001024  22DA               	addwfc	fsr2h,f,c
  2545  001026  CFDE F075          	movff	postinc2,??_detect_color
  2546  00102A  CFDD F076          	movff	postdec2,??_detect_color+1
  2547  00102E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2548  001032  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2549  001036  6A03               	clrf	(___xxtofl@val+2)^0,c
  2550  001038  6A04               	clrf	(___xxtofl@val+3)^0,c
  2551  00103A  0E00               	movlw	0
  2552  00103C  EC22  F01F         	call	___xxtofl
  2553  001040  C001  F013         	movff	?___xxtofl,___fldiv@a
  2554  001044  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2555  001048  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2556  00104C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2557  001050  0100               	movlb	0	; () banked
  2558  001052  EE20 F004          	lfsr	2,4
  2559  001056  5171               	movf	detect_color@m& (0+255),w,b
  2560  001058  26D9               	addwf	fsr2l,f,c
  2561  00105A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2562  00105C  22DA               	addwfc	fsr2h,f,c
  2563  00105E  CFDE F077          	movff	postinc2,??_detect_color+2
  2564  001062  CFDD F078          	movff	postdec2,??_detect_color+3
  2565  001066  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2566  00106A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2567  00106E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2568  001070  6A04               	clrf	(___xxtofl@val+3)^0,c
  2569  001072  0E00               	movlw	0
  2570  001074  EC22  F01F         	call	___xxtofl
  2571  001078  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2572  00107C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2573  001080  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2574  001084  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2575  001088  EC92  F013         	call	___fldiv	;wreg free
  2576  00108C  C00F  F028         	movff	?___fldiv,___flmul@b
  2577  001090  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2578  001094  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2579  001098  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2580  00109C  0E00               	movlw	0
  2581  00109E  6E2C               	movwf	___flmul@a^0,c
  2582  0010A0  0E00               	movlw	0
  2583  0010A2  6E2D               	movwf	(___flmul@a+1)^0,c
  2584  0010A4  0EC8               	movlw	200
  2585  0010A6  6E2E               	movwf	(___flmul@a+2)^0,c
  2586  0010A8  0E42               	movlw	66
  2587  0010AA  6E2F               	movwf	(___flmul@a+3)^0,c
  2588  0010AC  ECA6  F00F         	call	___flmul	;wreg free
  2589  0010B0  C028  F08E         	movff	?___flmul,_detect_color$3257
  2590  0010B4  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2591  0010B8  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2592  0010BC  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2593  0010C0  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2594  0010C4  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2595  0010C8  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2596  0010CC  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2597  0010D0  EC48  F02C         	call	_lroundf	;wreg free
  2598  0010D4                     
  2599                           ;color.c: 300:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2600  0010D4  0E05               	movlw	5
  2601  0010D6  0100               	movlb	0	; () banked
  2602  0010D8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2603  0010DA  0E0F               	movlw	15
  2604  0010DC  6F75               	movwf	??_detect_color& (0+255),b
  2605  0010DE  0EF1               	movlw	241
  2606  0010E0                     u5717:
  2607  0010E0  2EE8               	decfsz	wreg,f,c
  2608  0010E2  D7FE               	bra	u5717
  2609  0010E4  2F75               	decfsz	??_detect_color& (0+255),f,b
  2610  0010E6  D7FC               	bra	u5717
  2611  0010E8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2612  0010EA  D7FA               	bra	u5717
  2613  0010EC                     
  2614                           ;color.c: 301:     char buf[100];;color.c: 306:     LED_G();
  2615  0010EC  EC41  F02D         	call	_LED_G	;wreg free
  2616  0010F0                     
  2617                           ;color.c: 307:     read_color(m);
  2618  0010F0  C071  F00C         	movff	detect_color@m,read_color@m
  2619  0010F4  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2620  0010F8  EC4C  F02A         	call	_read_color	;wreg free
  2621  0010FC                     
  2622                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2623  0010FC  0100               	movlb	0	; () banked
  2624  0010FE  EE20 F006          	lfsr	2,6
  2625  001102  5173               	movf	detect_color@w& (0+255),w,b
  2626  001104  26D9               	addwf	fsr2l,f,c
  2627  001106  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2628  001108  22DA               	addwfc	fsr2h,f,c
  2629  00110A  CFDE F075          	movff	postinc2,??_detect_color
  2630  00110E  CFDD F076          	movff	postdec2,??_detect_color+1
  2631  001112  C075  F001         	movff	??_detect_color,___xxtofl@val
  2632  001116  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2633  00111A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2634  00111C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2635  00111E  0E00               	movlw	0
  2636  001120  EC22  F01F         	call	___xxtofl
  2637  001124  C001  F013         	movff	?___xxtofl,___fldiv@a
  2638  001128  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2639  00112C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2640  001130  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2641  001134  C071  FFD9         	movff	detect_color@m,fsr2l
  2642  001138  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2643  00113C  CFDE F077          	movff	postinc2,??_detect_color+2
  2644  001140  CFDD F078          	movff	postdec2,??_detect_color+3
  2645  001144  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2646  001148  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2647  00114C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2648  00114E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2649  001150  0E00               	movlw	0
  2650  001152  EC22  F01F         	call	___xxtofl
  2651  001156  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2652  00115A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2653  00115E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2654  001162  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2655  001166  EC92  F013         	call	___fldiv	;wreg free
  2656  00116A  C00F  F028         	movff	?___fldiv,___flmul@b
  2657  00116E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2658  001172  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2659  001176  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2660  00117A  0E00               	movlw	0
  2661  00117C  6E2C               	movwf	___flmul@a^0,c
  2662  00117E  0E00               	movlw	0
  2663  001180  6E2D               	movwf	(___flmul@a+1)^0,c
  2664  001182  0EC8               	movlw	200
  2665  001184  6E2E               	movwf	(___flmul@a+2)^0,c
  2666  001186  0E42               	movlw	66
  2667  001188  6E2F               	movwf	(___flmul@a+3)^0,c
  2668  00118A  ECA6  F00F         	call	___flmul	;wreg free
  2669  00118E  C028  F08E         	movff	?___flmul,_detect_color$3257
  2670  001192  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2671  001196  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2672  00119A  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2673  00119E                     
  2674                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2675  00119E  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2676  0011A2  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2677  0011A6  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2678  0011AA  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2679  0011AE  EC48  F02C         	call	_lroundf	;wreg free
  2680  0011B2  C066  F081         	movff	?_lroundf,detect_color@GR
  2681  0011B6  C067  F082         	movff	?_lroundf+1,detect_color@GR+1
  2682  0011BA  0100               	movlb	0	; () banked
  2683  0011BC  EE20 F008          	lfsr	2,8
  2684  0011C0  5173               	movf	detect_color@w& (0+255),w,b
  2685  0011C2  26D9               	addwf	fsr2l,f,c
  2686  0011C4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2687  0011C6  22DA               	addwfc	fsr2h,f,c
  2688  0011C8  CFDE F075          	movff	postinc2,??_detect_color
  2689  0011CC  CFDD F076          	movff	postdec2,??_detect_color+1
  2690  0011D0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2691  0011D4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2692  0011D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2693  0011DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2694  0011DC  0E00               	movlw	0
  2695  0011DE  EC22  F01F         	call	___xxtofl
  2696  0011E2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2697  0011E6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2698  0011EA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2699  0011EE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2700  0011F2  0100               	movlb	0	; () banked
  2701  0011F4  EE20 F002          	lfsr	2,2
  2702  0011F8  5171               	movf	detect_color@m& (0+255),w,b
  2703  0011FA  26D9               	addwf	fsr2l,f,c
  2704  0011FC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2705  0011FE  22DA               	addwfc	fsr2h,f,c
  2706  001200  CFDE F077          	movff	postinc2,??_detect_color+2
  2707  001204  CFDD F078          	movff	postdec2,??_detect_color+3
  2708  001208  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2709  00120C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2710  001210  6A03               	clrf	(___xxtofl@val+2)^0,c
  2711  001212  6A04               	clrf	(___xxtofl@val+3)^0,c
  2712  001214  0E00               	movlw	0
  2713  001216  EC22  F01F         	call	___xxtofl
  2714  00121A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2715  00121E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2716  001222  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2717  001226  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2718  00122A  EC92  F013         	call	___fldiv	;wreg free
  2719  00122E  C00F  F028         	movff	?___fldiv,___flmul@b
  2720  001232  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2721  001236  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2722  00123A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2723  00123E  0E00               	movlw	0
  2724  001240  6E2C               	movwf	___flmul@a^0,c
  2725  001242  0E00               	movlw	0
  2726  001244  6E2D               	movwf	(___flmul@a+1)^0,c
  2727  001246  0EC8               	movlw	200
  2728  001248  6E2E               	movwf	(___flmul@a+2)^0,c
  2729  00124A  0E42               	movlw	66
  2730  00124C  6E2F               	movwf	(___flmul@a+3)^0,c
  2731  00124E  ECA6  F00F         	call	___flmul	;wreg free
  2732  001252  C028  F08E         	movff	?___flmul,_detect_color$3257
  2733  001256  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2734  00125A  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2735  00125E  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2736  001262  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2737  001266  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2738  00126A  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2739  00126E  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2740  001272  EC48  F02C         	call	_lroundf	;wreg free
  2741  001276  C066  F087         	movff	?_lroundf,detect_color@GG
  2742  00127A  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2743  00127E  0100               	movlb	0	; () banked
  2744  001280  EE20 F00A          	lfsr	2,10
  2745  001284  5173               	movf	detect_color@w& (0+255),w,b
  2746  001286  26D9               	addwf	fsr2l,f,c
  2747  001288  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2748  00128A  22DA               	addwfc	fsr2h,f,c
  2749  00128C  CFDE F075          	movff	postinc2,??_detect_color
  2750  001290  CFDD F076          	movff	postdec2,??_detect_color+1
  2751  001294  C075  F001         	movff	??_detect_color,___xxtofl@val
  2752  001298  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2753  00129C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2754  00129E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2755  0012A0  0E00               	movlw	0
  2756  0012A2  EC22  F01F         	call	___xxtofl
  2757  0012A6  C001  F013         	movff	?___xxtofl,___fldiv@a
  2758  0012AA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2759  0012AE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2760  0012B2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2761  0012B6  0100               	movlb	0	; () banked
  2762  0012B8  EE20 F004          	lfsr	2,4
  2763  0012BC  5171               	movf	detect_color@m& (0+255),w,b
  2764  0012BE  26D9               	addwf	fsr2l,f,c
  2765  0012C0  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2766  0012C2  22DA               	addwfc	fsr2h,f,c
  2767  0012C4  CFDE F077          	movff	postinc2,??_detect_color+2
  2768  0012C8  CFDD F078          	movff	postdec2,??_detect_color+3
  2769  0012CC  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2770  0012D0  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2771  0012D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2772  0012D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2773  0012D8  0E00               	movlw	0
  2774  0012DA  EC22  F01F         	call	___xxtofl
  2775  0012DE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2776  0012E2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2777  0012E6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2778  0012EA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2779  0012EE  EC92  F013         	call	___fldiv	;wreg free
  2780  0012F2  C00F  F028         	movff	?___fldiv,___flmul@b
  2781  0012F6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2782  0012FA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2783  0012FE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2784  001302  0E00               	movlw	0
  2785  001304  6E2C               	movwf	___flmul@a^0,c
  2786  001306  0E00               	movlw	0
  2787  001308  6E2D               	movwf	(___flmul@a+1)^0,c
  2788  00130A  0EC8               	movlw	200
  2789  00130C  6E2E               	movwf	(___flmul@a+2)^0,c
  2790  00130E  0E42               	movlw	66
  2791  001310  6E2F               	movwf	(___flmul@a+3)^0,c
  2792  001312  ECA6  F00F         	call	___flmul	;wreg free
  2793  001316  C028  F08E         	movff	?___flmul,_detect_color$3257
  2794  00131A  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2795  00131E  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2796  001322  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2797  001326  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2798  00132A  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2799  00132E  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2800  001332  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2801  001336  EC48  F02C         	call	_lroundf	;wreg free
  2802  00133A                     
  2803                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2804  00133A  0E05               	movlw	5
  2805  00133C  0100               	movlb	0	; () banked
  2806  00133E  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2807  001340  0E0F               	movlw	15
  2808  001342  6F75               	movwf	??_detect_color& (0+255),b
  2809  001344  0EF1               	movlw	241
  2810  001346                     u5727:
  2811  001346  2EE8               	decfsz	wreg,f,c
  2812  001348  D7FE               	bra	u5727
  2813  00134A  2F75               	decfsz	??_detect_color& (0+255),f,b
  2814  00134C  D7FC               	bra	u5727
  2815  00134E  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2816  001350  D7FA               	bra	u5727
  2817  001352                     
  2818                           ;color.c: 316:     LED_B();
  2819  001352  EC51  F02D         	call	_LED_B	;wreg free
  2820  001356                     
  2821                           ;color.c: 317:     read_color(m);
  2822  001356  C071  F00C         	movff	detect_color@m,read_color@m
  2823  00135A  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2824  00135E  EC4C  F02A         	call	_read_color	;wreg free
  2825  001362                     
  2826                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2827  001362  0100               	movlb	0	; () banked
  2828  001364  EE20 F00C          	lfsr	2,12
  2829  001368  5173               	movf	detect_color@w& (0+255),w,b
  2830  00136A  26D9               	addwf	fsr2l,f,c
  2831  00136C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2832  00136E  22DA               	addwfc	fsr2h,f,c
  2833  001370  CFDE F075          	movff	postinc2,??_detect_color
  2834  001374  CFDD F076          	movff	postdec2,??_detect_color+1
  2835  001378  C075  F001         	movff	??_detect_color,___xxtofl@val
  2836  00137C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2837  001380  6A03               	clrf	(___xxtofl@val+2)^0,c
  2838  001382  6A04               	clrf	(___xxtofl@val+3)^0,c
  2839  001384  0E00               	movlw	0
  2840  001386  EC22  F01F         	call	___xxtofl
  2841  00138A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2842  00138E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2843  001392  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2844  001396  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2845  00139A  C071  FFD9         	movff	detect_color@m,fsr2l
  2846  00139E  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2847  0013A2  CFDE F077          	movff	postinc2,??_detect_color+2
  2848  0013A6  CFDD F078          	movff	postdec2,??_detect_color+3
  2849  0013AA  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2850  0013AE  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2851  0013B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2852  0013B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2853  0013B6  0E00               	movlw	0
  2854  0013B8  EC22  F01F         	call	___xxtofl
  2855  0013BC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2856  0013C0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2857  0013C4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2858  0013C8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2859  0013CC  EC92  F013         	call	___fldiv	;wreg free
  2860  0013D0  C00F  F028         	movff	?___fldiv,___flmul@b
  2861  0013D4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2862  0013D8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2863  0013DC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2864  0013E0  0E00               	movlw	0
  2865  0013E2  6E2C               	movwf	___flmul@a^0,c
  2866  0013E4  0E00               	movlw	0
  2867  0013E6  6E2D               	movwf	(___flmul@a+1)^0,c
  2868  0013E8  0EC8               	movlw	200
  2869  0013EA  6E2E               	movwf	(___flmul@a+2)^0,c
  2870  0013EC  0E42               	movlw	66
  2871  0013EE  6E2F               	movwf	(___flmul@a+3)^0,c
  2872  0013F0  ECA6  F00F         	call	___flmul	;wreg free
  2873  0013F4  C028  F08E         	movff	?___flmul,_detect_color$3257
  2874  0013F8  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2875  0013FC  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2876  001400  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2877  001404                     
  2878                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2879  001404  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2880  001408  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2881  00140C  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2882  001410  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2883  001414  EC48  F02C         	call	_lroundf	;wreg free
  2884  001418  C066  F08C         	movff	?_lroundf,detect_color@BR
  2885  00141C  C067  F08D         	movff	?_lroundf+1,detect_color@BR+1
  2886  001420  0100               	movlb	0	; () banked
  2887  001422  EE20 F00E          	lfsr	2,14
  2888  001426  5173               	movf	detect_color@w& (0+255),w,b
  2889  001428  26D9               	addwf	fsr2l,f,c
  2890  00142A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2891  00142C  22DA               	addwfc	fsr2h,f,c
  2892  00142E  CFDE F075          	movff	postinc2,??_detect_color
  2893  001432  CFDD F076          	movff	postdec2,??_detect_color+1
  2894  001436  C075  F001         	movff	??_detect_color,___xxtofl@val
  2895  00143A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2896  00143E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2897  001440  6A04               	clrf	(___xxtofl@val+3)^0,c
  2898  001442  0E00               	movlw	0
  2899  001444  EC22  F01F         	call	___xxtofl
  2900  001448  C001  F013         	movff	?___xxtofl,___fldiv@a
  2901  00144C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2902  001450  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2903  001454  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2904  001458  0100               	movlb	0	; () banked
  2905  00145A  EE20 F002          	lfsr	2,2
  2906  00145E  5171               	movf	detect_color@m& (0+255),w,b
  2907  001460  26D9               	addwf	fsr2l,f,c
  2908  001462  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2909  001464  22DA               	addwfc	fsr2h,f,c
  2910  001466  CFDE F077          	movff	postinc2,??_detect_color+2
  2911  00146A  CFDD F078          	movff	postdec2,??_detect_color+3
  2912  00146E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2913  001472  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2914  001476  6A03               	clrf	(___xxtofl@val+2)^0,c
  2915  001478  6A04               	clrf	(___xxtofl@val+3)^0,c
  2916  00147A  0E00               	movlw	0
  2917  00147C  EC22  F01F         	call	___xxtofl
  2918  001480  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2919  001484  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2920  001488  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2921  00148C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2922  001490  EC92  F013         	call	___fldiv	;wreg free
  2923  001494  C00F  F028         	movff	?___fldiv,___flmul@b
  2924  001498  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2925  00149C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2926  0014A0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2927  0014A4  0E00               	movlw	0
  2928  0014A6  6E2C               	movwf	___flmul@a^0,c
  2929  0014A8  0E00               	movlw	0
  2930  0014AA  6E2D               	movwf	(___flmul@a+1)^0,c
  2931  0014AC  0EC8               	movlw	200
  2932  0014AE  6E2E               	movwf	(___flmul@a+2)^0,c
  2933  0014B0  0E42               	movlw	66
  2934  0014B2  6E2F               	movwf	(___flmul@a+3)^0,c
  2935  0014B4  ECA6  F00F         	call	___flmul	;wreg free
  2936  0014B8  C028  F08E         	movff	?___flmul,_detect_color$3257
  2937  0014BC  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2938  0014C0  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  2939  0014C4  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  2940  0014C8  C08E  F066         	movff	_detect_color$3257,lroundf@x
  2941  0014CC  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  2942  0014D0  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  2943  0014D4  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  2944  0014D8  EC48  F02C         	call	_lroundf	;wreg free
  2945  0014DC  C066  F089         	movff	?_lroundf,detect_color@BG
  2946  0014E0  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2947  0014E4  0100               	movlb	0	; () banked
  2948  0014E6  EE20 F010          	lfsr	2,16
  2949  0014EA  5173               	movf	detect_color@w& (0+255),w,b
  2950  0014EC  26D9               	addwf	fsr2l,f,c
  2951  0014EE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2952  0014F0  22DA               	addwfc	fsr2h,f,c
  2953  0014F2  CFDE F075          	movff	postinc2,??_detect_color
  2954  0014F6  CFDD F076          	movff	postdec2,??_detect_color+1
  2955  0014FA  C075  F001         	movff	??_detect_color,___xxtofl@val
  2956  0014FE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2957  001502  6A03               	clrf	(___xxtofl@val+2)^0,c
  2958  001504  6A04               	clrf	(___xxtofl@val+3)^0,c
  2959  001506  0E00               	movlw	0
  2960  001508  EC22  F01F         	call	___xxtofl
  2961  00150C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2962  001510  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2963  001514  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2964  001518  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2965  00151C  0100               	movlb	0	; () banked
  2966  00151E  EE20 F004          	lfsr	2,4
  2967  001522  5171               	movf	detect_color@m& (0+255),w,b
  2968  001524  26D9               	addwf	fsr2l,f,c
  2969  001526  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2970  001528  22DA               	addwfc	fsr2h,f,c
  2971  00152A  CFDE F077          	movff	postinc2,??_detect_color+2
  2972  00152E  CFDD F078          	movff	postdec2,??_detect_color+3
  2973  001532  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2974  001536  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2975  00153A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2976  00153C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2977  00153E  0E00               	movlw	0
  2978  001540  EC22  F01F         	call	___xxtofl
  2979  001544  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2980  001548  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2981  00154C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2982  001550  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2983  001554  EC92  F013         	call	___fldiv	;wreg free
  2984  001558  C00F  F028         	movff	?___fldiv,___flmul@b
  2985  00155C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2986  001560  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2987  001564  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2988  001568  0E00               	movlw	0
  2989  00156A  6E2C               	movwf	___flmul@a^0,c
  2990  00156C  0E00               	movlw	0
  2991  00156E  6E2D               	movwf	(___flmul@a+1)^0,c
  2992  001570  0EC8               	movlw	200
  2993  001572  6E2E               	movwf	(___flmul@a+2)^0,c
  2994  001574  0E42               	movlw	66
  2995  001576  6E2F               	movwf	(___flmul@a+3)^0,c
  2996  001578  ECA6  F00F         	call	___flmul	;wreg free
  2997  00157C  C028  F08E         	movff	?___flmul,_detect_color$3257
  2998  001580  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  2999  001584  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  3000  001588  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  3001  00158C  C08E  F066         	movff	_detect_color$3257,lroundf@x
  3002  001590  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  3003  001594  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  3004  001598  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  3005  00159C  EC48  F02C         	call	_lroundf	;wreg free
  3006  0015A0  C066  F085         	movff	?_lroundf,detect_color@BB
  3007  0015A4  C067  F086         	movff	?_lroundf+1,detect_color@BB+1
  3008  0015A8                     
  3009                           ;color.c: 319:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3010  0015A8  0100               	movlb	0	; () banked
  3011  0015AA  EE20 F01A          	lfsr	2,26
  3012  0015AE  5173               	movf	detect_color@w& (0+255),w,b
  3013  0015B0  26D9               	addwf	fsr2l,f,c
  3014  0015B2  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3015  0015B4  22DA               	addwfc	fsr2h,f,c
  3016  0015B6  CFDE F075          	movff	postinc2,??_detect_color
  3017  0015BA  CFDD F076          	movff	postdec2,??_detect_color+1
  3018  0015BE  C075  F001         	movff	??_detect_color,___xxtofl@val
  3019  0015C2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3020  0015C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3021  0015C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3022  0015CA  0E00               	movlw	0
  3023  0015CC  EC22  F01F         	call	___xxtofl
  3024  0015D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3025  0015D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3026  0015D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3027  0015DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3028  0015E0  0100               	movlb	0	; () banked
  3029  0015E2  EE20 F006          	lfsr	2,6
  3030  0015E6  5171               	movf	detect_color@m& (0+255),w,b
  3031  0015E8  26D9               	addwf	fsr2l,f,c
  3032  0015EA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3033  0015EC  22DA               	addwfc	fsr2h,f,c
  3034  0015EE  CFDE F077          	movff	postinc2,??_detect_color+2
  3035  0015F2  CFDD F078          	movff	postdec2,??_detect_color+3
  3036  0015F6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3037  0015FA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3038  0015FE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3039  001600  6A04               	clrf	(___xxtofl@val+3)^0,c
  3040  001602  0E00               	movlw	0
  3041  001604  EC22  F01F         	call	___xxtofl
  3042  001608  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3043  00160C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3044  001610  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3045  001614  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3046  001618  EC92  F013         	call	___fldiv	;wreg free
  3047  00161C  C00F  F028         	movff	?___fldiv,___flmul@b
  3048  001620  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3049  001624  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3050  001628  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3051  00162C  0E00               	movlw	0
  3052  00162E  6E2C               	movwf	___flmul@a^0,c
  3053  001630  0E00               	movlw	0
  3054  001632  6E2D               	movwf	(___flmul@a+1)^0,c
  3055  001634  0EC8               	movlw	200
  3056  001636  6E2E               	movwf	(___flmul@a+2)^0,c
  3057  001638  0E42               	movlw	66
  3058  00163A  6E2F               	movwf	(___flmul@a+3)^0,c
  3059  00163C  ECA6  F00F         	call	___flmul	;wreg free
  3060  001640  C028  F08E         	movff	?___flmul,_detect_color$3257
  3061  001644  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  3062  001648  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  3063  00164C  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  3064  001650  C08E  F066         	movff	_detect_color$3257,lroundf@x
  3065  001654  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  3066  001658  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  3067  00165C  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  3068  001660  EC48  F02C         	call	_lroundf	;wreg free
  3069  001664                     
  3070                           ;color.c: 320:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3071  001664  0E05               	movlw	5
  3072  001666  0100               	movlb	0	; () banked
  3073  001668  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3074  00166A  0E0F               	movlw	15
  3075  00166C  6F75               	movwf	??_detect_color& (0+255),b
  3076  00166E  0EF1               	movlw	241
  3077  001670                     u5737:
  3078  001670  2EE8               	decfsz	wreg,f,c
  3079  001672  D7FE               	bra	u5737
  3080  001674  2F75               	decfsz	??_detect_color& (0+255),f,b
  3081  001676  D7FC               	bra	u5737
  3082  001678  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3083  00167A  D7FA               	bra	u5737
  3084  00167C                     
  3085                           ;color.c: 326:     if (compare(0, BR, 70)){
  3086  00167C  0E00               	movlw	0
  3087  00167E  0100               	movlb	0	; () banked
  3088  001680  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3089  001682  0E00               	movlw	0
  3090  001684  6F6A               	movwf	compare@lower& (0+255),b
  3091  001686  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3092  00168A  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3093  00168E  0E00               	movlw	0
  3094  001690  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3095  001692  0E46               	movlw	70
  3096  001694  6F6E               	movwf	compare@upper& (0+255),b
  3097  001696  EC2B  F02C         	call	_compare	;wreg free
  3098  00169A  0900               	iorlw	0
  3099  00169C  B4D8               	btfsc	status,2,c
  3100  00169E  EF53  F00B         	goto	u5111
  3101  0016A2  EF55  F00B         	goto	u5110
  3102  0016A6                     u5111:
  3103  0016A6  EFC6  F00B         	goto	l5106
  3104  0016AA                     u5110:
  3105  0016AA                     
  3106                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  3107  0016AA  C085  F001         	movff	detect_color@BB,___xxtofl@val
  3108  0016AE  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3109  0016B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3110  0016B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3111  0016B6  0E00               	movlw	0
  3112  0016B8  EC22  F01F         	call	___xxtofl
  3113  0016BC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3114  0016C0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3115  0016C4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3116  0016C8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3117  0016CC  0100               	movlb	0	; () banked
  3118  0016CE  5189               	movf	detect_color@BG& (0+255),w,b
  3119  0016D0  2587               	addwf	detect_color@GG& (0+255),w,b
  3120  0016D2  6F75               	movwf	??_detect_color& (0+255),b
  3121  0016D4  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3122  0016D6  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3123  0016D8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3124  0016DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3125  0016DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3126  0016E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3127  0016E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3128  0016E6  0E00               	movlw	0
  3129  0016E8  EC22  F01F         	call	___xxtofl
  3130  0016EC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3131  0016F0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3132  0016F4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3133  0016F8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3134  0016FC  EC92  F013         	call	___fldiv	;wreg free
  3135  001700  C00F  F028         	movff	?___fldiv,___flmul@b
  3136  001704  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3137  001708  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3138  00170C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3139  001710  0E00               	movlw	0
  3140  001712  6E2C               	movwf	___flmul@a^0,c
  3141  001714  0E00               	movlw	0
  3142  001716  6E2D               	movwf	(___flmul@a+1)^0,c
  3143  001718  0E48               	movlw	72
  3144  00171A  6E2E               	movwf	(___flmul@a+2)^0,c
  3145  00171C  0E43               	movlw	67
  3146  00171E  6E2F               	movwf	(___flmul@a+3)^0,c
  3147  001720  ECA6  F00F         	call	___flmul	;wreg free
  3148  001724  C028  F08E         	movff	?___flmul,_detect_color$3257
  3149  001728  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  3150  00172C  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  3151  001730  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  3152                           
  3153                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  3154  001734  0E00               	movlw	0
  3155  001736  0100               	movlb	0	; () banked
  3156  001738  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3157  00173A  0E00               	movlw	0
  3158  00173C  6F6A               	movwf	compare@lower& (0+255),b
  3159  00173E  C08E  F066         	movff	_detect_color$3257,lroundf@x
  3160  001742  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  3161  001746  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  3162  00174A  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  3163  00174E  EC48  F02C         	call	_lroundf	;wreg free
  3164  001752  C066  F06C         	movff	?_lroundf,compare@value2compare
  3165  001756  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3166  00175A  0E01               	movlw	1
  3167  00175C  0100               	movlb	0	; () banked
  3168  00175E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3169  001760  0E9B               	movlw	155
  3170  001762  6F6E               	movwf	compare@upper& (0+255),b
  3171  001764  EC2B  F02C         	call	_compare	;wreg free
  3172  001768  0900               	iorlw	0
  3173  00176A  B4D8               	btfsc	status,2,c
  3174  00176C  EFBA  F00B         	goto	u5121
  3175  001770  EFBC  F00B         	goto	u5120
  3176  001774                     u5121:
  3177  001774  EFC1  F00B         	goto	l5104
  3178  001778                     u5120:
  3179  001778  0E03               	movlw	3
  3180  00177A  0100               	movlb	0	; () banked
  3181  00177C  6F8B               	movwf	detect_color@color& (0+255),b
  3182  00177E  EFBF  F00C         	goto	l5124
  3183  001782                     l5104:
  3184  001782  0E02               	movlw	2
  3185  001784  0100               	movlb	0	; () banked
  3186  001786  6F8B               	movwf	detect_color@color& (0+255),b
  3187  001788  EFBF  F00C         	goto	l5124
  3188  00178C                     l5106:
  3189                           
  3190                           ;color.c: 331:         if (compare(0, BG, 75)){
  3191  00178C  0E00               	movlw	0
  3192  00178E  0100               	movlb	0	; () banked
  3193  001790  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3194  001792  0E00               	movlw	0
  3195  001794  6F6A               	movwf	compare@lower& (0+255),b
  3196  001796  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3197  00179A  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3198  00179E  0E00               	movlw	0
  3199  0017A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3200  0017A2  0E4B               	movlw	75
  3201  0017A4  6F6E               	movwf	compare@upper& (0+255),b
  3202  0017A6  EC2B  F02C         	call	_compare	;wreg free
  3203  0017AA  0900               	iorlw	0
  3204  0017AC  B4D8               	btfsc	status,2,c
  3205  0017AE  EFDB  F00B         	goto	u5131
  3206  0017B2  EFDD  F00B         	goto	u5130
  3207  0017B6                     u5131:
  3208  0017B6  EF47  F00C         	goto	l5114
  3209  0017BA                     u5130:
  3210  0017BA                     
  3211                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  3212  0017BA  C083  F001         	movff	detect_color@RR,___xxtofl@val
  3213  0017BE  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3214  0017C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3215  0017C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3216  0017C6  0E00               	movlw	0
  3217  0017C8  EC22  F01F         	call	___xxtofl
  3218  0017CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3219  0017D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3220  0017D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3221  0017D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3222  0017DC  C081  F001         	movff	detect_color@GR,___xxtofl@val
  3223  0017E0  C082  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  3224  0017E4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3225  0017E6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3226  0017E8  0E00               	movlw	0
  3227  0017EA  EC22  F01F         	call	___xxtofl
  3228  0017EE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3229  0017F2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3230  0017F6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3231  0017FA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3232  0017FE  EC92  F013         	call	___fldiv	;wreg free
  3233  001802  C00F  F028         	movff	?___fldiv,___flmul@b
  3234  001806  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3235  00180A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3236  00180E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3237  001812  0E00               	movlw	0
  3238  001814  6E2C               	movwf	___flmul@a^0,c
  3239  001816  0E00               	movlw	0
  3240  001818  6E2D               	movwf	(___flmul@a+1)^0,c
  3241  00181A  0EFA               	movlw	250
  3242  00181C  6E2E               	movwf	(___flmul@a+2)^0,c
  3243  00181E  0E43               	movlw	67
  3244  001820  6E2F               	movwf	(___flmul@a+3)^0,c
  3245  001822  ECA6  F00F         	call	___flmul	;wreg free
  3246  001826  C028  F08E         	movff	?___flmul,_detect_color$3257
  3247  00182A  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  3248  00182E  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  3249  001832  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  3250                           
  3251                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  3252  001836  0E01               	movlw	1
  3253  001838  0100               	movlb	0	; () banked
  3254  00183A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3255  00183C  0EE0               	movlw	224
  3256  00183E  6F6A               	movwf	compare@lower& (0+255),b
  3257  001840  C08E  F066         	movff	_detect_color$3257,lroundf@x
  3258  001844  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  3259  001848  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  3260  00184C  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  3261  001850  EC48  F02C         	call	_lroundf	;wreg free
  3262  001854  C066  F06C         	movff	?_lroundf,compare@value2compare
  3263  001858  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3264  00185C  0E02               	movlw	2
  3265  00185E  0100               	movlb	0	; () banked
  3266  001860  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3267  001862  0E08               	movlw	8
  3268  001864  6F6E               	movwf	compare@upper& (0+255),b
  3269  001866  EC2B  F02C         	call	_compare	;wreg free
  3270  00186A  0900               	iorlw	0
  3271  00186C  B4D8               	btfsc	status,2,c
  3272  00186E  EF3B  F00C         	goto	u5141
  3273  001872  EF3D  F00C         	goto	u5140
  3274  001876                     u5141:
  3275  001876  EF42  F00C         	goto	l5112
  3276  00187A                     u5140:
  3277  00187A  0E06               	movlw	6
  3278  00187C  0100               	movlb	0	; () banked
  3279  00187E  6F8B               	movwf	detect_color@color& (0+255),b
  3280  001880  EFBF  F00C         	goto	l5124
  3281  001884                     l5112:
  3282  001884  0E01               	movlw	1
  3283  001886  0100               	movlb	0	; () banked
  3284  001888  6F8B               	movwf	detect_color@color& (0+255),b
  3285  00188A  EFBF  F00C         	goto	l5124
  3286  00188E                     l5114:
  3287                           
  3288                           ;color.c: 338:             if (BG > BR) {color = 7;}
  3289  00188E  0100               	movlb	0	; () banked
  3290  001890  5189               	movf	detect_color@BG& (0+255),w,b
  3291  001892  5D8C               	subwf	detect_color@BR& (0+255),w,b
  3292  001894  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3293  001896  598D               	subwfb	(detect_color@BR+1)& (0+255),w,b
  3294  001898  B0D8               	btfsc	status,0,c
  3295  00189A  EF51  F00C         	goto	u5151
  3296  00189E  EF53  F00C         	goto	u5150
  3297  0018A2                     u5151:
  3298  0018A2  EF57  F00C         	goto	l5118
  3299  0018A6                     u5150:
  3300  0018A6                     
  3301                           ; BSR set to: 0
  3302  0018A6  0E07               	movlw	7
  3303  0018A8  6F8B               	movwf	detect_color@color& (0+255),b
  3304  0018AA  EFBF  F00C         	goto	l5124
  3305  0018AE                     l5118:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;color.c: 340:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3309  0018AE  C085  F001         	movff	detect_color@BB,___xxtofl@val
  3310  0018B2  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3311  0018B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3312  0018B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3313  0018BA  0E00               	movlw	0
  3314  0018BC  EC22  F01F         	call	___xxtofl
  3315  0018C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3316  0018C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3317  0018C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3318  0018CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3319  0018D0  C089  F001         	movff	detect_color@BG,___xxtofl@val
  3320  0018D4  C08A  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3321  0018D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3322  0018DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3323  0018DC  0E00               	movlw	0
  3324  0018DE  EC22  F01F         	call	___xxtofl
  3325  0018E2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3326  0018E6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3327  0018EA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3328  0018EE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3329  0018F2  EC92  F013         	call	___fldiv	;wreg free
  3330  0018F6  C00F  F028         	movff	?___fldiv,___flmul@b
  3331  0018FA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3332  0018FE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3333  001902  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3334  001906  0E00               	movlw	0
  3335  001908  6E2C               	movwf	___flmul@a^0,c
  3336  00190A  0E00               	movlw	0
  3337  00190C  6E2D               	movwf	(___flmul@a+1)^0,c
  3338  00190E  0EFA               	movlw	250
  3339  001910  6E2E               	movwf	(___flmul@a+2)^0,c
  3340  001912  0E43               	movlw	67
  3341  001914  6E2F               	movwf	(___flmul@a+3)^0,c
  3342  001916  ECA6  F00F         	call	___flmul	;wreg free
  3343  00191A  C028  F08E         	movff	?___flmul,_detect_color$3257
  3344  00191E  C029  F08F         	movff	?___flmul+1,_detect_color$3257+1
  3345  001922  C02A  F090         	movff	?___flmul+2,_detect_color$3257+2
  3346  001926  C02B  F091         	movff	?___flmul+3,_detect_color$3257+3
  3347                           
  3348                           ;color.c: 340:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3349  00192A  0E00               	movlw	0
  3350  00192C  0100               	movlb	0	; () banked
  3351  00192E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3352  001930  0E00               	movlw	0
  3353  001932  6F6A               	movwf	compare@lower& (0+255),b
  3354  001934  C08E  F066         	movff	_detect_color$3257,lroundf@x
  3355  001938  C08F  F067         	movff	_detect_color$3257+1,lroundf@x+1
  3356  00193C  C090  F068         	movff	_detect_color$3257+2,lroundf@x+2
  3357  001940  C091  F069         	movff	_detect_color$3257+3,lroundf@x+3
  3358  001944  EC48  F02C         	call	_lroundf	;wreg free
  3359  001948  C066  F06C         	movff	?_lroundf,compare@value2compare
  3360  00194C  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3361  001950  0E02               	movlw	2
  3362  001952  0100               	movlb	0	; () banked
  3363  001954  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3364  001956  0E26               	movlw	38
  3365  001958  6F6E               	movwf	compare@upper& (0+255),b
  3366  00195A  EC2B  F02C         	call	_compare	;wreg free
  3367  00195E  0900               	iorlw	0
  3368  001960  B4D8               	btfsc	status,2,c
  3369  001962  EFB5  F00C         	goto	u5161
  3370  001966  EFB7  F00C         	goto	u5160
  3371  00196A                     u5161:
  3372  00196A  EFBC  F00C         	goto	l5122
  3373  00196E                     u5160:
  3374  00196E  0E05               	movlw	5
  3375  001970  0100               	movlb	0	; () banked
  3376  001972  6F8B               	movwf	detect_color@color& (0+255),b
  3377  001974  EFBF  F00C         	goto	l5124
  3378  001978                     l5122:
  3379  001978  0E04               	movlw	4
  3380  00197A  0100               	movlb	0	; () banked
  3381  00197C  6F8B               	movwf	detect_color@color& (0+255),b
  3382  00197E                     l5124:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;color.c: 346:     if (compare(90, BR, BR * 30) && compare(90, GG, GG * 30)){color = 8;}
  3386  00197E  0E00               	movlw	0
  3387  001980  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3388  001982  0E5A               	movlw	90
  3389  001984  6F6A               	movwf	compare@lower& (0+255),b
  3390  001986  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3391  00198A  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3392  00198E  C08C  F001         	movff	detect_color@BR,___wmul@multiplier
  3393  001992  C08D  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3394  001996  0E00               	movlw	0
  3395  001998  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3396  00199A  0E1E               	movlw	30
  3397  00199C  6E03               	movwf	___wmul@multiplicand^0,c
  3398  00199E  EC0E  F02D         	call	___wmul	;wreg free
  3399  0019A2  C001  F06E         	movff	?___wmul,compare@upper
  3400  0019A6  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3401  0019AA  EC2B  F02C         	call	_compare	;wreg free
  3402  0019AE  0900               	iorlw	0
  3403  0019B0  B4D8               	btfsc	status,2,c
  3404  0019B2  EFDD  F00C         	goto	u5171
  3405  0019B6  EFDF  F00C         	goto	u5170
  3406  0019BA                     u5171:
  3407  0019BA  EF03  F00D         	goto	l5130
  3408  0019BE                     u5170:
  3409  0019BE  0E00               	movlw	0
  3410  0019C0  0100               	movlb	0	; () banked
  3411  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3412  0019C4  0E5A               	movlw	90
  3413  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  3414  0019C8  C087  F06C         	movff	detect_color@GG,compare@value2compare
  3415  0019CC  C088  F06D         	movff	detect_color@GG+1,compare@value2compare+1
  3416  0019D0  C087  F001         	movff	detect_color@GG,___wmul@multiplier
  3417  0019D4  C088  F002         	movff	detect_color@GG+1,___wmul@multiplier+1
  3418  0019D8  0E00               	movlw	0
  3419  0019DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3420  0019DC  0E1E               	movlw	30
  3421  0019DE  6E03               	movwf	___wmul@multiplicand^0,c
  3422  0019E0  EC0E  F02D         	call	___wmul	;wreg free
  3423  0019E4  C001  F06E         	movff	?___wmul,compare@upper
  3424  0019E8  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3425  0019EC  EC2B  F02C         	call	_compare	;wreg free
  3426  0019F0  0900               	iorlw	0
  3427  0019F2  B4D8               	btfsc	status,2,c
  3428  0019F4  EFFE  F00C         	goto	u5181
  3429  0019F8  EF00  F00D         	goto	u5180
  3430  0019FC                     u5181:
  3431  0019FC  EF03  F00D         	goto	l5130
  3432  001A00                     u5180:
  3433  001A00  0E08               	movlw	8
  3434  001A02  0100               	movlb	0	; () banked
  3435  001A04  6F8B               	movwf	detect_color@color& (0+255),b
  3436  001A06                     l5130:
  3437                           
  3438                           ;color.c: 347:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3439  001A06  0E00               	movlw	0
  3440  001A08  0100               	movlb	0	; () banked
  3441  001A0A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3442  001A0C  0E00               	movlw	0
  3443  001A0E  6F6A               	movwf	compare@lower& (0+255),b
  3444  001A10  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3445  001A14  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3446  001A18  0E00               	movlw	0
  3447  001A1A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3448  001A1C  0E19               	movlw	25
  3449  001A1E  6F6E               	movwf	compare@upper& (0+255),b
  3450  001A20  EC2B  F02C         	call	_compare	;wreg free
  3451  001A24  0900               	iorlw	0
  3452  001A26  B4D8               	btfsc	status,2,c
  3453  001A28  EF18  F00D         	goto	u5191
  3454  001A2C  EF1A  F00D         	goto	u5190
  3455  001A30                     u5191:
  3456  001A30  EF34  F00D         	goto	l5136
  3457  001A34                     u5190:
  3458  001A34  0E00               	movlw	0
  3459  001A36  0100               	movlb	0	; () banked
  3460  001A38  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3461  001A3A  0E00               	movlw	0
  3462  001A3C  6F6A               	movwf	compare@lower& (0+255),b
  3463  001A3E  C083  F06C         	movff	detect_color@RR,compare@value2compare
  3464  001A42  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3465  001A46  0E00               	movlw	0
  3466  001A48  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3467  001A4A  0E5A               	movlw	90
  3468  001A4C  6F6E               	movwf	compare@upper& (0+255),b
  3469  001A4E  EC2B  F02C         	call	_compare	;wreg free
  3470  001A52  0900               	iorlw	0
  3471  001A54  B4D8               	btfsc	status,2,c
  3472  001A56  EF2F  F00D         	goto	u5201
  3473  001A5A  EF31  F00D         	goto	u5200
  3474  001A5E                     u5201:
  3475  001A5E  EF34  F00D         	goto	l5136
  3476  001A62                     u5200:
  3477  001A62  0E00               	movlw	0
  3478  001A64  0100               	movlb	0	; () banked
  3479  001A66  6F8B               	movwf	detect_color@color& (0+255),b
  3480  001A68                     l5136:
  3481                           
  3482                           ;color.c: 349:     if (color == 8) {toggle_light(2,1);}
  3483  001A68  0E08               	movlw	8
  3484  001A6A  0100               	movlb	0	; () banked
  3485  001A6C  198B               	xorwf	detect_color@color& (0+255),w,b
  3486  001A6E  A4D8               	btfss	status,2,c
  3487  001A70  EF3C  F00D         	goto	u5211
  3488  001A74  EF3E  F00D         	goto	u5210
  3489  001A78                     u5211:
  3490  001A78  EF43  F00D         	goto	l5140
  3491  001A7C                     u5210:
  3492  001A7C                     
  3493                           ; BSR set to: 0
  3494  001A7C  0E01               	movlw	1
  3495  001A7E  6E01               	movwf	toggle_light@toggletime^0,c
  3496  001A80  0E02               	movlw	2
  3497  001A82  EC0E  F01A         	call	_toggle_light
  3498  001A86                     l5140:
  3499                           
  3500                           ;color.c: 351:     return color;
  3501  001A86  0100               	movlb	0	; () banked
  3502  001A88  518B               	movf	detect_color@color& (0+255),w,b
  3503  001A8A                     
  3504                           ; BSR set to: 0
  3505  001A8A  0012               	return		;funcret
  3506  001A8C                     __end_of_detect_color:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _compare *****************
  3510 ;; Defined at:
  3511 ;;		line 354 in file "color.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  lower           2   10[BANK0 ] unsigned int 
  3514 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3515 ;;  upper           2   14[BANK0 ] unsigned int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  result          1   16[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;Total ram usage:        7 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_detect_color
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text5
  3542  005856                     __ptext5:
  3543                           	callstack 0
  3544  005856                     _compare:
  3545                           	callstack 27
  3546  005856                     
  3547                           ;color.c: 354: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 355: {;color.c: 356:     unsigned char result = 0;
  3548  005856  0E00               	movlw	0
  3549  005858  0100               	movlb	0	; () banked
  3550  00585A  6F70               	movwf	compare@result& (0+255),b
  3551  00585C                     
  3552                           ; BSR set to: 0
  3553                           ;color.c: 357:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3554  00585C  516C               	movf	compare@value2compare& (0+255),w,b
  3555  00585E  5D6A               	subwf	compare@lower& (0+255),w,b
  3556  005860  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3557  005862  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3558  005864  B0D8               	btfsc	status,0,c
  3559  005866  EF37  F02C         	goto	u4561
  3560  00586A  EF39  F02C         	goto	u4560
  3561  00586E                     u4561:
  3562  00586E  EF46  F02C         	goto	l162
  3563  005872                     u4560:
  3564  005872                     
  3565                           ; BSR set to: 0
  3566  005872  516C               	movf	compare@value2compare& (0+255),w,b
  3567  005874  5D6E               	subwf	compare@upper& (0+255),w,b
  3568  005876  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3569  005878  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3570  00587A  A0D8               	btfss	status,0,c
  3571  00587C  EF42  F02C         	goto	u4571
  3572  005880  EF44  F02C         	goto	u4570
  3573  005884                     u4571:
  3574  005884  EF46  F02C         	goto	l162
  3575  005888                     u4570:
  3576  005888                     
  3577                           ; BSR set to: 0
  3578  005888  0E01               	movlw	1
  3579  00588A  6F70               	movwf	compare@result& (0+255),b
  3580  00588C                     l162:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;color.c: 358:     return result;
  3584  00588C  5170               	movf	compare@result& (0+255),w,b
  3585  00588E                     
  3586                           ; BSR set to: 0
  3587  00588E  0012               	return		;funcret
  3588  005890                     __end_of_compare:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _color_data_collection *****************
  3592 ;; Defined at:
  3593 ;;		line 200 in file "color.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3596 ;;		 -> main@rgb(8), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  x               2  132[BANK0 ] int 
  3599 ;;  k               2  130[BANK0 ] int 
  3600 ;;  j               2  128[BANK0 ] int 
  3601 ;;  i               2  126[BANK0 ] int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;Total ram usage:       12 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 10
  3618 ;; This function calls:
  3619 ;;		_LED_B
  3620 ;;		_LED_C
  3621 ;;		_LED_G
  3622 ;;		_LED_R
  3623 ;;		_color_display
  3624 ;;		_color_predict
  3625 ;;		_read_color
  3626 ;; This function is called by:
  3627 ;;		_test_function
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text6
  3632  003C8E                     __ptext6:
  3633                           	callstack 0
  3634  003C8E                     _color_data_collection:
  3635                           	callstack 19
  3636  003C8E                     
  3637                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3638  003C8E  0E00               	movlw	0
  3639  003C90  0100               	movlb	0	; () banked
  3640  003C92  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3641  003C94  0E00               	movlw	0
  3642  003C96  6FDE               	movwf	color_data_collection@i& (0+255),b
  3643  003C98  0E00               	movlw	0
  3644  003C9A  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3645  003C9C  0E00               	movlw	0
  3646  003C9E  6FE2               	movwf	color_data_collection@k& (0+255),b
  3647  003CA0  0E00               	movlw	0
  3648  003CA2  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3649  003CA4  0E00               	movlw	0
  3650  003CA6  6FE4               	movwf	color_data_collection@x& (0+255),b
  3651                           
  3652                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3653  003CA8  0E00               	movlw	0
  3654  003CAA  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3655  003CAC  0E00               	movlw	0
  3656  003CAE  6FDE               	movwf	color_data_collection@i& (0+255),b
  3657  003CB0                     l4908:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;color.c: 204:         LED_C();
  3661  003CB0  EC61  F02D         	call	_LED_C	;wreg free
  3662  003CB4                     
  3663                           ;color.c: 205:         read_color(m);
  3664  003CB4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3665  003CB8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3666  003CBC  EC4C  F02A         	call	_read_color	;wreg free
  3667  003CC0                     
  3668                           ;color.c: 206:         color_display(m);
  3669  003CC0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3670  003CC4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3671  003CC8  EC75  F029         	call	_color_display	;wreg free
  3672  003CCC                     
  3673                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3674  003CCC  0E09               	movlw	9
  3675  003CCE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3676  003CD0  0E1E               	movlw	30
  3677  003CD2  6E5C               	movwf	??_color_data_collection^0,c
  3678  003CD4  0EE4               	movlw	228
  3679  003CD6                     u5747:
  3680  003CD6  2EE8               	decfsz	wreg,f,c
  3681  003CD8  D7FE               	bra	u5747
  3682  003CDA  2E5C               	decfsz	??_color_data_collection^0,f,c
  3683  003CDC  D7FC               	bra	u5747
  3684  003CDE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3685  003CE0  D7FA               	bra	u5747
  3686  003CE2  D000               	nop2	
  3687  003CE4                     
  3688                           ;color.c: 208:     }
  3689  003CE4  0100               	movlb	0	; () banked
  3690  003CE6  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3691  003CE8  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3692  003CEA                     
  3693                           ; BSR set to: 0
  3694  003CEA  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3695  003CEC  EF81  F01E         	goto	u5071
  3696  003CF0  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3697  003CF2  E109               	bnz	u5070
  3698  003CF4  0E05               	movlw	5
  3699  003CF6  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3700  003CF8  A0D8               	btfss	status,0,c
  3701  003CFA  EF81  F01E         	goto	u5071
  3702  003CFE  EF83  F01E         	goto	u5070
  3703  003D02                     u5071:
  3704  003D02  EF58  F01E         	goto	l4908
  3705  003D06                     u5070:
  3706  003D06                     
  3707                           ; BSR set to: 0
  3708                           ;color.c: 209:     color_predict(00000);
  3709  003D06  0E00               	movlw	0
  3710  003D08  ECCE  F02C         	call	_color_predict
  3711  003D0C                     
  3712                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3713  003D0C  0E00               	movlw	0
  3714  003D0E  0100               	movlb	0	; () banked
  3715  003D10  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3716  003D12  0E00               	movlw	0
  3717  003D14  6FE0               	movwf	color_data_collection@j& (0+255),b
  3718  003D16                     l4928:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;color.c: 211:         LED_R();
  3722  003D16  EC21  F02D         	call	_LED_R	;wreg free
  3723  003D1A                     
  3724                           ;color.c: 212:         read_color(m);
  3725  003D1A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3726  003D1E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3727  003D22  EC4C  F02A         	call	_read_color	;wreg free
  3728  003D26                     
  3729                           ;color.c: 213:         color_display(m);
  3730  003D26  C05A  F058         	movff	color_data_collection@m,color_display@m
  3731  003D2A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3732  003D2E  EC75  F029         	call	_color_display	;wreg free
  3733  003D32                     
  3734                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3735  003D32  0E09               	movlw	9
  3736  003D34  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3737  003D36  0E1E               	movlw	30
  3738  003D38  6E5C               	movwf	??_color_data_collection^0,c
  3739  003D3A  0EE4               	movlw	228
  3740  003D3C                     u5757:
  3741  003D3C  2EE8               	decfsz	wreg,f,c
  3742  003D3E  D7FE               	bra	u5757
  3743  003D40  2E5C               	decfsz	??_color_data_collection^0,f,c
  3744  003D42  D7FC               	bra	u5757
  3745  003D44  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3746  003D46  D7FA               	bra	u5757
  3747  003D48  D000               	nop2	
  3748  003D4A                     
  3749                           ;color.c: 215:     }
  3750  003D4A  0100               	movlb	0	; () banked
  3751  003D4C  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3752  003D4E  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3753  003D50                     
  3754                           ; BSR set to: 0
  3755  003D50  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3756  003D52  EFB4  F01E         	goto	u5081
  3757  003D56  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3758  003D58  E109               	bnz	u5080
  3759  003D5A  0E05               	movlw	5
  3760  003D5C  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3761  003D5E  A0D8               	btfss	status,0,c
  3762  003D60  EFB4  F01E         	goto	u5081
  3763  003D64  EFB6  F01E         	goto	u5080
  3764  003D68                     u5081:
  3765  003D68  EF8B  F01E         	goto	l4928
  3766  003D6C                     u5080:
  3767  003D6C                     
  3768                           ; BSR set to: 0
  3769                           ;color.c: 216:     color_predict(00000);
  3770  003D6C  0E00               	movlw	0
  3771  003D6E  ECCE  F02C         	call	_color_predict
  3772  003D72                     
  3773                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3774  003D72  0E00               	movlw	0
  3775  003D74  0100               	movlb	0	; () banked
  3776  003D76  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3777  003D78  0E00               	movlw	0
  3778  003D7A  6FE2               	movwf	color_data_collection@k& (0+255),b
  3779  003D7C                     l4948:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;color.c: 218:         LED_G();
  3783  003D7C  EC41  F02D         	call	_LED_G	;wreg free
  3784  003D80                     
  3785                           ;color.c: 219:         read_color(m);
  3786  003D80  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3787  003D84  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3788  003D88  EC4C  F02A         	call	_read_color	;wreg free
  3789  003D8C                     
  3790                           ;color.c: 220:         color_display(m);
  3791  003D8C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3792  003D90  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3793  003D94  EC75  F029         	call	_color_display	;wreg free
  3794  003D98                     
  3795                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3796  003D98  0E09               	movlw	9
  3797  003D9A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3798  003D9C  0E1E               	movlw	30
  3799  003D9E  6E5C               	movwf	??_color_data_collection^0,c
  3800  003DA0  0EE4               	movlw	228
  3801  003DA2                     u5767:
  3802  003DA2  2EE8               	decfsz	wreg,f,c
  3803  003DA4  D7FE               	bra	u5767
  3804  003DA6  2E5C               	decfsz	??_color_data_collection^0,f,c
  3805  003DA8  D7FC               	bra	u5767
  3806  003DAA  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3807  003DAC  D7FA               	bra	u5767
  3808  003DAE  D000               	nop2	
  3809  003DB0                     
  3810                           ;color.c: 222:     }
  3811  003DB0  0100               	movlb	0	; () banked
  3812  003DB2  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3813  003DB4  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3814  003DB6                     
  3815                           ; BSR set to: 0
  3816  003DB6  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3817  003DB8  EFE7  F01E         	goto	u5091
  3818  003DBC  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3819  003DBE  E109               	bnz	u5090
  3820  003DC0  0E05               	movlw	5
  3821  003DC2  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3822  003DC4  A0D8               	btfss	status,0,c
  3823  003DC6  EFE7  F01E         	goto	u5091
  3824  003DCA  EFE9  F01E         	goto	u5090
  3825  003DCE                     u5091:
  3826  003DCE  EFBE  F01E         	goto	l4948
  3827  003DD2                     u5090:
  3828  003DD2                     
  3829                           ; BSR set to: 0
  3830                           ;color.c: 223:     color_predict(00000);
  3831  003DD2  0E00               	movlw	0
  3832  003DD4  ECCE  F02C         	call	_color_predict
  3833  003DD8                     
  3834                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3835  003DD8  0E00               	movlw	0
  3836  003DDA  0100               	movlb	0	; () banked
  3837  003DDC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3838  003DDE  0E00               	movlw	0
  3839  003DE0  6FE4               	movwf	color_data_collection@x& (0+255),b
  3840  003DE2                     l4968:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;color.c: 225:         LED_B();
  3844  003DE2  EC51  F02D         	call	_LED_B	;wreg free
  3845  003DE6                     
  3846                           ;color.c: 226:         read_color(m);
  3847  003DE6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3848  003DEA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3849  003DEE  EC4C  F02A         	call	_read_color	;wreg free
  3850  003DF2                     
  3851                           ;color.c: 227:         color_display(m);
  3852  003DF2  C05A  F058         	movff	color_data_collection@m,color_display@m
  3853  003DF6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3854  003DFA  EC75  F029         	call	_color_display	;wreg free
  3855  003DFE                     
  3856                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3857  003DFE  0E09               	movlw	9
  3858  003E00  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3859  003E02  0E1E               	movlw	30
  3860  003E04  6E5C               	movwf	??_color_data_collection^0,c
  3861  003E06  0EE4               	movlw	228
  3862  003E08                     u5777:
  3863  003E08  2EE8               	decfsz	wreg,f,c
  3864  003E0A  D7FE               	bra	u5777
  3865  003E0C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3866  003E0E  D7FC               	bra	u5777
  3867  003E10  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3868  003E12  D7FA               	bra	u5777
  3869  003E14  D000               	nop2	
  3870  003E16                     
  3871                           ;color.c: 229:     }
  3872  003E16  0100               	movlb	0	; () banked
  3873  003E18  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3874  003E1A  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3875  003E1C                     
  3876                           ; BSR set to: 0
  3877  003E1C  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3878  003E1E  EF1A  F01F         	goto	u5101
  3879  003E22  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3880  003E24  E109               	bnz	u5100
  3881  003E26  0E05               	movlw	5
  3882  003E28  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3883  003E2A  A0D8               	btfss	status,0,c
  3884  003E2C  EF1A  F01F         	goto	u5101
  3885  003E30  EF1C  F01F         	goto	u5100
  3886  003E34                     u5101:
  3887  003E34  EFF1  F01E         	goto	l4968
  3888  003E38                     u5100:
  3889  003E38                     
  3890                           ; BSR set to: 0
  3891                           ;color.c: 230:     color_predict(1);
  3892  003E38  0E01               	movlw	1
  3893  003E3A  ECCE  F02C         	call	_color_predict
  3894  003E3E                     
  3895                           ;color.c: 231:     LED_C();
  3896  003E3E  EC61  F02D         	call	_LED_C	;wreg free
  3897  003E42  0012               	return		;funcret
  3898  003E44                     __end_of_color_data_collection:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _read_color *****************
  3902 ;; Defined at:
  3903 ;;		line 147 in file "color.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3906 ;;		 -> main@rgb(8), 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;Total ram usage:        2 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 4
  3925 ;; This function calls:
  3926 ;;		_color_read_Blue
  3927 ;;		_color_read_Clear
  3928 ;;		_color_read_Green
  3929 ;;		_color_read_Red
  3930 ;; This function is called by:
  3931 ;;		_color_data_collection
  3932 ;;		_detect_color
  3933 ;;		_test_function
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text7
  3938  005498                     __ptext7:
  3939                           	callstack 0
  3940  005498                     _read_color:
  3941                           	callstack 24
  3942  005498                     
  3943                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3944  005498  ECA4  F02A         	call	_color_read_Red	;wreg free
  3945  00549C  C00C  FFD9         	movff	read_color@m,fsr2l
  3946  0054A0  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3947  0054A4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3948  0054A8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3949                           
  3950                           ;color.c: 150:     m->B = color_read_Blue();
  3951  0054AC  ECF4  F02A         	call	_color_read_Blue	;wreg free
  3952  0054B0  EE20 F004          	lfsr	2,4
  3953  0054B4  500C               	movf	read_color@m^0,w,c
  3954  0054B6  26D9               	addwf	fsr2l,f,c
  3955  0054B8  500D               	movf	(read_color@m+1)^0,w,c
  3956  0054BA  22DA               	addwfc	fsr2h,f,c
  3957  0054BC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3958  0054C0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3959                           
  3960                           ;color.c: 151:     m->G = color_read_Green();
  3961  0054C4  ECCC  F02A         	call	_color_read_Green	;wreg free
  3962  0054C8  EE20 F002          	lfsr	2,2
  3963  0054CC  500C               	movf	read_color@m^0,w,c
  3964  0054CE  26D9               	addwf	fsr2l,f,c
  3965  0054D0  500D               	movf	(read_color@m+1)^0,w,c
  3966  0054D2  22DA               	addwfc	fsr2h,f,c
  3967  0054D4  C005  FFDE         	movff	?_color_read_Green,postinc2
  3968  0054D8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3969                           
  3970                           ;color.c: 152:     m->C = color_read_Clear();
  3971  0054DC  EC1C  F02B         	call	_color_read_Clear	;wreg free
  3972  0054E0  EE20 F006          	lfsr	2,6
  3973  0054E4  500C               	movf	read_color@m^0,w,c
  3974  0054E6  26D9               	addwf	fsr2l,f,c
  3975  0054E8  500D               	movf	(read_color@m+1)^0,w,c
  3976  0054EA  22DA               	addwfc	fsr2h,f,c
  3977  0054EC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3978  0054F0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3979  0054F4  0012               	return		;funcret
  3980  0054F6                     __end_of_read_color:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _color_display *****************
  3984 ;; Defined at:
  3985 ;;		line 234 in file "color.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3988 ;;		 -> main@rgb(8), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;Total ram usage:      102 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 9
  4007 ;; This function calls:
  4008 ;;		_sendStringSerial4
  4009 ;;		_sprintf
  4010 ;; This function is called by:
  4011 ;;		_color_data_collection
  4012 ;;		_test_function
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text8
  4017  0052EA                     __ptext8:
  4018                           	callstack 0
  4019  0052EA                     _color_display:
  4020                           	callstack 20
  4021  0052EA                     
  4022                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4023  0052EA  0E79               	movlw	low color_display@buf
  4024  0052EC  0100               	movlb	0	; () banked
  4025  0052EE  6F60               	movwf	sprintf@s& (0+255),b
  4026  0052F0  0E00               	movlw	high color_display@buf
  4027  0052F2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4028  0052F4  0E16               	movlw	low STR_1
  4029  0052F6  6F62               	movwf	sprintf@fmt& (0+255),b
  4030  0052F8  0E0E               	movlw	high STR_1
  4031  0052FA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4032  0052FC  C058  FFD9         	movff	color_display@m,fsr2l
  4033  005300  C059  FFDA         	movff	color_display@m+1,fsr2h
  4034  005304  CFDE F064          	movff	postinc2,?_sprintf+4
  4035  005308  CFDD F065          	movff	postdec2,?_sprintf+5
  4036  00530C  EE20 F002          	lfsr	2,2
  4037  005310  5058               	movf	color_display@m^0,w,c
  4038  005312  26D9               	addwf	fsr2l,f,c
  4039  005314  5059               	movf	(color_display@m+1)^0,w,c
  4040  005316  22DA               	addwfc	fsr2h,f,c
  4041  005318  CFDE F066          	movff	postinc2,?_sprintf+6
  4042  00531C  CFDD F067          	movff	postdec2,?_sprintf+7
  4043  005320  EE20 F004          	lfsr	2,4
  4044  005324  5058               	movf	color_display@m^0,w,c
  4045  005326  26D9               	addwf	fsr2l,f,c
  4046  005328  5059               	movf	(color_display@m+1)^0,w,c
  4047  00532A  22DA               	addwfc	fsr2h,f,c
  4048  00532C  CFDE F068          	movff	postinc2,?_sprintf+8
  4049  005330  CFDD F069          	movff	postdec2,?_sprintf+9
  4050  005334  EE20 F006          	lfsr	2,6
  4051  005338  5058               	movf	color_display@m^0,w,c
  4052  00533A  26D9               	addwf	fsr2l,f,c
  4053  00533C  5059               	movf	(color_display@m+1)^0,w,c
  4054  00533E  22DA               	addwfc	fsr2h,f,c
  4055  005340  CFDE F06A          	movff	postinc2,?_sprintf+10
  4056  005344  CFDD F06B          	movff	postdec2,?_sprintf+11
  4057  005348  EC7B  F02A         	call	_sprintf	;wreg free
  4058  00534C                     
  4059                           ;color.c: 238:     sendStringSerial4(buf);
  4060  00534C  0E79               	movlw	low color_display@buf
  4061  00534E  6E02               	movwf	sendStringSerial4@string^0,c
  4062  005350  0E00               	movlw	high color_display@buf
  4063  005352  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4064  005354  ECB6  F02C         	call	_sendStringSerial4	;wreg free
  4065  005358  0012               	return		;funcret
  4066  00535A                     __end_of_color_display:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _calibrate_white *****************
  4070 ;; Defined at:
  4071 ;;		line 258 in file "color.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  w               2   11[COMRAM] PTR struct white_card
  4074 ;;		 -> main@white(28), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;Total ram usage:        4 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; Hardware stack levels required when called: 4
  4093 ;; This function calls:
  4094 ;;		_LED_B
  4095 ;;		_LED_C
  4096 ;;		_LED_G
  4097 ;;		_LED_OFF
  4098 ;;		_LED_R
  4099 ;;		_color_read_Blue
  4100 ;;		_color_read_Clear
  4101 ;;		_color_read_Green
  4102 ;;		_color_read_Red
  4103 ;;		_toggle_light
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;;		_test_function
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text9
  4111  0036C8                     __ptext9:
  4112                           	callstack 0
  4113  0036C8                     _calibrate_white:
  4114                           	callstack 25
  4115  0036C8                     
  4116                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  4117  0036C8  EC31  F02D         	call	_LED_OFF	;wreg free
  4118  0036CC                     
  4119                           ;color.c: 261:     toggle_light(1,2);
  4120  0036CC  0E02               	movlw	2
  4121  0036CE  6E01               	movwf	toggle_light@toggletime^0,c
  4122  0036D0  0E01               	movlw	1
  4123  0036D2  EC0E  F01A         	call	_toggle_light
  4124  0036D6                     
  4125                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4126  0036D6  0E29               	movlw	41
  4127  0036D8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4128  0036DA  0E96               	movlw	150
  4129  0036DC  6E0E               	movwf	??_calibrate_white^0,c
  4130  0036DE  0E7F               	movlw	127
  4131  0036E0                     u5787:
  4132  0036E0  2EE8               	decfsz	wreg,f,c
  4133  0036E2  D7FE               	bra	u5787
  4134  0036E4  2E0E               	decfsz	??_calibrate_white^0,f,c
  4135  0036E6  D7FC               	bra	u5787
  4136  0036E8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4137  0036EA  D7FA               	bra	u5787
  4138  0036EC  F000               	nop	
  4139  0036EE                     
  4140                           ;color.c: 264:     LED_R();
  4141  0036EE  EC21  F02D         	call	_LED_R	;wreg free
  4142  0036F2                     
  4143                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  4144  0036F2  ECA4  F02A         	call	_color_read_Red	;wreg free
  4145  0036F6  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  4146  0036FA  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  4147  0036FE  C005  FFDE         	movff	?_color_read_Red,postinc2
  4148  003702  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4149  003706  ECCC  F02A         	call	_color_read_Green	;wreg free
  4150  00370A  EE20 F002          	lfsr	2,2
  4151  00370E  500C               	movf	calibrate_white@w^0,w,c
  4152  003710  26D9               	addwf	fsr2l,f,c
  4153  003712  500D               	movf	(calibrate_white@w+1)^0,w,c
  4154  003714  22DA               	addwfc	fsr2h,f,c
  4155  003716  C005  FFDE         	movff	?_color_read_Green,postinc2
  4156  00371A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4157  00371E  ECF4  F02A         	call	_color_read_Blue	;wreg free
  4158  003722  EE20 F004          	lfsr	2,4
  4159  003726  500C               	movf	calibrate_white@w^0,w,c
  4160  003728  26D9               	addwf	fsr2l,f,c
  4161  00372A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4162  00372C  22DA               	addwfc	fsr2h,f,c
  4163  00372E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4164  003732  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4165  003736                     
  4166                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4167  003736  0E09               	movlw	9
  4168  003738  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4169  00373A  0E1E               	movlw	30
  4170  00373C  6E0E               	movwf	??_calibrate_white^0,c
  4171  00373E  0EE4               	movlw	228
  4172  003740                     u5797:
  4173  003740  2EE8               	decfsz	wreg,f,c
  4174  003742  D7FE               	bra	u5797
  4175  003744  2E0E               	decfsz	??_calibrate_white^0,f,c
  4176  003746  D7FC               	bra	u5797
  4177  003748  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4178  00374A  D7FA               	bra	u5797
  4179  00374C  D000               	nop2	
  4180  00374E                     
  4181                           ;color.c: 268:     LED_G();
  4182  00374E  EC41  F02D         	call	_LED_G	;wreg free
  4183  003752                     
  4184                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  4185  003752  ECA4  F02A         	call	_color_read_Red	;wreg free
  4186  003756  EE20 F006          	lfsr	2,6
  4187  00375A  500C               	movf	calibrate_white@w^0,w,c
  4188  00375C  26D9               	addwf	fsr2l,f,c
  4189  00375E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4190  003760  22DA               	addwfc	fsr2h,f,c
  4191  003762  C005  FFDE         	movff	?_color_read_Red,postinc2
  4192  003766  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4193  00376A  ECCC  F02A         	call	_color_read_Green	;wreg free
  4194  00376E  EE20 F008          	lfsr	2,8
  4195  003772  500C               	movf	calibrate_white@w^0,w,c
  4196  003774  26D9               	addwf	fsr2l,f,c
  4197  003776  500D               	movf	(calibrate_white@w+1)^0,w,c
  4198  003778  22DA               	addwfc	fsr2h,f,c
  4199  00377A  C005  FFDE         	movff	?_color_read_Green,postinc2
  4200  00377E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4201  003782  ECF4  F02A         	call	_color_read_Blue	;wreg free
  4202  003786  EE20 F00A          	lfsr	2,10
  4203  00378A  500C               	movf	calibrate_white@w^0,w,c
  4204  00378C  26D9               	addwf	fsr2l,f,c
  4205  00378E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4206  003790  22DA               	addwfc	fsr2h,f,c
  4207  003792  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4208  003796  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4209  00379A                     
  4210                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4211  00379A  0E09               	movlw	9
  4212  00379C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4213  00379E  0E1E               	movlw	30
  4214  0037A0  6E0E               	movwf	??_calibrate_white^0,c
  4215  0037A2  0EE4               	movlw	228
  4216  0037A4                     u5807:
  4217  0037A4  2EE8               	decfsz	wreg,f,c
  4218  0037A6  D7FE               	bra	u5807
  4219  0037A8  2E0E               	decfsz	??_calibrate_white^0,f,c
  4220  0037AA  D7FC               	bra	u5807
  4221  0037AC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4222  0037AE  D7FA               	bra	u5807
  4223  0037B0  D000               	nop2	
  4224  0037B2                     
  4225                           ;color.c: 273:     LED_B();
  4226  0037B2  EC51  F02D         	call	_LED_B	;wreg free
  4227  0037B6                     
  4228                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  4229  0037B6  ECA4  F02A         	call	_color_read_Red	;wreg free
  4230  0037BA  EE20 F00C          	lfsr	2,12
  4231  0037BE  500C               	movf	calibrate_white@w^0,w,c
  4232  0037C0  26D9               	addwf	fsr2l,f,c
  4233  0037C2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4234  0037C4  22DA               	addwfc	fsr2h,f,c
  4235  0037C6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4236  0037CA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4237  0037CE  ECCC  F02A         	call	_color_read_Green	;wreg free
  4238  0037D2  EE20 F00E          	lfsr	2,14
  4239  0037D6  500C               	movf	calibrate_white@w^0,w,c
  4240  0037D8  26D9               	addwf	fsr2l,f,c
  4241  0037DA  500D               	movf	(calibrate_white@w+1)^0,w,c
  4242  0037DC  22DA               	addwfc	fsr2h,f,c
  4243  0037DE  C005  FFDE         	movff	?_color_read_Green,postinc2
  4244  0037E2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4245  0037E6  ECF4  F02A         	call	_color_read_Blue	;wreg free
  4246  0037EA  EE20 F010          	lfsr	2,16
  4247  0037EE  500C               	movf	calibrate_white@w^0,w,c
  4248  0037F0  26D9               	addwf	fsr2l,f,c
  4249  0037F2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4250  0037F4  22DA               	addwfc	fsr2h,f,c
  4251  0037F6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4252  0037FA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4253  0037FE  EC1C  F02B         	call	_color_read_Clear	;wreg free
  4254  003802  EE20 F01A          	lfsr	2,26
  4255  003806  500C               	movf	calibrate_white@w^0,w,c
  4256  003808  26D9               	addwf	fsr2l,f,c
  4257  00380A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4258  00380C  22DA               	addwfc	fsr2h,f,c
  4259  00380E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4260  003812  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4261  003816                     
  4262                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4263  003816  0E09               	movlw	9
  4264  003818  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4265  00381A  0E1E               	movlw	30
  4266  00381C  6E0E               	movwf	??_calibrate_white^0,c
  4267  00381E  0EE4               	movlw	228
  4268  003820                     u5817:
  4269  003820  2EE8               	decfsz	wreg,f,c
  4270  003822  D7FE               	bra	u5817
  4271  003824  2E0E               	decfsz	??_calibrate_white^0,f,c
  4272  003826  D7FC               	bra	u5817
  4273  003828  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4274  00382A  D7FA               	bra	u5817
  4275  00382C  D000               	nop2	
  4276  00382E                     
  4277                           ;color.c: 277:     LED_C();
  4278  00382E  EC61  F02D         	call	_LED_C	;wreg free
  4279  003832                     
  4280                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4281  003832  ECA4  F02A         	call	_color_read_Red	;wreg free
  4282  003836  EE20 F012          	lfsr	2,18
  4283  00383A  500C               	movf	calibrate_white@w^0,w,c
  4284  00383C  26D9               	addwf	fsr2l,f,c
  4285  00383E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4286  003840  22DA               	addwfc	fsr2h,f,c
  4287  003842  C005  FFDE         	movff	?_color_read_Red,postinc2
  4288  003846  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4289  00384A  ECCC  F02A         	call	_color_read_Green	;wreg free
  4290  00384E  EE20 F014          	lfsr	2,20
  4291  003852  500C               	movf	calibrate_white@w^0,w,c
  4292  003854  26D9               	addwf	fsr2l,f,c
  4293  003856  500D               	movf	(calibrate_white@w+1)^0,w,c
  4294  003858  22DA               	addwfc	fsr2h,f,c
  4295  00385A  C005  FFDE         	movff	?_color_read_Green,postinc2
  4296  00385E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4297  003862  ECF4  F02A         	call	_color_read_Blue	;wreg free
  4298  003866  EE20 F016          	lfsr	2,22
  4299  00386A  500C               	movf	calibrate_white@w^0,w,c
  4300  00386C  26D9               	addwf	fsr2l,f,c
  4301  00386E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4302  003870  22DA               	addwfc	fsr2h,f,c
  4303  003872  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4304  003876  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4305  00387A  EC1C  F02B         	call	_color_read_Clear	;wreg free
  4306  00387E  EE20 F018          	lfsr	2,24
  4307  003882  500C               	movf	calibrate_white@w^0,w,c
  4308  003884  26D9               	addwf	fsr2l,f,c
  4309  003886  500D               	movf	(calibrate_white@w+1)^0,w,c
  4310  003888  22DA               	addwfc	fsr2h,f,c
  4311  00388A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4312  00388E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4313  003892                     
  4314                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4315  003892  0E29               	movlw	41
  4316  003894  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4317  003896  0E96               	movlw	150
  4318  003898  6E0E               	movwf	??_calibrate_white^0,c
  4319  00389A  0E7F               	movlw	127
  4320  00389C                     u5827:
  4321  00389C  2EE8               	decfsz	wreg,f,c
  4322  00389E  D7FE               	bra	u5827
  4323  0038A0  2E0E               	decfsz	??_calibrate_white^0,f,c
  4324  0038A2  D7FC               	bra	u5827
  4325  0038A4  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4326  0038A6  D7FA               	bra	u5827
  4327  0038A8  F000               	nop	
  4328  0038AA                     
  4329                           ;color.c: 281:     LED_OFF();
  4330  0038AA  EC31  F02D         	call	_LED_OFF	;wreg free
  4331  0038AE                     
  4332                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4333  0038AE  0E29               	movlw	41
  4334  0038B0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4335  0038B2  0E96               	movlw	150
  4336  0038B4  6E0E               	movwf	??_calibrate_white^0,c
  4337  0038B6  0E7F               	movlw	127
  4338  0038B8                     u5837:
  4339  0038B8  2EE8               	decfsz	wreg,f,c
  4340  0038BA  D7FE               	bra	u5837
  4341  0038BC  2E0E               	decfsz	??_calibrate_white^0,f,c
  4342  0038BE  D7FC               	bra	u5837
  4343  0038C0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4344  0038C2  D7FA               	bra	u5837
  4345  0038C4  F000               	nop	
  4346                           
  4347                           ;color.c: 283:     toggle_light(1,2);
  4348  0038C6  0E02               	movlw	2
  4349  0038C8  6E01               	movwf	toggle_light@toggletime^0,c
  4350  0038CA  0E01               	movlw	1
  4351  0038CC  EC0E  F01A         	call	_toggle_light
  4352  0038D0  0012               	return		;funcret
  4353  0038D2                     __end_of_calibrate_white:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _color_read_Red *****************
  4357 ;; Defined at:
  4358 ;;		line 91 in file "color.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  tmp             2    9[COMRAM] unsigned int 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  2    4[COMRAM] unsigned int 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;Total ram usage:        7 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 3
  4379 ;; This function calls:
  4380 ;;		_I2C_2_Master_Read
  4381 ;;		_I2C_2_Master_RepStart
  4382 ;;		_I2C_2_Master_Start
  4383 ;;		_I2C_2_Master_Stop
  4384 ;;		_I2C_2_Master_Write
  4385 ;; This function is called by:
  4386 ;;		_read_color
  4387 ;;		_calibrate_white
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text10
  4392  005548                     __ptext10:
  4393                           	callstack 0
  4394  005548                     _color_read_Red:
  4395                           	callstack 24
  4396  005548                     
  4397                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4398  005548  ECDC  F02D         	call	_I2C_2_Master_Start	;wreg free
  4399                           
  4400                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4401  00554C  0E52               	movlw	82
  4402  00554E  ECC6  F02D         	call	_I2C_2_Master_Write
  4403                           
  4404                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4405  005552  0EB6               	movlw	182
  4406  005554  ECC6  F02D         	call	_I2C_2_Master_Write
  4407                           
  4408                           ;color.c: 97:  I2C_2_Master_RepStart();
  4409  005558  ECD2  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4410                           
  4411                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4412  00555C  0E53               	movlw	83
  4413  00555E  ECC6  F02D         	call	_I2C_2_Master_Write
  4414                           
  4415                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4416  005562  0E01               	movlw	1
  4417  005564  EC89  F02B         	call	_I2C_2_Master_Read
  4418  005568  6E07               	movwf	??_color_read_Red^0,c
  4419  00556A  5007               	movf	??_color_read_Red^0,w,c
  4420  00556C  6E0A               	movwf	color_read_Red@tmp^0,c
  4421  00556E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4422                           
  4423                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4424  005570  0E00               	movlw	0
  4425  005572  EC89  F02B         	call	_I2C_2_Master_Read
  4426  005576  6E07               	movwf	??_color_read_Red^0,c
  4427  005578  5007               	movf	??_color_read_Red^0,w,c
  4428  00557A  6E09               	movwf	(??_color_read_Red+2)^0,c
  4429  00557C  6A08               	clrf	(??_color_read_Red+1)^0,c
  4430  00557E  500A               	movf	color_read_Red@tmp^0,w,c
  4431  005580  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4432  005582  6E0A               	movwf	color_read_Red@tmp^0,c
  4433  005584  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4434  005586  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4435  005588  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4436                           
  4437                           ;color.c: 101:  I2C_2_Master_Stop();
  4438  00558A  ECD7  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4439  00558E                     
  4440                           ;color.c: 102:  return tmp;
  4441  00558E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4442  005592  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4443  005596  0012               	return		;funcret
  4444  005598                     __end_of_color_read_Red:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _color_read_Green *****************
  4448 ;; Defined at:
  4449 ;;		line 119 in file "color.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  tmp             2    9[COMRAM] unsigned int 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    4[COMRAM] unsigned int 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4465 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;Total ram usage:        7 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 3
  4470 ;; This function calls:
  4471 ;;		_I2C_2_Master_Read
  4472 ;;		_I2C_2_Master_RepStart
  4473 ;;		_I2C_2_Master_Start
  4474 ;;		_I2C_2_Master_Stop
  4475 ;;		_I2C_2_Master_Write
  4476 ;; This function is called by:
  4477 ;;		_read_color
  4478 ;;		_calibrate_white
  4479 ;;		_distance_measure
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text11
  4484  005598                     __ptext11:
  4485                           	callstack 0
  4486  005598                     _color_read_Green:
  4487                           	callstack 24
  4488  005598                     
  4489                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4490  005598  ECDC  F02D         	call	_I2C_2_Master_Start	;wreg free
  4491                           
  4492                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4493  00559C  0E52               	movlw	82
  4494  00559E  ECC6  F02D         	call	_I2C_2_Master_Write
  4495                           
  4496                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4497  0055A2  0EB8               	movlw	184
  4498  0055A4  ECC6  F02D         	call	_I2C_2_Master_Write
  4499                           
  4500                           ;color.c: 125:  I2C_2_Master_RepStart();
  4501  0055A8  ECD2  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4502                           
  4503                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4504  0055AC  0E53               	movlw	83
  4505  0055AE  ECC6  F02D         	call	_I2C_2_Master_Write
  4506                           
  4507                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4508  0055B2  0E01               	movlw	1
  4509  0055B4  EC89  F02B         	call	_I2C_2_Master_Read
  4510  0055B8  6E07               	movwf	??_color_read_Green^0,c
  4511  0055BA  5007               	movf	??_color_read_Green^0,w,c
  4512  0055BC  6E0A               	movwf	color_read_Green@tmp^0,c
  4513  0055BE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4514                           
  4515                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4516  0055C0  0E00               	movlw	0
  4517  0055C2  EC89  F02B         	call	_I2C_2_Master_Read
  4518  0055C6  6E07               	movwf	??_color_read_Green^0,c
  4519  0055C8  5007               	movf	??_color_read_Green^0,w,c
  4520  0055CA  6E09               	movwf	(??_color_read_Green+2)^0,c
  4521  0055CC  6A08               	clrf	(??_color_read_Green+1)^0,c
  4522  0055CE  500A               	movf	color_read_Green@tmp^0,w,c
  4523  0055D0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4524  0055D2  6E0A               	movwf	color_read_Green@tmp^0,c
  4525  0055D4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4526  0055D6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4527  0055D8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4528                           
  4529                           ;color.c: 129:  I2C_2_Master_Stop();
  4530  0055DA  ECD7  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4531  0055DE                     
  4532                           ;color.c: 130:  return tmp;
  4533  0055DE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4534  0055E2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4535  0055E6  0012               	return		;funcret
  4536  0055E8                     __end_of_color_read_Green:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _color_read_Blue *****************
  4540 ;; Defined at:
  4541 ;;		line 105 in file "color.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  tmp             2    9[COMRAM] unsigned int 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2    4[COMRAM] unsigned int 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;Total ram usage:        7 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 3
  4562 ;; This function calls:
  4563 ;;		_I2C_2_Master_Read
  4564 ;;		_I2C_2_Master_RepStart
  4565 ;;		_I2C_2_Master_Start
  4566 ;;		_I2C_2_Master_Stop
  4567 ;;		_I2C_2_Master_Write
  4568 ;; This function is called by:
  4569 ;;		_read_color
  4570 ;;		_calibrate_white
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text12
  4575  0055E8                     __ptext12:
  4576                           	callstack 0
  4577  0055E8                     _color_read_Blue:
  4578                           	callstack 24
  4579  0055E8                     
  4580                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4581  0055E8  ECDC  F02D         	call	_I2C_2_Master_Start	;wreg free
  4582                           
  4583                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4584  0055EC  0E52               	movlw	82
  4585  0055EE  ECC6  F02D         	call	_I2C_2_Master_Write
  4586                           
  4587                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4588  0055F2  0EBA               	movlw	186
  4589  0055F4  ECC6  F02D         	call	_I2C_2_Master_Write
  4590                           
  4591                           ;color.c: 111:  I2C_2_Master_RepStart();
  4592  0055F8  ECD2  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4593                           
  4594                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4595  0055FC  0E53               	movlw	83
  4596  0055FE  ECC6  F02D         	call	_I2C_2_Master_Write
  4597                           
  4598                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4599  005602  0E01               	movlw	1
  4600  005604  EC89  F02B         	call	_I2C_2_Master_Read
  4601  005608  6E07               	movwf	??_color_read_Blue^0,c
  4602  00560A  5007               	movf	??_color_read_Blue^0,w,c
  4603  00560C  6E0A               	movwf	color_read_Blue@tmp^0,c
  4604  00560E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4605                           
  4606                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4607  005610  0E00               	movlw	0
  4608  005612  EC89  F02B         	call	_I2C_2_Master_Read
  4609  005616  6E07               	movwf	??_color_read_Blue^0,c
  4610  005618  5007               	movf	??_color_read_Blue^0,w,c
  4611  00561A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4612  00561C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4613  00561E  500A               	movf	color_read_Blue@tmp^0,w,c
  4614  005620  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4615  005622  6E0A               	movwf	color_read_Blue@tmp^0,c
  4616  005624  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4617  005626  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4618  005628  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4619                           
  4620                           ;color.c: 115:  I2C_2_Master_Stop();
  4621  00562A  ECD7  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4622  00562E                     
  4623                           ;color.c: 116:  return tmp;
  4624  00562E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4625  005632  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4626  005636  0012               	return		;funcret
  4627  005638                     __end_of_color_read_Blue:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _LED_R *****************
  4631 ;; Defined at:
  4632 ;;		line 164 in file "color.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;Total ram usage:        2 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_color_data_collection
  4657 ;;		_calibrate_white
  4658 ;;		_detect_color
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text13
  4663  005A42                     __ptext13:
  4664                           	callstack 0
  4665  005A42                     _LED_R:
  4666                           	callstack 27
  4667  005A42                     
  4668                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4669  005A42  827F               	bsf	127,1,c	;volatile
  4670                           
  4671                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4672  005A44  9E7E               	bcf	126,7,c	;volatile
  4673                           
  4674                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4675  005A46  9879               	bcf	121,4,c	;volatile
  4676  005A48                     
  4677                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4678  005A48  0E11               	movlw	17
  4679  005A4A  6E02               	movwf	(??_LED_R+1)^0,c
  4680  005A4C  0E3C               	movlw	60
  4681  005A4E  6E01               	movwf	??_LED_R^0,c
  4682  005A50  0ECB               	movlw	203
  4683  005A52                     u5847:
  4684  005A52  2EE8               	decfsz	wreg,f,c
  4685  005A54  D7FE               	bra	u5847
  4686  005A56  2E01               	decfsz	??_LED_R^0,f,c
  4687  005A58  D7FC               	bra	u5847
  4688  005A5A  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4689  005A5C  D7FA               	bra	u5847
  4690  005A5E  F000               	nop	
  4691  005A60  0012               	return		;funcret
  4692  005A62                     __end_of_LED_R:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _LED_OFF *****************
  4696 ;; Defined at:
  4697 ;;		line 155 in file "color.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_calibrate_white
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text14
  4726  005A62                     __ptext14:
  4727                           	callstack 0
  4728  005A62                     _LED_OFF:
  4729                           	callstack 27
  4730  005A62                     
  4731                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4732  005A62  927F               	bcf	127,1,c	;volatile
  4733                           
  4734                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4735  005A64  9E7E               	bcf	126,7,c	;volatile
  4736                           
  4737                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4738  005A66  9879               	bcf	121,4,c	;volatile
  4739  005A68                     
  4740                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4741  005A68  0E11               	movlw	17
  4742  005A6A  6E02               	movwf	(??_LED_OFF+1)^0,c
  4743  005A6C  0E3C               	movlw	60
  4744  005A6E  6E01               	movwf	??_LED_OFF^0,c
  4745  005A70  0ECB               	movlw	203
  4746  005A72                     u5857:
  4747  005A72  2EE8               	decfsz	wreg,f,c
  4748  005A74  D7FE               	bra	u5857
  4749  005A76  2E01               	decfsz	??_LED_OFF^0,f,c
  4750  005A78  D7FC               	bra	u5857
  4751  005A7A  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4752  005A7C  D7FA               	bra	u5857
  4753  005A7E  F000               	nop	
  4754  005A80  0012               	return		;funcret
  4755  005A82                     __end_of_LED_OFF:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _LED_G *****************
  4759 ;; Defined at:
  4760 ;;		line 191 in file "color.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;Total ram usage:        2 bytes
  4779 ;; Hardware stack levels used: 1
  4780 ;; Hardware stack levels required when called: 1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_color_data_collection
  4785 ;;		_calibrate_white
  4786 ;;		_detect_color
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text15
  4791  005A82                     __ptext15:
  4792                           	callstack 0
  4793  005A82                     _LED_G:
  4794                           	callstack 27
  4795  005A82                     
  4796                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4797  005A82  927F               	bcf	127,1,c	;volatile
  4798                           
  4799                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4800  005A84  9E7E               	bcf	126,7,c	;volatile
  4801                           
  4802                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4803  005A86  8879               	bsf	121,4,c	;volatile
  4804  005A88                     
  4805                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4806  005A88  0E11               	movlw	17
  4807  005A8A  6E02               	movwf	(??_LED_G+1)^0,c
  4808  005A8C  0E3C               	movlw	60
  4809  005A8E  6E01               	movwf	??_LED_G^0,c
  4810  005A90  0ECB               	movlw	203
  4811  005A92                     u5867:
  4812  005A92  2EE8               	decfsz	wreg,f,c
  4813  005A94  D7FE               	bra	u5867
  4814  005A96  2E01               	decfsz	??_LED_G^0,f,c
  4815  005A98  D7FC               	bra	u5867
  4816  005A9A  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4817  005A9C  D7FA               	bra	u5867
  4818  005A9E  F000               	nop	
  4819  005AA0  0012               	return		;funcret
  4820  005AA2                     __end_of_LED_G:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _LED_B *****************
  4824 ;; Defined at:
  4825 ;;		line 182 in file "color.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;Total ram usage:        2 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 1
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_color_data_collection
  4850 ;;		_calibrate_white
  4851 ;;		_detect_color
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text16
  4856  005AA2                     __ptext16:
  4857                           	callstack 0
  4858  005AA2                     _LED_B:
  4859                           	callstack 27
  4860  005AA2                     
  4861                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4862  005AA2  927F               	bcf	127,1,c	;volatile
  4863                           
  4864                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4865  005AA4  8E7E               	bsf	126,7,c	;volatile
  4866                           
  4867                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4868  005AA6  9879               	bcf	121,4,c	;volatile
  4869  005AA8                     
  4870                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4871  005AA8  0E11               	movlw	17
  4872  005AAA  6E02               	movwf	(??_LED_B+1)^0,c
  4873  005AAC  0E3C               	movlw	60
  4874  005AAE  6E01               	movwf	??_LED_B^0,c
  4875  005AB0  0ECB               	movlw	203
  4876  005AB2                     u5877:
  4877  005AB2  2EE8               	decfsz	wreg,f,c
  4878  005AB4  D7FE               	bra	u5877
  4879  005AB6  2E01               	decfsz	??_LED_B^0,f,c
  4880  005AB8  D7FC               	bra	u5877
  4881  005ABA  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4882  005ABC  D7FA               	bra	u5877
  4883  005ABE  F000               	nop	
  4884  005AC0  0012               	return		;funcret
  4885  005AC2                     __end_of_LED_B:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _amb_light_measure *****************
  4889 ;; Defined at:
  4890 ;;		line 375 in file "color.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4893 ;;		 -> main@rgb(8), main@amb(8), 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4896 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4897 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4898 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4899 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  2   10[BANK0 ] unsigned int 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;Total ram usage:       14 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 5
  4916 ;; This function calls:
  4917 ;;		_LED_C
  4918 ;;		___fldiv
  4919 ;;		___xxtofl
  4920 ;;		_color_read_Clear
  4921 ;;		_lroundf
  4922 ;;		_toggle_light
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;;		_test_function
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text17
  4930  00493E                     __ptext17:
  4931                           	callstack 0
  4932  00493E                     _amb_light_measure:
  4933                           	callstack 24
  4934  00493E  0E00               	movlw	0
  4935  004940  0100               	movlb	0	; () banked
  4936  004942  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4937  004944  0E00               	movlw	0
  4938  004946  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4939  004948  0E00               	movlw	0
  4940  00494A  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4941  00494C  0E00               	movlw	0
  4942  00494E  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4943  004950  0E00               	movlw	0
  4944  004952  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4945  004954  0E00               	movlw	0
  4946  004956  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4947  004958                     
  4948                           ; BSR set to: 0
  4949                           ;color.c: 378:     toggle_light(2,2);
  4950  004958  0E02               	movlw	2
  4951  00495A  6E01               	movwf	toggle_light@toggletime^0,c
  4952  00495C  0E02               	movlw	2
  4953  00495E  EC0E  F01A         	call	_toggle_light
  4954  004962                     
  4955                           ;color.c: 379:     LED_C();
  4956  004962  EC61  F02D         	call	_LED_C	;wreg free
  4957  004966                     
  4958                           ;color.c: 380:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4959  004966  0E29               	movlw	41
  4960  004968  0100               	movlb	0	; () banked
  4961  00496A  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4962  00496C  0E96               	movlw	150
  4963  00496E  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4964  004970  0E7F               	movlw	127
  4965  004972                     u5887:
  4966  004972  2EE8               	decfsz	wreg,f,c
  4967  004974  D7FE               	bra	u5887
  4968  004976  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4969  004978  D7FC               	bra	u5887
  4970  00497A  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4971  00497C  D7FA               	bra	u5887
  4972  00497E                     
  4973                           ;color.c: 382:     CC_amb_1 = color_read_Clear();
  4974  00497E  EC1C  F02B         	call	_color_read_Clear	;wreg free
  4975  004982  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4976  004986  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4977  00498A                     
  4978                           ;color.c: 383:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4979  00498A  0E11               	movlw	17
  4980  00498C  0100               	movlb	0	; () banked
  4981  00498E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4982  004990  0E3C               	movlw	60
  4983  004992  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4984  004994  0ECB               	movlw	203
  4985  004996                     u5897:
  4986  004996  2EE8               	decfsz	wreg,f,c
  4987  004998  D7FE               	bra	u5897
  4988  00499A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4989  00499C  D7FC               	bra	u5897
  4990  00499E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4991  0049A0  D7FA               	bra	u5897
  4992  0049A2                     
  4993                           ;color.c: 385:     CC_amb_2 = color_read_Clear();
  4994  0049A2  EC1C  F02B         	call	_color_read_Clear	;wreg free
  4995  0049A6  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4996  0049AA  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4997  0049AE                     
  4998                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4999  0049AE  0E11               	movlw	17
  5000  0049B0  0100               	movlb	0	; () banked
  5001  0049B2  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5002  0049B4  0E3C               	movlw	60
  5003  0049B6  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5004  0049B8  0ECB               	movlw	203
  5005  0049BA                     u5907:
  5006  0049BA  2EE8               	decfsz	wreg,f,c
  5007  0049BC  D7FE               	bra	u5907
  5008  0049BE  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  5009  0049C0  D7FC               	bra	u5907
  5010  0049C2  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5011  0049C4  D7FA               	bra	u5907
  5012  0049C6                     
  5013                           ;color.c: 388:     CC_amb_3 = color_read_Clear();
  5014  0049C6  EC1C  F02B         	call	_color_read_Clear	;wreg free
  5015  0049CA  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  5016  0049CE  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  5017  0049D2                     
  5018                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  5019  0049D2  0E11               	movlw	17
  5020  0049D4  0100               	movlb	0	; () banked
  5021  0049D6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5022  0049D8  0E3C               	movlw	60
  5023  0049DA  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5024  0049DC  0ECB               	movlw	203
  5025  0049DE                     u5917:
  5026  0049DE  2EE8               	decfsz	wreg,f,c
  5027  0049E0  D7FE               	bra	u5917
  5028  0049E2  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  5029  0049E4  D7FC               	bra	u5917
  5030  0049E6  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5031  0049E8  D7FA               	bra	u5917
  5032  0049EA                     
  5033                           ;color.c: 391:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  5034  0049EA  0100               	movlb	0	; () banked
  5035  0049EC  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  5036  0049EE  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  5037  0049F0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5038  0049F2  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  5039  0049F4  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  5040  0049F6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5041  0049F8  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  5042  0049FA  276C               	addwf	??_amb_light_measure& (0+255),f,b
  5043  0049FC  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  5044  0049FE  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  5045  004A00  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  5046  004A04  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  5047  004A08  6A03               	clrf	(___xxtofl@val+2)^0,c
  5048  004A0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  5049  004A0C  0E00               	movlw	0
  5050  004A0E  EC22  F01F         	call	___xxtofl
  5051  004A12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5052  004A16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5053  004A1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5054  004A1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5055  004A22  0E00               	movlw	0
  5056  004A24  6E13               	movwf	___fldiv@a^0,c
  5057  004A26  0E00               	movlw	0
  5058  004A28  6E14               	movwf	(___fldiv@a+1)^0,c
  5059  004A2A  0E40               	movlw	64
  5060  004A2C  6E15               	movwf	(___fldiv@a+2)^0,c
  5061  004A2E  0E40               	movlw	64
  5062  004A30  6E16               	movwf	(___fldiv@a+3)^0,c
  5063  004A32  EC92  F013         	call	___fldiv	;wreg free
  5064  004A36  C00F  F066         	movff	?___fldiv,lroundf@x
  5065  004A3A  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  5066  004A3E  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  5067  004A42  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  5068  004A46  EC48  F02C         	call	_lroundf	;wreg free
  5069  004A4A  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  5070  004A4E  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  5071  004A52                     
  5072                           ;color.c: 393:     toggle_light(2,2);
  5073  004A52  0E02               	movlw	2
  5074  004A54  6E01               	movwf	toggle_light@toggletime^0,c
  5075  004A56  0E02               	movlw	2
  5076  004A58  EC0E  F01A         	call	_toggle_light
  5077  004A5C                     
  5078                           ;color.c: 395:     return CC_amb_ave;
  5079  004A5C  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  5080  004A60  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  5081  004A64  0012               	return		;funcret
  5082  004A66                     __end_of_amb_light_measure:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _lroundf *****************
  5086 ;; Defined at:
  5087 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  x               4    6[BANK0 ] float 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  4    6[BANK0 ] long 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;Total ram usage:        4 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 4
  5108 ;; This function calls:
  5109 ;;		___fltol
  5110 ;;		_roundf
  5111 ;; This function is called by:
  5112 ;;		_detect_color
  5113 ;;		_amb_light_measure
  5114 ;;		_distance_measure
  5115 ;;		_check_color_reading
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text18
  5120  005890                     __ptext18:
  5121                           	callstack 0
  5122  005890                     _lroundf:
  5123                           	callstack 24
  5124  005890  C066  F041         	movff	lroundf@x,roundf@x
  5125  005894  C067  F042         	movff	lroundf@x+1,roundf@x+1
  5126  005898  C068  F043         	movff	lroundf@x+2,roundf@x+2
  5127  00589C  C069  F044         	movff	lroundf@x+3,roundf@x+3
  5128  0058A0  ECBB  F011         	call	_roundf	;wreg free
  5129  0058A4  C041  F05B         	movff	?_roundf,___fltol@f1
  5130  0058A8  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  5131  0058AC  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  5132  0058B0  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  5133  0058B4  EC33  F025         	call	___fltol	;wreg free
  5134  0058B8  C05B  F066         	movff	?___fltol,?_lroundf
  5135  0058BC  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  5136  0058C0  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  5137  0058C4  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  5138  0058C8  0012               	return		;funcret
  5139  0058CA                     __end_of_lroundf:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _roundf *****************
  5143 ;; Defined at:
  5144 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  x               4   64[COMRAM] float 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  y               4   86[COMRAM] float 
  5149 ;;  u               4   82[COMRAM] struct .
  5150 ;;  e               2   76[COMRAM] int 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  4   64[COMRAM] float 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;Total ram usage:       26 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 3
  5167 ;; This function calls:
  5168 ;;		___fladd
  5169 ;;		___flge
  5170 ;;		___flmul
  5171 ;;		___flneg
  5172 ;;		___flsub
  5173 ;; This function is called by:
  5174 ;;		_lroundf
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text19
  5179  002376                     __ptext19:
  5180                           	callstack 0
  5181  002376                     _roundf:
  5182                           	callstack 24
  5183  002376  C1F0  F053         	movff	roundf@F527,roundf@u
  5184  00237A  C1F1  F054         	movff	roundf@F527+1,roundf@u+1
  5185  00237E  C1F2  F055         	movff	roundf@F527+2,roundf@u+2
  5186  002382  C1F3  F056         	movff	roundf@F527+3,roundf@u+3
  5187  002386  C041  F053         	movff	roundf@x,roundf@u
  5188  00238A  C042  F054         	movff	roundf@x+1,roundf@u+1
  5189  00238E  C043  F055         	movff	roundf@x+2,roundf@u+2
  5190  002392  C044  F056         	movff	roundf@x+3,roundf@u+3
  5191  002396  C053  F045         	movff	roundf@u,??_roundf
  5192  00239A  C054  F046         	movff	roundf@u+1,??_roundf+1
  5193  00239E  C055  F047         	movff	roundf@u+2,??_roundf+2
  5194  0023A2  C056  F048         	movff	roundf@u+3,??_roundf+3
  5195  0023A6  0E18               	movlw	24
  5196  0023A8  EFDB  F011         	goto	u4210
  5197  0023AC                     u4215:
  5198  0023AC  90D8               	bcf	status,0,c
  5199  0023AE  3248               	rrcf	(??_roundf+3)^0,f,c
  5200  0023B0  3247               	rrcf	(??_roundf+2)^0,f,c
  5201  0023B2  3246               	rrcf	(??_roundf+1)^0,f,c
  5202  0023B4  3245               	rrcf	??_roundf^0,f,c
  5203  0023B6                     u4210:
  5204  0023B6  2EE8               	decfsz	wreg,f,c
  5205  0023B8  EFD6  F011         	goto	u4215
  5206  0023BC  5045               	movf	??_roundf^0,w,c
  5207  0023BE  6E4D               	movwf	roundf@e^0,c
  5208  0023C0  6A4E               	clrf	(roundf@e+1)^0,c
  5209  0023C2  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5210  0023C4  EFED  F011         	goto	u4221
  5211  0023C8  504E               	movf	(roundf@e+1)^0,w,c
  5212  0023CA  E109               	bnz	u4220
  5213  0023CC  0E96               	movlw	150
  5214  0023CE  5C4D               	subwf	roundf@e^0,w,c
  5215  0023D0  A0D8               	btfss	status,0,c
  5216  0023D2  EFED  F011         	goto	u4221
  5217  0023D6  EFEF  F011         	goto	u4220
  5218  0023DA                     u4221:
  5219  0023DA  EFF9  F011         	goto	l4480
  5220  0023DE                     u4220:
  5221  0023DE  C041  F041         	movff	roundf@x,?_roundf
  5222  0023E2  C042  F042         	movff	roundf@x+1,?_roundf+1
  5223  0023E6  C043  F043         	movff	roundf@x+2,?_roundf+2
  5224  0023EA  C044  F044         	movff	roundf@x+3,?_roundf+3
  5225  0023EE  EF91  F013         	goto	l1579
  5226  0023F2                     l4480:
  5227  0023F2  C053  F045         	movff	roundf@u,??_roundf
  5228  0023F6  C054  F046         	movff	roundf@u+1,??_roundf+1
  5229  0023FA  C055  F047         	movff	roundf@u+2,??_roundf+2
  5230  0023FE  C056  F048         	movff	roundf@u+3,??_roundf+3
  5231  002402  0E20               	movlw	32
  5232  002404  EF09  F012         	goto	u4230
  5233  002408                     u4235:
  5234  002408  90D8               	bcf	status,0,c
  5235  00240A  3248               	rrcf	(??_roundf+3)^0,f,c
  5236  00240C  3247               	rrcf	(??_roundf+2)^0,f,c
  5237  00240E  3246               	rrcf	(??_roundf+1)^0,f,c
  5238  002410  3245               	rrcf	??_roundf^0,f,c
  5239  002412                     u4230:
  5240  002412  2EE8               	decfsz	wreg,f,c
  5241  002414  EF04  F012         	goto	u4235
  5242  002418  5045               	movf	??_roundf^0,w,c
  5243  00241A  1046               	iorwf	(??_roundf+1)^0,w,c
  5244  00241C  1047               	iorwf	(??_roundf+2)^0,w,c
  5245  00241E  1048               	iorwf	(??_roundf+3)^0,w,c
  5246  002420  B4D8               	btfsc	status,2,c
  5247  002422  EF15  F012         	goto	u4241
  5248  002426  EF17  F012         	goto	u4240
  5249  00242A                     u4241:
  5250  00242A  EF29  F012         	goto	l4484
  5251  00242E                     u4240:
  5252  00242E  C041  F001         	movff	roundf@x,___flneg@f1
  5253  002432  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5254  002436  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5255  00243A  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5256  00243E  EC65  F02C         	call	___flneg	;wreg free
  5257  002442  C001  F041         	movff	?___flneg,roundf@x
  5258  002446  C002  F042         	movff	?___flneg+1,roundf@x+1
  5259  00244A  C003  F043         	movff	?___flneg+2,roundf@x+2
  5260  00244E  C004  F044         	movff	?___flneg+3,roundf@x+3
  5261  002452                     l4484:
  5262  002452  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5263  002454  EF37  F012         	goto	u4250
  5264  002458  504E               	movf	(roundf@e+1)^0,w,c
  5265  00245A  E107               	bnz	u4251
  5266  00245C  0E7E               	movlw	126
  5267  00245E  5C4D               	subwf	roundf@e^0,w,c
  5268  002460  B0D8               	btfsc	status,0,c
  5269  002462  EF35  F012         	goto	u4251
  5270  002466  EF37  F012         	goto	u4250
  5271  00246A                     u4251:
  5272  00246A  EF53  F012         	goto	l4490
  5273  00246E                     u4250:
  5274  00246E  C053  F028         	movff	roundf@u,___flmul@b
  5275  002472  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5276  002476  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5277  00247A  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5278  00247E  0E00               	movlw	0
  5279  002480  6E2C               	movwf	___flmul@a^0,c
  5280  002482  0E00               	movlw	0
  5281  002484  6E2D               	movwf	(___flmul@a+1)^0,c
  5282  002486  0E00               	movlw	0
  5283  002488  6E2E               	movwf	(___flmul@a+2)^0,c
  5284  00248A  0E00               	movlw	0
  5285  00248C  6E2F               	movwf	(___flmul@a+3)^0,c
  5286  00248E  ECA6  F00F         	call	___flmul	;wreg free
  5287  002492  C028  F041         	movff	?___flmul,?_roundf
  5288  002496  C029  F042         	movff	?___flmul+1,?_roundf+1
  5289  00249A  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5290  00249E  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5291  0024A2  EF91  F013         	goto	l1579
  5292  0024A6                     l4490:
  5293  0024A6  0E00               	movlw	0
  5294  0024A8  6E05               	movwf	___fladd@a^0,c
  5295  0024AA  0E00               	movlw	0
  5296  0024AC  6E06               	movwf	(___fladd@a+1)^0,c
  5297  0024AE  0E00               	movlw	0
  5298  0024B0  6E07               	movwf	(___fladd@a+2)^0,c
  5299  0024B2  0E4B               	movlw	75
  5300  0024B4  6E08               	movwf	(___fladd@a+3)^0,c
  5301  0024B6  C041  F001         	movff	roundf@x,___fladd@b
  5302  0024BA  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5303  0024BE  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5304  0024C2  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5305  0024C6  EC46  F00D         	call	___fladd	;wreg free
  5306  0024CA  C001  F04F         	movff	?___fladd,_roundf$3259
  5307  0024CE  C002  F050         	movff	?___fladd+1,_roundf$3259+1
  5308  0024D2  C003  F051         	movff	?___fladd+2,_roundf$3259+2
  5309  0024D6  C004  F052         	movff	?___fladd+3,_roundf$3259+3
  5310  0024DA  0E00               	movlw	0
  5311  0024DC  6E05               	movwf	___fladd@a^0,c
  5312  0024DE  0E00               	movlw	0
  5313  0024E0  6E06               	movwf	(___fladd@a+1)^0,c
  5314  0024E2  0E00               	movlw	0
  5315  0024E4  6E07               	movwf	(___fladd@a+2)^0,c
  5316  0024E6  0ECB               	movlw	203
  5317  0024E8  6E08               	movwf	(___fladd@a+3)^0,c
  5318  0024EA  C04F  F001         	movff	_roundf$3259,___fladd@b
  5319  0024EE  C050  F002         	movff	_roundf$3259+1,___fladd@b+1
  5320  0024F2  C051  F003         	movff	_roundf$3259+2,___fladd@b+2
  5321  0024F6  C052  F004         	movff	_roundf$3259+3,___fladd@b+3
  5322  0024FA  EC46  F00D         	call	___fladd	;wreg free
  5323  0024FE  C001  F049         	movff	?___fladd,_roundf$3260
  5324  002502  C002  F04A         	movff	?___fladd+1,_roundf$3260+1
  5325  002506  C003  F04B         	movff	?___fladd+2,_roundf$3260+2
  5326  00250A  C004  F04C         	movff	?___fladd+3,_roundf$3260+3
  5327  00250E  C049  F011         	movff	_roundf$3260,___flsub@b
  5328  002512  C04A  F012         	movff	_roundf$3260+1,___flsub@b+1
  5329  002516  C04B  F013         	movff	_roundf$3260+2,___flsub@b+2
  5330  00251A  C04C  F014         	movff	_roundf$3260+3,___flsub@b+3
  5331  00251E  C041  F015         	movff	roundf@x,___flsub@a
  5332  002522  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5333  002526  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5334  00252A  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5335  00252E  EC44  F02B         	call	___flsub	;wreg free
  5336  002532  C011  F057         	movff	?___flsub,roundf@y
  5337  002536  C012  F058         	movff	?___flsub+1,roundf@y+1
  5338  00253A  C013  F059         	movff	?___flsub+2,roundf@y+2
  5339  00253E  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5340  002542  0E00               	movlw	0
  5341  002544  6E01               	movwf	___flge@ff1^0,c
  5342  002546  0E00               	movlw	0
  5343  002548  6E02               	movwf	(___flge@ff1+1)^0,c
  5344  00254A  0E00               	movlw	0
  5345  00254C  6E03               	movwf	(___flge@ff1+2)^0,c
  5346  00254E  0E3F               	movlw	63
  5347  002550  6E04               	movwf	(___flge@ff1+3)^0,c
  5348  002552  C057  F005         	movff	roundf@y,___flge@ff2
  5349  002556  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5350  00255A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5351  00255E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5352  002562  ECB7  F025         	call	___flge	;wreg free
  5353  002566  B0D8               	btfsc	status,0,c
  5354  002568  EFB8  F012         	goto	u4261
  5355  00256C  EFBA  F012         	goto	u4260
  5356  002570                     u4261:
  5357  002570  EFF0  F012         	goto	l4494
  5358  002574                     u4260:
  5359  002574  C041  F005         	movff	roundf@x,___fladd@a
  5360  002578  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5361  00257C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5362  002580  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5363  002584  C057  F001         	movff	roundf@y,___fladd@b
  5364  002588  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5365  00258C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5366  002590  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5367  002594  EC46  F00D         	call	___fladd	;wreg free
  5368  002598  C001  F04F         	movff	?___fladd,_roundf$3259
  5369  00259C  C002  F050         	movff	?___fladd+1,_roundf$3259+1
  5370  0025A0  C003  F051         	movff	?___fladd+2,_roundf$3259+2
  5371  0025A4  C004  F052         	movff	?___fladd+3,_roundf$3259+3
  5372  0025A8  C04F  F001         	movff	_roundf$3259,___fladd@b
  5373  0025AC  C050  F002         	movff	_roundf$3259+1,___fladd@b+1
  5374  0025B0  C051  F003         	movff	_roundf$3259+2,___fladd@b+2
  5375  0025B4  C052  F004         	movff	_roundf$3259+3,___fladd@b+3
  5376  0025B8  0E00               	movlw	0
  5377  0025BA  6E05               	movwf	___fladd@a^0,c
  5378  0025BC  0E00               	movlw	0
  5379  0025BE  6E06               	movwf	(___fladd@a+1)^0,c
  5380  0025C0  0E80               	movlw	128
  5381  0025C2  6E07               	movwf	(___fladd@a+2)^0,c
  5382  0025C4  0EBF               	movlw	191
  5383  0025C6  6E08               	movwf	(___fladd@a+3)^0,c
  5384  0025C8  EC46  F00D         	call	___fladd	;wreg free
  5385  0025CC  C001  F057         	movff	?___fladd,roundf@y
  5386  0025D0  C002  F058         	movff	?___fladd+1,roundf@y+1
  5387  0025D4  C003  F059         	movff	?___fladd+2,roundf@y+2
  5388  0025D8  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5389  0025DC  EF59  F013         	goto	l4500
  5390  0025E0                     l4494:
  5391  0025E0  0E00               	movlw	0
  5392  0025E2  6E01               	movwf	___flge@ff1^0,c
  5393  0025E4  0E00               	movlw	0
  5394  0025E6  6E02               	movwf	(___flge@ff1+1)^0,c
  5395  0025E8  0E00               	movlw	0
  5396  0025EA  6E03               	movwf	(___flge@ff1+2)^0,c
  5397  0025EC  0EBF               	movlw	191
  5398  0025EE  6E04               	movwf	(___flge@ff1+3)^0,c
  5399  0025F0  C057  F005         	movff	roundf@y,___flge@ff2
  5400  0025F4  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5401  0025F8  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5402  0025FC  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5403  002600  ECB7  F025         	call	___flge	;wreg free
  5404  002604  A0D8               	btfss	status,0,c
  5405  002606  EF07  F013         	goto	u4271
  5406  00260A  EF09  F013         	goto	u4270
  5407  00260E                     u4271:
  5408  00260E  EF3F  F013         	goto	l4498
  5409  002612                     u4270:
  5410  002612  C041  F005         	movff	roundf@x,___fladd@a
  5411  002616  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5412  00261A  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5413  00261E  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5414  002622  C057  F001         	movff	roundf@y,___fladd@b
  5415  002626  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5416  00262A  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5417  00262E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5418  002632  EC46  F00D         	call	___fladd	;wreg free
  5419  002636  C001  F04F         	movff	?___fladd,_roundf$3259
  5420  00263A  C002  F050         	movff	?___fladd+1,_roundf$3259+1
  5421  00263E  C003  F051         	movff	?___fladd+2,_roundf$3259+2
  5422  002642  C004  F052         	movff	?___fladd+3,_roundf$3259+3
  5423  002646  C04F  F001         	movff	_roundf$3259,___fladd@b
  5424  00264A  C050  F002         	movff	_roundf$3259+1,___fladd@b+1
  5425  00264E  C051  F003         	movff	_roundf$3259+2,___fladd@b+2
  5426  002652  C052  F004         	movff	_roundf$3259+3,___fladd@b+3
  5427  002656  0E00               	movlw	0
  5428  002658  6E05               	movwf	___fladd@a^0,c
  5429  00265A  0E00               	movlw	0
  5430  00265C  6E06               	movwf	(___fladd@a+1)^0,c
  5431  00265E  0E80               	movlw	128
  5432  002660  6E07               	movwf	(___fladd@a+2)^0,c
  5433  002662  0E3F               	movlw	63
  5434  002664  6E08               	movwf	(___fladd@a+3)^0,c
  5435  002666  EC46  F00D         	call	___fladd	;wreg free
  5436  00266A  C001  F057         	movff	?___fladd,roundf@y
  5437  00266E  C002  F058         	movff	?___fladd+1,roundf@y+1
  5438  002672  C003  F059         	movff	?___fladd+2,roundf@y+2
  5439  002676  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5440  00267A  EF59  F013         	goto	l4500
  5441  00267E                     l4498:
  5442  00267E  C057  F001         	movff	roundf@y,___fladd@b
  5443  002682  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5444  002686  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5445  00268A  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5446  00268E  C041  F005         	movff	roundf@x,___fladd@a
  5447  002692  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5448  002696  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5449  00269A  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5450  00269E  EC46  F00D         	call	___fladd	;wreg free
  5451  0026A2  C001  F057         	movff	?___fladd,roundf@y
  5452  0026A6  C002  F058         	movff	?___fladd+1,roundf@y+1
  5453  0026AA  C003  F059         	movff	?___fladd+2,roundf@y+2
  5454  0026AE  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5455  0026B2                     l4500:
  5456  0026B2  C053  F045         	movff	roundf@u,??_roundf
  5457  0026B6  C054  F046         	movff	roundf@u+1,??_roundf+1
  5458  0026BA  C055  F047         	movff	roundf@u+2,??_roundf+2
  5459  0026BE  C056  F048         	movff	roundf@u+3,??_roundf+3
  5460  0026C2  0E20               	movlw	32
  5461  0026C4  EF69  F013         	goto	u4280
  5462  0026C8                     u4285:
  5463  0026C8  90D8               	bcf	status,0,c
  5464  0026CA  3248               	rrcf	(??_roundf+3)^0,f,c
  5465  0026CC  3247               	rrcf	(??_roundf+2)^0,f,c
  5466  0026CE  3246               	rrcf	(??_roundf+1)^0,f,c
  5467  0026D0  3245               	rrcf	??_roundf^0,f,c
  5468  0026D2                     u4280:
  5469  0026D2  2EE8               	decfsz	wreg,f,c
  5470  0026D4  EF64  F013         	goto	u4285
  5471  0026D8  5045               	movf	??_roundf^0,w,c
  5472  0026DA  1046               	iorwf	(??_roundf+1)^0,w,c
  5473  0026DC  1047               	iorwf	(??_roundf+2)^0,w,c
  5474  0026DE  1048               	iorwf	(??_roundf+3)^0,w,c
  5475  0026E0  B4D8               	btfsc	status,2,c
  5476  0026E2  EF75  F013         	goto	u4291
  5477  0026E6  EF77  F013         	goto	u4290
  5478  0026EA                     u4291:
  5479  0026EA  EF89  F013         	goto	l4504
  5480  0026EE                     u4290:
  5481  0026EE  C057  F001         	movff	roundf@y,___flneg@f1
  5482  0026F2  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5483  0026F6  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5484  0026FA  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5485  0026FE  EC65  F02C         	call	___flneg	;wreg free
  5486  002702  C001  F057         	movff	?___flneg,roundf@y
  5487  002706  C002  F058         	movff	?___flneg+1,roundf@y+1
  5488  00270A  C003  F059         	movff	?___flneg+2,roundf@y+2
  5489  00270E  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5490  002712                     l4504:
  5491  002712  C057  F041         	movff	roundf@y,?_roundf
  5492  002716  C058  F042         	movff	roundf@y+1,?_roundf+1
  5493  00271A  C059  F043         	movff	roundf@y+2,?_roundf+2
  5494  00271E  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5495  002722                     l1579:
  5496  002722  0012               	return		;funcret
  5497  002724                     __end_of_roundf:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function ___flsub *****************
  5501 ;; Defined at:
  5502 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  b               4   16[COMRAM] float 
  5505 ;;  a               4   20[COMRAM] float 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4   16[COMRAM] float 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:        8 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 2
  5524 ;; This function calls:
  5525 ;;		___fladd
  5526 ;; This function is called by:
  5527 ;;		_roundf
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text20
  5532  005688                     __ptext20:
  5533                           	callstack 0
  5534  005688                     ___flsub:
  5535                           	callstack 24
  5536  005688  0E00               	movlw	0
  5537  00568A  1A15               	xorwf	___flsub@a^0,f,c
  5538  00568C  0E00               	movlw	0
  5539  00568E  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5540  005690  0E00               	movlw	0
  5541  005692  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5542  005694  0E80               	movlw	128
  5543  005696  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5544  005698  C011  F001         	movff	___flsub@b,___fladd@b
  5545  00569C  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5546  0056A0  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5547  0056A4  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5548  0056A8  C015  F005         	movff	___flsub@a,___fladd@a
  5549  0056AC  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5550  0056B0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5551  0056B4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5552  0056B8  EC46  F00D         	call	___fladd	;wreg free
  5553  0056BC  C001  F011         	movff	?___fladd,?___flsub
  5554  0056C0  C002  F012         	movff	?___fladd+1,?___flsub+1
  5555  0056C4  C003  F013         	movff	?___fladd+2,?___flsub+2
  5556  0056C8  C004  F014         	movff	?___fladd+3,?___flsub+3
  5557  0056CC  0012               	return		;funcret
  5558  0056CE                     __end_of___flsub:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function ___fladd *****************
  5562 ;; Defined at:
  5563 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  b               4    0[COMRAM] float 
  5566 ;;  a               4    4[COMRAM] float 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  grs             1   15[COMRAM] unsigned char 
  5569 ;;  bexp            1   14[COMRAM] unsigned char 
  5570 ;;  aexp            1   13[COMRAM] unsigned char 
  5571 ;;  signs           1   12[COMRAM] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  4    0[COMRAM] unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5581 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;Total ram usage:       16 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		___flsub
  5592 ;;		_roundf
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text21
  5597  001A8C                     __ptext21:
  5598                           	callstack 0
  5599  001A8C                     ___fladd:
  5600                           	callstack 24
  5601  001A8C  5004               	movf	(___fladd@b+3)^0,w,c
  5602  001A8E  0B80               	andlw	128
  5603  001A90  6E0D               	movwf	___fladd@signs^0,c
  5604  001A92  5004               	movf	(___fladd@b+3)^0,w,c
  5605  001A94  2404               	addwf	(___fladd@b+3)^0,w,c
  5606  001A96  6E0F               	movwf	___fladd@bexp^0,c
  5607  001A98  AE03               	btfss	(___fladd@b+2)^0,7,c
  5608  001A9A  EF51  F00D         	goto	u3351
  5609  001A9E  EF53  F00D         	goto	u3350
  5610  001AA2                     u3351:
  5611  001AA2  EF54  F00D         	goto	l3900
  5612  001AA6                     u3350:
  5613  001AA6  800F               	bsf	___fladd@bexp^0,0,c
  5614  001AA8                     l3900:
  5615  001AA8  500F               	movf	___fladd@bexp^0,w,c
  5616  001AAA  B4D8               	btfsc	status,2,c
  5617  001AAC  EF5A  F00D         	goto	u3361
  5618  001AB0  EF5C  F00D         	goto	u3360
  5619  001AB4                     u3361:
  5620  001AB4  EF71  F00D         	goto	l3910
  5621  001AB8                     u3360:
  5622  001AB8  280F               	incf	___fladd@bexp^0,w,c
  5623  001ABA  A4D8               	btfss	status,2,c
  5624  001ABC  EF62  F00D         	goto	u3371
  5625  001AC0  EF64  F00D         	goto	u3370
  5626  001AC4                     u3371:
  5627  001AC4  EF6C  F00D         	goto	l3906
  5628  001AC8                     u3370:
  5629  001AC8  0E00               	movlw	0
  5630  001ACA  6E01               	movwf	___fladd@b^0,c
  5631  001ACC  0E00               	movlw	0
  5632  001ACE  6E02               	movwf	(___fladd@b+1)^0,c
  5633  001AD0  0E00               	movlw	0
  5634  001AD2  6E03               	movwf	(___fladd@b+2)^0,c
  5635  001AD4  0E00               	movlw	0
  5636  001AD6  6E04               	movwf	(___fladd@b+3)^0,c
  5637  001AD8                     l3906:
  5638  001AD8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5639  001ADA  0E00               	movlw	0
  5640  001ADC  6E04               	movwf	(___fladd@b+3)^0,c
  5641  001ADE  EF79  F00D         	goto	l3912
  5642  001AE2                     l3910:
  5643  001AE2  0E00               	movlw	0
  5644  001AE4  6E01               	movwf	___fladd@b^0,c
  5645  001AE6  0E00               	movlw	0
  5646  001AE8  6E02               	movwf	(___fladd@b+1)^0,c
  5647  001AEA  0E00               	movlw	0
  5648  001AEC  6E03               	movwf	(___fladd@b+2)^0,c
  5649  001AEE  0E00               	movlw	0
  5650  001AF0  6E04               	movwf	(___fladd@b+3)^0,c
  5651  001AF2                     l3912:
  5652  001AF2  5008               	movf	(___fladd@a+3)^0,w,c
  5653  001AF4  0B80               	andlw	128
  5654  001AF6  6E0E               	movwf	___fladd@aexp^0,c
  5655  001AF8  500D               	movf	___fladd@signs^0,w,c
  5656  001AFA  180E               	xorwf	___fladd@aexp^0,w,c
  5657  001AFC  B4D8               	btfsc	status,2,c
  5658  001AFE  EF83  F00D         	goto	u3381
  5659  001B02  EF85  F00D         	goto	u3380
  5660  001B06                     u3381:
  5661  001B06  EF86  F00D         	goto	l3918
  5662  001B0A                     u3380:
  5663  001B0A  8C0D               	bsf	___fladd@signs^0,6,c
  5664  001B0C                     l3918:
  5665  001B0C  5008               	movf	(___fladd@a+3)^0,w,c
  5666  001B0E  2408               	addwf	(___fladd@a+3)^0,w,c
  5667  001B10  6E0E               	movwf	___fladd@aexp^0,c
  5668  001B12  AE07               	btfss	(___fladd@a+2)^0,7,c
  5669  001B14  EF8E  F00D         	goto	u3391
  5670  001B18  EF90  F00D         	goto	u3390
  5671  001B1C                     u3391:
  5672  001B1C  EF91  F00D         	goto	l3924
  5673  001B20                     u3390:
  5674  001B20  800E               	bsf	___fladd@aexp^0,0,c
  5675  001B22                     l3924:
  5676  001B22  500E               	movf	___fladd@aexp^0,w,c
  5677  001B24  B4D8               	btfsc	status,2,c
  5678  001B26  EF97  F00D         	goto	u3401
  5679  001B2A  EF99  F00D         	goto	u3400
  5680  001B2E                     u3401:
  5681  001B2E  EFAE  F00D         	goto	l3934
  5682  001B32                     u3400:
  5683  001B32  280E               	incf	___fladd@aexp^0,w,c
  5684  001B34  A4D8               	btfss	status,2,c
  5685  001B36  EF9F  F00D         	goto	u3411
  5686  001B3A  EFA1  F00D         	goto	u3410
  5687  001B3E                     u3411:
  5688  001B3E  EFA9  F00D         	goto	l3930
  5689  001B42                     u3410:
  5690  001B42  0E00               	movlw	0
  5691  001B44  6E05               	movwf	___fladd@a^0,c
  5692  001B46  0E00               	movlw	0
  5693  001B48  6E06               	movwf	(___fladd@a+1)^0,c
  5694  001B4A  0E00               	movlw	0
  5695  001B4C  6E07               	movwf	(___fladd@a+2)^0,c
  5696  001B4E  0E00               	movlw	0
  5697  001B50  6E08               	movwf	(___fladd@a+3)^0,c
  5698  001B52                     l3930:
  5699  001B52  8E07               	bsf	(___fladd@a+2)^0,7,c
  5700  001B54  0E00               	movlw	0
  5701  001B56  6E08               	movwf	(___fladd@a+3)^0,c
  5702  001B58  EFB6  F00D         	goto	l3936
  5703  001B5C                     l3934:
  5704  001B5C  0E00               	movlw	0
  5705  001B5E  6E05               	movwf	___fladd@a^0,c
  5706  001B60  0E00               	movlw	0
  5707  001B62  6E06               	movwf	(___fladd@a+1)^0,c
  5708  001B64  0E00               	movlw	0
  5709  001B66  6E07               	movwf	(___fladd@a+2)^0,c
  5710  001B68  0E00               	movlw	0
  5711  001B6A  6E08               	movwf	(___fladd@a+3)^0,c
  5712  001B6C                     l3936:
  5713  001B6C  500F               	movf	___fladd@bexp^0,w,c
  5714  001B6E  5C0E               	subwf	___fladd@aexp^0,w,c
  5715  001B70  B0D8               	btfsc	status,0,c
  5716  001B72  EFBD  F00D         	goto	u3421
  5717  001B76  EFBF  F00D         	goto	u3420
  5718  001B7A                     u3421:
  5719  001B7A  EFE6  F00D         	goto	l3972
  5720  001B7E                     u3420:
  5721  001B7E  AC0D               	btfss	___fladd@signs^0,6,c
  5722  001B80  EFC4  F00D         	goto	u3431
  5723  001B84  EFC6  F00D         	goto	u3430
  5724  001B88                     u3431:
  5725  001B88  EFC8  F00D         	goto	l3942
  5726  001B8C                     u3430:
  5727  001B8C  0E80               	movlw	128
  5728  001B8E  1A0D               	xorwf	___fladd@signs^0,f,c
  5729  001B90                     l3942:
  5730  001B90  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5731  001B94  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5732  001B98  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5733  001B9C  C001  F010         	movff	___fladd@b,___fladd@grs
  5734  001BA0  C005  F001         	movff	___fladd@a,___fladd@b
  5735  001BA4  C010  F005         	movff	___fladd@grs,___fladd@a
  5736  001BA8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5737  001BAC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5738  001BB0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5739  001BB4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5740  001BB8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5741  001BBC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5742  001BC0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5743  001BC4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5744  001BC8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5745  001BCC                     l3972:
  5746  001BCC  0E00               	movlw	0
  5747  001BCE  6E10               	movwf	___fladd@grs^0,c
  5748  001BD0  500F               	movf	___fladd@bexp^0,w,c
  5749  001BD2  C00E  F009         	movff	___fladd@aexp,??___fladd
  5750  001BD6  6A0A               	clrf	(??___fladd+1)^0,c
  5751  001BD8  5E09               	subwf	??___fladd^0,f,c
  5752  001BDA  0E00               	movlw	0
  5753  001BDC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5754  001BDE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5755  001BE0  EFFB  F00D         	goto	u3441
  5756  001BE4  500A               	movf	(??___fladd+1)^0,w,c
  5757  001BE6  E109               	bnz	u3440
  5758  001BE8  0E1A               	movlw	26
  5759  001BEA  5C09               	subwf	??___fladd^0,w,c
  5760  001BEC  A0D8               	btfss	status,0,c
  5761  001BEE  EFFB  F00D         	goto	u3441
  5762  001BF2  EFFD  F00D         	goto	u3440
  5763  001BF6                     u3441:
  5764  001BF6  EF34  F00E         	goto	l1315
  5765  001BFA                     u3440:
  5766  001BFA  5001               	movf	___fladd@b^0,w,c
  5767  001BFC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5768  001BFE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5769  001C00  1004               	iorwf	(___fladd@b+3)^0,w,c
  5770  001C02  A4D8               	btfss	status,2,c
  5771  001C04  EF06  F00E         	goto	u3451
  5772  001C08  EF09  F00E         	goto	u3450
  5773  001C0C                     u3451:
  5774  001C0C  0E01               	movlw	1
  5775  001C0E  EF0A  F00E         	goto	u3460
  5776  001C12                     u3450:
  5777  001C12  0E00               	movlw	0
  5778  001C14                     u3460:
  5779  001C14  6E10               	movwf	___fladd@grs^0,c
  5780  001C16  0E00               	movlw	0
  5781  001C18  6E01               	movwf	___fladd@b^0,c
  5782  001C1A  0E00               	movlw	0
  5783  001C1C  6E02               	movwf	(___fladd@b+1)^0,c
  5784  001C1E  0E00               	movlw	0
  5785  001C20  6E03               	movwf	(___fladd@b+2)^0,c
  5786  001C22  0E00               	movlw	0
  5787  001C24  6E04               	movwf	(___fladd@b+3)^0,c
  5788  001C26  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5789  001C2A  EF3D  F00E         	goto	l1314
  5790  001C2E                     l1316:
  5791  001C2E  A010               	btfss	___fladd@grs^0,0,c
  5792  001C30  EF1C  F00E         	goto	u3471
  5793  001C34  EF1E  F00E         	goto	u3470
  5794  001C38                     u3471:
  5795  001C38  EF24  F00E         	goto	l3984
  5796  001C3C                     u3470:
  5797  001C3C  90D8               	bcf	status,0,c
  5798  001C3E  3010               	rrcf	___fladd@grs^0,w,c
  5799  001C40  0901               	iorlw	1
  5800  001C42  6E10               	movwf	___fladd@grs^0,c
  5801  001C44  EF26  F00E         	goto	l3986
  5802  001C48                     l3984:
  5803  001C48  90D8               	bcf	status,0,c
  5804  001C4A  3210               	rrcf	___fladd@grs^0,f,c
  5805  001C4C                     l3986:
  5806  001C4C  A001               	btfss	___fladd@b^0,0,c
  5807  001C4E  EF2B  F00E         	goto	u3481
  5808  001C52  EF2D  F00E         	goto	u3480
  5809  001C56                     u3481:
  5810  001C56  EF2E  F00E         	goto	l3990
  5811  001C5A                     u3480:
  5812  001C5A  8E10               	bsf	___fladd@grs^0,7,c
  5813  001C5C                     l3990:
  5814  001C5C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5815  001C5E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5816  001C60  3203               	rrcf	(___fladd@b+2)^0,f,c
  5817  001C62  3202               	rrcf	(___fladd@b+1)^0,f,c
  5818  001C64  3201               	rrcf	___fladd@b^0,f,c
  5819  001C66  2A0F               	incf	___fladd@bexp^0,f,c
  5820  001C68                     l1315:
  5821  001C68  500E               	movf	___fladd@aexp^0,w,c
  5822  001C6A  5C0F               	subwf	___fladd@bexp^0,w,c
  5823  001C6C  A0D8               	btfss	status,0,c
  5824  001C6E  EF3B  F00E         	goto	u3491
  5825  001C72  EF3D  F00E         	goto	u3490
  5826  001C76                     u3491:
  5827  001C76  EF17  F00E         	goto	l1316
  5828  001C7A                     u3490:
  5829  001C7A                     l1314:
  5830  001C7A  BC0D               	btfsc	___fladd@signs^0,6,c
  5831  001C7C  EF42  F00E         	goto	u3501
  5832  001C80  EF44  F00E         	goto	u3500
  5833  001C84                     u3501:
  5834  001C84  EF84  F00E         	goto	l4018
  5835  001C88                     u3500:
  5836  001C88  500F               	movf	___fladd@bexp^0,w,c
  5837  001C8A  A4D8               	btfss	status,2,c
  5838  001C8C  EF4A  F00E         	goto	u3511
  5839  001C90  EF4C  F00E         	goto	u3510
  5840  001C94                     u3511:
  5841  001C94  EF56  F00E         	goto	l4000
  5842  001C98                     u3510:
  5843  001C98  0E00               	movlw	0
  5844  001C9A  6E01               	movwf	?___fladd^0,c
  5845  001C9C  0E00               	movlw	0
  5846  001C9E  6E02               	movwf	(?___fladd+1)^0,c
  5847  001CA0  0E00               	movlw	0
  5848  001CA2  6E03               	movwf	(?___fladd+2)^0,c
  5849  001CA4  0E00               	movlw	0
  5850  001CA6  6E04               	movwf	(?___fladd+3)^0,c
  5851  001CA8  EFA5  F00F         	goto	l1323
  5852  001CAC                     l4000:
  5853  001CAC  5005               	movf	___fladd@a^0,w,c
  5854  001CAE  2601               	addwf	___fladd@b^0,f,c
  5855  001CB0  5006               	movf	(___fladd@a+1)^0,w,c
  5856  001CB2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5857  001CB4  5007               	movf	(___fladd@a+2)^0,w,c
  5858  001CB6  2203               	addwfc	(___fladd@b+2)^0,f,c
  5859  001CB8  5008               	movf	(___fladd@a+3)^0,w,c
  5860  001CBA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5861  001CBC  A004               	btfss	(___fladd@b+3)^0,0,c
  5862  001CBE  EF63  F00E         	goto	u3521
  5863  001CC2  EF65  F00E         	goto	u3520
  5864  001CC6                     u3521:
  5865  001CC6  EF11  F00F         	goto	l4054
  5866  001CCA                     u3520:
  5867  001CCA  A010               	btfss	___fladd@grs^0,0,c
  5868  001CCC  EF6A  F00E         	goto	u3531
  5869  001CD0  EF6C  F00E         	goto	u3530
  5870  001CD4                     u3531:
  5871  001CD4  EF72  F00E         	goto	l4008
  5872  001CD8                     u3530:
  5873  001CD8  90D8               	bcf	status,0,c
  5874  001CDA  3010               	rrcf	___fladd@grs^0,w,c
  5875  001CDC  0901               	iorlw	1
  5876  001CDE  6E10               	movwf	___fladd@grs^0,c
  5877  001CE0  EF74  F00E         	goto	l4010
  5878  001CE4                     l4008:
  5879  001CE4  90D8               	bcf	status,0,c
  5880  001CE6  3210               	rrcf	___fladd@grs^0,f,c
  5881  001CE8                     l4010:
  5882  001CE8  A001               	btfss	___fladd@b^0,0,c
  5883  001CEA  EF79  F00E         	goto	u3541
  5884  001CEE  EF7B  F00E         	goto	u3540
  5885  001CF2                     u3541:
  5886  001CF2  EF7C  F00E         	goto	l4014
  5887  001CF6                     u3540:
  5888  001CF6  8E10               	bsf	___fladd@grs^0,7,c
  5889  001CF8                     l4014:
  5890  001CF8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5891  001CFA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5892  001CFC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5893  001CFE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5894  001D00  3201               	rrcf	___fladd@b^0,f,c
  5895  001D02  2A0F               	incf	___fladd@bexp^0,f,c
  5896  001D04  EF11  F00F         	goto	l4054
  5897  001D08                     l4018:
  5898  001D08  5005               	movf	___fladd@a^0,w,c
  5899  001D0A  5C01               	subwf	___fladd@b^0,w,c
  5900  001D0C  5006               	movf	(___fladd@a+1)^0,w,c
  5901  001D0E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5902  001D10  5007               	movf	(___fladd@a+2)^0,w,c
  5903  001D12  5803               	subwfb	(___fladd@b+2)^0,w,c
  5904  001D14  5004               	movf	(___fladd@b+3)^0,w,c
  5905  001D16  0A80               	xorlw	128
  5906  001D18  6E09               	movwf	??___fladd^0,c
  5907  001D1A  5008               	movf	(___fladd@a+3)^0,w,c
  5908  001D1C  0A80               	xorlw	128
  5909  001D1E  5809               	subwfb	??___fladd^0,w,c
  5910  001D20  B0D8               	btfsc	status,0,c
  5911  001D22  EF95  F00E         	goto	u3551
  5912  001D26  EF97  F00E         	goto	u3550
  5913  001D2A                     u3551:
  5914  001D2A  EFC2  F00E         	goto	l4028
  5915  001D2E                     u3550:
  5916  001D2E  5001               	movf	___fladd@b^0,w,c
  5917  001D30  5C05               	subwf	___fladd@a^0,w,c
  5918  001D32  6E09               	movwf	??___fladd^0,c
  5919  001D34  5002               	movf	(___fladd@b+1)^0,w,c
  5920  001D36  5806               	subwfb	(___fladd@a+1)^0,w,c
  5921  001D38  6E0A               	movwf	(??___fladd+1)^0,c
  5922  001D3A  5003               	movf	(___fladd@b+2)^0,w,c
  5923  001D3C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5924  001D3E  6E0B               	movwf	(??___fladd+2)^0,c
  5925  001D40  5004               	movf	(___fladd@b+3)^0,w,c
  5926  001D42  5808               	subwfb	(___fladd@a+3)^0,w,c
  5927  001D44  6E0C               	movwf	(??___fladd+3)^0,c
  5928  001D46  0EFF               	movlw	255
  5929  001D48  2409               	addwf	??___fladd^0,w,c
  5930  001D4A  6E01               	movwf	___fladd@b^0,c
  5931  001D4C  0EFF               	movlw	255
  5932  001D4E  200A               	addwfc	(??___fladd+1)^0,w,c
  5933  001D50  6E02               	movwf	(___fladd@b+1)^0,c
  5934  001D52  0EFF               	movlw	255
  5935  001D54  200B               	addwfc	(??___fladd+2)^0,w,c
  5936  001D56  6E03               	movwf	(___fladd@b+2)^0,c
  5937  001D58  0EFF               	movlw	255
  5938  001D5A  200C               	addwfc	(??___fladd+3)^0,w,c
  5939  001D5C  6E04               	movwf	(___fladd@b+3)^0,c
  5940  001D5E  0E80               	movlw	128
  5941  001D60  1A0D               	xorwf	___fladd@signs^0,f,c
  5942  001D62  6C10               	negf	___fladd@grs^0,c
  5943  001D64  5010               	movf	___fladd@grs^0,w,c
  5944  001D66  A4D8               	btfss	status,2,c
  5945  001D68  EFB8  F00E         	goto	u3561
  5946  001D6C  EFBA  F00E         	goto	u3560
  5947  001D70                     u3561:
  5948  001D70  EFCA  F00E         	goto	l1331
  5949  001D74                     u3560:
  5950  001D74  0E01               	movlw	1
  5951  001D76  2601               	addwf	___fladd@b^0,f,c
  5952  001D78  0E00               	movlw	0
  5953  001D7A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5954  001D7C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5955  001D7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5956  001D80  EFCA  F00E         	goto	l1331
  5957  001D84                     l4028:
  5958  001D84  5005               	movf	___fladd@a^0,w,c
  5959  001D86  5E01               	subwf	___fladd@b^0,f,c
  5960  001D88  5006               	movf	(___fladd@a+1)^0,w,c
  5961  001D8A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5962  001D8C  5007               	movf	(___fladd@a+2)^0,w,c
  5963  001D8E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5964  001D90  5008               	movf	(___fladd@a+3)^0,w,c
  5965  001D92  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5966  001D94                     l1331:
  5967  001D94  5001               	movf	___fladd@b^0,w,c
  5968  001D96  1002               	iorwf	(___fladd@b+1)^0,w,c
  5969  001D98  1003               	iorwf	(___fladd@b+2)^0,w,c
  5970  001D9A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5971  001D9C  A4D8               	btfss	status,2,c
  5972  001D9E  EFD3  F00E         	goto	u3571
  5973  001DA2  EFD5  F00E         	goto	u3570
  5974  001DA6                     u3571:
  5975  001DA6  EF0A  F00F         	goto	l4052
  5976  001DAA                     u3570:
  5977  001DAA  5010               	movf	___fladd@grs^0,w,c
  5978  001DAC  A4D8               	btfss	status,2,c
  5979  001DAE  EFDB  F00E         	goto	u3581
  5980  001DB2  EFDD  F00E         	goto	u3580
  5981  001DB6                     u3581:
  5982  001DB6  EF0A  F00F         	goto	l4052
  5983  001DBA                     u3580:
  5984  001DBA  0E00               	movlw	0
  5985  001DBC  6E01               	movwf	?___fladd^0,c
  5986  001DBE  0E00               	movlw	0
  5987  001DC0  6E02               	movwf	(?___fladd+1)^0,c
  5988  001DC2  0E00               	movlw	0
  5989  001DC4  6E03               	movwf	(?___fladd+2)^0,c
  5990  001DC6  0E00               	movlw	0
  5991  001DC8  6E04               	movwf	(?___fladd+3)^0,c
  5992  001DCA  EFA5  F00F         	goto	l1323
  5993  001DCE                     l4036:
  5994  001DCE  90D8               	bcf	status,0,c
  5995  001DD0  3601               	rlcf	___fladd@b^0,f,c
  5996  001DD2  3602               	rlcf	(___fladd@b+1)^0,f,c
  5997  001DD4  3603               	rlcf	(___fladd@b+2)^0,f,c
  5998  001DD6  3604               	rlcf	(___fladd@b+3)^0,f,c
  5999  001DD8  AE10               	btfss	___fladd@grs^0,7,c
  6000  001DDA  EFF1  F00E         	goto	u3591
  6001  001DDE  EFF3  F00E         	goto	u3590
  6002  001DE2                     u3591:
  6003  001DE2  EFF4  F00E         	goto	l4042
  6004  001DE6                     u3590:
  6005  001DE6  8001               	bsf	___fladd@b^0,0,c
  6006  001DE8                     l4042:
  6007  001DE8  A010               	btfss	___fladd@grs^0,0,c
  6008  001DEA  EFF9  F00E         	goto	u3601
  6009  001DEE  EFFB  F00E         	goto	u3600
  6010  001DF2                     u3601:
  6011  001DF2  EFFF  F00E         	goto	l4046
  6012  001DF6                     u3600:
  6013  001DF6  80D8               	bsf	status,0,c
  6014  001DF8  3610               	rlcf	___fladd@grs^0,f,c
  6015  001DFA  EF01  F00F         	goto	l4048
  6016  001DFE                     l4046:
  6017  001DFE  90D8               	bcf	status,0,c
  6018  001E00  3610               	rlcf	___fladd@grs^0,f,c
  6019  001E02                     l4048:
  6020  001E02  500F               	movf	___fladd@bexp^0,w,c
  6021  001E04  B4D8               	btfsc	status,2,c
  6022  001E06  EF07  F00F         	goto	u3611
  6023  001E0A  EF09  F00F         	goto	u3610
  6024  001E0E                     u3611:
  6025  001E0E  EF0A  F00F         	goto	l4052
  6026  001E12                     u3610:
  6027  001E12  060F               	decf	___fladd@bexp^0,f,c
  6028  001E14                     l4052:
  6029  001E14  AE03               	btfss	(___fladd@b+2)^0,7,c
  6030  001E16  EF0F  F00F         	goto	u3621
  6031  001E1A  EF11  F00F         	goto	u3620
  6032  001E1E                     u3621:
  6033  001E1E  EFE7  F00E         	goto	l4036
  6034  001E22                     u3620:
  6035  001E22                     l4054:
  6036  001E22  0E00               	movlw	0
  6037  001E24  6E0E               	movwf	___fladd@aexp^0,c
  6038  001E26  AE10               	btfss	___fladd@grs^0,7,c
  6039  001E28  EF18  F00F         	goto	u3631
  6040  001E2C  EF1A  F00F         	goto	u3630
  6041  001E30                     u3631:
  6042  001E30  EF32  F00F         	goto	l1340
  6043  001E34                     u3630:
  6044  001E34  C010  F009         	movff	___fladd@grs,??___fladd
  6045  001E38  0E7F               	movlw	127
  6046  001E3A  1609               	andwf	??___fladd^0,f,c
  6047  001E3C  B4D8               	btfsc	status,2,c
  6048  001E3E  EF23  F00F         	goto	u3641
  6049  001E42  EF25  F00F         	goto	u3640
  6050  001E46                     u3641:
  6051  001E46  EF29  F00F         	goto	l1341
  6052  001E4A                     u3640:
  6053  001E4A                     l4060:
  6054  001E4A  0E01               	movlw	1
  6055  001E4C  6E0E               	movwf	___fladd@aexp^0,c
  6056  001E4E  EF32  F00F         	goto	l1340
  6057  001E52                     l1341:
  6058  001E52  A001               	btfss	___fladd@b^0,0,c
  6059  001E54  EF2E  F00F         	goto	u3651
  6060  001E58  EF30  F00F         	goto	u3650
  6061  001E5C                     u3651:
  6062  001E5C  EF32  F00F         	goto	l1340
  6063  001E60                     u3650:
  6064  001E60  EF25  F00F         	goto	l4060
  6065  001E64                     l1340:
  6066  001E64  500E               	movf	___fladd@aexp^0,w,c
  6067  001E66  B4D8               	btfsc	status,2,c
  6068  001E68  EF38  F00F         	goto	u3661
  6069  001E6C  EF3A  F00F         	goto	u3660
  6070  001E70                     u3661:
  6071  001E70  EF65  F00F         	goto	l4072
  6072  001E74                     u3660:
  6073  001E74  0E01               	movlw	1
  6074  001E76  2601               	addwf	___fladd@b^0,f,c
  6075  001E78  0E00               	movlw	0
  6076  001E7A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6077  001E7C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6078  001E7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6079  001E80  A004               	btfss	(___fladd@b+3)^0,0,c
  6080  001E82  EF45  F00F         	goto	u3671
  6081  001E86  EF47  F00F         	goto	u3670
  6082  001E8A                     u3671:
  6083  001E8A  EF65  F00F         	goto	l4072
  6084  001E8E                     u3670:
  6085  001E8E  C001  F009         	movff	___fladd@b,??___fladd
  6086  001E92  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6087  001E96  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6088  001E9A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6089  001E9E  340C               	rlcf	(??___fladd+3)^0,w,c
  6090  001EA0  320C               	rrcf	(??___fladd+3)^0,f,c
  6091  001EA2  320B               	rrcf	(??___fladd+2)^0,f,c
  6092  001EA4  320A               	rrcf	(??___fladd+1)^0,f,c
  6093  001EA6  3209               	rrcf	??___fladd^0,f,c
  6094  001EA8  C009  F001         	movff	??___fladd,___fladd@b
  6095  001EAC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6096  001EB0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6097  001EB4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6098  001EB8  280F               	incf	___fladd@bexp^0,w,c
  6099  001EBA  B4D8               	btfsc	status,2,c
  6100  001EBC  EF62  F00F         	goto	u3681
  6101  001EC0  EF64  F00F         	goto	u3680
  6102  001EC4                     u3681:
  6103  001EC4  EF65  F00F         	goto	l4072
  6104  001EC8                     u3680:
  6105  001EC8  2A0F               	incf	___fladd@bexp^0,f,c
  6106  001ECA                     l4072:
  6107  001ECA  280F               	incf	___fladd@bexp^0,w,c
  6108  001ECC  B4D8               	btfsc	status,2,c
  6109  001ECE  EF6B  F00F         	goto	u3691
  6110  001ED2  EF6D  F00F         	goto	u3690
  6111  001ED6                     u3691:
  6112  001ED6  EF75  F00F         	goto	l4076
  6113  001EDA                     u3690:
  6114  001EDA  500F               	movf	___fladd@bexp^0,w,c
  6115  001EDC  A4D8               	btfss	status,2,c
  6116  001EDE  EF73  F00F         	goto	u3701
  6117  001EE2  EF75  F00F         	goto	u3700
  6118  001EE6                     u3701:
  6119  001EE6  EF87  F00F         	goto	l4080
  6120  001EEA                     u3700:
  6121  001EEA                     l4076:
  6122  001EEA  0E00               	movlw	0
  6123  001EEC  6E01               	movwf	___fladd@b^0,c
  6124  001EEE  0E00               	movlw	0
  6125  001EF0  6E02               	movwf	(___fladd@b+1)^0,c
  6126  001EF2  0E00               	movlw	0
  6127  001EF4  6E03               	movwf	(___fladd@b+2)^0,c
  6128  001EF6  0E00               	movlw	0
  6129  001EF8  6E04               	movwf	(___fladd@b+3)^0,c
  6130  001EFA  500F               	movf	___fladd@bexp^0,w,c
  6131  001EFC  A4D8               	btfss	status,2,c
  6132  001EFE  EF83  F00F         	goto	u3711
  6133  001F02  EF85  F00F         	goto	u3710
  6134  001F06                     u3711:
  6135  001F06  EF87  F00F         	goto	l4080
  6136  001F0A                     u3710:
  6137  001F0A  0E00               	movlw	0
  6138  001F0C  6E0D               	movwf	___fladd@signs^0,c
  6139  001F0E                     l4080:
  6140  001F0E  A00F               	btfss	___fladd@bexp^0,0,c
  6141  001F10  EF8C  F00F         	goto	u3721
  6142  001F14  EF8E  F00F         	goto	u3720
  6143  001F18                     u3721:
  6144  001F18  EF91  F00F         	goto	l4084
  6145  001F1C                     u3720:
  6146  001F1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  6147  001F1E  EF92  F00F         	goto	l4086
  6148  001F22                     l4084:
  6149  001F22  9E03               	bcf	(___fladd@b+2)^0,7,c
  6150  001F24                     l4086:
  6151  001F24  90D8               	bcf	status,0,c
  6152  001F26  300F               	rrcf	___fladd@bexp^0,w,c
  6153  001F28  6E04               	movwf	(___fladd@b+3)^0,c
  6154  001F2A  AE0D               	btfss	___fladd@signs^0,7,c
  6155  001F2C  EF9A  F00F         	goto	u3731
  6156  001F30  EF9C  F00F         	goto	u3730
  6157  001F34                     u3731:
  6158  001F34  EF9D  F00F         	goto	l4092
  6159  001F38                     u3730:
  6160  001F38  8E04               	bsf	(___fladd@b+3)^0,7,c
  6161  001F3A                     l4092:
  6162  001F3A  C001  F001         	movff	___fladd@b,?___fladd
  6163  001F3E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6164  001F42  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6165  001F46  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6166  001F4A                     l1323:
  6167  001F4A  0012               	return		;funcret
  6168  001F4C                     __end_of___fladd:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function ___flneg *****************
  6172 ;; Defined at:
  6173 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  f1              4    0[COMRAM] unsigned char 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  4    0[COMRAM] unsigned char 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;Total ram usage:        4 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_roundf
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text22
  6202  0058CA                     __ptext22:
  6203                           	callstack 0
  6204  0058CA                     ___flneg:
  6205                           	callstack 25
  6206  0058CA  5001               	movf	___flneg@f1^0,w,c
  6207  0058CC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6208  0058CE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6209  0058D0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6210  0058D2  B4D8               	btfsc	status,2,c
  6211  0058D4  EF6E  F02C         	goto	u4091
  6212  0058D8  EF70  F02C         	goto	u4090
  6213  0058DC                     u4091:
  6214  0058DC  EF78  F02C         	goto	l4356
  6215  0058E0                     u4090:
  6216  0058E0  0E00               	movlw	0
  6217  0058E2  1A01               	xorwf	___flneg@f1^0,f,c
  6218  0058E4  0E00               	movlw	0
  6219  0058E6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6220  0058E8  0E00               	movlw	0
  6221  0058EA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6222  0058EC  0E80               	movlw	128
  6223  0058EE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6224  0058F0                     l4356:
  6225  0058F0  C001  F001         	movff	___flneg@f1,?___flneg
  6226  0058F4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6227  0058F8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6228  0058FC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6229  005900  0012               	return		;funcret
  6230  005902                     __end_of___flneg:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function ___flmul *****************
  6234 ;; Defined at:
  6235 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  b               4   39[COMRAM] unsigned char 
  6238 ;;  a               4   43[COMRAM] unsigned char 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  prod            4   58[COMRAM] struct .
  6241 ;;  grs             4   52[COMRAM] unsigned long 
  6242 ;;  temp            2   62[COMRAM] struct .
  6243 ;;  bexp            1   57[COMRAM] unsigned char 
  6244 ;;  aexp            1   56[COMRAM] unsigned char 
  6245 ;;  sign            1   51[COMRAM] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  4   39[COMRAM] unsigned char 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0, prodl, prodh
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6255 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6256 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6258 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6259 ;;Total ram usage:       25 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 1
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_detect_color
  6266 ;;		_distance_measure
  6267 ;;		_roundf
  6268 ;;		_check_color_reading
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text23
  6273  001F4C                     __ptext23:
  6274                           	callstack 0
  6275  001F4C                     ___flmul:
  6276                           	callstack 25
  6277  001F4C  502B               	movf	(___flmul@b+3)^0,w,c
  6278  001F4E  0B80               	andlw	128
  6279  001F50  6E34               	movwf	___flmul@sign^0,c
  6280  001F52  502B               	movf	(___flmul@b+3)^0,w,c
  6281  001F54  242B               	addwf	(___flmul@b+3)^0,w,c
  6282  001F56  6E3A               	movwf	___flmul@bexp^0,c
  6283  001F58  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6284  001F5A  EFB1  F00F         	goto	u3851
  6285  001F5E  EFB3  F00F         	goto	u3850
  6286  001F62                     u3851:
  6287  001F62  EFB4  F00F         	goto	l4200
  6288  001F66                     u3850:
  6289  001F66  803A               	bsf	___flmul@bexp^0,0,c
  6290  001F68                     l4200:
  6291  001F68  503A               	movf	___flmul@bexp^0,w,c
  6292  001F6A  B4D8               	btfsc	status,2,c
  6293  001F6C  EFBA  F00F         	goto	u3861
  6294  001F70  EFBC  F00F         	goto	u3860
  6295  001F74                     u3861:
  6296  001F74  EFCF  F00F         	goto	l4208
  6297  001F78                     u3860:
  6298  001F78  283A               	incf	___flmul@bexp^0,w,c
  6299  001F7A  A4D8               	btfss	status,2,c
  6300  001F7C  EFC2  F00F         	goto	u3871
  6301  001F80  EFC4  F00F         	goto	u3870
  6302  001F84                     u3871:
  6303  001F84  EFCC  F00F         	goto	l4206
  6304  001F88                     u3870:
  6305  001F88  0E00               	movlw	0
  6306  001F8A  6E28               	movwf	___flmul@b^0,c
  6307  001F8C  0E00               	movlw	0
  6308  001F8E  6E29               	movwf	(___flmul@b+1)^0,c
  6309  001F90  0E00               	movlw	0
  6310  001F92  6E2A               	movwf	(___flmul@b+2)^0,c
  6311  001F94  0E00               	movlw	0
  6312  001F96  6E2B               	movwf	(___flmul@b+3)^0,c
  6313  001F98                     l4206:
  6314  001F98  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6315  001F9A  EFD7  F00F         	goto	l4210
  6316  001F9E                     l4208:
  6317  001F9E  0E00               	movlw	0
  6318  001FA0  6E28               	movwf	___flmul@b^0,c
  6319  001FA2  0E00               	movlw	0
  6320  001FA4  6E29               	movwf	(___flmul@b+1)^0,c
  6321  001FA6  0E00               	movlw	0
  6322  001FA8  6E2A               	movwf	(___flmul@b+2)^0,c
  6323  001FAA  0E00               	movlw	0
  6324  001FAC  6E2B               	movwf	(___flmul@b+3)^0,c
  6325  001FAE                     l4210:
  6326  001FAE  502F               	movf	(___flmul@a+3)^0,w,c
  6327  001FB0  0B80               	andlw	128
  6328  001FB2  1A34               	xorwf	___flmul@sign^0,f,c
  6329  001FB4  502F               	movf	(___flmul@a+3)^0,w,c
  6330  001FB6  242F               	addwf	(___flmul@a+3)^0,w,c
  6331  001FB8  6E39               	movwf	___flmul@aexp^0,c
  6332  001FBA  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6333  001FBC  EFE2  F00F         	goto	u3881
  6334  001FC0  EFE4  F00F         	goto	u3880
  6335  001FC4                     u3881:
  6336  001FC4  EFE5  F00F         	goto	l4218
  6337  001FC8                     u3880:
  6338  001FC8  8039               	bsf	___flmul@aexp^0,0,c
  6339  001FCA                     l4218:
  6340  001FCA  5039               	movf	___flmul@aexp^0,w,c
  6341  001FCC  B4D8               	btfsc	status,2,c
  6342  001FCE  EFEB  F00F         	goto	u3891
  6343  001FD2  EFED  F00F         	goto	u3890
  6344  001FD6                     u3891:
  6345  001FD6  EF00  F010         	goto	l4226
  6346  001FDA                     u3890:
  6347  001FDA  2839               	incf	___flmul@aexp^0,w,c
  6348  001FDC  A4D8               	btfss	status,2,c
  6349  001FDE  EFF3  F00F         	goto	u3901
  6350  001FE2  EFF5  F00F         	goto	u3900
  6351  001FE6                     u3901:
  6352  001FE6  EFFD  F00F         	goto	l4224
  6353  001FEA                     u3900:
  6354  001FEA  0E00               	movlw	0
  6355  001FEC  6E2C               	movwf	___flmul@a^0,c
  6356  001FEE  0E00               	movlw	0
  6357  001FF0  6E2D               	movwf	(___flmul@a+1)^0,c
  6358  001FF2  0E00               	movlw	0
  6359  001FF4  6E2E               	movwf	(___flmul@a+2)^0,c
  6360  001FF6  0E00               	movlw	0
  6361  001FF8  6E2F               	movwf	(___flmul@a+3)^0,c
  6362  001FFA                     l4224:
  6363  001FFA  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6364  001FFC  EF08  F010         	goto	l1400
  6365  002000                     l4226:
  6366  002000  0E00               	movlw	0
  6367  002002  6E2C               	movwf	___flmul@a^0,c
  6368  002004  0E00               	movlw	0
  6369  002006  6E2D               	movwf	(___flmul@a+1)^0,c
  6370  002008  0E00               	movlw	0
  6371  00200A  6E2E               	movwf	(___flmul@a+2)^0,c
  6372  00200C  0E00               	movlw	0
  6373  00200E  6E2F               	movwf	(___flmul@a+3)^0,c
  6374  002010                     l1400:
  6375  002010  5039               	movf	___flmul@aexp^0,w,c
  6376  002012  B4D8               	btfsc	status,2,c
  6377  002014  EF0E  F010         	goto	u3911
  6378  002018  EF10  F010         	goto	u3910
  6379  00201C                     u3911:
  6380  00201C  EF18  F010         	goto	l4230
  6381  002020                     u3910:
  6382  002020  503A               	movf	___flmul@bexp^0,w,c
  6383  002022  A4D8               	btfss	status,2,c
  6384  002024  EF16  F010         	goto	u3921
  6385  002028  EF18  F010         	goto	u3920
  6386  00202C                     u3921:
  6387  00202C  EF22  F010         	goto	l4234
  6388  002030                     u3920:
  6389  002030                     l4230:
  6390  002030  0E00               	movlw	0
  6391  002032  6E28               	movwf	?___flmul^0,c
  6392  002034  0E00               	movlw	0
  6393  002036  6E29               	movwf	(?___flmul+1)^0,c
  6394  002038  0E00               	movlw	0
  6395  00203A  6E2A               	movwf	(?___flmul+2)^0,c
  6396  00203C  0E00               	movlw	0
  6397  00203E  6E2B               	movwf	(?___flmul+3)^0,c
  6398  002040  EFBA  F011         	goto	l1404
  6399  002044                     l4234:
  6400  002044  502E               	movf	(___flmul@a+2)^0,w,c
  6401  002046  0228               	mulwf	___flmul@b^0,c
  6402  002048  CFF3 F03F          	movff	prodl,___flmul@temp
  6403  00204C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6404  002050  503F               	movf	___flmul@temp^0,w,c
  6405  002052  6E35               	movwf	___flmul@grs^0,c
  6406  002054  6A36               	clrf	(___flmul@grs+1)^0,c
  6407  002056  6A37               	clrf	(___flmul@grs+2)^0,c
  6408  002058  6A38               	clrf	(___flmul@grs+3)^0,c
  6409  00205A  5040               	movf	(___flmul@temp+1)^0,w,c
  6410  00205C  6E3B               	movwf	___flmul@prod^0,c
  6411  00205E  6A3C               	clrf	(___flmul@prod+1)^0,c
  6412  002060  6A3D               	clrf	(___flmul@prod+2)^0,c
  6413  002062  6A3E               	clrf	(___flmul@prod+3)^0,c
  6414  002064  502D               	movf	(___flmul@a+1)^0,w,c
  6415  002066  0229               	mulwf	(___flmul@b+1)^0,c
  6416  002068  CFF3 F03F          	movff	prodl,___flmul@temp
  6417  00206C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6418  002070  503F               	movf	___flmul@temp^0,w,c
  6419  002072  2635               	addwf	___flmul@grs^0,f,c
  6420  002074  0E00               	movlw	0
  6421  002076  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6422  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6423  00207A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6424  00207C  5040               	movf	(___flmul@temp+1)^0,w,c
  6425  00207E  263B               	addwf	___flmul@prod^0,f,c
  6426  002080  0E00               	movlw	0
  6427  002082  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6428  002084  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6429  002086  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6430  002088  502C               	movf	___flmul@a^0,w,c
  6431  00208A  022A               	mulwf	(___flmul@b+2)^0,c
  6432  00208C  CFF3 F03F          	movff	prodl,___flmul@temp
  6433  002090  CFF4 F040          	movff	prodh,___flmul@temp+1
  6434  002094  503F               	movf	___flmul@temp^0,w,c
  6435  002096  2635               	addwf	___flmul@grs^0,f,c
  6436  002098  0E00               	movlw	0
  6437  00209A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6438  00209C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6439  00209E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6440  0020A0  5040               	movf	(___flmul@temp+1)^0,w,c
  6441  0020A2  263B               	addwf	___flmul@prod^0,f,c
  6442  0020A4  0E00               	movlw	0
  6443  0020A6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6444  0020A8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6445  0020AA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6446  0020AC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6447  0020B0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6448  0020B4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6449  0020B8  6A35               	clrf	___flmul@grs^0,c
  6450  0020BA  502C               	movf	___flmul@a^0,w,c
  6451  0020BC  0229               	mulwf	(___flmul@b+1)^0,c
  6452  0020BE  CFF3 F03F          	movff	prodl,___flmul@temp
  6453  0020C2  CFF4 F040          	movff	prodh,___flmul@temp+1
  6454  0020C6  503F               	movf	___flmul@temp^0,w,c
  6455  0020C8  2635               	addwf	___flmul@grs^0,f,c
  6456  0020CA  5040               	movf	(___flmul@temp+1)^0,w,c
  6457  0020CC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6458  0020CE  0E00               	movlw	0
  6459  0020D0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6460  0020D2  0E00               	movlw	0
  6461  0020D4  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6462  0020D6  502D               	movf	(___flmul@a+1)^0,w,c
  6463  0020D8  0228               	mulwf	___flmul@b^0,c
  6464  0020DA  CFF3 F03F          	movff	prodl,___flmul@temp
  6465  0020DE  CFF4 F040          	movff	prodh,___flmul@temp+1
  6466  0020E2  503F               	movf	___flmul@temp^0,w,c
  6467  0020E4  2635               	addwf	___flmul@grs^0,f,c
  6468  0020E6  5040               	movf	(___flmul@temp+1)^0,w,c
  6469  0020E8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6470  0020EA  0E00               	movlw	0
  6471  0020EC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6472  0020EE  0E00               	movlw	0
  6473  0020F0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6474  0020F2  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6475  0020F6  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6476  0020FA  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6477  0020FE  6A35               	clrf	___flmul@grs^0,c
  6478  002100  502C               	movf	___flmul@a^0,w,c
  6479  002102  0228               	mulwf	___flmul@b^0,c
  6480  002104  CFF3 F03F          	movff	prodl,___flmul@temp
  6481  002108  CFF4 F040          	movff	prodh,___flmul@temp+1
  6482  00210C  503F               	movf	___flmul@temp^0,w,c
  6483  00210E  2635               	addwf	___flmul@grs^0,f,c
  6484  002110  5040               	movf	(___flmul@temp+1)^0,w,c
  6485  002112  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6486  002114  0E00               	movlw	0
  6487  002116  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6488  002118  0E00               	movlw	0
  6489  00211A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6490  00211C  502E               	movf	(___flmul@a+2)^0,w,c
  6491  00211E  0229               	mulwf	(___flmul@b+1)^0,c
  6492  002120  CFF3 F03F          	movff	prodl,___flmul@temp
  6493  002124  CFF4 F040          	movff	prodh,___flmul@temp+1
  6494  002128  503F               	movf	___flmul@temp^0,w,c
  6495  00212A  263B               	addwf	___flmul@prod^0,f,c
  6496  00212C  5040               	movf	(___flmul@temp+1)^0,w,c
  6497  00212E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6498  002130  0E00               	movlw	0
  6499  002132  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6500  002134  0E00               	movlw	0
  6501  002136  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6502  002138  502D               	movf	(___flmul@a+1)^0,w,c
  6503  00213A  022A               	mulwf	(___flmul@b+2)^0,c
  6504  00213C  CFF3 F03F          	movff	prodl,___flmul@temp
  6505  002140  CFF4 F040          	movff	prodh,___flmul@temp+1
  6506  002144  503F               	movf	___flmul@temp^0,w,c
  6507  002146  263B               	addwf	___flmul@prod^0,f,c
  6508  002148  5040               	movf	(___flmul@temp+1)^0,w,c
  6509  00214A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6510  00214C  0E00               	movlw	0
  6511  00214E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6512  002150  0E00               	movlw	0
  6513  002152  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6514  002154  502E               	movf	(___flmul@a+2)^0,w,c
  6515  002156  022A               	mulwf	(___flmul@b+2)^0,c
  6516  002158  CFF3 F03F          	movff	prodl,___flmul@temp
  6517  00215C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6518  002160  503F               	movf	___flmul@temp^0,w,c
  6519  002162  6E30               	movwf	??___flmul^0,c
  6520  002164  5040               	movf	(___flmul@temp+1)^0,w,c
  6521  002166  6E31               	movwf	(??___flmul+1)^0,c
  6522  002168  6A32               	clrf	(??___flmul+2)^0,c
  6523  00216A  6A33               	clrf	(??___flmul+3)^0,c
  6524  00216C  C032  F033         	movff	??___flmul+2,??___flmul+3
  6525  002170  C031  F032         	movff	??___flmul+1,??___flmul+2
  6526  002174  C030  F031         	movff	??___flmul,??___flmul+1
  6527  002178  6A30               	clrf	??___flmul^0,c
  6528  00217A  5030               	movf	??___flmul^0,w,c
  6529  00217C  263B               	addwf	___flmul@prod^0,f,c
  6530  00217E  5031               	movf	(??___flmul+1)^0,w,c
  6531  002180  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6532  002182  5032               	movf	(??___flmul+2)^0,w,c
  6533  002184  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6534  002186  5033               	movf	(??___flmul+3)^0,w,c
  6535  002188  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6536  00218A  C035  F030         	movff	___flmul@grs,??___flmul
  6537  00218E  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6538  002192  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6539  002196  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6540  00219A  0E19               	movlw	25
  6541  00219C  EFD5  F010         	goto	u3930
  6542  0021A0                     u3935:
  6543  0021A0  90D8               	bcf	status,0,c
  6544  0021A2  3233               	rrcf	(??___flmul+3)^0,f,c
  6545  0021A4  3232               	rrcf	(??___flmul+2)^0,f,c
  6546  0021A6  3231               	rrcf	(??___flmul+1)^0,f,c
  6547  0021A8  3230               	rrcf	??___flmul^0,f,c
  6548  0021AA                     u3930:
  6549  0021AA  2EE8               	decfsz	wreg,f,c
  6550  0021AC  EFD0  F010         	goto	u3935
  6551  0021B0  5030               	movf	??___flmul^0,w,c
  6552  0021B2  263B               	addwf	___flmul@prod^0,f,c
  6553  0021B4  5031               	movf	(??___flmul+1)^0,w,c
  6554  0021B6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6555  0021B8  5032               	movf	(??___flmul+2)^0,w,c
  6556  0021BA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6557  0021BC  5033               	movf	(??___flmul+3)^0,w,c
  6558  0021BE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6559  0021C0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6560  0021C4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6561  0021C8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6562  0021CC  6A35               	clrf	___flmul@grs^0,c
  6563  0021CE  5039               	movf	___flmul@aexp^0,w,c
  6564  0021D0  C03A  F030         	movff	___flmul@bexp,??___flmul
  6565  0021D4  6A31               	clrf	(??___flmul+1)^0,c
  6566  0021D6  2630               	addwf	??___flmul^0,f,c
  6567  0021D8  0E00               	movlw	0
  6568  0021DA  2231               	addwfc	(??___flmul+1)^0,f,c
  6569  0021DC  0E82               	movlw	130
  6570  0021DE  2430               	addwf	??___flmul^0,w,c
  6571  0021E0  6E3F               	movwf	___flmul@temp^0,c
  6572  0021E2  0EFF               	movlw	255
  6573  0021E4  2031               	addwfc	(??___flmul+1)^0,w,c
  6574  0021E6  6E40               	movwf	(___flmul@temp+1)^0,c
  6575  0021E8  EF0B  F011         	goto	l4282
  6576  0021EC                     l4276:
  6577  0021EC  90D8               	bcf	status,0,c
  6578  0021EE  363B               	rlcf	___flmul@prod^0,f,c
  6579  0021F0  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6580  0021F2  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6581  0021F4  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6582  0021F6  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6583  0021F8  EF00  F011         	goto	u3941
  6584  0021FC  EF02  F011         	goto	u3940
  6585  002200                     u3941:
  6586  002200  EF03  F011         	goto	l1407
  6587  002204                     u3940:
  6588  002204  803B               	bsf	___flmul@prod^0,0,c
  6589  002206                     l1407:
  6590  002206  90D8               	bcf	status,0,c
  6591  002208  3635               	rlcf	___flmul@grs^0,f,c
  6592  00220A  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6593  00220C  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6594  00220E  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6595  002210  063F               	decf	___flmul@temp^0,f,c
  6596  002212  A0D8               	btfss	status,0,c
  6597  002214  0640               	decf	(___flmul@temp+1)^0,f,c
  6598  002216                     l4282:
  6599  002216  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6600  002218  EF10  F011         	goto	u3951
  6601  00221C  EF12  F011         	goto	u3950
  6602  002220                     u3951:
  6603  002220  EFF6  F010         	goto	l4276
  6604  002224                     u3950:
  6605  002224  0E00               	movlw	0
  6606  002226  6E39               	movwf	___flmul@aexp^0,c
  6607  002228  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6608  00222A  EF19  F011         	goto	u3961
  6609  00222E  EF1B  F011         	goto	u3960
  6610  002232                     u3961:
  6611  002232  EF3F  F011         	goto	l1409
  6612  002236                     u3960:
  6613  002236  0EFF               	movlw	255
  6614  002238  1435               	andwf	___flmul@grs^0,w,c
  6615  00223A  6E30               	movwf	??___flmul^0,c
  6616  00223C  0EFF               	movlw	255
  6617  00223E  1436               	andwf	(___flmul@grs+1)^0,w,c
  6618  002240  6E31               	movwf	(??___flmul+1)^0,c
  6619  002242  0EFF               	movlw	255
  6620  002244  1437               	andwf	(___flmul@grs+2)^0,w,c
  6621  002246  6E32               	movwf	(??___flmul+2)^0,c
  6622  002248  0E7F               	movlw	127
  6623  00224A  1438               	andwf	(___flmul@grs+3)^0,w,c
  6624  00224C  6E33               	movwf	(??___flmul+3)^0,c
  6625  00224E  5030               	movf	??___flmul^0,w,c
  6626  002250  1031               	iorwf	(??___flmul+1)^0,w,c
  6627  002252  1032               	iorwf	(??___flmul+2)^0,w,c
  6628  002254  1033               	iorwf	(??___flmul+3)^0,w,c
  6629  002256  B4D8               	btfsc	status,2,c
  6630  002258  EF30  F011         	goto	u3971
  6631  00225C  EF32  F011         	goto	u3970
  6632  002260                     u3971:
  6633  002260  EF36  F011         	goto	l1410
  6634  002264                     u3970:
  6635  002264                     l4290:
  6636  002264  0E01               	movlw	1
  6637  002266  6E39               	movwf	___flmul@aexp^0,c
  6638  002268  EF3F  F011         	goto	l1409
  6639  00226C                     l1410:
  6640  00226C  A03B               	btfss	___flmul@prod^0,0,c
  6641  00226E  EF3B  F011         	goto	u3981
  6642  002272  EF3D  F011         	goto	u3980
  6643  002276                     u3981:
  6644  002276  EF3F  F011         	goto	l1409
  6645  00227A                     u3980:
  6646  00227A  EF32  F011         	goto	l4290
  6647  00227E                     l1409:
  6648  00227E  5039               	movf	___flmul@aexp^0,w,c
  6649  002280  B4D8               	btfsc	status,2,c
  6650  002282  EF45  F011         	goto	u3991
  6651  002286  EF47  F011         	goto	u3990
  6652  00228A                     u3991:
  6653  00228A  EF6B  F011         	goto	l4302
  6654  00228E                     u3990:
  6655  00228E  0E01               	movlw	1
  6656  002290  263B               	addwf	___flmul@prod^0,f,c
  6657  002292  0E00               	movlw	0
  6658  002294  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6659  002296  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6660  002298  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6661  00229A  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6662  00229C  EF52  F011         	goto	u4001
  6663  0022A0  EF54  F011         	goto	u4000
  6664  0022A4                     u4001:
  6665  0022A4  EF6B  F011         	goto	l4302
  6666  0022A8                     u4000:
  6667  0022A8  C03B  F030         	movff	___flmul@prod,??___flmul
  6668  0022AC  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6669  0022B0  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6670  0022B4  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6671  0022B8  3433               	rlcf	(??___flmul+3)^0,w,c
  6672  0022BA  3233               	rrcf	(??___flmul+3)^0,f,c
  6673  0022BC  3232               	rrcf	(??___flmul+2)^0,f,c
  6674  0022BE  3231               	rrcf	(??___flmul+1)^0,f,c
  6675  0022C0  3230               	rrcf	??___flmul^0,f,c
  6676  0022C2  C030  F03B         	movff	??___flmul,___flmul@prod
  6677  0022C6  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6678  0022CA  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6679  0022CE  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6680  0022D2  4A3F               	infsnz	___flmul@temp^0,f,c
  6681  0022D4  2A40               	incf	(___flmul@temp+1)^0,f,c
  6682  0022D6                     l4302:
  6683  0022D6  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6684  0022D8  EF76  F011         	goto	u4011
  6685  0022DC  5040               	movf	(___flmul@temp+1)^0,w,c
  6686  0022DE  E108               	bnz	u4010
  6687  0022E0  283F               	incf	___flmul@temp^0,w,c
  6688  0022E2  A0D8               	btfss	status,0,c
  6689  0022E4  EF76  F011         	goto	u4011
  6690  0022E8  EF78  F011         	goto	u4010
  6691  0022EC                     u4011:
  6692  0022EC  EF82  F011         	goto	l4306
  6693  0022F0                     u4010:
  6694  0022F0  0E00               	movlw	0
  6695  0022F2  6E3B               	movwf	___flmul@prod^0,c
  6696  0022F4  0E00               	movlw	0
  6697  0022F6  6E3C               	movwf	(___flmul@prod+1)^0,c
  6698  0022F8  0E80               	movlw	128
  6699  0022FA  6E3D               	movwf	(___flmul@prod+2)^0,c
  6700  0022FC  0E7F               	movlw	127
  6701  0022FE  6E3E               	movwf	(___flmul@prod+3)^0,c
  6702  002300  EFB0  F011         	goto	l4318
  6703  002304                     l4306:
  6704  002304  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6705  002306  EF8F  F011         	goto	u4020
  6706  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
  6707  00230C  E106               	bnz	u4021
  6708  00230E  043F               	decf	___flmul@temp^0,w,c
  6709  002310  B0D8               	btfsc	status,0,c
  6710  002312  EF8D  F011         	goto	u4021
  6711  002316  EF8F  F011         	goto	u4020
  6712  00231A                     u4021:
  6713  00231A  EF9B  F011         	goto	l1417
  6714  00231E                     u4020:
  6715  00231E  0E00               	movlw	0
  6716  002320  6E3B               	movwf	___flmul@prod^0,c
  6717  002322  0E00               	movlw	0
  6718  002324  6E3C               	movwf	(___flmul@prod+1)^0,c
  6719  002326  0E00               	movlw	0
  6720  002328  6E3D               	movwf	(___flmul@prod+2)^0,c
  6721  00232A  0E00               	movlw	0
  6722  00232C  6E3E               	movwf	(___flmul@prod+3)^0,c
  6723  00232E  0E00               	movlw	0
  6724  002330  6E34               	movwf	___flmul@sign^0,c
  6725  002332  EFB0  F011         	goto	l4318
  6726  002336                     l1417:
  6727  002336  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6728  00233A  0EFF               	movlw	255
  6729  00233C  163B               	andwf	___flmul@prod^0,f,c
  6730  00233E  0EFF               	movlw	255
  6731  002340  163C               	andwf	(___flmul@prod+1)^0,f,c
  6732  002342  0E7F               	movlw	127
  6733  002344  163D               	andwf	(___flmul@prod+2)^0,f,c
  6734  002346  0E00               	movlw	0
  6735  002348  163E               	andwf	(___flmul@prod+3)^0,f,c
  6736  00234A  A03A               	btfss	___flmul@bexp^0,0,c
  6737  00234C  EFAA  F011         	goto	u4031
  6738  002350  EFAC  F011         	goto	u4030
  6739  002354                     u4031:
  6740  002354  EFAD  F011         	goto	l4316
  6741  002358                     u4030:
  6742  002358  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6743  00235A                     l4316:
  6744  00235A  90D8               	bcf	status,0,c
  6745  00235C  303A               	rrcf	___flmul@bexp^0,w,c
  6746  00235E  6E3E               	movwf	(___flmul@prod+3)^0,c
  6747  002360                     l4318:
  6748  002360  5034               	movf	___flmul@sign^0,w,c
  6749  002362  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6750  002364  C03B  F028         	movff	___flmul@prod,?___flmul
  6751  002368  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6752  00236C  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6753  002370  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6754  002374                     l1404:
  6755  002374  0012               	return		;funcret
  6756  002376                     __end_of___flmul:
  6757                           	callstack 0
  6758                           
  6759 ;; *************** function ___flge *****************
  6760 ;; Defined at:
  6761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  ff1             4    0[COMRAM] unsigned char 
  6764 ;;  ff2             4    4[COMRAM] unsigned char 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;		None               void
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6776 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6779 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6780 ;;Total ram usage:       12 bytes
  6781 ;; Hardware stack levels used: 1
  6782 ;; Hardware stack levels required when called: 1
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_roundf
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text24
  6791  004B6E                     __ptext24:
  6792                           	callstack 0
  6793  004B6E                     ___flge:
  6794                           	callstack 25
  6795  004B6E  0E00               	movlw	0
  6796  004B70  1401               	andwf	___flge@ff1^0,w,c
  6797  004B72  6E09               	movwf	??___flge^0,c
  6798  004B74  0E00               	movlw	0
  6799  004B76  1402               	andwf	(___flge@ff1+1)^0,w,c
  6800  004B78  6E0A               	movwf	(??___flge+1)^0,c
  6801  004B7A  0E80               	movlw	128
  6802  004B7C  1403               	andwf	(___flge@ff1+2)^0,w,c
  6803  004B7E  6E0B               	movwf	(??___flge+2)^0,c
  6804  004B80  0E7F               	movlw	127
  6805  004B82  1404               	andwf	(___flge@ff1+3)^0,w,c
  6806  004B84  6E0C               	movwf	(??___flge+3)^0,c
  6807  004B86  5009               	movf	??___flge^0,w,c
  6808  004B88  100A               	iorwf	(??___flge+1)^0,w,c
  6809  004B8A  100B               	iorwf	(??___flge+2)^0,w,c
  6810  004B8C  100C               	iorwf	(??___flge+3)^0,w,c
  6811  004B8E  A4D8               	btfss	status,2,c
  6812  004B90  EFCC  F025         	goto	u4041
  6813  004B94  EFCE  F025         	goto	u4040
  6814  004B98                     u4041:
  6815  004B98  EFD6  F025         	goto	l4334
  6816  004B9C                     u4040:
  6817  004B9C  0E00               	movlw	0
  6818  004B9E  6E01               	movwf	___flge@ff1^0,c
  6819  004BA0  0E00               	movlw	0
  6820  004BA2  6E02               	movwf	(___flge@ff1+1)^0,c
  6821  004BA4  0E00               	movlw	0
  6822  004BA6  6E03               	movwf	(___flge@ff1+2)^0,c
  6823  004BA8  0E00               	movlw	0
  6824  004BAA  6E04               	movwf	(___flge@ff1+3)^0,c
  6825  004BAC                     l4334:
  6826  004BAC  0E00               	movlw	0
  6827  004BAE  1405               	andwf	___flge@ff2^0,w,c
  6828  004BB0  6E09               	movwf	??___flge^0,c
  6829  004BB2  0E00               	movlw	0
  6830  004BB4  1406               	andwf	(___flge@ff2+1)^0,w,c
  6831  004BB6  6E0A               	movwf	(??___flge+1)^0,c
  6832  004BB8  0E80               	movlw	128
  6833  004BBA  1407               	andwf	(___flge@ff2+2)^0,w,c
  6834  004BBC  6E0B               	movwf	(??___flge+2)^0,c
  6835  004BBE  0E7F               	movlw	127
  6836  004BC0  1408               	andwf	(___flge@ff2+3)^0,w,c
  6837  004BC2  6E0C               	movwf	(??___flge+3)^0,c
  6838  004BC4  5009               	movf	??___flge^0,w,c
  6839  004BC6  100A               	iorwf	(??___flge+1)^0,w,c
  6840  004BC8  100B               	iorwf	(??___flge+2)^0,w,c
  6841  004BCA  100C               	iorwf	(??___flge+3)^0,w,c
  6842  004BCC  A4D8               	btfss	status,2,c
  6843  004BCE  EFEB  F025         	goto	u4051
  6844  004BD2  EFED  F025         	goto	u4050
  6845  004BD6                     u4051:
  6846  004BD6  EFF5  F025         	goto	l4338
  6847  004BDA                     u4050:
  6848  004BDA  0E00               	movlw	0
  6849  004BDC  6E05               	movwf	___flge@ff2^0,c
  6850  004BDE  0E00               	movlw	0
  6851  004BE0  6E06               	movwf	(___flge@ff2+1)^0,c
  6852  004BE2  0E00               	movlw	0
  6853  004BE4  6E07               	movwf	(___flge@ff2+2)^0,c
  6854  004BE6  0E00               	movlw	0
  6855  004BE8  6E08               	movwf	(___flge@ff2+3)^0,c
  6856  004BEA                     l4338:
  6857  004BEA  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6858  004BEC  EFFA  F025         	goto	u4061
  6859  004BF0  EFFC  F025         	goto	u4060
  6860  004BF4                     u4061:
  6861  004BF4  EF05  F026         	goto	l4342
  6862  004BF8                     u4060:
  6863  004BF8  6C01               	negf	___flge@ff1^0,c
  6864  004BFA  1E02               	comf	(___flge@ff1+1)^0,f,c
  6865  004BFC  B0D8               	btfsc	status,0,c
  6866  004BFE  2A02               	incf	(___flge@ff1+1)^0,f,c
  6867  004C00  1E03               	comf	(___flge@ff1+2)^0,f,c
  6868  004C02  B0D8               	btfsc	status,0,c
  6869  004C04  2A03               	incf	(___flge@ff1+2)^0,f,c
  6870  004C06  0E80               	movlw	128
  6871  004C08  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6872  004C0A                     l4342:
  6873  004C0A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6874  004C0C  EF0A  F026         	goto	u4071
  6875  004C10  EF0C  F026         	goto	u4070
  6876  004C14                     u4071:
  6877  004C14  EF15  F026         	goto	l1051
  6878  004C18                     u4070:
  6879  004C18  6C05               	negf	___flge@ff2^0,c
  6880  004C1A  1E06               	comf	(___flge@ff2+1)^0,f,c
  6881  004C1C  B0D8               	btfsc	status,0,c
  6882  004C1E  2A06               	incf	(___flge@ff2+1)^0,f,c
  6883  004C20  1E07               	comf	(___flge@ff2+2)^0,f,c
  6884  004C22  B0D8               	btfsc	status,0,c
  6885  004C24  2A07               	incf	(___flge@ff2+2)^0,f,c
  6886  004C26  0E80               	movlw	128
  6887  004C28  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6888  004C2A                     l1051:
  6889  004C2A  0E00               	movlw	0
  6890  004C2C  1A01               	xorwf	___flge@ff1^0,f,c
  6891  004C2E  0E00               	movlw	0
  6892  004C30  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6893  004C32  0E00               	movlw	0
  6894  004C34  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6895  004C36  0E80               	movlw	128
  6896  004C38  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6897  004C3A  0E00               	movlw	0
  6898  004C3C  1A05               	xorwf	___flge@ff2^0,f,c
  6899  004C3E  0E00               	movlw	0
  6900  004C40  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6901  004C42  0E00               	movlw	0
  6902  004C44  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6903  004C46  0E80               	movlw	128
  6904  004C48  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6905  004C4A  5005               	movf	___flge@ff2^0,w,c
  6906  004C4C  5C01               	subwf	___flge@ff1^0,w,c
  6907  004C4E  5006               	movf	(___flge@ff2+1)^0,w,c
  6908  004C50  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6909  004C52  5007               	movf	(___flge@ff2+2)^0,w,c
  6910  004C54  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6911  004C56  5008               	movf	(___flge@ff2+3)^0,w,c
  6912  004C58  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6913  004C5A  B0D8               	btfsc	status,0,c
  6914  004C5C  EF32  F026         	goto	u4081
  6915  004C60  EF34  F026         	goto	u4080
  6916  004C64                     u4081:
  6917  004C64  EF37  F026         	goto	l4348
  6918  004C68                     u4080:
  6919  004C68  90D8               	bcf	status,0,c
  6920  004C6A  EF38  F026         	goto	l1056
  6921  004C6E                     l4348:
  6922  004C6E  80D8               	bsf	status,0,c
  6923  004C70                     l1056:
  6924  004C70  0012               	return		;funcret
  6925  004C72                     __end_of___flge:
  6926                           	callstack 0
  6927                           
  6928 ;; *************** function ___fltol *****************
  6929 ;; Defined at:
  6930 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  f1              4   90[COMRAM] unsigned char 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;  exp1            1    5[BANK0 ] unsigned char 
  6935 ;;  sign1           1    4[BANK0 ] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  4   90[COMRAM] long 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;Total ram usage:       10 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_lroundf
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text25
  6960  004A66                     __ptext25:
  6961                           	callstack 0
  6962  004A66                     ___fltol:
  6963                           	callstack 26
  6964  004A66  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6965  004A68  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6966  004A6A  0100               	movlb	0	; () banked
  6967  004A6C  6F65               	movwf	___fltol@exp1& (0+255),b
  6968  004A6E  5165               	movf	___fltol@exp1& (0+255),w,b
  6969  004A70  A4D8               	btfss	status,2,c
  6970  004A72  EF3D  F025         	goto	u4141
  6971  004A76  EF3F  F025         	goto	u4140
  6972  004A7A                     u4141:
  6973  004A7A  EF49  F025         	goto	l4436
  6974  004A7E                     u4140:
  6975  004A7E                     l4432:
  6976                           
  6977                           ; BSR set to: 0
  6978  004A7E  0E00               	movlw	0
  6979  004A80  6E5B               	movwf	?___fltol^0,c
  6980  004A82  0E00               	movlw	0
  6981  004A84  6E5C               	movwf	(?___fltol+1)^0,c
  6982  004A86  0E00               	movlw	0
  6983  004A88  6E5D               	movwf	(?___fltol+2)^0,c
  6984  004A8A  0E00               	movlw	0
  6985  004A8C  6E5E               	movwf	(?___fltol+3)^0,c
  6986  004A8E  EFB6  F025         	goto	l1083
  6987  004A92                     l4436:
  6988                           
  6989                           ; BSR set to: 0
  6990  004A92  C05B  F060         	movff	___fltol@f1,??___fltol
  6991  004A96  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6992  004A9A  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6993  004A9E  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6994  004AA2  0E20               	movlw	32
  6995  004AA4  EF59  F025         	goto	u4150
  6996  004AA8                     u4155:
  6997  004AA8  90D8               	bcf	status,0,c
  6998  004AAA  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6999  004AAC  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  7000  004AAE  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  7001  004AB0  3360               	rrcf	??___fltol& (0+255),f,b
  7002  004AB2                     u4150:
  7003  004AB2  2EE8               	decfsz	wreg,f,c
  7004  004AB4  EF54  F025         	goto	u4155
  7005  004AB8  5160               	movf	??___fltol& (0+255),w,b
  7006  004ABA  6F64               	movwf	___fltol@sign1& (0+255),b
  7007  004ABC                     
  7008                           ; BSR set to: 0
  7009  004ABC  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  7010  004ABE                     
  7011                           ; BSR set to: 0
  7012  004ABE  0EFF               	movlw	255
  7013  004AC0  165B               	andwf	___fltol@f1^0,f,c
  7014  004AC2  0EFF               	movlw	255
  7015  004AC4  165C               	andwf	(___fltol@f1+1)^0,f,c
  7016  004AC6  0EFF               	movlw	255
  7017  004AC8  165D               	andwf	(___fltol@f1+2)^0,f,c
  7018  004ACA  0E00               	movlw	0
  7019  004ACC  165E               	andwf	(___fltol@f1+3)^0,f,c
  7020  004ACE                     
  7021                           ; BSR set to: 0
  7022  004ACE  0E96               	movlw	150
  7023  004AD0  5F65               	subwf	___fltol@exp1& (0+255),f,b
  7024  004AD2                     
  7025                           ; BSR set to: 0
  7026  004AD2  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  7027  004AD4  EF70  F025         	goto	u4160
  7028  004AD8  EF6E  F025         	goto	u4161
  7029  004ADC                     u4161:
  7030  004ADC  EF86  F025         	goto	l4456
  7031  004AE0                     u4160:
  7032  004AE0                     
  7033                           ; BSR set to: 0
  7034  004AE0  5165               	movf	___fltol@exp1& (0+255),w,b
  7035  004AE2  0A80               	xorlw	128
  7036  004AE4  0F97               	addlw	151
  7037  004AE6  B0D8               	btfsc	status,0,c
  7038  004AE8  EF78  F025         	goto	u4171
  7039  004AEC  EF7A  F025         	goto	u4170
  7040  004AF0                     u4171:
  7041  004AF0  EF7C  F025         	goto	l4452
  7042  004AF4                     u4170:
  7043  004AF4  EF3F  F025         	goto	l4432
  7044  004AF8                     l4452:
  7045                           
  7046                           ; BSR set to: 0
  7047  004AF8  90D8               	bcf	status,0,c
  7048  004AFA  325E               	rrcf	(___fltol@f1+3)^0,f,c
  7049  004AFC  325D               	rrcf	(___fltol@f1+2)^0,f,c
  7050  004AFE  325C               	rrcf	(___fltol@f1+1)^0,f,c
  7051  004B00  325B               	rrcf	___fltol@f1^0,f,c
  7052  004B02                     
  7053                           ; BSR set to: 0
  7054  004B02  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  7055  004B04  EF7C  F025         	goto	l4452
  7056  004B08  EF9E  F025         	goto	l4466
  7057  004B0C                     l4456:
  7058                           
  7059                           ; BSR set to: 0
  7060  004B0C  0E1F               	movlw	31
  7061  004B0E  6565               	cpfsgt	___fltol@exp1& (0+255),b
  7062  004B10  EF8C  F025         	goto	u4181
  7063  004B14  EF8E  F025         	goto	u4180
  7064  004B18                     u4181:
  7065  004B18  EF96  F025         	goto	l4464
  7066  004B1C                     u4180:
  7067  004B1C  EF3F  F025         	goto	l4432
  7068  004B20                     l4462:
  7069                           
  7070                           ; BSR set to: 0
  7071  004B20  90D8               	bcf	status,0,c
  7072  004B22  365B               	rlcf	___fltol@f1^0,f,c
  7073  004B24  365C               	rlcf	(___fltol@f1+1)^0,f,c
  7074  004B26  365D               	rlcf	(___fltol@f1+2)^0,f,c
  7075  004B28  365E               	rlcf	(___fltol@f1+3)^0,f,c
  7076  004B2A  0765               	decf	___fltol@exp1& (0+255),f,b
  7077  004B2C                     l4464:
  7078                           
  7079                           ; BSR set to: 0
  7080  004B2C  5165               	movf	___fltol@exp1& (0+255),w,b
  7081  004B2E  A4D8               	btfss	status,2,c
  7082  004B30  EF9C  F025         	goto	u4191
  7083  004B34  EF9E  F025         	goto	u4190
  7084  004B38                     u4191:
  7085  004B38  EF90  F025         	goto	l4462
  7086  004B3C                     u4190:
  7087  004B3C                     l4466:
  7088                           
  7089                           ; BSR set to: 0
  7090  004B3C  5164               	movf	___fltol@sign1& (0+255),w,b
  7091  004B3E  B4D8               	btfsc	status,2,c
  7092  004B40  EFA4  F025         	goto	u4201
  7093  004B44  EFA6  F025         	goto	u4200
  7094  004B48                     u4201:
  7095  004B48  EFAE  F025         	goto	l4470
  7096  004B4C                     u4200:
  7097  004B4C                     
  7098                           ; BSR set to: 0
  7099  004B4C  1E5E               	comf	(___fltol@f1+3)^0,f,c
  7100  004B4E  1E5D               	comf	(___fltol@f1+2)^0,f,c
  7101  004B50  1E5C               	comf	(___fltol@f1+1)^0,f,c
  7102  004B52  6C5B               	negf	___fltol@f1^0,c
  7103  004B54  0E00               	movlw	0
  7104  004B56  225C               	addwfc	(___fltol@f1+1)^0,f,c
  7105  004B58  225D               	addwfc	(___fltol@f1+2)^0,f,c
  7106  004B5A  225E               	addwfc	(___fltol@f1+3)^0,f,c
  7107  004B5C                     l4470:
  7108                           
  7109                           ; BSR set to: 0
  7110  004B5C  C05B  F05B         	movff	___fltol@f1,?___fltol
  7111  004B60  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  7112  004B64  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  7113  004B68  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  7114  004B6C                     l1083:
  7115                           
  7116                           ; BSR set to: 0
  7117  004B6C  0012               	return		;funcret
  7118  004B6E                     __end_of___fltol:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _color_read_Clear *****************
  7122 ;; Defined at:
  7123 ;;		line 133 in file "color.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  tmp             2    9[COMRAM] unsigned int 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  2    4[COMRAM] unsigned int 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;Total ram usage:        7 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 3
  7144 ;; This function calls:
  7145 ;;		_I2C_2_Master_Read
  7146 ;;		_I2C_2_Master_RepStart
  7147 ;;		_I2C_2_Master_Start
  7148 ;;		_I2C_2_Master_Stop
  7149 ;;		_I2C_2_Master_Write
  7150 ;; This function is called by:
  7151 ;;		_read_color
  7152 ;;		_calibrate_white
  7153 ;;		_amb_light_measure
  7154 ;;		_distance_measure
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text26
  7159  005638                     __ptext26:
  7160                           	callstack 0
  7161  005638                     _color_read_Clear:
  7162                           	callstack 24
  7163  005638                     
  7164                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  7165  005638  ECDC  F02D         	call	_I2C_2_Master_Start	;wreg free
  7166                           
  7167                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  7168  00563C  0E52               	movlw	82
  7169  00563E  ECC6  F02D         	call	_I2C_2_Master_Write
  7170                           
  7171                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  7172  005642  0EB4               	movlw	180
  7173  005644  ECC6  F02D         	call	_I2C_2_Master_Write
  7174                           
  7175                           ;color.c: 139:  I2C_2_Master_RepStart();
  7176  005648  ECD2  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  7177                           
  7178                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  7179  00564C  0E53               	movlw	83
  7180  00564E  ECC6  F02D         	call	_I2C_2_Master_Write
  7181                           
  7182                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  7183  005652  0E01               	movlw	1
  7184  005654  EC89  F02B         	call	_I2C_2_Master_Read
  7185  005658  6E07               	movwf	??_color_read_Clear^0,c
  7186  00565A  5007               	movf	??_color_read_Clear^0,w,c
  7187  00565C  6E0A               	movwf	color_read_Clear@tmp^0,c
  7188  00565E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7189                           
  7190                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7191  005660  0E00               	movlw	0
  7192  005662  EC89  F02B         	call	_I2C_2_Master_Read
  7193  005666  6E07               	movwf	??_color_read_Clear^0,c
  7194  005668  5007               	movf	??_color_read_Clear^0,w,c
  7195  00566A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7196  00566C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7197  00566E  500A               	movf	color_read_Clear@tmp^0,w,c
  7198  005670  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7199  005672  6E0A               	movwf	color_read_Clear@tmp^0,c
  7200  005674  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7201  005676  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7202  005678  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7203                           
  7204                           ;color.c: 143:  I2C_2_Master_Stop();
  7205  00567A  ECD7  F02D         	call	_I2C_2_Master_Stop	;wreg free
  7206  00567E                     
  7207                           ;color.c: 144:  return tmp;
  7208  00567E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7209  005682  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7210  005686  0012               	return		;funcret
  7211  005688                     __end_of_color_read_Clear:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _I2C_2_Master_RepStart *****************
  7215 ;; Defined at:
  7216 ;;		line 33 in file "i2c.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 2
  7237 ;; This function calls:
  7238 ;;		_I2C_2_Master_Idle
  7239 ;; This function is called by:
  7240 ;;		_color_read_Red
  7241 ;;		_color_read_Blue
  7242 ;;		_color_read_Green
  7243 ;;		_color_read_Clear
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text27
  7248  005BA4                     __ptext27:
  7249                           	callstack 0
  7250  005BA4                     _I2C_2_Master_RepStart:
  7251                           	callstack 24
  7252  005BA4                     
  7253                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7254  005BA4  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7255  005BA8                     
  7256                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7257  005BA8  010E               	movlb	14	; () banked
  7258  005BAA  83DA               	bsf	218,1,b	;volatile
  7259  005BAC                     
  7260                           ; BSR set to: 14
  7261  005BAC  0012               	return		;funcret
  7262  005BAE                     __end_of_I2C_2_Master_RepStart:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function _I2C_2_Master_Read *****************
  7266 ;; Defined at:
  7267 ;;		line 51 in file "i2c.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  ack             1    wreg     unsigned char 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  ack             1    2[COMRAM] unsigned char 
  7272 ;;  tmp             1    3[COMRAM] unsigned char 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      unsigned char 
  7275 ;; Registers used:
  7276 ;;		wreg, status,2, status,0, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;Total ram usage:        3 bytes
  7287 ;; Hardware stack levels used: 1
  7288 ;; Hardware stack levels required when called: 2
  7289 ;; This function calls:
  7290 ;;		_I2C_2_Master_Idle
  7291 ;; This function is called by:
  7292 ;;		_color_read_Red
  7293 ;;		_color_read_Blue
  7294 ;;		_color_read_Green
  7295 ;;		_color_read_Clear
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text28
  7300  005712                     __ptext28:
  7301                           	callstack 0
  7302  005712                     _I2C_2_Master_Read:
  7303                           	callstack 24
  7304                           
  7305                           ; BSR set to: 14
  7306                           ;incstack = 0
  7307                           ;I2C_2_Master_Read@ack stored from wreg
  7308  005712  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7309  005714                     
  7310                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7311  005714  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7312  005718                     
  7313                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7314  005718  010E               	movlb	14	; () banked
  7315  00571A  87DA               	bsf	218,3,b	;volatile
  7316                           
  7317                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7318  00571C  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7319  005720                     
  7320                           ;i2c.c: 57:   tmp = SSP2BUF;
  7321  005720  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7322                           
  7323                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7324  005724  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7325  005728                     
  7326                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7327  005728  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7328  00572A  B4D8               	btfsc	status,2,c
  7329  00572C  EF9A  F02B         	goto	u3781
  7330  005730  EF9E  F02B         	goto	u3780
  7331  005734                     u3781:
  7332  005734  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7333  005736  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7334  005738  EF9F  F02B         	goto	u3798
  7335  00573C                     u3780:
  7336  00573C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7337  00573E                     u3798:
  7338  00573E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7339  005740  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7340  005742  010E               	movlb	14	; () banked
  7341  005744  51DA               	movf	218,w,b	;volatile
  7342  005746  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7343  005748  0BDF               	andlw	-33
  7344  00574A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7345  00574C  6FDA               	movwf	218,b	;volatile
  7346  00574E                     
  7347                           ; BSR set to: 14
  7348                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7349  00574E  89DA               	bsf	218,4,b	;volatile
  7350  005750                     
  7351                           ; BSR set to: 14
  7352                           ;i2c.c: 61:   return tmp;
  7353  005750  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7354  005752                     
  7355                           ; BSR set to: 14
  7356  005752  0012               	return		;funcret
  7357  005754                     __end_of_I2C_2_Master_Read:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function ___xxtofl *****************
  7361 ;; Defined at:
  7362 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  sign            1    wreg     unsigned char 
  7365 ;;  val             4    0[COMRAM] long 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  sign            1    8[COMRAM] unsigned char 
  7368 ;;  arg             4   10[COMRAM] unsigned long 
  7369 ;;  exp             1    9[COMRAM] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  4    0[COMRAM] unsigned char 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;Total ram usage:       14 bytes
  7384 ;; Hardware stack levels used: 1
  7385 ;; Hardware stack levels required when called: 1
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_detect_color
  7390 ;;		_amb_light_measure
  7391 ;;		_distance_measure
  7392 ;;		_check_color_reading
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text29
  7397  003E44                     __ptext29:
  7398                           	callstack 0
  7399  003E44                     ___xxtofl:
  7400                           	callstack 27
  7401                           
  7402                           ; BSR set to: 14
  7403                           ;incstack = 0
  7404                           ;___xxtofl@sign stored from wreg
  7405  003E44  6E09               	movwf	___xxtofl@sign^0,c
  7406  003E46  5009               	movf	___xxtofl@sign^0,w,c
  7407  003E48  B4D8               	btfsc	status,2,c
  7408  003E4A  EF29  F01F         	goto	u4971
  7409  003E4E  EF2B  F01F         	goto	u4970
  7410  003E52                     u4971:
  7411  003E52  EF4D  F01F         	goto	l1441
  7412  003E56                     u4970:
  7413  003E56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7414  003E58  EF32  F01F         	goto	u4980
  7415  003E5C  EF30  F01F         	goto	u4981
  7416  003E60                     u4981:
  7417  003E60  EF4D  F01F         	goto	l1441
  7418  003E64                     u4980:
  7419  003E64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7420  003E68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7421  003E6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7422  003E70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7423  003E74  1E05               	comf	??___xxtofl^0,f,c
  7424  003E76  1E06               	comf	(??___xxtofl+1)^0,f,c
  7425  003E78  1E07               	comf	(??___xxtofl+2)^0,f,c
  7426  003E7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7427  003E7C  2A05               	incf	??___xxtofl^0,f,c
  7428  003E7E  0E00               	movlw	0
  7429  003E80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7430  003E82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7431  003E84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7432  003E86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7433  003E8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7434  003E8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7435  003E92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7436  003E96  EF55  F01F         	goto	l4848
  7437  003E9A                     l1441:
  7438  003E9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7439  003E9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7440  003EA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7441  003EA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7442  003EAA                     l4848:
  7443  003EAA  5001               	movf	___xxtofl@val^0,w,c
  7444  003EAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7445  003EAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7446  003EB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7447  003EB2  A4D8               	btfss	status,2,c
  7448  003EB4  EF5E  F01F         	goto	u4991
  7449  003EB8  EF60  F01F         	goto	u4990
  7450  003EBC                     u4991:
  7451  003EBC  EF6A  F01F         	goto	l4854
  7452  003EC0                     u4990:
  7453  003EC0  0E00               	movlw	0
  7454  003EC2  6E01               	movwf	?___xxtofl^0,c
  7455  003EC4  0E00               	movlw	0
  7456  003EC6  6E02               	movwf	(?___xxtofl+1)^0,c
  7457  003EC8  0E00               	movlw	0
  7458  003ECA  6E03               	movwf	(?___xxtofl+2)^0,c
  7459  003ECC  0E00               	movlw	0
  7460  003ECE  6E04               	movwf	(?___xxtofl+3)^0,c
  7461  003ED0  EFFB  F01F         	goto	l1444
  7462  003ED4                     l4854:
  7463  003ED4  0E96               	movlw	150
  7464  003ED6  6E0A               	movwf	___xxtofl@exp^0,c
  7465  003ED8  EF74  F01F         	goto	l4858
  7466  003EDC                     l4856:
  7467  003EDC  2A0A               	incf	___xxtofl@exp^0,f,c
  7468  003EDE  90D8               	bcf	status,0,c
  7469  003EE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7470  003EE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7471  003EE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7472  003EE6  320B               	rrcf	___xxtofl@arg^0,f,c
  7473  003EE8                     l4858:
  7474  003EE8  0E00               	movlw	0
  7475  003EEA  140B               	andwf	___xxtofl@arg^0,w,c
  7476  003EEC  6E05               	movwf	??___xxtofl^0,c
  7477  003EEE  0E00               	movlw	0
  7478  003EF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7479  003EF2  6E06               	movwf	(??___xxtofl+1)^0,c
  7480  003EF4  0E00               	movlw	0
  7481  003EF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7482  003EF8  6E07               	movwf	(??___xxtofl+2)^0,c
  7483  003EFA  0EFE               	movlw	254
  7484  003EFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7485  003EFE  6E08               	movwf	(??___xxtofl+3)^0,c
  7486  003F00  5005               	movf	??___xxtofl^0,w,c
  7487  003F02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7488  003F04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7489  003F06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7490  003F08  A4D8               	btfss	status,2,c
  7491  003F0A  EF89  F01F         	goto	u5001
  7492  003F0E  EF8B  F01F         	goto	u5000
  7493  003F12                     u5001:
  7494  003F12  EF6E  F01F         	goto	l4856
  7495  003F16                     u5000:
  7496  003F16  EF99  F01F         	goto	l1448
  7497  003F1A                     l4860:
  7498  003F1A  2A0A               	incf	___xxtofl@exp^0,f,c
  7499  003F1C  0E01               	movlw	1
  7500  003F1E  260B               	addwf	___xxtofl@arg^0,f,c
  7501  003F20  0E00               	movlw	0
  7502  003F22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7503  003F24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7504  003F26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7505  003F28  90D8               	bcf	status,0,c
  7506  003F2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7507  003F2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7508  003F2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7509  003F30  320B               	rrcf	___xxtofl@arg^0,f,c
  7510  003F32                     l1448:
  7511  003F32  0E00               	movlw	0
  7512  003F34  140B               	andwf	___xxtofl@arg^0,w,c
  7513  003F36  6E05               	movwf	??___xxtofl^0,c
  7514  003F38  0E00               	movlw	0
  7515  003F3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7516  003F3C  6E06               	movwf	(??___xxtofl+1)^0,c
  7517  003F3E  0E00               	movlw	0
  7518  003F40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7519  003F42  6E07               	movwf	(??___xxtofl+2)^0,c
  7520  003F44  0EFF               	movlw	255
  7521  003F46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7522  003F48  6E08               	movwf	(??___xxtofl+3)^0,c
  7523  003F4A  5005               	movf	??___xxtofl^0,w,c
  7524  003F4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7525  003F4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7526  003F50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7527  003F52  A4D8               	btfss	status,2,c
  7528  003F54  EFAE  F01F         	goto	u5011
  7529  003F58  EFB0  F01F         	goto	u5010
  7530  003F5C                     u5011:
  7531  003F5C  EF8D  F01F         	goto	l4860
  7532  003F60                     u5010:
  7533  003F60  EFB8  F01F         	goto	l4868
  7534  003F64                     l4866:
  7535  003F64  060A               	decf	___xxtofl@exp^0,f,c
  7536  003F66  90D8               	bcf	status,0,c
  7537  003F68  360B               	rlcf	___xxtofl@arg^0,f,c
  7538  003F6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7539  003F6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7540  003F6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7541  003F70                     l4868:
  7542  003F70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7543  003F72  EFBD  F01F         	goto	u5021
  7544  003F76  EFBF  F01F         	goto	u5020
  7545  003F7A                     u5021:
  7546  003F7A  EFC7  F01F         	goto	l1455
  7547  003F7E                     u5020:
  7548  003F7E  0E02               	movlw	2
  7549  003F80  600A               	cpfslt	___xxtofl@exp^0,c
  7550  003F82  EFC5  F01F         	goto	u5031
  7551  003F86  EFC7  F01F         	goto	u5030
  7552  003F8A                     u5031:
  7553  003F8A  EFB2  F01F         	goto	l4866
  7554  003F8E                     u5030:
  7555  003F8E                     l1455:
  7556  003F8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7557  003F90  EFCC  F01F         	goto	u5041
  7558  003F94  EFCE  F01F         	goto	u5040
  7559  003F98                     u5041:
  7560  003F98  EFCF  F01F         	goto	l4874
  7561  003F9C                     u5040:
  7562  003F9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7563  003F9E                     l4874:
  7564  003F9E  90D8               	bcf	status,0,c
  7565  003FA0  320A               	rrcf	___xxtofl@exp^0,f,c
  7566  003FA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7567  003FA6  6A06               	clrf	(??___xxtofl+1)^0,c
  7568  003FA8  6A07               	clrf	(??___xxtofl+2)^0,c
  7569  003FAA  6A08               	clrf	(??___xxtofl+3)^0,c
  7570  003FAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7571  003FB0  6A07               	clrf	(??___xxtofl+2)^0,c
  7572  003FB2  6A06               	clrf	(??___xxtofl+1)^0,c
  7573  003FB4  6A05               	clrf	??___xxtofl^0,c
  7574  003FB6  5005               	movf	??___xxtofl^0,w,c
  7575  003FB8  120B               	iorwf	___xxtofl@arg^0,f,c
  7576  003FBA  5006               	movf	(??___xxtofl+1)^0,w,c
  7577  003FBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7578  003FBE  5007               	movf	(??___xxtofl+2)^0,w,c
  7579  003FC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7580  003FC2  5008               	movf	(??___xxtofl+3)^0,w,c
  7581  003FC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7582  003FC6  5009               	movf	___xxtofl@sign^0,w,c
  7583  003FC8  B4D8               	btfsc	status,2,c
  7584  003FCA  EFE9  F01F         	goto	u5051
  7585  003FCE  EFEB  F01F         	goto	u5050
  7586  003FD2                     u5051:
  7587  003FD2  EFF3  F01F         	goto	l4884
  7588  003FD6                     u5050:
  7589  003FD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7590  003FD8  EFF2  F01F         	goto	u5060
  7591  003FDC  EFF0  F01F         	goto	u5061
  7592  003FE0                     u5061:
  7593  003FE0  EFF3  F01F         	goto	l4884
  7594  003FE4                     u5060:
  7595  003FE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7596  003FE6                     l4884:
  7597  003FE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7598  003FEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7599  003FEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7600  003FF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7601  003FF6                     l1444:
  7602  003FF6  0012               	return		;funcret
  7603  003FF8                     __end_of___xxtofl:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function ___fldiv *****************
  7607 ;; Defined at:
  7608 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  b               4   14[COMRAM] unsigned char 
  7611 ;;  a               4   18[COMRAM] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  grs             4   33[COMRAM] unsigned long 
  7614 ;;  rem             4   26[COMRAM] unsigned long 
  7615 ;;  new_exp         2   31[COMRAM] short 
  7616 ;;  aexp            1   38[COMRAM] unsigned char 
  7617 ;;  bexp            1   37[COMRAM] unsigned char 
  7618 ;;  sign            1   30[COMRAM] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  4   14[COMRAM] unsigned char 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;Total ram usage:       25 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; Hardware stack levels required when called: 1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_detect_color
  7639 ;;		_amb_light_measure
  7640 ;;		_check_color_reading
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text30
  7645  002724                     __ptext30:
  7646                           	callstack 0
  7647  002724                     ___fldiv:
  7648                           	callstack 27
  7649  002724  5012               	movf	(___fldiv@b+3)^0,w,c
  7650  002726  0B80               	andlw	128
  7651  002728  6E1F               	movwf	___fldiv@sign^0,c
  7652  00272A  5012               	movf	(___fldiv@b+3)^0,w,c
  7653  00272C  2412               	addwf	(___fldiv@b+3)^0,w,c
  7654  00272E  6E26               	movwf	___fldiv@bexp^0,c
  7655  002730  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7656  002732  EF9D  F013         	goto	u4741
  7657  002736  EF9F  F013         	goto	u4740
  7658  00273A                     u4741:
  7659  00273A  EFA0  F013         	goto	l4710
  7660  00273E                     u4740:
  7661  00273E  8026               	bsf	___fldiv@bexp^0,0,c
  7662  002740                     l4710:
  7663  002740  5026               	movf	___fldiv@bexp^0,w,c
  7664  002742  B4D8               	btfsc	status,2,c
  7665  002744  EFA6  F013         	goto	u4751
  7666  002748  EFA8  F013         	goto	u4750
  7667  00274C                     u4751:
  7668  00274C  EFBD  F013         	goto	l4720
  7669  002750                     u4750:
  7670  002750  2826               	incf	___fldiv@bexp^0,w,c
  7671  002752  A4D8               	btfss	status,2,c
  7672  002754  EFAE  F013         	goto	u4761
  7673  002758  EFB0  F013         	goto	u4760
  7674  00275C                     u4761:
  7675  00275C  EFB8  F013         	goto	l4716
  7676  002760                     u4760:
  7677  002760  0E00               	movlw	0
  7678  002762  6E0F               	movwf	___fldiv@b^0,c
  7679  002764  0E00               	movlw	0
  7680  002766  6E10               	movwf	(___fldiv@b+1)^0,c
  7681  002768  0E00               	movlw	0
  7682  00276A  6E11               	movwf	(___fldiv@b+2)^0,c
  7683  00276C  0E00               	movlw	0
  7684  00276E  6E12               	movwf	(___fldiv@b+3)^0,c
  7685  002770                     l4716:
  7686  002770  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7687  002772  0E00               	movlw	0
  7688  002774  6E12               	movwf	(___fldiv@b+3)^0,c
  7689  002776  EFC5  F013         	goto	l4722
  7690  00277A                     l4720:
  7691  00277A  0E00               	movlw	0
  7692  00277C  6E0F               	movwf	___fldiv@b^0,c
  7693  00277E  0E00               	movlw	0
  7694  002780  6E10               	movwf	(___fldiv@b+1)^0,c
  7695  002782  0E00               	movlw	0
  7696  002784  6E11               	movwf	(___fldiv@b+2)^0,c
  7697  002786  0E00               	movlw	0
  7698  002788  6E12               	movwf	(___fldiv@b+3)^0,c
  7699  00278A                     l4722:
  7700  00278A  5016               	movf	(___fldiv@a+3)^0,w,c
  7701  00278C  0B80               	andlw	128
  7702  00278E  1A1F               	xorwf	___fldiv@sign^0,f,c
  7703  002790  5016               	movf	(___fldiv@a+3)^0,w,c
  7704  002792  2416               	addwf	(___fldiv@a+3)^0,w,c
  7705  002794  6E27               	movwf	___fldiv@aexp^0,c
  7706  002796  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7707  002798  EFD0  F013         	goto	u4771
  7708  00279C  EFD2  F013         	goto	u4770
  7709  0027A0                     u4771:
  7710  0027A0  EFD3  F013         	goto	l4730
  7711  0027A4                     u4770:
  7712  0027A4  8027               	bsf	___fldiv@aexp^0,0,c
  7713  0027A6                     l4730:
  7714  0027A6  5027               	movf	___fldiv@aexp^0,w,c
  7715  0027A8  B4D8               	btfsc	status,2,c
  7716  0027AA  EFD9  F013         	goto	u4781
  7717  0027AE  EFDB  F013         	goto	u4780
  7718  0027B2                     u4781:
  7719  0027B2  EFF0  F013         	goto	l4740
  7720  0027B6                     u4780:
  7721  0027B6  2827               	incf	___fldiv@aexp^0,w,c
  7722  0027B8  A4D8               	btfss	status,2,c
  7723  0027BA  EFE1  F013         	goto	u4791
  7724  0027BE  EFE3  F013         	goto	u4790
  7725  0027C2                     u4791:
  7726  0027C2  EFEB  F013         	goto	l4736
  7727  0027C6                     u4790:
  7728  0027C6  0E00               	movlw	0
  7729  0027C8  6E13               	movwf	___fldiv@a^0,c
  7730  0027CA  0E00               	movlw	0
  7731  0027CC  6E14               	movwf	(___fldiv@a+1)^0,c
  7732  0027CE  0E00               	movlw	0
  7733  0027D0  6E15               	movwf	(___fldiv@a+2)^0,c
  7734  0027D2  0E00               	movlw	0
  7735  0027D4  6E16               	movwf	(___fldiv@a+3)^0,c
  7736  0027D6                     l4736:
  7737  0027D6  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7738  0027D8  0E00               	movlw	0
  7739  0027DA  6E16               	movwf	(___fldiv@a+3)^0,c
  7740  0027DC  EFF8  F013         	goto	l4742
  7741  0027E0                     l4740:
  7742  0027E0  0E00               	movlw	0
  7743  0027E2  6E13               	movwf	___fldiv@a^0,c
  7744  0027E4  0E00               	movlw	0
  7745  0027E6  6E14               	movwf	(___fldiv@a+1)^0,c
  7746  0027E8  0E00               	movlw	0
  7747  0027EA  6E15               	movwf	(___fldiv@a+2)^0,c
  7748  0027EC  0E00               	movlw	0
  7749  0027EE  6E16               	movwf	(___fldiv@a+3)^0,c
  7750  0027F0                     l4742:
  7751  0027F0  5013               	movf	___fldiv@a^0,w,c
  7752  0027F2  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7753  0027F4  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7754  0027F6  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7755  0027F8  A4D8               	btfss	status,2,c
  7756  0027FA  EF01  F014         	goto	u4801
  7757  0027FE  EF03  F014         	goto	u4800
  7758  002802                     u4801:
  7759  002802  EF1B  F014         	goto	l4754
  7760  002806                     u4800:
  7761  002806  0E00               	movlw	0
  7762  002808  6E0F               	movwf	___fldiv@b^0,c
  7763  00280A  0E00               	movlw	0
  7764  00280C  6E10               	movwf	(___fldiv@b+1)^0,c
  7765  00280E  0E00               	movlw	0
  7766  002810  6E11               	movwf	(___fldiv@b+2)^0,c
  7767  002812  0E00               	movlw	0
  7768  002814  6E12               	movwf	(___fldiv@b+3)^0,c
  7769  002816  0E80               	movlw	128
  7770  002818  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7771  00281A  0E7F               	movlw	127
  7772  00281C  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7773  00281E                     l4748:
  7774  00281E  501F               	movf	___fldiv@sign^0,w,c
  7775  002820  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7776  002822  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7777  002826  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7778  00282A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7779  00282E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7780  002832  EF5E  F015         	goto	l1368
  7781  002836                     l4754:
  7782  002836  5026               	movf	___fldiv@bexp^0,w,c
  7783  002838  A4D8               	btfss	status,2,c
  7784  00283A  EF21  F014         	goto	u4811
  7785  00283E  EF23  F014         	goto	u4810
  7786  002842                     u4811:
  7787  002842  EF2D  F014         	goto	l4762
  7788  002846                     u4810:
  7789  002846  0E00               	movlw	0
  7790  002848  6E0F               	movwf	?___fldiv^0,c
  7791  00284A  0E00               	movlw	0
  7792  00284C  6E10               	movwf	(?___fldiv+1)^0,c
  7793  00284E  0E00               	movlw	0
  7794  002850  6E11               	movwf	(?___fldiv+2)^0,c
  7795  002852  0E00               	movlw	0
  7796  002854  6E12               	movwf	(?___fldiv+3)^0,c
  7797  002856  EF5E  F015         	goto	l1368
  7798  00285A                     l4762:
  7799  00285A  5027               	movf	___fldiv@aexp^0,w,c
  7800  00285C  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7801  002860  6A18               	clrf	(??___fldiv+1)^0,c
  7802  002862  5E17               	subwf	??___fldiv^0,f,c
  7803  002864  0E00               	movlw	0
  7804  002866  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7805  002868  0E7F               	movlw	127
  7806  00286A  2417               	addwf	??___fldiv^0,w,c
  7807  00286C  6E20               	movwf	___fldiv@new_exp^0,c
  7808  00286E  0E00               	movlw	0
  7809  002870  2018               	addwfc	(??___fldiv+1)^0,w,c
  7810  002872  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7811  002874  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7812  002878  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7813  00287C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7814  002880  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7815  002884  0E00               	movlw	0
  7816  002886  6E0F               	movwf	___fldiv@b^0,c
  7817  002888  0E00               	movlw	0
  7818  00288A  6E10               	movwf	(___fldiv@b+1)^0,c
  7819  00288C  0E00               	movlw	0
  7820  00288E  6E11               	movwf	(___fldiv@b+2)^0,c
  7821  002890  0E00               	movlw	0
  7822  002892  6E12               	movwf	(___fldiv@b+3)^0,c
  7823  002894  0E00               	movlw	0
  7824  002896  6E22               	movwf	___fldiv@grs^0,c
  7825  002898  0E00               	movlw	0
  7826  00289A  6E23               	movwf	(___fldiv@grs+1)^0,c
  7827  00289C  0E00               	movlw	0
  7828  00289E  6E24               	movwf	(___fldiv@grs+2)^0,c
  7829  0028A0  0E00               	movlw	0
  7830  0028A2  6E25               	movwf	(___fldiv@grs+3)^0,c
  7831  0028A4  0E00               	movlw	0
  7832  0028A6  6E27               	movwf	___fldiv@aexp^0,c
  7833  0028A8  EF8E  F014         	goto	l1370
  7834  0028AC                     l4772:
  7835  0028AC  5027               	movf	___fldiv@aexp^0,w,c
  7836  0028AE  B4D8               	btfsc	status,2,c
  7837  0028B0  EF5C  F014         	goto	u4821
  7838  0028B4  EF5E  F014         	goto	u4820
  7839  0028B8                     u4821:
  7840  0028B8  EF75  F014         	goto	l4780
  7841  0028BC                     u4820:
  7842  0028BC  90D8               	bcf	status,0,c
  7843  0028BE  361B               	rlcf	___fldiv@rem^0,f,c
  7844  0028C0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7845  0028C2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7846  0028C4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7847  0028C6  90D8               	bcf	status,0,c
  7848  0028C8  360F               	rlcf	___fldiv@b^0,f,c
  7849  0028CA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7850  0028CC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7851  0028CE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7852  0028D0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7853  0028D2  EF6D  F014         	goto	u4831
  7854  0028D6  EF6F  F014         	goto	u4830
  7855  0028DA                     u4831:
  7856  0028DA  EF70  F014         	goto	l1373
  7857  0028DE                     u4830:
  7858  0028DE  800F               	bsf	___fldiv@b^0,0,c
  7859  0028E0                     l1373:
  7860  0028E0  90D8               	bcf	status,0,c
  7861  0028E2  3622               	rlcf	___fldiv@grs^0,f,c
  7862  0028E4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7863  0028E6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7864  0028E8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7865  0028EA                     l4780:
  7866  0028EA  5013               	movf	___fldiv@a^0,w,c
  7867  0028EC  5C1B               	subwf	___fldiv@rem^0,w,c
  7868  0028EE  5014               	movf	(___fldiv@a+1)^0,w,c
  7869  0028F0  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7870  0028F2  5015               	movf	(___fldiv@a+2)^0,w,c
  7871  0028F4  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7872  0028F6  5016               	movf	(___fldiv@a+3)^0,w,c
  7873  0028F8  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7874  0028FA  A0D8               	btfss	status,0,c
  7875  0028FC  EF82  F014         	goto	u4841
  7876  002900  EF84  F014         	goto	u4840
  7877  002904                     u4841:
  7878  002904  EF8D  F014         	goto	l4786
  7879  002908                     u4840:
  7880  002908  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7881  00290A  5013               	movf	___fldiv@a^0,w,c
  7882  00290C  5E1B               	subwf	___fldiv@rem^0,f,c
  7883  00290E  5014               	movf	(___fldiv@a+1)^0,w,c
  7884  002910  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7885  002912  5015               	movf	(___fldiv@a+2)^0,w,c
  7886  002914  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7887  002916  5016               	movf	(___fldiv@a+3)^0,w,c
  7888  002918  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7889  00291A                     l4786:
  7890  00291A  2A27               	incf	___fldiv@aexp^0,f,c
  7891  00291C                     l1370:
  7892  00291C  0E19               	movlw	25
  7893  00291E  6427               	cpfsgt	___fldiv@aexp^0,c
  7894  002920  EF94  F014         	goto	u4851
  7895  002924  EF96  F014         	goto	u4850
  7896  002928                     u4851:
  7897  002928  EF56  F014         	goto	l4772
  7898  00292C                     u4850:
  7899  00292C  501B               	movf	___fldiv@rem^0,w,c
  7900  00292E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7901  002930  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7902  002932  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7903  002934  B4D8               	btfsc	status,2,c
  7904  002936  EF9F  F014         	goto	u4861
  7905  00293A  EFA1  F014         	goto	u4860
  7906  00293E                     u4861:
  7907  00293E  EFB9  F014         	goto	l4798
  7908  002942                     u4860:
  7909  002942  8022               	bsf	___fldiv@grs^0,0,c
  7910  002944  EFB9  F014         	goto	l4798
  7911  002948                     l4792:
  7912  002948  90D8               	bcf	status,0,c
  7913  00294A  360F               	rlcf	___fldiv@b^0,f,c
  7914  00294C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7915  00294E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7916  002950  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7917  002952  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7918  002954  EFAE  F014         	goto	u4871
  7919  002958  EFB0  F014         	goto	u4870
  7920  00295C                     u4871:
  7921  00295C  EFB1  F014         	goto	l1379
  7922  002960                     u4870:
  7923  002960  800F               	bsf	___fldiv@b^0,0,c
  7924  002962                     l1379:
  7925  002962  90D8               	bcf	status,0,c
  7926  002964  3622               	rlcf	___fldiv@grs^0,f,c
  7927  002966  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7928  002968  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7929  00296A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7930  00296C  0620               	decf	___fldiv@new_exp^0,f,c
  7931  00296E  A0D8               	btfss	status,0,c
  7932  002970  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7933  002972                     l4798:
  7934  002972  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7935  002974  EFBE  F014         	goto	u4881
  7936  002978  EFC0  F014         	goto	u4880
  7937  00297C                     u4881:
  7938  00297C  EFA4  F014         	goto	l4792
  7939  002980                     u4880:
  7940  002980  0E00               	movlw	0
  7941  002982  6E27               	movwf	___fldiv@aexp^0,c
  7942  002984  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7943  002986  EFC7  F014         	goto	u4891
  7944  00298A  EFC9  F014         	goto	u4890
  7945  00298E                     u4891:
  7946  00298E  EFED  F014         	goto	l1381
  7947  002992                     u4890:
  7948  002992  0EFF               	movlw	255
  7949  002994  1422               	andwf	___fldiv@grs^0,w,c
  7950  002996  6E17               	movwf	??___fldiv^0,c
  7951  002998  0EFF               	movlw	255
  7952  00299A  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7953  00299C  6E18               	movwf	(??___fldiv+1)^0,c
  7954  00299E  0EFF               	movlw	255
  7955  0029A0  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7956  0029A2  6E19               	movwf	(??___fldiv+2)^0,c
  7957  0029A4  0E7F               	movlw	127
  7958  0029A6  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7959  0029A8  6E1A               	movwf	(??___fldiv+3)^0,c
  7960  0029AA  5017               	movf	??___fldiv^0,w,c
  7961  0029AC  1018               	iorwf	(??___fldiv+1)^0,w,c
  7962  0029AE  1019               	iorwf	(??___fldiv+2)^0,w,c
  7963  0029B0  101A               	iorwf	(??___fldiv+3)^0,w,c
  7964  0029B2  B4D8               	btfsc	status,2,c
  7965  0029B4  EFDE  F014         	goto	u4901
  7966  0029B8  EFE0  F014         	goto	u4900
  7967  0029BC                     u4901:
  7968  0029BC  EFE4  F014         	goto	l1382
  7969  0029C0                     u4900:
  7970  0029C0                     l4806:
  7971  0029C0  0E01               	movlw	1
  7972  0029C2  6E27               	movwf	___fldiv@aexp^0,c
  7973  0029C4  EFED  F014         	goto	l1381
  7974  0029C8                     l1382:
  7975  0029C8  A00F               	btfss	___fldiv@b^0,0,c
  7976  0029CA  EFE9  F014         	goto	u4911
  7977  0029CE  EFEB  F014         	goto	u4910
  7978  0029D2                     u4911:
  7979  0029D2  EFED  F014         	goto	l1381
  7980  0029D6                     u4910:
  7981  0029D6  EFE0  F014         	goto	l4806
  7982  0029DA                     l1381:
  7983  0029DA  5027               	movf	___fldiv@aexp^0,w,c
  7984  0029DC  B4D8               	btfsc	status,2,c
  7985  0029DE  EFF3  F014         	goto	u4921
  7986  0029E2  EFF5  F014         	goto	u4920
  7987  0029E6                     u4921:
  7988  0029E6  EF19  F015         	goto	l4818
  7989  0029EA                     u4920:
  7990  0029EA  0E01               	movlw	1
  7991  0029EC  260F               	addwf	___fldiv@b^0,f,c
  7992  0029EE  0E00               	movlw	0
  7993  0029F0  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7994  0029F2  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7995  0029F4  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7996  0029F6  A012               	btfss	(___fldiv@b+3)^0,0,c
  7997  0029F8  EF00  F015         	goto	u4931
  7998  0029FC  EF02  F015         	goto	u4930
  7999  002A00                     u4931:
  8000  002A00  EF19  F015         	goto	l4818
  8001  002A04                     u4930:
  8002  002A04  C00F  F017         	movff	___fldiv@b,??___fldiv
  8003  002A08  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8004  002A0C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8005  002A10  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8006  002A14  341A               	rlcf	(??___fldiv+3)^0,w,c
  8007  002A16  321A               	rrcf	(??___fldiv+3)^0,f,c
  8008  002A18  3219               	rrcf	(??___fldiv+2)^0,f,c
  8009  002A1A  3218               	rrcf	(??___fldiv+1)^0,f,c
  8010  002A1C  3217               	rrcf	??___fldiv^0,f,c
  8011  002A1E  C017  F00F         	movff	??___fldiv,___fldiv@b
  8012  002A22  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8013  002A26  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8014  002A2A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8015  002A2E  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8016  002A30  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8017  002A32                     l4818:
  8018  002A32  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8019  002A34  EF24  F015         	goto	u4941
  8020  002A38  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8021  002A3A  E108               	bnz	u4940
  8022  002A3C  2820               	incf	___fldiv@new_exp^0,w,c
  8023  002A3E  A0D8               	btfss	status,0,c
  8024  002A40  EF24  F015         	goto	u4941
  8025  002A44  EF26  F015         	goto	u4940
  8026  002A48                     u4941:
  8027  002A48  EF31  F015         	goto	l4822
  8028  002A4C                     u4940:
  8029  002A4C  0E00               	movlw	0
  8030  002A4E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8031  002A50  6820               	setf	___fldiv@new_exp^0,c
  8032  002A52  0E00               	movlw	0
  8033  002A54  6E0F               	movwf	___fldiv@b^0,c
  8034  002A56  0E00               	movlw	0
  8035  002A58  6E10               	movwf	(___fldiv@b+1)^0,c
  8036  002A5A  0E00               	movlw	0
  8037  002A5C  6E11               	movwf	(___fldiv@b+2)^0,c
  8038  002A5E  0E00               	movlw	0
  8039  002A60  6E12               	movwf	(___fldiv@b+3)^0,c
  8040  002A62                     l4822:
  8041  002A62  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8042  002A64  EF3E  F015         	goto	u4950
  8043  002A68  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8044  002A6A  E106               	bnz	u4951
  8045  002A6C  0420               	decf	___fldiv@new_exp^0,w,c
  8046  002A6E  B0D8               	btfsc	status,0,c
  8047  002A70  EF3C  F015         	goto	u4951
  8048  002A74  EF3E  F015         	goto	u4950
  8049  002A78                     u4951:
  8050  002A78  EF4C  F015         	goto	l4826
  8051  002A7C                     u4950:
  8052  002A7C  0E00               	movlw	0
  8053  002A7E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8054  002A80  0E00               	movlw	0
  8055  002A82  6E20               	movwf	___fldiv@new_exp^0,c
  8056  002A84  0E00               	movlw	0
  8057  002A86  6E0F               	movwf	___fldiv@b^0,c
  8058  002A88  0E00               	movlw	0
  8059  002A8A  6E10               	movwf	(___fldiv@b+1)^0,c
  8060  002A8C  0E00               	movlw	0
  8061  002A8E  6E11               	movwf	(___fldiv@b+2)^0,c
  8062  002A90  0E00               	movlw	0
  8063  002A92  6E12               	movwf	(___fldiv@b+3)^0,c
  8064  002A94  0E00               	movlw	0
  8065  002A96  6E1F               	movwf	___fldiv@sign^0,c
  8066  002A98                     l4826:
  8067  002A98  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8068  002A9C  A026               	btfss	___fldiv@bexp^0,0,c
  8069  002A9E  EF53  F015         	goto	u4961
  8070  002AA2  EF55  F015         	goto	u4960
  8071  002AA6                     u4961:
  8072  002AA6  EF58  F015         	goto	l4832
  8073  002AAA                     u4960:
  8074  002AAA  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8075  002AAC  EF59  F015         	goto	l4834
  8076  002AB0                     l4832:
  8077  002AB0  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8078  002AB2                     l4834:
  8079  002AB2  90D8               	bcf	status,0,c
  8080  002AB4  3026               	rrcf	___fldiv@bexp^0,w,c
  8081  002AB6  6E12               	movwf	(___fldiv@b+3)^0,c
  8082  002AB8  EF0F  F014         	goto	l4748
  8083  002ABC                     l1368:
  8084  002ABC  0012               	return		;funcret
  8085  002ABE                     __end_of___fldiv:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function _LED_C *****************
  8089 ;; Defined at:
  8090 ;;		line 173 in file "color.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;		None
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;Total ram usage:        2 bytes
  8109 ;; Hardware stack levels used: 1
  8110 ;; Hardware stack levels required when called: 1
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_color_data_collection
  8115 ;;		_calibrate_white
  8116 ;;		_amb_light_measure
  8117 ;;		_distance_measure
  8118 ;;		_test_function
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text31
  8123  005AC2                     __ptext31:
  8124                           	callstack 0
  8125  005AC2                     _LED_C:
  8126                           	callstack 27
  8127  005AC2                     
  8128                           ;color.c: 175:     LATGbits.LATG1 = 1;
  8129  005AC2  827F               	bsf	127,1,c	;volatile
  8130                           
  8131                           ;color.c: 176:     LATFbits.LATF7 = 1;
  8132  005AC4  8E7E               	bsf	126,7,c	;volatile
  8133                           
  8134                           ;color.c: 177:     LATAbits.LATA4 = 1;
  8135  005AC6  8879               	bsf	121,4,c	;volatile
  8136  005AC8                     
  8137                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8138  005AC8  0E05               	movlw	5
  8139  005ACA  6E02               	movwf	(??_LED_C+1)^0,c
  8140  005ACC  0E0F               	movlw	15
  8141  005ACE  6E01               	movwf	??_LED_C^0,c
  8142  005AD0  0EF1               	movlw	241
  8143  005AD2                     u5927:
  8144  005AD2  2EE8               	decfsz	wreg,f,c
  8145  005AD4  D7FE               	bra	u5927
  8146  005AD6  2E01               	decfsz	??_LED_C^0,f,c
  8147  005AD8  D7FC               	bra	u5927
  8148  005ADA  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8149  005ADC  D7FA               	bra	u5927
  8150  005ADE  F000               	nop	
  8151  005AE0  0012               	return		;funcret
  8152  005AE2                     __end_of_LED_C:
  8153                           	callstack 0
  8154                           
  8155 ;; *************** function _short_burst_back *****************
  8156 ;; Defined at:
  8157 ;;		line 10 in file "movement.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  8160 ;;		 -> main@motorL(10), 
  8161 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  8162 ;;		 -> main@motorR(10), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;Total ram usage:        6 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 5
  8181 ;; This function calls:
  8182 ;;		_fullSpeedAhead
  8183 ;;		_fullSpeedBack
  8184 ;;		_stop
  8185 ;; This function is called by:
  8186 ;;		_main
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text32
  8191  0053C8                     __ptext32:
  8192                           	callstack 0
  8193  0053C8                     _short_burst_back:
  8194                           	callstack 25
  8195  0053C8                     
  8196                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  8197  0053C8  C026  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
  8198  0053CC  C027  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
  8199  0053D0  C028  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
  8200  0053D4  C029  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
  8201  0053D8  ECED  F028         	call	_fullSpeedAhead	;wreg free
  8202  0053DC                     
  8203                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8204  0053DC  0E29               	movlw	41
  8205  0053DE  6E2B               	movwf	(??_short_burst_back+1)^0,c
  8206  0053E0  0E96               	movlw	150
  8207  0053E2  6E2A               	movwf	??_short_burst_back^0,c
  8208  0053E4  0E7F               	movlw	127
  8209  0053E6                     u5937:
  8210  0053E6  2EE8               	decfsz	wreg,f,c
  8211  0053E8  D7FE               	bra	u5937
  8212  0053EA  2E2A               	decfsz	??_short_burst_back^0,f,c
  8213  0053EC  D7FC               	bra	u5937
  8214  0053EE  2E2B               	decfsz	(??_short_burst_back+1)^0,f,c
  8215  0053F0  D7FA               	bra	u5937
  8216  0053F2  F000               	nop	
  8217  0053F4                     
  8218                           ;movement.c: 14:     stop(mL,mR);
  8219  0053F4  C026  F01A         	movff	short_burst_back@mL,stop@mL
  8220  0053F8  C027  F01B         	movff	short_burst_back@mL+1,stop@mL+1
  8221  0053FC  C028  F01C         	movff	short_burst_back@mR,stop@mR
  8222  005400  C029  F01D         	movff	short_burst_back@mR+1,stop@mR+1
  8223  005404  EC8F  F028         	call	_stop	;wreg free
  8224  005408                     
  8225                           ;movement.c: 15:     fullSpeedBack(mL, mR);
  8226  005408  C026  F020         	movff	short_burst_back@mL,fullSpeedBack@mL
  8227  00540C  C027  F021         	movff	short_burst_back@mL+1,fullSpeedBack@mL+1
  8228  005410  C028  F022         	movff	short_burst_back@mR,fullSpeedBack@mR
  8229  005414  C029  F023         	movff	short_burst_back@mR+1,fullSpeedBack@mR+1
  8230  005418  EC2F  F028         	call	_fullSpeedBack	;wreg free
  8231  00541C                     
  8232                           ;movement.c: 16:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8233  00541C  0E05               	movlw	5
  8234  00541E  6E2B               	movwf	(??_short_burst_back+1)^0,c
  8235  005420  0E0F               	movlw	15
  8236  005422  6E2A               	movwf	??_short_burst_back^0,c
  8237  005424  0EF1               	movlw	241
  8238  005426                     u5947:
  8239  005426  2EE8               	decfsz	wreg,f,c
  8240  005428  D7FE               	bra	u5947
  8241  00542A  2E2A               	decfsz	??_short_burst_back^0,f,c
  8242  00542C  D7FC               	bra	u5947
  8243  00542E  2E2B               	decfsz	(??_short_burst_back+1)^0,f,c
  8244  005430  D7FA               	bra	u5947
  8245  005432  F000               	nop	
  8246  005434  0012               	return		;funcret
  8247  005436                     __end_of_short_burst_back:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _pin_init *****************
  8251 ;; Defined at:
  8252 ;;		line 100 in file "movement.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		None
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_main
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text33
  8281  005AE2                     __ptext33:
  8282                           	callstack 0
  8283  005AE2                     _pin_init:
  8284                           	callstack 29
  8285  005AE2  8486               	bsf	134,2,c	;volatile
  8286                           
  8287                           ;movement.c: 102:     ANSELFbits.ANSELF2=0;
  8288  005AE4  010E               	movlb	14	; () banked
  8289  005AE6  95B4               	bcf	180,2,b	;volatile
  8290                           
  8291                           ;movement.c: 103:     TRISFbits.TRISF3=1;
  8292  005AE8  8686               	bsf	134,3,c	;volatile
  8293                           
  8294                           ;movement.c: 104:     ANSELFbits.ANSELF3=0;
  8295  005AEA  97B4               	bcf	180,3,b	;volatile
  8296                           
  8297                           ;movement.c: 109:     TRISGbits.TRISG1 = 0;
  8298  005AEC  9287               	bcf	135,1,c	;volatile
  8299                           
  8300                           ;movement.c: 110:     TRISFbits.TRISF7 = 0;
  8301  005AEE  9E86               	bcf	134,7,c	;volatile
  8302                           
  8303                           ;movement.c: 111:     TRISAbits.TRISA4 = 0;
  8304  005AF0  9881               	bcf	129,4,c	;volatile
  8305                           
  8306                           ;movement.c: 112:     LATGbits.LATG1 = 1;
  8307  005AF2  827F               	bsf	127,1,c	;volatile
  8308                           
  8309                           ;movement.c: 113:     LATFbits.LATF7 = 1;
  8310  005AF4  8E7E               	bsf	126,7,c	;volatile
  8311                           
  8312                           ;movement.c: 114:     LATAbits.LATA4 = 1;
  8313  005AF6  8879               	bsf	121,4,c	;volatile
  8314                           
  8315                           ;movement.c: 117:     TRISDbits.TRISD7 = 0;
  8316  005AF8  9E84               	bcf	132,7,c	;volatile
  8317                           
  8318                           ;movement.c: 118:     LATDbits.LATD7 = 0;
  8319  005AFA  9E7C               	bcf	124,7,c	;volatile
  8320                           
  8321                           ;movement.c: 119:     TRISHbits.TRISH3 = 0;
  8322  005AFC  9688               	bcf	136,3,c	;volatile
  8323                           
  8324                           ;movement.c: 120:     LATHbits.LATH3 = 0;
  8325  005AFE  9680               	bcf	128,3,c	;volatile
  8326  005B00                     
  8327                           ; BSR set to: 14
  8328  005B00  0012               	return		;funcret
  8329  005B02                     __end_of_pin_init:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function _initUSART4 *****************
  8333 ;; Defined at:
  8334 ;;		line 4 in file "serial.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8352 ;;Total ram usage:        0 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_main
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text34
  8363  005B22                     __ptext34:
  8364                           	callstack 0
  8365  005B22                     _initUSART4:
  8366                           	callstack 29
  8367  005B22                     
  8368                           ;serial.c: 8:     RC0PPS = 0x12;
  8369  005B22  0E12               	movlw	18
  8370  005B24  010E               	movlb	14	; () banked
  8371  005B26  6F62               	movwf	98,b	;volatile
  8372                           
  8373                           ;serial.c: 9:     RX4PPS = 0x11;
  8374  005B28  0E11               	movlw	17
  8375  005B2A  6F15               	movwf	21,b	;volatile
  8376  005B2C                     
  8377                           ; BSR set to: 14
  8378                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8379  005B2C  97E9               	bcf	233,3,b	;volatile
  8380  005B2E                     
  8381                           ; BSR set to: 14
  8382                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8383  005B2E  95E8               	bcf	232,2,b	;volatile
  8384                           
  8385                           ;serial.c: 13:     SP4BRGL = 51;
  8386  005B30  0E33               	movlw	51
  8387  005B32  6FE5               	movwf	229,b	;volatile
  8388                           
  8389                           ;serial.c: 15:     SP4BRGH = 0;
  8390  005B34  0E00               	movlw	0
  8391  005B36  6FE6               	movwf	230,b	;volatile
  8392  005B38                     
  8393                           ; BSR set to: 14
  8394                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8395  005B38  89E7               	bsf	231,4,b	;volatile
  8396  005B3A                     
  8397                           ; BSR set to: 14
  8398                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8399  005B3A  8BE8               	bsf	232,5,b	;volatile
  8400  005B3C                     
  8401                           ; BSR set to: 14
  8402                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8403  005B3C  8FE7               	bsf	231,7,b	;volatile
  8404  005B3E                     
  8405                           ; BSR set to: 14
  8406  005B3E  0012               	return		;funcret
  8407  005B40                     __end_of_initUSART4:
  8408                           	callstack 0
  8409                           
  8410 ;; *************** function _initDCmotors_parameter *****************
  8411 ;; Defined at:
  8412 ;;		line 40 in file "dc_motor.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8415 ;;		 -> main@motorL(10), 
  8416 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8417 ;;		 -> main@motorR(10), 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;Total ram usage:        4 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 1
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_main
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text35
  8444  004C72                     __ptext35:
  8445                           	callstack 0
  8446  004C72                     _initDCmotors_parameter:
  8447                           	callstack 29
  8448  004C72                     
  8449                           ;dc_motor.c: 42:     motorL->power = 0;
  8450  004C72  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8451  004C76  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8452  004C7A  0E00               	movlw	0
  8453  004C7C  6EDF               	movwf	indf2,c
  8454  004C7E                     
  8455                           ;dc_motor.c: 43:     motorL->direction = 1;
  8456  004C7E  EE20 F001          	lfsr	2,1
  8457  004C82  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8458  004C84  26D9               	addwf	fsr2l,f,c
  8459  004C86  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8460  004C88  22DA               	addwfc	fsr2h,f,c
  8461  004C8A  0E01               	movlw	1
  8462  004C8C  6EDF               	movwf	indf2,c
  8463  004C8E                     
  8464                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8465  004C8E  EE20 F002          	lfsr	2,2
  8466  004C92  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8467  004C94  26D9               	addwf	fsr2l,f,c
  8468  004C96  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8469  004C98  22DA               	addwfc	fsr2h,f,c
  8470  004C9A  0EA3               	movlw	163
  8471  004C9C  6EDE               	movwf	postinc2,c
  8472  004C9E  0E0F               	movlw	15
  8473  004CA0  6EDD               	movwf	postdec2,c
  8474  004CA2                     
  8475                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8476  004CA2  EE20 F004          	lfsr	2,4
  8477  004CA6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8478  004CA8  26D9               	addwf	fsr2l,f,c
  8479  004CAA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8480  004CAC  22DA               	addwfc	fsr2h,f,c
  8481  004CAE  0E7D               	movlw	125
  8482  004CB0  6EDE               	movwf	postinc2,c
  8483  004CB2  0E0F               	movlw	15
  8484  004CB4  6EDD               	movwf	postdec2,c
  8485  004CB6                     
  8486                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8487  004CB6  EE20 F006          	lfsr	2,6
  8488  004CBA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8489  004CBC  26D9               	addwf	fsr2l,f,c
  8490  004CBE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8491  004CC0  22DA               	addwfc	fsr2h,f,c
  8492  004CC2  0E04               	movlw	4
  8493  004CC4  6EDF               	movwf	indf2,c
  8494  004CC6                     
  8495                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8496  004CC6  EE20 F007          	lfsr	2,7
  8497  004CCA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8498  004CCC  26D9               	addwf	fsr2l,f,c
  8499  004CCE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8500  004CD0  22DA               	addwfc	fsr2h,f,c
  8501  004CD2  0EC7               	movlw	199
  8502  004CD4  6EDE               	movwf	postinc2,c
  8503  004CD6  0E00               	movlw	0
  8504  004CD8  6EDD               	movwf	postdec2,c
  8505  004CDA                     
  8506                           ;dc_motor.c: 50:     motorR->power = 0;
  8507  004CDA  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8508  004CDE  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8509  004CE2  0E00               	movlw	0
  8510  004CE4  6EDF               	movwf	indf2,c
  8511                           
  8512                           ;dc_motor.c: 51:     motorR->direction = 1;
  8513  004CE6  EE20 F001          	lfsr	2,1
  8514  004CEA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8515  004CEC  26D9               	addwf	fsr2l,f,c
  8516  004CEE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8517  004CF0  22DA               	addwfc	fsr2h,f,c
  8518  004CF2  0E01               	movlw	1
  8519  004CF4  6EDF               	movwf	indf2,c
  8520                           
  8521                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8522  004CF6  EE20 F002          	lfsr	2,2
  8523  004CFA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8524  004CFC  26D9               	addwf	fsr2l,f,c
  8525  004CFE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8526  004D00  22DA               	addwfc	fsr2h,f,c
  8527  004D02  0EA0               	movlw	160
  8528  004D04  6EDE               	movwf	postinc2,c
  8529  004D06  0E0F               	movlw	15
  8530  004D08  6EDD               	movwf	postdec2,c
  8531                           
  8532                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8533  004D0A  EE20 F004          	lfsr	2,4
  8534  004D0E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8535  004D10  26D9               	addwf	fsr2l,f,c
  8536  004D12  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8537  004D14  22DA               	addwfc	fsr2h,f,c
  8538  004D16  0E7F               	movlw	127
  8539  004D18  6EDE               	movwf	postinc2,c
  8540  004D1A  0E0F               	movlw	15
  8541  004D1C  6EDD               	movwf	postdec2,c
  8542                           
  8543                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8544  004D1E  EE20 F006          	lfsr	2,6
  8545  004D22  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8546  004D24  26D9               	addwf	fsr2l,f,c
  8547  004D26  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8548  004D28  22DA               	addwfc	fsr2h,f,c
  8549  004D2A  0E06               	movlw	6
  8550  004D2C  6EDF               	movwf	indf2,c
  8551                           
  8552                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8553  004D2E  EE20 F007          	lfsr	2,7
  8554  004D32  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8555  004D34  26D9               	addwf	fsr2l,f,c
  8556  004D36  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8557  004D38  22DA               	addwfc	fsr2h,f,c
  8558  004D3A  0EC7               	movlw	199
  8559  004D3C  6EDE               	movwf	postinc2,c
  8560  004D3E  0E00               	movlw	0
  8561  004D40  6EDD               	movwf	postdec2,c
  8562  004D42  0012               	return		;funcret
  8563  004D44                     __end_of_initDCmotors_parameter:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _initDCmotorsPWM *****************
  8567 ;; Defined at:
  8568 ;;		line 10 in file "dc_motor.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  PWMperiod       2    0[COMRAM] int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;Total ram usage:        2 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 1
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text36
  8597  005754                     __ptext36:
  8598                           	callstack 0
  8599  005754                     _initDCmotorsPWM:
  8600                           	callstack 29
  8601  005754                     
  8602                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8603  005754  9485               	bcf	133,2,c	;volatile
  8604                           
  8605                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8606  005756  9E83               	bcf	131,7,c	;volatile
  8607                           
  8608                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8609  005758  9C87               	bcf	135,6,c	;volatile
  8610                           
  8611                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8612  00575A  9885               	bcf	133,4,c	;volatile
  8613                           
  8614                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8615  00575C  947D               	bcf	125,2,c	;volatile
  8616                           
  8617                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8618  00575E  9E7B               	bcf	123,7,c	;volatile
  8619                           
  8620                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8621  005760  9C7F               	bcf	127,6,c	;volatile
  8622                           
  8623                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8624  005762  987D               	bcf	125,4,c	;volatile
  8625  005764                     
  8626                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8627  005764  50BD               	movf	189,w,c	;volatile
  8628  005766  0B8F               	andlw	-113
  8629  005768  0930               	iorlw	48
  8630  00576A  6EBD               	movwf	189,c	;volatile
  8631                           
  8632                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8633  00576C  0EE0               	movlw	-32
  8634  00576E  16BE               	andwf	190,f,c	;volatile
  8635                           
  8636                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8637  005770  50BF               	movf	191,w,c	;volatile
  8638  005772  0BF0               	andlw	-16
  8639  005774  0901               	iorlw	1
  8640  005776  6EBF               	movwf	191,c	;volatile
  8641                           
  8642                           ;dc_motor.c: 28:     T2PR=200-1;
  8643  005778  0EC7               	movlw	199
  8644  00577A  6EBC               	movwf	188,c	;volatile
  8645  00577C                     
  8646                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8647  00577C  8EBD               	bsf	189,7,c	;volatile
  8648                           
  8649                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8650  00577E  0E0A               	movlw	10
  8651  005780  010E               	movlb	14	; () banked
  8652  005782  6F74               	movwf	116,b	;volatile
  8653                           
  8654                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8655  005784  0E0B               	movlw	11
  8656  005786  6F69               	movwf	105,b	;volatile
  8657                           
  8658                           ;dc_motor.c: 34:     PWM6DCH=0;
  8659  005788  0E00               	movlw	0
  8660  00578A  6EA3               	movwf	163,c	;volatile
  8661                           
  8662                           ;dc_motor.c: 35:     PWM7DCH=0;
  8663  00578C  0E00               	movlw	0
  8664  00578E  6EA0               	movwf	160,c	;volatile
  8665  005790                     
  8666                           ; BSR set to: 14
  8667                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8668  005790  8EA4               	bsf	164,7,c	;volatile
  8669  005792                     
  8670                           ; BSR set to: 14
  8671                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8672  005792  8EA1               	bsf	161,7,c	;volatile
  8673  005794                     
  8674                           ; BSR set to: 14
  8675  005794  0012               	return		;funcret
  8676  005796                     __end_of_initDCmotorsPWM:
  8677                           	callstack 0
  8678                           
  8679 ;; *************** function _color_click_init *****************
  8680 ;; Defined at:
  8681 ;;		line 67 in file "color.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;Total ram usage:        1 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 4
  8702 ;; This function calls:
  8703 ;;		_I2C_2_Master_Init
  8704 ;;		_color_writetoaddr
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text37
  8711  005938                     __ptext37:
  8712                           	callstack 0
  8713  005938                     _color_click_init:
  8714                           	callstack 26
  8715  005938                     
  8716                           ;color.c: 70:     I2C_2_Master_Init();
  8717  005938  ECE5  F02C         	call	_I2C_2_Master_Init	;wreg free
  8718  00593C                     
  8719                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8720  00593C  0E01               	movlw	1
  8721  00593E  6E03               	movwf	color_writetoaddr@value^0,c
  8722  005940  0E00               	movlw	0
  8723  005942  EC81  F02D         	call	_color_writetoaddr
  8724  005946                     
  8725                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8726  005946  0E3F               	movlw	63
  8727  005948  6E05               	movwf	??_color_click_init^0,c
  8728  00594A  0E55               	movlw	85
  8729  00594C                     u5957:
  8730  00594C  2EE8               	decfsz	wreg,f,c
  8731  00594E  D7FE               	bra	u5957
  8732  005950  2E05               	decfsz	??_color_click_init^0,f,c
  8733  005952  D7FC               	bra	u5957
  8734  005954  F000               	nop	
  8735  005956                     
  8736                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8737  005956  0E03               	movlw	3
  8738  005958  6E03               	movwf	color_writetoaddr@value^0,c
  8739  00595A  0E00               	movlw	0
  8740  00595C  EC81  F02D         	call	_color_writetoaddr
  8741  005960                     
  8742                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8743  005960  0ED5               	movlw	213
  8744  005962  6E03               	movwf	color_writetoaddr@value^0,c
  8745  005964  0E01               	movlw	1
  8746  005966  EC81  F02D         	call	_color_writetoaddr
  8747  00596A  0012               	return		;funcret
  8748  00596C                     __end_of_color_click_init:
  8749                           	callstack 0
  8750                           
  8751 ;; *************** function _color_writetoaddr *****************
  8752 ;; Defined at:
  8753 ;;		line 83 in file "color.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  address         1    wreg     unsigned char 
  8756 ;;  value           1    2[COMRAM] unsigned char 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  address         1    3[COMRAM] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;Total ram usage:        2 bytes
  8773 ;; Hardware stack levels used: 1
  8774 ;; Hardware stack levels required when called: 3
  8775 ;; This function calls:
  8776 ;;		_I2C_2_Master_Start
  8777 ;;		_I2C_2_Master_Stop
  8778 ;;		_I2C_2_Master_Write
  8779 ;; This function is called by:
  8780 ;;		_color_click_init
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text38
  8785  005B02                     __ptext38:
  8786                           	callstack 0
  8787  005B02                     _color_writetoaddr:
  8788                           	callstack 26
  8789                           
  8790                           ;incstack = 0
  8791                           ;color_writetoaddr@address stored from wreg
  8792  005B02  6E04               	movwf	color_writetoaddr@address^0,c
  8793  005B04                     
  8794                           ;color.c: 84:     I2C_2_Master_Start();
  8795  005B04  ECDC  F02D         	call	_I2C_2_Master_Start	;wreg free
  8796                           
  8797                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8798  005B08  0E52               	movlw	82
  8799  005B0A  ECC6  F02D         	call	_I2C_2_Master_Write
  8800                           
  8801                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8802  005B0E  5004               	movf	color_writetoaddr@address^0,w,c
  8803  005B10  0980               	iorlw	128
  8804  005B12  ECC6  F02D         	call	_I2C_2_Master_Write
  8805                           
  8806                           ;color.c: 87:     I2C_2_Master_Write(value);
  8807  005B16  5003               	movf	color_writetoaddr@value^0,w,c
  8808  005B18  ECC6  F02D         	call	_I2C_2_Master_Write
  8809                           
  8810                           ;color.c: 88:     I2C_2_Master_Stop();
  8811  005B1C  ECD7  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8812  005B20  0012               	return		;funcret
  8813  005B22                     __end_of_color_writetoaddr:
  8814                           	callstack 0
  8815                           
  8816 ;; *************** function _I2C_2_Master_Write *****************
  8817 ;; Defined at:
  8818 ;;		line 45 in file "i2c.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  data_byte       1    wreg     unsigned char 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  data_byte       1    1[COMRAM] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;Total ram usage:        1 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 2
  8839 ;; This function calls:
  8840 ;;		_I2C_2_Master_Idle
  8841 ;; This function is called by:
  8842 ;;		_color_writetoaddr
  8843 ;;		_color_read_Red
  8844 ;;		_color_read_Blue
  8845 ;;		_color_read_Green
  8846 ;;		_color_read_Clear
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text39
  8851  005B8C                     __ptext39:
  8852                           	callstack 0
  8853  005B8C                     _I2C_2_Master_Write:
  8854                           	callstack 24
  8855                           
  8856                           ;incstack = 0
  8857                           ;I2C_2_Master_Write@data_byte stored from wreg
  8858  005B8C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8859  005B8E                     
  8860                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8861  005B8E  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8862  005B92                     
  8863                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8864  005B92  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8865  005B96  0012               	return		;funcret
  8866  005B98                     __end_of_I2C_2_Master_Write:
  8867                           	callstack 0
  8868                           
  8869 ;; *************** function _I2C_2_Master_Stop *****************
  8870 ;; Defined at:
  8871 ;;		line 39 in file "i2c.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;Total ram usage:        0 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; Hardware stack levels required when called: 2
  8892 ;; This function calls:
  8893 ;;		_I2C_2_Master_Idle
  8894 ;; This function is called by:
  8895 ;;		_color_writetoaddr
  8896 ;;		_color_read_Red
  8897 ;;		_color_read_Blue
  8898 ;;		_color_read_Green
  8899 ;;		_color_read_Clear
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text40
  8904  005BAE                     __ptext40:
  8905                           	callstack 0
  8906  005BAE                     _I2C_2_Master_Stop:
  8907                           	callstack 24
  8908  005BAE                     
  8909                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8910  005BAE  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8911  005BB2                     
  8912                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8913  005BB2  010E               	movlb	14	; () banked
  8914  005BB4  85DA               	bsf	218,2,b	;volatile
  8915  005BB6                     
  8916                           ; BSR set to: 14
  8917  005BB6  0012               	return		;funcret
  8918  005BB8                     __end_of_I2C_2_Master_Stop:
  8919                           	callstack 0
  8920                           
  8921 ;; *************** function _I2C_2_Master_Start *****************
  8922 ;; Defined at:
  8923 ;;		line 27 in file "i2c.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 2
  8944 ;; This function calls:
  8945 ;;		_I2C_2_Master_Idle
  8946 ;; This function is called by:
  8947 ;;		_color_writetoaddr
  8948 ;;		_color_read_Red
  8949 ;;		_color_read_Blue
  8950 ;;		_color_read_Green
  8951 ;;		_color_read_Clear
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text41
  8956  005BB8                     __ptext41:
  8957                           	callstack 0
  8958  005BB8                     _I2C_2_Master_Start:
  8959                           	callstack 24
  8960  005BB8                     
  8961                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8962  005BB8  ECFA  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8963  005BBC                     
  8964                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8965  005BBC  010E               	movlb	14	; () banked
  8966  005BBE  81DA               	bsf	218,0,b	;volatile
  8967  005BC0                     
  8968                           ; BSR set to: 14
  8969  005BC0  0012               	return		;funcret
  8970  005BC2                     __end_of_I2C_2_Master_Start:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function _I2C_2_Master_Idle *****************
  8974 ;; Defined at:
  8975 ;;		line 22 in file "i2c.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;Total ram usage:        1 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; Hardware stack levels required when called: 1
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_I2C_2_Master_Start
  9000 ;;		_I2C_2_Master_RepStart
  9001 ;;		_I2C_2_Master_Stop
  9002 ;;		_I2C_2_Master_Write
  9003 ;;		_I2C_2_Master_Read
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text42
  9008  0059F4                     __ptext42:
  9009                           	callstack 0
  9010  0059F4                     _I2C_2_Master_Idle:
  9011                           	callstack 24
  9012  0059F4                     l205:
  9013  0059F4  010E               	movlb	14	; () banked
  9014  0059F6  B5D8               	btfsc	216,2,b	;volatile
  9015  0059F8  EF00  F02D         	goto	u3291
  9016  0059FC  EF02  F02D         	goto	u3290
  9017  005A00                     u3291:
  9018  005A00  EFFA  F02C         	goto	l205
  9019  005A04                     u3290:
  9020  005A04                     
  9021                           ; BSR set to: 14
  9022  005A04  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9023  005A08  0E1F               	movlw	31
  9024  005A0A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9025  005A0C  A4D8               	btfss	status,2,c
  9026  005A0E  EF0B  F02D         	goto	u3301
  9027  005A12  EF0D  F02D         	goto	u3300
  9028  005A16                     u3301:
  9029  005A16  EFFA  F02C         	goto	l205
  9030  005A1A                     u3300:
  9031  005A1A                     
  9032                           ; BSR set to: 14
  9033  005A1A  0012               	return		;funcret
  9034  005A1C                     __end_of_I2C_2_Master_Idle:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function _I2C_2_Master_Init *****************
  9038 ;; Defined at:
  9039 ;;		line 4 in file "i2c.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;Total ram usage:        0 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 1
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_color_click_init
  9064 ;;		_main
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text43
  9069  0059CA                     __ptext43:
  9070                           	callstack 0
  9071  0059CA                     _I2C_2_Master_Init:
  9072                           	callstack 28
  9073  0059CA                     
  9074                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9075  0059CA  010E               	movlb	14	; () banked
  9076  0059CC  51D9               	movf	217,w,b	;volatile
  9077  0059CE  0BF0               	andlw	-16
  9078  0059D0  0908               	iorlw	8
  9079  0059D2  6FD9               	movwf	217,b	;volatile
  9080  0059D4                     
  9081                           ; BSR set to: 14
  9082                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9083  0059D4  8BD9               	bsf	217,5,b	;volatile
  9084                           
  9085                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9086  0059D6  0E9F               	movlw	159
  9087  0059D8  6FD6               	movwf	214,b	;volatile
  9088  0059DA                     
  9089                           ; BSR set to: 14
  9090                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9091  0059DA  8A84               	bsf	132,5,c	;volatile
  9092  0059DC                     
  9093                           ; BSR set to: 14
  9094                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9095  0059DC  8C84               	bsf	132,6,c	;volatile
  9096  0059DE                     
  9097                           ; BSR set to: 14
  9098                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9099  0059DE  9BA7               	bcf	167,5,b	;volatile
  9100  0059E0                     
  9101                           ; BSR set to: 14
  9102                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9103  0059E0  9DA7               	bcf	167,6,b	;volatile
  9104                           
  9105                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9106  0059E2  0E1D               	movlw	29
  9107  0059E4  6F1D               	movwf	29,b	;volatile
  9108                           
  9109                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9110  0059E6  0E1E               	movlw	30
  9111  0059E8  6F1C               	movwf	28,b	;volatile
  9112                           
  9113                           ;i2c.c: 18:   RD5PPS=0x1C;
  9114  0059EA  0E1C               	movlw	28
  9115  0059EC  6F6F               	movwf	111,b	;volatile
  9116                           
  9117                           ;i2c.c: 19:   RD6PPS=0x1B;
  9118  0059EE  0E1B               	movlw	27
  9119  0059F0  6F70               	movwf	112,b	;volatile
  9120  0059F2                     
  9121                           ; BSR set to: 14
  9122  0059F2  0012               	return		;funcret
  9123  0059F4                     __end_of_I2C_2_Master_Init:
  9124                           	callstack 0
  9125                           
  9126 ;; *************** function _buggylight_init *****************
  9127 ;; Defined at:
  9128 ;;		line 13 in file "color.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;		None
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		None
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;Total ram usage:        0 bytes
  9147 ;; Hardware stack levels used: 1
  9148 ;; Hardware stack levels required when called: 1
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_main
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text44
  9157  005B76                     __ptext44:
  9158                           	callstack 0
  9159  005B76                     _buggylight_init:
  9160                           	callstack 29
  9161  005B76                     
  9162                           ;color.c: 15:     TRISHbits.TRISH1=0;
  9163  005B76  9288               	bcf	136,1,c	;volatile
  9164                           
  9165                           ;color.c: 16:     TRISDbits.TRISD4=0;
  9166  005B78  9884               	bcf	132,4,c	;volatile
  9167                           
  9168                           ;color.c: 17:     TRISDbits.TRISD3=0;
  9169  005B7A  9684               	bcf	132,3,c	;volatile
  9170                           
  9171                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9172  005B7C  9086               	bcf	134,0,c	;volatile
  9173                           
  9174                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9175  005B7E  9088               	bcf	136,0,c	;volatile
  9176                           
  9177                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9178  005B80  9280               	bcf	128,1,c	;volatile
  9179                           
  9180                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9181  005B82  987C               	bcf	124,4,c	;volatile
  9182                           
  9183                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9184  005B84  967C               	bcf	124,3,c	;volatile
  9185                           
  9186                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9187  005B86  907E               	bcf	126,0,c	;volatile
  9188                           
  9189                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9190  005B88  9080               	bcf	128,0,c	;volatile
  9191  005B8A  0012               	return		;funcret
  9192  005B8C                     __end_of_buggylight_init:
  9193                           	callstack 0
  9194                           
  9195 ;; *************** function _action *****************
  9196 ;; Defined at:
  9197 ;;		line 19 in file "movement.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  color           1    wreg     unsigned char 
  9200 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9201 ;;		 -> main@motorL(10), 
  9202 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9203 ;;		 -> main@motorR(10), 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  color           1  200[BANK2 ] unsigned char 
  9206 ;;  buf           100  100[BANK2 ] unsigned char [100]
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9217 ;;      Locals:         0       0       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;      Totals:         0       4       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;Total ram usage:      105 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; Hardware stack levels required when called: 11
  9223 ;; This function calls:
  9224 ;;		_goback
  9225 ;;		_reverse_square
  9226 ;;		_sendStringSerial4
  9227 ;;		_short_reverse
  9228 ;;		_sprintf
  9229 ;;		_toggle_light
  9230 ;;		_turnLeft
  9231 ;;		_turnRight
  9232 ;; This function is called by:
  9233 ;;		_main
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text45
  9238  002E2A                     __ptext45:
  9239                           	callstack 0
  9240  002E2A                     _action:
  9241                           	callstack 19
  9242                           
  9243                           ;incstack = 0
  9244                           ;action@color stored from wreg
  9245  002E2A  0102               	movlb	2	; () banked
  9246  002E2C  6FC8               	movwf	action@color& (0+255),b
  9247  002E2E                     
  9248                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: {;movement.c: 23:     if (color != 0){
  9249  002E2E  0102               	movlb	2	; () banked
  9250  002E30  51C8               	movf	action@color& (0+255),w,b
  9251  002E32  B4D8               	btfsc	status,2,c
  9252  002E34  EF1E  F017         	goto	u5431
  9253  002E38  EF20  F017         	goto	u5430
  9254  002E3C                     u5431:
  9255  002E3C  EF98  F018         	goto	l633
  9256  002E40                     u5430:
  9257  002E40                     
  9258                           ; BSR set to: 2
  9259                           ;movement.c: 25:         char buf[100];;movement.c: 26:         sprintf(buf,"result: %d\
      +                          r\n", color);
  9260  002E40  0E64               	movlw	low action@buf
  9261  002E42  0100               	movlb	0	; () banked
  9262  002E44  6F60               	movwf	sprintf@s& (0+255),b
  9263  002E46  0E02               	movlw	high action@buf
  9264  002E48  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9265  002E4A  0E24               	movlw	low STR_3
  9266  002E4C  6F62               	movwf	sprintf@fmt& (0+255),b
  9267  002E4E  0E0E               	movlw	high STR_3
  9268  002E50  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9269  002E52  C2C8  F064         	movff	action@color,?_sprintf+4
  9270  002E56  6B65               	clrf	(?_sprintf+5)& (0+255),b
  9271  002E58  EC7B  F02A         	call	_sprintf	;wreg free
  9272  002E5C                     
  9273                           ;movement.c: 27:         sendStringSerial4(buf);
  9274  002E5C  0E64               	movlw	low action@buf
  9275  002E5E  6E02               	movwf	sendStringSerial4@string^0,c
  9276  002E60  0E02               	movlw	high action@buf
  9277  002E62  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9278  002E64  ECB6  F02C         	call	_sendStringSerial4	;wreg free
  9279  002E68                     
  9280                           ;movement.c: 28:         if (color == 1){
  9281  002E68  0102               	movlb	2	; () banked
  9282  002E6A  05C8               	decf	action@color& (0+255),w,b
  9283  002E6C  A4D8               	btfss	status,2,c
  9284  002E6E  EF3B  F017         	goto	u5441
  9285  002E72  EF3D  F017         	goto	u5440
  9286  002E76                     u5441:
  9287  002E76  EF61  F017         	goto	l5448
  9288  002E7A                     u5440:
  9289  002E7A                     
  9290                           ; BSR set to: 2
  9291                           ;movement.c: 29:             short_reverse(mL,mR);
  9292  002E7A  C0E0  F026         	movff	action@mL,short_reverse@mL
  9293  002E7E  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9294  002E82  C0E2  F028         	movff	action@mR,short_reverse@mR
  9295  002E86  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9296  002E8A  ECCB  F02B         	call	_short_reverse	;wreg free
  9297                           
  9298                           ;movement.c: 30:             turnRight(mL,mR,90);
  9299  002E8E  C0E0  F020         	movff	action@mL,turnRight@mL
  9300  002E92  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9301  002E96  C0E2  F022         	movff	action@mR,turnRight@mR
  9302  002E9A  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9303  002E9E  0E5A               	movlw	90
  9304  002EA0  6E24               	movwf	turnRight@angle_right^0,c
  9305  002EA2  ECD6  F020         	call	_turnRight	;wreg free
  9306  002EA6                     
  9307                           ;movement.c: 31:             memory[array_index] = 1;
  9308  002EA6  0103               	movlb	3	; () banked
  9309  002EA8  516B               	movf	_array_index& (0+255),w,b
  9310  002EAA  0D02               	mullw	2
  9311  002EAC  0E3C               	movlw	low _memory
  9312  002EAE  24F3               	addwf	243,w,c
  9313  002EB0  6ED9               	movwf	fsr2l,c
  9314  002EB2  0E03               	movlw	high _memory
  9315  002EB4  20F4               	addwfc	prodh,w,c
  9316  002EB6  6EDA               	movwf	fsr2h,c
  9317  002EB8  0E01               	movlw	1
  9318  002EBA  6EDE               	movwf	postinc2,c
  9319  002EBC  0E00               	movlw	0
  9320  002EBE  6EDD               	movwf	postdec2,c
  9321  002EC0                     
  9322                           ; BSR set to: 3
  9323                           ;movement.c: 32:             array_index++;
  9324  002EC0  2B6B               	incf	_array_index& (0+255),f,b
  9325  002EC2                     l5448:
  9326                           
  9327                           ;movement.c: 34:         if (color == 2){
  9328  002EC2  0E02               	movlw	2
  9329  002EC4  0102               	movlb	2	; () banked
  9330  002EC6  19C8               	xorwf	action@color& (0+255),w,b
  9331  002EC8  A4D8               	btfss	status,2,c
  9332  002ECA  EF69  F017         	goto	u5451
  9333  002ECE  EF6B  F017         	goto	u5450
  9334  002ED2                     u5451:
  9335  002ED2  EF8F  F017         	goto	l5456
  9336  002ED6                     u5450:
  9337  002ED6                     
  9338                           ; BSR set to: 2
  9339                           ;movement.c: 35:             short_reverse(mL,mR);
  9340  002ED6  C0E0  F026         	movff	action@mL,short_reverse@mL
  9341  002EDA  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9342  002EDE  C0E2  F028         	movff	action@mR,short_reverse@mR
  9343  002EE2  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9344  002EE6  ECCB  F02B         	call	_short_reverse	;wreg free
  9345                           
  9346                           ;movement.c: 36:             turnLeft(mL,mR,90);
  9347  002EEA  C0E0  F020         	movff	action@mL,turnLeft@mL
  9348  002EEE  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9349  002EF2  C0E2  F022         	movff	action@mR,turnLeft@mR
  9350  002EF6  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9351  002EFA  0E5A               	movlw	90
  9352  002EFC  6E24               	movwf	turnLeft@angle_left^0,c
  9353  002EFE  EC9D  F021         	call	_turnLeft	;wreg free
  9354  002F02                     
  9355                           ;movement.c: 37:             memory[array_index] = 2;
  9356  002F02  0103               	movlb	3	; () banked
  9357  002F04  516B               	movf	_array_index& (0+255),w,b
  9358  002F06  0D02               	mullw	2
  9359  002F08  0E3C               	movlw	low _memory
  9360  002F0A  24F3               	addwf	243,w,c
  9361  002F0C  6ED9               	movwf	fsr2l,c
  9362  002F0E  0E03               	movlw	high _memory
  9363  002F10  20F4               	addwfc	prodh,w,c
  9364  002F12  6EDA               	movwf	fsr2h,c
  9365  002F14  0E02               	movlw	2
  9366  002F16  6EDE               	movwf	postinc2,c
  9367  002F18  0E00               	movlw	0
  9368  002F1A  6EDD               	movwf	postdec2,c
  9369  002F1C                     
  9370                           ; BSR set to: 3
  9371                           ;movement.c: 38:             array_index++;
  9372  002F1C  2B6B               	incf	_array_index& (0+255),f,b
  9373  002F1E                     l5456:
  9374                           
  9375                           ;movement.c: 40:         if (color == 3){
  9376  002F1E  0E03               	movlw	3
  9377  002F20  0102               	movlb	2	; () banked
  9378  002F22  19C8               	xorwf	action@color& (0+255),w,b
  9379  002F24  A4D8               	btfss	status,2,c
  9380  002F26  EF97  F017         	goto	u5461
  9381  002F2A  EF99  F017         	goto	u5460
  9382  002F2E                     u5461:
  9383  002F2E  EFBD  F017         	goto	l5464
  9384  002F32                     u5460:
  9385  002F32                     
  9386                           ; BSR set to: 2
  9387                           ;movement.c: 41:             short_reverse(mL,mR);
  9388  002F32  C0E0  F026         	movff	action@mL,short_reverse@mL
  9389  002F36  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9390  002F3A  C0E2  F028         	movff	action@mR,short_reverse@mR
  9391  002F3E  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9392  002F42  ECCB  F02B         	call	_short_reverse	;wreg free
  9393                           
  9394                           ;movement.c: 42:             turnLeft(mL,mR,180);
  9395  002F46  C0E0  F020         	movff	action@mL,turnLeft@mL
  9396  002F4A  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9397  002F4E  C0E2  F022         	movff	action@mR,turnLeft@mR
  9398  002F52  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9399  002F56  0EB4               	movlw	180
  9400  002F58  6E24               	movwf	turnLeft@angle_left^0,c
  9401  002F5A  EC9D  F021         	call	_turnLeft	;wreg free
  9402  002F5E                     
  9403                           ;movement.c: 43:             memory[array_index] = 3;
  9404  002F5E  0103               	movlb	3	; () banked
  9405  002F60  516B               	movf	_array_index& (0+255),w,b
  9406  002F62  0D02               	mullw	2
  9407  002F64  0E3C               	movlw	low _memory
  9408  002F66  24F3               	addwf	243,w,c
  9409  002F68  6ED9               	movwf	fsr2l,c
  9410  002F6A  0E03               	movlw	high _memory
  9411  002F6C  20F4               	addwfc	prodh,w,c
  9412  002F6E  6EDA               	movwf	fsr2h,c
  9413  002F70  0E03               	movlw	3
  9414  002F72  6EDE               	movwf	postinc2,c
  9415  002F74  0E00               	movlw	0
  9416  002F76  6EDD               	movwf	postdec2,c
  9417  002F78                     
  9418                           ; BSR set to: 3
  9419                           ;movement.c: 44:             array_index++;
  9420  002F78  2B6B               	incf	_array_index& (0+255),f,b
  9421  002F7A                     l5464:
  9422                           
  9423                           ;movement.c: 46:         if (color == 4){
  9424  002F7A  0E04               	movlw	4
  9425  002F7C  0102               	movlb	2	; () banked
  9426  002F7E  19C8               	xorwf	action@color& (0+255),w,b
  9427  002F80  A4D8               	btfss	status,2,c
  9428  002F82  EFC5  F017         	goto	u5471
  9429  002F86  EFC7  F017         	goto	u5470
  9430  002F8A                     u5471:
  9431  002F8A  EFEB  F017         	goto	l5472
  9432  002F8E                     u5470:
  9433  002F8E                     
  9434                           ; BSR set to: 2
  9435                           ;movement.c: 47:             reverse_square(mL,mR);
  9436  002F8E  C0E0  F026         	movff	action@mL,reverse_square@mL
  9437  002F92  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9438  002F96  C0E2  F028         	movff	action@mR,reverse_square@mR
  9439  002F9A  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9440  002F9E  ECEB  F02B         	call	_reverse_square	;wreg free
  9441                           
  9442                           ;movement.c: 48:             turnRight(mL,mR,90);
  9443  002FA2  C0E0  F020         	movff	action@mL,turnRight@mL
  9444  002FA6  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9445  002FAA  C0E2  F022         	movff	action@mR,turnRight@mR
  9446  002FAE  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9447  002FB2  0E5A               	movlw	90
  9448  002FB4  6E24               	movwf	turnRight@angle_right^0,c
  9449  002FB6  ECD6  F020         	call	_turnRight	;wreg free
  9450  002FBA                     
  9451                           ;movement.c: 49:             memory[array_index] = 4;
  9452  002FBA  0103               	movlb	3	; () banked
  9453  002FBC  516B               	movf	_array_index& (0+255),w,b
  9454  002FBE  0D02               	mullw	2
  9455  002FC0  0E3C               	movlw	low _memory
  9456  002FC2  24F3               	addwf	243,w,c
  9457  002FC4  6ED9               	movwf	fsr2l,c
  9458  002FC6  0E03               	movlw	high _memory
  9459  002FC8  20F4               	addwfc	prodh,w,c
  9460  002FCA  6EDA               	movwf	fsr2h,c
  9461  002FCC  0E04               	movlw	4
  9462  002FCE  6EDE               	movwf	postinc2,c
  9463  002FD0  0E00               	movlw	0
  9464  002FD2  6EDD               	movwf	postdec2,c
  9465  002FD4                     
  9466                           ; BSR set to: 3
  9467                           ;movement.c: 50:             array_index++;
  9468  002FD4  2B6B               	incf	_array_index& (0+255),f,b
  9469  002FD6                     l5472:
  9470                           
  9471                           ;movement.c: 52:         if (color == 5){
  9472  002FD6  0E05               	movlw	5
  9473  002FD8  0102               	movlb	2	; () banked
  9474  002FDA  19C8               	xorwf	action@color& (0+255),w,b
  9475  002FDC  A4D8               	btfss	status,2,c
  9476  002FDE  EFF3  F017         	goto	u5481
  9477  002FE2  EFF5  F017         	goto	u5480
  9478  002FE6                     u5481:
  9479  002FE6  EF19  F018         	goto	l5480
  9480  002FEA                     u5480:
  9481  002FEA                     
  9482                           ; BSR set to: 2
  9483                           ;movement.c: 53:             reverse_square(mL,mR);
  9484  002FEA  C0E0  F026         	movff	action@mL,reverse_square@mL
  9485  002FEE  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9486  002FF2  C0E2  F028         	movff	action@mR,reverse_square@mR
  9487  002FF6  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9488  002FFA  ECEB  F02B         	call	_reverse_square	;wreg free
  9489                           
  9490                           ;movement.c: 54:             turnLeft(mL,mR,90);
  9491  002FFE  C0E0  F020         	movff	action@mL,turnLeft@mL
  9492  003002  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9493  003006  C0E2  F022         	movff	action@mR,turnLeft@mR
  9494  00300A  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9495  00300E  0E5A               	movlw	90
  9496  003010  6E24               	movwf	turnLeft@angle_left^0,c
  9497  003012  EC9D  F021         	call	_turnLeft	;wreg free
  9498  003016                     
  9499                           ;movement.c: 55:             memory[array_index] = 5;
  9500  003016  0103               	movlb	3	; () banked
  9501  003018  516B               	movf	_array_index& (0+255),w,b
  9502  00301A  0D02               	mullw	2
  9503  00301C  0E3C               	movlw	low _memory
  9504  00301E  24F3               	addwf	243,w,c
  9505  003020  6ED9               	movwf	fsr2l,c
  9506  003022  0E03               	movlw	high _memory
  9507  003024  20F4               	addwfc	prodh,w,c
  9508  003026  6EDA               	movwf	fsr2h,c
  9509  003028  0E05               	movlw	5
  9510  00302A  6EDE               	movwf	postinc2,c
  9511  00302C  0E00               	movlw	0
  9512  00302E  6EDD               	movwf	postdec2,c
  9513  003030                     
  9514                           ; BSR set to: 3
  9515                           ;movement.c: 56:             array_index++;
  9516  003030  2B6B               	incf	_array_index& (0+255),f,b
  9517  003032                     l5480:
  9518                           
  9519                           ;movement.c: 58:         if (color == 6){
  9520  003032  0E06               	movlw	6
  9521  003034  0102               	movlb	2	; () banked
  9522  003036  19C8               	xorwf	action@color& (0+255),w,b
  9523  003038  A4D8               	btfss	status,2,c
  9524  00303A  EF21  F018         	goto	u5491
  9525  00303E  EF23  F018         	goto	u5490
  9526  003042                     u5491:
  9527  003042  EF47  F018         	goto	l5488
  9528  003046                     u5490:
  9529  003046                     
  9530                           ; BSR set to: 2
  9531                           ;movement.c: 59:             short_reverse(mL,mR);
  9532  003046  C0E0  F026         	movff	action@mL,short_reverse@mL
  9533  00304A  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9534  00304E  C0E2  F028         	movff	action@mR,short_reverse@mR
  9535  003052  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9536  003056  ECCB  F02B         	call	_short_reverse	;wreg free
  9537                           
  9538                           ;movement.c: 60:             turnRight(mL,mR,135);
  9539  00305A  C0E0  F020         	movff	action@mL,turnRight@mL
  9540  00305E  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9541  003062  C0E2  F022         	movff	action@mR,turnRight@mR
  9542  003066  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9543  00306A  0E87               	movlw	135
  9544  00306C  6E24               	movwf	turnRight@angle_right^0,c
  9545  00306E  ECD6  F020         	call	_turnRight	;wreg free
  9546  003072                     
  9547                           ;movement.c: 61:             memory[array_index] = 6;
  9548  003072  0103               	movlb	3	; () banked
  9549  003074  516B               	movf	_array_index& (0+255),w,b
  9550  003076  0D02               	mullw	2
  9551  003078  0E3C               	movlw	low _memory
  9552  00307A  24F3               	addwf	243,w,c
  9553  00307C  6ED9               	movwf	fsr2l,c
  9554  00307E  0E03               	movlw	high _memory
  9555  003080  20F4               	addwfc	prodh,w,c
  9556  003082  6EDA               	movwf	fsr2h,c
  9557  003084  0E06               	movlw	6
  9558  003086  6EDE               	movwf	postinc2,c
  9559  003088  0E00               	movlw	0
  9560  00308A  6EDD               	movwf	postdec2,c
  9561  00308C                     
  9562                           ; BSR set to: 3
  9563                           ;movement.c: 62:             array_index++;
  9564  00308C  2B6B               	incf	_array_index& (0+255),f,b
  9565  00308E                     l5488:
  9566                           
  9567                           ;movement.c: 64:         if (color == 7){
  9568  00308E  0E07               	movlw	7
  9569  003090  0102               	movlb	2	; () banked
  9570  003092  19C8               	xorwf	action@color& (0+255),w,b
  9571  003094  A4D8               	btfss	status,2,c
  9572  003096  EF4F  F018         	goto	u5501
  9573  00309A  EF51  F018         	goto	u5500
  9574  00309E                     u5501:
  9575  00309E  EF75  F018         	goto	l5496
  9576  0030A2                     u5500:
  9577  0030A2                     
  9578                           ; BSR set to: 2
  9579                           ;movement.c: 65:             short_reverse(mL,mR);
  9580  0030A2  C0E0  F026         	movff	action@mL,short_reverse@mL
  9581  0030A6  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9582  0030AA  C0E2  F028         	movff	action@mR,short_reverse@mR
  9583  0030AE  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9584  0030B2  ECCB  F02B         	call	_short_reverse	;wreg free
  9585                           
  9586                           ;movement.c: 66:             turnLeft(mL,mR,135);
  9587  0030B6  C0E0  F020         	movff	action@mL,turnLeft@mL
  9588  0030BA  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9589  0030BE  C0E2  F022         	movff	action@mR,turnLeft@mR
  9590  0030C2  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9591  0030C6  0E87               	movlw	135
  9592  0030C8  6E24               	movwf	turnLeft@angle_left^0,c
  9593  0030CA  EC9D  F021         	call	_turnLeft	;wreg free
  9594  0030CE                     
  9595                           ;movement.c: 67:             memory[array_index] = 7;
  9596  0030CE  0103               	movlb	3	; () banked
  9597  0030D0  516B               	movf	_array_index& (0+255),w,b
  9598  0030D2  0D02               	mullw	2
  9599  0030D4  0E3C               	movlw	low _memory
  9600  0030D6  24F3               	addwf	243,w,c
  9601  0030D8  6ED9               	movwf	fsr2l,c
  9602  0030DA  0E03               	movlw	high _memory
  9603  0030DC  20F4               	addwfc	prodh,w,c
  9604  0030DE  6EDA               	movwf	fsr2h,c
  9605  0030E0  0E07               	movlw	7
  9606  0030E2  6EDE               	movwf	postinc2,c
  9607  0030E4  0E00               	movlw	0
  9608  0030E6  6EDD               	movwf	postdec2,c
  9609  0030E8                     
  9610                           ; BSR set to: 3
  9611                           ;movement.c: 68:             array_index++;
  9612  0030E8  2B6B               	incf	_array_index& (0+255),f,b
  9613  0030EA                     l5496:
  9614                           
  9615                           ;movement.c: 70:         if (color == 8){
  9616  0030EA  0E08               	movlw	8
  9617  0030EC  0102               	movlb	2	; () banked
  9618  0030EE  19C8               	xorwf	action@color& (0+255),w,b
  9619  0030F0  A4D8               	btfss	status,2,c
  9620  0030F2  EF7D  F018         	goto	u5511
  9621  0030F6  EF7F  F018         	goto	u5510
  9622  0030FA                     u5511:
  9623  0030FA  EF98  F018         	goto	l633
  9624  0030FE                     u5510:
  9625  0030FE                     
  9626                           ; BSR set to: 2
  9627                           ;movement.c: 71:             toggle_light(2,1);
  9628  0030FE  0E01               	movlw	1
  9629  003100  6E01               	movwf	toggle_light@toggletime^0,c
  9630  003102  0E02               	movlw	2
  9631  003104  EC0E  F01A         	call	_toggle_light
  9632  003108                     
  9633                           ;movement.c: 72:             short_reverse(mL,mR);
  9634  003108  C0E0  F026         	movff	action@mL,short_reverse@mL
  9635  00310C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9636  003110  C0E2  F028         	movff	action@mR,short_reverse@mR
  9637  003114  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9638  003118  ECCB  F02B         	call	_short_reverse	;wreg free
  9639  00311C                     
  9640                           ;movement.c: 73:             goback(mL,mR);
  9641  00311C  C0E0  F058         	movff	action@mL,goback@mL
  9642  003120  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9643  003124  C0E2  F05A         	movff	action@mR,goback@mR
  9644  003128  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9645  00312C  EC5F  F015         	call	_goback	;wreg free
  9646  003130                     l633:
  9647  003130  0012               	return		;funcret
  9648  003132                     __end_of_action:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function _toggle_light *****************
  9652 ;; Defined at:
  9653 ;;		line 29 in file "color.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  lightnumber     1    wreg     unsigned char 
  9656 ;;  toggletime      1    0[COMRAM] unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9659 ;;  i               1    3[COMRAM] unsigned char 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9669 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;Total ram usage:        5 bytes
  9674 ;; Hardware stack levels used: 1
  9675 ;; Hardware stack levels required when called: 1
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_calibrate_white
  9680 ;;		_detect_color
  9681 ;;		_amb_light_measure
  9682 ;;		_action
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text46
  9687  00341C                     __ptext46:
  9688                           	callstack 0
  9689  00341C                     _toggle_light:
  9690                           	callstack 27
  9691                           
  9692                           ;incstack = 0
  9693                           ;toggle_light@lightnumber stored from wreg
  9694  00341C  6E05               	movwf	toggle_light@lightnumber^0,c
  9695  00341E                     
  9696                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9697  00341E  0E00               	movlw	0
  9698  003420  6E04               	movwf	toggle_light@i^0,c
  9699                           
  9700                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9701  003422  0E00               	movlw	0
  9702  003424  6E04               	movwf	toggle_light@i^0,c
  9703  003426  EF5A  F01B         	goto	l74
  9704  00342A                     l4510:
  9705                           
  9706                           ;color.c: 34:         if (lightnumber == 1){
  9707  00342A  0405               	decf	toggle_light@lightnumber^0,w,c
  9708  00342C  A4D8               	btfss	status,2,c
  9709  00342E  EF1B  F01A         	goto	u4301
  9710  003432  EF1D  F01A         	goto	u4300
  9711  003436                     u4301:
  9712  003436  EF55  F01A         	goto	l4518
  9713  00343A                     u4300:
  9714  00343A                     
  9715                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9716  00343A  A280               	btfss	128,1,c	;volatile
  9717  00343C  EF22  F01A         	goto	u4311
  9718  003440  EF26  F01A         	goto	u4310
  9719  003444                     u4311:
  9720  003444  6A02               	clrf	??_toggle_light^0,c
  9721  003446  2A02               	incf	??_toggle_light^0,f,c
  9722  003448  EF27  F01A         	goto	u4328
  9723  00344C                     u4310:
  9724  00344C  6A02               	clrf	??_toggle_light^0,c
  9725  00344E                     u4328:
  9726  00344E  4602               	rlncf	??_toggle_light^0,f,c
  9727  003450  5080               	movf	128,w,c	;volatile
  9728  003452  1802               	xorwf	??_toggle_light^0,w,c
  9729  003454  0BFD               	andlw	-3
  9730  003456  1802               	xorwf	??_toggle_light^0,w,c
  9731  003458  6E80               	movwf	128,c	;volatile
  9732  00345A                     
  9733                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9734  00345A  0E29               	movlw	41
  9735  00345C  6E03               	movwf	(??_toggle_light+1)^0,c
  9736  00345E  0E96               	movlw	150
  9737  003460  6E02               	movwf	??_toggle_light^0,c
  9738  003462  0E7F               	movlw	127
  9739  003464                     u5967:
  9740  003464  2EE8               	decfsz	wreg,f,c
  9741  003466  D7FE               	bra	u5967
  9742  003468  2E02               	decfsz	??_toggle_light^0,f,c
  9743  00346A  D7FC               	bra	u5967
  9744  00346C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9745  00346E  D7FA               	bra	u5967
  9746  003470  F000               	nop	
  9747  003472                     
  9748                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9749  003472  A280               	btfss	128,1,c	;volatile
  9750  003474  EF3E  F01A         	goto	u4331
  9751  003478  EF42  F01A         	goto	u4330
  9752  00347C                     u4331:
  9753  00347C  6A02               	clrf	??_toggle_light^0,c
  9754  00347E  2A02               	incf	??_toggle_light^0,f,c
  9755  003480  EF43  F01A         	goto	u4348
  9756  003484                     u4330:
  9757  003484  6A02               	clrf	??_toggle_light^0,c
  9758  003486                     u4348:
  9759  003486  4602               	rlncf	??_toggle_light^0,f,c
  9760  003488  5080               	movf	128,w,c	;volatile
  9761  00348A  1802               	xorwf	??_toggle_light^0,w,c
  9762  00348C  0BFD               	andlw	-3
  9763  00348E  1802               	xorwf	??_toggle_light^0,w,c
  9764  003490  6E80               	movwf	128,c	;volatile
  9765                           
  9766                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9767  003492  0E29               	movlw	41
  9768  003494  6E03               	movwf	(??_toggle_light+1)^0,c
  9769  003496  0E96               	movlw	150
  9770  003498  6E02               	movwf	??_toggle_light^0,c
  9771  00349A  0E7F               	movlw	127
  9772  00349C                     u5977:
  9773  00349C  2EE8               	decfsz	wreg,f,c
  9774  00349E  D7FE               	bra	u5977
  9775  0034A0  2E02               	decfsz	??_toggle_light^0,f,c
  9776  0034A2  D7FC               	bra	u5977
  9777  0034A4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9778  0034A6  D7FA               	bra	u5977
  9779  0034A8  F000               	nop	
  9780  0034AA                     l4518:
  9781                           
  9782                           ;color.c: 40:         if (lightnumber == 2){
  9783  0034AA  0E02               	movlw	2
  9784  0034AC  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9785  0034AE  A4D8               	btfss	status,2,c
  9786  0034B0  EF5C  F01A         	goto	u4351
  9787  0034B4  EF5E  F01A         	goto	u4350
  9788  0034B8                     u4351:
  9789  0034B8  EF96  F01A         	goto	l4526
  9790  0034BC                     u4350:
  9791  0034BC                     
  9792                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9793  0034BC  A87C               	btfss	124,4,c	;volatile
  9794  0034BE  EF63  F01A         	goto	u4361
  9795  0034C2  EF67  F01A         	goto	u4360
  9796  0034C6                     u4361:
  9797  0034C6  6A02               	clrf	??_toggle_light^0,c
  9798  0034C8  2A02               	incf	??_toggle_light^0,f,c
  9799  0034CA  EF68  F01A         	goto	u4378
  9800  0034CE                     u4360:
  9801  0034CE  6A02               	clrf	??_toggle_light^0,c
  9802  0034D0                     u4378:
  9803  0034D0  3A02               	swapf	??_toggle_light^0,f,c
  9804  0034D2  507C               	movf	124,w,c	;volatile
  9805  0034D4  1802               	xorwf	??_toggle_light^0,w,c
  9806  0034D6  0BEF               	andlw	-17
  9807  0034D8  1802               	xorwf	??_toggle_light^0,w,c
  9808  0034DA  6E7C               	movwf	124,c	;volatile
  9809  0034DC                     
  9810                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9811  0034DC  0E29               	movlw	41
  9812  0034DE  6E03               	movwf	(??_toggle_light+1)^0,c
  9813  0034E0  0E96               	movlw	150
  9814  0034E2  6E02               	movwf	??_toggle_light^0,c
  9815  0034E4  0E7F               	movlw	127
  9816  0034E6                     u5987:
  9817  0034E6  2EE8               	decfsz	wreg,f,c
  9818  0034E8  D7FE               	bra	u5987
  9819  0034EA  2E02               	decfsz	??_toggle_light^0,f,c
  9820  0034EC  D7FC               	bra	u5987
  9821  0034EE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9822  0034F0  D7FA               	bra	u5987
  9823  0034F2  F000               	nop	
  9824  0034F4                     
  9825                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9826  0034F4  A87C               	btfss	124,4,c	;volatile
  9827  0034F6  EF7F  F01A         	goto	u4381
  9828  0034FA  EF83  F01A         	goto	u4380
  9829  0034FE                     u4381:
  9830  0034FE  6A02               	clrf	??_toggle_light^0,c
  9831  003500  2A02               	incf	??_toggle_light^0,f,c
  9832  003502  EF84  F01A         	goto	u4398
  9833  003506                     u4380:
  9834  003506  6A02               	clrf	??_toggle_light^0,c
  9835  003508                     u4398:
  9836  003508  3A02               	swapf	??_toggle_light^0,f,c
  9837  00350A  507C               	movf	124,w,c	;volatile
  9838  00350C  1802               	xorwf	??_toggle_light^0,w,c
  9839  00350E  0BEF               	andlw	-17
  9840  003510  1802               	xorwf	??_toggle_light^0,w,c
  9841  003512  6E7C               	movwf	124,c	;volatile
  9842                           
  9843                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9844  003514  0E29               	movlw	41
  9845  003516  6E03               	movwf	(??_toggle_light+1)^0,c
  9846  003518  0E96               	movlw	150
  9847  00351A  6E02               	movwf	??_toggle_light^0,c
  9848  00351C  0E7F               	movlw	127
  9849  00351E                     u5997:
  9850  00351E  2EE8               	decfsz	wreg,f,c
  9851  003520  D7FE               	bra	u5997
  9852  003522  2E02               	decfsz	??_toggle_light^0,f,c
  9853  003524  D7FC               	bra	u5997
  9854  003526  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9855  003528  D7FA               	bra	u5997
  9856  00352A  F000               	nop	
  9857  00352C                     l4526:
  9858                           
  9859                           ;color.c: 46:         if (lightnumber == 3){
  9860  00352C  0E03               	movlw	3
  9861  00352E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9862  003530  A4D8               	btfss	status,2,c
  9863  003532  EF9D  F01A         	goto	u4401
  9864  003536  EF9F  F01A         	goto	u4400
  9865  00353A                     u4401:
  9866  00353A  EFDB  F01A         	goto	l4534
  9867  00353E                     u4400:
  9868  00353E                     
  9869                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9870  00353E  A67C               	btfss	124,3,c	;volatile
  9871  003540  EFA4  F01A         	goto	u4411
  9872  003544  EFA8  F01A         	goto	u4410
  9873  003548                     u4411:
  9874  003548  6A02               	clrf	??_toggle_light^0,c
  9875  00354A  2A02               	incf	??_toggle_light^0,f,c
  9876  00354C  EFA9  F01A         	goto	u4428
  9877  003550                     u4410:
  9878  003550  6A02               	clrf	??_toggle_light^0,c
  9879  003552                     u4428:
  9880  003552  4602               	rlncf	??_toggle_light^0,f,c
  9881  003554  4602               	rlncf	??_toggle_light^0,f,c
  9882  003556  4602               	rlncf	??_toggle_light^0,f,c
  9883  003558  507C               	movf	124,w,c	;volatile
  9884  00355A  1802               	xorwf	??_toggle_light^0,w,c
  9885  00355C  0BF7               	andlw	-9
  9886  00355E  1802               	xorwf	??_toggle_light^0,w,c
  9887  003560  6E7C               	movwf	124,c	;volatile
  9888  003562                     
  9889                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9890  003562  0E29               	movlw	41
  9891  003564  6E03               	movwf	(??_toggle_light+1)^0,c
  9892  003566  0E96               	movlw	150
  9893  003568  6E02               	movwf	??_toggle_light^0,c
  9894  00356A  0E7F               	movlw	127
  9895  00356C                     u6007:
  9896  00356C  2EE8               	decfsz	wreg,f,c
  9897  00356E  D7FE               	bra	u6007
  9898  003570  2E02               	decfsz	??_toggle_light^0,f,c
  9899  003572  D7FC               	bra	u6007
  9900  003574  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9901  003576  D7FA               	bra	u6007
  9902  003578  F000               	nop	
  9903  00357A                     
  9904                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9905  00357A  A67C               	btfss	124,3,c	;volatile
  9906  00357C  EFC2  F01A         	goto	u4431
  9907  003580  EFC6  F01A         	goto	u4430
  9908  003584                     u4431:
  9909  003584  6A02               	clrf	??_toggle_light^0,c
  9910  003586  2A02               	incf	??_toggle_light^0,f,c
  9911  003588  EFC7  F01A         	goto	u4448
  9912  00358C                     u4430:
  9913  00358C  6A02               	clrf	??_toggle_light^0,c
  9914  00358E                     u4448:
  9915  00358E  4602               	rlncf	??_toggle_light^0,f,c
  9916  003590  4602               	rlncf	??_toggle_light^0,f,c
  9917  003592  4602               	rlncf	??_toggle_light^0,f,c
  9918  003594  507C               	movf	124,w,c	;volatile
  9919  003596  1802               	xorwf	??_toggle_light^0,w,c
  9920  003598  0BF7               	andlw	-9
  9921  00359A  1802               	xorwf	??_toggle_light^0,w,c
  9922  00359C  6E7C               	movwf	124,c	;volatile
  9923                           
  9924                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9925  00359E  0E29               	movlw	41
  9926  0035A0  6E03               	movwf	(??_toggle_light+1)^0,c
  9927  0035A2  0E96               	movlw	150
  9928  0035A4  6E02               	movwf	??_toggle_light^0,c
  9929  0035A6  0E7F               	movlw	127
  9930  0035A8                     u6017:
  9931  0035A8  2EE8               	decfsz	wreg,f,c
  9932  0035AA  D7FE               	bra	u6017
  9933  0035AC  2E02               	decfsz	??_toggle_light^0,f,c
  9934  0035AE  D7FC               	bra	u6017
  9935  0035B0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9936  0035B2  D7FA               	bra	u6017
  9937  0035B4  F000               	nop	
  9938  0035B6                     l4534:
  9939                           
  9940                           ;color.c: 52:         if (lightnumber == 4){
  9941  0035B6  0E04               	movlw	4
  9942  0035B8  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9943  0035BA  A4D8               	btfss	status,2,c
  9944  0035BC  EFE2  F01A         	goto	u4451
  9945  0035C0  EFE4  F01A         	goto	u4450
  9946  0035C4                     u4451:
  9947  0035C4  EF1A  F01B         	goto	l4542
  9948  0035C8                     u4450:
  9949  0035C8                     
  9950                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9951  0035C8  A07E               	btfss	126,0,c	;volatile
  9952  0035CA  EFE9  F01A         	goto	u4461
  9953  0035CE  EFED  F01A         	goto	u4460
  9954  0035D2                     u4461:
  9955  0035D2  6A02               	clrf	??_toggle_light^0,c
  9956  0035D4  2A02               	incf	??_toggle_light^0,f,c
  9957  0035D6  EFEE  F01A         	goto	u4478
  9958  0035DA                     u4460:
  9959  0035DA  6A02               	clrf	??_toggle_light^0,c
  9960  0035DC                     u4478:
  9961  0035DC  507E               	movf	126,w,c	;volatile
  9962  0035DE  1802               	xorwf	??_toggle_light^0,w,c
  9963  0035E0  0BFE               	andlw	-2
  9964  0035E2  1802               	xorwf	??_toggle_light^0,w,c
  9965  0035E4  6E7E               	movwf	126,c	;volatile
  9966  0035E6                     
  9967                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9968  0035E6  0E29               	movlw	41
  9969  0035E8  6E03               	movwf	(??_toggle_light+1)^0,c
  9970  0035EA  0E96               	movlw	150
  9971  0035EC  6E02               	movwf	??_toggle_light^0,c
  9972  0035EE  0E7F               	movlw	127
  9973  0035F0                     u6027:
  9974  0035F0  2EE8               	decfsz	wreg,f,c
  9975  0035F2  D7FE               	bra	u6027
  9976  0035F4  2E02               	decfsz	??_toggle_light^0,f,c
  9977  0035F6  D7FC               	bra	u6027
  9978  0035F8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9979  0035FA  D7FA               	bra	u6027
  9980  0035FC  F000               	nop	
  9981  0035FE                     
  9982                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9983  0035FE  A07E               	btfss	126,0,c	;volatile
  9984  003600  EF04  F01B         	goto	u4481
  9985  003604  EF08  F01B         	goto	u4480
  9986  003608                     u4481:
  9987  003608  6A02               	clrf	??_toggle_light^0,c
  9988  00360A  2A02               	incf	??_toggle_light^0,f,c
  9989  00360C  EF09  F01B         	goto	u4498
  9990  003610                     u4480:
  9991  003610  6A02               	clrf	??_toggle_light^0,c
  9992  003612                     u4498:
  9993  003612  507E               	movf	126,w,c	;volatile
  9994  003614  1802               	xorwf	??_toggle_light^0,w,c
  9995  003616  0BFE               	andlw	-2
  9996  003618  1802               	xorwf	??_toggle_light^0,w,c
  9997  00361A  6E7E               	movwf	126,c	;volatile
  9998                           
  9999                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10000  00361C  0E29               	movlw	41
 10001  00361E  6E03               	movwf	(??_toggle_light+1)^0,c
 10002  003620  0E96               	movlw	150
 10003  003622  6E02               	movwf	??_toggle_light^0,c
 10004  003624  0E7F               	movlw	127
 10005  003626                     u6037:
 10006  003626  2EE8               	decfsz	wreg,f,c
 10007  003628  D7FE               	bra	u6037
 10008  00362A  2E02               	decfsz	??_toggle_light^0,f,c
 10009  00362C  D7FC               	bra	u6037
 10010  00362E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10011  003630  D7FA               	bra	u6037
 10012  003632  F000               	nop	
 10013  003634                     l4542:
 10014                           
 10015                           ;color.c: 58:         if (lightnumber == 3){
 10016  003634  0E03               	movlw	3
 10017  003636  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10018  003638  A4D8               	btfss	status,2,c
 10019  00363A  EF21  F01B         	goto	u4501
 10020  00363E  EF23  F01B         	goto	u4500
 10021  003642                     u4501:
 10022  003642  EF59  F01B         	goto	l4550
 10023  003646                     u4500:
 10024  003646                     
 10025                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 10026  003646  A080               	btfss	128,0,c	;volatile
 10027  003648  EF28  F01B         	goto	u4511
 10028  00364C  EF2C  F01B         	goto	u4510
 10029  003650                     u4511:
 10030  003650  6A02               	clrf	??_toggle_light^0,c
 10031  003652  2A02               	incf	??_toggle_light^0,f,c
 10032  003654  EF2D  F01B         	goto	u4528
 10033  003658                     u4510:
 10034  003658  6A02               	clrf	??_toggle_light^0,c
 10035  00365A                     u4528:
 10036  00365A  5080               	movf	128,w,c	;volatile
 10037  00365C  1802               	xorwf	??_toggle_light^0,w,c
 10038  00365E  0BFE               	andlw	-2
 10039  003660  1802               	xorwf	??_toggle_light^0,w,c
 10040  003662  6E80               	movwf	128,c	;volatile
 10041  003664                     
 10042                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10043  003664  0E29               	movlw	41
 10044  003666  6E03               	movwf	(??_toggle_light+1)^0,c
 10045  003668  0E96               	movlw	150
 10046  00366A  6E02               	movwf	??_toggle_light^0,c
 10047  00366C  0E7F               	movlw	127
 10048  00366E                     u6047:
 10049  00366E  2EE8               	decfsz	wreg,f,c
 10050  003670  D7FE               	bra	u6047
 10051  003672  2E02               	decfsz	??_toggle_light^0,f,c
 10052  003674  D7FC               	bra	u6047
 10053  003676  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10054  003678  D7FA               	bra	u6047
 10055  00367A  F000               	nop	
 10056  00367C                     
 10057                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 10058  00367C  A080               	btfss	128,0,c	;volatile
 10059  00367E  EF43  F01B         	goto	u4531
 10060  003682  EF47  F01B         	goto	u4530
 10061  003686                     u4531:
 10062  003686  6A02               	clrf	??_toggle_light^0,c
 10063  003688  2A02               	incf	??_toggle_light^0,f,c
 10064  00368A  EF48  F01B         	goto	u4548
 10065  00368E                     u4530:
 10066  00368E  6A02               	clrf	??_toggle_light^0,c
 10067  003690                     u4548:
 10068  003690  5080               	movf	128,w,c	;volatile
 10069  003692  1802               	xorwf	??_toggle_light^0,w,c
 10070  003694  0BFE               	andlw	-2
 10071  003696  1802               	xorwf	??_toggle_light^0,w,c
 10072  003698  6E80               	movwf	128,c	;volatile
 10073                           
 10074                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10075  00369A  0E29               	movlw	41
 10076  00369C  6E03               	movwf	(??_toggle_light+1)^0,c
 10077  00369E  0E96               	movlw	150
 10078  0036A0  6E02               	movwf	??_toggle_light^0,c
 10079  0036A2  0E7F               	movlw	127
 10080  0036A4                     u6057:
 10081  0036A4  2EE8               	decfsz	wreg,f,c
 10082  0036A6  D7FE               	bra	u6057
 10083  0036A8  2E02               	decfsz	??_toggle_light^0,f,c
 10084  0036AA  D7FC               	bra	u6057
 10085  0036AC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10086  0036AE  D7FA               	bra	u6057
 10087  0036B0  F000               	nop	
 10088  0036B2                     l4550:
 10089                           
 10090                           ;color.c: 64:     }
 10091  0036B2  2A04               	incf	toggle_light@i^0,f,c
 10092  0036B4                     l74:
 10093  0036B4  5001               	movf	toggle_light@toggletime^0,w,c
 10094  0036B6  5C04               	subwf	toggle_light@i^0,w,c
 10095  0036B8  A0D8               	btfss	status,0,c
 10096  0036BA  EF61  F01B         	goto	u4551
 10097  0036BE  EF63  F01B         	goto	u4550
 10098  0036C2                     u4551:
 10099  0036C2  EF15  F01A         	goto	l4510
 10100  0036C6                     u4550:
 10101  0036C6  0012               	return		;funcret
 10102  0036C8                     __end_of_toggle_light:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function _short_reverse *****************
 10106 ;; Defined at:
 10107 ;;		line 183 in file "dc_motor.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10110 ;;		 -> main@motorL(10), 
 10111 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10112 ;;		 -> main@motorR(10), 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;Total ram usage:        6 bytes
 10129 ;; Hardware stack levels used: 1
 10130 ;; Hardware stack levels required when called: 5
 10131 ;; This function calls:
 10132 ;;		_fullSpeedBack
 10133 ;;		_stop
 10134 ;; This function is called by:
 10135 ;;		_action
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text47
 10140  005796                     __ptext47:
 10141                           	callstack 0
 10142  005796                     _short_reverse:
 10143                           	callstack 24
 10144  005796                     
 10145                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 10146  005796  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10147  00579A  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10148  00579E  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10149  0057A2  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10150  0057A6  EC2F  F028         	call	_fullSpeedBack	;wreg free
 10151  0057AA                     
 10152                           ;dc_motor.c: 185:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10153  0057AA  0E19               	movlw	25
 10154  0057AC  6E2B               	movwf	(??_short_reverse+1)^0,c
 10155  0057AE  0E5A               	movlw	90
 10156  0057B0  6E2A               	movwf	??_short_reverse^0,c
 10157  0057B2  0EB2               	movlw	178
 10158  0057B4                     u6067:
 10159  0057B4  2EE8               	decfsz	wreg,f,c
 10160  0057B6  D7FE               	bra	u6067
 10161  0057B8  2E2A               	decfsz	??_short_reverse^0,f,c
 10162  0057BA  D7FC               	bra	u6067
 10163  0057BC  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10164  0057BE  D7FA               	bra	u6067
 10165  0057C0                     
 10166                           ;dc_motor.c: 186:     stop(mL,mR);
 10167  0057C0  C026  F01A         	movff	short_reverse@mL,stop@mL
 10168  0057C4  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10169  0057C8  C028  F01C         	movff	short_reverse@mR,stop@mR
 10170  0057CC  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10171  0057D0  EC8F  F028         	call	_stop	;wreg free
 10172  0057D4  0012               	return		;funcret
 10173  0057D6                     __end_of_short_reverse:
 10174                           	callstack 0
 10175                           
 10176 ;; *************** function _goback *****************
 10177 ;; Defined at:
 10178 ;;		line 123 in file "movement.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  mL              2   87[COMRAM] PTR struct DC_motor
 10181 ;;		 -> main@motorL(10), 
 10182 ;;  mR              2   89[COMRAM] PTR struct DC_motor
 10183 ;;		 -> main@motorR(10), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  i               2  126[BANK0 ] unsigned int 
 10186 ;;  buf3          100  100[BANK1 ] unsigned char [100]
 10187 ;;  buf2          100    0[BANK2 ] unsigned char [100]
 10188 ;;  buf           100    0[BANK1 ] unsigned char [100]
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1    wreg      void 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;      Locals:         0       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10201 ;;      Totals:         6       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10202 ;;Total ram usage:      308 bytes
 10203 ;; Hardware stack levels used: 1
 10204 ;; Hardware stack levels required when called: 10
 10205 ;; This function calls:
 10206 ;;		_color_predict
 10207 ;;		_fullSpeedAhead
 10208 ;;		_reverse_square
 10209 ;;		_sendStringSerial4
 10210 ;;		_sprintf
 10211 ;;		_stop
 10212 ;;		_turnLeft
 10213 ;;		_turnRight
 10214 ;; This function is called by:
 10215 ;;		_action
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text48
 10220  002ABE                     __ptext48:
 10221                           	callstack 0
 10222  002ABE                     _goback:
 10223                           	callstack 19
 10224  002ABE                     
 10225                           ;movement.c: 123: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 124:
      +                           { turnRight(mL,mR,180);
 10226  002ABE  C058  F020         	movff	goback@mL,turnRight@mL
 10227  002AC2  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10228  002AC6  C05A  F022         	movff	goback@mR,turnRight@mR
 10229  002ACA  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10230  002ACE  0EB4               	movlw	180
 10231  002AD0  6E24               	movwf	turnRight@angle_right^0,c
 10232  002AD2  ECD6  F020         	call	_turnRight	;wreg free
 10233  002AD6                     
 10234                           ;movement.c: 125:     array_index--;
 10235  002AD6  0103               	movlb	3	; () banked
 10236  002AD8  076B               	decf	_array_index& (0+255),f,b
 10237  002ADA                     
 10238                           ; BSR set to: 3
 10239                           ;movement.c: 126:     char buf[100];;movement.c: 127:     sprintf(buf,"go back\r\n");
 10240  002ADA  0E00               	movlw	low goback@buf
 10241  002ADC  0100               	movlb	0	; () banked
 10242  002ADE  6F60               	movwf	sprintf@s& (0+255),b
 10243  002AE0  0E01               	movlw	high goback@buf
 10244  002AE2  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10245  002AE4  0E31               	movlw	low STR_4
 10246  002AE6  6F62               	movwf	sprintf@fmt& (0+255),b
 10247  002AE8  0E0E               	movlw	high STR_4
 10248  002AEA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10249  002AEC  EC7B  F02A         	call	_sprintf	;wreg free
 10250  002AF0                     
 10251                           ;movement.c: 128:     sendStringSerial4(buf);
 10252  002AF0  0E00               	movlw	low goback@buf
 10253  002AF2  6E02               	movwf	sendStringSerial4@string^0,c
 10254  002AF4  0E01               	movlw	high goback@buf
 10255  002AF6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10256  002AF8  ECB6  F02C         	call	_sendStringSerial4	;wreg free
 10257  002AFC                     l5212:
 10258                           
 10259                           ;movement.c: 130:         char buf3[100];;movement.c: 131:         sprintf(buf3,"repeat\
      +                          r\n");
 10260  002AFC  0E64               	movlw	low goback@buf3
 10261  002AFE  0100               	movlb	0	; () banked
 10262  002B00  6F60               	movwf	sprintf@s& (0+255),b
 10263  002B02  0E01               	movlw	high goback@buf3
 10264  002B04  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10265  002B06  0E3B               	movlw	low STR_5
 10266  002B08  6F62               	movwf	sprintf@fmt& (0+255),b
 10267  002B0A  0E0E               	movlw	high STR_5
 10268  002B0C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10269  002B0E  EC7B  F02A         	call	_sprintf	;wreg free
 10270  002B12                     
 10271                           ;movement.c: 132:         sendStringSerial4(buf3);
 10272  002B12  0E64               	movlw	low goback@buf3
 10273  002B14  6E02               	movwf	sendStringSerial4@string^0,c
 10274  002B16  0E01               	movlw	high goback@buf3
 10275  002B18  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10276  002B1A  ECB6  F02C         	call	_sendStringSerial4	;wreg free
 10277  002B1E                     
 10278                           ;movement.c: 133:         color_predict(array_index);
 10279  002B1E  0103               	movlb	3	; () banked
 10280  002B20  516B               	movf	_array_index& (0+255),w,b
 10281  002B22  ECCE  F02C         	call	_color_predict
 10282  002B26                     
 10283                           ;movement.c: 134:         color_predict(memory[array_index]);
 10284  002B26  0103               	movlb	3	; () banked
 10285  002B28  516B               	movf	_array_index& (0+255),w,b
 10286  002B2A  0D02               	mullw	2
 10287  002B2C  0E3C               	movlw	low _memory
 10288  002B2E  24F3               	addwf	243,w,c
 10289  002B30  6ED9               	movwf	fsr2l,c
 10290  002B32  0E03               	movlw	high _memory
 10291  002B34  20F4               	addwfc	prodh,w,c
 10292  002B36  6EDA               	movwf	fsr2h,c
 10293  002B38  50DF               	movf	indf2,w,c
 10294  002B3A  ECCE  F02C         	call	_color_predict
 10295  002B3E                     
 10296                           ;movement.c: 135:         color_predict(200);
 10297  002B3E  0EC8               	movlw	200
 10298  002B40  ECCE  F02C         	call	_color_predict
 10299  002B44                     
 10300                           ;movement.c: 136:         fullSpeedAhead(mL,mR);
 10301  002B44  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10302  002B48  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10303  002B4C  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10304  002B50  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10305  002B54  ECED  F028         	call	_fullSpeedAhead	;wreg free
 10306  002B58                     
 10307                           ;movement.c: 137:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10308  002B58  0E00               	movlw	0
 10309  002B5A  0100               	movlb	0	; () banked
 10310  002B5C  6FDF               	movwf	(goback@i+1)& (0+255),b
 10311  002B5E  0E00               	movlw	0
 10312  002B60  6FDE               	movwf	goback@i& (0+255),b
 10313  002B62  EFC2  F015         	goto	l5230
 10314  002B66                     l5226:
 10315                           
 10316                           ; BSR set to: 0
 10317  002B66  0E52               	movlw	82
 10318  002B68  6E5D               	movwf	(??_goback+1)^0,c
 10319  002B6A  0E2B               	movlw	43
 10320  002B6C  6E5C               	movwf	??_goback^0,c
 10321  002B6E  0E00               	movlw	0
 10322  002B70                     u6077:
 10323  002B70  2EE8               	decfsz	wreg,f,c
 10324  002B72  D7FE               	bra	u6077
 10325  002B74  2E5C               	decfsz	??_goback^0,f,c
 10326  002B76  D7FC               	bra	u6077
 10327  002B78  2E5D               	decfsz	(??_goback+1)^0,f,c
 10328  002B7A  D7FA               	bra	u6077
 10329  002B7C  D000               	nop2	
 10330  002B7E  0100               	movlb	0	; () banked
 10331  002B80  4BDE               	infsnz	goback@i& (0+255),f,b
 10332  002B82  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10333  002B84                     l5230:
 10334                           
 10335                           ; BSR set to: 0
 10336  002B84  0103               	movlb	3	; () banked
 10337  002B86  516B               	movf	_array_index& (0+255),w,b
 10338  002B88  0D02               	mullw	2
 10339  002B8A  0E3C               	movlw	low _memory
 10340  002B8C  24F3               	addwf	243,w,c
 10341  002B8E  6ED9               	movwf	fsr2l,c
 10342  002B90  0E03               	movlw	high _memory
 10343  002B92  20F4               	addwfc	prodh,w,c
 10344  002B94  6EDA               	movwf	fsr2h,c
 10345  002B96  50DE               	movf	postinc2,w,c
 10346  002B98  0100               	movlb	0	; () banked
 10347  002B9A  5DDE               	subwf	goback@i& (0+255),w,b
 10348  002B9C  50DE               	movf	postinc2,w,c
 10349  002B9E  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10350  002BA0  A0D8               	btfss	status,0,c
 10351  002BA2  EFD5  F015         	goto	u5231
 10352  002BA6  EFD7  F015         	goto	u5230
 10353  002BAA                     u5231:
 10354  002BAA  EFB3  F015         	goto	l5226
 10355  002BAE                     u5230:
 10356  002BAE                     
 10357                           ; BSR set to: 0
 10358                           ;movement.c: 138:         stop(mL,mR);
 10359  002BAE  C058  F01A         	movff	goback@mL,stop@mL
 10360  002BB2  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10361  002BB6  C05A  F01C         	movff	goback@mR,stop@mR
 10362  002BBA  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10363  002BBE  EC8F  F028         	call	_stop	;wreg free
 10364  002BC2                     
 10365                           ;movement.c: 139:         if (array_index == 0){break;}
 10366  002BC2  0103               	movlb	3	; () banked
 10367  002BC4  516B               	movf	_array_index& (0+255),w,b
 10368  002BC6  A4D8               	btfss	status,2,c
 10369  002BC8  EFE8  F015         	goto	u5241
 10370  002BCC  EFEA  F015         	goto	u5240
 10371  002BD0                     u5241:
 10372  002BD0  EFEC  F015         	goto	l5238
 10373  002BD4                     u5240:
 10374  002BD4  EFF7  F016         	goto	l5288
 10375  002BD8                     l5238:
 10376                           
 10377                           ; BSR set to: 3
 10378                           ;movement.c: 140:         array_index--;
 10379  002BD8  076B               	decf	_array_index& (0+255),f,b
 10380  002BDA                     
 10381                           ; BSR set to: 3
 10382                           ;movement.c: 141:         color_predict(array_index);
 10383  002BDA  516B               	movf	_array_index& (0+255),w,b
 10384  002BDC  ECCE  F02C         	call	_color_predict
 10385  002BE0                     
 10386                           ;movement.c: 142:         color_predict(memory[array_index]);
 10387  002BE0  0103               	movlb	3	; () banked
 10388  002BE2  516B               	movf	_array_index& (0+255),w,b
 10389  002BE4  0D02               	mullw	2
 10390  002BE6  0E3C               	movlw	low _memory
 10391  002BE8  24F3               	addwf	243,w,c
 10392  002BEA  6ED9               	movwf	fsr2l,c
 10393  002BEC  0E03               	movlw	high _memory
 10394  002BEE  20F4               	addwfc	prodh,w,c
 10395  002BF0  6EDA               	movwf	fsr2h,c
 10396  002BF2  50DF               	movf	indf2,w,c
 10397  002BF4  ECCE  F02C         	call	_color_predict
 10398  002BF8                     
 10399                           ;movement.c: 143:         color_predict(200);
 10400  002BF8  0EC8               	movlw	200
 10401  002BFA  ECCE  F02C         	call	_color_predict
 10402  002BFE                     
 10403                           ;movement.c: 144:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10404  002BFE  0103               	movlb	3	; () banked
 10405  002C00  516B               	movf	_array_index& (0+255),w,b
 10406  002C02  0D02               	mullw	2
 10407  002C04  0E3C               	movlw	low _memory
 10408  002C06  24F3               	addwf	243,w,c
 10409  002C08  6ED9               	movwf	fsr2l,c
 10410  002C0A  0E03               	movlw	high _memory
 10411  002C0C  20F4               	addwfc	prodh,w,c
 10412  002C0E  6EDA               	movwf	fsr2h,c
 10413  002C10  04DE               	decf	postinc2,w,c
 10414  002C12  10DE               	iorwf	postinc2,w,c
 10415  002C14  A4D8               	btfss	status,2,c
 10416  002C16  EF0F  F016         	goto	u5251
 10417  002C1A  EF11  F016         	goto	u5250
 10418  002C1E                     u5251:
 10419  002C1E  EF21  F016         	goto	l5252
 10420  002C22                     u5250:
 10421  002C22                     
 10422                           ; BSR set to: 3
 10423  002C22  C058  F020         	movff	goback@mL,turnLeft@mL
 10424  002C26  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10425  002C2A  C05A  F022         	movff	goback@mR,turnLeft@mR
 10426  002C2E  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10427  002C32  0E5A               	movlw	90
 10428  002C34  6E24               	movwf	turnLeft@angle_left^0,c
 10429  002C36  EC9D  F021         	call	_turnLeft	;wreg free
 10430  002C3A                     l5250:
 10431  002C3A  0103               	movlb	3	; () banked
 10432  002C3C  076B               	decf	_array_index& (0+255),f,b
 10433  002C3E  EF7E  F015         	goto	l5212
 10434  002C42                     l5252:
 10435                           
 10436                           ; BSR set to: 3
 10437  002C42  516B               	movf	_array_index& (0+255),w,b
 10438  002C44  0D02               	mullw	2
 10439  002C46  0E3C               	movlw	low _memory
 10440  002C48  24F3               	addwf	243,w,c
 10441  002C4A  6ED9               	movwf	fsr2l,c
 10442  002C4C  0E03               	movlw	high _memory
 10443  002C4E  20F4               	addwfc	prodh,w,c
 10444  002C50  6EDA               	movwf	fsr2h,c
 10445  002C52  0E02               	movlw	2
 10446  002C54  18DE               	xorwf	postinc2,w,c
 10447  002C56  10DE               	iorwf	postinc2,w,c
 10448  002C58  A4D8               	btfss	status,2,c
 10449  002C5A  EF31  F016         	goto	u5261
 10450  002C5E  EF33  F016         	goto	u5260
 10451  002C62                     u5261:
 10452  002C62  EF41  F016         	goto	l5258
 10453  002C66                     u5260:
 10454  002C66                     
 10455                           ; BSR set to: 3
 10456  002C66  C058  F020         	movff	goback@mL,turnRight@mL
 10457  002C6A  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10458  002C6E  C05A  F022         	movff	goback@mR,turnRight@mR
 10459  002C72  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10460  002C76  0E5A               	movlw	90
 10461  002C78  6E24               	movwf	turnRight@angle_right^0,c
 10462  002C7A  ECD6  F020         	call	_turnRight	;wreg free
 10463  002C7E  EF1D  F016         	goto	l5250
 10464  002C82                     l5258:
 10465                           
 10466                           ; BSR set to: 3
 10467  002C82  516B               	movf	_array_index& (0+255),w,b
 10468  002C84  0D02               	mullw	2
 10469  002C86  0E3C               	movlw	low _memory
 10470  002C88  24F3               	addwf	243,w,c
 10471  002C8A  6ED9               	movwf	fsr2l,c
 10472  002C8C  0E03               	movlw	high _memory
 10473  002C8E  20F4               	addwfc	prodh,w,c
 10474  002C90  6EDA               	movwf	fsr2h,c
 10475  002C92  0E03               	movlw	3
 10476  002C94  18DE               	xorwf	postinc2,w,c
 10477  002C96  10DE               	iorwf	postinc2,w,c
 10478  002C98  A4D8               	btfss	status,2,c
 10479  002C9A  EF51  F016         	goto	u5271
 10480  002C9E  EF53  F016         	goto	u5270
 10481  002CA2                     u5271:
 10482  002CA2  EF61  F016         	goto	l5264
 10483  002CA6                     u5270:
 10484  002CA6                     
 10485                           ; BSR set to: 3
 10486  002CA6  C058  F020         	movff	goback@mL,turnLeft@mL
 10487  002CAA  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10488  002CAE  C05A  F022         	movff	goback@mR,turnLeft@mR
 10489  002CB2  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10490  002CB6  0EB4               	movlw	180
 10491  002CB8  6E24               	movwf	turnLeft@angle_left^0,c
 10492  002CBA  EC9D  F021         	call	_turnLeft	;wreg free
 10493  002CBE  EF1D  F016         	goto	l5250
 10494  002CC2                     l5264:
 10495                           
 10496                           ; BSR set to: 3
 10497  002CC2  516B               	movf	_array_index& (0+255),w,b
 10498  002CC4  0D02               	mullw	2
 10499  002CC6  0E3C               	movlw	low _memory
 10500  002CC8  24F3               	addwf	243,w,c
 10501  002CCA  6ED9               	movwf	fsr2l,c
 10502  002CCC  0E03               	movlw	high _memory
 10503  002CCE  20F4               	addwfc	prodh,w,c
 10504  002CD0  6EDA               	movwf	fsr2h,c
 10505  002CD2  0E04               	movlw	4
 10506  002CD4  18DE               	xorwf	postinc2,w,c
 10507  002CD6  10DE               	iorwf	postinc2,w,c
 10508  002CD8  A4D8               	btfss	status,2,c
 10509  002CDA  EF71  F016         	goto	u5281
 10510  002CDE  EF73  F016         	goto	u5280
 10511  002CE2                     u5281:
 10512  002CE2  EF8B  F016         	goto	l5270
 10513  002CE6                     u5280:
 10514  002CE6                     
 10515                           ; BSR set to: 3
 10516  002CE6  C058  F026         	movff	goback@mL,reverse_square@mL
 10517  002CEA  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10518  002CEE  C05A  F028         	movff	goback@mR,reverse_square@mR
 10519  002CF2  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10520  002CF6  ECEB  F02B         	call	_reverse_square	;wreg free
 10521  002CFA  C058  F020         	movff	goback@mL,turnLeft@mL
 10522  002CFE  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10523  002D02  C05A  F022         	movff	goback@mR,turnLeft@mR
 10524  002D06  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10525  002D0A  0E5A               	movlw	90
 10526  002D0C  6E24               	movwf	turnLeft@angle_left^0,c
 10527  002D0E  EC9D  F021         	call	_turnLeft	;wreg free
 10528  002D12  EF1D  F016         	goto	l5250
 10529  002D16                     l5270:
 10530                           
 10531                           ; BSR set to: 3
 10532  002D16  516B               	movf	_array_index& (0+255),w,b
 10533  002D18  0D02               	mullw	2
 10534  002D1A  0E3C               	movlw	low _memory
 10535  002D1C  24F3               	addwf	243,w,c
 10536  002D1E  6ED9               	movwf	fsr2l,c
 10537  002D20  0E03               	movlw	high _memory
 10538  002D22  20F4               	addwfc	prodh,w,c
 10539  002D24  6EDA               	movwf	fsr2h,c
 10540  002D26  0E05               	movlw	5
 10541  002D28  18DE               	xorwf	postinc2,w,c
 10542  002D2A  10DE               	iorwf	postinc2,w,c
 10543  002D2C  A4D8               	btfss	status,2,c
 10544  002D2E  EF9B  F016         	goto	u5291
 10545  002D32  EF9D  F016         	goto	u5290
 10546  002D36                     u5291:
 10547  002D36  EFB5  F016         	goto	l5276
 10548  002D3A                     u5290:
 10549  002D3A                     
 10550                           ; BSR set to: 3
 10551  002D3A  C058  F026         	movff	goback@mL,reverse_square@mL
 10552  002D3E  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10553  002D42  C05A  F028         	movff	goback@mR,reverse_square@mR
 10554  002D46  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10555  002D4A  ECEB  F02B         	call	_reverse_square	;wreg free
 10556  002D4E  C058  F020         	movff	goback@mL,turnRight@mL
 10557  002D52  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10558  002D56  C05A  F022         	movff	goback@mR,turnRight@mR
 10559  002D5A  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10560  002D5E  0E5A               	movlw	90
 10561  002D60  6E24               	movwf	turnRight@angle_right^0,c
 10562  002D62  ECD6  F020         	call	_turnRight	;wreg free
 10563  002D66  EF1D  F016         	goto	l5250
 10564  002D6A                     l5276:
 10565                           
 10566                           ; BSR set to: 3
 10567  002D6A  516B               	movf	_array_index& (0+255),w,b
 10568  002D6C  0D02               	mullw	2
 10569  002D6E  0E3C               	movlw	low _memory
 10570  002D70  24F3               	addwf	243,w,c
 10571  002D72  6ED9               	movwf	fsr2l,c
 10572  002D74  0E03               	movlw	high _memory
 10573  002D76  20F4               	addwfc	prodh,w,c
 10574  002D78  6EDA               	movwf	fsr2h,c
 10575  002D7A  0E06               	movlw	6
 10576  002D7C  18DE               	xorwf	postinc2,w,c
 10577  002D7E  10DE               	iorwf	postinc2,w,c
 10578  002D80  A4D8               	btfss	status,2,c
 10579  002D82  EFC5  F016         	goto	u5301
 10580  002D86  EFC7  F016         	goto	u5300
 10581  002D8A                     u5301:
 10582  002D8A  EFD5  F016         	goto	l5282
 10583  002D8E                     u5300:
 10584  002D8E                     
 10585                           ; BSR set to: 3
 10586  002D8E  C058  F020         	movff	goback@mL,turnLeft@mL
 10587  002D92  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10588  002D96  C05A  F022         	movff	goback@mR,turnLeft@mR
 10589  002D9A  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10590  002D9E  0E87               	movlw	135
 10591  002DA0  6E24               	movwf	turnLeft@angle_left^0,c
 10592  002DA2  EC9D  F021         	call	_turnLeft	;wreg free
 10593  002DA6  EF1D  F016         	goto	l5250
 10594  002DAA                     l5282:
 10595                           
 10596                           ; BSR set to: 3
 10597  002DAA  516B               	movf	_array_index& (0+255),w,b
 10598  002DAC  0D02               	mullw	2
 10599  002DAE  0E3C               	movlw	low _memory
 10600  002DB0  24F3               	addwf	243,w,c
 10601  002DB2  6ED9               	movwf	fsr2l,c
 10602  002DB4  0E03               	movlw	high _memory
 10603  002DB6  20F4               	addwfc	prodh,w,c
 10604  002DB8  6EDA               	movwf	fsr2h,c
 10605  002DBA  0E07               	movlw	7
 10606  002DBC  18DE               	xorwf	postinc2,w,c
 10607  002DBE  10DE               	iorwf	postinc2,w,c
 10608  002DC0  A4D8               	btfss	status,2,c
 10609  002DC2  EFE5  F016         	goto	u5311
 10610  002DC6  EFE7  F016         	goto	u5310
 10611  002DCA                     u5311:
 10612  002DCA  EFF5  F016         	goto	l656
 10613  002DCE                     u5310:
 10614  002DCE                     
 10615                           ; BSR set to: 3
 10616  002DCE  C058  F020         	movff	goback@mL,turnRight@mL
 10617  002DD2  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10618  002DD6  C05A  F022         	movff	goback@mR,turnRight@mR
 10619  002DDA  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10620  002DDE  0E87               	movlw	135
 10621  002DE0  6E24               	movwf	turnRight@angle_right^0,c
 10622  002DE2  ECD6  F020         	call	_turnRight	;wreg free
 10623  002DE6  EF1D  F016         	goto	l5250
 10624  002DEA                     l656:
 10625                           
 10626                           ; BSR set to: 3
 10627  002DEA  EF7E  F015         	goto	l5212
 10628  002DEE                     l5288:
 10629                           
 10630                           ; BSR set to: 3
 10631                           ;movement.c: 152:     char buf2[100];;movement.c: 153:     sprintf(buf2,"go back finish\
      +                          r\n");
 10632  002DEE  0E00               	movlw	low goback@buf2
 10633  002DF0  0100               	movlb	0	; () banked
 10634  002DF2  6F60               	movwf	sprintf@s& (0+255),b
 10635  002DF4  0E02               	movlw	high goback@buf2
 10636  002DF6  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10637  002DF8  0E05               	movlw	low STR_6
 10638  002DFA  6F62               	movwf	sprintf@fmt& (0+255),b
 10639  002DFC  0E0E               	movlw	high STR_6
 10640  002DFE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10641  002E00  EC7B  F02A         	call	_sprintf	;wreg free
 10642  002E04                     
 10643                           ;movement.c: 154:     sendStringSerial4(buf2);
 10644  002E04  0E00               	movlw	low goback@buf2
 10645  002E06  6E02               	movwf	sendStringSerial4@string^0,c
 10646  002E08  0E02               	movlw	high goback@buf2
 10647  002E0A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10648  002E0C  ECB6  F02C         	call	_sendStringSerial4	;wreg free
 10649  002E10                     l5292:
 10650  002E10  C058  F01A         	movff	goback@mL,stop@mL
 10651  002E14  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10652  002E18  C05A  F01C         	movff	goback@mR,stop@mR
 10653  002E1C  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10654  002E20  EC8F  F028         	call	_stop	;wreg free
 10655  002E24  EF08  F017         	goto	l5292
 10656  002E28  0012               	return		;funcret
 10657  002E2A                     __end_of_goback:
 10658                           	callstack 0
 10659                           
 10660 ;; *************** function _turnRight *****************
 10661 ;; Defined at:
 10662 ;;		line 122 in file "dc_motor.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10665 ;;		 -> main@motorL(10), 
 10666 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10667 ;;		 -> main@motorR(10), 
 10668 ;;  angle_right     1   35[COMRAM] unsigned char 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  i               2   45[COMRAM] unsigned int 
 10671 ;;  i               2   43[COMRAM] unsigned int 
 10672 ;;  i               2   41[COMRAM] unsigned int 
 10673 ;;  delay           2   47[COMRAM] unsigned int 
 10674 ;;  delay_180       2   39[COMRAM] unsigned int 
 10675 ;;  delay_135       2   37[COMRAM] unsigned int 
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10685 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10686 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10688 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;Total ram usage:       18 bytes
 10690 ;; Hardware stack levels used: 1
 10691 ;; Hardware stack levels required when called: 4
 10692 ;; This function calls:
 10693 ;;		_setMotorPWM
 10694 ;;		_stop
 10695 ;; This function is called by:
 10696 ;;		_action
 10697 ;;		_goback
 10698 ;;		_test_action
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text49
 10703  0041AC                     __ptext49:
 10704                           	callstack 0
 10705  0041AC                     _turnRight:
 10706                           	callstack 25
 10707  0041AC                     
 10708                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10709  0041AC  EE20 F001          	lfsr	2,1
 10710  0041B0  5020               	movf	turnRight@mL^0,w,c
 10711  0041B2  26D9               	addwf	fsr2l,f,c
 10712  0041B4  5021               	movf	(turnRight@mL+1)^0,w,c
 10713  0041B6  22DA               	addwfc	fsr2h,f,c
 10714  0041B8  0E01               	movlw	1
 10715  0041BA  6EDF               	movwf	indf2,c
 10716                           
 10717                           ;dc_motor.c: 125:     mR->direction=1;
 10718  0041BC  EE20 F001          	lfsr	2,1
 10719  0041C0  5022               	movf	turnRight@mR^0,w,c
 10720  0041C2  26D9               	addwf	fsr2l,f,c
 10721  0041C4  5023               	movf	(turnRight@mR+1)^0,w,c
 10722  0041C6  22DA               	addwfc	fsr2h,f,c
 10723  0041C8  0E01               	movlw	1
 10724  0041CA  6EDF               	movwf	indf2,c
 10725                           
 10726                           ;dc_motor.c: 126:     while (mL->power <25){
 10727  0041CC  EF07  F021         	goto	l4650
 10728  0041D0                     l4642:
 10729                           
 10730                           ;dc_motor.c: 127:         mL->power += 5;
 10731  0041D0  C020  FFD9         	movff	turnRight@mL,fsr2l
 10732  0041D4  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10733  0041D8  0E05               	movlw	5
 10734  0041DA  26DF               	addwf	indf2,f,c
 10735                           
 10736                           ;dc_motor.c: 128:         mR->power = 0;
 10737  0041DC  C022  FFD9         	movff	turnRight@mR,fsr2l
 10738  0041E0  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10739  0041E4  0E00               	movlw	0
 10740  0041E6  6EDF               	movwf	indf2,c
 10741  0041E8                     
 10742                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10743  0041E8  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10744  0041EC  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10745  0041F0  EC5D  F01D         	call	_setMotorPWM	;wreg free
 10746  0041F4                     
 10747                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10748  0041F4  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10749  0041F8  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10750  0041FC  EC5D  F01D         	call	_setMotorPWM	;wreg free
 10751  004200                     
 10752                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10753  004200  0ED0               	movlw	208
 10754  004202  6E25               	movwf	??_turnRight^0,c
 10755  004204  0ECA               	movlw	202
 10756  004206                     u6087:
 10757  004206  2EE8               	decfsz	wreg,f,c
 10758  004208  D7FE               	bra	u6087
 10759  00420A  2E25               	decfsz	??_turnRight^0,f,c
 10760  00420C  D7FC               	bra	u6087
 10761  00420E                     l4650:
 10762                           
 10763                           ;dc_motor.c: 126:     while (mL->power <25){
 10764  00420E  C020  FFD9         	movff	turnRight@mL,fsr2l
 10765  004212  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10766  004216  0E18               	movlw	24
 10767  004218  64DF               	cpfsgt	indf2,c
 10768  00421A  EF11  F021         	goto	u4651
 10769  00421E  EF13  F021         	goto	u4650
 10770  004222                     u4651:
 10771  004222  EFE8  F020         	goto	l4642
 10772  004226                     u4650:
 10773  004226                     
 10774                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10775  004226  5024               	movf	turnRight@angle_right^0,w,c
 10776  004228  0100               	movlb	0	; () banked
 10777  00422A  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10778  00422C  CFF3 F030          	movff	prodl,turnRight@delay
 10779  004230  CFF4 F031          	movff	prodh,turnRight@delay+1
 10780  004234                     
 10781                           ; BSR set to: 0
 10782  004234  0E0F               	movlw	15
 10783  004236  2430               	addwf	turnRight@delay^0,w,c
 10784  004238  6E26               	movwf	turnRight@delay_135^0,c
 10785  00423A  0E00               	movlw	0
 10786  00423C  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10787  00423E  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10788  004240                     
 10789                           ; BSR set to: 0
 10790  004240  0E0A               	movlw	10
 10791  004242  2430               	addwf	turnRight@delay^0,w,c
 10792  004244  6E28               	movwf	turnRight@delay_180^0,c
 10793  004246  0E00               	movlw	0
 10794  004248  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10795  00424A  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10796  00424C                     
 10797                           ; BSR set to: 0
 10798                           ;dc_motor.c: 136:     if (angle_right == 180){
 10799  00424C  0EB4               	movlw	180
 10800  00424E  1824               	xorwf	turnRight@angle_right^0,w,c
 10801  004250  A4D8               	btfss	status,2,c
 10802  004252  EF2D  F021         	goto	u4661
 10803  004256  EF2F  F021         	goto	u4660
 10804  00425A                     u4661:
 10805  00425A  EF4A  F021         	goto	l4666
 10806  00425E                     u4660:
 10807  00425E                     
 10808                           ; BSR set to: 0
 10809                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10810  00425E  0E00               	movlw	0
 10811  004260  6E2B               	movwf	(turnRight@i+1)^0,c
 10812  004262  0E00               	movlw	0
 10813  004264  6E2A               	movwf	turnRight@i^0,c
 10814  004266  EF3F  F021         	goto	l335
 10815  00426A                     l4662:
 10816  00426A  0E15               	movlw	21
 10817  00426C  6E25               	movwf	??_turnRight^0,c
 10818  00426E  0EC6               	movlw	198
 10819  004270                     u6097:
 10820  004270  2EE8               	decfsz	wreg,f,c
 10821  004272  D7FE               	bra	u6097
 10822  004274  2E25               	decfsz	??_turnRight^0,f,c
 10823  004276  D7FC               	bra	u6097
 10824  004278  D000               	nop2	
 10825  00427A  4A2A               	infsnz	turnRight@i^0,f,c
 10826  00427C  2A2B               	incf	(turnRight@i+1)^0,f,c
 10827  00427E                     l335:
 10828  00427E  5028               	movf	turnRight@delay_180^0,w,c
 10829  004280  5C2A               	subwf	turnRight@i^0,w,c
 10830  004282  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10831  004284  582B               	subwfb	(turnRight@i+1)^0,w,c
 10832  004286  A0D8               	btfss	status,0,c
 10833  004288  EF48  F021         	goto	u4671
 10834  00428C  EF4A  F021         	goto	u4670
 10835  004290                     u4671:
 10836  004290  EF35  F021         	goto	l4662
 10837  004294                     u4670:
 10838  004294                     l4666:
 10839                           
 10840                           ;dc_motor.c: 139:     if (angle_right == 135){
 10841  004294  0E87               	movlw	135
 10842  004296  1824               	xorwf	turnRight@angle_right^0,w,c
 10843  004298  A4D8               	btfss	status,2,c
 10844  00429A  EF51  F021         	goto	u4681
 10845  00429E  EF53  F021         	goto	u4680
 10846  0042A2                     u4681:
 10847  0042A2  EF6E  F021         	goto	l4674
 10848  0042A6                     u4680:
 10849  0042A6                     
 10850                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10851  0042A6  0E00               	movlw	0
 10852  0042A8  6E2D               	movwf	(turnRight@i_1358+1)^0,c
 10853  0042AA  0E00               	movlw	0
 10854  0042AC  6E2C               	movwf	turnRight@i_1358^0,c
 10855  0042AE  EF63  F021         	goto	l339
 10856  0042B2                     l4670:
 10857  0042B2  0E15               	movlw	21
 10858  0042B4  6E25               	movwf	??_turnRight^0,c
 10859  0042B6  0EC6               	movlw	198
 10860  0042B8                     u6107:
 10861  0042B8  2EE8               	decfsz	wreg,f,c
 10862  0042BA  D7FE               	bra	u6107
 10863  0042BC  2E25               	decfsz	??_turnRight^0,f,c
 10864  0042BE  D7FC               	bra	u6107
 10865  0042C0  D000               	nop2	
 10866  0042C2  4A2C               	infsnz	turnRight@i_1358^0,f,c
 10867  0042C4  2A2D               	incf	(turnRight@i_1358+1)^0,f,c
 10868  0042C6                     l339:
 10869  0042C6  5026               	movf	turnRight@delay_135^0,w,c
 10870  0042C8  5C2C               	subwf	turnRight@i_1358^0,w,c
 10871  0042CA  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10872  0042CC  582D               	subwfb	(turnRight@i_1358+1)^0,w,c
 10873  0042CE  A0D8               	btfss	status,0,c
 10874  0042D0  EF6C  F021         	goto	u4691
 10875  0042D4  EF6E  F021         	goto	u4690
 10876  0042D8                     u4691:
 10877  0042D8  EF59  F021         	goto	l4670
 10878  0042DC                     u4690:
 10879  0042DC                     l4674:
 10880                           
 10881                           ;dc_motor.c: 142:     if (angle_right == 90){
 10882  0042DC  0E5A               	movlw	90
 10883  0042DE  1824               	xorwf	turnRight@angle_right^0,w,c
 10884  0042E0  A4D8               	btfss	status,2,c
 10885  0042E2  EF75  F021         	goto	u4701
 10886  0042E6  EF77  F021         	goto	u4700
 10887  0042EA                     u4701:
 10888  0042EA  EF92  F021         	goto	l4682
 10889  0042EE                     u4700:
 10890  0042EE                     
 10891                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10892  0042EE  0E00               	movlw	0
 10893  0042F0  6E2F               	movwf	(turnRight@i_1359+1)^0,c
 10894  0042F2  0E00               	movlw	0
 10895  0042F4  6E2E               	movwf	turnRight@i_1359^0,c
 10896  0042F6  EF87  F021         	goto	l343
 10897  0042FA                     l4678:
 10898  0042FA  0E15               	movlw	21
 10899  0042FC  6E25               	movwf	??_turnRight^0,c
 10900  0042FE  0EC6               	movlw	198
 10901  004300                     u6117:
 10902  004300  2EE8               	decfsz	wreg,f,c
 10903  004302  D7FE               	bra	u6117
 10904  004304  2E25               	decfsz	??_turnRight^0,f,c
 10905  004306  D7FC               	bra	u6117
 10906  004308  D000               	nop2	
 10907  00430A  4A2E               	infsnz	turnRight@i_1359^0,f,c
 10908  00430C  2A2F               	incf	(turnRight@i_1359+1)^0,f,c
 10909  00430E                     l343:
 10910  00430E  5030               	movf	turnRight@delay^0,w,c
 10911  004310  5C2E               	subwf	turnRight@i_1359^0,w,c
 10912  004312  5031               	movf	(turnRight@delay+1)^0,w,c
 10913  004314  582F               	subwfb	(turnRight@i_1359+1)^0,w,c
 10914  004316  A0D8               	btfss	status,0,c
 10915  004318  EF90  F021         	goto	u4711
 10916  00431C  EF92  F021         	goto	u4710
 10917  004320                     u4711:
 10918  004320  EF7D  F021         	goto	l4678
 10919  004324                     u4710:
 10920  004324                     l4682:
 10921                           
 10922                           ;dc_motor.c: 145:     stop(mL,mR);
 10923  004324  C020  F01A         	movff	turnRight@mL,stop@mL
 10924  004328  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10925  00432C  C022  F01C         	movff	turnRight@mR,stop@mR
 10926  004330  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10927  004334  EC8F  F028         	call	_stop	;wreg free
 10928  004338  0012               	return		;funcret
 10929  00433A                     __end_of_turnRight:
 10930                           	callstack 0
 10931                           
 10932 ;; *************** function _turnLeft *****************
 10933 ;; Defined at:
 10934 ;;		line 95 in file "dc_motor.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10937 ;;		 -> main@motorL(10), 
 10938 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10939 ;;		 -> main@motorR(10), 
 10940 ;;  angle_left      1   35[COMRAM] unsigned char 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  i               2   45[COMRAM] unsigned int 
 10943 ;;  i               2   43[COMRAM] unsigned int 
 10944 ;;  i               2   41[COMRAM] unsigned int 
 10945 ;;  delay           2   47[COMRAM] unsigned int 
 10946 ;;  delay_180       2   39[COMRAM] unsigned int 
 10947 ;;  delay_135       2   37[COMRAM] unsigned int 
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10957 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10960 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10961 ;;Total ram usage:       18 bytes
 10962 ;; Hardware stack levels used: 1
 10963 ;; Hardware stack levels required when called: 4
 10964 ;; This function calls:
 10965 ;;		_setMotorPWM
 10966 ;;		_stop
 10967 ;; This function is called by:
 10968 ;;		_action
 10969 ;;		_goback
 10970 ;;		_test_action
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text50
 10975  00433A                     __ptext50:
 10976                           	callstack 0
 10977  00433A                     _turnLeft:
 10978                           	callstack 25
 10979  00433A                     
 10980                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10981  00433A  EE20 F001          	lfsr	2,1
 10982  00433E  5020               	movf	turnLeft@mL^0,w,c
 10983  004340  26D9               	addwf	fsr2l,f,c
 10984  004342  5021               	movf	(turnLeft@mL+1)^0,w,c
 10985  004344  22DA               	addwfc	fsr2h,f,c
 10986  004346  0E01               	movlw	1
 10987  004348  6EDF               	movwf	indf2,c
 10988                           
 10989                           ;dc_motor.c: 98:       mR->direction=1;
 10990  00434A  EE20 F001          	lfsr	2,1
 10991  00434E  5022               	movf	turnLeft@mR^0,w,c
 10992  004350  26D9               	addwf	fsr2l,f,c
 10993  004352  5023               	movf	(turnLeft@mR+1)^0,w,c
 10994  004354  22DA               	addwfc	fsr2h,f,c
 10995  004356  0E01               	movlw	1
 10996  004358  6EDF               	movwf	indf2,c
 10997                           
 10998                           ;dc_motor.c: 99:       while (mR->power <25){
 10999  00435A  EFCE  F021         	goto	l4606
 11000  00435E                     l4598:
 11001                           
 11002                           ;dc_motor.c: 100:         mR->power += 5;
 11003  00435E  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11004  004362  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11005  004366  0E05               	movlw	5
 11006  004368  26DF               	addwf	indf2,f,c
 11007                           
 11008                           ;dc_motor.c: 101:         mL->power = 0;
 11009  00436A  C020  FFD9         	movff	turnLeft@mL,fsr2l
 11010  00436E  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 11011  004372  0E00               	movlw	0
 11012  004374  6EDF               	movwf	indf2,c
 11013  004376                     
 11014                           ;dc_motor.c: 102:         setMotorPWM(mL);
 11015  004376  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 11016  00437A  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11017  00437E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11018  004382                     
 11019                           ;dc_motor.c: 103:         setMotorPWM(mR);
 11020  004382  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 11021  004386  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11022  00438A  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11023  00438E                     
 11024                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11025  00438E  0ED0               	movlw	208
 11026  004390  6E25               	movwf	??_turnLeft^0,c
 11027  004392  0ECA               	movlw	202
 11028  004394                     u6127:
 11029  004394  2EE8               	decfsz	wreg,f,c
 11030  004396  D7FE               	bra	u6127
 11031  004398  2E25               	decfsz	??_turnLeft^0,f,c
 11032  00439A  D7FC               	bra	u6127
 11033  00439C                     l4606:
 11034                           
 11035                           ;dc_motor.c: 99:       while (mR->power <25){
 11036  00439C  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11037  0043A0  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11038  0043A4  0E18               	movlw	24
 11039  0043A6  64DF               	cpfsgt	indf2,c
 11040  0043A8  EFD8  F021         	goto	u4581
 11041  0043AC  EFDA  F021         	goto	u4580
 11042  0043B0                     u4581:
 11043  0043B0  EFAF  F021         	goto	l4598
 11044  0043B4                     u4580:
 11045  0043B4                     
 11046                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 11047  0043B4  5024               	movf	turnLeft@angle_left^0,w,c
 11048  0043B6  0100               	movlb	0	; () banked
 11049  0043B8  03FE               	mulwf	_SENSITIVITY& (0+255),b
 11050  0043BA  CFF3 F030          	movff	prodl,turnLeft@delay
 11051  0043BE  CFF4 F031          	movff	prodh,turnLeft@delay+1
 11052  0043C2                     
 11053                           ; BSR set to: 0
 11054  0043C2  0E0F               	movlw	15
 11055  0043C4  2430               	addwf	turnLeft@delay^0,w,c
 11056  0043C6  6E26               	movwf	turnLeft@delay_135^0,c
 11057  0043C8  0E00               	movlw	0
 11058  0043CA  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11059  0043CC  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 11060  0043CE                     
 11061                           ; BSR set to: 0
 11062  0043CE  0E0A               	movlw	10
 11063  0043D0  2430               	addwf	turnLeft@delay^0,w,c
 11064  0043D2  6E28               	movwf	turnLeft@delay_180^0,c
 11065  0043D4  0E00               	movlw	0
 11066  0043D6  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11067  0043D8  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 11068  0043DA                     
 11069                           ; BSR set to: 0
 11070                           ;dc_motor.c: 109:     if (angle_left == 180){
 11071  0043DA  0EB4               	movlw	180
 11072  0043DC  1824               	xorwf	turnLeft@angle_left^0,w,c
 11073  0043DE  A4D8               	btfss	status,2,c
 11074  0043E0  EFF4  F021         	goto	u4591
 11075  0043E4  EFF6  F021         	goto	u4590
 11076  0043E8                     u4591:
 11077  0043E8  EF11  F022         	goto	l4622
 11078  0043EC                     u4590:
 11079  0043EC                     
 11080                           ; BSR set to: 0
 11081                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11082  0043EC  0E00               	movlw	0
 11083  0043EE  6E2B               	movwf	(turnLeft@i+1)^0,c
 11084  0043F0  0E00               	movlw	0
 11085  0043F2  6E2A               	movwf	turnLeft@i^0,c
 11086  0043F4  EF06  F022         	goto	l317
 11087  0043F8                     l4618:
 11088  0043F8  0E15               	movlw	21
 11089  0043FA  6E25               	movwf	??_turnLeft^0,c
 11090  0043FC  0EC6               	movlw	198
 11091  0043FE                     u6137:
 11092  0043FE  2EE8               	decfsz	wreg,f,c
 11093  004400  D7FE               	bra	u6137
 11094  004402  2E25               	decfsz	??_turnLeft^0,f,c
 11095  004404  D7FC               	bra	u6137
 11096  004406  D000               	nop2	
 11097  004408  4A2A               	infsnz	turnLeft@i^0,f,c
 11098  00440A  2A2B               	incf	(turnLeft@i+1)^0,f,c
 11099  00440C                     l317:
 11100  00440C  5028               	movf	turnLeft@delay_180^0,w,c
 11101  00440E  5C2A               	subwf	turnLeft@i^0,w,c
 11102  004410  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 11103  004412  582B               	subwfb	(turnLeft@i+1)^0,w,c
 11104  004414  A0D8               	btfss	status,0,c
 11105  004416  EF0F  F022         	goto	u4601
 11106  00441A  EF11  F022         	goto	u4600
 11107  00441E                     u4601:
 11108  00441E  EFFC  F021         	goto	l4618
 11109  004422                     u4600:
 11110  004422                     l4622:
 11111                           
 11112                           ;dc_motor.c: 112:     if (angle_left == 135){
 11113  004422  0E87               	movlw	135
 11114  004424  1824               	xorwf	turnLeft@angle_left^0,w,c
 11115  004426  A4D8               	btfss	status,2,c
 11116  004428  EF18  F022         	goto	u4611
 11117  00442C  EF1A  F022         	goto	u4610
 11118  004430                     u4611:
 11119  004430  EF35  F022         	goto	l4630
 11120  004434                     u4610:
 11121  004434                     
 11122                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11123  004434  0E00               	movlw	0
 11124  004436  6E2D               	movwf	(turnLeft@i_1333+1)^0,c
 11125  004438  0E00               	movlw	0
 11126  00443A  6E2C               	movwf	turnLeft@i_1333^0,c
 11127  00443C  EF2A  F022         	goto	l321
 11128  004440                     l4626:
 11129  004440  0E15               	movlw	21
 11130  004442  6E25               	movwf	??_turnLeft^0,c
 11131  004444  0EC6               	movlw	198
 11132  004446                     u6147:
 11133  004446  2EE8               	decfsz	wreg,f,c
 11134  004448  D7FE               	bra	u6147
 11135  00444A  2E25               	decfsz	??_turnLeft^0,f,c
 11136  00444C  D7FC               	bra	u6147
 11137  00444E  D000               	nop2	
 11138  004450  4A2C               	infsnz	turnLeft@i_1333^0,f,c
 11139  004452  2A2D               	incf	(turnLeft@i_1333+1)^0,f,c
 11140  004454                     l321:
 11141  004454  5026               	movf	turnLeft@delay_135^0,w,c
 11142  004456  5C2C               	subwf	turnLeft@i_1333^0,w,c
 11143  004458  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 11144  00445A  582D               	subwfb	(turnLeft@i_1333+1)^0,w,c
 11145  00445C  A0D8               	btfss	status,0,c
 11146  00445E  EF33  F022         	goto	u4621
 11147  004462  EF35  F022         	goto	u4620
 11148  004466                     u4621:
 11149  004466  EF20  F022         	goto	l4626
 11150  00446A                     u4620:
 11151  00446A                     l4630:
 11152                           
 11153                           ;dc_motor.c: 115:     if (angle_left == 90){
 11154  00446A  0E5A               	movlw	90
 11155  00446C  1824               	xorwf	turnLeft@angle_left^0,w,c
 11156  00446E  A4D8               	btfss	status,2,c
 11157  004470  EF3C  F022         	goto	u4631
 11158  004474  EF3E  F022         	goto	u4630
 11159  004478                     u4631:
 11160  004478  EF59  F022         	goto	l4638
 11161  00447C                     u4630:
 11162  00447C                     
 11163                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11164  00447C  0E00               	movlw	0
 11165  00447E  6E2F               	movwf	(turnLeft@i_1334+1)^0,c
 11166  004480  0E00               	movlw	0
 11167  004482  6E2E               	movwf	turnLeft@i_1334^0,c
 11168  004484  EF4E  F022         	goto	l325
 11169  004488                     l4634:
 11170  004488  0E15               	movlw	21
 11171  00448A  6E25               	movwf	??_turnLeft^0,c
 11172  00448C  0EC6               	movlw	198
 11173  00448E                     u6157:
 11174  00448E  2EE8               	decfsz	wreg,f,c
 11175  004490  D7FE               	bra	u6157
 11176  004492  2E25               	decfsz	??_turnLeft^0,f,c
 11177  004494  D7FC               	bra	u6157
 11178  004496  D000               	nop2	
 11179  004498  4A2E               	infsnz	turnLeft@i_1334^0,f,c
 11180  00449A  2A2F               	incf	(turnLeft@i_1334+1)^0,f,c
 11181  00449C                     l325:
 11182  00449C  5030               	movf	turnLeft@delay^0,w,c
 11183  00449E  5C2E               	subwf	turnLeft@i_1334^0,w,c
 11184  0044A0  5031               	movf	(turnLeft@delay+1)^0,w,c
 11185  0044A2  582F               	subwfb	(turnLeft@i_1334+1)^0,w,c
 11186  0044A4  A0D8               	btfss	status,0,c
 11187  0044A6  EF57  F022         	goto	u4641
 11188  0044AA  EF59  F022         	goto	u4640
 11189  0044AE                     u4641:
 11190  0044AE  EF44  F022         	goto	l4634
 11191  0044B2                     u4640:
 11192  0044B2                     l4638:
 11193                           
 11194                           ;dc_motor.c: 118:     stop(mL,mR);
 11195  0044B2  C020  F01A         	movff	turnLeft@mL,stop@mL
 11196  0044B6  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11197  0044BA  C022  F01C         	movff	turnLeft@mR,stop@mR
 11198  0044BE  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11199  0044C2  EC8F  F028         	call	_stop	;wreg free
 11200  0044C6  0012               	return		;funcret
 11201  0044C8                     __end_of_turnLeft:
 11202                           	callstack 0
 11203                           
 11204 ;; *************** function _reverse_square *****************
 11205 ;; Defined at:
 11206 ;;		line 189 in file "dc_motor.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11209 ;;		 -> main@motorL(10), 
 11210 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11211 ;;		 -> main@motorR(10), 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;Total ram usage:        6 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 5
 11230 ;; This function calls:
 11231 ;;		_fullSpeedBack
 11232 ;;		_stop
 11233 ;; This function is called by:
 11234 ;;		_action
 11235 ;;		_goback
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text51
 11240  0057D6                     __ptext51:
 11241                           	callstack 0
 11242  0057D6                     _reverse_square:
 11243                           	callstack 24
 11244  0057D6                     
 11245                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 11246  0057D6  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11247  0057DA  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11248  0057DE  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11249  0057E2  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11250  0057E6  EC2F  F028         	call	_fullSpeedBack	;wreg free
 11251  0057EA                     
 11252                           ;dc_motor.c: 191:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 11253  0057EA  0E7A               	movlw	122
 11254  0057EC  6E2B               	movwf	(??_reverse_square+1)^0,c
 11255  0057EE  0EC1               	movlw	193
 11256  0057F0  6E2A               	movwf	??_reverse_square^0,c
 11257  0057F2  0E82               	movlw	130
 11258  0057F4                     u6167:
 11259  0057F4  2EE8               	decfsz	wreg,f,c
 11260  0057F6  D7FE               	bra	u6167
 11261  0057F8  2E2A               	decfsz	??_reverse_square^0,f,c
 11262  0057FA  D7FC               	bra	u6167
 11263  0057FC  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11264  0057FE  D7FA               	bra	u6167
 11265  005800                     
 11266                           ;dc_motor.c: 192:     stop(mL,mR);
 11267  005800  C026  F01A         	movff	reverse_square@mL,stop@mL
 11268  005804  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11269  005808  C028  F01C         	movff	reverse_square@mR,stop@mR
 11270  00580C  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11271  005810  EC8F  F028         	call	_stop	;wreg free
 11272  005814  0012               	return		;funcret
 11273  005816                     __end_of_reverse_square:
 11274                           	callstack 0
 11275                           
 11276 ;; *************** function _fullSpeedBack *****************
 11277 ;; Defined at:
 11278 ;;		line 168 in file "dc_motor.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11281 ;;		 -> main@motorL(10), 
 11282 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11283 ;;		 -> main@motorR(10), 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;Total ram usage:        6 bytes
 11300 ;; Hardware stack levels used: 1
 11301 ;; Hardware stack levels required when called: 4
 11302 ;; This function calls:
 11303 ;;		_setMotorPWM
 11304 ;;		_stop
 11305 ;; This function is called by:
 11306 ;;		_short_reverse
 11307 ;;		_reverse_square
 11308 ;;		_short_burst_back
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text52
 11313  00505E                     __ptext52:
 11314                           	callstack 0
 11315  00505E                     _fullSpeedBack:
 11316                           	callstack 25
 11317  00505E                     
 11318                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11319  00505E  EE20 F001          	lfsr	2,1
 11320  005062  5020               	movf	fullSpeedBack@mL^0,w,c
 11321  005064  26D9               	addwf	fsr2l,f,c
 11322  005066  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11323  005068  22DA               	addwfc	fsr2h,f,c
 11324  00506A  0E00               	movlw	0
 11325  00506C  6EDF               	movwf	indf2,c
 11326                           
 11327                           ;dc_motor.c: 171:     mR->direction=0;
 11328  00506E  EE20 F001          	lfsr	2,1
 11329  005072  5022               	movf	fullSpeedBack@mR^0,w,c
 11330  005074  26D9               	addwf	fsr2l,f,c
 11331  005076  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11332  005078  22DA               	addwfc	fsr2h,f,c
 11333  00507A  0E00               	movlw	0
 11334  00507C  6EDF               	movwf	indf2,c
 11335                           
 11336                           ;dc_motor.c: 172:     while (mL->power<40 && mR->power<40){
 11337  00507E  EF60  F028         	goto	l4422
 11338  005082                     l4414:
 11339                           
 11340                           ;dc_motor.c: 173:         mL->power += 10;
 11341  005082  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11342  005086  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11343  00508A  0E0A               	movlw	10
 11344  00508C  26DF               	addwf	indf2,f,c
 11345                           
 11346                           ;dc_motor.c: 174:         mR->power += 10;
 11347  00508E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11348  005092  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11349  005096  0E0A               	movlw	10
 11350  005098  26DF               	addwf	indf2,f,c
 11351  00509A                     
 11352                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11353  00509A  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11354  00509E  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11355  0050A2  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11356  0050A6                     
 11357                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11358  0050A6  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11359  0050AA  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11360  0050AE  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11361  0050B2                     
 11362                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11363  0050B2  0ED0               	movlw	208
 11364  0050B4  6E24               	movwf	??_fullSpeedBack^0,c
 11365  0050B6  0ECA               	movlw	202
 11366  0050B8                     u6177:
 11367  0050B8  2EE8               	decfsz	wreg,f,c
 11368  0050BA  D7FE               	bra	u6177
 11369  0050BC  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11370  0050BE  D7FC               	bra	u6177
 11371  0050C0                     l4422:
 11372                           
 11373                           ;dc_motor.c: 172:     while (mL->power<40 && mR->power<40){
 11374  0050C0  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11375  0050C4  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11376  0050C8  0E28               	movlw	40
 11377  0050CA  60DF               	cpfslt	indf2,c
 11378  0050CC  EF6A  F028         	goto	u4121
 11379  0050D0  EF6C  F028         	goto	u4120
 11380  0050D4                     u4121:
 11381  0050D4  EF78  F028         	goto	l4426
 11382  0050D8                     u4120:
 11383  0050D8  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11384  0050DC  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11385  0050E0  0E27               	movlw	39
 11386  0050E2  64DF               	cpfsgt	indf2,c
 11387  0050E4  EF76  F028         	goto	u4131
 11388  0050E8  EF78  F028         	goto	u4130
 11389  0050EC                     u4131:
 11390  0050EC  EF41  F028         	goto	l4414
 11391  0050F0                     u4130:
 11392  0050F0                     l4426:
 11393                           
 11394                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11395  0050F0  0E29               	movlw	41
 11396  0050F2  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11397  0050F4  0E96               	movlw	150
 11398  0050F6  6E24               	movwf	??_fullSpeedBack^0,c
 11399  0050F8  0E7F               	movlw	127
 11400  0050FA                     u6187:
 11401  0050FA  2EE8               	decfsz	wreg,f,c
 11402  0050FC  D7FE               	bra	u6187
 11403  0050FE  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11404  005100  D7FC               	bra	u6187
 11405  005102  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11406  005104  D7FA               	bra	u6187
 11407  005106  F000               	nop	
 11408  005108                     
 11409                           ;dc_motor.c: 180:     stop(mL,mR);
 11410  005108  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11411  00510C  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11412  005110  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11413  005114  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11414  005118  EC8F  F028         	call	_stop	;wreg free
 11415  00511C  0012               	return		;funcret
 11416  00511E                     __end_of_fullSpeedBack:
 11417                           	callstack 0
 11418                           
 11419 ;; *************** function _stop *****************
 11420 ;; Defined at:
 11421 ;;		line 82 in file "dc_motor.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11424 ;;		 -> main@motorL(10), 
 11425 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11426 ;;		 -> main@motorR(10), 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11442 ;;Total ram usage:        6 bytes
 11443 ;; Hardware stack levels used: 1
 11444 ;; Hardware stack levels required when called: 3
 11445 ;; This function calls:
 11446 ;;		_setMotorPWM
 11447 ;; This function is called by:
 11448 ;;		_turnLeft
 11449 ;;		_turnRight
 11450 ;;		_fullSpeedBack
 11451 ;;		_short_reverse
 11452 ;;		_reverse_square
 11453 ;;		_main
 11454 ;;		_short_burst_back
 11455 ;;		_goback
 11456 ;;		_test_function
 11457 ;;		_fullSpeedAhead_test
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text53
 11462  00511E                     __ptext53:
 11463                           	callstack 0
 11464  00511E                     _stop:
 11465                           	callstack 26
 11466  00511E                     
 11467                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11468  00511E  EFC8  F028         	goto	l4184
 11469  005122                     l4170:
 11470                           
 11471                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11472  005122  C01A  FFD9         	movff	stop@mL,fsr2l
 11473  005126  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11474  00512A  50DF               	movf	indf2,w,c
 11475  00512C  B4D8               	btfsc	status,2,c
 11476  00512E  EF9B  F028         	goto	u3801
 11477  005132  EF9D  F028         	goto	u3800
 11478  005136                     u3801:
 11479  005136  EFA3  F028         	goto	l4174
 11480  00513A                     u3800:
 11481  00513A  C01A  FFD9         	movff	stop@mL,fsr2l
 11482  00513E  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11483  005142  0E05               	movlw	5
 11484  005144  5EDF               	subwf	indf2,f,c
 11485  005146                     l4174:
 11486                           
 11487                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11488  005146  C01C  FFD9         	movff	stop@mR,fsr2l
 11489  00514A  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11490  00514E  50DF               	movf	indf2,w,c
 11491  005150  B4D8               	btfsc	status,2,c
 11492  005152  EFAD  F028         	goto	u3811
 11493  005156  EFAF  F028         	goto	u3810
 11494  00515A                     u3811:
 11495  00515A  EFB5  F028         	goto	l4178
 11496  00515E                     u3810:
 11497  00515E  C01C  FFD9         	movff	stop@mR,fsr2l
 11498  005162  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11499  005166  0E05               	movlw	5
 11500  005168  5EDF               	subwf	indf2,f,c
 11501  00516A                     l4178:
 11502                           
 11503                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11504  00516A  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11505  00516E  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11506  005172  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11507  005176                     
 11508                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11509  005176  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11510  00517A  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11511  00517E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11512  005182                     
 11513                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11514  005182  0ED0               	movlw	208
 11515  005184  6E1E               	movwf	??_stop^0,c
 11516  005186  0ECA               	movlw	202
 11517  005188                     u6197:
 11518  005188  2EE8               	decfsz	wreg,f,c
 11519  00518A  D7FE               	bra	u6197
 11520  00518C  2E1E               	decfsz	??_stop^0,f,c
 11521  00518E  D7FC               	bra	u6197
 11522  005190                     l4184:
 11523                           
 11524                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11525  005190  C01A  FFD9         	movff	stop@mL,fsr2l
 11526  005194  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11527  005198  50DF               	movf	indf2,w,c
 11528  00519A  A4D8               	btfss	status,2,c
 11529  00519C  EFD2  F028         	goto	u3821
 11530  0051A0  EFD4  F028         	goto	u3820
 11531  0051A4                     u3821:
 11532  0051A4  EF91  F028         	goto	l4170
 11533  0051A8                     u3820:
 11534  0051A8  C01C  FFD9         	movff	stop@mR,fsr2l
 11535  0051AC  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11536  0051B0  50DF               	movf	indf2,w,c
 11537  0051B2  A4D8               	btfss	status,2,c
 11538  0051B4  EFDE  F028         	goto	u3831
 11539  0051B8  EFE0  F028         	goto	u3830
 11540  0051BC                     u3831:
 11541  0051BC  EF91  F028         	goto	l4170
 11542  0051C0                     u3830:
 11543  0051C0                     
 11544                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11545  0051C0  0E29               	movlw	41
 11546  0051C2  6E1F               	movwf	(??_stop+1)^0,c
 11547  0051C4  0E96               	movlw	150
 11548  0051C6  6E1E               	movwf	??_stop^0,c
 11549  0051C8  0E7F               	movlw	127
 11550  0051CA                     u6207:
 11551  0051CA  2EE8               	decfsz	wreg,f,c
 11552  0051CC  D7FE               	bra	u6207
 11553  0051CE  2E1E               	decfsz	??_stop^0,f,c
 11554  0051D0  D7FC               	bra	u6207
 11555  0051D2  2E1F               	decfsz	(??_stop+1)^0,f,c
 11556  0051D4  D7FA               	bra	u6207
 11557  0051D6  F000               	nop	
 11558  0051D8  0012               	return		;funcret
 11559  0051DA                     __end_of_stop:
 11560                           	callstack 0
 11561                           
 11562 ;; *************** function _fullSpeedAhead *****************
 11563 ;; Defined at:
 11564 ;;		line 149 in file "dc_motor.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11567 ;;		 -> main@motorL(10), 
 11568 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11569 ;;		 -> main@motorR(10), 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11584 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11585 ;;Total ram usage:        5 bytes
 11586 ;; Hardware stack levels used: 1
 11587 ;; Hardware stack levels required when called: 3
 11588 ;; This function calls:
 11589 ;;		_setMotorPWM
 11590 ;; This function is called by:
 11591 ;;		_main
 11592 ;;		_short_burst_back
 11593 ;;		_goback
 11594 ;;		_test_function
 11595 ;;		_fullSpeedAhead_test
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           	psect	text54
 11600  0051DA                     __ptext54:
 11601                           	callstack 0
 11602  0051DA                     _fullSpeedAhead:
 11603                           	callstack 26
 11604  0051DA                     
 11605                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11606  0051DA  EE20 F001          	lfsr	2,1
 11607  0051DE  501A               	movf	fullSpeedAhead@mL^0,w,c
 11608  0051E0  26D9               	addwf	fsr2l,f,c
 11609  0051E2  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11610  0051E4  22DA               	addwfc	fsr2h,f,c
 11611  0051E6  0E01               	movlw	1
 11612  0051E8  6EDF               	movwf	indf2,c
 11613                           
 11614                           ;dc_motor.c: 152:     mR->direction=1;
 11615  0051EA  EE20 F001          	lfsr	2,1
 11616  0051EE  501C               	movf	fullSpeedAhead@mR^0,w,c
 11617  0051F0  26D9               	addwf	fsr2l,f,c
 11618  0051F2  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11619  0051F4  22DA               	addwfc	fsr2h,f,c
 11620  0051F6  0E01               	movlw	1
 11621  0051F8  6EDF               	movwf	indf2,c
 11622                           
 11623                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11624  0051FA  EF1E  F029         	goto	l4694
 11625  0051FE                     l4686:
 11626                           
 11627                           ;dc_motor.c: 154:         mL->power += 10;
 11628  0051FE  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11629  005202  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11630  005206  0E0A               	movlw	10
 11631  005208  26DF               	addwf	indf2,f,c
 11632                           
 11633                           ;dc_motor.c: 155:         mR->power += 10;
 11634  00520A  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11635  00520E  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11636  005212  0E0A               	movlw	10
 11637  005214  26DF               	addwf	indf2,f,c
 11638  005216                     
 11639                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11640  005216  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11641  00521A  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11642  00521E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11643  005222                     
 11644                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11645  005222  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11646  005226  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11647  00522A  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11648  00522E                     
 11649                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11650  00522E  0ED0               	movlw	208
 11651  005230  6E1E               	movwf	??_fullSpeedAhead^0,c
 11652  005232  0ECA               	movlw	202
 11653  005234                     u6217:
 11654  005234  2EE8               	decfsz	wreg,f,c
 11655  005236  D7FE               	bra	u6217
 11656  005238  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11657  00523A  D7FC               	bra	u6217
 11658  00523C                     l4694:
 11659                           
 11660                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11661  00523C  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11662  005240  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11663  005244  0E14               	movlw	20
 11664  005246  60DF               	cpfslt	indf2,c
 11665  005248  EF28  F029         	goto	u4721
 11666  00524C  EF2A  F029         	goto	u4720
 11667  005250                     u4721:
 11668  005250  EF36  F029         	goto	l354
 11669  005254                     u4720:
 11670  005254  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11671  005258  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11672  00525C  0E13               	movlw	19
 11673  00525E  64DF               	cpfsgt	indf2,c
 11674  005260  EF34  F029         	goto	u4731
 11675  005264  EF36  F029         	goto	u4730
 11676  005268                     u4731:
 11677  005268  EFFF  F028         	goto	l4686
 11678  00526C                     u4730:
 11679  00526C                     l354:
 11680  00526C  0012               	return		;funcret
 11681  00526E                     __end_of_fullSpeedAhead:
 11682                           	callstack 0
 11683                           
 11684 ;; *************** function _setMotorPWM *****************
 11685 ;; Defined at:
 11686 ;;		line 59 in file "dc_motor.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11689 ;;		 -> main@motorR(10), main@motorL(10), 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;  PWMduty         2   23[COMRAM] int 
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      void 
 11694 ;; Registers used:
 11695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11703 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11704 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;Total ram usage:       11 bytes
 11706 ;; Hardware stack levels used: 1
 11707 ;; Hardware stack levels required when called: 2
 11708 ;; This function calls:
 11709 ;;		___awdiv
 11710 ;;		___wmul
 11711 ;; This function is called by:
 11712 ;;		_stop
 11713 ;;		_turnLeft
 11714 ;;		_turnRight
 11715 ;;		_fullSpeedAhead
 11716 ;;		_fullSpeedBack
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text55
 11721  003ABA                     __ptext55:
 11722                           	callstack 0
 11723  003ABA                     _setMotorPWM:
 11724                           	callstack 26
 11725  003ABA                     
 11726                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11727  003ABA  EE20 F001          	lfsr	2,1
 11728  003ABE  500F               	movf	setMotorPWM@m^0,w,c
 11729  003AC0  26D9               	addwf	fsr2l,f,c
 11730  003AC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11731  003AC4  22DA               	addwfc	fsr2h,f,c
 11732  003AC6  50DF               	movf	indf2,w,c
 11733  003AC8  B4D8               	btfsc	status,2,c
 11734  003ACA  EF69  F01D         	goto	u3311
 11735  003ACE  EF6B  F01D         	goto	u3310
 11736  003AD2                     u3311:
 11737  003AD2  EF9C  F01D         	goto	l3884
 11738  003AD6                     u3310:
 11739  003AD6                     
 11740                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11741  003AD6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11742  003ADA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11743  003ADE  50DF               	movf	indf2,w,c
 11744  003AE0  6E11               	movwf	??_setMotorPWM^0,c
 11745  003AE2  5011               	movf	??_setMotorPWM^0,w,c
 11746  003AE4  6E01               	movwf	___wmul@multiplier^0,c
 11747  003AE6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11748  003AE8  EE20 F007          	lfsr	2,7
 11749  003AEC  500F               	movf	setMotorPWM@m^0,w,c
 11750  003AEE  26D9               	addwf	fsr2l,f,c
 11751  003AF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11752  003AF2  22DA               	addwfc	fsr2h,f,c
 11753  003AF4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11754  003AF8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11755  003AFC  EC0E  F02D         	call	___wmul	;wreg free
 11756  003B00  C001  F007         	movff	?___wmul,___awdiv@dividend
 11757  003B04  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11758  003B08  0E00               	movlw	0
 11759  003B0A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11760  003B0C  0E64               	movlw	100
 11761  003B0E  6E09               	movwf	___awdiv@divisor^0,c
 11762  003B10  ECCD  F027         	call	___awdiv	;wreg free
 11763  003B14  EE20 F007          	lfsr	2,7
 11764  003B18  500F               	movf	setMotorPWM@m^0,w,c
 11765  003B1A  26D9               	addwf	fsr2l,f,c
 11766  003B1C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11767  003B1E  22DA               	addwfc	fsr2h,f,c
 11768  003B20  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11769  003B24  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11770  003B28  5007               	movf	?___awdiv^0,w,c
 11771  003B2A  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11772  003B2C  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11773  003B2E  5008               	movf	(?___awdiv+1)^0,w,c
 11774  003B30  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11775  003B32  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11776                           
 11777                           ;dc_motor.c: 66:  }
 11778  003B34  EFBF  F01D         	goto	l3886
 11779  003B38                     l3884:
 11780                           
 11781                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11782  003B38  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11783  003B3C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11784  003B40  50DF               	movf	indf2,w,c
 11785  003B42  6E11               	movwf	??_setMotorPWM^0,c
 11786  003B44  5011               	movf	??_setMotorPWM^0,w,c
 11787  003B46  6E01               	movwf	___wmul@multiplier^0,c
 11788  003B48  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11789  003B4A  EE20 F007          	lfsr	2,7
 11790  003B4E  500F               	movf	setMotorPWM@m^0,w,c
 11791  003B50  26D9               	addwf	fsr2l,f,c
 11792  003B52  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11793  003B54  22DA               	addwfc	fsr2h,f,c
 11794  003B56  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11795  003B5A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11796  003B5E  EC0E  F02D         	call	___wmul	;wreg free
 11797  003B62  C001  F007         	movff	?___wmul,___awdiv@dividend
 11798  003B66  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11799  003B6A  0E00               	movlw	0
 11800  003B6C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11801  003B6E  0E64               	movlw	100
 11802  003B70  6E09               	movwf	___awdiv@divisor^0,c
 11803  003B72  ECCD  F027         	call	___awdiv	;wreg free
 11804  003B76  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11805  003B7A  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11806  003B7E                     l3886:
 11807                           
 11808                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11809  003B7E  EE20 F002          	lfsr	2,2
 11810  003B82  500F               	movf	setMotorPWM@m^0,w,c
 11811  003B84  26D9               	addwf	fsr2l,f,c
 11812  003B86  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11813  003B88  22DA               	addwfc	fsr2h,f,c
 11814  003B8A  CFDE F011          	movff	postinc2,??_setMotorPWM
 11815  003B8E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11816  003B92  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11817  003B96  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11818  003B9A  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11819  003B9E                     
 11820                           ;dc_motor.c: 74:  if (m->direction){
 11821  003B9E  EE20 F001          	lfsr	2,1
 11822  003BA2  500F               	movf	setMotorPWM@m^0,w,c
 11823  003BA4  26D9               	addwf	fsr2l,f,c
 11824  003BA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11825  003BA8  22DA               	addwfc	fsr2h,f,c
 11826  003BAA  50DF               	movf	indf2,w,c
 11827  003BAC  B4D8               	btfsc	status,2,c
 11828  003BAE  EFDB  F01D         	goto	u3321
 11829  003BB2  EFDD  F01D         	goto	u3320
 11830  003BB6                     u3321:
 11831  003BB6  EF12  F01E         	goto	l3892
 11832  003BBA                     u3320:
 11833  003BBA                     
 11834                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11835  003BBA  EE20 F004          	lfsr	2,4
 11836  003BBE  500F               	movf	setMotorPWM@m^0,w,c
 11837  003BC0  26D9               	addwf	fsr2l,f,c
 11838  003BC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11839  003BC4  22DA               	addwfc	fsr2h,f,c
 11840  003BC6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11841  003BCA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11842  003BCE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11843  003BD2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11844  003BD6  EE10 F004          	lfsr	1,4
 11845  003BDA  500F               	movf	setMotorPWM@m^0,w,c
 11846  003BDC  26E1               	addwf	fsr1l,f,c
 11847  003BDE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11848  003BE0  22E2               	addwfc	fsr1h,f,c
 11849  003BE2  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11850  003BE6  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11851  003BEA  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11852  003BEE  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11853  003BF2  50E7               	movf	indf1,w,c
 11854  003BF4  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11855  003BF6  EE10 F006          	lfsr	1,6
 11856  003BFA  500F               	movf	setMotorPWM@m^0,w,c
 11857  003BFC  26E1               	addwf	fsr1l,f,c
 11858  003BFE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11859  003C00  22E2               	addwfc	fsr1h,f,c
 11860  003C02  50E7               	movf	indf1,w,c
 11861  003C04  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11862  003C06  0E01               	movlw	1
 11863  003C08  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11864  003C0A  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11865  003C0C  EF0A  F01E         	goto	u3334
 11866  003C10                     u3335:
 11867  003C10  90D8               	bcf	status,0,c
 11868  003C12  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11869  003C14                     u3334:
 11870  003C14  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11871  003C16  EF08  F01E         	goto	u3335
 11872  003C1A  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11873  003C1C  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11874  003C1E  6EDF               	movwf	indf2,c
 11875                           
 11876                           ;dc_motor.c: 76:  } else {
 11877  003C20  EF46  F01E         	goto	l302
 11878  003C24                     l3892:
 11879                           
 11880                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11881  003C24  EE20 F004          	lfsr	2,4
 11882  003C28  500F               	movf	setMotorPWM@m^0,w,c
 11883  003C2A  26D9               	addwf	fsr2l,f,c
 11884  003C2C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11885  003C2E  22DA               	addwfc	fsr2h,f,c
 11886  003C30  CFDE F011          	movff	postinc2,??_setMotorPWM
 11887  003C34  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11888  003C38  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11889  003C3C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11890  003C40  EE10 F004          	lfsr	1,4
 11891  003C44  500F               	movf	setMotorPWM@m^0,w,c
 11892  003C46  26E1               	addwf	fsr1l,f,c
 11893  003C48  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11894  003C4A  22E2               	addwfc	fsr1h,f,c
 11895  003C4C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11896  003C50  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11897  003C54  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11898  003C58  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11899  003C5C  50E7               	movf	indf1,w,c
 11900  003C5E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11901  003C60  EE10 F006          	lfsr	1,6
 11902  003C64  500F               	movf	setMotorPWM@m^0,w,c
 11903  003C66  26E1               	addwf	fsr1l,f,c
 11904  003C68  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11905  003C6A  22E2               	addwfc	fsr1h,f,c
 11906  003C6C  50E7               	movf	indf1,w,c
 11907  003C6E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11908  003C70  0E01               	movlw	1
 11909  003C72  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11910  003C74  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11911  003C76  EF3F  F01E         	goto	u3344
 11912  003C7A                     u3345:
 11913  003C7A  90D8               	bcf	status,0,c
 11914  003C7C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11915  003C7E                     u3344:
 11916  003C7E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11917  003C80  EF3D  F01E         	goto	u3345
 11918  003C84  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11919  003C86  0AFF               	xorlw	255
 11920  003C88  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11921  003C8A  6EDF               	movwf	indf2,c
 11922  003C8C                     l302:
 11923  003C8C  0012               	return		;funcret
 11924  003C8E                     __end_of_setMotorPWM:
 11925                           	callstack 0
 11926                           
 11927 ;; *************** function ___wmul *****************
 11928 ;; Defined at:
 11929 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  multiplier      2    0[COMRAM] unsigned int 
 11932 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  product         2    4[COMRAM] unsigned int 
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  2    0[COMRAM] unsigned int 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0, prodl, prodh
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11948 ;;Total ram usage:        6 bytes
 11949 ;; Hardware stack levels used: 1
 11950 ;; Hardware stack levels required when called: 1
 11951 ;; This function calls:
 11952 ;;		Nothing
 11953 ;; This function is called by:
 11954 ;;		_detect_color
 11955 ;;		_setMotorPWM
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text56
 11960  005A1C                     __ptext56:
 11961                           	callstack 0
 11962  005A1C                     ___wmul:
 11963                           	callstack 27
 11964  005A1C  5001               	movf	___wmul@multiplier^0,w,c
 11965  005A1E  0203               	mulwf	___wmul@multiplicand^0,c
 11966  005A20  CFF3 F005          	movff	prodl,___wmul@product
 11967  005A24  CFF4 F006          	movff	prodh,___wmul@product+1
 11968  005A28  5001               	movf	___wmul@multiplier^0,w,c
 11969  005A2A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11970  005A2C  50F3               	movf	243,w,c
 11971  005A2E  2606               	addwf	(___wmul@product+1)^0,f,c
 11972  005A30  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11973  005A32  0203               	mulwf	___wmul@multiplicand^0,c
 11974  005A34  50F3               	movf	243,w,c
 11975  005A36  2606               	addwf	(___wmul@product+1)^0,f,c
 11976  005A38  C005  F001         	movff	___wmul@product,?___wmul
 11977  005A3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11978  005A40  0012               	return		;funcret
 11979  005A42                     __end_of___wmul:
 11980                           	callstack 0
 11981                           
 11982 ;; *************** function ___awdiv *****************
 11983 ;; Defined at:
 11984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;  dividend        2    6[COMRAM] int 
 11987 ;;  divisor         2    8[COMRAM] int 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  quotient        2   12[COMRAM] int 
 11990 ;;  sign            1   11[COMRAM] unsigned char 
 11991 ;;  counter         1   10[COMRAM] unsigned char 
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  2    6[COMRAM] int 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12002 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12004 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12005 ;;Total ram usage:        8 bytes
 12006 ;; Hardware stack levels used: 1
 12007 ;; Hardware stack levels required when called: 1
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_setMotorPWM
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text57
 12016  004F9A                     __ptext57:
 12017                           	callstack 0
 12018  004F9A                     ___awdiv:
 12019                           	callstack 26
 12020  004F9A  0E00               	movlw	0
 12021  004F9C  6E0C               	movwf	___awdiv@sign^0,c
 12022  004F9E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 12023  004FA0  EFD6  F027         	goto	u3080
 12024  004FA4  EFD4  F027         	goto	u3081
 12025  004FA8                     u3081:
 12026  004FA8  EFDC  F027         	goto	l3778
 12027  004FAC                     u3080:
 12028  004FAC  6C09               	negf	___awdiv@divisor^0,c
 12029  004FAE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 12030  004FB0  B0D8               	btfsc	status,0,c
 12031  004FB2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 12032  004FB4  0E01               	movlw	1
 12033  004FB6  6E0C               	movwf	___awdiv@sign^0,c
 12034  004FB8                     l3778:
 12035  004FB8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 12036  004FBA  EFE3  F027         	goto	u3090
 12037  004FBE  EFE1  F027         	goto	u3091
 12038  004FC2                     u3091:
 12039  004FC2  EFE9  F027         	goto	l3784
 12040  004FC6                     u3090:
 12041  004FC6  6C07               	negf	___awdiv@dividend^0,c
 12042  004FC8  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 12043  004FCA  B0D8               	btfsc	status,0,c
 12044  004FCC  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 12045  004FCE  0E01               	movlw	1
 12046  004FD0  1A0C               	xorwf	___awdiv@sign^0,f,c
 12047  004FD2                     l3784:
 12048  004FD2  0E00               	movlw	0
 12049  004FD4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 12050  004FD6  0E00               	movlw	0
 12051  004FD8  6E0D               	movwf	___awdiv@quotient^0,c
 12052  004FDA  5009               	movf	___awdiv@divisor^0,w,c
 12053  004FDC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 12054  004FDE  B4D8               	btfsc	status,2,c
 12055  004FE0  EFF4  F027         	goto	u3101
 12056  004FE4  EFF6  F027         	goto	u3100
 12057  004FE8                     u3101:
 12058  004FE8  EF1E  F028         	goto	l3806
 12059  004FEC                     u3100:
 12060  004FEC  0E01               	movlw	1
 12061  004FEE  6E0B               	movwf	___awdiv@counter^0,c
 12062  004FF0  EFFE  F027         	goto	l3792
 12063  004FF4                     l3790:
 12064  004FF4  90D8               	bcf	status,0,c
 12065  004FF6  3609               	rlcf	___awdiv@divisor^0,f,c
 12066  004FF8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 12067  004FFA  2A0B               	incf	___awdiv@counter^0,f,c
 12068  004FFC                     l3792:
 12069  004FFC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 12070  004FFE  EF03  F028         	goto	u3111
 12071  005002  EF05  F028         	goto	u3110
 12072  005006                     u3111:
 12073  005006  EFFA  F027         	goto	l3790
 12074  00500A                     u3110:
 12075  00500A                     l3794:
 12076  00500A  90D8               	bcf	status,0,c
 12077  00500C  360D               	rlcf	___awdiv@quotient^0,f,c
 12078  00500E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 12079  005010  5009               	movf	___awdiv@divisor^0,w,c
 12080  005012  5C07               	subwf	___awdiv@dividend^0,w,c
 12081  005014  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12082  005016  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 12083  005018  A0D8               	btfss	status,0,c
 12084  00501A  EF11  F028         	goto	u3121
 12085  00501E  EF13  F028         	goto	u3120
 12086  005022                     u3121:
 12087  005022  EF18  F028         	goto	l3802
 12088  005026                     u3120:
 12089  005026  5009               	movf	___awdiv@divisor^0,w,c
 12090  005028  5E07               	subwf	___awdiv@dividend^0,f,c
 12091  00502A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12092  00502C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 12093  00502E  800D               	bsf	___awdiv@quotient^0,0,c
 12094  005030                     l3802:
 12095  005030  90D8               	bcf	status,0,c
 12096  005032  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 12097  005034  3209               	rrcf	___awdiv@divisor^0,f,c
 12098  005036  2E0B               	decfsz	___awdiv@counter^0,f,c
 12099  005038  EF05  F028         	goto	l3794
 12100  00503C                     l3806:
 12101  00503C  500C               	movf	___awdiv@sign^0,w,c
 12102  00503E  B4D8               	btfsc	status,2,c
 12103  005040  EF24  F028         	goto	u3131
 12104  005044  EF26  F028         	goto	u3130
 12105  005048                     u3131:
 12106  005048  EF2A  F028         	goto	l3810
 12107  00504C                     u3130:
 12108  00504C  6C0D               	negf	___awdiv@quotient^0,c
 12109  00504E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 12110  005050  B0D8               	btfsc	status,0,c
 12111  005052  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 12112  005054                     l3810:
 12113  005054  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12114  005058  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12115  00505C  0012               	return		;funcret
 12116  00505E                     __end_of___awdiv:
 12117                           	callstack 0
 12118                           
 12119 ;; *************** function _color_predict *****************
 12120 ;; Defined at:
 12121 ;;		line 250 in file "color.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  color           1    wreg     unsigned char 
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;  color           1  125[BANK0 ] unsigned char 
 12126 ;;  buf           100   25[BANK0 ] unsigned char [100]
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  1    wreg      void 
 12129 ;; Registers used:
 12130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12137 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12139 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12140 ;;Total ram usage:      101 bytes
 12141 ;; Hardware stack levels used: 1
 12142 ;; Hardware stack levels required when called: 9
 12143 ;; This function calls:
 12144 ;;		_sendStringSerial4
 12145 ;;		_sprintf
 12146 ;; This function is called by:
 12147 ;;		_color_data_collection
 12148 ;;		_main
 12149 ;;		_goback
 12150 ;;		_test_function
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           	psect	text58
 12155  00599C                     __ptext58:
 12156                           	callstack 0
 12157  00599C                     _color_predict:
 12158                           	callstack 20
 12159                           
 12160                           ;incstack = 0
 12161                           ;color_predict@color stored from wreg
 12162  00599C  0100               	movlb	0	; () banked
 12163  00599E  6FDD               	movwf	color_predict@color& (0+255),b
 12164  0059A0                     
 12165                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 12166  0059A0  0E79               	movlw	low color_predict@buf
 12167  0059A2  0100               	movlb	0	; () banked
 12168  0059A4  6F60               	movwf	sprintf@s& (0+255),b
 12169  0059A6  0E00               	movlw	high color_predict@buf
 12170  0059A8  6F61               	movwf	(sprintf@s+1)& (0+255),b
 12171  0059AA  0E1E               	movlw	low (STR_1+8)
 12172  0059AC  6F62               	movwf	sprintf@fmt& (0+255),b
 12173  0059AE  0E0E               	movlw	high (STR_1+8)
 12174  0059B0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 12175  0059B2  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 12176  0059B6  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12177  0059B8  EC7B  F02A         	call	_sprintf	;wreg free
 12178  0059BC                     
 12179                           ;color.c: 254:     sendStringSerial4(buf);
 12180  0059BC  0E79               	movlw	low color_predict@buf
 12181  0059BE  6E02               	movwf	sendStringSerial4@string^0,c
 12182  0059C0  0E00               	movlw	high color_predict@buf
 12183  0059C2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 12184  0059C4  ECB6  F02C         	call	_sendStringSerial4	;wreg free
 12185  0059C8  0012               	return		;funcret
 12186  0059CA                     __end_of_color_predict:
 12187                           	callstack 0
 12188                           
 12189 ;; *************** function _sprintf *****************
 12190 ;; Defined at:
 12191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;  s               2    0[BANK0 ] PTR unsigned char 
 12194 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 12195 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 12196 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 12197 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12198 ;;		 -> STR_2(6), STR_1(14), 
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;  f              11   14[BANK0 ] struct _IO_FILE
 12201 ;;  ap              2   12[BANK0 ] PTR void [1]
 12202 ;;		 -> ?_sprintf(2), 
 12203 ;;  ret             2    0        int 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  2    0[BANK0 ] int 
 12206 ;; Registers used:
 12207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12213 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12214 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12216 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12217 ;;Total ram usage:       25 bytes
 12218 ;; Hardware stack levels used: 1
 12219 ;; Hardware stack levels required when called: 8
 12220 ;; This function calls:
 12221 ;;		_vfprintf
 12222 ;; This function is called by:
 12223 ;;		_color_display
 12224 ;;		_color_predict
 12225 ;;		_action
 12226 ;;		_goback
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text59
 12231  0054F6                     __ptext59:
 12232                           	callstack 0
 12233  0054F6                     _sprintf:
 12234                           	callstack 20
 12235  0054F6  0E64               	movlw	low (?_sprintf+4)
 12236  0054F8  0100               	movlb	0	; () banked
 12237  0054FA  6F6C               	movwf	sprintf@ap& (0+255),b
 12238  0054FC  0E00               	movlw	high (?_sprintf+4)
 12239  0054FE  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 12240  005500  C060  F06E         	movff	sprintf@s,sprintf@f
 12241  005504  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 12242  005508                     
 12243                           ; BSR set to: 0
 12244  005508  0E00               	movlw	0
 12245  00550A  6F72               	movwf	(sprintf@f+4)& (0+255),b
 12246  00550C  0E00               	movlw	0
 12247  00550E  6F71               	movwf	(sprintf@f+3)& (0+255),b
 12248  005510                     
 12249                           ; BSR set to: 0
 12250  005510  0E00               	movlw	0
 12251  005512  6F78               	movwf	(sprintf@f+10)& (0+255),b
 12252  005514  0E00               	movlw	0
 12253  005516  6F77               	movwf	(sprintf@f+9)& (0+255),b
 12254  005518                     
 12255                           ; BSR set to: 0
 12256  005518  0E6E               	movlw	low sprintf@f
 12257  00551A  6E50               	movwf	vfprintf@fp^0,c
 12258  00551C  0E00               	movlw	high sprintf@f
 12259  00551E  6E51               	movwf	(vfprintf@fp+1)^0,c
 12260  005520  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 12261  005524  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 12262  005528  0E6C               	movlw	low sprintf@ap
 12263  00552A  6E54               	movwf	vfprintf@ap^0,c
 12264  00552C  0E00               	movlw	high sprintf@ap
 12265  00552E  6E55               	movwf	(vfprintf@ap+1)^0,c
 12266  005530  EC1B  F02A         	call	_vfprintf	;wreg free
 12267  005534  0100               	movlb	0	; () banked
 12268  005536  5171               	movf	(sprintf@f+3)& (0+255),w,b
 12269  005538  2560               	addwf	sprintf@s& (0+255),w,b
 12270  00553A  6ED9               	movwf	fsr2l,c
 12271  00553C  5172               	movf	(sprintf@f+4)& (0+255),w,b
 12272  00553E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 12273  005540  6EDA               	movwf	fsr2h,c
 12274  005542  0E00               	movlw	0
 12275  005544  6EDF               	movwf	indf2,c
 12276  005546                     
 12277                           ; BSR set to: 0
 12278  005546  0012               	return		;funcret
 12279  005548                     __end_of_sprintf:
 12280                           	callstack 0
 12281                           
 12282 ;; *************** function _vfprintf *****************
 12283 ;; Defined at:
 12284 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 12287 ;;		 -> sprintf@f(11), 
 12288 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 12289 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12290 ;;		 -> STR_2(6), STR_1(14), 
 12291 ;;  ap              2   83[COMRAM] PTR PTR void 
 12292 ;;		 -> sprintf@ap(2), 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 12295 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12296 ;;		 -> STR_2(6), STR_1(14), 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  2   79[COMRAM] int 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12306 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;Total ram usage:        8 bytes
 12311 ;; Hardware stack levels used: 1
 12312 ;; Hardware stack levels required when called: 7
 12313 ;; This function calls:
 12314 ;;		_vfpfcnvrt
 12315 ;; This function is called by:
 12316 ;;		_sprintf
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text60
 12321  005436                     __ptext60:
 12322                           	callstack 0
 12323  005436                     _vfprintf:
 12324                           	callstack 20
 12325  005436                     
 12326                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12327  005436  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12328  00543A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12329  00543E                     
 12330                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12331  00543E  0E00               	movlw	0
 12332  005440  0101               	movlb	1	; () banked
 12333  005442  6FF5               	movwf	(_nout+1)& (0+255),b
 12334  005444  0E00               	movlw	0
 12335  005446  6FF4               	movwf	_nout& (0+255),b
 12336                           
 12337                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12338  005448  EF39  F02A         	goto	l4366
 12339  00544C                     l4364:
 12340                           
 12341                           ; BSR set to: 1
 12342                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12343  00544C  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12344  005450  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12345  005454  0E56               	movlw	low vfprintf@cfmt
 12346  005456  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12347  005458  0E00               	movlw	high vfprintf@cfmt
 12348  00545A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12349  00545C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12350  005460  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12351  005464  ECFC  F01F         	call	_vfpfcnvrt	;wreg free
 12352  005468  5040               	movf	?_vfpfcnvrt^0,w,c
 12353  00546A  0101               	movlb	1	; () banked
 12354  00546C  27F4               	addwf	_nout& (0+255),f,b
 12355  00546E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12356  005470  23F5               	addwfc	(_nout+1)& (0+255),f,b
 12357  005472                     l4366:
 12358                           
 12359                           ; BSR set to: 1
 12360                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12361  005472  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12362  005476  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12363  00547A                     	if	0	;tblptru may be non-zero
 12364  00547A                     	endif
 12365  00547A                     	if	0	;tblptru may be non-zero
 12366  00547A                     	endif
 12367  00547A  0008               	tblrd		*
 12368  00547C  50F5               	movf	tablat,w,c
 12369  00547E  0900               	iorlw	0
 12370  005480  A4D8               	btfss	status,2,c
 12371  005482  EF45  F02A         	goto	u4101
 12372  005486  EF47  F02A         	goto	u4100
 12373  00548A                     u4101:
 12374  00548A  EF26  F02A         	goto	l4364
 12375  00548E                     u4100:
 12376  00548E                     
 12377                           ; BSR set to: 1
 12378                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12379  00548E  C1F4  F050         	movff	_nout,?_vfprintf
 12380  005492  C1F5  F051         	movff	_nout+1,?_vfprintf+1
 12381  005496                     
 12382                           ; BSR set to: 1
 12383  005496  0012               	return		;funcret
 12384  005498                     __end_of_vfprintf:
 12385                           	callstack 0
 12386                           
 12387 ;; *************** function _vfpfcnvrt *****************
 12388 ;; Defined at:
 12389 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12392 ;;		 -> sprintf@f(11), 
 12393 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12394 ;;		 -> vfprintf@cfmt(2), 
 12395 ;;  ap              2   67[COMRAM] PTR PTR void 
 12396 ;;		 -> sprintf@ap(2), 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  ll              8   71[COMRAM] long long 
 12399 ;;  llu             8    0        unsigned long long 
 12400 ;;  f               4    0        unsigned long long 
 12401 ;;  vp              3    0        PTR void 
 12402 ;;  ct              3    0        unsigned char [3]
 12403 ;;  cp              3    0        PTR unsigned char 
 12404 ;;  i               2    0        int 
 12405 ;;  done            2    0        int 
 12406 ;;  c               1    0        unsigned char 
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  2   63[COMRAM] int 
 12409 ;; Registers used:
 12410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12416 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12417 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12419 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12420 ;;Total ram usage:       16 bytes
 12421 ;; Hardware stack levels used: 1
 12422 ;; Hardware stack levels required when called: 6
 12423 ;; This function calls:
 12424 ;;		_dtoa
 12425 ;;		_fputc
 12426 ;; This function is called by:
 12427 ;;		_vfprintf
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text61
 12432  003FF8                     __ptext61:
 12433                           	callstack 0
 12434  003FF8                     _vfpfcnvrt:
 12435                           	callstack 20
 12436  003FF8                     
 12437                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12438  003FF8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12439  003FFC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12440  004000  CFDE FFF6          	movff	postinc2,tblptrl
 12441  004004  CFDD FFF7          	movff	postdec2,tblptrh
 12442  004008                     	if	0	;tblptru may be non-zero
 12443  004008                     	endif
 12444  004008                     	if	0	;tblptru may be non-zero
 12445  004008                     	endif
 12446  004008  0008               	tblrd		*
 12447  00400A  50F5               	movf	tablat,w,c
 12448  00400C  0A25               	xorlw	37
 12449  00400E  A4D8               	btfss	status,2,c
 12450  004010  EF0C  F020         	goto	u3741
 12451  004014  EF0E  F020         	goto	u3740
 12452  004018                     u3741:
 12453  004018  EFBA  F020         	goto	l4130
 12454  00401C                     u3740:
 12455  00401C                     
 12456                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12457  00401C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12458  004020  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12459  004024  2ADE               	incf	postinc2,f,c
 12460  004026  0E00               	movlw	0
 12461  004028  22DD               	addwfc	postdec2,f,c
 12462  00402A                     
 12463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12464  00402A  0E00               	movlw	0
 12465  00402C  0101               	movlb	1	; () banked
 12466  00402E  6FF7               	movwf	(_width+1)& (0+255),b
 12467  004030  0E00               	movlw	0
 12468  004032  6FF6               	movwf	_width& (0+255),b
 12469  004034  C1F6  F0F8         	movff	_width,_flags
 12470  004038  C1F7  F0F9         	movff	_width+1,_flags+1
 12471  00403C                     
 12472                           ; BSR set to: 1
 12473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12474  00403C  69F8               	setf	_prec& (0+255),b
 12475  00403E  69F9               	setf	(_prec+1)& (0+255),b
 12476  004040                     
 12477                           ; BSR set to: 1
 12478                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12479  004040  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12480  004044  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12481  004048  CFDE FFF6          	movff	postinc2,tblptrl
 12482  00404C  CFDD FFF7          	movff	postdec2,tblptrh
 12483  004050                     	if	0	;tblptru may be non-zero
 12484  004050                     	endif
 12485  004050                     	if	0	;tblptru may be non-zero
 12486  004050                     	endif
 12487  004050  0008               	tblrd		*
 12488  004052  50F5               	movf	tablat,w,c
 12489  004054  0A64               	xorlw	100
 12490  004056  B4D8               	btfsc	status,2,c
 12491  004058  EF30  F020         	goto	u3751
 12492  00405C  EF32  F020         	goto	u3750
 12493  004060                     u3751:
 12494  004060  EF44  F020         	goto	l4108
 12495  004064                     u3750:
 12496  004064                     
 12497                           ; BSR set to: 1
 12498  004064  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12499  004068  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12500  00406C  CFDE FFF6          	movff	postinc2,tblptrl
 12501  004070  CFDD FFF7          	movff	postdec2,tblptrh
 12502  004074                     	if	0	;tblptru may be non-zero
 12503  004074                     	endif
 12504  004074                     	if	0	;tblptru may be non-zero
 12505  004074                     	endif
 12506  004074  0008               	tblrd		*
 12507  004076  50F5               	movf	tablat,w,c
 12508  004078  0A69               	xorlw	105
 12509  00407A  A4D8               	btfss	status,2,c
 12510  00407C  EF42  F020         	goto	u3761
 12511  004080  EF44  F020         	goto	u3760
 12512  004084                     u3761:
 12513  004084  EF84  F020         	goto	l4114
 12514  004088                     u3760:
 12515  004088                     l4108:
 12516                           
 12517                           ; BSR set to: 1
 12518                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12519  004088  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12520  00408C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12521  004090  2ADE               	incf	postinc2,f,c
 12522  004092  0E00               	movlw	0
 12523  004094  22DD               	addwfc	postdec2,f,c
 12524                           
 12525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12526  004096  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12527  00409A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12528  00409E  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12529  0040A2  0E02               	movlw	2
 12530  0040A4  26DE               	addwf	postinc2,f,c
 12531  0040A6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12532  0040AA  0E00               	movlw	0
 12533  0040AC  22DD               	addwfc	postdec2,f,c
 12534  0040AE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12535  0040B2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12536  0040B6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12537  0040BA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12538  0040BE  0E00               	movlw	0
 12539  0040C0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12540  0040C2  0EFF               	movlw	-1
 12541  0040C4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12542  0040C6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12543  0040C8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12544  0040CA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12545  0040CC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12546  0040CE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12547  0040D0                     
 12548                           ; BSR set to: 1
 12549                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12550  0040D0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12551  0040D4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12552  0040D8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12553  0040DC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12554  0040E0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12555  0040E4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12556  0040E8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12557  0040EC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12558  0040F0  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12559  0040F4  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12560  0040F8  EC99  F018         	call	_dtoa	;wreg free
 12561  0040FC  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12562  004100  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12563  004104  EFD5  F020         	goto	l1534
 12564  004108                     l4114:
 12565                           
 12566                           ; BSR set to: 1
 12567                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12568  004108  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12569  00410C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12570  004110  CFDE FFF6          	movff	postinc2,tblptrl
 12571  004114  CFDD FFF7          	movff	postdec2,tblptrh
 12572  004118                     	if	0	;tblptru may be non-zero
 12573  004118                     	endif
 12574  004118                     	if	0	;tblptru may be non-zero
 12575  004118                     	endif
 12576  004118  0008               	tblrd		*
 12577  00411A  50F5               	movf	tablat,w,c
 12578  00411C  0A25               	xorlw	37
 12579  00411E  A4D8               	btfss	status,2,c
 12580  004120  EF94  F020         	goto	u3771
 12581  004124  EF96  F020         	goto	u3770
 12582  004128                     u3771:
 12583  004128  EFAD  F020         	goto	l4124
 12584  00412C                     u3770:
 12585  00412C                     
 12586                           ; BSR set to: 1
 12587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12588  00412C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12589  004130  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12590  004134  2ADE               	incf	postinc2,f,c
 12591  004136  0E00               	movlw	0
 12592  004138  22DD               	addwfc	postdec2,f,c
 12593  00413A                     
 12594                           ; BSR set to: 1
 12595                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12596  00413A  0E00               	movlw	0
 12597  00413C  6E02               	movwf	(fputc@c+1)^0,c
 12598  00413E  0E25               	movlw	37
 12599  004140  6E01               	movwf	fputc@c^0,c
 12600  004142  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12601  004146  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12602  00414A  ECA2  F026         	call	_fputc	;wreg free
 12603  00414E                     l4120:
 12604                           
 12605                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12606  00414E  0E00               	movlw	0
 12607  004150  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12608  004152  0E01               	movlw	1
 12609  004154  6E40               	movwf	?_vfpfcnvrt^0,c
 12610  004156  EFD5  F020         	goto	l1534
 12611  00415A                     l4124:
 12612                           
 12613                           ; BSR set to: 1
 12614                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12615  00415A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12616  00415E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12617  004162  2ADE               	incf	postinc2,f,c
 12618  004164  0E00               	movlw	0
 12619  004166  22DD               	addwfc	postdec2,f,c
 12620  004168                     
 12621                           ; BSR set to: 1
 12622                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12623  004168  0E00               	movlw	0
 12624  00416A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12625  00416C  0E00               	movlw	0
 12626  00416E  6E40               	movwf	?_vfpfcnvrt^0,c
 12627  004170  EFD5  F020         	goto	l1534
 12628  004174                     l4130:
 12629                           
 12630                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12631  004174  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12632  004178  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12633  00417C  CFDE FFF6          	movff	postinc2,tblptrl
 12634  004180  CFDD FFF7          	movff	postdec2,tblptrh
 12635  004184                     	if	0	;tblptru may be non-zero
 12636  004184                     	endif
 12637  004184                     	if	0	;tblptru may be non-zero
 12638  004184                     	endif
 12639  004184  0008               	tblrd		*
 12640  004186  50F5               	movf	tablat,w,c
 12641  004188  6E01               	movwf	fputc@c^0,c
 12642  00418A  6A02               	clrf	(fputc@c+1)^0,c
 12643  00418C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12644  004190  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12645  004194  ECA2  F026         	call	_fputc	;wreg free
 12646  004198                     
 12647                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12648  004198  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12649  00419C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12650  0041A0  2ADE               	incf	postinc2,f,c
 12651  0041A2  0E00               	movlw	0
 12652  0041A4  22DD               	addwfc	postdec2,f,c
 12653  0041A6  EFA7  F020         	goto	l4120
 12654  0041AA                     l1534:
 12655  0041AA  0012               	return		;funcret
 12656  0041AC                     __end_of_vfpfcnvrt:
 12657                           	callstack 0
 12658                           
 12659 ;; *************** function _dtoa *****************
 12660 ;; Defined at:
 12661 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12664 ;;		 -> sprintf@f(11), 
 12665 ;;  d               8   29[COMRAM] long long 
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;  n               8   53[COMRAM] long long 
 12668 ;;  i               2   61[COMRAM] int 
 12669 ;;  s               2   51[COMRAM] int 
 12670 ;;  w               2   49[COMRAM] int 
 12671 ;;  p               2   47[COMRAM] int 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  2   27[COMRAM] int 
 12674 ;; Registers used:
 12675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 0/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12681 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12682 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12683 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12684 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12685 ;;Total ram usage:       36 bytes
 12686 ;; Hardware stack levels used: 1
 12687 ;; Hardware stack levels required when called: 5
 12688 ;; This function calls:
 12689 ;;		___aodiv
 12690 ;;		___aomod
 12691 ;;		_abs
 12692 ;;		_pad
 12693 ;; This function is called by:
 12694 ;;		_vfpfcnvrt
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           	psect	text62
 12699  003132                     __ptext62:
 12700                           	callstack 0
 12701  003132                     _dtoa:
 12702                           	callstack 20
 12703  003132                     
 12704                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12705  003132  C01E  F036         	movff	dtoa@d,dtoa@n
 12706  003136  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12707  00313A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12708  00313E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12709  003142  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12710  003146  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12711  00314A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12712  00314E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12713  003152                     
 12714                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12715  003152  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12716  003154  EFAE  F018         	goto	u3141
 12717  003158  EFB1  F018         	goto	u3140
 12718  00315C                     u3141:
 12719  00315C  0E01               	movlw	1
 12720  00315E  EFB2  F018         	goto	u3150
 12721  003162                     u3140:
 12722  003162  0E00               	movlw	0
 12723  003164                     u3150:
 12724  003164  6E34               	movwf	dtoa@s^0,c
 12725  003166  6A35               	clrf	(dtoa@s+1)^0,c
 12726                           
 12727                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12728  003168  5034               	movf	dtoa@s^0,w,c
 12729  00316A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12730  00316C  B4D8               	btfsc	status,2,c
 12731  00316E  EFBB  F018         	goto	u3161
 12732  003172  EFBD  F018         	goto	u3160
 12733  003176                     u3161:
 12734  003176  EFCD  F018         	goto	l3820
 12735  00317A                     u3160:
 12736  00317A                     
 12737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12738  00317A  1E3D               	comf	(dtoa@n+7)^0,f,c
 12739  00317C  1E3C               	comf	(dtoa@n+6)^0,f,c
 12740  00317E  1E3B               	comf	(dtoa@n+5)^0,f,c
 12741  003180  1E3A               	comf	(dtoa@n+4)^0,f,c
 12742  003182  1E39               	comf	(dtoa@n+3)^0,f,c
 12743  003184  1E38               	comf	(dtoa@n+2)^0,f,c
 12744  003186  1E37               	comf	(dtoa@n+1)^0,f,c
 12745  003188  6C36               	negf	dtoa@n^0,c
 12746  00318A  0E00               	movlw	0
 12747  00318C  2237               	addwfc	(dtoa@n+1)^0,f,c
 12748  00318E  2238               	addwfc	(dtoa@n+2)^0,f,c
 12749  003190  2239               	addwfc	(dtoa@n+3)^0,f,c
 12750  003192  223A               	addwfc	(dtoa@n+4)^0,f,c
 12751  003194  223B               	addwfc	(dtoa@n+5)^0,f,c
 12752  003196  223C               	addwfc	(dtoa@n+6)^0,f,c
 12753  003198  223D               	addwfc	(dtoa@n+7)^0,f,c
 12754  00319A                     l3820:
 12755                           
 12756                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12757  00319A  0101               	movlb	1	; () banked
 12758  00319C  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12759  00319E  EFD3  F018         	goto	u3171
 12760  0031A2  EFD5  F018         	goto	u3170
 12761  0031A6                     u3171:
 12762  0031A6  EFD7  F018         	goto	l3824
 12763  0031AA                     u3170:
 12764  0031AA                     
 12765                           ; BSR set to: 1
 12766                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12767  0031AA  0100               	movlb	0	; () banked
 12768  0031AC  93F8               	bcf	_flags& (0+255),1,b
 12769  0031AE                     l3824:
 12770                           
 12771                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12772  0031AE  0101               	movlb	1	; () banked
 12773  0031B0  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12774  0031B2  EFE5  F018         	goto	u3180
 12775  0031B6  51F9               	movf	(_prec+1)& (0+255),w,b
 12776  0031B8  E106               	bnz	u3181
 12777  0031BA  05F8               	decf	_prec& (0+255),w,b
 12778  0031BC  B0D8               	btfsc	status,0,c
 12779  0031BE  EFE3  F018         	goto	u3181
 12780  0031C2  EFE5  F018         	goto	u3180
 12781  0031C6                     u3181:
 12782  0031C6  EFEB  F018         	goto	l1507
 12783  0031CA                     u3180:
 12784  0031CA                     
 12785                           ; BSR set to: 1
 12786  0031CA  0E00               	movlw	0
 12787  0031CC  6E31               	movwf	(dtoa@p+1)^0,c
 12788  0031CE  0E01               	movlw	1
 12789  0031D0  6E30               	movwf	dtoa@p^0,c
 12790  0031D2  EFEF  F018         	goto	l1509
 12791  0031D6                     l1507:
 12792                           
 12793                           ; BSR set to: 1
 12794  0031D6  C1F8  F030         	movff	_prec,dtoa@p
 12795  0031DA  C1F9  F031         	movff	_prec+1,dtoa@p+1
 12796  0031DE                     l1509:
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12800  0031DE  C1F6  F032         	movff	_width,dtoa@w
 12801  0031E2  C1F7  F033         	movff	_width+1,dtoa@w+1
 12802  0031E6                     
 12803                           ; BSR set to: 1
 12804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12805  0031E6  5034               	movf	dtoa@s^0,w,c
 12806  0031E8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12807  0031EA  A4D8               	btfss	status,2,c
 12808  0031EC  EFFA  F018         	goto	u3191
 12809  0031F0  EFFC  F018         	goto	u3190
 12810  0031F4                     u3191:
 12811  0031F4  EF04  F019         	goto	l3832
 12812  0031F8                     u3190:
 12813  0031F8                     
 12814                           ; BSR set to: 1
 12815  0031F8  0100               	movlb	0	; () banked
 12816  0031FA  A5F8               	btfss	_flags& (0+255),2,b
 12817  0031FC  EF02  F019         	goto	u3201
 12818  003200  EF04  F019         	goto	u3200
 12819  003204                     u3201:
 12820  003204  EF07  F019         	goto	l3834
 12821  003208                     u3200:
 12822  003208                     l3832:
 12823                           
 12824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12825  003208  0632               	decf	dtoa@w^0,f,c
 12826  00320A  A0D8               	btfss	status,0,c
 12827  00320C  0633               	decf	(dtoa@w+1)^0,f,c
 12828  00320E                     l3834:
 12829                           
 12830                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12831  00320E  0E00               	movlw	0
 12832  003210  6E3F               	movwf	(dtoa@i+1)^0,c
 12833  003212  0E1F               	movlw	31
 12834  003214  6E3E               	movwf	dtoa@i^0,c
 12835  003216                     
 12836                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12837  003216  0E00               	movlw	0
 12838  003218  0102               	movlb	2	; () banked
 12839  00321A  6FE8               	movwf	(_dbuf+31)& (0+255),b
 12840                           
 12841                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12842  00321C  EF8C  F019         	goto	l3848
 12843  003220                     l3838:
 12844                           
 12845                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12846  003220  063E               	decf	dtoa@i^0,f,c
 12847  003222  A0D8               	btfss	status,0,c
 12848  003224  063F               	decf	(dtoa@i+1)^0,f,c
 12849  003226                     
 12850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12851  003226  0EC9               	movlw	low _dbuf
 12852  003228  243E               	addwf	dtoa@i^0,w,c
 12853  00322A  6ED9               	movwf	fsr2l,c
 12854  00322C  0E02               	movlw	high _dbuf
 12855  00322E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12856  003230  6EDA               	movwf	fsr2h,c
 12857  003232  C036  F001         	movff	dtoa@n,___aomod@dividend
 12858  003236  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12859  00323A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12860  00323E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12861  003242  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12862  003246  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12863  00324A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12864  00324E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12865  003252  0E0A               	movlw	10
 12866  003254  6E09               	movwf	___aomod@divisor^0,c
 12867  003256  0E00               	movlw	0
 12868  003258  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12869  00325A  0E00               	movlw	0
 12870  00325C  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12871  00325E  0E00               	movlw	0
 12872  003260  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12873  003262  0E00               	movlw	0
 12874  003264  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12875  003266  0E00               	movlw	0
 12876  003268  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12877  00326A  0E00               	movlw	0
 12878  00326C  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12879  00326E  0E00               	movlw	0
 12880  003270  6E10               	movwf	(___aomod@divisor+7)^0,c
 12881  003272  ECED  F023         	call	___aomod	;wreg free
 12882  003276  C001  F026         	movff	?___aomod,??_dtoa
 12883  00327A  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12884  00327E  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12885  003282  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12886  003286  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12887  00328A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12888  00328E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12889  003292  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12890  003296  C026  F013         	movff	??_dtoa,abs@a
 12891  00329A  C028  F014         	movff	??_dtoa+2,abs@a+1
 12892  00329E  EC0B  F02C         	call	_abs	;wreg free
 12893  0032A2  5013               	movf	?_abs^0,w,c
 12894  0032A4  0F30               	addlw	48
 12895  0032A6  6EDF               	movwf	indf2,c
 12896  0032A8                     
 12897                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12898  0032A8  0630               	decf	dtoa@p^0,f,c
 12899  0032AA  A0D8               	btfss	status,0,c
 12900  0032AC  0631               	decf	(dtoa@p+1)^0,f,c
 12901  0032AE                     
 12902                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12903  0032AE  0632               	decf	dtoa@w^0,f,c
 12904  0032B0  A0D8               	btfss	status,0,c
 12905  0032B2  0633               	decf	(dtoa@w+1)^0,f,c
 12906  0032B4                     
 12907                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12908  0032B4  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12909  0032B8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12910  0032BC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12911  0032C0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12912  0032C4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12913  0032C8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12914  0032CC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12915  0032D0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12916  0032D4  0E0A               	movlw	10
 12917  0032D6  6E09               	movwf	___aodiv@divisor^0,c
 12918  0032D8  0E00               	movlw	0
 12919  0032DA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12920  0032DC  0E00               	movlw	0
 12921  0032DE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12922  0032E0  0E00               	movlw	0
 12923  0032E2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12924  0032E4  0E00               	movlw	0
 12925  0032E6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12926  0032E8  0E00               	movlw	0
 12927  0032EA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12928  0032EC  0E00               	movlw	0
 12929  0032EE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12930  0032F0  0E00               	movlw	0
 12931  0032F2  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12932  0032F4  EC29  F023         	call	___aodiv	;wreg free
 12933  0032F8  C001  F036         	movff	?___aodiv,dtoa@n
 12934  0032FC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12935  003300  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12936  003304  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12937  003308  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12938  00330C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12939  003310  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12940  003314  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12941  003318                     l3848:
 12942                           
 12943                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12944  003318  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12945  00331A  EF97  F019         	goto	u3211
 12946  00331E  503F               	movf	(dtoa@i+1)^0,w,c
 12947  003320  E108               	bnz	u3210
 12948  003322  043E               	decf	dtoa@i^0,w,c
 12949  003324  A0D8               	btfss	status,0,c
 12950  003326  EF97  F019         	goto	u3211
 12951  00332A  EF99  F019         	goto	u3210
 12952  00332E                     u3211:
 12953  00332E  EFCA  F019         	goto	l3858
 12954  003332                     u3210:
 12955  003332  5036               	movf	dtoa@n^0,w,c
 12956  003334  1037               	iorwf	(dtoa@n+1)^0,w,c
 12957  003336  1038               	iorwf	(dtoa@n+2)^0,w,c
 12958  003338  1039               	iorwf	(dtoa@n+3)^0,w,c
 12959  00333A  103A               	iorwf	(dtoa@n+4)^0,w,c
 12960  00333C  103B               	iorwf	(dtoa@n+5)^0,w,c
 12961  00333E  103C               	iorwf	(dtoa@n+6)^0,w,c
 12962  003340  103D               	iorwf	(dtoa@n+7)^0,w,c
 12963  003342  A4D8               	btfss	status,2,c
 12964  003344  EFA6  F019         	goto	u3221
 12965  003348  EFA8  F019         	goto	u3220
 12966  00334C                     u3221:
 12967  00334C  EF10  F019         	goto	l3838
 12968  003350                     u3220:
 12969  003350  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12970  003352  EFB5  F019         	goto	u3230
 12971  003356  5031               	movf	(dtoa@p+1)^0,w,c
 12972  003358  E106               	bnz	u3231
 12973  00335A  0430               	decf	dtoa@p^0,w,c
 12974  00335C  B0D8               	btfsc	status,0,c
 12975  00335E  EFB3  F019         	goto	u3231
 12976  003362  EFB5  F019         	goto	u3230
 12977  003366                     u3231:
 12978  003366  EF10  F019         	goto	l3838
 12979  00336A                     u3230:
 12980  00336A  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12981  00336C  EFC0  F019         	goto	u3241
 12982  003370  5033               	movf	(dtoa@w+1)^0,w,c
 12983  003372  E108               	bnz	u3240
 12984  003374  0432               	decf	dtoa@w^0,w,c
 12985  003376  A0D8               	btfss	status,0,c
 12986  003378  EFC0  F019         	goto	u3241
 12987  00337C  EFC2  F019         	goto	u3240
 12988  003380                     u3241:
 12989  003380  EFCA  F019         	goto	l3858
 12990  003384                     u3240:
 12991  003384  0100               	movlb	0	; () banked
 12992  003386  B3F8               	btfsc	_flags& (0+255),1,b
 12993  003388  EFC8  F019         	goto	u3251
 12994  00338C  EFCA  F019         	goto	u3250
 12995  003390                     u3251:
 12996  003390  EF10  F019         	goto	l3838
 12997  003394                     u3250:
 12998  003394                     l3858:
 12999                           
 13000                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 13001  003394  5034               	movf	dtoa@s^0,w,c
 13002  003396  1035               	iorwf	(dtoa@s+1)^0,w,c
 13003  003398  A4D8               	btfss	status,2,c
 13004  00339A  EFD1  F019         	goto	u3261
 13005  00339E  EFD3  F019         	goto	u3260
 13006  0033A2                     u3261:
 13007  0033A2  EFDB  F019         	goto	l3862
 13008  0033A6                     u3260:
 13009  0033A6  0100               	movlb	0	; () banked
 13010  0033A8  A5F8               	btfss	_flags& (0+255),2,b
 13011  0033AA  EFD9  F019         	goto	u3271
 13012  0033AE  EFDB  F019         	goto	u3270
 13013  0033B2                     u3271:
 13014  0033B2  EFF9  F019         	goto	l3872
 13015  0033B6                     u3270:
 13016  0033B6                     l3862:
 13017                           
 13018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 13019  0033B6  063E               	decf	dtoa@i^0,f,c
 13020  0033B8  A0D8               	btfss	status,0,c
 13021  0033BA  063F               	decf	(dtoa@i+1)^0,f,c
 13022  0033BC                     
 13023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 13024  0033BC  5034               	movf	dtoa@s^0,w,c
 13025  0033BE  1035               	iorwf	(dtoa@s+1)^0,w,c
 13026  0033C0  A4D8               	btfss	status,2,c
 13027  0033C2  EFE5  F019         	goto	u3281
 13028  0033C6  EFE7  F019         	goto	u3280
 13029  0033CA                     u3281:
 13030  0033CA  EFED  F019         	goto	l3868
 13031  0033CE                     u3280:
 13032  0033CE  0E00               	movlw	0
 13033  0033D0  6E2F               	movwf	(_dtoa$2895+1)^0,c
 13034  0033D2  0E2B               	movlw	43
 13035  0033D4  6E2E               	movwf	_dtoa$2895^0,c
 13036  0033D6  EFF1  F019         	goto	l3870
 13037  0033DA                     l3868:
 13038  0033DA  0E00               	movlw	0
 13039  0033DC  6E2F               	movwf	(_dtoa$2895+1)^0,c
 13040  0033DE  0E2D               	movlw	45
 13041  0033E0  6E2E               	movwf	_dtoa$2895^0,c
 13042  0033E2                     l3870:
 13043  0033E2  0EC9               	movlw	low _dbuf
 13044  0033E4  243E               	addwf	dtoa@i^0,w,c
 13045  0033E6  6ED9               	movwf	fsr2l,c
 13046  0033E8  0E02               	movlw	high _dbuf
 13047  0033EA  203F               	addwfc	(dtoa@i+1)^0,w,c
 13048  0033EC  6EDA               	movwf	fsr2h,c
 13049  0033EE  C02E  FFDF         	movff	_dtoa$2895,indf2
 13050  0033F2                     l3872:
 13051                           
 13052                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 13053  0033F2  C01C  F011         	movff	dtoa@fp,pad@fp
 13054  0033F6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13055  0033FA  0EC9               	movlw	low _dbuf
 13056  0033FC  243E               	addwf	dtoa@i^0,w,c
 13057  0033FE  6E13               	movwf	pad@buf^0,c
 13058  003400  0E02               	movlw	high _dbuf
 13059  003402  203F               	addwfc	(dtoa@i+1)^0,w,c
 13060  003404  6E14               	movwf	(pad@buf+1)^0,c
 13061  003406  C032  F015         	movff	dtoa@w,pad@p
 13062  00340A  C033  F016         	movff	dtoa@w+1,pad@p+1
 13063  00340E  EC6A  F027         	call	_pad	;wreg free
 13064  003412  C011  F01C         	movff	?_pad,?_dtoa
 13065  003416  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13066  00341A  0012               	return		;funcret
 13067  00341C                     __end_of_dtoa:
 13068                           	callstack 0
 13069                           
 13070 ;; *************** function _pad *****************
 13071 ;; Defined at:
 13072 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13075 ;;		 -> sprintf@f(11), 
 13076 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13077 ;;		 -> dbuf(32), 
 13078 ;;  p               2   20[COMRAM] int 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;  w               2   25[COMRAM] int 
 13081 ;;  i               2   23[COMRAM] int 
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  2   16[COMRAM] int 
 13084 ;; Registers used:
 13085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13094 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13095 ;;Total ram usage:       11 bytes
 13096 ;; Hardware stack levels used: 1
 13097 ;; Hardware stack levels required when called: 4
 13098 ;; This function calls:
 13099 ;;		_fputc
 13100 ;;		_fputs
 13101 ;;		_strlen
 13102 ;; This function is called by:
 13103 ;;		_dtoa
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           	psect	text63
 13108  004ED4                     __ptext63:
 13109                           	callstack 0
 13110  004ED4                     _pad:
 13111                           	callstack 20
 13112  004ED4                     
 13113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13114  004ED4  0100               	movlb	0	; () banked
 13115  004ED6  A1F8               	btfss	_flags& (0+255),0,b
 13116  004ED8  EF70  F027         	goto	u3031
 13117  004EDC  EF72  F027         	goto	u3030
 13118  004EE0                     u3031:
 13119  004EE0  EF7C  F027         	goto	l3742
 13120  004EE4                     u3030:
 13121  004EE4                     
 13122                           ; BSR set to: 0
 13123                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13124  004EE4  C013  F00A         	movff	pad@buf,fputs@s
 13125  004EE8  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13126  004EEC  C011  F00C         	movff	pad@fp,fputs@fp
 13127  004EF0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13128  004EF4  EC67  F02B         	call	_fputs	;wreg free
 13129  004EF8                     l3742:
 13130                           
 13131                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13132  004EF8  BE16               	btfsc	(pad@p+1)^0,7,c
 13133  004EFA  EF81  F027         	goto	u3041
 13134  004EFE  EF83  F027         	goto	u3040
 13135  004F02                     u3041:
 13136  004F02  EF89  F027         	goto	l3746
 13137  004F06                     u3040:
 13138  004F06  C015  F01A         	movff	pad@p,pad@w
 13139  004F0A  C016  F01B         	movff	pad@p+1,pad@w+1
 13140  004F0E  EF8D  F027         	goto	l1496
 13141  004F12                     l3746:
 13142  004F12  0E00               	movlw	0
 13143  004F14  6E1B               	movwf	(pad@w+1)^0,c
 13144  004F16  0E00               	movlw	0
 13145  004F18  6E1A               	movwf	pad@w^0,c
 13146  004F1A                     l1496:
 13147                           
 13148                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13149  004F1A  0E00               	movlw	0
 13150  004F1C  6E19               	movwf	(pad@i+1)^0,c
 13151  004F1E  0E00               	movlw	0
 13152  004F20  6E18               	movwf	pad@i^0,c
 13153                           
 13154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13155  004F22  EF9F  F027         	goto	l3752
 13156  004F26                     l3748:
 13157                           
 13158                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13159  004F26  0E00               	movlw	0
 13160  004F28  6E02               	movwf	(fputc@c+1)^0,c
 13161  004F2A  0E20               	movlw	32
 13162  004F2C  6E01               	movwf	fputc@c^0,c
 13163  004F2E  C011  F003         	movff	pad@fp,fputc@fp
 13164  004F32  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13165  004F36  ECA2  F026         	call	_fputc	;wreg free
 13166  004F3A                     
 13167                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13168  004F3A  4A18               	infsnz	pad@i^0,f,c
 13169  004F3C  2A19               	incf	(pad@i+1)^0,f,c
 13170  004F3E                     l3752:
 13171                           
 13172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13173  004F3E  501A               	movf	pad@w^0,w,c
 13174  004F40  5C18               	subwf	pad@i^0,w,c
 13175  004F42  5019               	movf	(pad@i+1)^0,w,c
 13176  004F44  0A80               	xorlw	128
 13177  004F46  6E17               	movwf	??_pad^0,c
 13178  004F48  501B               	movf	(pad@w+1)^0,w,c
 13179  004F4A  0A80               	xorlw	128
 13180  004F4C  5817               	subwfb	??_pad^0,w,c
 13181  004F4E  A0D8               	btfss	status,0,c
 13182  004F50  EFAC  F027         	goto	u3051
 13183  004F54  EFAE  F027         	goto	u3050
 13184  004F58                     u3051:
 13185  004F58  EF93  F027         	goto	l3748
 13186  004F5C                     u3050:
 13187  004F5C                     
 13188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13189  004F5C  0100               	movlb	0	; () banked
 13190  004F5E  B1F8               	btfsc	_flags& (0+255),0,b
 13191  004F60  EFB4  F027         	goto	u3061
 13192  004F64  EFB6  F027         	goto	u3060
 13193  004F68                     u3061:
 13194  004F68  EFC0  F027         	goto	l3756
 13195  004F6C                     u3060:
 13196  004F6C                     
 13197                           ; BSR set to: 0
 13198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13199  004F6C  C013  F00A         	movff	pad@buf,fputs@s
 13200  004F70  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13201  004F74  C011  F00C         	movff	pad@fp,fputs@fp
 13202  004F78  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13203  004F7C  EC67  F02B         	call	_fputs	;wreg free
 13204  004F80                     l3756:
 13205                           
 13206                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13207  004F80  C013  F001         	movff	pad@buf,strlen@s
 13208  004F84  C014  F002         	movff	pad@buf+1,strlen@s+1
 13209  004F88  EC81  F02C         	call	_strlen	;wreg free
 13210  004F8C  501A               	movf	pad@w^0,w,c
 13211  004F8E  2401               	addwf	?_strlen^0,w,c
 13212  004F90  6E11               	movwf	?_pad^0,c
 13213  004F92  501B               	movf	(pad@w+1)^0,w,c
 13214  004F94  2002               	addwfc	(?_strlen+1)^0,w,c
 13215  004F96  6E12               	movwf	(?_pad+1)^0,c
 13216  004F98  0012               	return		;funcret
 13217  004F9A                     __end_of_pad:
 13218                           	callstack 0
 13219                           
 13220 ;; *************** function _strlen *****************
 13221 ;; Defined at:
 13222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13225 ;;		 -> dbuf(32), 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13228 ;;		 -> dbuf(32), 
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  2    0[COMRAM] unsigned int 
 13231 ;; Registers used:
 13232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13233 ;; Tracked objects:
 13234 ;;		On entry : 0/0
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13242 ;;Total ram usage:        4 bytes
 13243 ;; Hardware stack levels used: 1
 13244 ;; Hardware stack levels required when called: 1
 13245 ;; This function calls:
 13246 ;;		Nothing
 13247 ;; This function is called by:
 13248 ;;		_pad
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text64
 13253  005902                     __ptext64:
 13254                           	callstack 0
 13255  005902                     _strlen:
 13256                           	callstack 22
 13257  005902  C001  F003         	movff	strlen@s,strlen@a
 13258  005906  C002  F004         	movff	strlen@s+1,strlen@a+1
 13259  00590A  EF89  F02C         	goto	l3652
 13260  00590E                     l3650:
 13261  00590E  4A01               	infsnz	strlen@s^0,f,c
 13262  005910  2A02               	incf	(strlen@s+1)^0,f,c
 13263  005912                     l3652:
 13264  005912  C001  FFD9         	movff	strlen@s,fsr2l
 13265  005916  C002  FFDA         	movff	strlen@s+1,fsr2h
 13266  00591A  50DF               	movf	indf2,w,c
 13267  00591C  A4D8               	btfss	status,2,c
 13268  00591E  EF93  F02C         	goto	u2891
 13269  005922  EF95  F02C         	goto	u2890
 13270  005926                     u2891:
 13271  005926  EF87  F02C         	goto	l3650
 13272  00592A                     u2890:
 13273  00592A  5003               	movf	strlen@a^0,w,c
 13274  00592C  5C01               	subwf	strlen@s^0,w,c
 13275  00592E  6E01               	movwf	?_strlen^0,c
 13276  005930  5004               	movf	(strlen@a+1)^0,w,c
 13277  005932  5802               	subwfb	(strlen@s+1)^0,w,c
 13278  005934  6E02               	movwf	(?_strlen+1)^0,c
 13279  005936  0012               	return		;funcret
 13280  005938                     __end_of_strlen:
 13281                           	callstack 0
 13282                           
 13283 ;; *************** function _fputs *****************
 13284 ;; Defined at:
 13285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13288 ;;		 -> dbuf(32), 
 13289 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13290 ;;		 -> sprintf@f(11), 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;  i               2   14[COMRAM] int 
 13293 ;;  c               1   13[COMRAM] unsigned char 
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  2    9[COMRAM] int 
 13296 ;; Registers used:
 13297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13307 ;;Total ram usage:        7 bytes
 13308 ;; Hardware stack levels used: 1
 13309 ;; Hardware stack levels required when called: 3
 13310 ;; This function calls:
 13311 ;;		_fputc
 13312 ;; This function is called by:
 13313 ;;		_pad
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text65
 13318  0056CE                     __ptext65:
 13319                           	callstack 0
 13320  0056CE                     _fputs:
 13321                           	callstack 20
 13322  0056CE  0E00               	movlw	0
 13323  0056D0  6E10               	movwf	(fputs@i+1)^0,c
 13324  0056D2  0E00               	movlw	0
 13325  0056D4  6E0F               	movwf	fputs@i^0,c
 13326  0056D6  EF78  F02B         	goto	l3646
 13327  0056DA                     l3642:
 13328  0056DA  C00E  F001         	movff	fputs@c,fputc@c
 13329  0056DE  6A02               	clrf	(fputc@c+1)^0,c
 13330  0056E0  C00C  F003         	movff	fputs@fp,fputc@fp
 13331  0056E4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13332  0056E8  ECA2  F026         	call	_fputc	;wreg free
 13333  0056EC  4A0F               	infsnz	fputs@i^0,f,c
 13334  0056EE  2A10               	incf	(fputs@i+1)^0,f,c
 13335  0056F0                     l3646:
 13336  0056F0  500F               	movf	fputs@i^0,w,c
 13337  0056F2  240A               	addwf	fputs@s^0,w,c
 13338  0056F4  6ED9               	movwf	fsr2l,c
 13339  0056F6  5010               	movf	(fputs@i+1)^0,w,c
 13340  0056F8  200B               	addwfc	(fputs@s+1)^0,w,c
 13341  0056FA  6EDA               	movwf	fsr2h,c
 13342  0056FC  50DF               	movf	indf2,w,c
 13343  0056FE  6E0E               	movwf	fputs@c^0,c
 13344  005700  500E               	movf	fputs@c^0,w,c
 13345  005702  A4D8               	btfss	status,2,c
 13346  005704  EF86  F02B         	goto	u2881
 13347  005708  EF88  F02B         	goto	u2880
 13348  00570C                     u2881:
 13349  00570C  EF6D  F02B         	goto	l3642
 13350  005710                     u2880:
 13351  005710  0012               	return		;funcret
 13352  005712                     __end_of_fputs:
 13353                           	callstack 0
 13354                           
 13355 ;; *************** function _fputc *****************
 13356 ;; Defined at:
 13357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;  c               2    0[COMRAM] int 
 13360 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13361 ;;		 -> sprintf@f(11), 
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;		None
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  2    0[COMRAM] int 
 13366 ;; Registers used:
 13367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13368 ;; Tracked objects:
 13369 ;;		On entry : 0/0
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13375 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13376 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13377 ;;Total ram usage:        9 bytes
 13378 ;; Hardware stack levels used: 1
 13379 ;; Hardware stack levels required when called: 2
 13380 ;; This function calls:
 13381 ;;		_putch
 13382 ;; This function is called by:
 13383 ;;		_pad
 13384 ;;		_vfpfcnvrt
 13385 ;;		_fputs
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text66
 13390  004D44                     __ptext66:
 13391                           	callstack 0
 13392  004D44                     _fputc:
 13393                           	callstack 23
 13394  004D44  5003               	movf	fputc@fp^0,w,c
 13395  004D46  1004               	iorwf	(fputc@fp+1)^0,w,c
 13396  004D48  B4D8               	btfsc	status,2,c
 13397  004D4A  EFA9  F026         	goto	u2841
 13398  004D4E  EFAB  F026         	goto	u2840
 13399  004D52                     u2841:
 13400  004D52  EFB4  F026         	goto	l3630
 13401  004D56                     u2840:
 13402  004D56  5003               	movf	fputc@fp^0,w,c
 13403  004D58  1004               	iorwf	(fputc@fp+1)^0,w,c
 13404  004D5A  A4D8               	btfss	status,2,c
 13405  004D5C  EFB2  F026         	goto	u2851
 13406  004D60  EFB4  F026         	goto	u2850
 13407  004D64                     u2851:
 13408  004D64  EFB9  F026         	goto	l3632
 13409  004D68                     u2850:
 13410  004D68                     l3630:
 13411  004D68  5001               	movf	fputc@c^0,w,c
 13412  004D6A  ECE2  F02D         	call	_putch
 13413  004D6E  EF06  F027         	goto	l1560
 13414  004D72                     l3632:
 13415  004D72  EE20 F009          	lfsr	2,9
 13416  004D76  5003               	movf	fputc@fp^0,w,c
 13417  004D78  26D9               	addwf	fsr2l,f,c
 13418  004D7A  5004               	movf	(fputc@fp+1)^0,w,c
 13419  004D7C  22DA               	addwfc	fsr2h,f,c
 13420  004D7E  50DE               	movf	postinc2,w,c
 13421  004D80  10DE               	iorwf	postinc2,w,c
 13422  004D82  B4D8               	btfsc	status,2,c
 13423  004D84  EFC6  F026         	goto	u2861
 13424  004D88  EFC8  F026         	goto	u2860
 13425  004D8C                     u2861:
 13426  004D8C  EFE3  F026         	goto	l3636
 13427  004D90                     u2860:
 13428  004D90  EE20 F009          	lfsr	2,9
 13429  004D94  5003               	movf	fputc@fp^0,w,c
 13430  004D96  26D9               	addwf	fsr2l,f,c
 13431  004D98  5004               	movf	(fputc@fp+1)^0,w,c
 13432  004D9A  22DA               	addwfc	fsr2h,f,c
 13433  004D9C  EE10 F003          	lfsr	1,3
 13434  004DA0  5003               	movf	fputc@fp^0,w,c
 13435  004DA2  26E1               	addwf	fsr1l,f,c
 13436  004DA4  5004               	movf	(fputc@fp+1)^0,w,c
 13437  004DA6  22E2               	addwfc	fsr1h,f,c
 13438  004DA8  50DE               	movf	postinc2,w,c
 13439  004DAA  5CE6               	subwf	postinc1,w,c
 13440  004DAC  50E6               	movf	postinc1,w,c
 13441  004DAE  0A80               	xorlw	128
 13442  004DB0  6E09               	movwf	(??_fputc+4)^0,c
 13443  004DB2  50DE               	movf	postinc2,w,c
 13444  004DB4  0A80               	xorlw	128
 13445  004DB6  5809               	subwfb	(??_fputc+4)^0,w,c
 13446  004DB8  B0D8               	btfsc	status,0,c
 13447  004DBA  EFE1  F026         	goto	u2871
 13448  004DBE  EFE3  F026         	goto	u2870
 13449  004DC2                     u2871:
 13450  004DC2  EF06  F027         	goto	l1560
 13451  004DC6                     u2870:
 13452  004DC6                     l3636:
 13453  004DC6  EE20 F003          	lfsr	2,3
 13454  004DCA  5003               	movf	fputc@fp^0,w,c
 13455  004DCC  26D9               	addwf	fsr2l,f,c
 13456  004DCE  5004               	movf	(fputc@fp+1)^0,w,c
 13457  004DD0  22DA               	addwfc	fsr2h,f,c
 13458  004DD2  CFDE F005          	movff	postinc2,??_fputc
 13459  004DD6  CFDD F006          	movff	postdec2,??_fputc+1
 13460  004DDA  C003  FFD9         	movff	fputc@fp,fsr2l
 13461  004DDE  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13462  004DE2  CFDE F007          	movff	postinc2,??_fputc+2
 13463  004DE6  CFDD F008          	movff	postdec2,??_fputc+3
 13464  004DEA  5005               	movf	??_fputc^0,w,c
 13465  004DEC  2407               	addwf	(??_fputc+2)^0,w,c
 13466  004DEE  6ED9               	movwf	fsr2l,c
 13467  004DF0  5006               	movf	(??_fputc+1)^0,w,c
 13468  004DF2  2008               	addwfc	(??_fputc+3)^0,w,c
 13469  004DF4  6EDA               	movwf	fsr2h,c
 13470  004DF6  C001  FFDF         	movff	fputc@c,indf2
 13471  004DFA  EE20 F003          	lfsr	2,3
 13472  004DFE  5003               	movf	fputc@fp^0,w,c
 13473  004E00  26D9               	addwf	fsr2l,f,c
 13474  004E02  5004               	movf	(fputc@fp+1)^0,w,c
 13475  004E04  22DA               	addwfc	fsr2h,f,c
 13476  004E06  2ADE               	incf	postinc2,f,c
 13477  004E08  0E00               	movlw	0
 13478  004E0A  22DD               	addwfc	postdec2,f,c
 13479  004E0C                     l1560:
 13480  004E0C  0012               	return		;funcret
 13481  004E0E                     __end_of_fputc:
 13482                           	callstack 0
 13483                           
 13484 ;; *************** function _putch *****************
 13485 ;; Defined at:
 13486 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;  c               1    wreg     unsigned char 
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;  c               1    0[COMRAM] unsigned char 
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		wreg
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;Total ram usage:        0 bytes
 13505 ;; Hardware stack levels used: 1
 13506 ;; Hardware stack levels required when called: 1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_fputc
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text67
 13515  005BC4                     __ptext67:
 13516                           	callstack 0
 13517  005BC4                     _putch:
 13518                           	callstack 23
 13519  005BC4  0012               	return		;funcret
 13520  005BC6                     __end_of_putch:
 13521                           	callstack 0
 13522                           
 13523 ;; *************** function _abs *****************
 13524 ;; Defined at:
 13525 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  a               2   18[COMRAM] int 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;		None
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  2   18[COMRAM] int 
 13532 ;; Registers used:
 13533 ;;		wreg, status,2, status,0
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;Total ram usage:        4 bytes
 13544 ;; Hardware stack levels used: 1
 13545 ;; Hardware stack levels required when called: 1
 13546 ;; This function calls:
 13547 ;;		Nothing
 13548 ;; This function is called by:
 13549 ;;		_dtoa
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text68
 13554  005816                     __ptext68:
 13555                           	callstack 0
 13556  005816                     _abs:
 13557                           	callstack 23
 13558  005816  BE14               	btfsc	(abs@a+1)^0,7,c
 13559  005818  EF18  F02C         	goto	u3070
 13560  00581C  5014               	movf	(abs@a+1)^0,w,c
 13561  00581E  E106               	bnz	u3071
 13562  005820  0413               	decf	abs@a^0,w,c
 13563  005822  B0D8               	btfsc	status,0,c
 13564  005824  EF16  F02C         	goto	u3071
 13565  005828  EF18  F02C         	goto	u3070
 13566  00582C                     u3071:
 13567  00582C  EF26  F02C         	goto	l1545
 13568  005830                     u3070:
 13569  005830  C013  F015         	movff	abs@a,??_abs
 13570  005834  C014  F016         	movff	abs@a+1,??_abs+1
 13571  005838  1E15               	comf	??_abs^0,f,c
 13572  00583A  1E16               	comf	(??_abs+1)^0,f,c
 13573  00583C  4A15               	infsnz	??_abs^0,f,c
 13574  00583E  2A16               	incf	(??_abs+1)^0,f,c
 13575  005840  C015  F013         	movff	??_abs,?_abs
 13576  005844  C016  F014         	movff	??_abs+1,?_abs+1
 13577  005848  EF2A  F02C         	goto	l1548
 13578  00584C                     l1545:
 13579  00584C  C013  F013         	movff	abs@a,?_abs
 13580  005850  C014  F014         	movff	abs@a+1,?_abs+1
 13581  005854                     l1548:
 13582  005854  0012               	return		;funcret
 13583  005856                     __end_of_abs:
 13584                           	callstack 0
 13585                           
 13586 ;; *************** function ___aomod *****************
 13587 ;; Defined at:
 13588 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;  dividend        8    0[COMRAM] long long 
 13591 ;;  divisor         8    8[COMRAM] long long 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  sign            1   17[COMRAM] unsigned char 
 13594 ;;  counter         1   16[COMRAM] unsigned char 
 13595 ;; Return value:  Size  Location     Type
 13596 ;;                  8    0[COMRAM] long long 
 13597 ;; Registers used:
 13598 ;;		wreg, status,2, status,0
 13599 ;; Tracked objects:
 13600 ;;		On entry : 0/0
 13601 ;;		On exit  : 0/0
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13604 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13607 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13608 ;;Total ram usage:       18 bytes
 13609 ;; Hardware stack levels used: 1
 13610 ;; Hardware stack levels required when called: 1
 13611 ;; This function calls:
 13612 ;;		Nothing
 13613 ;; This function is called by:
 13614 ;;		_dtoa
 13615 ;; This function uses a non-reentrant model
 13616 ;;
 13617                           
 13618                           	psect	text69
 13619  0047DA                     __ptext69:
 13620                           	callstack 0
 13621  0047DA                     ___aomod:
 13622                           	callstack 23
 13623  0047DA  0E00               	movlw	0
 13624  0047DC  6E12               	movwf	___aomod@sign^0,c
 13625  0047DE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13626  0047E0  EFF6  F023         	goto	u2970
 13627  0047E4  EFF4  F023         	goto	u2971
 13628  0047E8                     u2971:
 13629  0047E8  EF08  F024         	goto	l3710
 13630  0047EC                     u2970:
 13631  0047EC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13632  0047EE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13633  0047F0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13634  0047F2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13635  0047F4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13636  0047F6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13637  0047F8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13638  0047FA  6C01               	negf	___aomod@dividend^0,c
 13639  0047FC  0E00               	movlw	0
 13640  0047FE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13641  004800  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13642  004802  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13643  004804  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13644  004806  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13645  004808  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13646  00480A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13647  00480C  0E01               	movlw	1
 13648  00480E  6E12               	movwf	___aomod@sign^0,c
 13649  004810                     l3710:
 13650  004810  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13651  004812  EF0F  F024         	goto	u2980
 13652  004816  EF0D  F024         	goto	u2981
 13653  00481A                     u2981:
 13654  00481A  EF1F  F024         	goto	l3714
 13655  00481E                     u2980:
 13656  00481E  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13657  004820  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13658  004822  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13659  004824  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13660  004826  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13661  004828  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13662  00482A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13663  00482C  6C09               	negf	___aomod@divisor^0,c
 13664  00482E  0E00               	movlw	0
 13665  004830  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13666  004832  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13667  004834  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13668  004836  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13669  004838  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13670  00483A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13671  00483C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13672  00483E                     l3714:
 13673  00483E  5009               	movf	___aomod@divisor^0,w,c
 13674  004840  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13675  004842  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13676  004844  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13677  004846  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13678  004848  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13679  00484A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13680  00484C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13681  00484E  B4D8               	btfsc	status,2,c
 13682  004850  EF2C  F024         	goto	u2991
 13683  004854  EF2E  F024         	goto	u2990
 13684  004858                     u2991:
 13685  004858  EF76  F024         	goto	l3730
 13686  00485C                     u2990:
 13687  00485C  0E01               	movlw	1
 13688  00485E  6E11               	movwf	___aomod@counter^0,c
 13689  004860  EF3C  F024         	goto	l3720
 13690  004864                     l3718:
 13691  004864  90D8               	bcf	status,0,c
 13692  004866  3609               	rlcf	___aomod@divisor^0,f,c
 13693  004868  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13694  00486A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13695  00486C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13696  00486E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13697  004870  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13698  004872  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13699  004874  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13700  004876  2A11               	incf	___aomod@counter^0,f,c
 13701  004878                     l3720:
 13702  004878  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13703  00487A  EF41  F024         	goto	u3001
 13704  00487E  EF43  F024         	goto	u3000
 13705  004882                     u3001:
 13706  004882  EF32  F024         	goto	l3718
 13707  004886                     u3000:
 13708  004886                     l3722:
 13709  004886  5009               	movf	___aomod@divisor^0,w,c
 13710  004888  5C01               	subwf	___aomod@dividend^0,w,c
 13711  00488A  500A               	movf	(___aomod@divisor+1)^0,w,c
 13712  00488C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13713  00488E  500B               	movf	(___aomod@divisor+2)^0,w,c
 13714  004890  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13715  004892  500C               	movf	(___aomod@divisor+3)^0,w,c
 13716  004894  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13717  004896  500D               	movf	(___aomod@divisor+4)^0,w,c
 13718  004898  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13719  00489A  500E               	movf	(___aomod@divisor+5)^0,w,c
 13720  00489C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13721  00489E  500F               	movf	(___aomod@divisor+6)^0,w,c
 13722  0048A0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13723  0048A2  5010               	movf	(___aomod@divisor+7)^0,w,c
 13724  0048A4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13725  0048A6  A0D8               	btfss	status,0,c
 13726  0048A8  EF58  F024         	goto	u3011
 13727  0048AC  EF5A  F024         	goto	u3010
 13728  0048B0                     u3011:
 13729  0048B0  EF6A  F024         	goto	l3726
 13730  0048B4                     u3010:
 13731  0048B4  5009               	movf	___aomod@divisor^0,w,c
 13732  0048B6  5E01               	subwf	___aomod@dividend^0,f,c
 13733  0048B8  500A               	movf	(___aomod@divisor+1)^0,w,c
 13734  0048BA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13735  0048BC  500B               	movf	(___aomod@divisor+2)^0,w,c
 13736  0048BE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13737  0048C0  500C               	movf	(___aomod@divisor+3)^0,w,c
 13738  0048C2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13739  0048C4  500D               	movf	(___aomod@divisor+4)^0,w,c
 13740  0048C6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13741  0048C8  500E               	movf	(___aomod@divisor+5)^0,w,c
 13742  0048CA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13743  0048CC  500F               	movf	(___aomod@divisor+6)^0,w,c
 13744  0048CE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13745  0048D0  5010               	movf	(___aomod@divisor+7)^0,w,c
 13746  0048D2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13747  0048D4                     l3726:
 13748  0048D4  90D8               	bcf	status,0,c
 13749  0048D6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13750  0048D8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13751  0048DA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13752  0048DC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13753  0048DE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13754  0048E0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13755  0048E2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13756  0048E4  3209               	rrcf	___aomod@divisor^0,f,c
 13757  0048E6  2E11               	decfsz	___aomod@counter^0,f,c
 13758  0048E8  EF43  F024         	goto	l3722
 13759  0048EC                     l3730:
 13760  0048EC  5012               	movf	___aomod@sign^0,w,c
 13761  0048EE  B4D8               	btfsc	status,2,c
 13762  0048F0  EF7C  F024         	goto	u3021
 13763  0048F4  EF7E  F024         	goto	u3020
 13764  0048F8                     u3021:
 13765  0048F8  EF8E  F024         	goto	l3734
 13766  0048FC                     u3020:
 13767  0048FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13768  0048FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13769  004900  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13770  004902  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13771  004904  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13772  004906  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13773  004908  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13774  00490A  6C01               	negf	___aomod@dividend^0,c
 13775  00490C  0E00               	movlw	0
 13776  00490E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13777  004910  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13778  004912  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13779  004914  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13780  004916  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13781  004918  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13782  00491A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13783  00491C                     l3734:
 13784  00491C  C001  F001         	movff	___aomod@dividend,?___aomod
 13785  004920  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13786  004924  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13787  004928  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13788  00492C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13789  004930  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13790  004934  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13791  004938  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13792  00493C  0012               	return		;funcret
 13793  00493E                     __end_of___aomod:
 13794                           	callstack 0
 13795                           
 13796 ;; *************** function ___aodiv *****************
 13797 ;; Defined at:
 13798 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  dividend        8    0[COMRAM] long long 
 13801 ;;  divisor         8    8[COMRAM] long long 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;  quotient        8   18[COMRAM] long long 
 13804 ;;  sign            1   17[COMRAM] unsigned char 
 13805 ;;  counter         1   16[COMRAM] unsigned char 
 13806 ;; Return value:  Size  Location     Type
 13807 ;;                  8    0[COMRAM] long long 
 13808 ;; Registers used:
 13809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13810 ;; Tracked objects:
 13811 ;;		On entry : 0/0
 13812 ;;		On exit  : 0/0
 13813 ;;		Unchanged: 0/0
 13814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13815 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13816 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13818 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13819 ;;Total ram usage:       26 bytes
 13820 ;; Hardware stack levels used: 1
 13821 ;; Hardware stack levels required when called: 1
 13822 ;; This function calls:
 13823 ;;		Nothing
 13824 ;; This function is called by:
 13825 ;;		_dtoa
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text70
 13830  004652                     __ptext70:
 13831                           	callstack 0
 13832  004652                     ___aodiv:
 13833                           	callstack 23
 13834  004652  0E00               	movlw	0
 13835  004654  6E12               	movwf	___aodiv@sign^0,c
 13836  004656  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13837  004658  EF32  F023         	goto	u2900
 13838  00465C  EF30  F023         	goto	u2901
 13839  004660                     u2901:
 13840  004660  EF44  F023         	goto	l3666
 13841  004664                     u2900:
 13842  004664  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13843  004666  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13844  004668  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13845  00466A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13846  00466C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13847  00466E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13848  004670  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13849  004672  6C09               	negf	___aodiv@divisor^0,c
 13850  004674  0E00               	movlw	0
 13851  004676  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13852  004678  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13853  00467A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13854  00467C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13855  00467E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13856  004680  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13857  004682  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13858  004684  0E01               	movlw	1
 13859  004686  6E12               	movwf	___aodiv@sign^0,c
 13860  004688                     l3666:
 13861  004688  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13862  00468A  EF4B  F023         	goto	u2910
 13863  00468E  EF49  F023         	goto	u2911
 13864  004692                     u2911:
 13865  004692  EF5D  F023         	goto	l3672
 13866  004696                     u2910:
 13867  004696  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13868  004698  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13869  00469A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13870  00469C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13871  00469E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13872  0046A0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13873  0046A2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13874  0046A4  6C01               	negf	___aodiv@dividend^0,c
 13875  0046A6  0E00               	movlw	0
 13876  0046A8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13877  0046AA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13878  0046AC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13879  0046AE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13880  0046B0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13881  0046B2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13882  0046B4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13883  0046B6  0E01               	movlw	1
 13884  0046B8  1A12               	xorwf	___aodiv@sign^0,f,c
 13885  0046BA                     l3672:
 13886  0046BA  EE20  F013         	lfsr	2,___aodiv@quotient
 13887  0046BE  0E07               	movlw	7
 13888  0046C0                     u2921:
 13889  0046C0  6ADE               	clrf	postinc2,c
 13890  0046C2  06E8               	decf	wreg,f,c
 13891  0046C4  E2FD               	bc	u2921
 13892  0046C6  5009               	movf	___aodiv@divisor^0,w,c
 13893  0046C8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13894  0046CA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13895  0046CC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13896  0046CE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13897  0046D0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13898  0046D2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13899  0046D4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13900  0046D6  B4D8               	btfsc	status,2,c
 13901  0046D8  EF70  F023         	goto	u2931
 13902  0046DC  EF72  F023         	goto	u2930
 13903  0046E0                     u2931:
 13904  0046E0  EFC4  F023         	goto	l3694
 13905  0046E4                     u2930:
 13906  0046E4  0E01               	movlw	1
 13907  0046E6  6E11               	movwf	___aodiv@counter^0,c
 13908  0046E8  EF80  F023         	goto	l3680
 13909  0046EC                     l3678:
 13910  0046EC  90D8               	bcf	status,0,c
 13911  0046EE  3609               	rlcf	___aodiv@divisor^0,f,c
 13912  0046F0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13913  0046F2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13914  0046F4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13915  0046F6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13916  0046F8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13917  0046FA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13918  0046FC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13919  0046FE  2A11               	incf	___aodiv@counter^0,f,c
 13920  004700                     l3680:
 13921  004700  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13922  004702  EF85  F023         	goto	u2941
 13923  004706  EF87  F023         	goto	u2940
 13924  00470A                     u2941:
 13925  00470A  EF76  F023         	goto	l3678
 13926  00470E                     u2940:
 13927  00470E                     l3682:
 13928  00470E  90D8               	bcf	status,0,c
 13929  004710  3613               	rlcf	___aodiv@quotient^0,f,c
 13930  004712  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13931  004714  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13932  004716  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13933  004718  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13934  00471A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13935  00471C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13936  00471E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13937  004720  5009               	movf	___aodiv@divisor^0,w,c
 13938  004722  5C01               	subwf	___aodiv@dividend^0,w,c
 13939  004724  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13940  004726  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13941  004728  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13942  00472A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13943  00472C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13944  00472E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13945  004730  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13946  004732  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13947  004734  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13948  004736  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13949  004738  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13950  00473A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13951  00473C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13952  00473E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13953  004740  A0D8               	btfss	status,0,c
 13954  004742  EFA5  F023         	goto	u2951
 13955  004746  EFA7  F023         	goto	u2950
 13956  00474A                     u2951:
 13957  00474A  EFB8  F023         	goto	l3690
 13958  00474E                     u2950:
 13959  00474E  5009               	movf	___aodiv@divisor^0,w,c
 13960  004750  5E01               	subwf	___aodiv@dividend^0,f,c
 13961  004752  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13962  004754  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13963  004756  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13964  004758  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13965  00475A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13966  00475C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13967  00475E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13968  004760  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13969  004762  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13970  004764  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13971  004766  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13972  004768  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13973  00476A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13974  00476C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13975  00476E  8013               	bsf	___aodiv@quotient^0,0,c
 13976  004770                     l3690:
 13977  004770  90D8               	bcf	status,0,c
 13978  004772  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13979  004774  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13980  004776  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13981  004778  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13982  00477A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13983  00477C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13984  00477E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13985  004780  3209               	rrcf	___aodiv@divisor^0,f,c
 13986  004782  2E11               	decfsz	___aodiv@counter^0,f,c
 13987  004784  EF87  F023         	goto	l3682
 13988  004788                     l3694:
 13989  004788  5012               	movf	___aodiv@sign^0,w,c
 13990  00478A  B4D8               	btfsc	status,2,c
 13991  00478C  EFCA  F023         	goto	u2961
 13992  004790  EFCC  F023         	goto	u2960
 13993  004794                     u2961:
 13994  004794  EFDC  F023         	goto	l3698
 13995  004798                     u2960:
 13996  004798  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13997  00479A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13998  00479C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13999  00479E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14000  0047A0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14001  0047A2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14002  0047A4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14003  0047A6  6C13               	negf	___aodiv@quotient^0,c
 14004  0047A8  0E00               	movlw	0
 14005  0047AA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14006  0047AC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14007  0047AE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14008  0047B0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14009  0047B2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14010  0047B4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14011  0047B6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14012  0047B8                     l3698:
 14013  0047B8  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14014  0047BC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14015  0047C0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14016  0047C4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14017  0047C8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14018  0047CC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14019  0047D0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14020  0047D4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14021  0047D8  0012               	return		;funcret
 14022  0047DA                     __end_of___aodiv:
 14023                           	callstack 0
 14024                           
 14025 ;; *************** function _sendStringSerial4 *****************
 14026 ;; Defined at:
 14027 ;;		line 36 in file "serial.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  string          2    1[COMRAM] PTR unsigned char 
 14030 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 14031 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 14032 ;; Auto vars:     Size  Location     Type
 14033 ;;		None
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  1    wreg      void 
 14036 ;; Registers used:
 14037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;Total ram usage:        2 bytes
 14048 ;; Hardware stack levels used: 1
 14049 ;; Hardware stack levels required when called: 2
 14050 ;; This function calls:
 14051 ;;		_sendCharSerial4
 14052 ;; This function is called by:
 14053 ;;		_color_display
 14054 ;;		_color_predict
 14055 ;;		_action
 14056 ;;		_goback
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           	psect	text71
 14061  00596C                     __ptext71:
 14062                           	callstack 0
 14063  00596C                     _sendStringSerial4:
 14064                           	callstack 26
 14065  00596C                     
 14066                           ;serial.c: 38:     while(*string != 0){
 14067  00596C  EFC1  F02C         	goto	l4410
 14068  005970                     l4406:
 14069                           
 14070                           ;serial.c: 39:   sendCharSerial4(*string++);}
 14071  005970  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14072  005974  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14073  005978  50DF               	movf	indf2,w,c
 14074  00597A  ECAF  F02D         	call	_sendCharSerial4
 14075  00597E  4A02               	infsnz	sendStringSerial4@string^0,f,c
 14076  005980  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 14077  005982                     l4410:
 14078                           
 14079                           ;serial.c: 38:     while(*string != 0){
 14080  005982  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14081  005986  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14082  00598A  50DF               	movf	indf2,w,c
 14083  00598C  A4D8               	btfss	status,2,c
 14084  00598E  EFCB  F02C         	goto	u4111
 14085  005992  EFCD  F02C         	goto	u4110
 14086  005996                     u4111:
 14087  005996  EFB8  F02C         	goto	l4406
 14088  00599A                     u4110:
 14089  00599A  0012               	return		;funcret
 14090  00599C                     __end_of_sendStringSerial4:
 14091                           	callstack 0
 14092                           
 14093 ;; *************** function _sendCharSerial4 *****************
 14094 ;; Defined at:
 14095 ;;		line 29 in file "serial.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  charToSend      1    wreg     unsigned char 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;  charToSend      1    0[COMRAM] unsigned char 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14113 ;;Total ram usage:        1 bytes
 14114 ;; Hardware stack levels used: 1
 14115 ;; Hardware stack levels required when called: 1
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_sendStringSerial4
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text72
 14124  005B5E                     __ptext72:
 14125                           	callstack 0
 14126  005B5E                     _sendCharSerial4:
 14127                           	callstack 26
 14128                           
 14129                           ;incstack = 0
 14130                           ;sendCharSerial4@charToSend stored from wreg
 14131  005B5E  6E01               	movwf	sendCharSerial4@charToSend^0,c
 14132  005B60                     l417:
 14133  005B60  010E               	movlb	14	; () banked
 14134  005B62  A537               	btfss	55,2,b	;volatile
 14135  005B64  EFB6  F02D         	goto	u3841
 14136  005B68  EFB8  F02D         	goto	u3840
 14137  005B6C                     u3841:
 14138  005B6C  EFB0  F02D         	goto	l417
 14139  005B70                     u3840:
 14140  005B70                     
 14141                           ; BSR set to: 14
 14142                           ;serial.c: 31:     TX4REG = charToSend;
 14143  005B70  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 14144  005B74                     
 14145                           ; BSR set to: 14
 14146  005B74  0012               	return		;funcret
 14147  005B76                     __end_of_sendCharSerial4:
 14148                           	callstack 0
 14149                           
 14150 ;; *************** function _Timer0_init *****************
 14151 ;; Defined at:
 14152 ;;		line 7 in file "timers.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;		None
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;		None
 14157 ;; Return value:  Size  Location     Type
 14158 ;;                  1    wreg      void 
 14159 ;; Registers used:
 14160 ;;		wreg, status,2
 14161 ;; Tracked objects:
 14162 ;;		On entry : 0/0
 14163 ;;		On exit  : 0/0
 14164 ;;		Unchanged: 0/0
 14165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14170 ;;Total ram usage:        0 bytes
 14171 ;; Hardware stack levels used: 1
 14172 ;; Hardware stack levels required when called: 1
 14173 ;; This function calls:
 14174 ;;		Nothing
 14175 ;; This function is called by:
 14176 ;;		_main
 14177 ;; This function uses a non-reentrant model
 14178 ;;
 14179                           
 14180                           	psect	text73
 14181  005B40                     __ptext73:
 14182                           	callstack 0
 14183  005B40                     _Timer0_init:
 14184                           	callstack 29
 14185  005B40                     
 14186                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14187  005B40  50D6               	movf	214,w,c	;volatile
 14188  005B42  0B1F               	andlw	-225
 14189  005B44  0940               	iorlw	64
 14190  005B46  6ED6               	movwf	214,c	;volatile
 14191  005B48                     
 14192                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14193  005B48  88D6               	bsf	214,4,c	;volatile
 14194                           
 14195                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 14196  005B4A  50D6               	movf	214,w,c	;volatile
 14197  005B4C  0BF0               	andlw	-16
 14198  005B4E  0908               	iorlw	8
 14199  005B50  6ED6               	movwf	214,c	;volatile
 14200  005B52                     
 14201                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14202  005B52  88D5               	bsf	213,4,c	;volatile
 14203                           
 14204                           ;timers.c: 16:     TMR0H=0b00001011;
 14205  005B54  0E0B               	movlw	11
 14206  005B56  6ED4               	movwf	212,c	;volatile
 14207                           
 14208                           ;timers.c: 17:     TMR0L=0b11011011;
 14209  005B58  0EDB               	movlw	219
 14210  005B5A  6ED3               	movwf	211,c	;volatile
 14211  005B5C  0012               	return		;funcret
 14212  005B5E                     __end_of_Timer0_init:
 14213                           	callstack 0
 14214                           
 14215 ;; *************** function _Interrupts_init *****************
 14216 ;; Defined at:
 14217 ;;		line 9 in file "interrupts.c"
 14218 ;; Parameters:    Size  Location     Type
 14219 ;;		None
 14220 ;; Auto vars:     Size  Location     Type
 14221 ;;		None
 14222 ;; Return value:  Size  Location     Type
 14223 ;;                  1    wreg      void 
 14224 ;; Registers used:
 14225 ;;		None
 14226 ;; Tracked objects:
 14227 ;;		On entry : 0/0
 14228 ;;		On exit  : 0/0
 14229 ;;		Unchanged: 0/0
 14230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14235 ;;Total ram usage:        0 bytes
 14236 ;; Hardware stack levels used: 1
 14237 ;; Hardware stack levels required when called: 1
 14238 ;; This function calls:
 14239 ;;		Nothing
 14240 ;; This function is called by:
 14241 ;;		_main
 14242 ;; This function uses a non-reentrant model
 14243 ;;
 14244                           
 14245                           	psect	text74
 14246  005B98                     __ptext74:
 14247                           	callstack 0
 14248  005B98                     _Interrupts_init:
 14249                           	callstack 29
 14250  005B98  8EF2               	bsf	242,7,c	;volatile
 14251                           
 14252                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14253  005B9A  8AF2               	bsf	242,5,c	;volatile
 14254                           
 14255                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14256  005B9C  8CF2               	bsf	242,6,c	;volatile
 14257                           
 14258                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14259  005B9E  010E               	movlb	14	; () banked
 14260  005BA0  8B29               	bsf	41,5,b	;volatile
 14261  005BA2                     
 14262                           ; BSR set to: 14
 14263  005BA2  0012               	return		;funcret
 14264  005BA4                     __end_of_Interrupts_init:
 14265                           	callstack 0
 14266                           
 14267 ;; *************** function _HighISR *****************
 14268 ;; Defined at:
 14269 ;;		line 21 in file "interrupts.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		status,2, status,0
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14287 ;;Total ram usage:        0 bytes
 14288 ;; Hardware stack levels used: 1
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		Interrupt level 2
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	intcode
 14297  000008                     __pintcode:
 14298                           	callstack 0
 14299  000008                     _HighISR:
 14300                           	callstack 19
 14301                           
 14302                           ; BSR set to: 14
 14303                           ;incstack = 0
 14304  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14305  00000A                     
 14306                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14307  00000A  010E               	movlb	14	; () banked
 14308  00000C  AB33               	btfss	51,5,b	;volatile
 14309  00000E  EF0B  F000         	goto	i2u559_41
 14310  000012  EF0D  F000         	goto	i2u559_40
 14311  000016                     i2u559_41:
 14312  000016  EF12  F000         	goto	i2l686
 14313  00001A                     i2u559_40:
 14314  00001A                     
 14315                           ; BSR set to: 14
 14316                           ;interrupts.c: 24:         second ++;
 14317  00001A  0103               	movlb	3	; () banked
 14318  00001C  4B68               	infsnz	_second& (0+255),f,b
 14319  00001E  2B69               	incf	(_second+1)& (0+255),f,b
 14320  000020                     
 14321                           ; BSR set to: 3
 14322                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14323  000020  010E               	movlb	14	; () banked
 14324  000022  9B33               	bcf	51,5,b	;volatile
 14325  000024                     i2l686:
 14326                           
 14327                           ; BSR set to: 14
 14328  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14329  000026  0011               	retfie		f
 14330  000028                     __end_of_HighISR:
 14331                           	callstack 0
 14332                           
 14333                           	psect	rparam
 14334  0000                     
 14335                           	psect	temp
 14336  00005F                     btemp:
 14337                           	callstack 0
 14338  00005F                     	ds	1
 14339  0000                     int$flags	set	btemp
 14340  0000                     wtemp8	set	btemp+1
 14341  0000                     ttemp5	set	btemp+1
 14342  0000                     ttemp6	set	btemp+4
 14343  0000                     ttemp7	set	btemp+8
 14344                           
 14345                           	psect	idloc
 14346                           
 14347                           ;Config register IDLOC0 @ 0x200000
 14348                           ;	unspecified, using default values
 14349  200000                     	org	2097152
 14350  200000  0FFF               	dw	4095
 14351                           
 14352                           ;Config register IDLOC1 @ 0x200002
 14353                           ;	unspecified, using default values
 14354  200002                     	org	2097154
 14355  200002  0FFF               	dw	4095
 14356                           
 14357                           ;Config register IDLOC2 @ 0x200004
 14358                           ;	unspecified, using default values
 14359  200004                     	org	2097156
 14360  200004  0FFF               	dw	4095
 14361                           
 14362                           ;Config register IDLOC3 @ 0x200006
 14363                           ;	unspecified, using default values
 14364  200006                     	org	2097158
 14365  200006  0FFF               	dw	4095
 14366                           
 14367                           ;Config register IDLOC4 @ 0x200008
 14368                           ;	unspecified, using default values
 14369  200008                     	org	2097160
 14370  200008  0FFF               	dw	4095
 14371                           
 14372                           ;Config register IDLOC5 @ 0x20000A
 14373                           ;	unspecified, using default values
 14374  20000A                     	org	2097162
 14375  20000A  0FFF               	dw	4095
 14376                           
 14377                           ;Config register IDLOC6 @ 0x20000C
 14378                           ;	unspecified, using default values
 14379  20000C                     	org	2097164
 14380  20000C  0FFF               	dw	4095
 14381                           
 14382                           ;Config register IDLOC7 @ 0x20000E
 14383                           ;	unspecified, using default values
 14384  20000E                     	org	2097166
 14385  20000E  0FFF               	dw	4095
 14386                           
 14387                           	psect	config
 14388                           
 14389                           ;Config register CONFIG1L @ 0x300000
 14390                           ;	External Oscillator mode Selection bits
 14391                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14392                           ;	Power-up default value for COSC bits
 14393                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14394  300000                     	org	3145728
 14395  300000  AA                 	db	170
 14396                           
 14397                           ;Config register CONFIG1H @ 0x300001
 14398                           ;	unspecified, using default values
 14399                           ;	Clock Out Enable bit
 14400                           ;	CLKOUTEN = 0x1, unprogrammed default
 14401                           ;	Clock Switch Enable bit
 14402                           ;	CSWEN = 0x1, unprogrammed default
 14403                           ;	Fail-Safe Clock Monitor Enable bit
 14404                           ;	FCMEN = 0x1, unprogrammed default
 14405  300001                     	org	3145729
 14406  300001  FF                 	db	255
 14407                           
 14408                           ;Config register CONFIG2L @ 0x300002
 14409                           ;	unspecified, using default values
 14410                           ;	Master Clear Enable bit
 14411                           ;	MCLRE = 0x1, unprogrammed default
 14412                           ;	Power-up Timer Enable bit
 14413                           ;	PWRTE = 0x1, unprogrammed default
 14414                           ;	Low-power BOR enable bit
 14415                           ;	LPBOREN = 0x1, unprogrammed default
 14416                           ;	Brown-out Reset Enable bits
 14417                           ;	BOREN = 0x3, unprogrammed default
 14418  300002                     	org	3145730
 14419  300002  FF                 	db	255
 14420                           
 14421                           ;Config register CONFIG2H @ 0x300003
 14422                           ;	unspecified, using default values
 14423                           ;	Brown Out Reset Voltage selection bits
 14424                           ;	BORV = 0x3, unprogrammed default
 14425                           ;	ZCD Disable bit
 14426                           ;	ZCD = 0x1, unprogrammed default
 14427                           ;	PPSLOCK bit One-Way Set Enable bit
 14428                           ;	PPS1WAY = 0x1, unprogrammed default
 14429                           ;	Stack Full/Underflow Reset Enable bit
 14430                           ;	STVREN = 0x1, unprogrammed default
 14431                           ;	Debugger Enable bit
 14432                           ;	DEBUG = 0x1, unprogrammed default
 14433                           ;	Extended Instruction Set Enable bit
 14434                           ;	XINST = 0x1, unprogrammed default
 14435  300003                     	org	3145731
 14436  300003  FF                 	db	255
 14437                           
 14438                           ;Config register CONFIG3L @ 0x300004
 14439                           ;	WDT Period Select bits
 14440                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14441                           ;	WDT operating mode
 14442                           ;	WDTE = OFF, WDT Disabled
 14443  300004                     	org	3145732
 14444  300004  9F                 	db	159
 14445                           
 14446                           ;Config register CONFIG3H @ 0x300005
 14447                           ;	unspecified, using default values
 14448                           ;	WDT Window Select bits
 14449                           ;	WDTCWS = 0x7, unprogrammed default
 14450                           ;	WDT input clock selector
 14451                           ;	WDTCCS = 0x7, unprogrammed default
 14452  300005                     	org	3145733
 14453  300005  FF                 	db	255
 14454                           
 14455                           ;Config register CONFIG4L @ 0x300006
 14456                           ;	unspecified, using default values
 14457                           ;	Write Protection Block 0
 14458                           ;	WRT0 = 0x1, unprogrammed default
 14459                           ;	Write Protection Block 1
 14460                           ;	WRT1 = 0x1, unprogrammed default
 14461                           ;	Write Protection Block 2
 14462                           ;	WRT2 = 0x1, unprogrammed default
 14463                           ;	Write Protection Block 3
 14464                           ;	WRT3 = 0x1, unprogrammed default
 14465                           ;	Write Protection Block 3
 14466                           ;	WRT4 = 0x1, unprogrammed default
 14467                           ;	Write Protection Block 3
 14468                           ;	WRT5 = 0x1, unprogrammed default
 14469                           ;	Write Protection Block 3
 14470                           ;	WRT6 = 0x1, unprogrammed default
 14471                           ;	Write Protection Block 3
 14472                           ;	WRT7 = 0x1, unprogrammed default
 14473  300006                     	org	3145734
 14474  300006  FF                 	db	255
 14475                           
 14476                           ;Config register CONFIG4H @ 0x300007
 14477                           ;	unspecified, using default values
 14478                           ;	Configuration Register Write Protection bit
 14479                           ;	WRTC = 0x1, unprogrammed default
 14480                           ;	Boot Block Write Protection bit
 14481                           ;	WRTB = 0x1, unprogrammed default
 14482                           ;	Data EEPROM Write Protection bit
 14483                           ;	WRTD = 0x1, unprogrammed default
 14484                           ;	Scanner Enable bit
 14485                           ;	SCANE = 0x1, unprogrammed default
 14486                           ;	Low Voltage Programming Enable bit
 14487                           ;	LVP = 0x1, unprogrammed default
 14488  300007                     	org	3145735
 14489  300007  FF                 	db	255
 14490                           
 14491                           ;Config register CONFIG5L @ 0x300008
 14492                           ;	unspecified, using default values
 14493                           ;	UserNVM Program Memory Code Protection bit
 14494                           ;	CP = 0x1, unprogrammed default
 14495                           ;	DataNVM Memory Code Protection bit
 14496                           ;	CPD = 0x1, unprogrammed default
 14497  300008                     	org	3145736
 14498  300008  FF                 	db	255
 14499                           
 14500                           ;Config register CONFIG5H @ 0x300009
 14501                           ;	unspecified, using default values
 14502  300009                     	org	3145737
 14503  300009  FF                 	db	255
 14504                           
 14505                           ;Config register CONFIG6L @ 0x30000A
 14506                           ;	unspecified, using default values
 14507                           ;	Table Read Protection Block 0
 14508                           ;	EBTR0 = 0x1, unprogrammed default
 14509                           ;	Table Read Protection Block 1
 14510                           ;	EBTR1 = 0x1, unprogrammed default
 14511                           ;	Table Read Protection Block 2
 14512                           ;	EBTR2 = 0x1, unprogrammed default
 14513                           ;	Table Read Protection Block 3
 14514                           ;	EBTR3 = 0x1, unprogrammed default
 14515                           ;	Table Read Protection Block 4
 14516                           ;	EBTR4 = 0x1, unprogrammed default
 14517                           ;	Table Read Protection Block 5
 14518                           ;	EBTR5 = 0x1, unprogrammed default
 14519                           ;	Table Read Protection Block 6
 14520                           ;	EBTR6 = 0x1, unprogrammed default
 14521                           ;	Table Read Protection Block 7
 14522                           ;	EBTR7 = 0x1, unprogrammed default
 14523  30000A                     	org	3145738
 14524  30000A  FF                 	db	255
 14525                           
 14526                           ;Config register CONFIG6H @ 0x30000B
 14527                           ;	unspecified, using default values
 14528                           ;	Boot Block Table Read Protection bit
 14529                           ;	EBTRB = 0x1, unprogrammed default
 14530  30000B                     	org	3145739
 14531  30000B  FF                 	db	255
 14532                           tosu	equ	0xFFF
 14533                           tosh	equ	0xFFE
 14534                           tosl	equ	0xFFD
 14535                           stkptr	equ	0xFFC
 14536                           pclatu	equ	0xFFB
 14537                           pclath	equ	0xFFA
 14538                           pcl	equ	0xFF9
 14539                           tblptru	equ	0xFF8
 14540                           tblptrh	equ	0xFF7
 14541                           tblptrl	equ	0xFF6
 14542                           tablat	equ	0xFF5
 14543                           prodh	equ	0xFF4
 14544                           prodl	equ	0xFF3
 14545                           indf0	equ	0xFEF
 14546                           postinc0	equ	0xFEE
 14547                           postdec0	equ	0xFED
 14548                           preinc0	equ	0xFEC
 14549                           plusw0	equ	0xFEB
 14550                           fsr0h	equ	0xFEA
 14551                           fsr0l	equ	0xFE9
 14552                           wreg	equ	0xFE8
 14553                           indf1	equ	0xFE7
 14554                           postinc1	equ	0xFE6
 14555                           postdec1	equ	0xFE5
 14556                           preinc1	equ	0xFE4
 14557                           plusw1	equ	0xFE3
 14558                           fsr1h	equ	0xFE2
 14559                           fsr1l	equ	0xFE1
 14560                           bsr	equ	0xFE0
 14561                           indf2	equ	0xFDF
 14562                           postinc2	equ	0xFDE
 14563                           postdec2	equ	0xFDD
 14564                           preinc2	equ	0xFDC
 14565                           plusw2	equ	0xFDB
 14566                           fsr2h	equ	0xFDA
 14567                           fsr2l	equ	0xFD9
 14568                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256    200     251
    BANK2           256    201     233
    BANK3           256     67     175
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), main@amb(BANK3[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2813$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2813$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), main@motorL(BANK3[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_fullSpeedBack
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _action->_goback

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_action
    _action->_goback

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0  350284
                                            150 BANK0      2     2      0
                                              0 BANK3     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   28528
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  111938
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19671
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   28242
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19347
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13324
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11781
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3484
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2062
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2987
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4   14948
                                             37 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                             105   101      4  109335
                                            128 BANK0      4     0      4
                                            100 BANK2    101   101      0
                             _goback
                     _reverse_square
                  _sendStringSerial4
                      _short_reverse
                            _sprintf
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12389
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                             308   304      4   55689
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                                              0 BANK1    200   200      0
                                              0 BANK2    100   100      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9505
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   10189
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   12085
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedBack                                        6     2      4    7202
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4187
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3275
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2339
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _sendStringSerial4
       _sprintf
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _sendStringSerial4
     _short_reverse
       _fullSpeedBack
       _stop
     _sprintf
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___wmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _short_burst_back
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     43      AF      11       68.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C9      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8      FB       7       98.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     391      57        0.0%
DATA                 0      0     391       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 14:58:58 2022

                ?_short_reverse 0026                  _color_read_Red 5548                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 55E8  
                 _color_predict 599C                              l71 5B8A                              l82 36C6  
                            l74 36B4                              l91 5596                              l85 596A  
                            l94 5636                              l88 5B20                              l97 55E6  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 5638  
              _color_read_Green 5598               ??_Interrupts_init 0001                             l100 5686  
                           l103 54F4                             l112 5AE0                             l202 59F2  
                           l106 5A80                             l211 5BC0                             l115 5AC0  
                           l220 5B96                             l132 5358                             l205 59F4  
                           l109 5A60                             l141 38D0                             l302 3C8C  
                           l310 51D8                             l214 5BAC                             l118 5AA0  
                           l223 5752                             l208 5A1A                             l321 4454  
                           l217 5BB6                             l129 3E42                             l138 59C8  
                           l162 588C                             l171 4A64                             l163 588E  
                           l420 5B74                             l325 449C                             l317 440C  
                           l174 4ED0                             l343 430E                             l335 427E  
                           l159 1A8A                             l175 4ED2                             l167 52E8  
                           l328 44C6                             l408 5B3E                             l417 5B60  
                           l426 599A                             l354 526C                             l346 4338  
                           l371 5814                             l339 42C6                             l292 5794  
                           l540 398C                             l365 511C                             l621 5434  
                           l295 4D42                             l368 57D4                             l633 3130  
                           l900 47D8                             l639 5B00                             l680 5BA2  
                           l656 2DEA                             l913 493C                             l697 5B5C  
                           l786 5A40               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 4ED4                             _abs 5816                             _pad 4ED4  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5A82                    ___fltol@exp1 0065  
                          l1017 505C                            l1051 4C2A                            ?_abs 0013  
                          l1060 5900                            l1056 4C70                            l1400 2010  
                          l1410 226C                            l1314 1C7A                            l1083 4B6C  
                          l1331 1D94                            l1323 1F4A                            l1315 1C68  
                          l1404 2374                            l1340 1E64                            l1316 1C2E  
                          l1501 4F98                            l1341 1E52                            l1407 2206  
                          l4000 1CAC                            l1441 3E9A                            l1417 2336  
                          l1409 227E                            l1370 291C                            l4010 1CE8  
                          l4002 1CBC                            l1507 31D6                            l4100 402A  
                          l1540 548E                            l1444 3FF6                            l4020 1D2E  
                          l4012 1CF6                            l4004 1CCA                            l1356 56CC  
                          l1509 31DE                            l1541 5496                            l1381 29DA  
                          l1373 28E0                            l1534 41AA                            l4110 40D0  
                          l4102 403C                            l1382 29C8                            l4030 1DAA  
                          l4022 1D62                            l4014 1CF8                            l4006 1CD8  
                          l1462 58C8                            l1527 341A                            l1455 3F8E  
                          l1560 4E0C                            l4120 414E                            l4104 4040  
                          l1368 2ABC                            l1448 3F32                            l4200 1F68  
                          l4040 1DE6                            l4032 1DBA                            l4024 1D64  
                          l4016 1D02                            l4008 1CE4                            l5000 374E  
                          l1545 584C                            l4114 4108                            l4106 4064  
                          l4130 4174                            l4210 1FAE                            l4202 1F78  
                          l4050 1E12                            l4042 1DE8                            l4026 1D74  
                          l4018 1D08                            l5010 37B2                            l5002 3752  
                          l1571 5BC4                            l1379 2962                            l1548 5854  
                          l4132 4198                            l4116 412C                            l4124 415A  
                          l4108 4088                            l4140 5BBC                            l4300 22D2  
                          l4220 1FDA                            l4212 1FB4                            l4204 1F88  
                          l4060 1E4A                            l4044 1DF6                            l4036 1DCE  
                          l4052 1E14                            l4028 1D84                            l5020 3816  
                          l5012 37B6                            l5004 376A                            l5100 16AA  
                          l1469 5546                            l4126 4168                            l4118 413A  
                          l4142 5B8E                            l4150 5BA4                            l4310 233A  
                          l4302 22D6                            l4230 2030                            l4222 1FEA  
                          l4214 1FBA                            l4206 1F98                            l4070 1EC8  
                          l4046 1DFE                            l4038 1DD8                            l4054 1E22  
                          l5030 387A                            l5022 382E                            l5014 37CE  
                          l5006 3782                            l5110 187A                            l5102 1778  
                          l1568 5710                            l1592 5936                            l1496 4F1A  
                          l4400 5534                            l5200 57AA                            l4144 5B92  
                          l4160 5728                            l4152 5BA8                            l4320 2364  
                          l4312 234A                            l4304 22F0                            l4240 2070  
                          l4224 1FFA                            l4216 1FC8                            l4208 1F9E  
                          l4080 1F0E                            l4064 1E74                            l4072 1ECA  
                          l4056 1E26                            l4048 1E02                            l5032 3892  
                          l5024 3832                            l5016 37E6                            l5008 379A  
                          l5120 196E                            l5112 1884                            l5104 1782  
                          l5040 0E94                            l4410 5982                            l4170 5122  
                          l5210 2AF0                            l5202 57C0                            l4138 5BB8  
                          l4146 5BAE                            l4162 574E                            l4154 5714  
                          l4330 4B6E                            l4314 2358                            l4306 2304  
                          l4250 20BA                            l4242 207C                            l4234 2044  
                          l4226 2000                            l4218 1FCA                            l4090 1F38  
                          l4082 1F1C                            l4074 1EDA                            l4066 1E80  
                          l4058 1E34                            l5034 38AA                            l5026 384A  
                          l5018 37FE                            l5130 1A06                            l5122 1978  
                          l5114 188E                            l5106 178C                            l5050 1004  
                          l5042 0E98                            l1499 4F5C                            l1579 2722  
                          l4404 596C                            l4180 5176                            l4172 513A  
                          l4420 50B2                            l4412 505E                            l5220 2B3E  
                          l5212 2AFC                            l5204 2ABE                            l4148 5BB2  
                          l5300 5946                            l4164 5750                            l4156 5718  
                          l4340 4BF8                            l4332 4B9C                            l4316 235A  
                          l4308 231E                            l4260 210C                            l4252 20C6  
                          l4244 2094                            l4236 2050                            l4228 2020  
                          l4092 1F3A                            l4084 1F22                            l4076 1EEA  
                          l4068 1E8E                            l4324 5688                            l4500 26B2  
                          l5036 38AE                            l5028 3862                            l5140 1A86  
                          l5132 1A34                            l5116 18A6                            l5108 17BA  
                          l5124 197E                            l5060 10F0                            l5052 1018  
                          l5044 0EA4                            l4190 5B60                            l4406 5970  
                          l3710 4810                            l3702 47DA                            l3630 4D68  
                          l4182 5182                            l4174 5146                            l4414 5082  
                          l4422 50C0                            l5230 2B84                            l5222 2B44  
                          l5214 2B12                            l5206 2AD6                            l4510 342A  
                          l5302 5956                            l4158 5720                            l4430 4A66  
                          l4342 4C0A                            l4334 4BAC                            l4318 2360  
                          l4270 218A                            l4262 211C                            l4254 20D6  
                          l4246 20A0                            l4238 205A                            l4086 1F24  
                          l4078 1F0A                            l4326 5698                            l4502 26EE  
                          l5150 4966                            l5134 1A62                            l5126 19BE  
                          l5118 18AE                            l5070 127E                            l5062 10FC  
                          l5054 10C0                            l5046 0F40                            l5038 0E46  
                          l5310 52A8                            l4192 5B70                            l4408 597E  
                          l3720 4878                            l3712 481E                            l3704 47DE  
                          l3632 4D72                            l3640 56CE                            l4096 3FF8  
                          l4360 5436                            l3800 502E                            l4176 515E  
                          l4184 5190                            l4168 511E                            l4424 50D8  
                          l4416 509A                            l4600 4376                            l5240 2BDA  
                          l5232 2BAE                            l5224 2B58                            l5216 2B1E  
                          l5208 2ADA                            l4520 34BC                            l4512 343A  
                          l5304 5960                            l4440 4ABE                            l4432 4A7E  
                          l4344 4C18                            l4336 4BDA                            l4280 2204  
                          l4272 21C0                            l4264 2138                            l4256 20E2  
                          l4248 20AC                            l4352 58CA                            l4088 1F2A  
                          l4504 2712                            l5160 49C6                            l5152 497E  
                          l5144 493E                            l5136 1A68                            l5128 1A00  
                          l5080 1362                            l5072 1326                            l5064 119E  
                          l5056 10D4                            l5048 0F5C                            l5320 52E6  
                          l5312 52C0                            l3722 4886                            l3730 48EC  
                          l3714 483E                            l3706 47EC                            l3634 4D90  
                          l3626 4D44                            l3642 56DA                            l3650 590E  
                          l4098 401C                            l4362 543E                            l3810 5054  
                          l3802 5030                            l4186 51A8                            l4178 516A  
                          l4426 50F0                            l4418 50A6                            l4610 43C2  
                          l4602 4382                            l5250 2C3A                            l5242 2BE0  
                          l5234 2BC2                            l5226 2B66                            l5218 2B26  
                          l4530 3562                            l4522 34DC                            l4514 345A  
                          l5330 5790                            l4442 4ACE                            l4346 4C68  
                          l4338 4BEA                            l4290 2264                            l4282 2216  
                          l4274 21CE                            l4266 2144                            l4258 20F2  
                          l4194 1F4C                            l4354 58E0                            l5162 49D2  
                          l5154 498A                            l5146 4958                            l4370 558E  
                          l5138 1A7C                            l5090 158C                            l5082 1404  
                          l5074 133A                            l5066 11BA                            l5058 10EC  
                          l5402 459C                            l5314 52E0                            l5306 5272  
                          l3660 4656                            l3732 48FC                            l3724 48B4  
                          l3716 485C                            l3708 480C                            l3636 4DC6  
                          l3628 4D56                            l3644 56EC                            l3652 5912  
                          l3740 4EE4                            l3820 319A                            l4364 544C  
                          l3804 5036                            l4188 51C0                            l4428 5108  
                          l4700 57EA                            l4620 4408                            l4612 43CE  
                          l4604 438E                            l5260 2CA6                            l5252 2C42  
                          l5244 2BF8                            l5228 2B7E                            l4540 35FE  
                          l4532 357A                            l4524 34F4                            l4516 3472  
                          l4508 341E                            l5500 3108                            l5332 5792  
                          l5324 5754                            l5340 4CA2                            l4452 4AF8  
                          l4444 4AD2                            l4436 4A92                            l4348 4C6E  
                          l4284 2224                            l4276 21EC                            l4268 2160  
                          l4196 1F58                            l4356 58F0                            l3900 1AA8  
                          l5164 49EA                            l5156 49A2                            l5148 4962  
                          l4380 5598                            l5092 15A8                            l5084 1420  
                          l5076 1352                            l5068 1262                            l5180 4E4E  
                          l5172 4E0E                            l5420 462C                            l5412 45D4  
                          l5404 45A8                            l5308 528A                            l3670 46B6  
                          l3662 4664                            l3734 491C                            l3726 48D4  
                          l3718 4864                            l3646 56F0                            l3654 592A  
                          l3750 4F3A                            l3742 4EF8                            l3830 31F8  
                          l3822 31AA                            l3814 3132                            l4366 5472  
                          l3806 503C                            l4702 5800                            l4630 446A  
                          l4622 4422                            l4614 43DA                            l4606 439C  
                          l5270 2D16                            l5254 2C66                            l5246 2BFE  
                          l5238 2BD8                            l4550 36B2                            l4542 3634  
                          l4534 35B6                            l4526 352C                            l4518 34AA  
                          l5502 311C                            l5326 5764                            l5342 4CB6  
                          l5334 4C72                            l5350 5B2C                            l5430 5408  
                          l4710 2740                            l4470 4B5C                            l4462 4B20  
                          l4454 4B02                            l4446 4AE0                            l4438 4ABC  
                          l4294 228E                            l4286 2228                            l4278 21F6  
                          l4198 1F66                            l3902 1AB8                            l3910 1AE2  
                          l5166 4A52                            l5158 49AE                            l4374 55E8  
                          l4382 55DE                            l5094 1650                            l5086 14C8  
                          l5078 1356                            l5182 4E52                            l5174 4E24  
                          l5422 4646                            l5414 45E8                            l5406 45AE  
                          ?_pad 0011                            l3680 4700                            l3672 46BA  
                          l3664 4684                            l3728 48E6                            l3760 5816  
                          l3648 5902                            l3752 4F3E                            l3744 4F06  
                          l3840 3226                            l3832 3208                            l3824 31AE  
                          l3816 3152                            l4392 54F6                            l3808 504C  
                          l4632 447C                            l4624 4434                            l4616 43EC  
                          l4608 43B4                            l4640 41AC                            l5272 2D3A  
                          l5264 2CC2                            l5248 2C22                            l4544 3646  
                          l4536 35C8                            l4528 353E                            l5440 2E68  
                          l5328 577C                            l5344 4CC6                            l5336 4C7E  
                          l5352 5B2E                            l5432 541C                            l5424 53C8  
                          l4800 2980                            l4712 2750                            l4720 277A  
                          l4704 2724                            l4464 4B2C                            l4456 4B0C  
                          l4296 229A                            l4288 2236                            l3920 1B12  
                          l3912 1AF2                            l3904 1AC8                            l4480 23F2  
                          l5168 4A5C                            l4560 5A48                            l4376 562E  
                          l4368 5548                            l4552 5498                            l5096 1664  
                          l5088 14E4                            l5184 4E98                            l5176 4E28  
                          l5416 4608                            l5408 45BE                            l5600 3A14  
                          l5370 5B98                            l3690 4770                            l3682 470E  
                          l3674 46C6                            l3666 4688                            l3658 4652  
                          l3762 5830                            l3754 4F6C                            l3746 4F12  
                          l3738 4ED4                            l3850 3332                            l3842 32A8  
                          l3834 320E                            l3826 31CA                            l3818 317A  
                          l4394 5508                            l3770 4F9A                            l4634 4488  
                          l4626 4440                            l4618 43F8                            l4642 41D0  
                          l4650 420E                            l5290 2E04                            l5282 2DAA  
                          l5266 2CE6                            l5258 2C82                            l4546 3664  
                          l4538 35E6                            l5450 2ED6                            l5442 2E7A  
                          l5434 2E2E                            l5346 4CDA                            l5338 4C8E  
                          l5354 5B38                            l5426 53DC                            l4562 5AC2  
                          l4810 29EA                            l4802 2984                            l4730 27A6  
                          l4722 278A                            l4714 2760                            l4706 2730  
                          l4386 5638                            l4466 4B3C                            l4298 22A8  
                          l3930 1B52                            l3922 1B20                            l3914 1AF8  
                          l3906 1AD8                            l4490 24A6                            l4482 242E  
                          l4474 2376                            l4570 5A82                            l4554 5A62  
                          l5098 167C                            l5186 4EB4                            l5178 4E42  
                          l5418 4618                            l5610 3A8E                            l5602 3A28  
                          l5364 5B40                            l3692 4782                            l3684 4720  
                          l3676 46E4                            l3668 4696                            l3756 4F80  
                          l3748 4F26                            l3860 33A6                            l3852 3350  
                          l3844 32AE                            l3836 3216                            l3828 31E6  
                          l4396 5510                            l4580 59BC                            l3780 4FC6  
                          l3772 4F9E                            l3764 5A1C                            l4636 4498  
                          l4628 4450                            l4660 425E                            l4652 4226  
                          l4644 41E8                            l5292 2E10                            l5284 2DCE  
                          l5276 2D6A                            l4548 367C                            l5460 2F5E  
                          l5452 2F02                            l5444 2EA6                            l5436 2E40  
                          l4900 5B04                            l5356 5B3A                            l5348 5B22  
                          l5372 5AE2                            l5428 53F4                            l4564 5AC8  
                          l4820 2A4C                            l4812 29F6                            l4804 2992  
                          l4732 27B6                            l4740 27E0                            l4724 2790  
                          l4716 2770                            l4708 273E                            l4388 567E  
                          l4468 4B4C                            l3940 1B8C                            l3932 1B54  
                          l3924 1B22                            l3916 1B0A                            l3908 1ADA  
                          l4492 2574                            l4484 2452                            l4476 2396  
                          l4572 5A88                            l4556 5A68                            l5188 4ECC  
                          l5380 44FC                            l5612 3AA8                            l5604 3A42  
                          l5366 5B48                            l3686 474E                            l3678 46EC  
                          l3694 4788                            l3870 33E2                            l3862 33B6  
                          l3854 336A                            l3846 32B4                            l3838 3220  
                          l4398 5518                            l3790 4FF4                            l3782 4FCE  
                          l3774 4FAC                            l3766 5A38                            l4638 44B2  
                          l4670 42B2                            l4662 426A                            l4654 4234  
                          l4646 41F4                            l5278 2D8E                            l5198 5796  
                          l5470 2FD4                            l5462 2F78                            l5454 2F1C  
                          l5446 2EC0                            l5438 2E5C                            l5294 5B76  
                          l5358 5B3C                            l4830 2AAA                            l4822 2A62  
                          l4814 2A04                            l4806 29C0                            l4750 2822  
                          l4742 27F0                            l4734 27C6                            l4726 2796  
                          l4718 2772                            l3950 1BA0                            l3942 1B90  
                          l3926 1B32                            l3934 1B5C                            l3918 1B0C  
                          l4494 25E0                            l4486 246E                            l4478 23DE  
                          l4582 5890                            l4566 5AA2                            l4558 5A42  
                          l4574 52EA                            l4910 3CB4                            l4902 3C8E  
                          l4590 5872                            l5390 4546                            l5382 4510  
                          l5374 44CC                            l5614 3AAE                            l5606 3A56  
                          l5550 38D2                            l5368 5B52                            l3696 4798  
                          l3688 476E                            l3864 33BC                            l3872 33F2  
                          l3856 3384                            l3848 3318                            l3792 4FFC  
                          l3784 4FD2                            l3776 4FB4                            l3880 3ABA  
                          l4680 430A                            l4672 42C2                            l4664 427A  
                          l4656 4240                            l4648 4200                            l5288 2DEE  
                          l5480 3032                            l5472 2FD6                            l5464 2F7A  
                          l5456 2F1E                            l5448 2EC2                            l5296 5938  
                          l4832 2AB0                            l4824 2A7C                            l4816 2A2E  
                          l4744 2806                            l4736 27D6                            l4728 27A4  
                          l3960 1BB4                            l3952 1BA4                            l3944 1B94  
                          l3936 1B6C                            l3928 1B42                            l4496 2612  
                          l4568 5AA8                            l4576 534C                            l4920 3D06  
                          l4912 3CC0                            l4592 5888                            l5392 4552  
                          l5384 4524                            l5376 44DE                            l5608 3A70  
                          l5560 38EE                            l5552 38D6                            l3698 47B8  
                          l3866 33CE                            l3858 3394                            l4578 59A0  
                          l3794 500A                            l3786 4FDA                            l3778 4FB8  
                          l3890 3BBA                            l3882 3AD6                            l4690 5222  
                          l4682 4324                            l4674 42DC                            l4666 4294  
                          l4658 424C                            l5490 30A2                            l5482 3046  
                          l5474 2FEA                            l5466 2F8E                            l5458 2F32  
                          l5298 593C                            l4834 2AB2                            l4826 2A98  
                          l4818 2A32                            l4770 28A4                            l4762 285A  
                          l4746 2816                            l4754 2836                            l4738 27D8  
                          l4850 3EC0                            l4842 3E46                            l3970 1BC8  
                          l3962 1BB8                            l3954 1BA8                            l3946 1B98  
                          l3938 1B7E                            l4498 267E                            l4930 3D1A  
                          l4922 3D0C                            l4914 3CCC                            l4586 5856  
                          l5394 4566                            l5386 4536                            l5378 44F0  
                          l5570 3914                            l5562 38F2                            l5554 38DA  
                          l3868 33DA                            l3796 5010                            l3788 4FEC  
                          l3892 3C24                            l3884 3B38                            l4692 522E  
                          l4684 51DA                            l4596 433A                            l4676 42EE  
                          l4668 42A6                            l5492 30CE                            l5484 3072  
                          l5476 3016                            l5468 2FBA                            l3876 59F4  
                          l4828 2A9C                            l4780 28EA                            l4772 28AC  
                          l4764 2874                            l4756 2846                            l4748 281E  
                          l4860 3F1A                            l4844 3E56                            l3980 1C26  
                          l3964 1BBC                            l3956 1BAC                            l3948 1B9C  
                          l3972 1BCC                            l4940 3D6C                            l4932 3D26  
                          l4916 3CE4                            l4908 3CB0                            l4588 585C  
                          l5396 457E                            l5388 453A                            l5580 3938  
                          l5572 3914                            l5564 38F6                            l5556 38E6  
                          l3798 5026                            l3886 3B7E                            l4686 51FE  
                          l4694 523C                            l4598 435E                            l4678 42FA  
                          l5494 30E8                            l5486 308C                            l5478 3030  
                          l3878 5A04                            l4790 2942                            l4782 2908  
                          l4774 28BC                            l4766 2884                            l4758 2846  
                          l4870 3F7E                            l4862 3F1C                            l4854 3ED4  
                          l4846 3E64                            l3990 1C5C                            l3982 1C3C  
                          l3974 1BD0                            l3966 1BC0                            l3958 1BB0  
                          l3894 1A8C                            l4950 3D80                            l4942 3D72  
                          l4934 3D32                            l4918 3CEA                            l5398 4584  
                          l5590 39BE                            l5582 3944                            l5574 3920  
                          l5566 38FA                            l5558 38EA                            l3888 3B9E  
                          l4696 5254                            l4688 5216                            l5496 30EA  
                          l5488 308E                            l4792 2948                            l4784 290A  
                          l4776 28D0                            l4768 2894                            l4880 3FD6  
                          l4872 3F9C                            l4864 3F28                            l4856 3EDC  
                          l4848 3EAA                            l3992 1C66                            l3984 1C48  
                          l3976 1BFA                            l3968 1BC4                            l3896 1A98  
                          l4960 3DD2                            l4952 3D8C                            l4936 3D4A  
                          l4928 3D16                            l5592 39EC                            l5584 3958  
                          l5568 390E                            l4698 57D6                            l5498 30FE  
                          l4890 59D4                            l4794 2952                            l4786 291A  
                          l4778 28DE                            l4882 3FE4                            l4874 3F9E  
                          l4866 3F64                            l4858 3EE8                            l3994 1C88  
                          l3986 1C4C                            l3978 1C16                            l3898 1AA6  
                          l4970 3DE6                            l4962 3DD8                            l4954 3D98  
                          l4938 3D50                            l5594 39F2                            l5586 397A  
                          l5578 3936                            l4892 59DA                            l4796 2960  
                          l4788 292C                            l4884 3FE6                            l4876 3FA2  
                          l4868 3F70                            l3996 1C98                            l3988 1C5A  
                          l4980 3E38                            l4972 3DF2                            l4956 3DB0  
                          l4948 3D7C                            l5596 3A0A                            l5588 3996  
                          l4894 59DC                            l4798 2972                            l4878 3FC6  
                          l4990 36EE                            l4982 3E3E                            l4974 3DFE  
                          l4958 3DB6                            l5598 3A10                            l4896 59DE  
                          l4888 59CA                            l4992 36F2                            l4984 36C8  
                          l4976 3E16                            l4968 3DE2                            l4898 59E0  
                          l4994 3706                            l4986 36CC                            l4978 3E1C  
                          l4996 371E                            l4988 36D6                            l4998 3736  
                          STR_1 0E16                            STR_2 0E1E                            STR_3 0E24  
                          STR_4 0E31                            STR_5 0E3B                            STR_6 0E05  
                          u3000 4886                            u3001 4882                            u3010 48B4  
                          u3011 48B0                            u3020 48FC                            u3100 4FEC  
                          u3021 48F8                            u3101 4FE8                            u3030 4EE4  
                          u3110 500A                            u3031 4EE0                            u3111 5006  
                          u3040 4F06                            u3200 3208                            u3120 5026  
                          u4000 22A8                    _BAUD4CONbits 000EE9                            u3041 4F02  
                          u3201 3204                            u3121 5022                            u4001 22A4  
                          _LATE 000F7D                            u3050 4F5C                            u3210 3332  
                          u3130 504C                            u4010 22F0                            u3051 4F58  
                          u3211 332E                            u3131 5048                            u4011 22EC  
                          _LATG 000F7F                            u3060 4F6C                            u3220 3350  
                          u3140 3162                            u4100 548E                            u3300 5A1A  
                          u4020 231E                            u3061 4F68                            u3221 334C  
                          u3141 315C                            u4101 548A                            u3301 5A16  
                          u4021 231A                            u4110 599A                            u3070 5830  
                          u3230 336A                            u3150 3164                            u3310 3AD6  
                          u4030 2358                            u4111 5996                            u3071 582C  
                          u3231 3366                            u3311 3AD2                            u4031 2354  
                          u3240 3384                            u3160 317A                            u3080 4FAC  
                          u3320 3BBA                            u4120 50D8                            u5000 3F16  
                          u4200 4B4C                            u4040 4B9C                            u3400 1B32  
                          u3241 3380                            u3161 3176                            u3081 4FA8  
                          u3321 3BB6                            u4121 50D4                            u5001 3F12  
                          u4201 4B48                            u4041 4B98                            u3401 1B2E  
                          u3250 3394                            u3170 31AA                            u3090 4FC6  
                          u4130 50F0                            u5010 3F60                            u4050 4BDA  
                          u3410 1B42                            u4210 23B6                            _T2PR 000FBC  
                          u3251 3390                            u3171 31A6                            u3091 4FC2  
                          u4131 50EC                            u5011 3F5C                            u4051 4BD6  
                          u3411 1B3E                            u3260 33A6                            u3180 31CA  
                          u4300 343A                            u5020 3F7E                            u4140 4A7E  
                          u4060 4BF8                            u3500 1C88                            u3420 1B7E  
                          u4220 23DE                            u5100 3E38                            u3261 33A2  
                          u3181 31C6                            u4301 3436                            u5021 3F7A  
                          u4141 4A7A                            u4061 4BF4                            u3501 1C84  
                          u3421 1B7A                            u4221 23DA                            u5101 3E34  
                          u3270 33B6                            u3190 31F8                            u3334 3C14  
                          u4310 344C                            u5030 3F8E                            u4150 4AB2  
                          u4070 4C18                            u3510 1C98                            u3430 1B8C  
                          u3350 1AA6                            u4230 2412                            u5110 16AA  
                          u3271 33B2                            u3191 31F4                            u3335 3C10  
                          u4311 3444                            u5031 3F8A                            u4071 4C14  
                          u3511 1C94                            u3431 1B88                            u3351 1AA2  
                          u4215 23AC                            u5111 16A6                            u3280 33CE  
                          u3344 3C7E                            u4400 353E                            u5040 3F9C  
                          u4160 4AE0                            u4080 4C68                            u3600 1DF6  
                          u3520 1CCA                            u3440 1BFA                            u3360 1AB8  
                          u4240 242E                            u5200 1A62                            u5120 1778  
                          u3281 33CA                            u3345 3C7A                            u4401 353A  
                          u5041 3F98                            u4161 4ADC                            u4081 4C64  
                          u3601 1DF2                            u3521 1CC6                            u3441 1BF6  
                          u3361 1AB4                            u4241 242A                            u5201 1A5E  
                          u5121 1774                            u4410 3550                            u4330 3484  
                          u3290 5A04                            u5050 3FD6                            u4170 4AF4  
                          u4090 58E0                            u3610 1E12                            u3530 1CD8  
                          u3450 1C12                            u3370 1AC8                            u4250 246E  
                          u5210 1A7C                            u5130 17BA                            u4411 3548  
                          u4331 347C                            u3291 5A00                            u5051 3FD2  
                          u4171 4AF0                            u4155 4AA8                            u4091 58DC  
                          u3611 1E0E                            u3531 1CD4                            u3451 1C0C  
                          u3371 1AC4                            u4251 246A                            u4235 2408  
                          u5211 1A78                            u5131 17B6                            u2900 4664  
                          u5300 2D8E                            u4500 3646                            u5060 3FE4  
                          u4180 4B1C                            u3700 1EEA                            u3620 1E22  
                          u3540 1CF6                            u3460 1C14                            u3380 1B0A  
                          u4260 2574                            u5140 187A                            u5220 4ECC  
                          u2901 4660                            u5301 2D8A                            u4501 3642  
                          u5061 3FE0                            u4181 4B18                            u3701 1EE6  
                          u3621 1E1E                            u3541 1CF2                            u3381 1B06  
                          u4261 2570                            u5141 1876                            u5221 4EC8  
                          u2910 4696                            u5310 2DCE                            u5230 2BAE  
                          u4510 3658                            u4430 358C                            u4350 34BC  
                          u4190 4B3C                            u3710 1F0A                            u3630 1E34  
                          u3550 1D2E                            u3470 1C3C                            u3390 1B20  
                          u4270 2612                            u5070 3D06                            u5150 18A6  
                          u2911 4692                            u5311 2DCA                            u5231 2BAA  
                          u4511 3650                            u4431 3584                            u6007 356C  
                          u4351 34B8                            u4191 4B38                            u3711 1F06  
                          u3631 1E30                            u3551 1D2A                            u3471 1C38  
                          u3391 1B1C                            u4271 260E                            u5071 3D02  
                          u5151 18A2                            u2840 4D56                            u3800 513A  
                          u4600 4422                            u5240 2BD4                            u4360 34CE  
                          u4328 344E                            u3720 1F1C                            u3640 1E4A  
                          u3560 1D74                            u3480 1C5A                            u4280 26D2  
                          u5080 3D6C                            u5160 196E                            u5400 45BE  
                          u5320 52E0                            u2921 46C0                            u2841 4D52  
                          u3801 5136                            u4601 441E                            u5241 2BD0  
                          u6017 35A8                            u4361 34C6                            u3721 1F18  
                          u3641 1E46                            u3561 1D70                            u3481 1C56  
                          u5081 3D68                            u5161 196A                            u5401 45BA  
                          u5321 52DC                            u2930 46E4                            u2850 4D68  
                          u3810 515E                            u4610 4434                            u5250 2C22  
                          u4530 368E                            u4450 35C8                            u3730 1F38  
                          u3650 1E60                            u3570 1DAA                            u3490 1C7A  
                          u4290 26EE                            u5090 3DD2                            u5170 19BE  
                          u5410 45D0              verify_color@color2 0098                            u2931 46E0  
                          u2851 4D64                            u3811 515A                            u4611 4430  
                          u6107 42B8                            u5251 2C1E                            u4531 3686  
                          u6027 35F0                            u4451 35C4                            u3731 1F34  
                          u3651 1E5C                            u3571 1DA6                            u3491 1C76  
                          u4291 26EA                            u5091 3DCE                            u5171 19BA  
                          u5411 45CC                            u2940 470E                            u2860 4D90  
                          u3740 401C                            u3820 51A8                            u4620 446A  
                          u4700 42EE                            u5260 2C66                            u4460 35DA  
                          u4428 3552                            u4380 3506                            u4348 3486  
                          u5500 30A2                            u3900 1FEA                            u3660 1E74  
                          u3580 1DBA                            u5180 1A00                            u5420 4618  
                          u2941 470A                            u2861 4D8C                            u3741 4018  
                          u3821 51A4                            u4621 4466                            u6117 4300  
                          u4701 42EA                            u5261 2C62                            u6037 3626  
                          u4461 35D2                            u4381 34FE                            u5501 309E  
                          u3901 1FE6                            u3661 1E70                            u3581 1DB6  
                          u4285 26C8                            u5181 19FC                            u5421 4614  
                          u2950 474E                            u2870 4DC6                            u3750 4064  
                          u3830 51C0                            u4630 447C                            u4710 4324  
                          u5270 2CA6                            u4550 36C6                            u5510 30FE  
                          u5430 2E40                            u3910 2020                            u3670 1E8E  
                          u3590 1DE6                            u5190 1A34                            u5350 44F0  
                          u2951 474A                            u2871 4DC2                            u3751 4060  
                          u6207 51CA                            u3831 51BC                            u4631 4478  
                          u6127 4394                            u4711 4320                            u5271 2CA2  
                          u4551 36C2                            u6047 366E                            u5511 30FA  
                          u5431 2E3C                            u3911 201C                            u3671 1E8A  
                          u3591 1DE2                            u5191 1A30                            u5351 44EC  
                          u3840 5B70                            u2960 4798                            u2880 5710  
                          u3760 4088                            u4720 5254                            u4640 44B2  
                          u5280 2CE6                            u4528 365A                            u4480 3610  
                          u4448 358E                            u5440 2E7A                            u4800 2806  
                          u3920 2030                            u3680 1EC8                            u4560 5872  
                          u5360 4510                            u3841 5B6C                            u2961 4794  
                          u2881 570C                            u3761 4084                            u4721 5250  
                          u6217 5234                            u4641 44AE                            u6137 43FE  
                          u5281 2CE2                            u6057 36A4                            u4481 3608  
                          u5441 2E76                            u4801 2802                            u3921 202C  
                          u3681 1EC4                            u4561 586E                            u5361 450C  
                          u2970 47EC                            u2890 592A                            u3770 412C  
                          u4730 526C                            u4650 4226                            u5290 2D3A  
                          u4378 34D0                            u5450 2ED6                            u4810 2846  
                          u3930 21AA                            u3850 1F66                            u3690 1EDA  
                          u4570 5888                            u5370 4536                            u2971 47E8  
                          u2891 5926                            u3771 4128                            u4731 5268  
                          u6147 4446                            u4651 4222                            u5291 2D36  
                          u6067 57B4                            u5451 2ED2                            u4811 2842  
                          u3851 1F62                            u3691 1ED6                            u4571 5884  
                          u5371 4532                            u2980 481E                            u4580 43B4  
                          u4660 425E                            u4548 3690                            u5460 2F32  
                          u4900 29C0                            u4820 28BC                            u4740 273E  
                          u3780 573C                            u3940 2204                            u3860 1F78  
                          u5380 4566                            u2981 481A                            u6157 448E  
                          u4581 43B0                            u4661 425A                            u6077 2B70  
                          u5461 2F2E                            u4901 29BC                            u4821 28B8  
                          u4741 273A                            u3781 5734                            u3941 2200  
                          u3861 1F74                            u5381 4562                            u2990 485C  
                          u4590 43EC                            u4670 4294                            u4478 35DC  
                          u4398 3508                            u5470 2F8E                            u4910 29D6  
                          u4830 28DE                            u4750 2750                            u3950 2224  
                          u3870 1F88                            u5390 4598                            u2991 4858  
                          u6167 57F4                            u4591 43E8                            u4671 4290  
                          u6087 4206                            u5471 2F8A                            u4911 29D2  
                          u4831 28DA                            u4751 274C                            u3951 2220  
                          u3935 21A0                            u3871 1F84                            u5391 4594  
                          u4680 42A6                            u5480 2FEA                            u4920 29EA  
                          u4840 2908                            u4760 2760                            u3960 2236  
                          u3880 1FC8                            u6177 50B8                            u4681 42A2  
                          u6097 4270                            u5481 2FE6                            u4921 29E6  
                          u4841 2904                            u4761 275C                            u3961 2232  
                          u3881 1FC4                            u4690 42DC                            u4498 3612  
                          u5490 3046                            u4930 2A04                            u4850 292C  
                          u4770 27A4                            u3970 2264                            u3890 1FDA  
                          u5570 398C                            u6187 50FA                            u4691 42D8  
                          u5491 3042                            u4931 2A00                            u4851 2928  
                          u4771 27A0                            u3971 2260                            u3891 1FD6  
                          u5707 4E34                            u5571 3988                            u4940 2A4C  
                          u4860 2942                            u4780 27B6                            u3980 227A  
                          u5580 39BE                            u6197 5188                            u4941 2A48  
                          u4861 293E                            u4781 27B2                            u3981 2276  
                          u5717 10E0                            u5581 39BA                            u4950 2A7C  
                          u4870 2960                            u4790 27C6                            u3798 573E  
                          u3990 228E                            u4951 2A78                            u4871 295C  
                          u4791 27C2                            u3991 228A                            u5807 37A4  
                          u5727 1346                            u4960 2AAA                            u4880 2980  
                          u4961 2AA6                            u4881 297C                            u5817 3820  
                          u5737 1670                            u4890 2992                            u4970 3E56  
                          u4891 298E                            u4971 3E52                            u5907 49BA  
                          u5827 389C                            u5747 3CD6                            u5667 3A34  
                          u4980 3E64                            u4981 3E60                            u5917 49DE  
                          u5837 38B8                            u5757 3D3C                            u5677 527E  
                          u4990 3EC0                            u5927 5AD2                            u4991 3EBC  
                          u5847 5A52                            u5767 3DA2                            u5687 52B4  
                          u5937 53E6                            u5857 5A72                            u5777 3E08  
                          u5697 4638                            u5947 5426                            u5867 5A92  
                          u5787 36E0                            u5957 594C                            u5877 5AB2  
                          u5797 3740                            u5967 3464                            u5887 4972  
                          u5977 349C                            u5897 4996                            u5987 34E6  
                          u5997 351E                            abs@a 0013                            _dbuf 02C9  
                          _main 38D2                            _dtoa 3132                            _prec 01F8  
                          _nout 01F4                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 511E  
                          prodh 000FF4                            prodl 000FF3                            start 0028  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 5598  
               __end_of_HighISR 0028                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 47DA       amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074  
     amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1F4C                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 493E                 __end_of___fldiv 2ABE  
               __end_of___awdiv 505E                 __end_of___flneg 5902                 __end_of___flmul 2376  
               __end_of___flsub 56CE                 __end_of___fltol 4B6E                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 5AA2                           _LED_C 5AC2  
                         _LED_G 5A82                           _LED_R 5A42                           i2l686 0024  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 5B76      __end_of_I2C_2_Master_Start 5BC2  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5B98                 __end_of_compare 5890  
                  compare@lower 006A                           _flags 00F8                           _color 036A  
                  compare@upper 006E                           _fputc 4D44                           _fputs 56CE  
                         pad@fp 0011                           _width 01F6                           _putch 5BC4  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00EE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 58CA                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 5548                color_display@buf 0079  
       __end_of_color_read_Blue 5638           _I2C_2_Master_RepStart 5BA4                 ??_short_reverse 002A  
               ?_color_read_Red 0005                 __initialization 535A                    __end_of_main 3ABA  
                  __end_of_dtoa 341C                   main@amb_light 0374            __end_of_detect_color 1A8C  
                  __end_of_stop 51DA          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
                        ??_main 00F6                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                 _buggylight_init 5B76  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4C72                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5620 0020                          i2l5616 000A  
                        i2l5618 001A              turnLeft@angle_left 0024                       ??_HighISR 0001  
      __end_of_color_click_init 596C                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 3FF8                   ??_Timer0_init 0001  
               ??_color_predict 0058                    vfprintf@cfmt 0056                          ___flge 4B6E  
                     ??___aodiv 0011                       ??___fladd 0009                       ??___aomod 0011  
                        ___wmul 5A1C                       ??___fldiv 0017                       ??___awdiv 000B  
                     ??___flneg 0005                       ??___flmul 0030                          _action 2E2A  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 2ABE  
                 compare@result 0070                          _memory 033C                          clear_0 538A  
                        clear_1 5396                          clear_2 53A2                ___awdiv@quotient 000D  
                        _second 0368                          _motorL 01E6                          _motorR 01DC  
                        isa$std 000001                          pad@buf 0013                          _roundf 2376  
                        dtoa@fp 001C                          _strlen 5902                       ??_compare 005F  
                 toggle_light@i 0004                __end_of_pin_init 5B02                          fputc@c 0001  
       toggle_light@lightnumber 0005                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                  test_function@m 00E6                  test_function@w 00E8  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 005F  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 5498  
                        stop@mL 001A                          stop@mR 001C               ??_initDCmotorsPWM 0003  
                     ??_sprintf 0058                __end_of_turnLeft 44C8                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 53B6  
                 verify_color@m 0092                   verify_color@w 0094        __end_of_color_read_Clear 5688  
                    ___flneg@f1 0001        __end_of_color_read_Green 55E8          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 5AC2  
                 __end_of_LED_C 5AE2                   __end_of_LED_G 5AA2                   __end_of_LED_R 5A62  
              ?_color_read_Blue 0005                 _Interrupts_init 5B98                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 505E                    __pidataBANK0 5BC2                    __pidataBANK1 5BC6  
       __end_of_buggylight_init 5B8C            turnRight@angle_right 0024           _distance_measure$3258 0074  
                 __end_of_fputc 4E0E               detect_color@color 008B                   __end_of_fputs 5712  
                 __end_of_putch 5BC6                   __end_of_toint 0E05             __end_of_Timer0_init 5B5E  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 006A              ??_distance_measure 0070  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00F8                      __pbssBANK1 01C8                      __pbssBANK2 02C9  
                    __pbssBANK3 0300                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 5B02                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 00E0                         ?_goback 0058                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5A62  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E              short_burst_back@mL 0026  
            short_burst_back@mR 0028                    _detect_color 0E46   __end_of_color_data_collection 3E44  
       __end_of_Interrupts_init 5BA4          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5B22              _I2C_2_Master_Start 5BB8  
                    _initUSART4 5B22              _I2C_2_Master_Write 5B8C                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00F2                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5B40         sendStringSerial4@string 0002  
                       ___aodiv 4652                         ___fladd 1A8C                         ___aomod 47DA  
                       ___fldiv 2724                         ___awdiv 4F9A                         ___flneg 58CA  
                       ___flmul 1F4C                         ___flsub 5688                         ___fltol 4A66  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00       distance_measure@threshold 007A  
                       __pcinit 535A                         __ramtop 0E00                      _read_color 5498  
                     ?_turnLeft 0020                         __ptext0 38D2                         __ptext1 526E  
                       __ptext2 44C8                         __ptext3 4E0E                         __ptext4 0E46  
                       __ptext5 5856                         __ptext6 3C8E                         __ptext7 5498  
                       __ptext8 52EA                         __ptext9 36C8                         _compare 5856  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 5890                   _RxBufWriteCnt 00FD  
                       goback@i 00DE          distance_measure@CC_amb 0078                         main@amb 036C  
        distance_measure@CG_amb 0072                         _sprintf 54F6                         main@rgb 0377  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 53B6  
            setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF                 _CALIBRATION_180 01FA  
                       fputc@fp 0003           __end_of_test_function 4652                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00EA                 test_function@mR 00EC  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
              _short_burst_back 53C8               __end_of_vfpfcnvrt 41AC           __end_of_short_reverse 57D6  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5754                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4D44  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4               __end_of_turnRight 433A  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C                      goback@buf2 0200                      goback@buf3 0164  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                      _start_move 0366  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 01C8                    _EUSART4TXbuf 0300  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0092           __end_of_color_display 535A                      main@motorL 039B  
                    main@motorR 03A5     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0085                  detect_color@BC 007F                  detect_color@BG 0089  
                detect_color@GB 007D                  detect_color@GG 0087                  detect_color@BR 008C  
                detect_color@GR 0081                  detect_color@RB 007B                  detect_color@RG 0079  
                detect_color@RR 0083           __end_of_color_predict 59CA                  __end_of___flge 4C72  
                _fullSpeedAhead 51DA                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5A42                  __end_of_action 3132  
                   ?_read_color 000C                  __end_of_goback 2E2A                  __end_of_roundf 2724  
            turnRight@delay_135 0026              turnRight@delay_180 0028                  __end_of_strlen 5938  
           color_read_Clear@tmp 000A             start_initialization 535A                     __end_of_abs 5856  
                   __end_of_pad 4F9A                   _TxBufWriteCnt 00FB               turnLeft@delay_135 0026  
             turnLeft@delay_180 0028                  ??_toggle_light 0002                  ??_verify_color 0096  
           color_read_Green@tmp 000A                  _reverse_square 57D6         __end_of_initDCmotorsPWM 5796  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 526E                        ??___flge 0009  
                      ??___wmul 0005                        ??_action 005E                        ??_goback 005C  
               short_reverse@mL 0026                 short_reverse@mR 0028                     __pdataBANK0 00FE  
                   __pdataBANK1 01FA                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                   __pcstackBANK2 0200  
                 __pcstackBANK3 036C                ___aodiv@dividend 0001                        ?_HighISR 0001  
        __end_of_reverse_square 5816                       _dtoa$2895 002E                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001A                       __pintcode 0008                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 0028                        ?___flsub 0011                        ?___fltol 005B  
            test_function@color 00F3                 turnRight@i_1358 002C                 turnRight@i_1359 002E  
                turnLeft@i_1333 002C                  turnLeft@i_1334 002E            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 59F4               _I2C_2_Master_Init 59CA               _I2C_2_Master_Read 5712  
             _I2C_2_Master_Stop 5BAE          toggle_light@toggletime 0001                    _RxBufReadCnt 00FC  
      __end_of_short_burst_back 5436                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001                       action@buf 0264        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 596C           _color_data_collection 3C8E  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u559_40 001A  
                      i2u559_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 036B                       _vfpfcnvrt 3FF8       __end_of_I2C_2_Master_Idle 5A1C  
          __end_of_toggle_light 36C8       __end_of_I2C_2_Master_Init 59F4       __end_of_I2C_2_Master_Read 5754  
             ___wmul@multiplier 0001                       goback@buf 0100       __end_of_I2C_2_Master_Stop 5BB8  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 52EA  
        test_function@amb_light 00F0                       main@white 037F               ??_color_read_Blue 0007  
                     _stop_move 0364                   detect_color@m 0071                   detect_color@w 0073  
                  _TxBufReadCnt 00FA                       _turnRight 41AC                 _calibrate_white 36C8  
     __end_of_sendStringSerial4 599C               _amb_light_measure 493E   __end_of_I2C_2_Master_RepStart 5BAE  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3C8E                      roundf@F527 01F0  
              _distance_measure 4E0E                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 511E                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                     action@color 02C8  
                    sprintf@fmt 0062                        ___xxtofl 3E44                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6              __end_of_initUSART4 5B40                      ?_turnRight 0020  
                      __ptext10 5548                        __ptext11 5598                        __ptext20 5688  
                      __ptext12 55E8                        __ptext21 1A8C                        __ptext13 5A42  
                      __ptext30 2724                        __ptext22 58CA                        __ptext14 5A62  
                      __ptext31 5AC2                        __ptext23 1F4C                        __ptext15 5A82  
                      __ptext40 5BAE                        __ptext32 53C8                        __ptext24 4B6E  
                      __ptext16 5AA2                        __ptext41 5BB8                        __ptext33 5AE2  
                      __ptext25 4A66                        __ptext17 493E                        __ptext50 433A  
                      __ptext42 59F4                        __ptext34 5B22                        __ptext26 5638  
                      __ptext18 5890                        __ptext51 57D6                        __ptext43 59CA  
                      __ptext35 4C72                        __ptext27 5BA4                        __ptext19 2376  
                      __ptext60 5436                        __ptext52 505E                        __ptext44 5B76  
                      __ptext36 5754                        __ptext28 5712                        __ptext61 3FF8  
                      __ptext53 511E                        __ptext45 2E2A                        __ptext37 5938  
                      __ptext29 3E44                        __ptext70 4652                        __ptext62 3132  
                      __ptext54 51DA                        __ptext46 341C                        __ptext38 5B02  
                      __ptext71 596C                        __ptext63 4ED4                        __ptext55 3ABA  
                      __ptext47 5796                        __ptext39 5B8C                        __ptext72 5B5E  
                      __ptext64 5902                        __ptext56 5A1C                        __ptext48 2ABE  
                      __ptext73 5B40                        __ptext65 56CE                        __ptext57 4F9A  
                      __ptext49 41AC                        __ptext74 5B98                        __ptext66 4D44  
                      __ptext58 599C                        __ptext67 5BC4                        __ptext59 54F6  
                      __ptext68 5816                        __ptext69 47DA       __end_of_amb_light_measure 4A66  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
                turnRight@delay 0030          test_function@test_code 00F5                   turnLeft@delay 0030  
                      action@mL 00E0                        action@mR 00E2                      turnLeft@mL 0020  
                    turnLeft@mR 0022              __end_of_read_color 54F6                        _pin_init 5AE2  
                    turnRight@i 002A                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FE  
                      goback@mL 0058                        goback@mR 005A                        _vfprintf 5436  
                      _turnLeft 433A                ___aomod@dividend 0001         __end_of_calibrate_white 38D2  
                    _INTCONbits 000FF2                     _setMotorPWM 3ABA                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0001                ??_fullSpeedAhead 001E  
                 _test_function 44C8                       turnLeft@i 002A                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 5796                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 5938                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3257 008E                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     ??_turnRight 0025               ?_short_burst_back 0026  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012              ??_short_burst_back 002A                 _sendCharSerial4 5B5E  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 00E6  
                  _toggle_light 341C                    ___aomod@sign 0012                    _verify_color 526E  
                   _roundf$3260 0049                     _roundf$3259 004F                   _color_display 52EA  
               main@stop_signal 0376  
