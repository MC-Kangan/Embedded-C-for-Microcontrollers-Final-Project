

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 16 01:12:16 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.35
    99                           ; Generated 05/05/2021 GMT
   100                           ; 
   101                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F67K40 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK0
   135  005CA2                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _SENSITIVITY
   139  005CA2  0163               	dw	355
   140                           
   141                           	psect	smallconst
   142  000E00                     __psmallconst:
   143                           	callstack 0
   144  000E00  00                 	db	0
   145  000E01  0000               	dw	0
   146  000E03  4B00               	dw	19200
   147  000E05                     __end_of_toint:
   148                           	callstack 0
   149  0000                     _TX4REG	set	3812
   150  0000                     _RC4STAbits	set	3815
   151  0000                     _SP4BRGH	set	3814
   152  0000                     _LATEbits	set	3965
   153  0000                     _TRISGbits	set	3975
   154  0000                     _TRISEbits	set	3973
   155  0000                     _LATGbits	set	3967
   156  0000                     _LATFbits	set	3966
   157  0000                     _TRISFbits	set	3974
   158  0000                     _SSP2CON2bits	set	3802
   159  0000                     _LATG	set	3967
   160  0000                     _LATE	set	3965
   161  0000                     _RX4PPS	set	3605
   162  0000                     _SSP2CLKPPS	set	3612
   163  0000                     _SSP2DATPPS	set	3613
   164  0000                     _ANSELDbits	set	3751
   165  0000                     _SSP2ADD	set	3798
   166  0000                     _SSP2CON1bits	set	3801
   167  0000                     _LATAbits	set	3961
   168  0000                     _LATDbits	set	3964
   169  0000                     _LATHbits	set	3968
   170  0000                     _TRISDbits	set	3972
   171  0000                     _TRISHbits	set	3976
   172  0000                     _PORTFbits	set	3982
   173  0000                     _T2PR	set	4028
   174  0000                     _T2CONbits	set	4029
   175  0000                     _PWM7DCH	set	4000
   176  0000                     _PWM6DCH	set	4003
   177  0000                     _TRISAbits	set	3969
   178  0000                     _TRISCbits	set	3971
   179  0000                     _LATCbits	set	3963
   180  0000                     _RC4REG	set	3811
   181  0000                     _SP4BRGL	set	3813
   182  0000                     _TX4STAbits	set	3816
   183  0000                     _BAUD4CONbits	set	3817
   184  0000                     _SSP2CON2	set	3802
   185  0000                     _SSP2STAT	set	3800
   186  0000                     _ANSELFbits	set	3764
   187  0000                     _SSP2BUF	set	3797
   188  0000                     _PIE0bits	set	3625
   189  0000                     _PIR4bits	set	3639
   190  0000                     _RC0PPS	set	3682
   191  0000                     _RC7PPS	set	3689
   192  0000                     _RD5PPS	set	3695
   193  0000                     _RE2PPS	set	3700
   194  0000                     _RD6PPS	set	3696
   195  0000                     _TMR0L	set	4051
   196  0000                     _TMR0H	set	4052
   197  0000                     _T0CON0bits	set	4053
   198  0000                     _T2CLKCONbits	set	4031
   199  0000                     _T2HLTbits	set	4030
   200  0000                     _PWM6CONbits	set	4004
   201  0000                     _PWM7CONbits	set	4001
   202  0000                     _T0CON1bits	set	4054
   203  0000                     _INTCONbits	set	4082
   204  0000                     _PIR0bits	set	3635
   205  000E05                     STR_1:
   206                           
   207                           ; BSR set to: 14
   208  000E05  25                 	db	37
   209  000E06  64                 	db	100	;'d'
   210  000E07  09                 	db	9
   211  000E08  25                 	db	37
   212  000E09  64                 	db	100	;'d'
   213  000E0A  09                 	db	9
   214  000E0B  25                 	db	37
   215  000E0C  64                 	db	100	;'d'
   216  000E0D  09                 	db	9
   217  000E0E  25                 	db	37
   218  000E0F  64                 	db	100	;'d'
   219  000E10  0D                 	db	13
   220  000E11  0A                 	db	10
   221  000E12  00                 	db	0
   222  000E13  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           ; #config settings
   225                           
   226                           	psect	cinit
   227  0058B6                     __pcinit:
   228                           	callstack 0
   229  0058B6                     start_initialization:
   230                           	callstack 0
   231  0058B6                     __initialization:
   232                           	callstack 0
   233                           
   234                           ; Initialize objects allocated to BANK0 (2 bytes)
   235                           ; load TBLPTR registers with __pidataBANK0
   236  0058B6  0EA2               	movlw	low __pidataBANK0
   237  0058B8  6EF6               	movwf	tblptrl,c
   238  0058BA  0E5C               	movlw	high __pidataBANK0
   239  0058BC  6EF7               	movwf	tblptrh,c
   240  0058BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   241  0058C0  6EF8               	movwf	tblptru,c
   242  0058C2  0009               	tblrd		*+	;fetch initializer
   243  0058C4  CFF5 F0FE          	movff	tablat,__pdataBANK0
   244  0058C8  0009               	tblrd		*+	;fetch initializer
   245  0058CA  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   246                           
   247                           ; Clear objects allocated to BANK1 (102 bytes)
   248  0058CE  EE01  F000         	lfsr	0,__pbssBANK1
   249  0058D2  0E66               	movlw	102
   250  0058D4                     clear_0:
   251  0058D4  6AEE               	clrf	postinc0,c
   252  0058D6  06E8               	decf	wreg,f,c
   253  0058D8  E1FD               	bnz	clear_0
   254                           
   255                           ; Clear objects allocated to BANK0 (4 bytes)
   256  0058DA  0100               	movlb	0
   257  0058DC  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   258  0058DE  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   259  0058E0  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   260  0058E2  6BFA               	clrf	__pbssBANK0& (0+255),b
   261  0058E4                     end_of_initialization:
   262                           	callstack 0
   263  0058E4                     __end_of__initialization:
   264                           	callstack 0
   265  0058E4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   266  0058E6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267  0058E8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   268  0058EA  6EF8               	movwf	tblptru,c
   269  0058EC  0E0E               	movlw	high __Lsmallconst
   270  0058EE  6EF7               	movwf	tblptrh,c
   271  0058F0  0100               	movlb	0
   272  0058F2  EF3C  F01C         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssBANK0
   275  0000FA                     __pbssBANK0:
   276                           	callstack 0
   277  0000FA                     _prec:
   278                           	callstack 0
   279  0000FA                     	ds	2
   280  0000FC                     _flags:
   281                           	callstack 0
   282  0000FC                     	ds	2
   283                           
   284                           	psect	dataBANK0
   285  0000FE                     __pdataBANK0:
   286                           	callstack 0
   287  0000FE                     _SENSITIVITY:
   288                           	callstack 0
   289  0000FE                     	ds	2
   290                           
   291                           	psect	bssBANK1
   292  000100                     __pbssBANK1:
   293                           	callstack 0
   294  000100                     _memory:
   295                           	callstack 0
   296  000100                     	ds	40
   297  000128                     _motorR:
   298                           	callstack 0
   299  000128                     	ds	9
   300  000131                     _motorL:
   301                           	callstack 0
   302  000131                     	ds	9
   303  00013A                     roundf@F527:
   304                           	callstack 0
   305  00013A                     	ds	4
   306  00013E                     _nout:
   307                           	callstack 0
   308  00013E                     	ds	2
   309  000140                     _width:
   310                           	callstack 0
   311  000140                     	ds	2
   312  000142                     _centisecond:
   313                           	callstack 0
   314  000142                     	ds	2
   315  000144                     _color:
   316                           	callstack 0
   317  000144                     	ds	1
   318  000145                     _array_index:
   319                           	callstack 0
   320  000145                     	ds	1
   321  000146                     _dbuf:
   322                           	callstack 0
   323  000146                     	ds	32
   324                           
   325                           	psect	cstackBANK1
   326  000166                     __pcstackBANK1:
   327                           	callstack 0
   328  000166                     main@amb:
   329                           	callstack 0
   330                           
   331                           ; 8 bytes @ 0x0
   332  000166                     	ds	8
   333  00016E                     main@amb_light:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x8
   337  00016E                     	ds	2
   338  000170                     main@accident:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xA
   342  000170                     	ds	1
   343  000171                     main@start_time:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xB
   347  000171                     	ds	2
   348  000173                     main@stop_time:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xD
   352  000173                     	ds	2
   353  000175                     main@rgb:
   354                           	callstack 0
   355                           
   356                           ; 8 bytes @ 0xF
   357  000175                     	ds	8
   358  00017D                     main@white:
   359                           	callstack 0
   360                           
   361                           ; 28 bytes @ 0x17
   362  00017D                     	ds	28
   363  000199                     main@motorL:
   364                           	callstack 0
   365                           
   366                           ; 9 bytes @ 0x33
   367  000199                     	ds	9
   368  0001A2                     main@motorR:
   369                           	callstack 0
   370                           
   371                           ; 9 bytes @ 0x3C
   372  0001A2                     	ds	9
   373                           
   374                           	psect	cstackBANK0
   375  000060                     __pcstackBANK0:
   376                           	callstack 0
   377  000060                     ??___fltol:
   378  000060                     ?_sprintf:
   379                           	callstack 0
   380  000060                     sprintf@s:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  000060                     	ds	2
   385  000062                     sprintf@fmt:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x2
   389  000062                     	ds	2
   390  000064                     ___fltol@sign1:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394  000064                     	ds	1
   395  000065                     ___fltol@exp1:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000065                     	ds	1
   400  000066                     ?_lroundf:
   401                           	callstack 0
   402  000066                     lroundf@x:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x6
   406  000066                     	ds	4
   407  00006A                     ?_amb_light_measure:
   408                           	callstack 0
   409  00006A                     compare@lower:
   410                           	callstack 0
   411  00006A                     amb_light_measure@amb:
   412                           	callstack 0
   413  00006A                     distance_measure@mL:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  00006A                     	ds	2
   418  00006C                     ??_amb_light_measure:
   419  00006C                     compare@value2compare:
   420                           	callstack 0
   421  00006C                     distance_measure@mR:
   422                           	callstack 0
   423  00006C                     sprintf@ap:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xC
   427  00006C                     	ds	2
   428  00006E                     compare@upper:
   429                           	callstack 0
   430  00006E                     amb_light_measure@upper_bound:
   431                           	callstack 0
   432  00006E                     distance_measure@amb_light:
   433                           	callstack 0
   434  00006E                     sprintf@f:
   435                           	callstack 0
   436                           
   437                           ; 11 bytes @ 0xE
   438  00006E                     	ds	2
   439  000070                     ??_distance_measure:
   440  000070                     compare@result:
   441                           	callstack 0
   442  000070                     amb_light_measure@CC_amb_ave:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x10
   446  000070                     	ds	1
   447  000071                     detect_color@m:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x11
   451  000071                     	ds	1
   452  000072                     amb_light_measure@CC_amb_1:
   453                           	callstack 0
   454  000072                     distance_measure@CG_amb:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x12
   458  000072                     	ds	1
   459  000073                     detect_color@w:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x13
   463  000073                     	ds	1
   464  000074                     amb_light_measure@CC_amb_2:
   465                           	callstack 0
   466  000074                     _distance_measure$3162:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x14
   470  000074                     	ds	1
   471  000075                     ??_detect_color:
   472                           
   473                           ; 1 bytes @ 0x15
   474  000075                     	ds	1
   475  000076                     amb_light_measure@CC_amb_3:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x16
   479  000076                     	ds	2
   480  000078                     distance_measure@CC_amb:
   481                           	callstack 0
   482  000078                     setup@amb_light:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x18
   486  000078                     	ds	1
   487  000079                     detect_color@RG:
   488                           	callstack 0
   489  000079                     color_display@buf:
   490                           	callstack 0
   491  000079                     color_predict@buf:
   492                           	callstack 0
   493                           
   494                           ; 100 bytes @ 0x19
   495  000079                     	ds	1
   496  00007A                     distance_measure@threshold:
   497                           	callstack 0
   498  00007A                     setup@white:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x1A
   502  00007A                     	ds	1
   503  00007B                     detect_color@BC:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x1B
   507  00007B                     	ds	1
   508  00007C                     distance_measure@stop:
   509                           	callstack 0
   510  00007C                     setup@amb:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1C
   514  00007C                     	ds	1
   515  00007D                     detect_color@GR:
   516                           	callstack 0
   517  00007D                     straight_action@mL:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1D
   521  00007D                     	ds	1
   522  00007E                     setup@mL:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1E
   526  00007E                     	ds	1
   527  00007F                     detect_color@BB:
   528                           	callstack 0
   529  00007F                     straight_action@mR:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1F
   533  00007F                     	ds	1
   534  000080                     setup@mR:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x20
   538  000080                     	ds	1
   539  000081                     detect_color@RB:
   540                           	callstack 0
   541  000081                     straight_action@amb_light:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x21
   545  000081                     	ds	1
   546  000082                     ??_setup:
   547                           
   548                           ; 1 bytes @ 0x22
   549  000082                     	ds	1
   550  000083                     detect_color@GB:
   551                           	callstack 0
   552  000083                     straight_action@start_time:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x23
   556  000083                     	ds	2
   557  000085                     detect_color@BR:
   558                           	callstack 0
   559  000085                     straight_action@stop_time:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x25
   563  000085                     	ds	2
   564  000087                     ??_straight_action:
   565  000087                     detect_color@GG:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x27
   569  000087                     	ds	2
   570  000089                     detect_color@color:
   571                           	callstack 0
   572  000089                     straight_action@stop_signal:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x29
   576  000089                     	ds	1
   577  00008A                     detect_color@RR:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x2A
   581  00008A                     	ds	2
   582  00008C                     detect_color@BG:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x2C
   586  00008C                     	ds	2
   587  00008E                     _detect_color$3161:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x2E
   591  00008E                     	ds	4
   592  000092                     verify_color@m:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x32
   596  000092                     	ds	2
   597  000094                     verify_color@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x34
   601  000094                     	ds	2
   602  000096                     ??_verify_color:
   603                           
   604                           ; 1 bytes @ 0x36
   605  000096                     	ds	2
   606  000098                     verify_color@color2:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x38
   610  000098                     	ds	2
   611  00009A                     verify_color@color:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x3A
   615  00009A                     	ds	67
   616  0000DD                     color_predict@color:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x7D
   620  0000DD                     	ds	1
   621  0000DE                     color_data_collection@i:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x7E
   625  0000DE                     	ds	2
   626  0000E0                     color_data_collection@j:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x80
   630  0000E0                     	ds	2
   631  0000E2                     color_data_collection@k:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x82
   635  0000E2                     	ds	2
   636  0000E4                     color_data_collection@x:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x84
   640  0000E4                     	ds	2
   641  0000E6                     test_function@m:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x86
   645  0000E6                     	ds	2
   646  0000E8                     test_function@w:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x88
   650  0000E8                     	ds	2
   651  0000EA                     test_function@mL:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x8A
   655  0000EA                     	ds	2
   656  0000EC                     test_function@mR:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x8C
   660  0000EC                     	ds	2
   661  0000EE                     ??_test_function:
   662                           
   663                           ; 1 bytes @ 0x8E
   664  0000EE                     	ds	2
   665  0000F0                     test_function@amb_light:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x90
   669  0000F0                     	ds	2
   670  0000F2                     test_function@complete:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x92
   674  0000F2                     	ds	1
   675  0000F3                     test_function@color:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x93
   679  0000F3                     	ds	1
   680  0000F4                     test_function@stop_signal:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x94
   684  0000F4                     	ds	1
   685  0000F5                     test_function@test_code:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x95
   689  0000F5                     	ds	1
   690  0000F6                     ??_main:
   691                           
   692                           ; 1 bytes @ 0x96
   693  0000F6                     	ds	4
   694                           
   695                           	psect	cstackCOMRAM
   696  000001                     __pcstackCOMRAM:
   697                           	callstack 0
   698  000001                     ??_LED_OFF:
   699  000001                     ??_LED_R:
   700  000001                     ??_LED_C:
   701  000001                     ??_LED_B:
   702  000001                     ??_LED_G:
   703  000001                     ??_I2C_2_Master_Idle:
   704  000001                     ?_strlen:
   705                           	callstack 0
   706  000001                     ?___wmul:
   707                           	callstack 0
   708  000001                     ?___fladd:
   709                           	callstack 0
   710  000001                     ?___flneg:
   711                           	callstack 0
   712  000001                     ?___xxtofl:
   713                           	callstack 0
   714  000001                     ?___aodiv:
   715                           	callstack 0
   716  000001                     ?___aomod:
   717                           	callstack 0
   718  000001                     toggle_light@toggletime:
   719                           	callstack 0
   720  000001                     sendCharSerial4@charToSend:
   721                           	callstack 0
   722  000001                     initDCmotorsPWM@PWMperiod:
   723                           	callstack 0
   724  000001                     initDCmotors_parameter@motorL:
   725                           	callstack 0
   726  000001                     ___wmul@multiplier:
   727                           	callstack 0
   728  000001                     fputc@c:
   729                           	callstack 0
   730  000001                     strlen@s:
   731                           	callstack 0
   732  000001                     ___flge@ff1:
   733                           	callstack 0
   734  000001                     ___flneg@f1:
   735                           	callstack 0
   736  000001                     ___fladd@b:
   737                           	callstack 0
   738  000001                     ___xxtofl@val:
   739                           	callstack 0
   740  000001                     ___aodiv@dividend:
   741                           	callstack 0
   742  000001                     ___aomod@dividend:
   743                           	callstack 0
   744                           
   745                           ; 8 bytes @ 0x0
   746  000001                     	ds	1
   747  000002                     ??_I2C_2_Master_Read:
   748  000002                     ??_toggle_light:
   749  000002                     I2C_2_Master_Write@data_byte:
   750                           	callstack 0
   751  000002                     sendStringSerial4@string:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1
   755  000002                     	ds	1
   756  000003                     color_writetoaddr@value:
   757                           	callstack 0
   758  000003                     I2C_2_Master_Read@ack:
   759                           	callstack 0
   760  000003                     initDCmotors_parameter@motorR:
   761                           	callstack 0
   762  000003                     ___wmul@multiplicand:
   763                           	callstack 0
   764  000003                     fputc@fp:
   765                           	callstack 0
   766  000003                     strlen@a:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x2
   770  000003                     	ds	1
   771  000004                     toggle_light@i:
   772                           	callstack 0
   773  000004                     color_writetoaddr@address:
   774                           	callstack 0
   775  000004                     I2C_2_Master_Read@tmp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x3
   779  000004                     	ds	1
   780  000005                     ??_fputc:
   781  000005                     ??_color_click_init:
   782  000005                     ??___xxtofl:
   783  000005                     ?_color_read_Red:
   784                           	callstack 0
   785  000005                     ?_color_read_Blue:
   786                           	callstack 0
   787  000005                     ?_color_read_Green:
   788                           	callstack 0
   789  000005                     ?_color_read_Clear:
   790                           	callstack 0
   791  000005                     toggle_light@lightnumber:
   792                           	callstack 0
   793  000005                     ___wmul@product:
   794                           	callstack 0
   795  000005                     ___flge@ff2:
   796                           	callstack 0
   797  000005                     ___fladd@a:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x4
   801  000005                     	ds	2
   802  000007                     ??_color_read_Red:
   803  000007                     ??_color_read_Blue:
   804  000007                     ??_color_read_Green:
   805  000007                     ??_color_read_Clear:
   806  000007                     ?___awdiv:
   807                           	callstack 0
   808  000007                     ___awdiv@dividend:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x6
   812  000007                     	ds	2
   813  000009                     ??___fladd:
   814  000009                     ??___flge:
   815  000009                     ___xxtofl@sign:
   816                           	callstack 0
   817  000009                     ___awdiv@divisor:
   818                           	callstack 0
   819  000009                     ___aodiv@divisor:
   820                           	callstack 0
   821  000009                     ___aomod@divisor:
   822                           	callstack 0
   823                           
   824                           ; 8 bytes @ 0x8
   825  000009                     	ds	1
   826  00000A                     ___xxtofl@exp:
   827                           	callstack 0
   828  00000A                     color_read_Red@tmp:
   829                           	callstack 0
   830  00000A                     color_read_Blue@tmp:
   831                           	callstack 0
   832  00000A                     color_read_Green@tmp:
   833                           	callstack 0
   834  00000A                     color_read_Clear@tmp:
   835                           	callstack 0
   836  00000A                     fputs@s:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x9
   840  00000A                     	ds	1
   841  00000B                     ___awdiv@counter:
   842                           	callstack 0
   843  00000B                     ___xxtofl@arg:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0xA
   847  00000B                     	ds	1
   848  00000C                     ___awdiv@sign:
   849                           	callstack 0
   850  00000C                     read_color@m:
   851                           	callstack 0
   852  00000C                     calibrate_white@w:
   853                           	callstack 0
   854  00000C                     fputs@fp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0xB
   858  00000C                     	ds	1
   859  00000D                     ___fladd@signs:
   860                           	callstack 0
   861  00000D                     ___awdiv@quotient:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0xC
   865  00000D                     	ds	1
   866  00000E                     ??_calibrate_white:
   867  00000E                     ___fladd@aexp:
   868                           	callstack 0
   869  00000E                     fputs@c:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0xD
   873  00000E                     	ds	1
   874  00000F                     ?___fldiv:
   875                           	callstack 0
   876  00000F                     ___fladd@bexp:
   877                           	callstack 0
   878  00000F                     setMotorPWM@m:
   879                           	callstack 0
   880  00000F                     fputs@i:
   881                           	callstack 0
   882  00000F                     ___fldiv@b:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0xE
   886  00000F                     	ds	1
   887  000010                     ___fladd@grs:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0xF
   891  000010                     	ds	1
   892  000011                     ??_setMotorPWM:
   893  000011                     ?_pad:
   894                           	callstack 0
   895  000011                     ?___flsub:
   896                           	callstack 0
   897  000011                     ___aodiv@counter:
   898                           	callstack 0
   899  000011                     ___aomod@counter:
   900                           	callstack 0
   901  000011                     pad@fp:
   902                           	callstack 0
   903  000011                     ___flsub@b:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x10
   907  000011                     	ds	1
   908  000012                     ___aodiv@sign:
   909                           	callstack 0
   910  000012                     ___aomod@sign:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x11
   914  000012                     	ds	1
   915  000013                     ?_abs:
   916                           	callstack 0
   917  000013                     pad@buf:
   918                           	callstack 0
   919  000013                     abs@a:
   920                           	callstack 0
   921  000013                     ___fldiv@a:
   922                           	callstack 0
   923  000013                     ___aodiv@quotient:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x12
   927  000013                     	ds	2
   928  000015                     ??_abs:
   929  000015                     pad@p:
   930                           	callstack 0
   931  000015                     ___flsub@a:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x14
   935  000015                     	ds	2
   936  000017                     ??___fldiv:
   937  000017                     ??_pad:
   938                           
   939                           ; 1 bytes @ 0x16
   940  000017                     	ds	1
   941  000018                     setMotorPWM@PWMduty:
   942                           	callstack 0
   943  000018                     pad@i:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x17
   947  000018                     	ds	1
   948  000019                     
   949                           ; 1 bytes @ 0x18
   950  000019                     	ds	1
   951  00001A                     stop@mL:
   952                           	callstack 0
   953  00001A                     fullSpeedAhead@mL:
   954                           	callstack 0
   955  00001A                     pad@w:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x19
   959  00001A                     	ds	1
   960  00001B                     ___fldiv@rem:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x1A
   964  00001B                     	ds	1
   965  00001C                     ?_dtoa:
   966                           	callstack 0
   967  00001C                     stop@mR:
   968                           	callstack 0
   969  00001C                     fullSpeedAhead@mR:
   970                           	callstack 0
   971  00001C                     dtoa@fp:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x1B
   975  00001C                     	ds	2
   976  00001E                     ??_stop:
   977  00001E                     ??_fullSpeedAhead:
   978  00001E                     dtoa@d:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x1D
   982  00001E                     	ds	1
   983  00001F                     ___fldiv@sign:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x1E
   987  00001F                     	ds	1
   988  000020                     turn45@mL:
   989                           	callstack 0
   990  000020                     fullSpeedAhead_test@mL:
   991                           	callstack 0
   992  000020                     fullSpeedBack@mL:
   993                           	callstack 0
   994  000020                     short_burst@mL:
   995                           	callstack 0
   996  000020                     ___fldiv@new_exp:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1F
  1000  000020                     	ds	2
  1001  000022                     turn45@mR:
  1002                           	callstack 0
  1003  000022                     fullSpeedAhead_test@mR:
  1004                           	callstack 0
  1005  000022                     fullSpeedBack@mR:
  1006                           	callstack 0
  1007  000022                     short_burst@mR:
  1008                           	callstack 0
  1009  000022                     ___fldiv@grs:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x21
  1013  000022                     	ds	2
  1014  000024                     ??_short_burst:
  1015  000024                     ??_fullSpeedAhead_test:
  1016  000024                     turn45@turn_time:
  1017                           	callstack 0
  1018  000024                     fullSpeedBack@instruction:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x23
  1022  000024                     	ds	1
  1023  000025                     ??_fullSpeedBack:
  1024  000025                     turn45@direction:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x24
  1028  000025                     	ds	1
  1029  000026                     ??_turn45:
  1030  000026                     ??_dtoa:
  1031  000026                     ___fldiv@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x25
  1035  000026                     	ds	1
  1036  000027                     ___fldiv@aexp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x26
  1040  000027                     	ds	1
  1041  000028                     ?___flmul:
  1042                           	callstack 0
  1043  000028                     turn45@i_1303:
  1044                           	callstack 0
  1045  000028                     ___flmul@b:
  1046                           	callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x27
  1049  000028                     	ds	2
  1050  00002A                     turn45@i_1305:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x29
  1054  00002A                     	ds	2
  1055  00002C                     turn45@i:
  1056                           	callstack 0
  1057  00002C                     ___flmul@a:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x2B
  1061  00002C                     	ds	1
  1062  00002D                     goback@mL:
  1063                           	callstack 0
  1064  00002D                     test_action@mL:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x2C
  1068  00002D                     	ds	1
  1069  00002E                     _dtoa$2828:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x2D
  1073  00002E                     	ds	1
  1074  00002F                     goback@mR:
  1075                           	callstack 0
  1076  00002F                     test_action@mR:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x2E
  1080  00002F                     	ds	1
  1081  000030                     ??___flmul:
  1082  000030                     dtoa@p:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x2F
  1086  000030                     	ds	1
  1087  000031                     ??_goback:
  1088  000031                     calibration_motor@mL:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x30
  1092  000031                     	ds	1
  1093  000032                     dtoa@w:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x31
  1097  000032                     	ds	1
  1098  000033                     goback@i:
  1099                           	callstack 0
  1100  000033                     calibration_motor@mR:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x32
  1104  000033                     	ds	1
  1105  000034                     ___flmul@sign:
  1106                           	callstack 0
  1107  000034                     dtoa@s:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x33
  1111  000034                     	ds	1
  1112  000035                     ??_calibration_motor:
  1113  000035                     turning_action@mL:
  1114                           	callstack 0
  1115  000035                     ___flmul@grs:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x34
  1119  000035                     	ds	1
  1120  000036                     dtoa@n:
  1121                           	callstack 0
  1122                           
  1123                           ; 8 bytes @ 0x35
  1124  000036                     	ds	1
  1125  000037                     turning_action@mR:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x36
  1129  000037                     	ds	2
  1130  000039                     turning_action@color:
  1131                           	callstack 0
  1132  000039                     ___flmul@aexp:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x38
  1136  000039                     	ds	1
  1137  00003A                     ___flmul@bexp:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x39
  1141  00003A                     	ds	1
  1142  00003B                     ___flmul@prod:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x3A
  1146  00003B                     	ds	3
  1147  00003E                     dtoa@i:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x3D
  1151  00003E                     	ds	1
  1152  00003F                     ___flmul@temp:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x3E
  1156  00003F                     	ds	1
  1157  000040                     ?_vfpfcnvrt:
  1158                           	callstack 0
  1159  000040                     vfpfcnvrt@fp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x3F
  1163  000040                     	ds	1
  1164  000041                     ?_roundf:
  1165                           	callstack 0
  1166  000041                     roundf@x:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x40
  1170  000041                     	ds	1
  1171  000042                     vfpfcnvrt@fmt:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x41
  1175  000042                     	ds	2
  1176  000044                     vfpfcnvrt@ap:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x43
  1180  000044                     	ds	1
  1181  000045                     ??_roundf:
  1182                           
  1183                           ; 1 bytes @ 0x44
  1184  000045                     	ds	1
  1185  000046                     ??_vfpfcnvrt:
  1186                           
  1187                           ; 1 bytes @ 0x45
  1188  000046                     	ds	2
  1189  000048                     vfpfcnvrt@ll:
  1190                           	callstack 0
  1191                           
  1192                           ; 8 bytes @ 0x47
  1193  000048                     	ds	1
  1194  000049                     _roundf$3164:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x48
  1198  000049                     	ds	4
  1199  00004D                     roundf@e:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x4C
  1203  00004D                     	ds	2
  1204  00004F                     _roundf$3163:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x4E
  1208  00004F                     	ds	1
  1209  000050                     ?_vfprintf:
  1210                           	callstack 0
  1211  000050                     vfprintf@fp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x4F
  1215  000050                     	ds	2
  1216  000052                     vfprintf@fmt:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x51
  1220  000052                     	ds	1
  1221  000053                     roundf@u:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x52
  1225  000053                     	ds	1
  1226  000054                     vfprintf@ap:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x53
  1230  000054                     	ds	2
  1231  000056                     vfprintf@cfmt:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x55
  1235  000056                     	ds	1
  1236  000057                     roundf@y:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x56
  1240  000057                     	ds	1
  1241  000058                     color_display@m:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x57
  1245  000058                     	ds	2
  1246  00005A                     color_data_collection@m:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x59
  1250  00005A                     	ds	1
  1251  00005B                     ?___fltol:
  1252                           	callstack 0
  1253  00005B                     ___fltol@f1:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x5A
  1257  00005B                     	ds	1
  1258  00005C                     ??_color_data_collection:
  1259                           
  1260                           ; 1 bytes @ 0x5B
  1261  00005C                     	ds	3
  1262  00005F                     
  1263                           ; 1 bytes @ 0x5E
  1264 ;;
  1265 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1266 ;;
  1267 ;; *************** function _main *****************
  1268 ;; Defined at:
  1269 ;;		line 27 in file "main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  white          28   23[BANK1 ] struct white_card
  1274 ;;  motorR          9   60[BANK1 ] struct DC_motor
  1275 ;;  motorL          9   51[BANK1 ] struct DC_motor
  1276 ;;  rgb             8   15[BANK1 ] struct color_rgb
  1277 ;;  amb             8    0[BANK1 ] struct color_rgb
  1278 ;;  stop_time       2   13[BANK1 ] unsigned int 
  1279 ;;  start_time      2   11[BANK1 ] unsigned int 
  1280 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1281 ;;  accident        1   10[BANK1 ] unsigned char 
  1282 ;;  stop_signal     1    0        unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Totals:         0       4      69       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;Total ram usage:       73 bytes
  1297 ;; Hardware stack levels required when called: 12
  1298 ;; This function calls:
  1299 ;;		_I2C_2_Master_Init
  1300 ;;		_Interrupts_init
  1301 ;;		_Timer0_init
  1302 ;;		_buggylight_init
  1303 ;;		_color_click_init
  1304 ;;		_color_predict
  1305 ;;		_detect_color
  1306 ;;		_goback
  1307 ;;		_initDCmotorsPWM
  1308 ;;		_initDCmotors_parameter
  1309 ;;		_initUSART4
  1310 ;;		_pin_init
  1311 ;;		_setup
  1312 ;;		_short_burst
  1313 ;;		_straight_action
  1314 ;;		_test_function
  1315 ;;		_turning_action
  1316 ;;		_verify_color
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text0
  1323  003878                     __ptext0:
  1324                           	callstack 0
  1325  003878                     _main:
  1326                           	callstack 19
  1327  003878                     
  1328                           ;main.c: 29:     I2C_2_Master_Init();
  1329  003878  EC55  F02D         	call	_I2C_2_Master_Init	;wreg free
  1330  00387C                     
  1331                           ;main.c: 30:     color_click_init();
  1332  00387C  EC0C  F02D         	call	_color_click_init	;wreg free
  1333  003880                     
  1334                           ;main.c: 31:     initDCmotorsPWM(199);
  1335  003880  0E00               	movlw	0
  1336  003882  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1337  003884  0EC7               	movlw	199
  1338  003886  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1339  003888  EC3A  F02C         	call	_initDCmotorsPWM	;wreg free
  1340  00388C                     
  1341                           ;main.c: 32:     buggylight_init();
  1342  00388C  EC2B  F02E         	call	_buggylight_init	;wreg free
  1343  003890                     
  1344                           ;main.c: 33:     initUSART4();
  1345  003890  EC01  F02E         	call	_initUSART4	;wreg free
  1346  003894                     
  1347                           ;main.c: 34:     Timer0_init();
  1348  003894  EC10  F02E         	call	_Timer0_init	;wreg free
  1349  003898                     
  1350                           ;main.c: 35:     Interrupts_init();
  1351  003898  EC3C  F02E         	call	_Interrupts_init	;wreg free
  1352  00389C                     
  1353                           ;main.c: 36:     pin_init();
  1354  00389C  ECE1  F02D         	call	_pin_init	;wreg free
  1355  0038A0                     
  1356                           ;main.c: 38:     struct color_rgb rgb, amb;;main.c: 39:     struct white_card white;;mai
      +                          n.c: 43:     struct DC_motor motorL, motorR;;main.c: 45:     initDCmotors_parameter(&mot
      +                          orL, &motorR);
  1357  0038A0  0E99               	movlw	low main@motorL
  1358  0038A2  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1359  0038A4  0E01               	movlw	high main@motorL
  1360  0038A6  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1361  0038A8  0EA2               	movlw	low main@motorR
  1362  0038AA  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1363  0038AC  0E01               	movlw	high main@motorR
  1364  0038AE  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1365  0038B0  ECBC  F026         	call	_initDCmotors_parameter	;wreg free
  1366  0038B4                     
  1367                           ;main.c: 47:     unsigned int amb_light = 0;
  1368  0038B4  0E00               	movlw	0
  1369  0038B6  0101               	movlb	1	; () banked
  1370  0038B8  6F6F               	movwf	(main@amb_light+1)& (0+255),b
  1371  0038BA  0E00               	movlw	0
  1372  0038BC  6F6E               	movwf	main@amb_light& (0+255),b
  1373  0038BE                     
  1374                           ; BSR set to: 1
  1375                           ;main.c: 49:     unsigned char accident = 0;
  1376  0038BE  0E00               	movlw	0
  1377  0038C0  6F70               	movwf	main@accident& (0+255),b
  1378  0038C2                     
  1379                           ; BSR set to: 1
  1380                           ;main.c: 50:     unsigned int start_time= 0;
  1381  0038C2  0E00               	movlw	0
  1382  0038C4  6F72               	movwf	(main@start_time+1)& (0+255),b
  1383  0038C6  0E00               	movlw	0
  1384  0038C8  6F71               	movwf	main@start_time& (0+255),b
  1385  0038CA                     
  1386                           ; BSR set to: 1
  1387                           ;main.c: 54:     if (0 == 0){
  1388  0038CA  0E00               	movlw	0
  1389  0038CC  6F74               	movwf	(main@stop_time+1)& (0+255),b
  1390  0038CE  0E00               	movlw	0
  1391  0038D0  6F73               	movwf	main@stop_time& (0+255),b
  1392  0038D2                     
  1393                           ; BSR set to: 1
  1394                           ;main.c: 55:         setup(amb_light,&white,&amb,&motorL,&motorR);
  1395  0038D2  0E00               	movlw	0
  1396  0038D4  0100               	movlb	0	; () banked
  1397  0038D6  6F79               	movwf	(setup@amb_light+1)& (0+255),b
  1398  0038D8  0E00               	movlw	0
  1399  0038DA  6F78               	movwf	setup@amb_light& (0+255),b
  1400  0038DC  0E7D               	movlw	low main@white
  1401  0038DE  6F7A               	movwf	setup@white& (0+255),b
  1402  0038E0  0E01               	movlw	high main@white
  1403  0038E2  6F7B               	movwf	(setup@white+1)& (0+255),b
  1404  0038E4  0E66               	movlw	low main@amb
  1405  0038E6  6F7C               	movwf	setup@amb& (0+255),b
  1406  0038E8  0E01               	movlw	high main@amb
  1407  0038EA  6F7D               	movwf	(setup@amb+1)& (0+255),b
  1408  0038EC  0E99               	movlw	low main@motorL
  1409  0038EE  6F7E               	movwf	setup@mL& (0+255),b
  1410  0038F0  0E01               	movlw	high main@motorL
  1411  0038F2  6F7F               	movwf	(setup@mL+1)& (0+255),b
  1412  0038F4  0EA2               	movlw	low main@motorR
  1413  0038F6  6F80               	movwf	setup@mR& (0+255),b
  1414  0038F8  0E01               	movlw	high main@motorR
  1415  0038FA  6F81               	movwf	(setup@mR+1)& (0+255),b
  1416  0038FC  EC48  F026         	call	_setup	;wreg free
  1417  003900                     l5396:
  1418                           
  1419                           ;main.c: 74:             straight_action(&motorL, &motorR, amb_light, start_time, stop_t
      +                          ime);
  1420  003900  0E99               	movlw	low main@motorL
  1421  003902  0100               	movlb	0	; () banked
  1422  003904  6F7D               	movwf	straight_action@mL& (0+255),b
  1423  003906  0E01               	movlw	high main@motorL
  1424  003908  6F7E               	movwf	(straight_action@mL+1)& (0+255),b
  1425  00390A  0EA2               	movlw	low main@motorR
  1426  00390C  6F7F               	movwf	straight_action@mR& (0+255),b
  1427  00390E  0E01               	movlw	high main@motorR
  1428  003910  6F80               	movwf	(straight_action@mR+1)& (0+255),b
  1429  003912  C16E  F081         	movff	main@amb_light,straight_action@amb_light
  1430  003916  C16F  F082         	movff	main@amb_light+1,straight_action@amb_light+1
  1431  00391A  C171  F083         	movff	main@start_time,straight_action@start_time
  1432  00391E  C172  F084         	movff	main@start_time+1,straight_action@start_time+1
  1433  003922  C173  F085         	movff	main@stop_time,straight_action@stop_time
  1434  003926  C174  F086         	movff	main@stop_time+1,straight_action@stop_time+1
  1435  00392A  EC73  F029         	call	_straight_action	;wreg free
  1436  00392E                     
  1437                           ;main.c: 85:             if ((stop_time-start_time)>10){
  1438  00392E  0101               	movlb	1	; () banked
  1439  003930  5171               	movf	main@start_time& (0+255),w,b
  1440  003932  5D73               	subwf	main@stop_time& (0+255),w,b
  1441  003934  0100               	movlb	0	; () banked
  1442  003936  6FF6               	movwf	??_main& (0+255),b
  1443  003938  0101               	movlb	1	; () banked
  1444  00393A  5172               	movf	(main@start_time+1)& (0+255),w,b
  1445  00393C  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1446  00393E  0100               	movlb	0	; () banked
  1447  003940  6FF7               	movwf	(??_main+1)& (0+255),b
  1448  003942  51F7               	movf	(??_main+1)& (0+255),w,b
  1449  003944  E109               	bnz	u5760
  1450  003946  0E0B               	movlw	11
  1451  003948  5DF6               	subwf	??_main& (0+255),w,b
  1452  00394A  A0D8               	btfss	status,0,c
  1453  00394C  EFAA  F01C         	goto	u5761
  1454  003950  EFAC  F01C         	goto	u5760
  1455  003954                     u5761:
  1456  003954  EFCE  F01C         	goto	l5404
  1457  003958                     u5760:
  1458  003958                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 86:                 memory[array_index] = (stop_time-start_time-3);
  1461  003958  0EFD               	movlw	253
  1462  00395A  6FF6               	movwf	??_main& (0+255),b
  1463  00395C  0EFF               	movlw	255
  1464  00395E  6FF7               	movwf	(??_main+1)& (0+255),b
  1465  003960  0101               	movlb	1	; () banked
  1466  003962  5171               	movf	main@start_time& (0+255),w,b
  1467  003964  5D73               	subwf	main@stop_time& (0+255),w,b
  1468  003966  0100               	movlb	0	; () banked
  1469  003968  6FF8               	movwf	(??_main+2)& (0+255),b
  1470  00396A  0101               	movlb	1	; () banked
  1471  00396C  5172               	movf	(main@start_time+1)& (0+255),w,b
  1472  00396E  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1473  003970  0100               	movlb	0	; () banked
  1474  003972  6FF9               	movwf	(??_main+3)& (0+255),b
  1475  003974  51F6               	movf	??_main& (0+255),w,b
  1476  003976  27F8               	addwf	(??_main+2)& (0+255),f,b
  1477  003978  51F7               	movf	(??_main+1)& (0+255),w,b
  1478  00397A  23F9               	addwfc	(??_main+3)& (0+255),f,b
  1479  00397C  0101               	movlb	1	; () banked
  1480  00397E  5145               	movf	_array_index& (0+255),w,b
  1481  003980  0D02               	mullw	2
  1482  003982  0E00               	movlw	low _memory
  1483  003984  24F3               	addwf	243,w,c
  1484  003986  6ED9               	movwf	fsr2l,c
  1485  003988  0E01               	movlw	high _memory
  1486  00398A  20F4               	addwfc	prodh,w,c
  1487  00398C  6EDA               	movwf	fsr2h,c
  1488  00398E  C0F8  FFDE         	movff	??_main+2,postinc2
  1489  003992  C0F9  FFDD         	movff	??_main+3,postdec2
  1490  003996                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 87:                 array_index++;
  1493  003996  2B45               	incf	_array_index& (0+255),f,b
  1494                           
  1495                           ;main.c: 88:             }
  1496  003998  EFE9  F01C         	goto	l5414
  1497  00399C                     l5404:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 90:                 accident++;
  1501  00399C  0101               	movlb	1	; () banked
  1502  00399E  2B70               	incf	main@accident& (0+255),f,b
  1503  0039A0                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 91:                 color_predict(accident);
  1506  0039A0  5170               	movf	main@accident& (0+255),w,b
  1507  0039A2  EC3E  F02D         	call	_color_predict
  1508  0039A6                     
  1509                           ;main.c: 92:                 if (accident >= 5){
  1510  0039A6  0E04               	movlw	4
  1511  0039A8  0101               	movlb	1	; () banked
  1512  0039AA  6570               	cpfsgt	main@accident& (0+255),b
  1513  0039AC  EFDA  F01C         	goto	u5771
  1514  0039B0  EFDC  F01C         	goto	u5770
  1515  0039B4                     u5771:
  1516  0039B4  EFE9  F01C         	goto	l5414
  1517  0039B8                     u5770:
  1518  0039B8                     
  1519                           ; BSR set to: 1
  1520                           ;main.c: 93:                     goback(&motorL, &motorR);
  1521  0039B8  0E99               	movlw	low main@motorL
  1522  0039BA  6E2D               	movwf	goback@mL^0,c
  1523  0039BC  0E01               	movlw	high main@motorL
  1524  0039BE  6E2E               	movwf	(goback@mL+1)^0,c
  1525  0039C0  0EA2               	movlw	low main@motorR
  1526  0039C2  6E2F               	movwf	goback@mR^0,c
  1527  0039C4  0E01               	movlw	high main@motorR
  1528  0039C6  6E30               	movwf	(goback@mR+1)^0,c
  1529  0039C8  EC58  F013         	call	_goback	;wreg free
  1530  0039CC                     
  1531                           ;main.c: 94:                     accident = 0;
  1532  0039CC  0E00               	movlw	0
  1533  0039CE  0101               	movlb	1	; () banked
  1534  0039D0  6F70               	movwf	main@accident& (0+255),b
  1535  0039D2                     l5414:
  1536                           
  1537                           ; BSR set to: 1
  1538                           ;main.c: 99:             short_burst(&motorL, &motorR);
  1539  0039D2  0E99               	movlw	low main@motorL
  1540  0039D4  6E20               	movwf	short_burst@mL^0,c
  1541  0039D6  0E01               	movlw	high main@motorL
  1542  0039D8  6E21               	movwf	(short_burst@mL+1)^0,c
  1543  0039DA  0EA2               	movlw	low main@motorR
  1544  0039DC  6E22               	movwf	short_burst@mR^0,c
  1545  0039DE  0E01               	movlw	high main@motorR
  1546  0039E0  6E23               	movwf	(short_burst@mR+1)^0,c
  1547  0039E2  ECD7  F02B         	call	_short_burst	;wreg free
  1548  0039E6                     
  1549                           ;main.c: 100:             color = detect_color(&rgb, &white);
  1550  0039E6  0E75               	movlw	low main@rgb
  1551  0039E8  0100               	movlb	0	; () banked
  1552  0039EA  6F71               	movwf	detect_color@m& (0+255),b
  1553  0039EC  0E01               	movlw	high main@rgb
  1554  0039EE  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1555  0039F0  0E7D               	movlw	low main@white
  1556  0039F2  6F73               	movwf	detect_color@w& (0+255),b
  1557  0039F4  0E01               	movlw	high main@white
  1558  0039F6  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1559  0039F8  EC0A  F007         	call	_detect_color	;wreg free
  1560  0039FC  0101               	movlb	1	; () banked
  1561  0039FE  6F44               	movwf	_color& (0+255),b
  1562  003A00                     
  1563                           ; BSR set to: 1
  1564                           ;main.c: 101:             color = verify_color(color, &rgb, &white);
  1565  003A00  0E75               	movlw	low main@rgb
  1566  003A02  0100               	movlb	0	; () banked
  1567  003A04  6F92               	movwf	verify_color@m& (0+255),b
  1568  003A06  0E01               	movlw	high main@rgb
  1569  003A08  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1570  003A0A  0E7D               	movlw	low main@white
  1571  003A0C  6F94               	movwf	verify_color@w& (0+255),b
  1572  003A0E  0E01               	movlw	high main@white
  1573  003A10  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1574  003A12  0101               	movlb	1	; () banked
  1575  003A14  5144               	movf	_color& (0+255),w,b
  1576  003A16  ECF3  F029         	call	_verify_color
  1577  003A1A  0101               	movlb	1	; () banked
  1578  003A1C  6F44               	movwf	_color& (0+255),b
  1579                           
  1580                           ;main.c: 102:             if (color!= 0){turning_action(color, &motorL, &motorR); color 
      +                          = 0;}
  1581  003A1E  5144               	movf	_color& (0+255),w,b
  1582  003A20  B4D8               	btfsc	status,2,c
  1583  003A22  EF15  F01D         	goto	u5781
  1584  003A26  EF17  F01D         	goto	u5780
  1585  003A2A                     u5781:
  1586  003A2A  EF25  F01D         	goto	l5424
  1587  003A2E                     u5780:
  1588  003A2E                     
  1589                           ; BSR set to: 1
  1590  003A2E  0E99               	movlw	low main@motorL
  1591  003A30  6E35               	movwf	turning_action@mL^0,c
  1592  003A32  0E01               	movlw	high main@motorL
  1593  003A34  6E36               	movwf	(turning_action@mL+1)^0,c
  1594  003A36  0EA2               	movlw	low main@motorR
  1595  003A38  6E37               	movwf	turning_action@mR^0,c
  1596  003A3A  0E01               	movlw	high main@motorR
  1597  003A3C  6E38               	movwf	(turning_action@mR+1)^0,c
  1598  003A3E  5144               	movf	_color& (0+255),w,b
  1599  003A40  ECF7  F016         	call	_turning_action
  1600  003A44  0E00               	movlw	0
  1601  003A46  0101               	movlb	1	; () banked
  1602  003A48  6F44               	movwf	_color& (0+255),b
  1603  003A4A                     l5424:
  1604                           
  1605                           ; BSR set to: 1
  1606  003A4A  EF80  F01C         	goto	l5396
  1607  003A4E  EF18  F000         	goto	start
  1608  003A52                     __end_of_main:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _verify_color *****************
  1612 ;; Defined at:
  1613 ;;		line 365 in file "color.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  color           1    wreg     unsigned char 
  1616 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1617 ;;		 -> main@rgb(8), 
  1618 ;;  w               2   52[BANK0 ] PTR struct white_card
  1619 ;;		 -> main@white(28), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  color           1   58[BANK0 ] unsigned char 
  1622 ;;  color2          2   56[BANK0 ] unsigned int 
  1623 ;;  color3          2    0        unsigned int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;Total ram usage:        9 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 6
  1640 ;; This function calls:
  1641 ;;		_detect_color
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text1
  1648  0053E6                     __ptext1:
  1649                           	callstack 0
  1650  0053E6                     _verify_color:
  1651                           	callstack 24
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;incstack = 0
  1655                           ;verify_color@color stored from wreg
  1656  0053E6  0100               	movlb	0	; () banked
  1657  0053E8  6F9A               	movwf	verify_color@color& (0+255),b
  1658  0053EA                     
  1659                           ;color.c: 365: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 366: {;color.c: 367:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1660  0053EA  0E05               	movlw	5
  1661  0053EC  0100               	movlb	0	; () banked
  1662  0053EE  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1663  0053F0  0E0F               	movlw	15
  1664  0053F2  6F96               	movwf	??_verify_color& (0+255),b
  1665  0053F4  0EF1               	movlw	241
  1666  0053F6                     u5827:
  1667  0053F6  2EE8               	decfsz	wreg,f,c
  1668  0053F8  D7FE               	bra	u5827
  1669  0053FA  2F96               	decfsz	??_verify_color& (0+255),f,b
  1670  0053FC  D7FC               	bra	u5827
  1671  0053FE  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1672  005400  D7FA               	bra	u5827
  1673  005402                     
  1674                           ;color.c: 368:     unsigned int color2, color3;;color.c: 369:     color2 = detect_color(
      +                          m,w);
  1675  005402  C092  F071         	movff	verify_color@m,detect_color@m
  1676  005406  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1677  00540A  C094  F073         	movff	verify_color@w,detect_color@w
  1678  00540E  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1679  005412  EC0A  F007         	call	_detect_color	;wreg free
  1680  005416  0100               	movlb	0	; () banked
  1681  005418  6F96               	movwf	??_verify_color& (0+255),b
  1682  00541A  5196               	movf	??_verify_color& (0+255),w,b
  1683  00541C  6F98               	movwf	verify_color@color2& (0+255),b
  1684  00541E  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1685  005420                     
  1686                           ; BSR set to: 0
  1687                           ;color.c: 370:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1688  005420  0E05               	movlw	5
  1689  005422  0100               	movlb	0	; () banked
  1690  005424  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1691  005426  0E0F               	movlw	15
  1692  005428  6F96               	movwf	??_verify_color& (0+255),b
  1693  00542A  0EF1               	movlw	241
  1694  00542C                     u5837:
  1695  00542C  2EE8               	decfsz	wreg,f,c
  1696  00542E  D7FE               	bra	u5837
  1697  005430  2F96               	decfsz	??_verify_color& (0+255),f,b
  1698  005432  D7FC               	bra	u5837
  1699  005434  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1700  005436  D7FA               	bra	u5837
  1701  005438                     
  1702                           ;color.c: 372:     if (color == color2){return color;}
  1703  005438  0100               	movlb	0	; () banked
  1704  00543A  519A               	movf	verify_color@color& (0+255),w,b
  1705  00543C  6F96               	movwf	??_verify_color& (0+255),b
  1706  00543E  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1707  005440  5198               	movf	verify_color@color2& (0+255),w,b
  1708  005442  1996               	xorwf	??_verify_color& (0+255),w,b
  1709  005444  E107               	bnz	u5501
  1710  005446  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1711  005448  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1712  00544A  A4D8               	btfss	status,2,c
  1713  00544C  EF2A  F02A         	goto	u5501
  1714  005450  EF2C  F02A         	goto	u5500
  1715  005454                     u5501:
  1716  005454  EF2F  F02A         	goto	l5146
  1717  005458                     u5500:
  1718  005458                     
  1719                           ; BSR set to: 0
  1720  005458  519A               	movf	verify_color@color& (0+255),w,b
  1721  00545A  EF30  F02A         	goto	l153
  1722  00545E                     l5146:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;color.c: 375:         return color;}
  1726  00545E  0E00               	movlw	0
  1727  005460                     l153:
  1728                           
  1729                           ; BSR set to: 0
  1730  005460  0012               	return		;funcret
  1731  005462                     __end_of_verify_color:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _turning_action *****************
  1735 ;; Defined at:
  1736 ;;		line 85 in file "movement.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  color           1    wreg     unsigned char 
  1739 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1740 ;;		 -> main@motorL(9), 
  1741 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1742 ;;		 -> main@motorR(9), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  color           1   56[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 6
  1761 ;; This function calls:
  1762 ;;		_fullSpeedBack
  1763 ;;		_goback
  1764 ;;		_toggle_light
  1765 ;;		_turn45
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text2
  1772  002DEE                     __ptext2:
  1773                           	callstack 0
  1774  002DEE                     _turning_action:
  1775                           	callstack 24
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;incstack = 0
  1779                           ;turning_action@color stored from wreg
  1780  002DEE  6E39               	movwf	turning_action@color^0,c
  1781  002DF0                     
  1782                           ;movement.c: 85: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 86: { if (color != 0){
  1783  002DF0  5039               	movf	turning_action@color^0,w,c
  1784  002DF2  B4D8               	btfsc	status,2,c
  1785  002DF4  EFFE  F016         	goto	u5671
  1786  002DF8  EF00  F017         	goto	u5670
  1787  002DFC                     u5671:
  1788  002DFC  EF6E  F018         	goto	l529
  1789  002E00                     u5670:
  1790  002E00                     
  1791                           ;movement.c: 87:         if (color == 1){
  1792  002E00  0439               	decf	turning_action@color^0,w,c
  1793  002E02  A4D8               	btfss	status,2,c
  1794  002E04  EF06  F017         	goto	u5681
  1795  002E08  EF08  F017         	goto	u5680
  1796  002E0C                     u5681:
  1797  002E0C  EF30  F017         	goto	l5306
  1798  002E10                     u5680:
  1799  002E10                     
  1800                           ;movement.c: 88:             fullSpeedBack(mL,mR,1);
  1801  002E10  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1802  002E14  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1803  002E18  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1804  002E1C  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1805  002E20  0E01               	movlw	1
  1806  002E22  6E24               	movwf	fullSpeedBack@instruction^0,c
  1807  002E24  EC3A  F024         	call	_fullSpeedBack	;wreg free
  1808                           
  1809                           ;movement.c: 89:             turn45(mL,mR,2,2);
  1810  002E28  C035  F020         	movff	turning_action@mL,turn45@mL
  1811  002E2C  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1812  002E30  C037  F022         	movff	turning_action@mR,turn45@mR
  1813  002E34  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1814  002E38  0E02               	movlw	2
  1815  002E3A  6E24               	movwf	turn45@turn_time^0,c
  1816  002E3C  0E02               	movlw	2
  1817  002E3E  6E25               	movwf	turn45@direction^0,c
  1818  002E40  ECC8  F01F         	call	_turn45	;wreg free
  1819  002E44                     
  1820                           ;movement.c: 90:             memory[array_index] = 1;
  1821  002E44  0101               	movlb	1	; () banked
  1822  002E46  5145               	movf	_array_index& (0+255),w,b
  1823  002E48  0D02               	mullw	2
  1824  002E4A  0E00               	movlw	low _memory
  1825  002E4C  24F3               	addwf	243,w,c
  1826  002E4E  6ED9               	movwf	fsr2l,c
  1827  002E50  0E01               	movlw	high _memory
  1828  002E52  20F4               	addwfc	prodh,w,c
  1829  002E54  6EDA               	movwf	fsr2h,c
  1830  002E56  0E01               	movlw	1
  1831  002E58  6EDE               	movwf	postinc2,c
  1832  002E5A  0E00               	movlw	0
  1833  002E5C  6EDD               	movwf	postdec2,c
  1834  002E5E                     
  1835                           ; BSR set to: 1
  1836                           ;movement.c: 91:             array_index++;
  1837  002E5E  2B45               	incf	_array_index& (0+255),f,b
  1838  002E60                     l5306:
  1839                           
  1840                           ;movement.c: 93:         if (color == 2){
  1841  002E60  0E02               	movlw	2
  1842  002E62  1839               	xorwf	turning_action@color^0,w,c
  1843  002E64  A4D8               	btfss	status,2,c
  1844  002E66  EF37  F017         	goto	u5691
  1845  002E6A  EF39  F017         	goto	u5690
  1846  002E6E                     u5691:
  1847  002E6E  EF61  F017         	goto	l5314
  1848  002E72                     u5690:
  1849  002E72                     
  1850                           ;movement.c: 94:             fullSpeedBack(mL,mR,1);
  1851  002E72  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1852  002E76  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1853  002E7A  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1854  002E7E  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1855  002E82  0E01               	movlw	1
  1856  002E84  6E24               	movwf	fullSpeedBack@instruction^0,c
  1857  002E86  EC3A  F024         	call	_fullSpeedBack	;wreg free
  1858                           
  1859                           ;movement.c: 95:             turn45(mL,mR,2,1);
  1860  002E8A  C035  F020         	movff	turning_action@mL,turn45@mL
  1861  002E8E  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1862  002E92  C037  F022         	movff	turning_action@mR,turn45@mR
  1863  002E96  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1864  002E9A  0E02               	movlw	2
  1865  002E9C  6E24               	movwf	turn45@turn_time^0,c
  1866  002E9E  0E01               	movlw	1
  1867  002EA0  6E25               	movwf	turn45@direction^0,c
  1868  002EA2  ECC8  F01F         	call	_turn45	;wreg free
  1869  002EA6                     
  1870                           ;movement.c: 96:             memory[array_index] = 2;
  1871  002EA6  0101               	movlb	1	; () banked
  1872  002EA8  5145               	movf	_array_index& (0+255),w,b
  1873  002EAA  0D02               	mullw	2
  1874  002EAC  0E00               	movlw	low _memory
  1875  002EAE  24F3               	addwf	243,w,c
  1876  002EB0  6ED9               	movwf	fsr2l,c
  1877  002EB2  0E01               	movlw	high _memory
  1878  002EB4  20F4               	addwfc	prodh,w,c
  1879  002EB6  6EDA               	movwf	fsr2h,c
  1880  002EB8  0E02               	movlw	2
  1881  002EBA  6EDE               	movwf	postinc2,c
  1882  002EBC  0E00               	movlw	0
  1883  002EBE  6EDD               	movwf	postdec2,c
  1884  002EC0                     
  1885                           ; BSR set to: 1
  1886                           ;movement.c: 97:             array_index++;
  1887  002EC0  2B45               	incf	_array_index& (0+255),f,b
  1888  002EC2                     l5314:
  1889                           
  1890                           ;movement.c: 99:         if (color == 3){
  1891  002EC2  0E03               	movlw	3
  1892  002EC4  1839               	xorwf	turning_action@color^0,w,c
  1893  002EC6  A4D8               	btfss	status,2,c
  1894  002EC8  EF68  F017         	goto	u5701
  1895  002ECC  EF6A  F017         	goto	u5700
  1896  002ED0                     u5701:
  1897  002ED0  EF92  F017         	goto	l5322
  1898  002ED4                     u5700:
  1899  002ED4                     
  1900                           ;movement.c: 100:             fullSpeedBack(mL,mR,1);
  1901  002ED4  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1902  002ED8  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1903  002EDC  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1904  002EE0  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1905  002EE4  0E01               	movlw	1
  1906  002EE6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1907  002EE8  EC3A  F024         	call	_fullSpeedBack	;wreg free
  1908                           
  1909                           ;movement.c: 101:             turn45(mL,mR,4,1);
  1910  002EEC  C035  F020         	movff	turning_action@mL,turn45@mL
  1911  002EF0  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1912  002EF4  C037  F022         	movff	turning_action@mR,turn45@mR
  1913  002EF8  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1914  002EFC  0E04               	movlw	4
  1915  002EFE  6E24               	movwf	turn45@turn_time^0,c
  1916  002F00  0E01               	movlw	1
  1917  002F02  6E25               	movwf	turn45@direction^0,c
  1918  002F04  ECC8  F01F         	call	_turn45	;wreg free
  1919  002F08                     
  1920                           ;movement.c: 102:             memory[array_index] = 3;
  1921  002F08  0101               	movlb	1	; () banked
  1922  002F0A  5145               	movf	_array_index& (0+255),w,b
  1923  002F0C  0D02               	mullw	2
  1924  002F0E  0E00               	movlw	low _memory
  1925  002F10  24F3               	addwf	243,w,c
  1926  002F12  6ED9               	movwf	fsr2l,c
  1927  002F14  0E01               	movlw	high _memory
  1928  002F16  20F4               	addwfc	prodh,w,c
  1929  002F18  6EDA               	movwf	fsr2h,c
  1930  002F1A  0E03               	movlw	3
  1931  002F1C  6EDE               	movwf	postinc2,c
  1932  002F1E  0E00               	movlw	0
  1933  002F20  6EDD               	movwf	postdec2,c
  1934  002F22                     
  1935                           ; BSR set to: 1
  1936                           ;movement.c: 103:             array_index++;
  1937  002F22  2B45               	incf	_array_index& (0+255),f,b
  1938  002F24                     l5322:
  1939                           
  1940                           ;movement.c: 105:         if (color == 4){
  1941  002F24  0E04               	movlw	4
  1942  002F26  1839               	xorwf	turning_action@color^0,w,c
  1943  002F28  A4D8               	btfss	status,2,c
  1944  002F2A  EF99  F017         	goto	u5711
  1945  002F2E  EF9B  F017         	goto	u5710
  1946  002F32                     u5711:
  1947  002F32  EFC3  F017         	goto	l5330
  1948  002F36                     u5710:
  1949  002F36                     
  1950                           ;movement.c: 106:             fullSpeedBack(mL,mR,3);
  1951  002F36  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1952  002F3A  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1953  002F3E  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1954  002F42  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1955  002F46  0E03               	movlw	3
  1956  002F48  6E24               	movwf	fullSpeedBack@instruction^0,c
  1957  002F4A  EC3A  F024         	call	_fullSpeedBack	;wreg free
  1958                           
  1959                           ;movement.c: 107:             turn45(mL,mR,2,2);
  1960  002F4E  C035  F020         	movff	turning_action@mL,turn45@mL
  1961  002F52  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1962  002F56  C037  F022         	movff	turning_action@mR,turn45@mR
  1963  002F5A  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1964  002F5E  0E02               	movlw	2
  1965  002F60  6E24               	movwf	turn45@turn_time^0,c
  1966  002F62  0E02               	movlw	2
  1967  002F64  6E25               	movwf	turn45@direction^0,c
  1968  002F66  ECC8  F01F         	call	_turn45	;wreg free
  1969  002F6A                     
  1970                           ;movement.c: 108:             memory[array_index] = 4;
  1971  002F6A  0101               	movlb	1	; () banked
  1972  002F6C  5145               	movf	_array_index& (0+255),w,b
  1973  002F6E  0D02               	mullw	2
  1974  002F70  0E00               	movlw	low _memory
  1975  002F72  24F3               	addwf	243,w,c
  1976  002F74  6ED9               	movwf	fsr2l,c
  1977  002F76  0E01               	movlw	high _memory
  1978  002F78  20F4               	addwfc	prodh,w,c
  1979  002F7A  6EDA               	movwf	fsr2h,c
  1980  002F7C  0E04               	movlw	4
  1981  002F7E  6EDE               	movwf	postinc2,c
  1982  002F80  0E00               	movlw	0
  1983  002F82  6EDD               	movwf	postdec2,c
  1984  002F84                     
  1985                           ; BSR set to: 1
  1986                           ;movement.c: 109:             array_index++;
  1987  002F84  2B45               	incf	_array_index& (0+255),f,b
  1988  002F86                     l5330:
  1989                           
  1990                           ;movement.c: 111:         if (color == 5){
  1991  002F86  0E05               	movlw	5
  1992  002F88  1839               	xorwf	turning_action@color^0,w,c
  1993  002F8A  A4D8               	btfss	status,2,c
  1994  002F8C  EFCA  F017         	goto	u5721
  1995  002F90  EFCC  F017         	goto	u5720
  1996  002F94                     u5721:
  1997  002F94  EFF4  F017         	goto	l5338
  1998  002F98                     u5720:
  1999  002F98                     
  2000                           ;movement.c: 112:             fullSpeedBack(mL,mR,3);
  2001  002F98  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2002  002F9C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2003  002FA0  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2004  002FA4  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2005  002FA8  0E03               	movlw	3
  2006  002FAA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2007  002FAC  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2008                           
  2009                           ;movement.c: 113:             turn45(mL,mR,2,1);
  2010  002FB0  C035  F020         	movff	turning_action@mL,turn45@mL
  2011  002FB4  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2012  002FB8  C037  F022         	movff	turning_action@mR,turn45@mR
  2013  002FBC  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2014  002FC0  0E02               	movlw	2
  2015  002FC2  6E24               	movwf	turn45@turn_time^0,c
  2016  002FC4  0E01               	movlw	1
  2017  002FC6  6E25               	movwf	turn45@direction^0,c
  2018  002FC8  ECC8  F01F         	call	_turn45	;wreg free
  2019  002FCC                     
  2020                           ;movement.c: 114:             memory[array_index] = 5;
  2021  002FCC  0101               	movlb	1	; () banked
  2022  002FCE  5145               	movf	_array_index& (0+255),w,b
  2023  002FD0  0D02               	mullw	2
  2024  002FD2  0E00               	movlw	low _memory
  2025  002FD4  24F3               	addwf	243,w,c
  2026  002FD6  6ED9               	movwf	fsr2l,c
  2027  002FD8  0E01               	movlw	high _memory
  2028  002FDA  20F4               	addwfc	prodh,w,c
  2029  002FDC  6EDA               	movwf	fsr2h,c
  2030  002FDE  0E05               	movlw	5
  2031  002FE0  6EDE               	movwf	postinc2,c
  2032  002FE2  0E00               	movlw	0
  2033  002FE4  6EDD               	movwf	postdec2,c
  2034  002FE6                     
  2035                           ; BSR set to: 1
  2036                           ;movement.c: 115:             array_index++;
  2037  002FE6  2B45               	incf	_array_index& (0+255),f,b
  2038  002FE8                     l5338:
  2039                           
  2040                           ;movement.c: 117:         if (color == 6){
  2041  002FE8  0E06               	movlw	6
  2042  002FEA  1839               	xorwf	turning_action@color^0,w,c
  2043  002FEC  A4D8               	btfss	status,2,c
  2044  002FEE  EFFB  F017         	goto	u5731
  2045  002FF2  EFFD  F017         	goto	u5730
  2046  002FF6                     u5731:
  2047  002FF6  EF25  F018         	goto	l5346
  2048  002FFA                     u5730:
  2049  002FFA                     
  2050                           ;movement.c: 118:             fullSpeedBack(mL,mR,1);
  2051  002FFA  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2052  002FFE  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2053  003002  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2054  003006  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2055  00300A  0E01               	movlw	1
  2056  00300C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2057  00300E  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2058                           
  2059                           ;movement.c: 119:             turn45(mL,mR,3,2);
  2060  003012  C035  F020         	movff	turning_action@mL,turn45@mL
  2061  003016  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2062  00301A  C037  F022         	movff	turning_action@mR,turn45@mR
  2063  00301E  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2064  003022  0E03               	movlw	3
  2065  003024  6E24               	movwf	turn45@turn_time^0,c
  2066  003026  0E02               	movlw	2
  2067  003028  6E25               	movwf	turn45@direction^0,c
  2068  00302A  ECC8  F01F         	call	_turn45	;wreg free
  2069  00302E                     
  2070                           ;movement.c: 120:             memory[array_index] = 6;
  2071  00302E  0101               	movlb	1	; () banked
  2072  003030  5145               	movf	_array_index& (0+255),w,b
  2073  003032  0D02               	mullw	2
  2074  003034  0E00               	movlw	low _memory
  2075  003036  24F3               	addwf	243,w,c
  2076  003038  6ED9               	movwf	fsr2l,c
  2077  00303A  0E01               	movlw	high _memory
  2078  00303C  20F4               	addwfc	prodh,w,c
  2079  00303E  6EDA               	movwf	fsr2h,c
  2080  003040  0E06               	movlw	6
  2081  003042  6EDE               	movwf	postinc2,c
  2082  003044  0E00               	movlw	0
  2083  003046  6EDD               	movwf	postdec2,c
  2084  003048                     
  2085                           ; BSR set to: 1
  2086                           ;movement.c: 121:             array_index++;
  2087  003048  2B45               	incf	_array_index& (0+255),f,b
  2088  00304A                     l5346:
  2089                           
  2090                           ;movement.c: 123:         if (color == 7){
  2091  00304A  0E07               	movlw	7
  2092  00304C  1839               	xorwf	turning_action@color^0,w,c
  2093  00304E  A4D8               	btfss	status,2,c
  2094  003050  EF2C  F018         	goto	u5741
  2095  003054  EF2E  F018         	goto	u5740
  2096  003058                     u5741:
  2097  003058  EF56  F018         	goto	l5354
  2098  00305C                     u5740:
  2099  00305C                     
  2100                           ;movement.c: 124:             fullSpeedBack(mL,mR,1);
  2101  00305C  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2102  003060  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2103  003064  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2104  003068  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2105  00306C  0E01               	movlw	1
  2106  00306E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2107  003070  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2108                           
  2109                           ;movement.c: 125:             turn45(mL,mR,3,1);
  2110  003074  C035  F020         	movff	turning_action@mL,turn45@mL
  2111  003078  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2112  00307C  C037  F022         	movff	turning_action@mR,turn45@mR
  2113  003080  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2114  003084  0E03               	movlw	3
  2115  003086  6E24               	movwf	turn45@turn_time^0,c
  2116  003088  0E01               	movlw	1
  2117  00308A  6E25               	movwf	turn45@direction^0,c
  2118  00308C  ECC8  F01F         	call	_turn45	;wreg free
  2119  003090                     
  2120                           ;movement.c: 126:             memory[array_index] = 7;
  2121  003090  0101               	movlb	1	; () banked
  2122  003092  5145               	movf	_array_index& (0+255),w,b
  2123  003094  0D02               	mullw	2
  2124  003096  0E00               	movlw	low _memory
  2125  003098  24F3               	addwf	243,w,c
  2126  00309A  6ED9               	movwf	fsr2l,c
  2127  00309C  0E01               	movlw	high _memory
  2128  00309E  20F4               	addwfc	prodh,w,c
  2129  0030A0  6EDA               	movwf	fsr2h,c
  2130  0030A2  0E07               	movlw	7
  2131  0030A4  6EDE               	movwf	postinc2,c
  2132  0030A6  0E00               	movlw	0
  2133  0030A8  6EDD               	movwf	postdec2,c
  2134  0030AA                     
  2135                           ; BSR set to: 1
  2136                           ;movement.c: 127:             array_index++;
  2137  0030AA  2B45               	incf	_array_index& (0+255),f,b
  2138  0030AC                     l5354:
  2139                           
  2140                           ;movement.c: 129:         if (color == 8){
  2141  0030AC  0E08               	movlw	8
  2142  0030AE  1839               	xorwf	turning_action@color^0,w,c
  2143  0030B0  A4D8               	btfss	status,2,c
  2144  0030B2  EF5D  F018         	goto	u5751
  2145  0030B6  EF5F  F018         	goto	u5750
  2146  0030BA                     u5751:
  2147  0030BA  EF6E  F018         	goto	l529
  2148  0030BE                     u5750:
  2149  0030BE                     
  2150                           ;movement.c: 130:             toggle_light(2,1);
  2151  0030BE  0E01               	movlw	1
  2152  0030C0  6E01               	movwf	toggle_light@toggletime^0,c
  2153  0030C2  0E02               	movlw	2
  2154  0030C4  ECE1  F019         	call	_toggle_light
  2155  0030C8                     
  2156                           ;movement.c: 131:             goback(mL,mR);
  2157  0030C8  C035  F02D         	movff	turning_action@mL,goback@mL
  2158  0030CC  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2159  0030D0  C037  F02F         	movff	turning_action@mR,goback@mR
  2160  0030D4  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2161  0030D8  EC58  F013         	call	_goback	;wreg free
  2162  0030DC                     l529:
  2163  0030DC  0012               	return		;funcret
  2164  0030DE                     __end_of_turning_action:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _goback *****************
  2168 ;; Defined at:
  2169 ;;		line 136 in file "movement.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2172 ;;		 -> main@motorL(9), 
  2173 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2174 ;;		 -> main@motorR(9), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  i               2   50[COMRAM] unsigned int 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;Total ram usage:        8 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 5
  2193 ;; This function calls:
  2194 ;;		_fullSpeedAhead
  2195 ;;		_fullSpeedBack
  2196 ;;		_stop
  2197 ;;		_turn45
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;;		_turning_action
  2201 ;;		_distance_memory
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text3
  2206  0026B0                     __ptext3:
  2207                           	callstack 0
  2208  0026B0                     _goback:
  2209                           	callstack 24
  2210  0026B0                     
  2211                           ;movement.c: 136: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 137:
      +                           { fullSpeedBack(mL,mR,1);
  2212  0026B0  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2213  0026B4  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2214  0026B8  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2215  0026BC  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2216  0026C0  0E01               	movlw	1
  2217  0026C2  6E24               	movwf	fullSpeedBack@instruction^0,c
  2218  0026C4  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2219                           
  2220                           ;movement.c: 138:     turn45(mL,mR,4,1);
  2221  0026C8  C02D  F020         	movff	goback@mL,turn45@mL
  2222  0026CC  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2223  0026D0  C02F  F022         	movff	goback@mR,turn45@mR
  2224  0026D4  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2225  0026D8  0E04               	movlw	4
  2226  0026DA  6E24               	movwf	turn45@turn_time^0,c
  2227  0026DC  0E01               	movlw	1
  2228  0026DE  6E25               	movwf	turn45@direction^0,c
  2229  0026E0  ECC8  F01F         	call	_turn45	;wreg free
  2230                           
  2231                           ;movement.c: 139:     fullSpeedBack(mL,mR,2);
  2232  0026E4  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2233  0026E8  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2234  0026EC  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2235  0026F0  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2236  0026F4  0E02               	movlw	2
  2237  0026F6  6E24               	movwf	fullSpeedBack@instruction^0,c
  2238  0026F8  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2239  0026FC                     l5024:
  2240                           
  2241                           ;movement.c: 140:     array_index--;
  2242  0026FC  0101               	movlb	1	; () banked
  2243  0026FE  0745               	decf	_array_index& (0+255),f,b
  2244  002700                     l5026:
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;movement.c: 142:         fullSpeedAhead(mL,mR);
  2248  002700  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2249  002704  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2250  002708  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2251  00270C  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2252  002710  EC50  F028         	call	_fullSpeedAhead	;wreg free
  2253  002714                     
  2254                           ;movement.c: 143:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  2255  002714  0E00               	movlw	0
  2256  002716  6E34               	movwf	(goback@i+1)^0,c
  2257  002718  0E00               	movlw	0
  2258  00271A  6E33               	movwf	goback@i^0,c
  2259  00271C  EF9E  F013         	goto	l5034
  2260  002720                     l5030:
  2261                           
  2262                           ; BSR set to: 1
  2263  002720  0E09               	movlw	9
  2264  002722  6E32               	movwf	(??_goback+1)^0,c
  2265  002724  0E1E               	movlw	30
  2266  002726  6E31               	movwf	??_goback^0,c
  2267  002728  0EE4               	movlw	228
  2268  00272A                     u5847:
  2269  00272A  2EE8               	decfsz	wreg,f,c
  2270  00272C  D7FE               	bra	u5847
  2271  00272E  2E31               	decfsz	??_goback^0,f,c
  2272  002730  D7FC               	bra	u5847
  2273  002732  2E32               	decfsz	(??_goback+1)^0,f,c
  2274  002734  D7FA               	bra	u5847
  2275  002736  D000               	nop2	
  2276  002738  4A33               	infsnz	goback@i^0,f,c
  2277  00273A  2A34               	incf	(goback@i+1)^0,f,c
  2278  00273C                     l5034:
  2279  00273C  0101               	movlb	1	; () banked
  2280  00273E  5145               	movf	_array_index& (0+255),w,b
  2281  002740  0D02               	mullw	2
  2282  002742  0E00               	movlw	low _memory
  2283  002744  24F3               	addwf	243,w,c
  2284  002746  6ED9               	movwf	fsr2l,c
  2285  002748  0E01               	movlw	high _memory
  2286  00274A  20F4               	addwfc	prodh,w,c
  2287  00274C  6EDA               	movwf	fsr2h,c
  2288  00274E  50DE               	movf	postinc2,w,c
  2289  002750  5C33               	subwf	goback@i^0,w,c
  2290  002752  50DE               	movf	postinc2,w,c
  2291  002754  5834               	subwfb	(goback@i+1)^0,w,c
  2292  002756  A0D8               	btfss	status,0,c
  2293  002758  EFB0  F013         	goto	u5331
  2294  00275C  EFB2  F013         	goto	u5330
  2295  002760                     u5331:
  2296  002760  EF90  F013         	goto	l5030
  2297  002764                     u5330:
  2298  002764                     
  2299                           ; BSR set to: 1
  2300                           ;movement.c: 144:         stop(mL,mR);
  2301  002764  C02D  F01A         	movff	goback@mL,stop@mL
  2302  002768  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2303  00276C  C02F  F01C         	movff	goback@mR,stop@mR
  2304  002770  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2305  002774  EC14  F029         	call	_stop	;wreg free
  2306  002778                     
  2307                           ;movement.c: 145:         if (array_index == 0){break;}
  2308  002778  0101               	movlb	1	; () banked
  2309  00277A  5145               	movf	_array_index& (0+255),w,b
  2310  00277C  A4D8               	btfss	status,2,c
  2311  00277E  EFC3  F013         	goto	u5341
  2312  002782  EFC5  F013         	goto	u5340
  2313  002786                     u5341:
  2314  002786  EFC7  F013         	goto	l5042
  2315  00278A                     u5340:
  2316  00278A  EF0B  F015         	goto	l538
  2317  00278E                     l5042:
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;movement.c: 146:         array_index--;
  2321  00278E  0745               	decf	_array_index& (0+255),f,b
  2322  002790                     
  2323                           ; BSR set to: 1
  2324                           ;movement.c: 147:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(
      +                          mL,mR,2);array_index--;}
  2325  002790  5145               	movf	_array_index& (0+255),w,b
  2326  002792  0D02               	mullw	2
  2327  002794  0E00               	movlw	low _memory
  2328  002796  24F3               	addwf	243,w,c
  2329  002798  6ED9               	movwf	fsr2l,c
  2330  00279A  0E01               	movlw	high _memory
  2331  00279C  20F4               	addwfc	prodh,w,c
  2332  00279E  6EDA               	movwf	fsr2h,c
  2333  0027A0  04DE               	decf	postinc2,w,c
  2334  0027A2  10DE               	iorwf	postinc2,w,c
  2335  0027A4  A4D8               	btfss	status,2,c
  2336  0027A6  EFD7  F013         	goto	u5351
  2337  0027AA  EFD9  F013         	goto	u5350
  2338  0027AE                     u5351:
  2339  0027AE  EFF5  F013         	goto	l5050
  2340  0027B2                     u5350:
  2341  0027B2                     
  2342                           ; BSR set to: 1
  2343  0027B2  C02D  F020         	movff	goback@mL,turn45@mL
  2344  0027B6  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2345  0027BA  C02F  F022         	movff	goback@mR,turn45@mR
  2346  0027BE  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2347  0027C2  0E02               	movlw	2
  2348  0027C4  6E24               	movwf	turn45@turn_time^0,c
  2349  0027C6  0E01               	movlw	1
  2350  0027C8  6E25               	movwf	turn45@direction^0,c
  2351  0027CA  ECC8  F01F         	call	_turn45	;wreg free
  2352  0027CE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2353  0027D2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2354  0027D6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2355  0027DA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2356  0027DE  0E02               	movlw	2
  2357  0027E0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2358  0027E2  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2359  0027E6  EF7E  F013         	goto	l5024
  2360  0027EA                     l5050:
  2361                           
  2362                           ; BSR set to: 1
  2363  0027EA  5145               	movf	_array_index& (0+255),w,b
  2364  0027EC  0D02               	mullw	2
  2365  0027EE  0E00               	movlw	low _memory
  2366  0027F0  24F3               	addwf	243,w,c
  2367  0027F2  6ED9               	movwf	fsr2l,c
  2368  0027F4  0E01               	movlw	high _memory
  2369  0027F6  20F4               	addwfc	prodh,w,c
  2370  0027F8  6EDA               	movwf	fsr2h,c
  2371  0027FA  0E02               	movlw	2
  2372  0027FC  18DE               	xorwf	postinc2,w,c
  2373  0027FE  10DE               	iorwf	postinc2,w,c
  2374  002800  A4D8               	btfss	status,2,c
  2375  002802  EF05  F014         	goto	u5361
  2376  002806  EF07  F014         	goto	u5360
  2377  00280A                     u5361:
  2378  00280A  EF23  F014         	goto	l5056
  2379  00280E                     u5360:
  2380  00280E                     
  2381                           ; BSR set to: 1
  2382  00280E  C02D  F020         	movff	goback@mL,turn45@mL
  2383  002812  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2384  002816  C02F  F022         	movff	goback@mR,turn45@mR
  2385  00281A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2386  00281E  0E02               	movlw	2
  2387  002820  6E24               	movwf	turn45@turn_time^0,c
  2388  002822  0E02               	movlw	2
  2389  002824  6E25               	movwf	turn45@direction^0,c
  2390  002826  ECC8  F01F         	call	_turn45	;wreg free
  2391  00282A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2392  00282E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2393  002832  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2394  002836  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2395  00283A  0E02               	movlw	2
  2396  00283C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2397  00283E  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2398  002842  EF7E  F013         	goto	l5024
  2399  002846                     l5056:
  2400                           
  2401                           ; BSR set to: 1
  2402  002846  5145               	movf	_array_index& (0+255),w,b
  2403  002848  0D02               	mullw	2
  2404  00284A  0E00               	movlw	low _memory
  2405  00284C  24F3               	addwf	243,w,c
  2406  00284E  6ED9               	movwf	fsr2l,c
  2407  002850  0E01               	movlw	high _memory
  2408  002852  20F4               	addwfc	prodh,w,c
  2409  002854  6EDA               	movwf	fsr2h,c
  2410  002856  0E03               	movlw	3
  2411  002858  18DE               	xorwf	postinc2,w,c
  2412  00285A  10DE               	iorwf	postinc2,w,c
  2413  00285C  A4D8               	btfss	status,2,c
  2414  00285E  EF33  F014         	goto	u5371
  2415  002862  EF35  F014         	goto	u5370
  2416  002866                     u5371:
  2417  002866  EF51  F014         	goto	l5062
  2418  00286A                     u5370:
  2419  00286A                     
  2420                           ; BSR set to: 1
  2421  00286A  C02D  F020         	movff	goback@mL,turn45@mL
  2422  00286E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2423  002872  C02F  F022         	movff	goback@mR,turn45@mR
  2424  002876  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2425  00287A  0E04               	movlw	4
  2426  00287C  6E24               	movwf	turn45@turn_time^0,c
  2427  00287E  0E01               	movlw	1
  2428  002880  6E25               	movwf	turn45@direction^0,c
  2429  002882  ECC8  F01F         	call	_turn45	;wreg free
  2430  002886  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2431  00288A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2432  00288E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2433  002892  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2434  002896  0E02               	movlw	2
  2435  002898  6E24               	movwf	fullSpeedBack@instruction^0,c
  2436  00289A  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2437  00289E  EF7E  F013         	goto	l5024
  2438  0028A2                     l5062:
  2439                           
  2440                           ; BSR set to: 1
  2441  0028A2  5145               	movf	_array_index& (0+255),w,b
  2442  0028A4  0D02               	mullw	2
  2443  0028A6  0E00               	movlw	low _memory
  2444  0028A8  24F3               	addwf	243,w,c
  2445  0028AA  6ED9               	movwf	fsr2l,c
  2446  0028AC  0E01               	movlw	high _memory
  2447  0028AE  20F4               	addwfc	prodh,w,c
  2448  0028B0  6EDA               	movwf	fsr2h,c
  2449  0028B2  0E04               	movlw	4
  2450  0028B4  18DE               	xorwf	postinc2,w,c
  2451  0028B6  10DE               	iorwf	postinc2,w,c
  2452  0028B8  A4D8               	btfss	status,2,c
  2453  0028BA  EF61  F014         	goto	u5381
  2454  0028BE  EF63  F014         	goto	u5380
  2455  0028C2                     u5381:
  2456  0028C2  EF7F  F014         	goto	l5068
  2457  0028C6                     u5380:
  2458  0028C6                     
  2459                           ; BSR set to: 1
  2460  0028C6  C02D  F020         	movff	goback@mL,turn45@mL
  2461  0028CA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2462  0028CE  C02F  F022         	movff	goback@mR,turn45@mR
  2463  0028D2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2464  0028D6  0E02               	movlw	2
  2465  0028D8  6E24               	movwf	turn45@turn_time^0,c
  2466  0028DA  0E01               	movlw	1
  2467  0028DC  6E25               	movwf	turn45@direction^0,c
  2468  0028DE  ECC8  F01F         	call	_turn45	;wreg free
  2469  0028E2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2470  0028E6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2471  0028EA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2472  0028EE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2473  0028F2  0E03               	movlw	3
  2474  0028F4  6E24               	movwf	fullSpeedBack@instruction^0,c
  2475  0028F6  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2476  0028FA  EF7E  F013         	goto	l5024
  2477  0028FE                     l5068:
  2478                           
  2479                           ; BSR set to: 1
  2480  0028FE  5145               	movf	_array_index& (0+255),w,b
  2481  002900  0D02               	mullw	2
  2482  002902  0E00               	movlw	low _memory
  2483  002904  24F3               	addwf	243,w,c
  2484  002906  6ED9               	movwf	fsr2l,c
  2485  002908  0E01               	movlw	high _memory
  2486  00290A  20F4               	addwfc	prodh,w,c
  2487  00290C  6EDA               	movwf	fsr2h,c
  2488  00290E  0E05               	movlw	5
  2489  002910  18DE               	xorwf	postinc2,w,c
  2490  002912  10DE               	iorwf	postinc2,w,c
  2491  002914  A4D8               	btfss	status,2,c
  2492  002916  EF8F  F014         	goto	u5391
  2493  00291A  EF91  F014         	goto	u5390
  2494  00291E                     u5391:
  2495  00291E  EFAD  F014         	goto	l5074
  2496  002922                     u5390:
  2497  002922                     
  2498                           ; BSR set to: 1
  2499  002922  C02D  F020         	movff	goback@mL,turn45@mL
  2500  002926  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2501  00292A  C02F  F022         	movff	goback@mR,turn45@mR
  2502  00292E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2503  002932  0E02               	movlw	2
  2504  002934  6E24               	movwf	turn45@turn_time^0,c
  2505  002936  0E02               	movlw	2
  2506  002938  6E25               	movwf	turn45@direction^0,c
  2507  00293A  ECC8  F01F         	call	_turn45	;wreg free
  2508  00293E  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2509  002942  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2510  002946  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2511  00294A  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2512  00294E  0E03               	movlw	3
  2513  002950  6E24               	movwf	fullSpeedBack@instruction^0,c
  2514  002952  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2515  002956  EF7E  F013         	goto	l5024
  2516  00295A                     l5074:
  2517                           
  2518                           ; BSR set to: 1
  2519  00295A  5145               	movf	_array_index& (0+255),w,b
  2520  00295C  0D02               	mullw	2
  2521  00295E  0E00               	movlw	low _memory
  2522  002960  24F3               	addwf	243,w,c
  2523  002962  6ED9               	movwf	fsr2l,c
  2524  002964  0E01               	movlw	high _memory
  2525  002966  20F4               	addwfc	prodh,w,c
  2526  002968  6EDA               	movwf	fsr2h,c
  2527  00296A  0E06               	movlw	6
  2528  00296C  18DE               	xorwf	postinc2,w,c
  2529  00296E  10DE               	iorwf	postinc2,w,c
  2530  002970  A4D8               	btfss	status,2,c
  2531  002972  EFBD  F014         	goto	u5401
  2532  002976  EFBF  F014         	goto	u5400
  2533  00297A                     u5401:
  2534  00297A  EFDB  F014         	goto	l5080
  2535  00297E                     u5400:
  2536  00297E                     
  2537                           ; BSR set to: 1
  2538  00297E  C02D  F020         	movff	goback@mL,turn45@mL
  2539  002982  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2540  002986  C02F  F022         	movff	goback@mR,turn45@mR
  2541  00298A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2542  00298E  0E03               	movlw	3
  2543  002990  6E24               	movwf	turn45@turn_time^0,c
  2544  002992  0E01               	movlw	1
  2545  002994  6E25               	movwf	turn45@direction^0,c
  2546  002996  ECC8  F01F         	call	_turn45	;wreg free
  2547  00299A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2548  00299E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2549  0029A2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2550  0029A6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2551  0029AA  0E02               	movlw	2
  2552  0029AC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2553  0029AE  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2554  0029B2  EF7E  F013         	goto	l5024
  2555  0029B6                     l5080:
  2556                           
  2557                           ; BSR set to: 1
  2558  0029B6  5145               	movf	_array_index& (0+255),w,b
  2559  0029B8  0D02               	mullw	2
  2560  0029BA  0E00               	movlw	low _memory
  2561  0029BC  24F3               	addwf	243,w,c
  2562  0029BE  6ED9               	movwf	fsr2l,c
  2563  0029C0  0E01               	movlw	high _memory
  2564  0029C2  20F4               	addwfc	prodh,w,c
  2565  0029C4  6EDA               	movwf	fsr2h,c
  2566  0029C6  0E07               	movlw	7
  2567  0029C8  18DE               	xorwf	postinc2,w,c
  2568  0029CA  10DE               	iorwf	postinc2,w,c
  2569  0029CC  A4D8               	btfss	status,2,c
  2570  0029CE  EFEB  F014         	goto	u5411
  2571  0029D2  EFED  F014         	goto	u5410
  2572  0029D6                     u5411:
  2573  0029D6  EF09  F015         	goto	l546
  2574  0029DA                     u5410:
  2575  0029DA                     
  2576                           ; BSR set to: 1
  2577  0029DA  C02D  F020         	movff	goback@mL,turn45@mL
  2578  0029DE  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2579  0029E2  C02F  F022         	movff	goback@mR,turn45@mR
  2580  0029E6  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2581  0029EA  0E03               	movlw	3
  2582  0029EC  6E24               	movwf	turn45@turn_time^0,c
  2583  0029EE  0E02               	movlw	2
  2584  0029F0  6E25               	movwf	turn45@direction^0,c
  2585  0029F2  ECC8  F01F         	call	_turn45	;wreg free
  2586  0029F6  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2587  0029FA  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2588  0029FE  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2589  002A02  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2590  002A06  0E02               	movlw	2
  2591  002A08  6E24               	movwf	fullSpeedBack@instruction^0,c
  2592  002A0A  EC3A  F024         	call	_fullSpeedBack	;wreg free
  2593  002A0E  EF7E  F013         	goto	l5024
  2594  002A12                     l546:
  2595                           
  2596                           ; BSR set to: 1
  2597  002A12  EF80  F013         	goto	l5026
  2598  002A16                     l538:
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;movement.c: 155:     LATDbits.LATD7 = 1;
  2602  002A16  8E7C               	bsf	124,7,c	;volatile
  2603                           
  2604                           ;movement.c: 156:     while(PORTFbits.RF2){
  2605  002A18  EF22  F015         	goto	l552
  2606  002A1C                     l5086:
  2607                           
  2608                           ;movement.c: 157:         stop(mL,mR);
  2609  002A1C  C02D  F01A         	movff	goback@mL,stop@mL
  2610  002A20  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2611  002A24  C02F  F01C         	movff	goback@mR,stop@mR
  2612  002A28  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2613  002A2C  EC14  F029         	call	_stop	;wreg free
  2614  002A30                     
  2615                           ;movement.c: 158:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2616  002A30  B48E               	btfsc	142,2,c	;volatile
  2617  002A32  EF1D  F015         	goto	u5421
  2618  002A36  EF1F  F015         	goto	u5420
  2619  002A3A                     u5421:
  2620  002A3A  EF22  F015         	goto	l552
  2621  002A3E                     u5420:
  2622  002A3E  9E7C               	bcf	124,7,c	;volatile
  2623  002A40  EF29  F015         	goto	l556
  2624  002A44                     l552:
  2625                           
  2626                           ;movement.c: 156:     while(PORTFbits.RF2){
  2627  002A44  B48E               	btfsc	142,2,c	;volatile
  2628  002A46  EF27  F015         	goto	u5431
  2629  002A4A  EF29  F015         	goto	u5430
  2630  002A4E                     u5431:
  2631  002A4E  EF0E  F015         	goto	l5086
  2632  002A52                     u5430:
  2633  002A52                     l556:
  2634  002A52  0012               	return		;funcret
  2635  002A54                     __end_of_goback:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _fullSpeedBack *****************
  2639 ;; Defined at:
  2640 ;;		line 144 in file "dc_motor.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2643 ;;		 -> main@motorL(9), 
  2644 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2645 ;;		 -> main@motorR(9), 
  2646 ;;  instruction     1   35[COMRAM] unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2658 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;Total ram usage:        7 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 4
  2665 ;; This function calls:
  2666 ;;		_setMotorPWM
  2667 ;;		_stop
  2668 ;; This function is called by:
  2669 ;;		_turning_action
  2670 ;;		_goback
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text4
  2675  004874                     __ptext4:
  2676                           	callstack 0
  2677  004874                     _fullSpeedBack:
  2678                           	callstack 24
  2679  004874                     
  2680                           ;dc_motor.c: 144: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 145: {;dc_motor.c: 146:     mL->direction=0;
  2681  004874  EE20 F001          	lfsr	2,1
  2682  004878  5020               	movf	fullSpeedBack@mL^0,w,c
  2683  00487A  26D9               	addwf	fsr2l,f,c
  2684  00487C  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2685  00487E  22DA               	addwfc	fsr2h,f,c
  2686  004880  0E00               	movlw	0
  2687  004882  6EDF               	movwf	indf2,c
  2688                           
  2689                           ;dc_motor.c: 147:     mR->direction=0;
  2690  004884  EE20 F001          	lfsr	2,1
  2691  004888  5022               	movf	fullSpeedBack@mR^0,w,c
  2692  00488A  26D9               	addwf	fsr2l,f,c
  2693  00488C  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2694  00488E  22DA               	addwfc	fsr2h,f,c
  2695  004890  0E00               	movlw	0
  2696  004892  6EDF               	movwf	indf2,c
  2697                           
  2698                           ;dc_motor.c: 148:     while (mL->power<40 | mR->power<40){
  2699  004894  EF6B  F024         	goto	l4508
  2700  004898                     l4500:
  2701                           
  2702                           ;dc_motor.c: 149:         mL->power += 10;
  2703  004898  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2704  00489C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2705  0048A0  0E0A               	movlw	10
  2706  0048A2  26DF               	addwf	indf2,f,c
  2707                           
  2708                           ;dc_motor.c: 150:         mR->power += 10;
  2709  0048A4  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2710  0048A8  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2711  0048AC  0E0A               	movlw	10
  2712  0048AE  26DF               	addwf	indf2,f,c
  2713  0048B0                     
  2714                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2715  0048B0  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2716  0048B4  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2717  0048B8  EC29  F01D         	call	_setMotorPWM	;wreg free
  2718  0048BC                     
  2719                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2720  0048BC  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2721  0048C0  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2722  0048C4  EC29  F01D         	call	_setMotorPWM	;wreg free
  2723  0048C8                     
  2724                           ;dc_motor.c: 153:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2725  0048C8  0ED0               	movlw	208
  2726  0048CA  6E25               	movwf	??_fullSpeedBack^0,c
  2727  0048CC  0ECA               	movlw	202
  2728  0048CE                     u5857:
  2729  0048CE  2EE8               	decfsz	wreg,f,c
  2730  0048D0  D7FE               	bra	u5857
  2731  0048D2  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2732  0048D4  D7FC               	bra	u5857
  2733  0048D6                     l4508:
  2734                           
  2735                           ;dc_motor.c: 148:     while (mL->power<40 | mR->power<40){
  2736  0048D6  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2737  0048DA  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2738  0048DE  0E27               	movlw	39
  2739  0048E0  64DF               	cpfsgt	indf2,c
  2740  0048E2  EF75  F024         	goto	u4751
  2741  0048E6  EF77  F024         	goto	u4750
  2742  0048EA                     u4751:
  2743  0048EA  EF4C  F024         	goto	l4500
  2744  0048EE                     u4750:
  2745  0048EE  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2746  0048F2  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2747  0048F6  0E27               	movlw	39
  2748  0048F8  64DF               	cpfsgt	indf2,c
  2749  0048FA  EF81  F024         	goto	u4761
  2750  0048FE  EF83  F024         	goto	u4760
  2751  004902                     u4761:
  2752  004902  EF4C  F024         	goto	l4500
  2753  004906                     u4760:
  2754  004906                     
  2755                           ;dc_motor.c: 156:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2756  004906  0424               	decf	fullSpeedBack@instruction^0,w,c
  2757  004908  A4D8               	btfss	status,2,c
  2758  00490A  EF89  F024         	goto	u4771
  2759  00490E  EF8B  F024         	goto	u4770
  2760  004912                     u4771:
  2761  004912  EF96  F024         	goto	l4516
  2762  004916                     u4770:
  2763  004916  0E31               	movlw	49
  2764  004918  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2765  00491A  0EB4               	movlw	180
  2766  00491C  6E25               	movwf	??_fullSpeedBack^0,c
  2767  00491E  0E66               	movlw	102
  2768  004920                     u5867:
  2769  004920  2EE8               	decfsz	wreg,f,c
  2770  004922  D7FE               	bra	u5867
  2771  004924  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2772  004926  D7FC               	bra	u5867
  2773  004928  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2774  00492A  D7FA               	bra	u5867
  2775  00492C                     l4516:
  2776                           
  2777                           ;dc_motor.c: 157:     if (instruction == 2) {_delay((unsigned long)((800)*(64000000/4000
      +                          .0)));}
  2778  00492C  0E02               	movlw	2
  2779  00492E  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2780  004930  A4D8               	btfss	status,2,c
  2781  004932  EF9D  F024         	goto	u4781
  2782  004936  EF9F  F024         	goto	u4780
  2783  00493A                     u4781:
  2784  00493A  EFAB  F024         	goto	l4520
  2785  00493E                     u4780:
  2786  00493E  0E41               	movlw	65
  2787  004940  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2788  004942  0EF0               	movlw	240
  2789  004944  6E25               	movwf	??_fullSpeedBack^0,c
  2790  004946  0E33               	movlw	51
  2791  004948                     u5877:
  2792  004948  2EE8               	decfsz	wreg,f,c
  2793  00494A  D7FE               	bra	u5877
  2794  00494C  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2795  00494E  D7FC               	bra	u5877
  2796  004950  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2797  004952  D7FA               	bra	u5877
  2798  004954  F000               	nop	
  2799  004956                     l4520:
  2800                           
  2801                           ;dc_motor.c: 158:     if (instruction == 3) {_delay((unsigned long)((1400)*(64000000/400
      +                          0.0)));}
  2802  004956  0E03               	movlw	3
  2803  004958  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2804  00495A  A4D8               	btfss	status,2,c
  2805  00495C  EFB2  F024         	goto	u4791
  2806  004960  EFB4  F024         	goto	u4790
  2807  004964                     u4791:
  2808  004964  EFC0  F024         	goto	l4524
  2809  004968                     u4790:
  2810  004968  0E72               	movlw	114
  2811  00496A  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2812  00496C  0EA3               	movlw	163
  2813  00496E  6E25               	movwf	??_fullSpeedBack^0,c
  2814  004970  0E9B               	movlw	155
  2815  004972                     u5887:
  2816  004972  2EE8               	decfsz	wreg,f,c
  2817  004974  D7FE               	bra	u5887
  2818  004976  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2819  004978  D7FC               	bra	u5887
  2820  00497A  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2821  00497C  D7FA               	bra	u5887
  2822  00497E  F000               	nop	
  2823  004980                     l4524:
  2824                           
  2825                           ;dc_motor.c: 159:     stop(mL,mR);
  2826  004980  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2827  004984  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2828  004988  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2829  00498C  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2830  004990  EC14  F029         	call	_stop	;wreg free
  2831  004994  0012               	return		;funcret
  2832  004996                     __end_of_fullSpeedBack:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _test_function *****************
  2836 ;; Defined at:
  2837 ;;		line 19 in file "test_and_calibration.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  test_code       1    wreg     unsigned char 
  2840 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  2841 ;;		 -> main@rgb(8), 
  2842 ;;  w               2  136[BANK0 ] PTR struct white_card
  2843 ;;		 -> main@white(28), 
  2844 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  2845 ;;		 -> main@motorL(9), 
  2846 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  2847 ;;		 -> main@motorR(9), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  test_code       1  149[BANK0 ] unsigned char 
  2850 ;;  amb_light       2  144[BANK0 ] unsigned int 
  2851 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  2852 ;;  color           1  147[BANK0 ] unsigned char 
  2853 ;;  complete        1  146[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:       16 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 11
  2870 ;; This function calls:
  2871 ;;		_LED_C
  2872 ;;		_amb_light_measure
  2873 ;;		_calibrate_white
  2874 ;;		_color_data_collection
  2875 ;;		_color_display
  2876 ;;		_color_predict
  2877 ;;		_detect_color
  2878 ;;		_distance_measure
  2879 ;;		_fullSpeedAhead
  2880 ;;		_read_color
  2881 ;;		_stop
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text5
  2888  0042D6                     __ptext5:
  2889                           	callstack 0
  2890  0042D6                     _test_function:
  2891                           	callstack 19
  2892                           
  2893                           ;incstack = 0
  2894                           ;test_function@test_code stored from wreg
  2895  0042D6  0100               	movlb	0	; () banked
  2896  0042D8  6FF5               	movwf	test_function@test_code& (0+255),b
  2897  0042DA                     
  2898                           ;test_and_calibration.c: 19: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 20: {;test_and_calibration.c: 21:     unsigned char complete = 0;
  2899  0042DA  0E00               	movlw	0
  2900  0042DC  0100               	movlb	0	; () banked
  2901  0042DE  6FF2               	movwf	test_function@complete& (0+255),b
  2902                           
  2903                           ;test_and_calibration.c: 23:     unsigned char stop_signal = 0;
  2904  0042E0  0E00               	movlw	0
  2905  0042E2  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2906                           
  2907                           ;test_and_calibration.c: 24:     unsigned int amb_light = 0;
  2908  0042E4  0E00               	movlw	0
  2909  0042E6  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  2910  0042E8  0E00               	movlw	0
  2911  0042EA  6FF0               	movwf	test_function@amb_light& (0+255),b
  2912  0042EC                     
  2913                           ; BSR set to: 0
  2914                           ;test_and_calibration.c: 26:     if (test_code == 2){calibrate_white(w);}
  2915  0042EC  0E02               	movlw	2
  2916  0042EE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2917  0042F0  A4D8               	btfss	status,2,c
  2918  0042F2  EF7D  F021         	goto	u5581
  2919  0042F6  EF7F  F021         	goto	u5580
  2920  0042FA                     u5581:
  2921  0042FA  EF85  F021         	goto	l5230
  2922  0042FE                     u5580:
  2923  0042FE                     
  2924                           ; BSR set to: 0
  2925  0042FE  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  2926  004302  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2927  004306  EC37  F01B         	call	_calibrate_white	;wreg free
  2928  00430A                     l5230:
  2929                           
  2930                           ;test_and_calibration.c: 27:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2931  00430A  0E04               	movlw	4
  2932  00430C  0100               	movlb	0	; () banked
  2933  00430E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2934  004310  A4D8               	btfss	status,2,c
  2935  004312  EF8D  F021         	goto	u5591
  2936  004316  EF8F  F021         	goto	u5590
  2937  00431A                     u5591:
  2938  00431A  EF99  F021         	goto	l5234
  2939  00431E                     u5590:
  2940  00431E                     
  2941                           ; BSR set to: 0
  2942  00431E  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  2943  004322  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2944  004326  ECA6  F023         	call	_amb_light_measure	;wreg free
  2945  00432A  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  2946  00432E  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2947  004332                     l5234:
  2948                           
  2949                           ;test_and_calibration.c: 31:         if (test_code == 1){
  2950  004332  0100               	movlb	0	; () banked
  2951  004334  05F5               	decf	test_function@test_code& (0+255),w,b
  2952  004336  A4D8               	btfss	status,2,c
  2953  004338  EFA0  F021         	goto	u5601
  2954  00433C  EFA2  F021         	goto	u5600
  2955  004340                     u5601:
  2956  004340  EFB0  F021         	goto	l5242
  2957  004344                     u5600:
  2958  004344                     
  2959                           ; BSR set to: 0
  2960                           ;test_and_calibration.c: 32:             LED_C();
  2961  004344  ECD1  F02D         	call	_LED_C	;wreg free
  2962  004348                     
  2963                           ;test_and_calibration.c: 33:             read_color(m);
  2964  004348  C0E6  F00C         	movff	test_function@m,read_color@m
  2965  00434C  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2966  004350  EC9A  F02A         	call	_read_color	;wreg free
  2967  004354                     
  2968                           ;test_and_calibration.c: 34:             color_display(m);
  2969  004354  C0E6  F058         	movff	test_function@m,color_display@m
  2970  004358  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2971  00435C  EC31  F02A         	call	_color_display	;wreg free
  2972  004360                     l5242:
  2973                           
  2974                           ;test_and_calibration.c: 37:         if (test_code == 2){
  2975  004360  0E02               	movlw	2
  2976  004362  0100               	movlb	0	; () banked
  2977  004364  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2978  004366  A4D8               	btfss	status,2,c
  2979  004368  EFB8  F021         	goto	u5611
  2980  00436C  EFBA  F021         	goto	u5610
  2981  004370                     u5611:
  2982  004370  EFC9  F021         	goto	l5248
  2983  004374                     u5610:
  2984  004374                     
  2985                           ; BSR set to: 0
  2986                           ;test_and_calibration.c: 38:             color = detect_color(m,w);
  2987  004374  C0E6  F071         	movff	test_function@m,detect_color@m
  2988  004378  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2989  00437C  C0E8  F073         	movff	test_function@w,detect_color@w
  2990  004380  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2991  004384  EC0A  F007         	call	_detect_color	;wreg free
  2992  004388  0100               	movlb	0	; () banked
  2993  00438A  6FF3               	movwf	test_function@color& (0+255),b
  2994  00438C                     
  2995                           ; BSR set to: 0
  2996                           ;test_and_calibration.c: 40:             color_predict(color);
  2997  00438C  51F3               	movf	test_function@color& (0+255),w,b
  2998  00438E  EC3E  F02D         	call	_color_predict
  2999  004392                     l5248:
  3000                           
  3001                           ;test_and_calibration.c: 43:         if (test_code == 3){
  3002  004392  0E03               	movlw	3
  3003  004394  0100               	movlb	0	; () banked
  3004  004396  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3005  004398  A4D8               	btfss	status,2,c
  3006  00439A  EFD1  F021         	goto	u5621
  3007  00439E  EFD3  F021         	goto	u5620
  3008  0043A2                     u5621:
  3009  0043A2  EFE6  F021         	goto	l5258
  3010  0043A6                     u5620:
  3011  0043A6  EFDE  F021         	goto	l5256
  3012  0043AA                     l5252:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;test_and_calibration.c: 45:                 color_data_collection(m);
  3016  0043AA  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  3017  0043AE  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3018  0043B2  ECA0  F020         	call	_color_data_collection	;wreg free
  3019  0043B6                     
  3020                           ;test_and_calibration.c: 46:                 complete = 1;
  3021  0043B6  0E01               	movlw	1
  3022  0043B8  0100               	movlb	0	; () banked
  3023  0043BA  6FF2               	movwf	test_function@complete& (0+255),b
  3024  0043BC                     l5256:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;test_and_calibration.c: 44:             while (complete == 0){
  3028  0043BC  51F2               	movf	test_function@complete& (0+255),w,b
  3029  0043BE  B4D8               	btfsc	status,2,c
  3030  0043C0  EFE4  F021         	goto	u5631
  3031  0043C4  EFE6  F021         	goto	u5630
  3032  0043C8                     u5631:
  3033  0043C8  EFD5  F021         	goto	l5252
  3034  0043CC                     u5630:
  3035  0043CC                     l5258:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;test_and_calibration.c: 50:         if (test_code == 4){
  3039  0043CC  0E04               	movlw	4
  3040  0043CE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3041  0043D0  A4D8               	btfss	status,2,c
  3042  0043D2  EFED  F021         	goto	u5641
  3043  0043D6  EFEF  F021         	goto	u5640
  3044  0043DA                     u5641:
  3045  0043DA  EF99  F021         	goto	l5234
  3046  0043DE                     u5640:
  3047  0043DE  EF0B  F022         	goto	l5266
  3048  0043E2                     l5262:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;test_and_calibration.c: 52:                 fullSpeedAhead(mL, mR);
  3052  0043E2  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3053  0043E6  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3054  0043EA  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3055  0043EE  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3056  0043F2  EC50  F028         	call	_fullSpeedAhead	;wreg free
  3057  0043F6                     
  3058                           ;test_and_calibration.c: 53:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  3059  0043F6  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  3060  0043FA  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  3061  0043FE  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  3062  004402  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  3063  004406  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  3064  00440A  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  3065  00440E  ECED  F027         	call	_distance_measure	;wreg free
  3066  004412  0100               	movlb	0	; () banked
  3067  004414  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3068  004416                     l5266:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;test_and_calibration.c: 51:             while (stop_signal == 0){
  3072  004416  51F4               	movf	test_function@stop_signal& (0+255),w,b
  3073  004418  B4D8               	btfsc	status,2,c
  3074  00441A  EF11  F022         	goto	u5651
  3075  00441E  EF13  F022         	goto	u5650
  3076  004422                     u5651:
  3077  004422  EFF1  F021         	goto	l5262
  3078  004426                     u5650:
  3079  004426                     
  3080                           ; BSR set to: 0
  3081                           ;test_and_calibration.c: 55:             stop(mL, mR);
  3082  004426  C0EA  F01A         	movff	test_function@mL,stop@mL
  3083  00442A  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  3084  00442E  C0EC  F01C         	movff	test_function@mR,stop@mR
  3085  004432  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  3086  004436  EC14  F029         	call	_stop	;wreg free
  3087  00443A                     
  3088                           ;test_and_calibration.c: 56:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  3089  00443A  0E52               	movlw	82
  3090  00443C  0100               	movlb	0	; () banked
  3091  00443E  6FEF               	movwf	(??_test_function+1)& (0+255),b
  3092  004440  0E2B               	movlw	43
  3093  004442  6FEE               	movwf	??_test_function& (0+255),b
  3094  004444  0E00               	movlw	0
  3095  004446                     u5897:
  3096  004446  2EE8               	decfsz	wreg,f,c
  3097  004448  D7FE               	bra	u5897
  3098  00444A  2FEE               	decfsz	??_test_function& (0+255),f,b
  3099  00444C  D7FC               	bra	u5897
  3100  00444E  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  3101  004450  D7FA               	bra	u5897
  3102  004452  F000               	nop	
  3103  004454                     
  3104                           ;test_and_calibration.c: 57:             stop_signal = 0;
  3105  004454  0E00               	movlw	0
  3106  004456  0100               	movlb	0	; () banked
  3107  004458  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3108  00445A  EF99  F021         	goto	l5234
  3109  00445E  0012               	return		;funcret
  3110  004460                     __end_of_test_function:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _detect_color *****************
  3114 ;; Defined at:
  3115 ;;		line 290 in file "color.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  3118 ;;		 -> main@rgb(8), 
  3119 ;;  w               2   19[BANK0 ] PTR struct white_card
  3120 ;;		 -> main@white(28), 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  BG              2   44[BANK0 ] unsigned int 
  3123 ;;  RR              2   42[BANK0 ] unsigned int 
  3124 ;;  GG              2   39[BANK0 ] unsigned int 
  3125 ;;  BR              2   37[BANK0 ] unsigned int 
  3126 ;;  GB              2   35[BANK0 ] unsigned int 
  3127 ;;  RB              2   33[BANK0 ] unsigned int 
  3128 ;;  BB              2   31[BANK0 ] unsigned int 
  3129 ;;  GR              2   29[BANK0 ] unsigned int 
  3130 ;;  BC              2   27[BANK0 ] unsigned int 
  3131 ;;  RG              2   25[BANK0 ] unsigned int 
  3132 ;;  color           1   41[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      unsigned char 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3142 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;Total ram usage:       33 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 5
  3149 ;; This function calls:
  3150 ;;		_LED_B
  3151 ;;		_LED_G
  3152 ;;		_LED_R
  3153 ;;		___fldiv
  3154 ;;		___flmul
  3155 ;;		___xxtofl
  3156 ;;		_compare
  3157 ;;		_lroundf
  3158 ;;		_read_color
  3159 ;;		_toggle_light
  3160 ;; This function is called by:
  3161 ;;		_verify_color
  3162 ;;		_main
  3163 ;;		_test_function
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text6
  3168  000E14                     __ptext6:
  3169                           	callstack 0
  3170  000E14                     _detect_color:
  3171                           	callstack 24
  3172  000E14  0E00               	movlw	0
  3173  000E16  0100               	movlb	0	; () banked
  3174  000E18  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  3175  000E1A  0E00               	movlw	0
  3176  000E1C  6F79               	movwf	detect_color@RG& (0+255),b
  3177  000E1E  0E00               	movlw	0
  3178  000E20  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  3179  000E22  0E00               	movlw	0
  3180  000E24  6F81               	movwf	detect_color@RB& (0+255),b
  3181  000E26  0E00               	movlw	0
  3182  000E28  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  3183  000E2A  0E00               	movlw	0
  3184  000E2C  6F7D               	movwf	detect_color@GR& (0+255),b
  3185  000E2E  0E00               	movlw	0
  3186  000E30  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  3187  000E32  0E00               	movlw	0
  3188  000E34  6F87               	movwf	detect_color@GG& (0+255),b
  3189  000E36  0E00               	movlw	0
  3190  000E38  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  3191  000E3A  0E00               	movlw	0
  3192  000E3C  6F83               	movwf	detect_color@GB& (0+255),b
  3193  000E3E  0E00               	movlw	0
  3194  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  3195  000E42  0E00               	movlw	0
  3196  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  3197  000E46  0E00               	movlw	0
  3198  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  3199  000E4A  0E00               	movlw	0
  3200  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  3201  000E4E  0E00               	movlw	0
  3202  000E50  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  3203  000E52  0E00               	movlw	0
  3204  000E54  6F7F               	movwf	detect_color@BB& (0+255),b
  3205  000E56  0E00               	movlw	0
  3206  000E58  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  3207  000E5A  0E00               	movlw	0
  3208  000E5C  6F7B               	movwf	detect_color@BC& (0+255),b
  3209                           
  3210                           ;color.c: 296:     unsigned char color = 0;
  3211  000E5E  0E00               	movlw	0
  3212  000E60  6F89               	movwf	detect_color@color& (0+255),b
  3213  000E62                     
  3214                           ; BSR set to: 0
  3215                           ;color.c: 298:     LED_R();
  3216  000E62  EC91  F02D         	call	_LED_R	;wreg free
  3217  000E66                     
  3218                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3219  000E66  0E09               	movlw	9
  3220  000E68  0100               	movlb	0	; () banked
  3221  000E6A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3222  000E6C  0E1E               	movlw	30
  3223  000E6E  6F75               	movwf	??_detect_color& (0+255),b
  3224  000E70  0EE4               	movlw	228
  3225  000E72                     u5907:
  3226  000E72  2EE8               	decfsz	wreg,f,c
  3227  000E74  D7FE               	bra	u5907
  3228  000E76  2F75               	decfsz	??_detect_color& (0+255),f,b
  3229  000E78  D7FC               	bra	u5907
  3230  000E7A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3231  000E7C  D7FA               	bra	u5907
  3232  000E7E  F000               	nop	
  3233  000E80                     
  3234                           ;color.c: 300:     read_color(m);
  3235  000E80  C071  F00C         	movff	detect_color@m,read_color@m
  3236  000E84  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3237  000E88  EC9A  F02A         	call	_read_color	;wreg free
  3238  000E8C                     
  3239                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3240  000E8C  C073  FFD9         	movff	detect_color@w,fsr2l
  3241  000E90  C074  FFDA         	movff	detect_color@w+1,fsr2h
  3242  000E94  CFDE F075          	movff	postinc2,??_detect_color
  3243  000E98  CFDD F076          	movff	postdec2,??_detect_color+1
  3244  000E9C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3245  000EA0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3246  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3247  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3248  000EA8  0E00               	movlw	0
  3249  000EAA  ECEE  F01E         	call	___xxtofl
  3250  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3251  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3252  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3253  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3254  000EBE  C071  FFD9         	movff	detect_color@m,fsr2l
  3255  000EC2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3256  000EC6  CFDE F077          	movff	postinc2,??_detect_color+2
  3257  000ECA  CFDD F078          	movff	postdec2,??_detect_color+3
  3258  000ECE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3259  000ED2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3260  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3261  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3262  000EDA  0E00               	movlw	0
  3263  000EDC  ECEE  F01E         	call	___xxtofl
  3264  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3265  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3266  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3267  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3268  000EF0  EC2A  F015         	call	___fldiv	;wreg free
  3269  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3270  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3271  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3272  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3273  000F04  0E00               	movlw	0
  3274  000F06  6E2C               	movwf	___flmul@a^0,c
  3275  000F08  0E00               	movlw	0
  3276  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3277  000F0C  0EC8               	movlw	200
  3278  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3279  000F10  0E42               	movlw	66
  3280  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3281  000F14  EC6C  F00F         	call	___flmul	;wreg free
  3282  000F18  C028  F08E         	movff	?___flmul,_detect_color$3161
  3283  000F1C  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3284  000F20  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3285  000F24  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3286  000F28                     
  3287                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3288  000F28  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3289  000F2C  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3290  000F30  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3291  000F34  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3292  000F38  ECB8  F02C         	call	_lroundf	;wreg free
  3293  000F3C  C066  F08A         	movff	?_lroundf,detect_color@RR
  3294  000F40  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  3295  000F44  0100               	movlb	0	; () banked
  3296  000F46  EE20 F002          	lfsr	2,2
  3297  000F4A  5173               	movf	detect_color@w& (0+255),w,b
  3298  000F4C  26D9               	addwf	fsr2l,f,c
  3299  000F4E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3300  000F50  22DA               	addwfc	fsr2h,f,c
  3301  000F52  CFDE F075          	movff	postinc2,??_detect_color
  3302  000F56  CFDD F076          	movff	postdec2,??_detect_color+1
  3303  000F5A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3304  000F5E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3305  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3306  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3307  000F66  0E00               	movlw	0
  3308  000F68  ECEE  F01E         	call	___xxtofl
  3309  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3310  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3311  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3312  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3313  000F7C  0100               	movlb	0	; () banked
  3314  000F7E  EE20 F002          	lfsr	2,2
  3315  000F82  5171               	movf	detect_color@m& (0+255),w,b
  3316  000F84  26D9               	addwf	fsr2l,f,c
  3317  000F86  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3318  000F88  22DA               	addwfc	fsr2h,f,c
  3319  000F8A  CFDE F077          	movff	postinc2,??_detect_color+2
  3320  000F8E  CFDD F078          	movff	postdec2,??_detect_color+3
  3321  000F92  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3322  000F96  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3323  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3324  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3325  000F9E  0E00               	movlw	0
  3326  000FA0  ECEE  F01E         	call	___xxtofl
  3327  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3328  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3329  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3330  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3331  000FB4  EC2A  F015         	call	___fldiv	;wreg free
  3332  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3333  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3334  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3335  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3336  000FC8  0E00               	movlw	0
  3337  000FCA  6E2C               	movwf	___flmul@a^0,c
  3338  000FCC  0E00               	movlw	0
  3339  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3340  000FD0  0EC8               	movlw	200
  3341  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3342  000FD4  0E42               	movlw	66
  3343  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3344  000FD8  EC6C  F00F         	call	___flmul	;wreg free
  3345  000FDC  C028  F08E         	movff	?___flmul,_detect_color$3161
  3346  000FE0  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3347  000FE4  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3348  000FE8  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3349  000FEC  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3350  000FF0  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3351  000FF4  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3352  000FF8  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3353  000FFC  ECB8  F02C         	call	_lroundf	;wreg free
  3354  001000  0100               	movlb	0	; () banked
  3355  001002  EE20 F004          	lfsr	2,4
  3356  001006  5173               	movf	detect_color@w& (0+255),w,b
  3357  001008  26D9               	addwf	fsr2l,f,c
  3358  00100A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3359  00100C  22DA               	addwfc	fsr2h,f,c
  3360  00100E  CFDE F075          	movff	postinc2,??_detect_color
  3361  001012  CFDD F076          	movff	postdec2,??_detect_color+1
  3362  001016  C075  F001         	movff	??_detect_color,___xxtofl@val
  3363  00101A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3364  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3365  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  3366  001022  0E00               	movlw	0
  3367  001024  ECEE  F01E         	call	___xxtofl
  3368  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  3369  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3370  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3371  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3372  001038  0100               	movlb	0	; () banked
  3373  00103A  EE20 F004          	lfsr	2,4
  3374  00103E  5171               	movf	detect_color@m& (0+255),w,b
  3375  001040  26D9               	addwf	fsr2l,f,c
  3376  001042  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3377  001044  22DA               	addwfc	fsr2h,f,c
  3378  001046  CFDE F077          	movff	postinc2,??_detect_color+2
  3379  00104A  CFDD F078          	movff	postdec2,??_detect_color+3
  3380  00104E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3381  001052  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3382  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  3383  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  3384  00105A  0E00               	movlw	0
  3385  00105C  ECEE  F01E         	call	___xxtofl
  3386  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3387  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3388  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3389  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3390  001070  EC2A  F015         	call	___fldiv	;wreg free
  3391  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  3392  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3393  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3394  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3395  001084  0E00               	movlw	0
  3396  001086  6E2C               	movwf	___flmul@a^0,c
  3397  001088  0E00               	movlw	0
  3398  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  3399  00108C  0EC8               	movlw	200
  3400  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  3401  001090  0E42               	movlw	66
  3402  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  3403  001094  EC6C  F00F         	call	___flmul	;wreg free
  3404  001098  C028  F08E         	movff	?___flmul,_detect_color$3161
  3405  00109C  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3406  0010A0  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3407  0010A4  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3408  0010A8  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3409  0010AC  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3410  0010B0  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3411  0010B4  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3412  0010B8  ECB8  F02C         	call	_lroundf	;wreg free
  3413  0010BC  C066  F081         	movff	?_lroundf,detect_color@RB
  3414  0010C0  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  3415  0010C4                     
  3416                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3417  0010C4  0E05               	movlw	5
  3418  0010C6  0100               	movlb	0	; () banked
  3419  0010C8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3420  0010CA  0E0F               	movlw	15
  3421  0010CC  6F75               	movwf	??_detect_color& (0+255),b
  3422  0010CE  0EF1               	movlw	241
  3423  0010D0                     u5917:
  3424  0010D0  2EE8               	decfsz	wreg,f,c
  3425  0010D2  D7FE               	bra	u5917
  3426  0010D4  2F75               	decfsz	??_detect_color& (0+255),f,b
  3427  0010D6  D7FC               	bra	u5917
  3428  0010D8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3429  0010DA  D7FA               	bra	u5917
  3430  0010DC                     
  3431                           ;color.c: 309:     LED_G();
  3432  0010DC  ECB1  F02D         	call	_LED_G	;wreg free
  3433  0010E0                     
  3434                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3435  0010E0  0E09               	movlw	9
  3436  0010E2  0100               	movlb	0	; () banked
  3437  0010E4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3438  0010E6  0E1E               	movlw	30
  3439  0010E8  6F75               	movwf	??_detect_color& (0+255),b
  3440  0010EA  0EE4               	movlw	228
  3441  0010EC                     u5927:
  3442  0010EC  2EE8               	decfsz	wreg,f,c
  3443  0010EE  D7FE               	bra	u5927
  3444  0010F0  2F75               	decfsz	??_detect_color& (0+255),f,b
  3445  0010F2  D7FC               	bra	u5927
  3446  0010F4  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3447  0010F6  D7FA               	bra	u5927
  3448  0010F8  F000               	nop	
  3449  0010FA                     
  3450                           ;color.c: 311:     read_color(m);
  3451  0010FA  C071  F00C         	movff	detect_color@m,read_color@m
  3452  0010FE  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3453  001102  EC9A  F02A         	call	_read_color	;wreg free
  3454  001106                     
  3455                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3456  001106  0100               	movlb	0	; () banked
  3457  001108  EE20 F006          	lfsr	2,6
  3458  00110C  5173               	movf	detect_color@w& (0+255),w,b
  3459  00110E  26D9               	addwf	fsr2l,f,c
  3460  001110  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3461  001112  22DA               	addwfc	fsr2h,f,c
  3462  001114  CFDE F075          	movff	postinc2,??_detect_color
  3463  001118  CFDD F076          	movff	postdec2,??_detect_color+1
  3464  00111C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3465  001120  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3466  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  3467  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  3468  001128  0E00               	movlw	0
  3469  00112A  ECEE  F01E         	call	___xxtofl
  3470  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3471  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3472  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3473  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3474  00113E  C071  FFD9         	movff	detect_color@m,fsr2l
  3475  001142  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3476  001146  CFDE F077          	movff	postinc2,??_detect_color+2
  3477  00114A  CFDD F078          	movff	postdec2,??_detect_color+3
  3478  00114E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3479  001152  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3480  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  3481  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  3482  00115A  0E00               	movlw	0
  3483  00115C  ECEE  F01E         	call	___xxtofl
  3484  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3485  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3486  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3487  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3488  001170  EC2A  F015         	call	___fldiv	;wreg free
  3489  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  3490  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3491  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3492  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3493  001184  0E00               	movlw	0
  3494  001186  6E2C               	movwf	___flmul@a^0,c
  3495  001188  0E00               	movlw	0
  3496  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  3497  00118C  0EC8               	movlw	200
  3498  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  3499  001190  0E42               	movlw	66
  3500  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  3501  001194  EC6C  F00F         	call	___flmul	;wreg free
  3502  001198  C028  F08E         	movff	?___flmul,_detect_color$3161
  3503  00119C  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3504  0011A0  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3505  0011A4  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3506  0011A8                     
  3507                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3508  0011A8  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3509  0011AC  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3510  0011B0  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3511  0011B4  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3512  0011B8  ECB8  F02C         	call	_lroundf	;wreg free
  3513  0011BC  C066  F07D         	movff	?_lroundf,detect_color@GR
  3514  0011C0  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  3515  0011C4  0100               	movlb	0	; () banked
  3516  0011C6  EE20 F008          	lfsr	2,8
  3517  0011CA  5173               	movf	detect_color@w& (0+255),w,b
  3518  0011CC  26D9               	addwf	fsr2l,f,c
  3519  0011CE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3520  0011D0  22DA               	addwfc	fsr2h,f,c
  3521  0011D2  CFDE F075          	movff	postinc2,??_detect_color
  3522  0011D6  CFDD F076          	movff	postdec2,??_detect_color+1
  3523  0011DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3524  0011DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3525  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3526  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3527  0011E6  0E00               	movlw	0
  3528  0011E8  ECEE  F01E         	call	___xxtofl
  3529  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3530  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3531  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3532  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3533  0011FC  0100               	movlb	0	; () banked
  3534  0011FE  EE20 F002          	lfsr	2,2
  3535  001202  5171               	movf	detect_color@m& (0+255),w,b
  3536  001204  26D9               	addwf	fsr2l,f,c
  3537  001206  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3538  001208  22DA               	addwfc	fsr2h,f,c
  3539  00120A  CFDE F077          	movff	postinc2,??_detect_color+2
  3540  00120E  CFDD F078          	movff	postdec2,??_detect_color+3
  3541  001212  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3542  001216  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3543  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3544  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3545  00121E  0E00               	movlw	0
  3546  001220  ECEE  F01E         	call	___xxtofl
  3547  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3548  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3549  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3550  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3551  001234  EC2A  F015         	call	___fldiv	;wreg free
  3552  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  3553  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3554  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3555  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3556  001248  0E00               	movlw	0
  3557  00124A  6E2C               	movwf	___flmul@a^0,c
  3558  00124C  0E00               	movlw	0
  3559  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  3560  001250  0EC8               	movlw	200
  3561  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  3562  001254  0E42               	movlw	66
  3563  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  3564  001258  EC6C  F00F         	call	___flmul	;wreg free
  3565  00125C  C028  F08E         	movff	?___flmul,_detect_color$3161
  3566  001260  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3567  001264  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3568  001268  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3569  00126C  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3570  001270  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3571  001274  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3572  001278  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3573  00127C  ECB8  F02C         	call	_lroundf	;wreg free
  3574  001280  C066  F087         	movff	?_lroundf,detect_color@GG
  3575  001284  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  3576  001288  0100               	movlb	0	; () banked
  3577  00128A  EE20 F00A          	lfsr	2,10
  3578  00128E  5173               	movf	detect_color@w& (0+255),w,b
  3579  001290  26D9               	addwf	fsr2l,f,c
  3580  001292  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3581  001294  22DA               	addwfc	fsr2h,f,c
  3582  001296  CFDE F075          	movff	postinc2,??_detect_color
  3583  00129A  CFDD F076          	movff	postdec2,??_detect_color+1
  3584  00129E  C075  F001         	movff	??_detect_color,___xxtofl@val
  3585  0012A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3586  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3587  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3588  0012AA  0E00               	movlw	0
  3589  0012AC  ECEE  F01E         	call	___xxtofl
  3590  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3591  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3592  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3593  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3594  0012C0  0100               	movlb	0	; () banked
  3595  0012C2  EE20 F004          	lfsr	2,4
  3596  0012C6  5171               	movf	detect_color@m& (0+255),w,b
  3597  0012C8  26D9               	addwf	fsr2l,f,c
  3598  0012CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3599  0012CC  22DA               	addwfc	fsr2h,f,c
  3600  0012CE  CFDE F077          	movff	postinc2,??_detect_color+2
  3601  0012D2  CFDD F078          	movff	postdec2,??_detect_color+3
  3602  0012D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3603  0012DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3604  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3605  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3606  0012E2  0E00               	movlw	0
  3607  0012E4  ECEE  F01E         	call	___xxtofl
  3608  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3609  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3610  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3611  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3612  0012F8  EC2A  F015         	call	___fldiv	;wreg free
  3613  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3614  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3615  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3616  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3617  00130C  0E00               	movlw	0
  3618  00130E  6E2C               	movwf	___flmul@a^0,c
  3619  001310  0E00               	movlw	0
  3620  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  3621  001314  0EC8               	movlw	200
  3622  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  3623  001318  0E42               	movlw	66
  3624  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  3625  00131C  EC6C  F00F         	call	___flmul	;wreg free
  3626  001320  C028  F08E         	movff	?___flmul,_detect_color$3161
  3627  001324  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3628  001328  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3629  00132C  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3630  001330  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3631  001334  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3632  001338  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3633  00133C  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3634  001340  ECB8  F02C         	call	_lroundf	;wreg free
  3635  001344  C066  F083         	movff	?_lroundf,detect_color@GB
  3636  001348  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  3637  00134C                     
  3638                           ;color.c: 319:     LED_B();
  3639  00134C  ECC1  F02D         	call	_LED_B	;wreg free
  3640  001350                     
  3641                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3642  001350  0E09               	movlw	9
  3643  001352  0100               	movlb	0	; () banked
  3644  001354  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3645  001356  0E1E               	movlw	30
  3646  001358  6F75               	movwf	??_detect_color& (0+255),b
  3647  00135A  0EE4               	movlw	228
  3648  00135C                     u5937:
  3649  00135C  2EE8               	decfsz	wreg,f,c
  3650  00135E  D7FE               	bra	u5937
  3651  001360  2F75               	decfsz	??_detect_color& (0+255),f,b
  3652  001362  D7FC               	bra	u5937
  3653  001364  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3654  001366  D7FA               	bra	u5937
  3655  001368  F000               	nop	
  3656  00136A                     
  3657                           ;color.c: 321:     read_color(m);
  3658  00136A  C071  F00C         	movff	detect_color@m,read_color@m
  3659  00136E  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3660  001372  EC9A  F02A         	call	_read_color	;wreg free
  3661  001376                     
  3662                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3663  001376  0100               	movlb	0	; () banked
  3664  001378  EE20 F00C          	lfsr	2,12
  3665  00137C  5173               	movf	detect_color@w& (0+255),w,b
  3666  00137E  26D9               	addwf	fsr2l,f,c
  3667  001380  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3668  001382  22DA               	addwfc	fsr2h,f,c
  3669  001384  CFDE F075          	movff	postinc2,??_detect_color
  3670  001388  CFDD F076          	movff	postdec2,??_detect_color+1
  3671  00138C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3672  001390  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3673  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  3674  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  3675  001398  0E00               	movlw	0
  3676  00139A  ECEE  F01E         	call	___xxtofl
  3677  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3678  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3679  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3680  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3681  0013AE  C071  FFD9         	movff	detect_color@m,fsr2l
  3682  0013B2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3683  0013B6  CFDE F077          	movff	postinc2,??_detect_color+2
  3684  0013BA  CFDD F078          	movff	postdec2,??_detect_color+3
  3685  0013BE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3686  0013C2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3687  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3688  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3689  0013CA  0E00               	movlw	0
  3690  0013CC  ECEE  F01E         	call	___xxtofl
  3691  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3692  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3693  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3694  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3695  0013E0  EC2A  F015         	call	___fldiv	;wreg free
  3696  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  3697  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3698  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3699  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3700  0013F4  0E00               	movlw	0
  3701  0013F6  6E2C               	movwf	___flmul@a^0,c
  3702  0013F8  0E00               	movlw	0
  3703  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  3704  0013FC  0EC8               	movlw	200
  3705  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  3706  001400  0E42               	movlw	66
  3707  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  3708  001404  EC6C  F00F         	call	___flmul	;wreg free
  3709  001408  C028  F08E         	movff	?___flmul,_detect_color$3161
  3710  00140C  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3711  001410  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3712  001414  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3713  001418                     
  3714                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3715  001418  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3716  00141C  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3717  001420  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3718  001424  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3719  001428  ECB8  F02C         	call	_lroundf	;wreg free
  3720  00142C  C066  F085         	movff	?_lroundf,detect_color@BR
  3721  001430  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  3722  001434  0100               	movlb	0	; () banked
  3723  001436  EE20 F00E          	lfsr	2,14
  3724  00143A  5173               	movf	detect_color@w& (0+255),w,b
  3725  00143C  26D9               	addwf	fsr2l,f,c
  3726  00143E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3727  001440  22DA               	addwfc	fsr2h,f,c
  3728  001442  CFDE F075          	movff	postinc2,??_detect_color
  3729  001446  CFDD F076          	movff	postdec2,??_detect_color+1
  3730  00144A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3731  00144E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3732  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  3733  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  3734  001456  0E00               	movlw	0
  3735  001458  ECEE  F01E         	call	___xxtofl
  3736  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3737  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3738  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3739  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3740  00146C  0100               	movlb	0	; () banked
  3741  00146E  EE20 F002          	lfsr	2,2
  3742  001472  5171               	movf	detect_color@m& (0+255),w,b
  3743  001474  26D9               	addwf	fsr2l,f,c
  3744  001476  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3745  001478  22DA               	addwfc	fsr2h,f,c
  3746  00147A  CFDE F077          	movff	postinc2,??_detect_color+2
  3747  00147E  CFDD F078          	movff	postdec2,??_detect_color+3
  3748  001482  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3749  001486  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3750  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3751  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3752  00148E  0E00               	movlw	0
  3753  001490  ECEE  F01E         	call	___xxtofl
  3754  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3755  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3756  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3757  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3758  0014A4  EC2A  F015         	call	___fldiv	;wreg free
  3759  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  3760  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3761  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3762  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3763  0014B8  0E00               	movlw	0
  3764  0014BA  6E2C               	movwf	___flmul@a^0,c
  3765  0014BC  0E00               	movlw	0
  3766  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  3767  0014C0  0EC8               	movlw	200
  3768  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  3769  0014C4  0E42               	movlw	66
  3770  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  3771  0014C8  EC6C  F00F         	call	___flmul	;wreg free
  3772  0014CC  C028  F08E         	movff	?___flmul,_detect_color$3161
  3773  0014D0  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3774  0014D4  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3775  0014D8  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3776  0014DC  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3777  0014E0  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3778  0014E4  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3779  0014E8  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3780  0014EC  ECB8  F02C         	call	_lroundf	;wreg free
  3781  0014F0  C066  F08C         	movff	?_lroundf,detect_color@BG
  3782  0014F4  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  3783  0014F8  0100               	movlb	0	; () banked
  3784  0014FA  EE20 F010          	lfsr	2,16
  3785  0014FE  5173               	movf	detect_color@w& (0+255),w,b
  3786  001500  26D9               	addwf	fsr2l,f,c
  3787  001502  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3788  001504  22DA               	addwfc	fsr2h,f,c
  3789  001506  CFDE F075          	movff	postinc2,??_detect_color
  3790  00150A  CFDD F076          	movff	postdec2,??_detect_color+1
  3791  00150E  C075  F001         	movff	??_detect_color,___xxtofl@val
  3792  001512  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3793  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  3794  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  3795  00151A  0E00               	movlw	0
  3796  00151C  ECEE  F01E         	call	___xxtofl
  3797  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  3798  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3799  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3800  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3801  001530  0100               	movlb	0	; () banked
  3802  001532  EE20 F004          	lfsr	2,4
  3803  001536  5171               	movf	detect_color@m& (0+255),w,b
  3804  001538  26D9               	addwf	fsr2l,f,c
  3805  00153A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3806  00153C  22DA               	addwfc	fsr2h,f,c
  3807  00153E  CFDE F077          	movff	postinc2,??_detect_color+2
  3808  001542  CFDD F078          	movff	postdec2,??_detect_color+3
  3809  001546  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3810  00154A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3811  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3812  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  3813  001552  0E00               	movlw	0
  3814  001554  ECEE  F01E         	call	___xxtofl
  3815  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3816  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3817  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3818  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3819  001568  EC2A  F015         	call	___fldiv	;wreg free
  3820  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  3821  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3822  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3823  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3824  00157C  0E00               	movlw	0
  3825  00157E  6E2C               	movwf	___flmul@a^0,c
  3826  001580  0E00               	movlw	0
  3827  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  3828  001584  0EC8               	movlw	200
  3829  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  3830  001588  0E42               	movlw	66
  3831  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  3832  00158C  EC6C  F00F         	call	___flmul	;wreg free
  3833  001590  C028  F08E         	movff	?___flmul,_detect_color$3161
  3834  001594  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3835  001598  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3836  00159C  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3837  0015A0  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3838  0015A4  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3839  0015A8  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3840  0015AC  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3841  0015B0  ECB8  F02C         	call	_lroundf	;wreg free
  3842  0015B4  C066  F07F         	movff	?_lroundf,detect_color@BB
  3843  0015B8  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  3844  0015BC                     
  3845                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3846  0015BC  0100               	movlb	0	; () banked
  3847  0015BE  EE20 F01A          	lfsr	2,26
  3848  0015C2  5173               	movf	detect_color@w& (0+255),w,b
  3849  0015C4  26D9               	addwf	fsr2l,f,c
  3850  0015C6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3851  0015C8  22DA               	addwfc	fsr2h,f,c
  3852  0015CA  CFDE F075          	movff	postinc2,??_detect_color
  3853  0015CE  CFDD F076          	movff	postdec2,??_detect_color+1
  3854  0015D2  C075  F001         	movff	??_detect_color,___xxtofl@val
  3855  0015D6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3856  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  3857  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  3858  0015DE  0E00               	movlw	0
  3859  0015E0  ECEE  F01E         	call	___xxtofl
  3860  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  3861  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3862  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3863  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3864  0015F4  0100               	movlb	0	; () banked
  3865  0015F6  EE20 F006          	lfsr	2,6
  3866  0015FA  5171               	movf	detect_color@m& (0+255),w,b
  3867  0015FC  26D9               	addwf	fsr2l,f,c
  3868  0015FE  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3869  001600  22DA               	addwfc	fsr2h,f,c
  3870  001602  CFDE F077          	movff	postinc2,??_detect_color+2
  3871  001606  CFDD F078          	movff	postdec2,??_detect_color+3
  3872  00160A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3873  00160E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3874  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  3875  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  3876  001616  0E00               	movlw	0
  3877  001618  ECEE  F01E         	call	___xxtofl
  3878  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3879  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3880  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3881  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3882  00162C  EC2A  F015         	call	___fldiv	;wreg free
  3883  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  3884  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3885  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3886  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3887  001640  0E00               	movlw	0
  3888  001642  6E2C               	movwf	___flmul@a^0,c
  3889  001644  0E00               	movlw	0
  3890  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  3891  001648  0EC8               	movlw	200
  3892  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  3893  00164C  0E42               	movlw	66
  3894  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  3895  001650  EC6C  F00F         	call	___flmul	;wreg free
  3896  001654  C028  F08E         	movff	?___flmul,_detect_color$3161
  3897  001658  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3898  00165C  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3899  001660  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3900  001664  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3901  001668  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3902  00166C  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3903  001670  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3904  001674  ECB8  F02C         	call	_lroundf	;wreg free
  3905  001678                     
  3906                           ;color.c: 329:     if (compare(0, RR, 45)){
  3907  001678  0E00               	movlw	0
  3908  00167A  0100               	movlb	0	; () banked
  3909  00167C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3910  00167E  0E00               	movlw	0
  3911  001680  6F6A               	movwf	compare@lower& (0+255),b
  3912  001682  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3913  001686  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3914  00168A  0E00               	movlw	0
  3915  00168C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3916  00168E  0E2D               	movlw	45
  3917  001690  6F6E               	movwf	compare@upper& (0+255),b
  3918  001692  EC9B  F02C         	call	_compare	;wreg free
  3919  001696  0900               	iorlw	0
  3920  001698  B4D8               	btfsc	status,2,c
  3921  00169A  EF51  F00B         	goto	u5171
  3922  00169E  EF53  F00B         	goto	u5170
  3923  0016A2                     u5171:
  3924  0016A2  EFC4  F00B         	goto	l4926
  3925  0016A6                     u5170:
  3926  0016A6                     
  3927                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3928  0016A6  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  3929  0016AA  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3930  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3931  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3932  0016B2  0E00               	movlw	0
  3933  0016B4  ECEE  F01E         	call	___xxtofl
  3934  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  3935  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3936  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3937  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3938  0016C8  0100               	movlb	0	; () banked
  3939  0016CA  518C               	movf	detect_color@BG& (0+255),w,b
  3940  0016CC  2587               	addwf	detect_color@GG& (0+255),w,b
  3941  0016CE  6F75               	movwf	??_detect_color& (0+255),b
  3942  0016D0  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3943  0016D2  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3944  0016D4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3945  0016D6  C075  F001         	movff	??_detect_color,___xxtofl@val
  3946  0016DA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3947  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3948  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3949  0016E2  0E00               	movlw	0
  3950  0016E4  ECEE  F01E         	call	___xxtofl
  3951  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3952  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3953  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3954  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3955  0016F8  EC2A  F015         	call	___fldiv	;wreg free
  3956  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3957  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3958  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3959  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3960  00170C  0E00               	movlw	0
  3961  00170E  6E2C               	movwf	___flmul@a^0,c
  3962  001710  0E00               	movlw	0
  3963  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  3964  001714  0E48               	movlw	72
  3965  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  3966  001718  0E43               	movlw	67
  3967  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  3968  00171C  EC6C  F00F         	call	___flmul	;wreg free
  3969  001720  C028  F08E         	movff	?___flmul,_detect_color$3161
  3970  001724  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  3971  001728  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  3972  00172C  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  3973                           
  3974                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3975  001730  0E00               	movlw	0
  3976  001732  0100               	movlb	0	; () banked
  3977  001734  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3978  001736  0E00               	movlw	0
  3979  001738  6F6A               	movwf	compare@lower& (0+255),b
  3980  00173A  C08E  F066         	movff	_detect_color$3161,lroundf@x
  3981  00173E  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  3982  001742  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  3983  001746  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  3984  00174A  ECB8  F02C         	call	_lroundf	;wreg free
  3985  00174E  C066  F06C         	movff	?_lroundf,compare@value2compare
  3986  001752  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3987  001756  0E01               	movlw	1
  3988  001758  0100               	movlb	0	; () banked
  3989  00175A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3990  00175C  0ED3               	movlw	211
  3991  00175E  6F6E               	movwf	compare@upper& (0+255),b
  3992  001760  EC9B  F02C         	call	_compare	;wreg free
  3993  001764  0900               	iorlw	0
  3994  001766  B4D8               	btfsc	status,2,c
  3995  001768  EFB8  F00B         	goto	u5181
  3996  00176C  EFBA  F00B         	goto	u5180
  3997  001770                     u5181:
  3998  001770  EFBF  F00B         	goto	l4924
  3999  001774                     u5180:
  4000  001774  0E03               	movlw	3
  4001  001776  0100               	movlb	0	; () banked
  4002  001778  6F89               	movwf	detect_color@color& (0+255),b
  4003  00177A  EF7F  F00C         	goto	l4952
  4004  00177E                     l4924:
  4005  00177E  0E02               	movlw	2
  4006  001780  0100               	movlb	0	; () banked
  4007  001782  6F89               	movwf	detect_color@color& (0+255),b
  4008  001784  EF7F  F00C         	goto	l4952
  4009  001788                     l4926:
  4010                           
  4011                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  4012  001788  0100               	movlb	0	; () banked
  4013  00178A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4014  00178C  E107               	bnz	u5191
  4015  00178E  0E1F               	movlw	31
  4016  001790  5D87               	subwf	detect_color@GG& (0+255),w,b
  4017  001792  B0D8               	btfsc	status,0,c
  4018  001794  EFCE  F00B         	goto	u5191
  4019  001798  EFD0  F00B         	goto	u5190
  4020  00179C                     u5191:
  4021  00179C  EF45  F00C         	goto	l4936
  4022  0017A0                     u5190:
  4023  0017A0                     
  4024                           ; BSR set to: 0
  4025  0017A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4026  0017A2  E107               	bnz	u5201
  4027  0017A4  0E1F               	movlw	31
  4028  0017A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4029  0017A8  B0D8               	btfsc	status,0,c
  4030  0017AA  EFD9  F00B         	goto	u5201
  4031  0017AE  EFDB  F00B         	goto	u5200
  4032  0017B2                     u5201:
  4033  0017B2  EF45  F00C         	goto	l4936
  4034  0017B6                     u5200:
  4035  0017B6                     
  4036                           ; BSR set to: 0
  4037                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4038  0017B6  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  4039  0017BA  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4040  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4041  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4042  0017C2  0E00               	movlw	0
  4043  0017C4  ECEE  F01E         	call	___xxtofl
  4044  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4045  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4046  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4047  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4048  0017D8  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  4049  0017DC  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4050  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  4051  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  4052  0017E4  0E00               	movlw	0
  4053  0017E6  ECEE  F01E         	call	___xxtofl
  4054  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4055  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4056  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4057  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4058  0017FA  EC2A  F015         	call	___fldiv	;wreg free
  4059  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  4060  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4061  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4062  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4063  00180E  0E00               	movlw	0
  4064  001810  6E2C               	movwf	___flmul@a^0,c
  4065  001812  0E00               	movlw	0
  4066  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  4067  001816  0EFA               	movlw	250
  4068  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  4069  00181A  0E43               	movlw	67
  4070  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  4071  00181E  EC6C  F00F         	call	___flmul	;wreg free
  4072  001822  C028  F08E         	movff	?___flmul,_detect_color$3161
  4073  001826  C029  F08F         	movff	?___flmul+1,_detect_color$3161+1
  4074  00182A  C02A  F090         	movff	?___flmul+2,_detect_color$3161+2
  4075  00182E  C02B  F091         	movff	?___flmul+3,_detect_color$3161+3
  4076                           
  4077                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4078  001832  0E00               	movlw	0
  4079  001834  0100               	movlb	0	; () banked
  4080  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4081  001838  0E00               	movlw	0
  4082  00183A  6F6A               	movwf	compare@lower& (0+255),b
  4083  00183C  C08E  F066         	movff	_detect_color$3161,lroundf@x
  4084  001840  C08F  F067         	movff	_detect_color$3161+1,lroundf@x+1
  4085  001844  C090  F068         	movff	_detect_color$3161+2,lroundf@x+2
  4086  001848  C091  F069         	movff	_detect_color$3161+3,lroundf@x+3
  4087  00184C  ECB8  F02C         	call	_lroundf	;wreg free
  4088  001850  C066  F06C         	movff	?_lroundf,compare@value2compare
  4089  001854  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4090  001858  0E00               	movlw	0
  4091  00185A  0100               	movlb	0	; () banked
  4092  00185C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4093  00185E  0E96               	movlw	150
  4094  001860  6F6E               	movwf	compare@upper& (0+255),b
  4095  001862  EC9B  F02C         	call	_compare	;wreg free
  4096  001866  0900               	iorlw	0
  4097  001868  B4D8               	btfsc	status,2,c
  4098  00186A  EF39  F00C         	goto	u5211
  4099  00186E  EF3B  F00C         	goto	u5210
  4100  001872                     u5211:
  4101  001872  EF40  F00C         	goto	l4934
  4102  001876                     u5210:
  4103  001876  0E01               	movlw	1
  4104  001878  0100               	movlb	0	; () banked
  4105  00187A  6F89               	movwf	detect_color@color& (0+255),b
  4106  00187C  EF7F  F00C         	goto	l4952
  4107  001880                     l4934:
  4108  001880  0E06               	movlw	6
  4109  001882  0100               	movlb	0	; () banked
  4110  001884  6F89               	movwf	detect_color@color& (0+255),b
  4111  001886  EF7F  F00C         	goto	l4952
  4112  00188A                     l4936:
  4113                           
  4114                           ; BSR set to: 0
  4115  00188A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4116  00188C  E109               	bnz	u5220
  4117  00188E  0E1F               	movlw	31
  4118  001890  5D87               	subwf	detect_color@GG& (0+255),w,b
  4119  001892  A0D8               	btfss	status,0,c
  4120  001894  EF4E  F00C         	goto	u5221
  4121  001898  EF50  F00C         	goto	u5220
  4122  00189C                     u5221:
  4123  00189C  EF7D  F00C         	goto	l4950
  4124  0018A0                     u5220:
  4125  0018A0                     
  4126                           ; BSR set to: 0
  4127  0018A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4128  0018A2  E109               	bnz	u5230
  4129  0018A4  0E1F               	movlw	31
  4130  0018A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4131  0018A8  A0D8               	btfss	status,0,c
  4132  0018AA  EF59  F00C         	goto	u5231
  4133  0018AE  EF5B  F00C         	goto	u5230
  4134  0018B2                     u5231:
  4135  0018B2  EF7D  F00C         	goto	l4950
  4136  0018B6                     u5230:
  4137  0018B6                     
  4138                           ; BSR set to: 0
  4139                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  4140  0018B6  5185               	movf	detect_color@BR& (0+255),w,b
  4141  0018B8  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4142  0018BA  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  4143  0018BC  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  4144  0018BE  A0D8               	btfss	status,0,c
  4145  0018C0  EF64  F00C         	goto	u5241
  4146  0018C4  EF66  F00C         	goto	u5240
  4147  0018C8                     u5241:
  4148  0018C8  EF6A  F00C         	goto	l4944
  4149  0018CC                     u5240:
  4150  0018CC                     
  4151                           ; BSR set to: 0
  4152  0018CC  0E07               	movlw	7
  4153  0018CE  6F89               	movwf	detect_color@color& (0+255),b
  4154  0018D0  EF7F  F00C         	goto	l4952
  4155  0018D4                     l4944:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;color.c: 343:                 if (BG < 48){color = 4;}
  4159  0018D4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  4160  0018D6  E107               	bnz	u5251
  4161  0018D8  0E30               	movlw	48
  4162  0018DA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4163  0018DC  B0D8               	btfsc	status,0,c
  4164  0018DE  EF73  F00C         	goto	u5251
  4165  0018E2  EF75  F00C         	goto	u5250
  4166  0018E6                     u5251:
  4167  0018E6  EF79  F00C         	goto	l4948
  4168  0018EA                     u5250:
  4169  0018EA                     
  4170                           ; BSR set to: 0
  4171  0018EA  0E04               	movlw	4
  4172  0018EC  6F89               	movwf	detect_color@color& (0+255),b
  4173  0018EE  EF7F  F00C         	goto	l4952
  4174  0018F2                     l4948:
  4175                           
  4176                           ; BSR set to: 0
  4177  0018F2  0E05               	movlw	5
  4178  0018F4  6F89               	movwf	detect_color@color& (0+255),b
  4179  0018F6  EF7F  F00C         	goto	l4952
  4180  0018FA                     l4950:
  4181                           
  4182                           ; BSR set to: 0
  4183  0018FA  0E00               	movlw	0
  4184  0018FC  6F89               	movwf	detect_color@color& (0+255),b
  4185  0018FE                     l4952:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;color.c: 350:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4189  0018FE  0E00               	movlw	0
  4190  001900  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4191  001902  0E5A               	movlw	90
  4192  001904  6F6A               	movwf	compare@lower& (0+255),b
  4193  001906  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4194  00190A  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4195  00190E  90D8               	bcf	status,0,c
  4196  001910  358A               	rlcf	detect_color@RR& (0+255),w,b
  4197  001912  6F6E               	movwf	compare@upper& (0+255),b
  4198  001914  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4199  001916  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4200  001918  EC9B  F02C         	call	_compare	;wreg free
  4201  00191C  0900               	iorlw	0
  4202  00191E  B4D8               	btfsc	status,2,c
  4203  001920  EF94  F00C         	goto	u5261
  4204  001924  EF96  F00C         	goto	u5260
  4205  001928                     u5261:
  4206  001928  EFC9  F00C         	goto	l4960
  4207  00192C                     u5260:
  4208  00192C  0E00               	movlw	0
  4209  00192E  0100               	movlb	0	; () banked
  4210  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4211  001932  0E5A               	movlw	90
  4212  001934  6F6A               	movwf	compare@lower& (0+255),b
  4213  001936  C081  F06C         	movff	detect_color@RB,compare@value2compare
  4214  00193A  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4215  00193E  90D8               	bcf	status,0,c
  4216  001940  3581               	rlcf	detect_color@RB& (0+255),w,b
  4217  001942  6F6E               	movwf	compare@upper& (0+255),b
  4218  001944  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4219  001946  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4220  001948  EC9B  F02C         	call	_compare	;wreg free
  4221  00194C  0900               	iorlw	0
  4222  00194E  B4D8               	btfsc	status,2,c
  4223  001950  EFAC  F00C         	goto	u5271
  4224  001954  EFAE  F00C         	goto	u5270
  4225  001958                     u5271:
  4226  001958  EFC9  F00C         	goto	l4960
  4227  00195C                     u5270:
  4228  00195C  0E00               	movlw	0
  4229  00195E  0100               	movlb	0	; () banked
  4230  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4231  001962  0E5A               	movlw	90
  4232  001964  6F6A               	movwf	compare@lower& (0+255),b
  4233  001966  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  4234  00196A  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4235  00196E  90D8               	bcf	status,0,c
  4236  001970  358C               	rlcf	detect_color@BG& (0+255),w,b
  4237  001972  6F6E               	movwf	compare@upper& (0+255),b
  4238  001974  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4239  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4240  001978  EC9B  F02C         	call	_compare	;wreg free
  4241  00197C  0900               	iorlw	0
  4242  00197E  B4D8               	btfsc	status,2,c
  4243  001980  EFC4  F00C         	goto	u5281
  4244  001984  EFC6  F00C         	goto	u5280
  4245  001988                     u5281:
  4246  001988  EFC9  F00C         	goto	l4960
  4247  00198C                     u5280:
  4248  00198C  0E08               	movlw	8
  4249  00198E  0100               	movlb	0	; () banked
  4250  001990  6F89               	movwf	detect_color@color& (0+255),b
  4251  001992                     l4960:
  4252                           
  4253                           ;color.c: 351:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  4254  001992  0E00               	movlw	0
  4255  001994  0100               	movlb	0	; () banked
  4256  001996  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4257  001998  0E00               	movlw	0
  4258  00199A  6F6A               	movwf	compare@lower& (0+255),b
  4259  00199C  C085  F06C         	movff	detect_color@BR,compare@value2compare
  4260  0019A0  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4261  0019A4  0E00               	movlw	0
  4262  0019A6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4263  0019A8  0E19               	movlw	25
  4264  0019AA  6F6E               	movwf	compare@upper& (0+255),b
  4265  0019AC  EC9B  F02C         	call	_compare	;wreg free
  4266  0019B0  0900               	iorlw	0
  4267  0019B2  B4D8               	btfsc	status,2,c
  4268  0019B4  EFDE  F00C         	goto	u5291
  4269  0019B8  EFE0  F00C         	goto	u5290
  4270  0019BC                     u5291:
  4271  0019BC  EFFA  F00C         	goto	l4966
  4272  0019C0                     u5290:
  4273  0019C0  0E00               	movlw	0
  4274  0019C2  0100               	movlb	0	; () banked
  4275  0019C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4276  0019C6  0E00               	movlw	0
  4277  0019C8  6F6A               	movwf	compare@lower& (0+255),b
  4278  0019CA  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4279  0019CE  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4280  0019D2  0E00               	movlw	0
  4281  0019D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4282  0019D6  0E1E               	movlw	30
  4283  0019D8  6F6E               	movwf	compare@upper& (0+255),b
  4284  0019DA  EC9B  F02C         	call	_compare	;wreg free
  4285  0019DE  0900               	iorlw	0
  4286  0019E0  B4D8               	btfsc	status,2,c
  4287  0019E2  EFF5  F00C         	goto	u5301
  4288  0019E6  EFF7  F00C         	goto	u5300
  4289  0019EA                     u5301:
  4290  0019EA  EFFA  F00C         	goto	l4966
  4291  0019EE                     u5300:
  4292  0019EE  0E00               	movlw	0
  4293  0019F0  0100               	movlb	0	; () banked
  4294  0019F2  6F89               	movwf	detect_color@color& (0+255),b
  4295  0019F4                     l4966:
  4296                           
  4297                           ;color.c: 353:     if (color == 8) {toggle_light(2,1);}
  4298  0019F4  0E08               	movlw	8
  4299  0019F6  0100               	movlb	0	; () banked
  4300  0019F8  1989               	xorwf	detect_color@color& (0+255),w,b
  4301  0019FA  A4D8               	btfss	status,2,c
  4302  0019FC  EF02  F00D         	goto	u5311
  4303  001A00  EF04  F00D         	goto	u5310
  4304  001A04                     u5311:
  4305  001A04  EF09  F00D         	goto	l4970
  4306  001A08                     u5310:
  4307  001A08                     
  4308                           ; BSR set to: 0
  4309  001A08  0E01               	movlw	1
  4310  001A0A  6E01               	movwf	toggle_light@toggletime^0,c
  4311  001A0C  0E02               	movlw	2
  4312  001A0E  ECE1  F019         	call	_toggle_light
  4313  001A12                     l4970:
  4314                           
  4315                           ;color.c: 354:     return color;
  4316  001A12  0100               	movlb	0	; () banked
  4317  001A14  5189               	movf	detect_color@color& (0+255),w,b
  4318  001A16                     
  4319                           ; BSR set to: 0
  4320  001A16  0012               	return		;funcret
  4321  001A18                     __end_of_detect_color:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function _compare *****************
  4325 ;; Defined at:
  4326 ;;		line 357 in file "color.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  lower           2   10[BANK0 ] unsigned int 
  4329 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4330 ;;  upper           2   14[BANK0 ] unsigned int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  result          1   16[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      unsigned char 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4342 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;Total ram usage:        7 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_detect_color
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text7
  4357  005936                     __ptext7:
  4358                           	callstack 0
  4359  005936                     _compare:
  4360                           	callstack 27
  4361  005936                     
  4362                           ;color.c: 357: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 358: {;color.c: 359:     unsigned char result = 0;
  4363  005936  0E00               	movlw	0
  4364  005938  0100               	movlb	0	; () banked
  4365  00593A  6F70               	movwf	compare@result& (0+255),b
  4366  00593C                     
  4367                           ; BSR set to: 0
  4368                           ;color.c: 360:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4369  00593C  516C               	movf	compare@value2compare& (0+255),w,b
  4370  00593E  5D6A               	subwf	compare@lower& (0+255),w,b
  4371  005940  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4372  005942  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4373  005944  B0D8               	btfsc	status,0,c
  4374  005946  EFA7  F02C         	goto	u4731
  4375  00594A  EFA9  F02C         	goto	u4730
  4376  00594E                     u4731:
  4377  00594E  EFB6  F02C         	goto	l148
  4378  005952                     u4730:
  4379  005952                     
  4380                           ; BSR set to: 0
  4381  005952  516C               	movf	compare@value2compare& (0+255),w,b
  4382  005954  5D6E               	subwf	compare@upper& (0+255),w,b
  4383  005956  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4384  005958  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4385  00595A  A0D8               	btfss	status,0,c
  4386  00595C  EFB2  F02C         	goto	u4741
  4387  005960  EFB4  F02C         	goto	u4740
  4388  005964                     u4741:
  4389  005964  EFB6  F02C         	goto	l148
  4390  005968                     u4740:
  4391  005968                     
  4392                           ; BSR set to: 0
  4393  005968  0E01               	movlw	1
  4394  00596A  6F70               	movwf	compare@result& (0+255),b
  4395  00596C                     l148:
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;color.c: 361:     return result;
  4399  00596C  5170               	movf	compare@result& (0+255),w,b
  4400  00596E                     
  4401                           ; BSR set to: 0
  4402  00596E  0012               	return		;funcret
  4403  005970                     __end_of_compare:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _color_data_collection *****************
  4407 ;; Defined at:
  4408 ;;		line 200 in file "color.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4411 ;;		 -> main@rgb(8), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  x               2  132[BANK0 ] int 
  4414 ;;  k               2  130[BANK0 ] int 
  4415 ;;  j               2  128[BANK0 ] int 
  4416 ;;  i               2  126[BANK0 ] int 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;Total ram usage:       12 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 10
  4433 ;; This function calls:
  4434 ;;		_LED_B
  4435 ;;		_LED_C
  4436 ;;		_LED_G
  4437 ;;		_LED_R
  4438 ;;		_color_display
  4439 ;;		_color_predict
  4440 ;;		_read_color
  4441 ;; This function is called by:
  4442 ;;		_test_function
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text8
  4447  004140                     __ptext8:
  4448                           	callstack 0
  4449  004140                     _color_data_collection:
  4450                           	callstack 19
  4451  004140                     
  4452                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  4453  004140  0E00               	movlw	0
  4454  004142  0100               	movlb	0	; () banked
  4455  004144  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4456  004146  0E00               	movlw	0
  4457  004148  6FDE               	movwf	color_data_collection@i& (0+255),b
  4458  00414A  0E00               	movlw	0
  4459  00414C  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4460  00414E  0E00               	movlw	0
  4461  004150  6FE2               	movwf	color_data_collection@k& (0+255),b
  4462  004152  0E00               	movlw	0
  4463  004154  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4464  004156  0E00               	movlw	0
  4465  004158  6FE4               	movwf	color_data_collection@x& (0+255),b
  4466                           
  4467                           ;color.c: 203:     for (i = 0; i < 1; ++i){
  4468  00415A  0E00               	movlw	0
  4469  00415C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4470  00415E  0E00               	movlw	0
  4471  004160  6FDE               	movwf	color_data_collection@i& (0+255),b
  4472  004162                     l4732:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;color.c: 204:         LED_C();
  4476  004162  ECD1  F02D         	call	_LED_C	;wreg free
  4477  004166                     
  4478                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4479  004166  0E09               	movlw	9
  4480  004168  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4481  00416A  0E1E               	movlw	30
  4482  00416C  6E5C               	movwf	??_color_data_collection^0,c
  4483  00416E  0EE4               	movlw	228
  4484  004170                     u5947:
  4485  004170  2EE8               	decfsz	wreg,f,c
  4486  004172  D7FE               	bra	u5947
  4487  004174  2E5C               	decfsz	??_color_data_collection^0,f,c
  4488  004176  D7FC               	bra	u5947
  4489  004178  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4490  00417A  D7FA               	bra	u5947
  4491  00417C  D000               	nop2	
  4492  00417E                     
  4493                           ;color.c: 206:         read_color(m);
  4494  00417E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4495  004182  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4496  004186  EC9A  F02A         	call	_read_color	;wreg free
  4497  00418A                     
  4498                           ;color.c: 207:         color_display(m);
  4499  00418A  C05A  F058         	movff	color_data_collection@m,color_display@m
  4500  00418E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4501  004192  EC31  F02A         	call	_color_display	;wreg free
  4502  004196                     
  4503                           ;color.c: 208:     }
  4504  004196  0100               	movlb	0	; () banked
  4505  004198  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4506  00419A  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4507  00419C                     
  4508                           ; BSR set to: 0
  4509  00419C  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4510  00419E  EFD9  F020         	goto	u5131
  4511  0041A2  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4512  0041A4  E108               	bnz	u5130
  4513  0041A6  05DE               	decf	color_data_collection@i& (0+255),w,b
  4514  0041A8  A0D8               	btfss	status,0,c
  4515  0041AA  EFD9  F020         	goto	u5131
  4516  0041AE  EFDB  F020         	goto	u5130
  4517  0041B2                     u5131:
  4518  0041B2  EFB1  F020         	goto	l4732
  4519  0041B6                     u5130:
  4520  0041B6                     
  4521                           ; BSR set to: 0
  4522                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  4523  0041B6  0E00               	movlw	0
  4524  0041B8  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  4525  0041BA  0E00               	movlw	0
  4526  0041BC  6FE0               	movwf	color_data_collection@j& (0+255),b
  4527  0041BE                     l4750:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;color.c: 211:         LED_R();
  4531  0041BE  EC91  F02D         	call	_LED_R	;wreg free
  4532  0041C2                     
  4533                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4534  0041C2  0E09               	movlw	9
  4535  0041C4  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4536  0041C6  0E1E               	movlw	30
  4537  0041C8  6E5C               	movwf	??_color_data_collection^0,c
  4538  0041CA  0EE4               	movlw	228
  4539  0041CC                     u5957:
  4540  0041CC  2EE8               	decfsz	wreg,f,c
  4541  0041CE  D7FE               	bra	u5957
  4542  0041D0  2E5C               	decfsz	??_color_data_collection^0,f,c
  4543  0041D2  D7FC               	bra	u5957
  4544  0041D4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4545  0041D6  D7FA               	bra	u5957
  4546  0041D8  D000               	nop2	
  4547  0041DA                     
  4548                           ;color.c: 213:         read_color(m);
  4549  0041DA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4550  0041DE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4551  0041E2  EC9A  F02A         	call	_read_color	;wreg free
  4552  0041E6                     
  4553                           ;color.c: 214:         color_display(m);
  4554  0041E6  C05A  F058         	movff	color_data_collection@m,color_display@m
  4555  0041EA  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4556  0041EE  EC31  F02A         	call	_color_display	;wreg free
  4557  0041F2                     
  4558                           ;color.c: 215:     }
  4559  0041F2  0100               	movlb	0	; () banked
  4560  0041F4  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  4561  0041F6  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  4562  0041F8                     
  4563                           ; BSR set to: 0
  4564  0041F8  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  4565  0041FA  EF07  F021         	goto	u5141
  4566  0041FE  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  4567  004200  E108               	bnz	u5140
  4568  004202  05E0               	decf	color_data_collection@j& (0+255),w,b
  4569  004204  A0D8               	btfss	status,0,c
  4570  004206  EF07  F021         	goto	u5141
  4571  00420A  EF09  F021         	goto	u5140
  4572  00420E                     u5141:
  4573  00420E  EFDF  F020         	goto	l4750
  4574  004212                     u5140:
  4575  004212                     
  4576                           ; BSR set to: 0
  4577                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  4578  004212  0E00               	movlw	0
  4579  004214  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4580  004216  0E00               	movlw	0
  4581  004218  6FE2               	movwf	color_data_collection@k& (0+255),b
  4582  00421A                     l4768:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;color.c: 218:         LED_G();
  4586  00421A  ECB1  F02D         	call	_LED_G	;wreg free
  4587  00421E                     
  4588                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4589  00421E  0E09               	movlw	9
  4590  004220  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4591  004222  0E1E               	movlw	30
  4592  004224  6E5C               	movwf	??_color_data_collection^0,c
  4593  004226  0EE4               	movlw	228
  4594  004228                     u5967:
  4595  004228  2EE8               	decfsz	wreg,f,c
  4596  00422A  D7FE               	bra	u5967
  4597  00422C  2E5C               	decfsz	??_color_data_collection^0,f,c
  4598  00422E  D7FC               	bra	u5967
  4599  004230  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4600  004232  D7FA               	bra	u5967
  4601  004234  D000               	nop2	
  4602  004236                     
  4603                           ;color.c: 220:         read_color(m);
  4604  004236  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4605  00423A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4606  00423E  EC9A  F02A         	call	_read_color	;wreg free
  4607  004242                     
  4608                           ;color.c: 221:         color_display(m);
  4609  004242  C05A  F058         	movff	color_data_collection@m,color_display@m
  4610  004246  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4611  00424A  EC31  F02A         	call	_color_display	;wreg free
  4612  00424E                     
  4613                           ;color.c: 222:     }
  4614  00424E  0100               	movlb	0	; () banked
  4615  004250  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  4616  004252  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  4617  004254                     
  4618                           ; BSR set to: 0
  4619  004254  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  4620  004256  EF35  F021         	goto	u5151
  4621  00425A  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  4622  00425C  E108               	bnz	u5150
  4623  00425E  05E2               	decf	color_data_collection@k& (0+255),w,b
  4624  004260  A0D8               	btfss	status,0,c
  4625  004262  EF35  F021         	goto	u5151
  4626  004266  EF37  F021         	goto	u5150
  4627  00426A                     u5151:
  4628  00426A  EF0D  F021         	goto	l4768
  4629  00426E                     u5150:
  4630  00426E                     
  4631                           ; BSR set to: 0
  4632                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  4633  00426E  0E00               	movlw	0
  4634  004270  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4635  004272  0E00               	movlw	0
  4636  004274  6FE4               	movwf	color_data_collection@x& (0+255),b
  4637  004276                     l4786:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;color.c: 225:         LED_B();
  4641  004276  ECC1  F02D         	call	_LED_B	;wreg free
  4642  00427A                     
  4643                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4644  00427A  0E09               	movlw	9
  4645  00427C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4646  00427E  0E1E               	movlw	30
  4647  004280  6E5C               	movwf	??_color_data_collection^0,c
  4648  004282  0EE4               	movlw	228
  4649  004284                     u5977:
  4650  004284  2EE8               	decfsz	wreg,f,c
  4651  004286  D7FE               	bra	u5977
  4652  004288  2E5C               	decfsz	??_color_data_collection^0,f,c
  4653  00428A  D7FC               	bra	u5977
  4654  00428C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4655  00428E  D7FA               	bra	u5977
  4656  004290  D000               	nop2	
  4657  004292                     
  4658                           ;color.c: 227:         read_color(m);
  4659  004292  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4660  004296  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4661  00429A  EC9A  F02A         	call	_read_color	;wreg free
  4662  00429E                     
  4663                           ;color.c: 228:         color_display(m);
  4664  00429E  C05A  F058         	movff	color_data_collection@m,color_display@m
  4665  0042A2  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4666  0042A6  EC31  F02A         	call	_color_display	;wreg free
  4667  0042AA                     
  4668                           ;color.c: 229:     }
  4669  0042AA  0100               	movlb	0	; () banked
  4670  0042AC  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  4671  0042AE  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  4672  0042B0                     
  4673                           ; BSR set to: 0
  4674  0042B0  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  4675  0042B2  EF63  F021         	goto	u5161
  4676  0042B6  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  4677  0042B8  E108               	bnz	u5160
  4678  0042BA  05E4               	decf	color_data_collection@x& (0+255),w,b
  4679  0042BC  A0D8               	btfss	status,0,c
  4680  0042BE  EF63  F021         	goto	u5161
  4681  0042C2  EF65  F021         	goto	u5160
  4682  0042C6                     u5161:
  4683  0042C6  EF3B  F021         	goto	l4786
  4684  0042CA                     u5160:
  4685  0042CA                     
  4686                           ; BSR set to: 0
  4687                           ;color.c: 230:     color_predict(1);
  4688  0042CA  0E01               	movlw	1
  4689  0042CC  EC3E  F02D         	call	_color_predict
  4690  0042D0                     
  4691                           ;color.c: 231:     LED_C();
  4692  0042D0  ECD1  F02D         	call	_LED_C	;wreg free
  4693  0042D4  0012               	return		;funcret
  4694  0042D6                     __end_of_color_data_collection:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _read_color *****************
  4698 ;; Defined at:
  4699 ;;		line 147 in file "color.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4702 ;;		 -> main@rgb(8), 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;Total ram usage:        2 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; Hardware stack levels required when called: 4
  4721 ;; This function calls:
  4722 ;;		_color_read_Blue
  4723 ;;		_color_read_Clear
  4724 ;;		_color_read_Green
  4725 ;;		_color_read_Red
  4726 ;; This function is called by:
  4727 ;;		_color_data_collection
  4728 ;;		_detect_color
  4729 ;;		_test_function
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text9
  4734  005534                     __ptext9:
  4735                           	callstack 0
  4736  005534                     _read_color:
  4737                           	callstack 24
  4738  005534                     
  4739                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  4740  005534  ECF2  F02A         	call	_color_read_Red	;wreg free
  4741  005538  C00C  FFD9         	movff	read_color@m,fsr2l
  4742  00553C  C00D  FFDA         	movff	read_color@m+1,fsr2h
  4743  005540  C005  FFDE         	movff	?_color_read_Red,postinc2
  4744  005544  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4745                           
  4746                           ;color.c: 150:     m->B = color_read_Blue();
  4747  005548  EC42  F02B         	call	_color_read_Blue	;wreg free
  4748  00554C  EE20 F004          	lfsr	2,4
  4749  005550  500C               	movf	read_color@m^0,w,c
  4750  005552  26D9               	addwf	fsr2l,f,c
  4751  005554  500D               	movf	(read_color@m+1)^0,w,c
  4752  005556  22DA               	addwfc	fsr2h,f,c
  4753  005558  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4754  00555C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4755                           
  4756                           ;color.c: 151:     m->G = color_read_Green();
  4757  005560  EC1A  F02B         	call	_color_read_Green	;wreg free
  4758  005564  EE20 F002          	lfsr	2,2
  4759  005568  500C               	movf	read_color@m^0,w,c
  4760  00556A  26D9               	addwf	fsr2l,f,c
  4761  00556C  500D               	movf	(read_color@m+1)^0,w,c
  4762  00556E  22DA               	addwfc	fsr2h,f,c
  4763  005570  C005  FFDE         	movff	?_color_read_Green,postinc2
  4764  005574  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4765                           
  4766                           ;color.c: 152:     m->C = color_read_Clear();
  4767  005578  EC6A  F02B         	call	_color_read_Clear	;wreg free
  4768  00557C  EE20 F006          	lfsr	2,6
  4769  005580  500C               	movf	read_color@m^0,w,c
  4770  005582  26D9               	addwf	fsr2l,f,c
  4771  005584  500D               	movf	(read_color@m+1)^0,w,c
  4772  005586  22DA               	addwfc	fsr2h,f,c
  4773  005588  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4774  00558C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4775  005590  0012               	return		;funcret
  4776  005592                     __end_of_read_color:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _color_predict *****************
  4780 ;; Defined at:
  4781 ;;		line 250 in file "color.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  color           1    wreg     unsigned char 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  color           1  125[BANK0 ] unsigned char 
  4786 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;Total ram usage:      101 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 9
  4803 ;; This function calls:
  4804 ;;		_sendStringSerial4
  4805 ;;		_sprintf
  4806 ;; This function is called by:
  4807 ;;		_color_data_collection
  4808 ;;		_main
  4809 ;;		_test_function
  4810 ;;		_distance_memory
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text10
  4815  005A7C                     __ptext10:
  4816                           	callstack 0
  4817  005A7C                     _color_predict:
  4818                           	callstack 20
  4819                           
  4820                           ;incstack = 0
  4821                           ;color_predict@color stored from wreg
  4822  005A7C  0100               	movlb	0	; () banked
  4823  005A7E  6FDD               	movwf	color_predict@color& (0+255),b
  4824  005A80                     
  4825                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
  4826  005A80  0E79               	movlw	low color_predict@buf
  4827  005A82  0100               	movlb	0	; () banked
  4828  005A84  6F60               	movwf	sprintf@s& (0+255),b
  4829  005A86  0E00               	movlw	high color_predict@buf
  4830  005A88  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4831  005A8A  0E0D               	movlw	low (STR_1+8)
  4832  005A8C  6F62               	movwf	sprintf@fmt& (0+255),b
  4833  005A8E  0E0E               	movlw	high (STR_1+8)
  4834  005A90  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4835  005A92  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4836  005A96  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4837  005A98  ECC9  F02A         	call	_sprintf	;wreg free
  4838  005A9C                     
  4839                           ;color.c: 254:     sendStringSerial4(buf);
  4840  005A9C  0E79               	movlw	low color_predict@buf
  4841  005A9E  6E02               	movwf	sendStringSerial4@string^0,c
  4842  005AA0  0E00               	movlw	high color_predict@buf
  4843  005AA2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4844  005AA4  EC26  F02D         	call	_sendStringSerial4	;wreg free
  4845  005AA8  0012               	return		;funcret
  4846  005AAA                     __end_of_color_predict:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _color_display *****************
  4850 ;; Defined at:
  4851 ;;		line 234 in file "color.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  m               2   87[COMRAM] PTR struct color_rgb
  4854 ;;		 -> main@rgb(8), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;Total ram usage:      102 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 9
  4873 ;; This function calls:
  4874 ;;		_sendStringSerial4
  4875 ;;		_sprintf
  4876 ;; This function is called by:
  4877 ;;		_color_data_collection
  4878 ;;		_test_function
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text11
  4883  005462                     __ptext11:
  4884                           	callstack 0
  4885  005462                     _color_display:
  4886                           	callstack 20
  4887  005462                     
  4888                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4889  005462  0E79               	movlw	low color_display@buf
  4890  005464  0100               	movlb	0	; () banked
  4891  005466  6F60               	movwf	sprintf@s& (0+255),b
  4892  005468  0E00               	movlw	high color_display@buf
  4893  00546A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4894  00546C  0E05               	movlw	low STR_1
  4895  00546E  6F62               	movwf	sprintf@fmt& (0+255),b
  4896  005470  0E0E               	movlw	high STR_1
  4897  005472  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4898  005474  C058  FFD9         	movff	color_display@m,fsr2l
  4899  005478  C059  FFDA         	movff	color_display@m+1,fsr2h
  4900  00547C  CFDE F064          	movff	postinc2,?_sprintf+4
  4901  005480  CFDD F065          	movff	postdec2,?_sprintf+5
  4902  005484  EE20 F002          	lfsr	2,2
  4903  005488  5058               	movf	color_display@m^0,w,c
  4904  00548A  26D9               	addwf	fsr2l,f,c
  4905  00548C  5059               	movf	(color_display@m+1)^0,w,c
  4906  00548E  22DA               	addwfc	fsr2h,f,c
  4907  005490  CFDE F066          	movff	postinc2,?_sprintf+6
  4908  005494  CFDD F067          	movff	postdec2,?_sprintf+7
  4909  005498  EE20 F004          	lfsr	2,4
  4910  00549C  5058               	movf	color_display@m^0,w,c
  4911  00549E  26D9               	addwf	fsr2l,f,c
  4912  0054A0  5059               	movf	(color_display@m+1)^0,w,c
  4913  0054A2  22DA               	addwfc	fsr2h,f,c
  4914  0054A4  CFDE F068          	movff	postinc2,?_sprintf+8
  4915  0054A8  CFDD F069          	movff	postdec2,?_sprintf+9
  4916  0054AC  EE20 F006          	lfsr	2,6
  4917  0054B0  5058               	movf	color_display@m^0,w,c
  4918  0054B2  26D9               	addwf	fsr2l,f,c
  4919  0054B4  5059               	movf	(color_display@m+1)^0,w,c
  4920  0054B6  22DA               	addwfc	fsr2h,f,c
  4921  0054B8  CFDE F06A          	movff	postinc2,?_sprintf+10
  4922  0054BC  CFDD F06B          	movff	postdec2,?_sprintf+11
  4923  0054C0  ECC9  F02A         	call	_sprintf	;wreg free
  4924  0054C4                     
  4925                           ;color.c: 238:     sendStringSerial4(buf);
  4926  0054C4  0E79               	movlw	low color_display@buf
  4927  0054C6  6E02               	movwf	sendStringSerial4@string^0,c
  4928  0054C8  0E00               	movlw	high color_display@buf
  4929  0054CA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4930  0054CC  EC26  F02D         	call	_sendStringSerial4	;wreg free
  4931  0054D0  0012               	return		;funcret
  4932  0054D2                     __end_of_color_display:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function _sprintf *****************
  4936 ;; Defined at:
  4937 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4940 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  4941 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4942 ;;		 -> STR_2(6), STR_1(14), 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4945 ;;  ap              2   12[BANK0 ] PTR void [1]
  4946 ;;		 -> ?_sprintf(2), 
  4947 ;;  ret             2    0        int 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  2    0[BANK0 ] int 
  4950 ;; Registers used:
  4951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4957 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;Total ram usage:       25 bytes
  4962 ;; Hardware stack levels used: 1
  4963 ;; Hardware stack levels required when called: 8
  4964 ;; This function calls:
  4965 ;;		_vfprintf
  4966 ;; This function is called by:
  4967 ;;		_color_display
  4968 ;;		_color_predict
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text12
  4973  005592                     __ptext12:
  4974                           	callstack 0
  4975  005592                     _sprintf:
  4976                           	callstack 20
  4977  005592  0E64               	movlw	low (?_sprintf+4)
  4978  005594  0100               	movlb	0	; () banked
  4979  005596  6F6C               	movwf	sprintf@ap& (0+255),b
  4980  005598  0E00               	movlw	high (?_sprintf+4)
  4981  00559A  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4982  00559C  C060  F06E         	movff	sprintf@s,sprintf@f
  4983  0055A0  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4984  0055A4                     
  4985                           ; BSR set to: 0
  4986  0055A4  0E00               	movlw	0
  4987  0055A6  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4988  0055A8  0E00               	movlw	0
  4989  0055AA  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4990  0055AC                     
  4991                           ; BSR set to: 0
  4992  0055AC  0E00               	movlw	0
  4993  0055AE  6F78               	movwf	(sprintf@f+10)& (0+255),b
  4994  0055B0  0E00               	movlw	0
  4995  0055B2  6F77               	movwf	(sprintf@f+9)& (0+255),b
  4996  0055B4                     
  4997                           ; BSR set to: 0
  4998  0055B4  0E6E               	movlw	low sprintf@f
  4999  0055B6  6E50               	movwf	vfprintf@fp^0,c
  5000  0055B8  0E00               	movlw	high sprintf@f
  5001  0055BA  6E51               	movwf	(vfprintf@fp+1)^0,c
  5002  0055BC  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5003  0055C0  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5004  0055C4  0E6C               	movlw	low sprintf@ap
  5005  0055C6  6E54               	movwf	vfprintf@ap^0,c
  5006  0055C8  0E00               	movlw	high sprintf@ap
  5007  0055CA  6E55               	movwf	(vfprintf@ap+1)^0,c
  5008  0055CC  EC69  F02A         	call	_vfprintf	;wreg free
  5009  0055D0  0100               	movlb	0	; () banked
  5010  0055D2  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5011  0055D4  2560               	addwf	sprintf@s& (0+255),w,b
  5012  0055D6  6ED9               	movwf	fsr2l,c
  5013  0055D8  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5014  0055DA  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5015  0055DC  6EDA               	movwf	fsr2h,c
  5016  0055DE  0E00               	movlw	0
  5017  0055E0  6EDF               	movwf	indf2,c
  5018  0055E2                     
  5019                           ; BSR set to: 0
  5020  0055E2  0012               	return		;funcret
  5021  0055E4                     __end_of_sprintf:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _vfprintf *****************
  5025 ;; Defined at:
  5026 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5029 ;;		 -> sprintf@f(11), 
  5030 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5031 ;;		 -> STR_2(6), STR_1(14), 
  5032 ;;  ap              2   83[COMRAM] PTR PTR void 
  5033 ;;		 -> sprintf@ap(2), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5036 ;;		 -> STR_2(6), STR_1(14), 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  2   79[COMRAM] int 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5046 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;Total ram usage:        8 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 7
  5053 ;; This function calls:
  5054 ;;		_vfpfcnvrt
  5055 ;; This function is called by:
  5056 ;;		_sprintf
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text13
  5061  0054D2                     __ptext13:
  5062                           	callstack 0
  5063  0054D2                     _vfprintf:
  5064                           	callstack 20
  5065  0054D2                     
  5066                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5067  0054D2  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5068  0054D6  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5069  0054DA                     
  5070                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5071  0054DA  0E00               	movlw	0
  5072  0054DC  0101               	movlb	1	; () banked
  5073  0054DE  6F3F               	movwf	(_nout+1)& (0+255),b
  5074  0054E0  0E00               	movlw	0
  5075  0054E2  6F3E               	movwf	_nout& (0+255),b
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5078  0054E4  EF87  F02A         	goto	l4228
  5079  0054E8                     l4226:
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5083  0054E8  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5084  0054EC  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5085  0054F0  0E56               	movlw	low vfprintf@cfmt
  5086  0054F2  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5087  0054F4  0E00               	movlw	high vfprintf@cfmt
  5088  0054F6  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5089  0054F8  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5090  0054FC  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5091  005500  EC13  F01E         	call	_vfpfcnvrt	;wreg free
  5092  005504  5040               	movf	?_vfpfcnvrt^0,w,c
  5093  005506  0101               	movlb	1	; () banked
  5094  005508  273E               	addwf	_nout& (0+255),f,b
  5095  00550A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5096  00550C  233F               	addwfc	(_nout+1)& (0+255),f,b
  5097  00550E                     l4228:
  5098                           
  5099                           ; BSR set to: 1
  5100                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5101  00550E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5102  005512  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5103  005516                     	if	0	;tblptru may be non-zero
  5104  005516                     	endif
  5105  005516                     	if	0	;tblptru may be non-zero
  5106  005516                     	endif
  5107  005516  0008               	tblrd		*
  5108  005518  50F5               	movf	tablat,w,c
  5109  00551A  0900               	iorlw	0
  5110  00551C  A4D8               	btfss	status,2,c
  5111  00551E  EF93  F02A         	goto	u4221
  5112  005522  EF95  F02A         	goto	u4220
  5113  005526                     u4221:
  5114  005526  EF74  F02A         	goto	l4226
  5115  00552A                     u4220:
  5116  00552A                     
  5117                           ; BSR set to: 1
  5118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5119  00552A  C13E  F050         	movff	_nout,?_vfprintf
  5120  00552E  C13F  F051         	movff	_nout+1,?_vfprintf+1
  5121  005532                     
  5122                           ; BSR set to: 1
  5123  005532  0012               	return		;funcret
  5124  005534                     __end_of_vfprintf:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function _vfpfcnvrt *****************
  5128 ;; Defined at:
  5129 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5132 ;;		 -> sprintf@f(11), 
  5133 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5134 ;;		 -> vfprintf@cfmt(2), 
  5135 ;;  ap              2   67[COMRAM] PTR PTR void 
  5136 ;;		 -> sprintf@ap(2), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  ll              8   71[COMRAM] long long 
  5139 ;;  llu             8    0        unsigned long long 
  5140 ;;  f               4    0        unsigned long long 
  5141 ;;  vp              3    0        PTR void 
  5142 ;;  ct              3    0        unsigned char [3]
  5143 ;;  cp              3    0        PTR unsigned char 
  5144 ;;  i               2    0        int 
  5145 ;;  done            2    0        int 
  5146 ;;  c               1    0        unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  2   63[COMRAM] int 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5156 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;Total ram usage:       16 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 6
  5163 ;; This function calls:
  5164 ;;		_dtoa
  5165 ;;		_fputc
  5166 ;; This function is called by:
  5167 ;;		_vfprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text14
  5172  003C26                     __ptext14:
  5173                           	callstack 0
  5174  003C26                     _vfpfcnvrt:
  5175                           	callstack 20
  5176  003C26                     
  5177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5178  003C26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5179  003C2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5180  003C2E  CFDE FFF6          	movff	postinc2,tblptrl
  5181  003C32  CFDD FFF7          	movff	postdec2,tblptrh
  5182  003C36                     	if	0	;tblptru may be non-zero
  5183  003C36                     	endif
  5184  003C36                     	if	0	;tblptru may be non-zero
  5185  003C36                     	endif
  5186  003C36  0008               	tblrd		*
  5187  003C38  50F5               	movf	tablat,w,c
  5188  003C3A  0A25               	xorlw	37
  5189  003C3C  A4D8               	btfss	status,2,c
  5190  003C3E  EF23  F01E         	goto	u3821
  5191  003C42  EF25  F01E         	goto	u3820
  5192  003C46                     u3821:
  5193  003C46  EFD2  F01E         	goto	l3972
  5194  003C4A                     u3820:
  5195  003C4A                     
  5196                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5197  003C4A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5198  003C4E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5199  003C52  2ADE               	incf	postinc2,f,c
  5200  003C54  0E00               	movlw	0
  5201  003C56  22DD               	addwfc	postdec2,f,c
  5202  003C58                     
  5203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5204  003C58  0E00               	movlw	0
  5205  003C5A  0101               	movlb	1	; () banked
  5206  003C5C  6F41               	movwf	(_width+1)& (0+255),b
  5207  003C5E  0E00               	movlw	0
  5208  003C60  6F40               	movwf	_width& (0+255),b
  5209  003C62  C140  F0FC         	movff	_width,_flags
  5210  003C66  C141  F0FD         	movff	_width+1,_flags+1
  5211  003C6A                     
  5212                           ; BSR set to: 1
  5213                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5214  003C6A  0100               	movlb	0	; () banked
  5215  003C6C  69FA               	setf	_prec& (0+255),b
  5216  003C6E  69FB               	setf	(_prec+1)& (0+255),b
  5217  003C70                     
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5220  003C70  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5221  003C74  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5222  003C78  CFDE FFF6          	movff	postinc2,tblptrl
  5223  003C7C  CFDD FFF7          	movff	postdec2,tblptrh
  5224  003C80                     	if	0	;tblptru may be non-zero
  5225  003C80                     	endif
  5226  003C80                     	if	0	;tblptru may be non-zero
  5227  003C80                     	endif
  5228  003C80  0008               	tblrd		*
  5229  003C82  50F5               	movf	tablat,w,c
  5230  003C84  0A64               	xorlw	100
  5231  003C86  B4D8               	btfsc	status,2,c
  5232  003C88  EF48  F01E         	goto	u3831
  5233  003C8C  EF4A  F01E         	goto	u3830
  5234  003C90                     u3831:
  5235  003C90  EF5C  F01E         	goto	l3950
  5236  003C94                     u3830:
  5237  003C94                     
  5238                           ; BSR set to: 0
  5239  003C94  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5240  003C98  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5241  003C9C  CFDE FFF6          	movff	postinc2,tblptrl
  5242  003CA0  CFDD FFF7          	movff	postdec2,tblptrh
  5243  003CA4                     	if	0	;tblptru may be non-zero
  5244  003CA4                     	endif
  5245  003CA4                     	if	0	;tblptru may be non-zero
  5246  003CA4                     	endif
  5247  003CA4  0008               	tblrd		*
  5248  003CA6  50F5               	movf	tablat,w,c
  5249  003CA8  0A69               	xorlw	105
  5250  003CAA  A4D8               	btfss	status,2,c
  5251  003CAC  EF5A  F01E         	goto	u3841
  5252  003CB0  EF5C  F01E         	goto	u3840
  5253  003CB4                     u3841:
  5254  003CB4  EF9C  F01E         	goto	l3956
  5255  003CB8                     u3840:
  5256  003CB8                     l3950:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5260  003CB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5261  003CBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5262  003CC0  2ADE               	incf	postinc2,f,c
  5263  003CC2  0E00               	movlw	0
  5264  003CC4  22DD               	addwfc	postdec2,f,c
  5265                           
  5266                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5267  003CC6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5268  003CCA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5269  003CCE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5270  003CD2  0E02               	movlw	2
  5271  003CD4  26DE               	addwf	postinc2,f,c
  5272  003CD6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5273  003CDA  0E00               	movlw	0
  5274  003CDC  22DD               	addwfc	postdec2,f,c
  5275  003CDE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5276  003CE2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5277  003CE6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5278  003CEA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5279  003CEE  0E00               	movlw	0
  5280  003CF0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5281  003CF2  0EFF               	movlw	-1
  5282  003CF4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5283  003CF6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5284  003CF8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5285  003CFA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5286  003CFC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5287  003CFE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5288  003D00                     
  5289                           ; BSR set to: 0
  5290                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5291  003D00  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5292  003D04  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5293  003D08  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5294  003D0C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5295  003D10  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5296  003D14  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5297  003D18  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5298  003D1C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5299  003D20  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5300  003D24  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5301  003D28  EC6F  F018         	call	_dtoa	;wreg free
  5302  003D2C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5303  003D30  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5304  003D34  EFED  F01E         	goto	l1418
  5305  003D38                     l3956:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5309  003D38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5310  003D3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5311  003D40  CFDE FFF6          	movff	postinc2,tblptrl
  5312  003D44  CFDD FFF7          	movff	postdec2,tblptrh
  5313  003D48                     	if	0	;tblptru may be non-zero
  5314  003D48                     	endif
  5315  003D48                     	if	0	;tblptru may be non-zero
  5316  003D48                     	endif
  5317  003D48  0008               	tblrd		*
  5318  003D4A  50F5               	movf	tablat,w,c
  5319  003D4C  0A25               	xorlw	37
  5320  003D4E  A4D8               	btfss	status,2,c
  5321  003D50  EFAC  F01E         	goto	u3851
  5322  003D54  EFAE  F01E         	goto	u3850
  5323  003D58                     u3851:
  5324  003D58  EFC5  F01E         	goto	l3966
  5325  003D5C                     u3850:
  5326  003D5C                     
  5327                           ; BSR set to: 0
  5328                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5329  003D5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5330  003D60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5331  003D64  2ADE               	incf	postinc2,f,c
  5332  003D66  0E00               	movlw	0
  5333  003D68  22DD               	addwfc	postdec2,f,c
  5334  003D6A                     
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5337  003D6A  0E00               	movlw	0
  5338  003D6C  6E02               	movwf	(fputc@c+1)^0,c
  5339  003D6E  0E25               	movlw	37
  5340  003D70  6E01               	movwf	fputc@c^0,c
  5341  003D72  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5342  003D76  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5343  003D7A  EC25  F027         	call	_fputc	;wreg free
  5344  003D7E                     l3962:
  5345                           
  5346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5347  003D7E  0E00               	movlw	0
  5348  003D80  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5349  003D82  0E01               	movlw	1
  5350  003D84  6E40               	movwf	?_vfpfcnvrt^0,c
  5351  003D86  EFED  F01E         	goto	l1418
  5352  003D8A                     l3966:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5356  003D8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5357  003D8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5358  003D92  2ADE               	incf	postinc2,f,c
  5359  003D94  0E00               	movlw	0
  5360  003D96  22DD               	addwfc	postdec2,f,c
  5361  003D98                     
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5364  003D98  0E00               	movlw	0
  5365  003D9A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5366  003D9C  0E00               	movlw	0
  5367  003D9E  6E40               	movwf	?_vfpfcnvrt^0,c
  5368  003DA0  EFED  F01E         	goto	l1418
  5369  003DA4                     l3972:
  5370                           
  5371                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5372  003DA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5373  003DA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5374  003DAC  CFDE FFF6          	movff	postinc2,tblptrl
  5375  003DB0  CFDD FFF7          	movff	postdec2,tblptrh
  5376  003DB4                     	if	0	;tblptru may be non-zero
  5377  003DB4                     	endif
  5378  003DB4                     	if	0	;tblptru may be non-zero
  5379  003DB4                     	endif
  5380  003DB4  0008               	tblrd		*
  5381  003DB6  50F5               	movf	tablat,w,c
  5382  003DB8  6E01               	movwf	fputc@c^0,c
  5383  003DBA  6A02               	clrf	(fputc@c+1)^0,c
  5384  003DBC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5385  003DC0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5386  003DC4  EC25  F027         	call	_fputc	;wreg free
  5387  003DC8                     
  5388                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5389  003DC8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5390  003DCC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5391  003DD0  2ADE               	incf	postinc2,f,c
  5392  003DD2  0E00               	movlw	0
  5393  003DD4  22DD               	addwfc	postdec2,f,c
  5394  003DD6  EFBF  F01E         	goto	l3962
  5395  003DDA                     l1418:
  5396  003DDA  0012               	return		;funcret
  5397  003DDC                     __end_of_vfpfcnvrt:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _dtoa *****************
  5401 ;; Defined at:
  5402 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5405 ;;		 -> sprintf@f(11), 
  5406 ;;  d               8   29[COMRAM] long long 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  n               8   53[COMRAM] long long 
  5409 ;;  i               2   61[COMRAM] int 
  5410 ;;  s               2   51[COMRAM] int 
  5411 ;;  w               2   49[COMRAM] int 
  5412 ;;  p               2   47[COMRAM] int 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  2   27[COMRAM] int 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5422 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;Total ram usage:       36 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 5
  5429 ;; This function calls:
  5430 ;;		___aodiv
  5431 ;;		___aomod
  5432 ;;		_abs
  5433 ;;		_pad
  5434 ;; This function is called by:
  5435 ;;		_vfpfcnvrt
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text15
  5440  0030DE                     __ptext15:
  5441                           	callstack 0
  5442  0030DE                     _dtoa:
  5443                           	callstack 20
  5444  0030DE                     
  5445                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5446  0030DE  C01E  F036         	movff	dtoa@d,dtoa@n
  5447  0030E2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5448  0030E6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5449  0030EA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5450  0030EE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5451  0030F2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5452  0030F6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5453  0030FA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5454  0030FE                     
  5455                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5456  0030FE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5457  003100  EF84  F018         	goto	u3221
  5458  003104  EF87  F018         	goto	u3220
  5459  003108                     u3221:
  5460  003108  0E01               	movlw	1
  5461  00310A  EF88  F018         	goto	u3230
  5462  00310E                     u3220:
  5463  00310E  0E00               	movlw	0
  5464  003110                     u3230:
  5465  003110  6E34               	movwf	dtoa@s^0,c
  5466  003112  6A35               	clrf	(dtoa@s+1)^0,c
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5469  003114  5034               	movf	dtoa@s^0,w,c
  5470  003116  1035               	iorwf	(dtoa@s+1)^0,w,c
  5471  003118  B4D8               	btfsc	status,2,c
  5472  00311A  EF91  F018         	goto	u3241
  5473  00311E  EF93  F018         	goto	u3240
  5474  003122                     u3241:
  5475  003122  EFA3  F018         	goto	l3662
  5476  003126                     u3240:
  5477  003126                     
  5478                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5479  003126  1E3D               	comf	(dtoa@n+7)^0,f,c
  5480  003128  1E3C               	comf	(dtoa@n+6)^0,f,c
  5481  00312A  1E3B               	comf	(dtoa@n+5)^0,f,c
  5482  00312C  1E3A               	comf	(dtoa@n+4)^0,f,c
  5483  00312E  1E39               	comf	(dtoa@n+3)^0,f,c
  5484  003130  1E38               	comf	(dtoa@n+2)^0,f,c
  5485  003132  1E37               	comf	(dtoa@n+1)^0,f,c
  5486  003134  6C36               	negf	dtoa@n^0,c
  5487  003136  0E00               	movlw	0
  5488  003138  2237               	addwfc	(dtoa@n+1)^0,f,c
  5489  00313A  2238               	addwfc	(dtoa@n+2)^0,f,c
  5490  00313C  2239               	addwfc	(dtoa@n+3)^0,f,c
  5491  00313E  223A               	addwfc	(dtoa@n+4)^0,f,c
  5492  003140  223B               	addwfc	(dtoa@n+5)^0,f,c
  5493  003142  223C               	addwfc	(dtoa@n+6)^0,f,c
  5494  003144  223D               	addwfc	(dtoa@n+7)^0,f,c
  5495  003146                     l3662:
  5496                           
  5497                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5498  003146  0100               	movlb	0	; () banked
  5499  003148  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5500  00314A  EFA9  F018         	goto	u3251
  5501  00314E  EFAB  F018         	goto	u3250
  5502  003152                     u3251:
  5503  003152  EFAC  F018         	goto	l3666
  5504  003156                     u3250:
  5505  003156                     
  5506                           ; BSR set to: 0
  5507                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5508  003156  93FC               	bcf	_flags& (0+255),1,b
  5509  003158                     l3666:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5513  003158  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5514  00315A  EFB9  F018         	goto	u3260
  5515  00315E  51FB               	movf	(_prec+1)& (0+255),w,b
  5516  003160  E106               	bnz	u3261
  5517  003162  05FA               	decf	_prec& (0+255),w,b
  5518  003164  B0D8               	btfsc	status,0,c
  5519  003166  EFB7  F018         	goto	u3261
  5520  00316A  EFB9  F018         	goto	u3260
  5521  00316E                     u3261:
  5522  00316E  EFBF  F018         	goto	l1391
  5523  003172                     u3260:
  5524  003172                     
  5525                           ; BSR set to: 0
  5526  003172  0E00               	movlw	0
  5527  003174  6E31               	movwf	(dtoa@p+1)^0,c
  5528  003176  0E01               	movlw	1
  5529  003178  6E30               	movwf	dtoa@p^0,c
  5530  00317A  EFC3  F018         	goto	l1393
  5531  00317E                     l1391:
  5532                           
  5533                           ; BSR set to: 0
  5534  00317E  C0FA  F030         	movff	_prec,dtoa@p
  5535  003182  C0FB  F031         	movff	_prec+1,dtoa@p+1
  5536  003186                     l1393:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5540  003186  C140  F032         	movff	_width,dtoa@w
  5541  00318A  C141  F033         	movff	_width+1,dtoa@w+1
  5542  00318E                     
  5543                           ; BSR set to: 0
  5544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5545  00318E  5034               	movf	dtoa@s^0,w,c
  5546  003190  1035               	iorwf	(dtoa@s+1)^0,w,c
  5547  003192  A4D8               	btfss	status,2,c
  5548  003194  EFCE  F018         	goto	u3271
  5549  003198  EFD0  F018         	goto	u3270
  5550  00319C                     u3271:
  5551  00319C  EFD7  F018         	goto	l3674
  5552  0031A0                     u3270:
  5553  0031A0                     
  5554                           ; BSR set to: 0
  5555  0031A0  A5FC               	btfss	_flags& (0+255),2,b
  5556  0031A2  EFD5  F018         	goto	u3281
  5557  0031A6  EFD7  F018         	goto	u3280
  5558  0031AA                     u3281:
  5559  0031AA  EFDA  F018         	goto	l3676
  5560  0031AE                     u3280:
  5561  0031AE                     l3674:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5565  0031AE  0632               	decf	dtoa@w^0,f,c
  5566  0031B0  A0D8               	btfss	status,0,c
  5567  0031B2  0633               	decf	(dtoa@w+1)^0,f,c
  5568  0031B4                     l3676:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5572  0031B4  0E00               	movlw	0
  5573  0031B6  6E3F               	movwf	(dtoa@i+1)^0,c
  5574  0031B8  0E1F               	movlw	31
  5575  0031BA  6E3E               	movwf	dtoa@i^0,c
  5576  0031BC                     
  5577                           ; BSR set to: 0
  5578                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5579  0031BC  0E00               	movlw	0
  5580  0031BE  0101               	movlb	1	; () banked
  5581  0031C0  6F65               	movwf	(_dbuf+31)& (0+255),b
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5584  0031C2  EF5F  F019         	goto	l3690
  5585  0031C6                     l3680:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5588  0031C6  063E               	decf	dtoa@i^0,f,c
  5589  0031C8  A0D8               	btfss	status,0,c
  5590  0031CA  063F               	decf	(dtoa@i+1)^0,f,c
  5591  0031CC                     
  5592                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5593  0031CC  0E46               	movlw	low _dbuf
  5594  0031CE  243E               	addwf	dtoa@i^0,w,c
  5595  0031D0  6ED9               	movwf	fsr2l,c
  5596  0031D2  0E01               	movlw	high _dbuf
  5597  0031D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  5598  0031D6  6EDA               	movwf	fsr2h,c
  5599  0031D8  C036  F001         	movff	dtoa@n,___aomod@dividend
  5600  0031DC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5601  0031E0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5602  0031E4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5603  0031E8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5604  0031EC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5605  0031F0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5606  0031F4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5607  0031F8  0E0A               	movlw	10
  5608  0031FA  6E09               	movwf	___aomod@divisor^0,c
  5609  0031FC  0E00               	movlw	0
  5610  0031FE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5611  003200  0E00               	movlw	0
  5612  003202  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5613  003204  0E00               	movlw	0
  5614  003206  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5615  003208  0E00               	movlw	0
  5616  00320A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5617  00320C  0E00               	movlw	0
  5618  00320E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5619  003210  0E00               	movlw	0
  5620  003212  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5621  003214  0E00               	movlw	0
  5622  003216  6E10               	movwf	(___aomod@divisor+7)^0,c
  5623  003218  ECF4  F022         	call	___aomod	;wreg free
  5624  00321C  C001  F026         	movff	?___aomod,??_dtoa
  5625  003220  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5626  003224  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5627  003228  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5628  00322C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5629  003230  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5630  003234  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5631  003238  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5632  00323C  C026  F013         	movff	??_dtoa,abs@a
  5633  003240  C028  F014         	movff	??_dtoa+2,abs@a+1
  5634  003244  EC7B  F02C         	call	_abs	;wreg free
  5635  003248  5013               	movf	?_abs^0,w,c
  5636  00324A  0F30               	addlw	48
  5637  00324C  6EDF               	movwf	indf2,c
  5638  00324E                     
  5639                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5640  00324E  0630               	decf	dtoa@p^0,f,c
  5641  003250  A0D8               	btfss	status,0,c
  5642  003252  0631               	decf	(dtoa@p+1)^0,f,c
  5643  003254                     
  5644                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5645  003254  0632               	decf	dtoa@w^0,f,c
  5646  003256  A0D8               	btfss	status,0,c
  5647  003258  0633               	decf	(dtoa@w+1)^0,f,c
  5648  00325A                     
  5649                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5650  00325A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5651  00325E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5652  003262  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5653  003266  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5654  00326A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5655  00326E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5656  003272  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5657  003276  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5658  00327A  0E0A               	movlw	10
  5659  00327C  6E09               	movwf	___aodiv@divisor^0,c
  5660  00327E  0E00               	movlw	0
  5661  003280  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5662  003282  0E00               	movlw	0
  5663  003284  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5664  003286  0E00               	movlw	0
  5665  003288  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5666  00328A  0E00               	movlw	0
  5667  00328C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5668  00328E  0E00               	movlw	0
  5669  003290  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5670  003292  0E00               	movlw	0
  5671  003294  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5672  003296  0E00               	movlw	0
  5673  003298  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5674  00329A  EC30  F022         	call	___aodiv	;wreg free
  5675  00329E  C001  F036         	movff	?___aodiv,dtoa@n
  5676  0032A2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5677  0032A6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5678  0032AA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5679  0032AE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5680  0032B2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5681  0032B6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5682  0032BA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5683  0032BE                     l3690:
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5686  0032BE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5687  0032C0  EF6A  F019         	goto	u3291
  5688  0032C4  503F               	movf	(dtoa@i+1)^0,w,c
  5689  0032C6  E108               	bnz	u3290
  5690  0032C8  043E               	decf	dtoa@i^0,w,c
  5691  0032CA  A0D8               	btfss	status,0,c
  5692  0032CC  EF6A  F019         	goto	u3291
  5693  0032D0  EF6C  F019         	goto	u3290
  5694  0032D4                     u3291:
  5695  0032D4  EF9D  F019         	goto	l3700
  5696  0032D8                     u3290:
  5697  0032D8  5036               	movf	dtoa@n^0,w,c
  5698  0032DA  1037               	iorwf	(dtoa@n+1)^0,w,c
  5699  0032DC  1038               	iorwf	(dtoa@n+2)^0,w,c
  5700  0032DE  1039               	iorwf	(dtoa@n+3)^0,w,c
  5701  0032E0  103A               	iorwf	(dtoa@n+4)^0,w,c
  5702  0032E2  103B               	iorwf	(dtoa@n+5)^0,w,c
  5703  0032E4  103C               	iorwf	(dtoa@n+6)^0,w,c
  5704  0032E6  103D               	iorwf	(dtoa@n+7)^0,w,c
  5705  0032E8  A4D8               	btfss	status,2,c
  5706  0032EA  EF79  F019         	goto	u3301
  5707  0032EE  EF7B  F019         	goto	u3300
  5708  0032F2                     u3301:
  5709  0032F2  EFE3  F018         	goto	l3680
  5710  0032F6                     u3300:
  5711  0032F6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5712  0032F8  EF88  F019         	goto	u3310
  5713  0032FC  5031               	movf	(dtoa@p+1)^0,w,c
  5714  0032FE  E106               	bnz	u3311
  5715  003300  0430               	decf	dtoa@p^0,w,c
  5716  003302  B0D8               	btfsc	status,0,c
  5717  003304  EF86  F019         	goto	u3311
  5718  003308  EF88  F019         	goto	u3310
  5719  00330C                     u3311:
  5720  00330C  EFE3  F018         	goto	l3680
  5721  003310                     u3310:
  5722  003310  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5723  003312  EF93  F019         	goto	u3321
  5724  003316  5033               	movf	(dtoa@w+1)^0,w,c
  5725  003318  E108               	bnz	u3320
  5726  00331A  0432               	decf	dtoa@w^0,w,c
  5727  00331C  A0D8               	btfss	status,0,c
  5728  00331E  EF93  F019         	goto	u3321
  5729  003322  EF95  F019         	goto	u3320
  5730  003326                     u3321:
  5731  003326  EF9D  F019         	goto	l3700
  5732  00332A                     u3320:
  5733  00332A  0100               	movlb	0	; () banked
  5734  00332C  B3FC               	btfsc	_flags& (0+255),1,b
  5735  00332E  EF9B  F019         	goto	u3331
  5736  003332  EF9D  F019         	goto	u3330
  5737  003336                     u3331:
  5738  003336  EFE3  F018         	goto	l3680
  5739  00333A                     u3330:
  5740  00333A                     l3700:
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5743  00333A  5034               	movf	dtoa@s^0,w,c
  5744  00333C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5745  00333E  A4D8               	btfss	status,2,c
  5746  003340  EFA4  F019         	goto	u3341
  5747  003344  EFA6  F019         	goto	u3340
  5748  003348                     u3341:
  5749  003348  EFAE  F019         	goto	l3704
  5750  00334C                     u3340:
  5751  00334C  0100               	movlb	0	; () banked
  5752  00334E  A5FC               	btfss	_flags& (0+255),2,b
  5753  003350  EFAC  F019         	goto	u3351
  5754  003354  EFAE  F019         	goto	u3350
  5755  003358                     u3351:
  5756  003358  EFCC  F019         	goto	l3714
  5757  00335C                     u3350:
  5758  00335C                     l3704:
  5759                           
  5760                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5761  00335C  063E               	decf	dtoa@i^0,f,c
  5762  00335E  A0D8               	btfss	status,0,c
  5763  003360  063F               	decf	(dtoa@i+1)^0,f,c
  5764  003362                     
  5765                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5766  003362  5034               	movf	dtoa@s^0,w,c
  5767  003364  1035               	iorwf	(dtoa@s+1)^0,w,c
  5768  003366  A4D8               	btfss	status,2,c
  5769  003368  EFB8  F019         	goto	u3361
  5770  00336C  EFBA  F019         	goto	u3360
  5771  003370                     u3361:
  5772  003370  EFC0  F019         	goto	l3710
  5773  003374                     u3360:
  5774  003374  0E00               	movlw	0
  5775  003376  6E2F               	movwf	(_dtoa$2828+1)^0,c
  5776  003378  0E2B               	movlw	43
  5777  00337A  6E2E               	movwf	_dtoa$2828^0,c
  5778  00337C  EFC4  F019         	goto	l3712
  5779  003380                     l3710:
  5780  003380  0E00               	movlw	0
  5781  003382  6E2F               	movwf	(_dtoa$2828+1)^0,c
  5782  003384  0E2D               	movlw	45
  5783  003386  6E2E               	movwf	_dtoa$2828^0,c
  5784  003388                     l3712:
  5785  003388  0E46               	movlw	low _dbuf
  5786  00338A  243E               	addwf	dtoa@i^0,w,c
  5787  00338C  6ED9               	movwf	fsr2l,c
  5788  00338E  0E01               	movlw	high _dbuf
  5789  003390  203F               	addwfc	(dtoa@i+1)^0,w,c
  5790  003392  6EDA               	movwf	fsr2h,c
  5791  003394  C02E  FFDF         	movff	_dtoa$2828,indf2
  5792  003398                     l3714:
  5793                           
  5794                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5795  003398  C01C  F011         	movff	dtoa@fp,pad@fp
  5796  00339C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5797  0033A0  0E46               	movlw	low _dbuf
  5798  0033A2  243E               	addwf	dtoa@i^0,w,c
  5799  0033A4  6E13               	movwf	pad@buf^0,c
  5800  0033A6  0E01               	movlw	high _dbuf
  5801  0033A8  203F               	addwfc	(dtoa@i+1)^0,w,c
  5802  0033AA  6E14               	movwf	(pad@buf+1)^0,c
  5803  0033AC  C032  F015         	movff	dtoa@w,pad@p
  5804  0033B0  C033  F016         	movff	dtoa@w+1,pad@p+1
  5805  0033B4  EC8A  F027         	call	_pad	;wreg free
  5806  0033B8  C011  F01C         	movff	?_pad,?_dtoa
  5807  0033BC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5808  0033C0  0012               	return		;funcret
  5809  0033C2                     __end_of_dtoa:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function _pad *****************
  5813 ;; Defined at:
  5814 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5817 ;;		 -> sprintf@f(11), 
  5818 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5819 ;;		 -> dbuf(32), 
  5820 ;;  p               2   20[COMRAM] int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  w               2   25[COMRAM] int 
  5823 ;;  i               2   23[COMRAM] int 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  2   16[COMRAM] int 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;Total ram usage:       11 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; Hardware stack levels required when called: 4
  5840 ;; This function calls:
  5841 ;;		_fputc
  5842 ;;		_fputs
  5843 ;;		_strlen
  5844 ;; This function is called by:
  5845 ;;		_dtoa
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text16
  5850  004F14                     __ptext16:
  5851                           	callstack 0
  5852  004F14                     _pad:
  5853                           	callstack 20
  5854  004F14                     
  5855                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5856  004F14  0100               	movlb	0	; () banked
  5857  004F16  A1FC               	btfss	_flags& (0+255),0,b
  5858  004F18  EF90  F027         	goto	u3111
  5859  004F1C  EF92  F027         	goto	u3110
  5860  004F20                     u3111:
  5861  004F20  EF9C  F027         	goto	l3584
  5862  004F24                     u3110:
  5863  004F24                     
  5864                           ; BSR set to: 0
  5865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5866  004F24  C013  F00A         	movff	pad@buf,fputs@s
  5867  004F28  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5868  004F2C  C011  F00C         	movff	pad@fp,fputs@fp
  5869  004F30  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5870  004F34  ECB5  F02B         	call	_fputs	;wreg free
  5871  004F38                     l3584:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5874  004F38  BE16               	btfsc	(pad@p+1)^0,7,c
  5875  004F3A  EFA1  F027         	goto	u3121
  5876  004F3E  EFA3  F027         	goto	u3120
  5877  004F42                     u3121:
  5878  004F42  EFA9  F027         	goto	l3588
  5879  004F46                     u3120:
  5880  004F46  C015  F01A         	movff	pad@p,pad@w
  5881  004F4A  C016  F01B         	movff	pad@p+1,pad@w+1
  5882  004F4E  EFAD  F027         	goto	l1380
  5883  004F52                     l3588:
  5884  004F52  0E00               	movlw	0
  5885  004F54  6E1B               	movwf	(pad@w+1)^0,c
  5886  004F56  0E00               	movlw	0
  5887  004F58  6E1A               	movwf	pad@w^0,c
  5888  004F5A                     l1380:
  5889                           
  5890                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5891  004F5A  0E00               	movlw	0
  5892  004F5C  6E19               	movwf	(pad@i+1)^0,c
  5893  004F5E  0E00               	movlw	0
  5894  004F60  6E18               	movwf	pad@i^0,c
  5895                           
  5896                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5897  004F62  EFBF  F027         	goto	l3594
  5898  004F66                     l3590:
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5901  004F66  0E00               	movlw	0
  5902  004F68  6E02               	movwf	(fputc@c+1)^0,c
  5903  004F6A  0E20               	movlw	32
  5904  004F6C  6E01               	movwf	fputc@c^0,c
  5905  004F6E  C011  F003         	movff	pad@fp,fputc@fp
  5906  004F72  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5907  004F76  EC25  F027         	call	_fputc	;wreg free
  5908  004F7A                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5910  004F7A  4A18               	infsnz	pad@i^0,f,c
  5911  004F7C  2A19               	incf	(pad@i+1)^0,f,c
  5912  004F7E                     l3594:
  5913                           
  5914                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5915  004F7E  501A               	movf	pad@w^0,w,c
  5916  004F80  5C18               	subwf	pad@i^0,w,c
  5917  004F82  5019               	movf	(pad@i+1)^0,w,c
  5918  004F84  0A80               	xorlw	128
  5919  004F86  6E17               	movwf	??_pad^0,c
  5920  004F88  501B               	movf	(pad@w+1)^0,w,c
  5921  004F8A  0A80               	xorlw	128
  5922  004F8C  5817               	subwfb	??_pad^0,w,c
  5923  004F8E  A0D8               	btfss	status,0,c
  5924  004F90  EFCC  F027         	goto	u3131
  5925  004F94  EFCE  F027         	goto	u3130
  5926  004F98                     u3131:
  5927  004F98  EFB3  F027         	goto	l3590
  5928  004F9C                     u3130:
  5929  004F9C                     
  5930                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5931  004F9C  0100               	movlb	0	; () banked
  5932  004F9E  B1FC               	btfsc	_flags& (0+255),0,b
  5933  004FA0  EFD4  F027         	goto	u3141
  5934  004FA4  EFD6  F027         	goto	u3140
  5935  004FA8                     u3141:
  5936  004FA8  EFE0  F027         	goto	l3598
  5937  004FAC                     u3140:
  5938  004FAC                     
  5939                           ; BSR set to: 0
  5940                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5941  004FAC  C013  F00A         	movff	pad@buf,fputs@s
  5942  004FB0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5943  004FB4  C011  F00C         	movff	pad@fp,fputs@fp
  5944  004FB8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5945  004FBC  ECB5  F02B         	call	_fputs	;wreg free
  5946  004FC0                     l3598:
  5947                           
  5948                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5949  004FC0  C013  F001         	movff	pad@buf,strlen@s
  5950  004FC4  C014  F002         	movff	pad@buf+1,strlen@s+1
  5951  004FC8  ECF1  F02C         	call	_strlen	;wreg free
  5952  004FCC  501A               	movf	pad@w^0,w,c
  5953  004FCE  2401               	addwf	?_strlen^0,w,c
  5954  004FD0  6E11               	movwf	?_pad^0,c
  5955  004FD2  501B               	movf	(pad@w+1)^0,w,c
  5956  004FD4  2002               	addwfc	(?_strlen+1)^0,w,c
  5957  004FD6  6E12               	movwf	(?_pad+1)^0,c
  5958  004FD8  0012               	return		;funcret
  5959  004FDA                     __end_of_pad:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _strlen *****************
  5963 ;; Defined at:
  5964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5967 ;;		 -> dbuf(32), 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5970 ;;		 -> dbuf(32), 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    0[COMRAM] unsigned int 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;Total ram usage:        4 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_pad
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text17
  5995  0059E2                     __ptext17:
  5996                           	callstack 0
  5997  0059E2                     _strlen:
  5998                           	callstack 22
  5999  0059E2  C001  F003         	movff	strlen@s,strlen@a
  6000  0059E6  C002  F004         	movff	strlen@s+1,strlen@a+1
  6001  0059EA  EFF9  F02C         	goto	l3494
  6002  0059EE                     l3492:
  6003  0059EE  4A01               	infsnz	strlen@s^0,f,c
  6004  0059F0  2A02               	incf	(strlen@s+1)^0,f,c
  6005  0059F2                     l3494:
  6006  0059F2  C001  FFD9         	movff	strlen@s,fsr2l
  6007  0059F6  C002  FFDA         	movff	strlen@s+1,fsr2h
  6008  0059FA  50DF               	movf	indf2,w,c
  6009  0059FC  A4D8               	btfss	status,2,c
  6010  0059FE  EF03  F02D         	goto	u2971
  6011  005A02  EF05  F02D         	goto	u2970
  6012  005A06                     u2971:
  6013  005A06  EFF7  F02C         	goto	l3492
  6014  005A0A                     u2970:
  6015  005A0A  5003               	movf	strlen@a^0,w,c
  6016  005A0C  5C01               	subwf	strlen@s^0,w,c
  6017  005A0E  6E01               	movwf	?_strlen^0,c
  6018  005A10  5004               	movf	(strlen@a+1)^0,w,c
  6019  005A12  5802               	subwfb	(strlen@s+1)^0,w,c
  6020  005A14  6E02               	movwf	(?_strlen+1)^0,c
  6021  005A16  0012               	return		;funcret
  6022  005A18                     __end_of_strlen:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function _fputs *****************
  6026 ;; Defined at:
  6027 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6030 ;;		 -> dbuf(32), 
  6031 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6032 ;;		 -> sprintf@f(11), 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  i               2   14[COMRAM] int 
  6035 ;;  c               1   13[COMRAM] unsigned char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  2    9[COMRAM] int 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6048 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;Total ram usage:        7 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 3
  6052 ;; This function calls:
  6053 ;;		_fputc
  6054 ;; This function is called by:
  6055 ;;		_pad
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text18
  6060  00576A                     __ptext18:
  6061                           	callstack 0
  6062  00576A                     _fputs:
  6063                           	callstack 20
  6064  00576A  0E00               	movlw	0
  6065  00576C  6E10               	movwf	(fputs@i+1)^0,c
  6066  00576E  0E00               	movlw	0
  6067  005770  6E0F               	movwf	fputs@i^0,c
  6068  005772  EFC6  F02B         	goto	l3488
  6069  005776                     l3484:
  6070  005776  C00E  F001         	movff	fputs@c,fputc@c
  6071  00577A  6A02               	clrf	(fputc@c+1)^0,c
  6072  00577C  C00C  F003         	movff	fputs@fp,fputc@fp
  6073  005780  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6074  005784  EC25  F027         	call	_fputc	;wreg free
  6075  005788  4A0F               	infsnz	fputs@i^0,f,c
  6076  00578A  2A10               	incf	(fputs@i+1)^0,f,c
  6077  00578C                     l3488:
  6078  00578C  500F               	movf	fputs@i^0,w,c
  6079  00578E  240A               	addwf	fputs@s^0,w,c
  6080  005790  6ED9               	movwf	fsr2l,c
  6081  005792  5010               	movf	(fputs@i+1)^0,w,c
  6082  005794  200B               	addwfc	(fputs@s+1)^0,w,c
  6083  005796  6EDA               	movwf	fsr2h,c
  6084  005798  50DF               	movf	indf2,w,c
  6085  00579A  6E0E               	movwf	fputs@c^0,c
  6086  00579C  500E               	movf	fputs@c^0,w,c
  6087  00579E  A4D8               	btfss	status,2,c
  6088  0057A0  EFD4  F02B         	goto	u2961
  6089  0057A4  EFD6  F02B         	goto	u2960
  6090  0057A8                     u2961:
  6091  0057A8  EFBB  F02B         	goto	l3484
  6092  0057AC                     u2960:
  6093  0057AC  0012               	return		;funcret
  6094  0057AE                     __end_of_fputs:
  6095                           	callstack 0
  6096                           
  6097 ;; *************** function _fputc *****************
  6098 ;; Defined at:
  6099 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  c               2    0[COMRAM] int 
  6102 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6103 ;;		 -> sprintf@f(11), 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2    0[COMRAM] int 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        9 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 2
  6122 ;; This function calls:
  6123 ;;		_putch
  6124 ;; This function is called by:
  6125 ;;		_pad
  6126 ;;		_vfpfcnvrt
  6127 ;;		_fputs
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text19
  6132  004E4A                     __ptext19:
  6133                           	callstack 0
  6134  004E4A                     _fputc:
  6135                           	callstack 23
  6136  004E4A  5003               	movf	fputc@fp^0,w,c
  6137  004E4C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6138  004E4E  B4D8               	btfsc	status,2,c
  6139  004E50  EF2C  F027         	goto	u2921
  6140  004E54  EF2E  F027         	goto	u2920
  6141  004E58                     u2921:
  6142  004E58  EF37  F027         	goto	l3472
  6143  004E5C                     u2920:
  6144  004E5C  5003               	movf	fputc@fp^0,w,c
  6145  004E5E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6146  004E60  A4D8               	btfss	status,2,c
  6147  004E62  EF35  F027         	goto	u2931
  6148  004E66  EF37  F027         	goto	u2930
  6149  004E6A                     u2931:
  6150  004E6A  EF3C  F027         	goto	l3474
  6151  004E6E                     u2930:
  6152  004E6E                     l3472:
  6153  004E6E  5001               	movf	fputc@c^0,w,c
  6154  004E70  EC52  F02E         	call	_putch
  6155  004E74  EF89  F027         	goto	l1444
  6156  004E78                     l3474:
  6157  004E78  EE20 F009          	lfsr	2,9
  6158  004E7C  5003               	movf	fputc@fp^0,w,c
  6159  004E7E  26D9               	addwf	fsr2l,f,c
  6160  004E80  5004               	movf	(fputc@fp+1)^0,w,c
  6161  004E82  22DA               	addwfc	fsr2h,f,c
  6162  004E84  50DE               	movf	postinc2,w,c
  6163  004E86  10DE               	iorwf	postinc2,w,c
  6164  004E88  B4D8               	btfsc	status,2,c
  6165  004E8A  EF49  F027         	goto	u2941
  6166  004E8E  EF4B  F027         	goto	u2940
  6167  004E92                     u2941:
  6168  004E92  EF66  F027         	goto	l3478
  6169  004E96                     u2940:
  6170  004E96  EE20 F009          	lfsr	2,9
  6171  004E9A  5003               	movf	fputc@fp^0,w,c
  6172  004E9C  26D9               	addwf	fsr2l,f,c
  6173  004E9E  5004               	movf	(fputc@fp+1)^0,w,c
  6174  004EA0  22DA               	addwfc	fsr2h,f,c
  6175  004EA2  EE10 F003          	lfsr	1,3
  6176  004EA6  5003               	movf	fputc@fp^0,w,c
  6177  004EA8  26E1               	addwf	fsr1l,f,c
  6178  004EAA  5004               	movf	(fputc@fp+1)^0,w,c
  6179  004EAC  22E2               	addwfc	fsr1h,f,c
  6180  004EAE  50DE               	movf	postinc2,w,c
  6181  004EB0  5CE6               	subwf	postinc1,w,c
  6182  004EB2  50E6               	movf	postinc1,w,c
  6183  004EB4  0A80               	xorlw	128
  6184  004EB6  6E09               	movwf	(??_fputc+4)^0,c
  6185  004EB8  50DE               	movf	postinc2,w,c
  6186  004EBA  0A80               	xorlw	128
  6187  004EBC  5809               	subwfb	(??_fputc+4)^0,w,c
  6188  004EBE  B0D8               	btfsc	status,0,c
  6189  004EC0  EF64  F027         	goto	u2951
  6190  004EC4  EF66  F027         	goto	u2950
  6191  004EC8                     u2951:
  6192  004EC8  EF89  F027         	goto	l1444
  6193  004ECC                     u2950:
  6194  004ECC                     l3478:
  6195  004ECC  EE20 F003          	lfsr	2,3
  6196  004ED0  5003               	movf	fputc@fp^0,w,c
  6197  004ED2  26D9               	addwf	fsr2l,f,c
  6198  004ED4  5004               	movf	(fputc@fp+1)^0,w,c
  6199  004ED6  22DA               	addwfc	fsr2h,f,c
  6200  004ED8  CFDE F005          	movff	postinc2,??_fputc
  6201  004EDC  CFDD F006          	movff	postdec2,??_fputc+1
  6202  004EE0  C003  FFD9         	movff	fputc@fp,fsr2l
  6203  004EE4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6204  004EE8  CFDE F007          	movff	postinc2,??_fputc+2
  6205  004EEC  CFDD F008          	movff	postdec2,??_fputc+3
  6206  004EF0  5005               	movf	??_fputc^0,w,c
  6207  004EF2  2407               	addwf	(??_fputc+2)^0,w,c
  6208  004EF4  6ED9               	movwf	fsr2l,c
  6209  004EF6  5006               	movf	(??_fputc+1)^0,w,c
  6210  004EF8  2008               	addwfc	(??_fputc+3)^0,w,c
  6211  004EFA  6EDA               	movwf	fsr2h,c
  6212  004EFC  C001  FFDF         	movff	fputc@c,indf2
  6213  004F00  EE20 F003          	lfsr	2,3
  6214  004F04  5003               	movf	fputc@fp^0,w,c
  6215  004F06  26D9               	addwf	fsr2l,f,c
  6216  004F08  5004               	movf	(fputc@fp+1)^0,w,c
  6217  004F0A  22DA               	addwfc	fsr2h,f,c
  6218  004F0C  2ADE               	incf	postinc2,f,c
  6219  004F0E  0E00               	movlw	0
  6220  004F10  22DD               	addwfc	postdec2,f,c
  6221  004F12                     l1444:
  6222  004F12  0012               	return		;funcret
  6223  004F14                     __end_of_fputc:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _putch *****************
  6227 ;; Defined at:
  6228 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  c               1    wreg     unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  c               1    0[COMRAM] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_fputc
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text20
  6257  005CA4                     __ptext20:
  6258                           	callstack 0
  6259  005CA4                     _putch:
  6260                           	callstack 23
  6261  005CA4  0012               	return		;funcret
  6262  005CA6                     __end_of_putch:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function _abs *****************
  6266 ;; Defined at:
  6267 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  a               2   18[COMRAM] int 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  2   18[COMRAM] int 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;Total ram usage:        4 bytes
  6286 ;; Hardware stack levels used: 1
  6287 ;; Hardware stack levels required when called: 1
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_dtoa
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text21
  6296  0058F6                     __ptext21:
  6297                           	callstack 0
  6298  0058F6                     _abs:
  6299                           	callstack 23
  6300  0058F6  BE14               	btfsc	(abs@a+1)^0,7,c
  6301  0058F8  EF88  F02C         	goto	u3150
  6302  0058FC  5014               	movf	(abs@a+1)^0,w,c
  6303  0058FE  E106               	bnz	u3151
  6304  005900  0413               	decf	abs@a^0,w,c
  6305  005902  B0D8               	btfsc	status,0,c
  6306  005904  EF86  F02C         	goto	u3151
  6307  005908  EF88  F02C         	goto	u3150
  6308  00590C                     u3151:
  6309  00590C  EF96  F02C         	goto	l1429
  6310  005910                     u3150:
  6311  005910  C013  F015         	movff	abs@a,??_abs
  6312  005914  C014  F016         	movff	abs@a+1,??_abs+1
  6313  005918  1E15               	comf	??_abs^0,f,c
  6314  00591A  1E16               	comf	(??_abs+1)^0,f,c
  6315  00591C  4A15               	infsnz	??_abs^0,f,c
  6316  00591E  2A16               	incf	(??_abs+1)^0,f,c
  6317  005920  C015  F013         	movff	??_abs,?_abs
  6318  005924  C016  F014         	movff	??_abs+1,?_abs+1
  6319  005928  EF9A  F02C         	goto	l1432
  6320  00592C                     l1429:
  6321  00592C  C013  F013         	movff	abs@a,?_abs
  6322  005930  C014  F014         	movff	abs@a+1,?_abs+1
  6323  005934                     l1432:
  6324  005934  0012               	return		;funcret
  6325  005936                     __end_of_abs:
  6326                           	callstack 0
  6327                           
  6328 ;; *************** function ___aomod *****************
  6329 ;; Defined at:
  6330 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  dividend        8    0[COMRAM] long long 
  6333 ;;  divisor         8    8[COMRAM] long long 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  sign            1   17[COMRAM] unsigned char 
  6336 ;;  counter         1   16[COMRAM] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  8    0[COMRAM] long long 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6346 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;Total ram usage:       18 bytes
  6351 ;; Hardware stack levels used: 1
  6352 ;; Hardware stack levels required when called: 1
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_dtoa
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text22
  6361  0045E8                     __ptext22:
  6362                           	callstack 0
  6363  0045E8                     ___aomod:
  6364                           	callstack 23
  6365  0045E8  0E00               	movlw	0
  6366  0045EA  6E12               	movwf	___aomod@sign^0,c
  6367  0045EC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6368  0045EE  EFFD  F022         	goto	u3050
  6369  0045F2  EFFB  F022         	goto	u3051
  6370  0045F6                     u3051:
  6371  0045F6  EF0F  F023         	goto	l3552
  6372  0045FA                     u3050:
  6373  0045FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6374  0045FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6375  0045FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6376  004600  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6377  004602  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6378  004604  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6379  004606  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6380  004608  6C01               	negf	___aomod@dividend^0,c
  6381  00460A  0E00               	movlw	0
  6382  00460C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6383  00460E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6384  004610  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6385  004612  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6386  004614  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6387  004616  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6388  004618  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6389  00461A  0E01               	movlw	1
  6390  00461C  6E12               	movwf	___aomod@sign^0,c
  6391  00461E                     l3552:
  6392  00461E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6393  004620  EF16  F023         	goto	u3060
  6394  004624  EF14  F023         	goto	u3061
  6395  004628                     u3061:
  6396  004628  EF26  F023         	goto	l3556
  6397  00462C                     u3060:
  6398  00462C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6399  00462E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6400  004630  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6401  004632  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6402  004634  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6403  004636  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6404  004638  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6405  00463A  6C09               	negf	___aomod@divisor^0,c
  6406  00463C  0E00               	movlw	0
  6407  00463E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6408  004640  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6409  004642  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6410  004644  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6411  004646  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6412  004648  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6413  00464A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6414  00464C                     l3556:
  6415  00464C  5009               	movf	___aomod@divisor^0,w,c
  6416  00464E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6417  004650  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6418  004652  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6419  004654  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6420  004656  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6421  004658  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6422  00465A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6423  00465C  B4D8               	btfsc	status,2,c
  6424  00465E  EF33  F023         	goto	u3071
  6425  004662  EF35  F023         	goto	u3070
  6426  004666                     u3071:
  6427  004666  EF7D  F023         	goto	l3572
  6428  00466A                     u3070:
  6429  00466A  0E01               	movlw	1
  6430  00466C  6E11               	movwf	___aomod@counter^0,c
  6431  00466E  EF43  F023         	goto	l3562
  6432  004672                     l3560:
  6433  004672  90D8               	bcf	status,0,c
  6434  004674  3609               	rlcf	___aomod@divisor^0,f,c
  6435  004676  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6436  004678  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6437  00467A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6438  00467C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6439  00467E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6440  004680  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6441  004682  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6442  004684  2A11               	incf	___aomod@counter^0,f,c
  6443  004686                     l3562:
  6444  004686  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6445  004688  EF48  F023         	goto	u3081
  6446  00468C  EF4A  F023         	goto	u3080
  6447  004690                     u3081:
  6448  004690  EF39  F023         	goto	l3560
  6449  004694                     u3080:
  6450  004694                     l3564:
  6451  004694  5009               	movf	___aomod@divisor^0,w,c
  6452  004696  5C01               	subwf	___aomod@dividend^0,w,c
  6453  004698  500A               	movf	(___aomod@divisor+1)^0,w,c
  6454  00469A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6455  00469C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6456  00469E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6457  0046A0  500C               	movf	(___aomod@divisor+3)^0,w,c
  6458  0046A2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6459  0046A4  500D               	movf	(___aomod@divisor+4)^0,w,c
  6460  0046A6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6461  0046A8  500E               	movf	(___aomod@divisor+5)^0,w,c
  6462  0046AA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6463  0046AC  500F               	movf	(___aomod@divisor+6)^0,w,c
  6464  0046AE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6465  0046B0  5010               	movf	(___aomod@divisor+7)^0,w,c
  6466  0046B2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6467  0046B4  A0D8               	btfss	status,0,c
  6468  0046B6  EF5F  F023         	goto	u3091
  6469  0046BA  EF61  F023         	goto	u3090
  6470  0046BE                     u3091:
  6471  0046BE  EF71  F023         	goto	l3568
  6472  0046C2                     u3090:
  6473  0046C2  5009               	movf	___aomod@divisor^0,w,c
  6474  0046C4  5E01               	subwf	___aomod@dividend^0,f,c
  6475  0046C6  500A               	movf	(___aomod@divisor+1)^0,w,c
  6476  0046C8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6477  0046CA  500B               	movf	(___aomod@divisor+2)^0,w,c
  6478  0046CC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6479  0046CE  500C               	movf	(___aomod@divisor+3)^0,w,c
  6480  0046D0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6481  0046D2  500D               	movf	(___aomod@divisor+4)^0,w,c
  6482  0046D4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6483  0046D6  500E               	movf	(___aomod@divisor+5)^0,w,c
  6484  0046D8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6485  0046DA  500F               	movf	(___aomod@divisor+6)^0,w,c
  6486  0046DC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6487  0046DE  5010               	movf	(___aomod@divisor+7)^0,w,c
  6488  0046E0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6489  0046E2                     l3568:
  6490  0046E2  90D8               	bcf	status,0,c
  6491  0046E4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6492  0046E6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6493  0046E8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6494  0046EA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6495  0046EC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6496  0046EE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6497  0046F0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6498  0046F2  3209               	rrcf	___aomod@divisor^0,f,c
  6499  0046F4  2E11               	decfsz	___aomod@counter^0,f,c
  6500  0046F6  EF4A  F023         	goto	l3564
  6501  0046FA                     l3572:
  6502  0046FA  5012               	movf	___aomod@sign^0,w,c
  6503  0046FC  B4D8               	btfsc	status,2,c
  6504  0046FE  EF83  F023         	goto	u3101
  6505  004702  EF85  F023         	goto	u3100
  6506  004706                     u3101:
  6507  004706  EF95  F023         	goto	l3576
  6508  00470A                     u3100:
  6509  00470A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6510  00470C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6511  00470E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6512  004710  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6513  004712  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6514  004714  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6515  004716  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6516  004718  6C01               	negf	___aomod@dividend^0,c
  6517  00471A  0E00               	movlw	0
  6518  00471C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6519  00471E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6520  004720  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6521  004722  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6522  004724  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6523  004726  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6524  004728  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6525  00472A                     l3576:
  6526  00472A  C001  F001         	movff	___aomod@dividend,?___aomod
  6527  00472E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6528  004732  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6529  004736  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6530  00473A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6531  00473E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6532  004742  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6533  004746  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6534  00474A  0012               	return		;funcret
  6535  00474C                     __end_of___aomod:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function ___aodiv *****************
  6539 ;; Defined at:
  6540 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  dividend        8    0[COMRAM] long long 
  6543 ;;  divisor         8    8[COMRAM] long long 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  quotient        8   18[COMRAM] long long 
  6546 ;;  sign            1   17[COMRAM] unsigned char 
  6547 ;;  counter         1   16[COMRAM] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  8    0[COMRAM] long long 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6557 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;Total ram usage:       26 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_dtoa
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text23
  6572  004460                     __ptext23:
  6573                           	callstack 0
  6574  004460                     ___aodiv:
  6575                           	callstack 23
  6576  004460  0E00               	movlw	0
  6577  004462  6E12               	movwf	___aodiv@sign^0,c
  6578  004464  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6579  004466  EF39  F022         	goto	u2980
  6580  00446A  EF37  F022         	goto	u2981
  6581  00446E                     u2981:
  6582  00446E  EF4B  F022         	goto	l3508
  6583  004472                     u2980:
  6584  004472  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6585  004474  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6586  004476  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6587  004478  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6588  00447A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6589  00447C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6590  00447E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6591  004480  6C09               	negf	___aodiv@divisor^0,c
  6592  004482  0E00               	movlw	0
  6593  004484  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6594  004486  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6595  004488  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6596  00448A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6597  00448C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6598  00448E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6599  004490  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6600  004492  0E01               	movlw	1
  6601  004494  6E12               	movwf	___aodiv@sign^0,c
  6602  004496                     l3508:
  6603  004496  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6604  004498  EF52  F022         	goto	u2990
  6605  00449C  EF50  F022         	goto	u2991
  6606  0044A0                     u2991:
  6607  0044A0  EF64  F022         	goto	l3514
  6608  0044A4                     u2990:
  6609  0044A4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6610  0044A6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6611  0044A8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6612  0044AA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6613  0044AC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6614  0044AE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6615  0044B0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6616  0044B2  6C01               	negf	___aodiv@dividend^0,c
  6617  0044B4  0E00               	movlw	0
  6618  0044B6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6619  0044B8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6620  0044BA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6621  0044BC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6622  0044BE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6623  0044C0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6624  0044C2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6625  0044C4  0E01               	movlw	1
  6626  0044C6  1A12               	xorwf	___aodiv@sign^0,f,c
  6627  0044C8                     l3514:
  6628  0044C8  EE20  F013         	lfsr	2,___aodiv@quotient
  6629  0044CC  0E07               	movlw	7
  6630  0044CE                     u3001:
  6631  0044CE  6ADE               	clrf	postinc2,c
  6632  0044D0  06E8               	decf	wreg,f,c
  6633  0044D2  E2FD               	bc	u3001
  6634  0044D4  5009               	movf	___aodiv@divisor^0,w,c
  6635  0044D6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6636  0044D8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6637  0044DA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6638  0044DC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6639  0044DE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6640  0044E0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6641  0044E2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6642  0044E4  B4D8               	btfsc	status,2,c
  6643  0044E6  EF77  F022         	goto	u3011
  6644  0044EA  EF79  F022         	goto	u3010
  6645  0044EE                     u3011:
  6646  0044EE  EFCB  F022         	goto	l3536
  6647  0044F2                     u3010:
  6648  0044F2  0E01               	movlw	1
  6649  0044F4  6E11               	movwf	___aodiv@counter^0,c
  6650  0044F6  EF87  F022         	goto	l3522
  6651  0044FA                     l3520:
  6652  0044FA  90D8               	bcf	status,0,c
  6653  0044FC  3609               	rlcf	___aodiv@divisor^0,f,c
  6654  0044FE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6655  004500  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6656  004502  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6657  004504  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6658  004506  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6659  004508  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6660  00450A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6661  00450C  2A11               	incf	___aodiv@counter^0,f,c
  6662  00450E                     l3522:
  6663  00450E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6664  004510  EF8C  F022         	goto	u3021
  6665  004514  EF8E  F022         	goto	u3020
  6666  004518                     u3021:
  6667  004518  EF7D  F022         	goto	l3520
  6668  00451C                     u3020:
  6669  00451C                     l3524:
  6670  00451C  90D8               	bcf	status,0,c
  6671  00451E  3613               	rlcf	___aodiv@quotient^0,f,c
  6672  004520  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6673  004522  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6674  004524  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6675  004526  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6676  004528  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6677  00452A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6678  00452C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6679  00452E  5009               	movf	___aodiv@divisor^0,w,c
  6680  004530  5C01               	subwf	___aodiv@dividend^0,w,c
  6681  004532  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6682  004534  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6683  004536  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6684  004538  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6685  00453A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6686  00453C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6687  00453E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6688  004540  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6689  004542  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6690  004544  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6691  004546  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6692  004548  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6693  00454A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6694  00454C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6695  00454E  A0D8               	btfss	status,0,c
  6696  004550  EFAC  F022         	goto	u3031
  6697  004554  EFAE  F022         	goto	u3030
  6698  004558                     u3031:
  6699  004558  EFBF  F022         	goto	l3532
  6700  00455C                     u3030:
  6701  00455C  5009               	movf	___aodiv@divisor^0,w,c
  6702  00455E  5E01               	subwf	___aodiv@dividend^0,f,c
  6703  004560  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6704  004562  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6705  004564  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6706  004566  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6707  004568  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6708  00456A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6709  00456C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6710  00456E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6711  004570  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6712  004572  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6713  004574  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6714  004576  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6715  004578  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6716  00457A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6717  00457C  8013               	bsf	___aodiv@quotient^0,0,c
  6718  00457E                     l3532:
  6719  00457E  90D8               	bcf	status,0,c
  6720  004580  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6721  004582  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6722  004584  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6723  004586  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6724  004588  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6725  00458A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6726  00458C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6727  00458E  3209               	rrcf	___aodiv@divisor^0,f,c
  6728  004590  2E11               	decfsz	___aodiv@counter^0,f,c
  6729  004592  EF8E  F022         	goto	l3524
  6730  004596                     l3536:
  6731  004596  5012               	movf	___aodiv@sign^0,w,c
  6732  004598  B4D8               	btfsc	status,2,c
  6733  00459A  EFD1  F022         	goto	u3041
  6734  00459E  EFD3  F022         	goto	u3040
  6735  0045A2                     u3041:
  6736  0045A2  EFE3  F022         	goto	l3540
  6737  0045A6                     u3040:
  6738  0045A6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6739  0045A8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6740  0045AA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6741  0045AC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6742  0045AE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6743  0045B0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6744  0045B2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6745  0045B4  6C13               	negf	___aodiv@quotient^0,c
  6746  0045B6  0E00               	movlw	0
  6747  0045B8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6748  0045BA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6749  0045BC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6750  0045BE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6751  0045C0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6752  0045C2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6753  0045C4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6754  0045C6                     l3540:
  6755  0045C6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6756  0045CA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6757  0045CE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6758  0045D2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6759  0045D6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6760  0045DA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6761  0045DE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6762  0045E2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6763  0045E6  0012               	return		;funcret
  6764  0045E8                     __end_of___aodiv:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function _sendStringSerial4 *****************
  6768 ;; Defined at:
  6769 ;;		line 35 in file "serial.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  string          2    1[COMRAM] PTR unsigned char 
  6772 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;Total ram usage:        2 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; Hardware stack levels required when called: 2
  6791 ;; This function calls:
  6792 ;;		_sendCharSerial4
  6793 ;; This function is called by:
  6794 ;;		_color_display
  6795 ;;		_color_predict
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text24
  6800  005A4C                     __ptext24:
  6801                           	callstack 0
  6802  005A4C                     _sendStringSerial4:
  6803                           	callstack 26
  6804  005A4C                     
  6805                           ;serial.c: 37:     while(*string != 0){
  6806  005A4C  EF31  F02D         	goto	l4272
  6807  005A50                     l4268:
  6808                           
  6809                           ;serial.c: 38:   sendCharSerial4(*string++);}
  6810  005A50  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6811  005A54  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6812  005A58  50DF               	movf	indf2,w,c
  6813  005A5A  EC1F  F02E         	call	_sendCharSerial4
  6814  005A5E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6815  005A60  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6816  005A62                     l4272:
  6817                           
  6818                           ;serial.c: 37:     while(*string != 0){
  6819  005A62  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6820  005A66  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6821  005A6A  50DF               	movf	indf2,w,c
  6822  005A6C  A4D8               	btfss	status,2,c
  6823  005A6E  EF3B  F02D         	goto	u4231
  6824  005A72  EF3D  F02D         	goto	u4230
  6825  005A76                     u4231:
  6826  005A76  EF28  F02D         	goto	l4268
  6827  005A7A                     u4230:
  6828  005A7A  0012               	return		;funcret
  6829  005A7C                     __end_of_sendStringSerial4:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _sendCharSerial4 *****************
  6833 ;; Defined at:
  6834 ;;		line 29 in file "serial.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  charToSend      1    wreg     unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  charToSend      1    0[COMRAM] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      void 
  6841 ;; Registers used:
  6842 ;;		wreg
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;Total ram usage:        1 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_sendStringSerial4
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text25
  6863  005C3E                     __ptext25:
  6864                           	callstack 0
  6865  005C3E                     _sendCharSerial4:
  6866                           	callstack 26
  6867                           
  6868                           ;incstack = 0
  6869                           ;sendCharSerial4@charToSend stored from wreg
  6870  005C3E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6871  005C40                     l353:
  6872  005C40  010E               	movlb	14	; () banked
  6873  005C42  A537               	btfss	55,2,b	;volatile
  6874  005C44  EF26  F02E         	goto	u3961
  6875  005C48  EF28  F02E         	goto	u3960
  6876  005C4C                     u3961:
  6877  005C4C  EF20  F02E         	goto	l353
  6878  005C50                     u3960:
  6879  005C50                     
  6880                           ; BSR set to: 14
  6881                           ;serial.c: 31:     TX4REG = charToSend;
  6882  005C50  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6883  005C54                     
  6884                           ; BSR set to: 14
  6885  005C54  0012               	return		;funcret
  6886  005C56                     __end_of_sendCharSerial4:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _straight_action *****************
  6890 ;; Defined at:
  6891 ;;		line 51 in file "movement.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  mL              2   29[BANK0 ] PTR struct DC_motor
  6894 ;;		 -> main@motorL(9), 
  6895 ;;  mR              2   31[BANK0 ] PTR struct DC_motor
  6896 ;;		 -> main@motorR(9), 
  6897 ;;  amb_light       2   33[BANK0 ] unsigned int 
  6898 ;;  start_time      2   35[BANK0 ] unsigned int 
  6899 ;;  stop_time       2   37[BANK0 ] unsigned int 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  stop_signal     1   41[BANK0 ] unsigned char 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6911 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;Total ram usage:       13 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; Hardware stack levels required when called: 6
  6918 ;; This function calls:
  6919 ;;		_distance_measure
  6920 ;;		_fullSpeedAhead
  6921 ;;		_stop
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text26
  6928  0052E6                     __ptext26:
  6929                           	callstack 0
  6930  0052E6                     _straight_action:
  6931                           	callstack 24
  6932  0052E6                     
  6933                           ;movement.c: 51: void straight_action(struct DC_motor *mL, struct DC_motor *mR, unsigned
      +                           int amb_light, unsigned int start_time, unsigned int stop_time);movement.c: 52: {;movem
      +                          ent.c: 53:     unsigned char stop_signal = 0;
  6934  0052E6  0E00               	movlw	0
  6935  0052E8  0100               	movlb	0	; () banked
  6936  0052EA  6F89               	movwf	straight_action@stop_signal& (0+255),b
  6937  0052EC                     
  6938                           ; BSR set to: 0
  6939                           ;movement.c: 56:     T0CON0bits.T0EN=1;
  6940  0052EC  8ED5               	bsf	213,7,c	;volatile
  6941  0052EE                     
  6942                           ; BSR set to: 0
  6943                           ;movement.c: 58:     while (stop_signal == 0){
  6944  0052EE  EF93  F029         	goto	l5284
  6945  0052F2                     l5280:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;movement.c: 59:         fullSpeedAhead(mL,mR);
  6949  0052F2  C07D  F01A         	movff	straight_action@mL,fullSpeedAhead@mL
  6950  0052F6  C07E  F01B         	movff	straight_action@mL+1,fullSpeedAhead@mL+1
  6951  0052FA  C07F  F01C         	movff	straight_action@mR,fullSpeedAhead@mR
  6952  0052FE  C080  F01D         	movff	straight_action@mR+1,fullSpeedAhead@mR+1
  6953  005302  EC50  F028         	call	_fullSpeedAhead	;wreg free
  6954  005306                     
  6955                           ;movement.c: 60:         stop_signal = distance_measure(mL,mR,amb_light);
  6956  005306  C07D  F06A         	movff	straight_action@mL,distance_measure@mL
  6957  00530A  C07E  F06B         	movff	straight_action@mL+1,distance_measure@mL+1
  6958  00530E  C07F  F06C         	movff	straight_action@mR,distance_measure@mR
  6959  005312  C080  F06D         	movff	straight_action@mR+1,distance_measure@mR+1
  6960  005316  C081  F06E         	movff	straight_action@amb_light,distance_measure@amb_light
  6961  00531A  C082  F06F         	movff	straight_action@amb_light+1,distance_measure@amb_light+1
  6962  00531E  ECED  F027         	call	_distance_measure	;wreg free
  6963  005322  0100               	movlb	0	; () banked
  6964  005324  6F89               	movwf	straight_action@stop_signal& (0+255),b
  6965  005326                     l5284:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;movement.c: 58:     while (stop_signal == 0){
  6969  005326  5189               	movf	straight_action@stop_signal& (0+255),w,b
  6970  005328  B4D8               	btfsc	status,2,c
  6971  00532A  EF99  F029         	goto	u5661
  6972  00532E  EF9B  F029         	goto	u5660
  6973  005332                     u5661:
  6974  005332  EF79  F029         	goto	l5280
  6975  005336                     u5660:
  6976  005336                     
  6977                           ; BSR set to: 0
  6978                           ;movement.c: 62:     T0CON0bits.T0EN=0;
  6979  005336  9ED5               	bcf	213,7,c	;volatile
  6980  005338                     
  6981                           ; BSR set to: 0
  6982                           ;movement.c: 64:     stop(mL,mR);
  6983  005338  C07D  F01A         	movff	straight_action@mL,stop@mL
  6984  00533C  C07E  F01B         	movff	straight_action@mL+1,stop@mL+1
  6985  005340  C07F  F01C         	movff	straight_action@mR,stop@mR
  6986  005344  C080  F01D         	movff	straight_action@mR+1,stop@mR+1
  6987  005348  EC14  F029         	call	_stop	;wreg free
  6988  00534C                     
  6989                           ;movement.c: 65:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6990  00534C  0E52               	movlw	82
  6991  00534E  0100               	movlb	0	; () banked
  6992  005350  6F88               	movwf	(??_straight_action+1)& (0+255),b
  6993  005352  0E2B               	movlw	43
  6994  005354  6F87               	movwf	??_straight_action& (0+255),b
  6995  005356  0E00               	movlw	0
  6996  005358                     u5987:
  6997  005358  2EE8               	decfsz	wreg,f,c
  6998  00535A  D7FE               	bra	u5987
  6999  00535C  2F87               	decfsz	??_straight_action& (0+255),f,b
  7000  00535E  D7FC               	bra	u5987
  7001  005360  2F88               	decfsz	(??_straight_action+1)& (0+255),f,b
  7002  005362  D7FA               	bra	u5987
  7003  005364  F000               	nop	
  7004  005366  0012               	return		;funcret
  7005  005368                     __end_of_straight_action:
  7006                           	callstack 0
  7007                           
  7008 ;; *************** function _distance_measure *****************
  7009 ;; Defined at:
  7010 ;;		line 401 in file "color.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  7013 ;;		 -> main@motorL(9), 
  7014 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  7015 ;;		 -> main@motorR(9), 
  7016 ;;  amb_light       2   14[BANK0 ] unsigned int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  threshold       2   26[BANK0 ] unsigned int 
  7019 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  7020 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  7021 ;;  stop            1   28[BANK0 ] unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      unsigned char 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7031 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7033 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;Total ram usage:       19 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 5
  7038 ;; This function calls:
  7039 ;;		_LED_C
  7040 ;;		___flmul
  7041 ;;		___xxtofl
  7042 ;;		_color_read_Clear
  7043 ;;		_color_read_Green
  7044 ;;		_lroundf
  7045 ;; This function is called by:
  7046 ;;		_straight_action
  7047 ;;		_test_function
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text27
  7052  004FDA                     __ptext27:
  7053                           	callstack 0
  7054  004FDA                     _distance_measure:
  7055                           	callstack 24
  7056  004FDA  0E00               	movlw	0
  7057  004FDC  0100               	movlb	0	; () banked
  7058  004FDE  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  7059  004FE0  0E00               	movlw	0
  7060  004FE2  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  7061                           
  7062                           ;color.c: 404:     unsigned char stop = 0;
  7063  004FE4  0E00               	movlw	0
  7064  004FE6  6F7C               	movwf	distance_measure@stop& (0+255),b
  7065                           
  7066                           ;color.c: 405:     unsigned int threshold = 0;
  7067  004FE8  0E00               	movlw	0
  7068  004FEA  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  7069  004FEC  0E00               	movlw	0
  7070  004FEE  6F7A               	movwf	distance_measure@threshold& (0+255),b
  7071  004FF0                     
  7072                           ; BSR set to: 0
  7073                           ;color.c: 406:     LED_C();
  7074  004FF0  ECD1  F02D         	call	_LED_C	;wreg free
  7075  004FF4                     
  7076                           ;color.c: 407:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7077  004FF4  0E09               	movlw	9
  7078  004FF6  0100               	movlb	0	; () banked
  7079  004FF8  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  7080  004FFA  0E1E               	movlw	30
  7081  004FFC  6F70               	movwf	??_distance_measure& (0+255),b
  7082  004FFE  0EE4               	movlw	228
  7083  005000                     u5997:
  7084  005000  2EE8               	decfsz	wreg,f,c
  7085  005002  D7FE               	bra	u5997
  7086  005004  2F70               	decfsz	??_distance_measure& (0+255),f,b
  7087  005006  D7FC               	bra	u5997
  7088  005008  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  7089  00500A  D7FA               	bra	u5997
  7090  00500C  F000               	nop	
  7091  00500E                     
  7092                           ;color.c: 408:     CC_amb = color_read_Clear();
  7093  00500E  EC6A  F02B         	call	_color_read_Clear	;wreg free
  7094  005012  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  7095  005016  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  7096  00501A  EC1A  F02B         	call	_color_read_Green	;wreg free
  7097  00501E                     
  7098                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  7099  00501E  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  7100  005022  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  7101  005026  6A03               	clrf	(___xxtofl@val+2)^0,c
  7102  005028  6A04               	clrf	(___xxtofl@val+3)^0,c
  7103  00502A  0E00               	movlw	0
  7104  00502C  ECEE  F01E         	call	___xxtofl
  7105  005030  C001  F028         	movff	?___xxtofl,___flmul@b
  7106  005034  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  7107  005038  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  7108  00503C  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  7109  005040  0ECD               	movlw	205
  7110  005042  6E2C               	movwf	___flmul@a^0,c
  7111  005044  0ECC               	movlw	204
  7112  005046  6E2D               	movwf	(___flmul@a+1)^0,c
  7113  005048  0E8C               	movlw	140
  7114  00504A  6E2E               	movwf	(___flmul@a+2)^0,c
  7115  00504C  0E3F               	movlw	63
  7116  00504E  6E2F               	movwf	(___flmul@a+3)^0,c
  7117  005050  EC6C  F00F         	call	___flmul	;wreg free
  7118  005054  C028  F074         	movff	?___flmul,_distance_measure$3162
  7119  005058  C029  F075         	movff	?___flmul+1,_distance_measure$3162+1
  7120  00505C  C02A  F076         	movff	?___flmul+2,_distance_measure$3162+2
  7121  005060  C02B  F077         	movff	?___flmul+3,_distance_measure$3162+3
  7122  005064                     
  7123                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  7124  005064  C074  F066         	movff	_distance_measure$3162,lroundf@x
  7125  005068  C075  F067         	movff	_distance_measure$3162+1,lroundf@x+1
  7126  00506C  C076  F068         	movff	_distance_measure$3162+2,lroundf@x+2
  7127  005070  C077  F069         	movff	_distance_measure$3162+3,lroundf@x+3
  7128  005074  ECB8  F02C         	call	_lroundf	;wreg free
  7129  005078  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  7130  00507C  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  7131  005080                     
  7132                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  7133  005080  0100               	movlb	0	; () banked
  7134  005082  517A               	movf	distance_measure@threshold& (0+255),w,b
  7135  005084  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  7136  005086  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  7137  005088  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  7138  00508A  A0D8               	btfss	status,0,c
  7139  00508C  EF4A  F028         	goto	u5321
  7140  005090  EF4C  F028         	goto	u5320
  7141  005094                     u5321:
  7142  005094  EF4E  F028         	goto	l160
  7143  005098                     u5320:
  7144  005098                     
  7145                           ; BSR set to: 0
  7146  005098  0E01               	movlw	1
  7147  00509A  6F7C               	movwf	distance_measure@stop& (0+255),b
  7148  00509C                     l160:
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;color.c: 414:     return stop;
  7152  00509C  517C               	movf	distance_measure@stop& (0+255),w,b
  7153  00509E                     
  7154                           ; BSR set to: 0
  7155  00509E  0012               	return		;funcret
  7156  0050A0                     __end_of_distance_measure:
  7157                           	callstack 0
  7158                           
  7159 ;; *************** function _short_burst *****************
  7160 ;; Defined at:
  7161 ;;		line 44 in file "movement.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7164 ;;		 -> main@motorL(9), 
  7165 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7166 ;;		 -> main@motorR(9), 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;Total ram usage:        6 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; Hardware stack levels required when called: 4
  7185 ;; This function calls:
  7186 ;;		_fullSpeedAhead
  7187 ;;		_stop
  7188 ;; This function is called by:
  7189 ;;		_main
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text28
  7194  0057AE                     __ptext28:
  7195                           	callstack 0
  7196  0057AE                     _short_burst:
  7197                           	callstack 26
  7198  0057AE                     
  7199                           ;movement.c: 44: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          45: {;movement.c: 46:     fullSpeedAhead(mL,mR);
  7200  0057AE  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7201  0057B2  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7202  0057B6  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7203  0057BA  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7204  0057BE  EC50  F028         	call	_fullSpeedAhead	;wreg free
  7205  0057C2                     
  7206                           ;movement.c: 47:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7207  0057C2  0E29               	movlw	41
  7208  0057C4  6E25               	movwf	(??_short_burst+1)^0,c
  7209  0057C6  0E96               	movlw	150
  7210  0057C8  6E24               	movwf	??_short_burst^0,c
  7211  0057CA  0E7F               	movlw	127
  7212  0057CC                     u6007:
  7213  0057CC  2EE8               	decfsz	wreg,f,c
  7214  0057CE  D7FE               	bra	u6007
  7215  0057D0  2E24               	decfsz	??_short_burst^0,f,c
  7216  0057D2  D7FC               	bra	u6007
  7217  0057D4  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7218  0057D6  D7FA               	bra	u6007
  7219  0057D8  F000               	nop	
  7220  0057DA                     
  7221                           ;movement.c: 48:     stop(mL,mR);
  7222  0057DA  C020  F01A         	movff	short_burst@mL,stop@mL
  7223  0057DE  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7224  0057E2  C022  F01C         	movff	short_burst@mR,stop@mR
  7225  0057E6  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7226  0057EA  EC14  F029         	call	_stop	;wreg free
  7227  0057EE  0012               	return		;funcret
  7228  0057F0                     __end_of_short_burst:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _setup *****************
  7232 ;; Defined at:
  7233 ;;		line 29 in file "movement.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  amb_light       2   24[BANK0 ] unsigned int 
  7236 ;;  white           2   26[BANK0 ] PTR struct white_card
  7237 ;;		 -> main@white(28), 
  7238 ;;  amb             2   28[BANK0 ] PTR struct color_rgb
  7239 ;;		 -> main@amb(8), 
  7240 ;;  mL              2   30[BANK0 ] PTR struct DC_motor
  7241 ;;		 -> main@motorL(9), 
  7242 ;;  mR              2   32[BANK0 ] PTR struct DC_motor
  7243 ;;		 -> main@motorR(9), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7255 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;Total ram usage:       12 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 7
  7262 ;; This function calls:
  7263 ;;		_LED_OFF
  7264 ;;		_amb_light_measure
  7265 ;;		_calibrate_white
  7266 ;;		_calibration_motor
  7267 ;; This function is called by:
  7268 ;;		_main
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text29
  7273  004C90                     __ptext29:
  7274                           	callstack 0
  7275  004C90                     _setup:
  7276                           	callstack 23
  7277  004C90                     
  7278                           ;movement.c: 29: void setup(unsigned int amb_light, struct white_card *white,struct colo
      +                          r_rgb*amb,struct DC_motor *mL, struct DC_motor *mR);movement.c: 30: {;movement.c: 31:   
      +                            LED_OFF();
  7279  004C90  ECA1  F02D         	call	_LED_OFF	;wreg free
  7280  004C94                     
  7281                           ;movement.c: 32:     LATDbits.LATD7 = 1;
  7282  004C94  8E7C               	bsf	124,7,c	;volatile
  7283  004C96                     
  7284                           ;movement.c: 33:     LATHbits.LATH3 = 1;
  7285  004C96  8680               	bsf	128,3,c	;volatile
  7286  004C98                     l489:
  7287  004C98  B48E               	btfsc	142,2,c	;volatile
  7288  004C9A  EF51  F026         	goto	u5511
  7289  004C9E  EF53  F026         	goto	u5510
  7290  004CA2                     u5511:
  7291  004CA2  EF4C  F026         	goto	l489
  7292  004CA6                     u5510:
  7293  004CA6                     
  7294                           ;movement.c: 35:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LATD7 = 0; _de
      +                          lay((unsigned long)((500)*(64000000/4000.0)));}
  7295  004CA6  B48E               	btfsc	142,2,c	;volatile
  7296  004CA8  EF58  F026         	goto	u5521
  7297  004CAC  EF5A  F026         	goto	u5520
  7298  004CB0                     u5521:
  7299  004CB0  EF6D  F026         	goto	l493
  7300  004CB4                     u5520:
  7301  004CB4  C07A  F00C         	movff	setup@white,calibrate_white@w
  7302  004CB8  C07B  F00D         	movff	setup@white+1,calibrate_white@w+1
  7303  004CBC  EC37  F01B         	call	_calibrate_white	;wreg free
  7304  004CC0  9E7C               	bcf	124,7,c	;volatile
  7305  004CC2  0E29               	movlw	41
  7306  004CC4  0100               	movlb	0	; () banked
  7307  004CC6  6F83               	movwf	(??_setup+1)& (0+255),b
  7308  004CC8  0E96               	movlw	150
  7309  004CCA  6F82               	movwf	??_setup& (0+255),b
  7310  004CCC  0E7F               	movlw	127
  7311  004CCE                     u6017:
  7312  004CCE  2EE8               	decfsz	wreg,f,c
  7313  004CD0  D7FE               	bra	u6017
  7314  004CD2  2F82               	decfsz	??_setup& (0+255),f,b
  7315  004CD4  D7FC               	bra	u6017
  7316  004CD6  2F83               	decfsz	(??_setup+1)& (0+255),f,b
  7317  004CD8  D7FA               	bra	u6017
  7318  004CDA                     l493:
  7319  004CDA  B68E               	btfsc	142,3,c	;volatile
  7320  004CDC  EF72  F026         	goto	u5531
  7321  004CE0  EF74  F026         	goto	u5530
  7322  004CE4                     u5531:
  7323  004CE4  EF6D  F026         	goto	l493
  7324  004CE8                     u5530:
  7325  004CE8                     
  7326                           ;movement.c: 37:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb); LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7327  004CE8  B68E               	btfsc	142,3,c	;volatile
  7328  004CEA  EF79  F026         	goto	u5541
  7329  004CEE  EF7B  F026         	goto	u5540
  7330  004CF2                     u5541:
  7331  004CF2  EF8E  F026         	goto	l5214
  7332  004CF6                     u5540:
  7333  004CF6  C07C  F06A         	movff	setup@amb,amb_light_measure@amb
  7334  004CFA  C07D  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7335  004CFE  ECA6  F023         	call	_amb_light_measure	;wreg free
  7336  004D02  9680               	bcf	128,3,c	;volatile
  7337  004D04  0E29               	movlw	41
  7338  004D06  0100               	movlb	0	; () banked
  7339  004D08  6F83               	movwf	(??_setup+1)& (0+255),b
  7340  004D0A  0E96               	movlw	150
  7341  004D0C  6F82               	movwf	??_setup& (0+255),b
  7342  004D0E  0E7F               	movlw	127
  7343  004D10                     u6027:
  7344  004D10  2EE8               	decfsz	wreg,f,c
  7345  004D12  D7FE               	bra	u6027
  7346  004D14  2F82               	decfsz	??_setup& (0+255),f,b
  7347  004D16  D7FC               	bra	u6027
  7348  004D18  2F83               	decfsz	(??_setup+1)& (0+255),f,b
  7349  004D1A  D7FA               	bra	u6027
  7350  004D1C                     l5214:
  7351                           
  7352                           ;movement.c: 38:     LATDbits.LATD7 = 1;
  7353  004D1C  8E7C               	bsf	124,7,c	;volatile
  7354  004D1E                     
  7355                           ;movement.c: 39:     if (!PORTFbits.RF3){calibration_motor(mL,mR);}
  7356  004D1E  B68E               	btfsc	142,3,c	;volatile
  7357  004D20  EF94  F026         	goto	u5551
  7358  004D24  EF96  F026         	goto	u5550
  7359  004D28                     u5551:
  7360  004D28  EFA0  F026         	goto	l498
  7361  004D2C                     u5550:
  7362  004D2C  C07E  F031         	movff	setup@mL,calibration_motor@mL
  7363  004D30  C07F  F032         	movff	setup@mL+1,calibration_motor@mL+1
  7364  004D34  C080  F033         	movff	setup@mR,calibration_motor@mR
  7365  004D38  C081  F034         	movff	setup@mR+1,calibration_motor@mR+1
  7366  004D3C  ECD1  F025         	call	_calibration_motor	;wreg free
  7367  004D40                     l498:
  7368  004D40  B48E               	btfsc	142,2,c	;volatile
  7369  004D42  EFA5  F026         	goto	u5561
  7370  004D46  EFA7  F026         	goto	u5560
  7371  004D4A                     u5561:
  7372  004D4A  EFA0  F026         	goto	l498
  7373  004D4E                     u5560:
  7374  004D4E                     
  7375                           ;movement.c: 41:     if (!PORTFbits.RF2){LATDbits.LATD7 = 0;_delay((unsigned long)((500)
      +                          *(64000000/4000.0)));}
  7376  004D4E  B48E               	btfsc	142,2,c	;volatile
  7377  004D50  EFAC  F026         	goto	u5571
  7378  004D54  EFAE  F026         	goto	u5570
  7379  004D58                     u5571:
  7380  004D58  EFBB  F026         	goto	l502
  7381  004D5C                     u5570:
  7382  004D5C  9E7C               	bcf	124,7,c	;volatile
  7383  004D5E  0E29               	movlw	41
  7384  004D60  0100               	movlb	0	; () banked
  7385  004D62  6F83               	movwf	(??_setup+1)& (0+255),b
  7386  004D64  0E96               	movlw	150
  7387  004D66  6F82               	movwf	??_setup& (0+255),b
  7388  004D68  0E7F               	movlw	127
  7389  004D6A                     u6037:
  7390  004D6A  2EE8               	decfsz	wreg,f,c
  7391  004D6C  D7FE               	bra	u6037
  7392  004D6E  2F82               	decfsz	??_setup& (0+255),f,b
  7393  004D70  D7FC               	bra	u6037
  7394  004D72  2F83               	decfsz	(??_setup+1)& (0+255),f,b
  7395  004D74  D7FA               	bra	u6037
  7396  004D76                     l502:
  7397  004D76  0012               	return		;funcret
  7398  004D78                     __end_of_setup:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _calibration_motor *****************
  7402 ;; Defined at:
  7403 ;;		line 62 in file "test_and_calibration.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  mL              2   48[COMRAM] PTR struct DC_motor
  7406 ;;		 -> main@motorL(9), 
  7407 ;;  mR              2   50[COMRAM] PTR struct DC_motor
  7408 ;;		 -> main@motorR(9), 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;Total ram usage:        6 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 6
  7427 ;; This function calls:
  7428 ;;		_test_action
  7429 ;; This function is called by:
  7430 ;;		_setup
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text30
  7435  004BA2                     __ptext30:
  7436                           	callstack 0
  7437  004BA2                     _calibration_motor:
  7438                           	callstack 23
  7439  004BA2                     l658:
  7440                           
  7441                           ;test_and_calibration.c: 65:         LATDbits.LATD7 = 1;
  7442  004BA2  8E7C               	bsf	124,7,c	;volatile
  7443                           
  7444                           ;test_and_calibration.c: 66:         LATHbits.LATH3 = 1;
  7445  004BA4  8680               	bsf	128,3,c	;volatile
  7446                           
  7447                           ;test_and_calibration.c: 68:         if (!PORTFbits.RF2) {
  7448  004BA6  B48E               	btfsc	142,2,c	;volatile
  7449  004BA8  EFD8  F025         	goto	u5441
  7450  004BAC  EFDA  F025         	goto	u5440
  7451  004BB0                     u5441:
  7452  004BB0  EF06  F026         	goto	l659
  7453  004BB4                     u5440:
  7454  004BB4                     
  7455                           ;test_and_calibration.c: 69:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  7456  004BB4  0E19               	movlw	25
  7457  004BB6  6E36               	movwf	(??_calibration_motor+1)^0,c
  7458  004BB8  0E5A               	movlw	90
  7459  004BBA  6E35               	movwf	??_calibration_motor^0,c
  7460  004BBC  0EB2               	movlw	178
  7461  004BBE                     u6047:
  7462  004BBE  2EE8               	decfsz	wreg,f,c
  7463  004BC0  D7FE               	bra	u6047
  7464  004BC2  2E35               	decfsz	??_calibration_motor^0,f,c
  7465  004BC4  D7FC               	bra	u6047
  7466  004BC6  2E36               	decfsz	(??_calibration_motor+1)^0,f,c
  7467  004BC8  D7FA               	bra	u6047
  7468  004BCA                     
  7469                           ;test_and_calibration.c: 70:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7470  004BCA  B48E               	btfsc	142,2,c	;volatile
  7471  004BCC  EFEA  F025         	goto	u5451
  7472  004BD0  EFEC  F025         	goto	u5450
  7473  004BD4                     u5451:
  7474  004BD4  EFFD  F025         	goto	l5102
  7475  004BD8                     u5450:
  7476  004BD8  9E7C               	bcf	124,7,c	;volatile
  7477  004BDA  0E19               	movlw	25
  7478  004BDC  6E36               	movwf	(??_calibration_motor+1)^0,c
  7479  004BDE  0E5A               	movlw	90
  7480  004BE0  6E35               	movwf	??_calibration_motor^0,c
  7481  004BE2  0EB2               	movlw	178
  7482  004BE4                     u6057:
  7483  004BE4  2EE8               	decfsz	wreg,f,c
  7484  004BE6  D7FE               	bra	u6057
  7485  004BE8  2E35               	decfsz	??_calibration_motor^0,f,c
  7486  004BEA  D7FC               	bra	u6057
  7487  004BEC  2E36               	decfsz	(??_calibration_motor+1)^0,f,c
  7488  004BEE  D7FA               	bra	u6057
  7489  004BF0  0E05               	movlw	5
  7490  004BF2  0100               	movlb	0	; () banked
  7491  004BF4  27FE               	addwf	_SENSITIVITY& (0+255),f,b
  7492  004BF6  0E00               	movlw	0
  7493  004BF8  23FF               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7494  004BFA                     l5102:
  7495                           
  7496                           ;test_and_calibration.c: 71:             if (!PORTFbits.RF3){break;}
  7497  004BFA  B68E               	btfsc	142,3,c	;volatile
  7498  004BFC  EF02  F026         	goto	u5461
  7499  004C00  EF04  F026         	goto	u5460
  7500  004C04                     u5461:
  7501  004C04  EF06  F026         	goto	l659
  7502  004C08                     u5460:
  7503  004C08  EF3B  F026         	goto	l662
  7504  004C0C                     l659:
  7505                           
  7506                           ;test_and_calibration.c: 73:         if (!PORTFbits.RF3) {
  7507  004C0C  B68E               	btfsc	142,3,c	;volatile
  7508  004C0E  EF0B  F026         	goto	u5471
  7509  004C12  EF0D  F026         	goto	u5470
  7510  004C16                     u5471:
  7511  004C16  EFD1  F025         	goto	l658
  7512  004C1A                     u5470:
  7513  004C1A                     
  7514                           ;test_and_calibration.c: 74:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  7515  004C1A  0E19               	movlw	25
  7516  004C1C  6E36               	movwf	(??_calibration_motor+1)^0,c
  7517  004C1E  0E5A               	movlw	90
  7518  004C20  6E35               	movwf	??_calibration_motor^0,c
  7519  004C22  0EB2               	movlw	178
  7520  004C24                     u6067:
  7521  004C24  2EE8               	decfsz	wreg,f,c
  7522  004C26  D7FE               	bra	u6067
  7523  004C28  2E35               	decfsz	??_calibration_motor^0,f,c
  7524  004C2A  D7FC               	bra	u6067
  7525  004C2C  2E36               	decfsz	(??_calibration_motor+1)^0,f,c
  7526  004C2E  D7FA               	bra	u6067
  7527  004C30                     
  7528                           ;test_and_calibration.c: 75:             if (!PORTFbits.RF2){break;}
  7529  004C30  B48E               	btfsc	142,2,c	;volatile
  7530  004C32  EF1D  F026         	goto	u5481
  7531  004C36  EF1F  F026         	goto	u5480
  7532  004C3A                     u5481:
  7533  004C3A  EF21  F026         	goto	l664
  7534  004C3E                     u5480:
  7535  004C3E  EF3B  F026         	goto	l662
  7536  004C42                     l664:
  7537                           
  7538                           ;test_and_calibration.c: 76:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7539  004C42  B68E               	btfsc	142,3,c	;volatile
  7540  004C44  EF26  F026         	goto	u5491
  7541  004C48  EF28  F026         	goto	u5490
  7542  004C4C                     u5491:
  7543  004C4C  EFD1  F025         	goto	l658
  7544  004C50                     u5490:
  7545  004C50  9680               	bcf	128,3,c	;volatile
  7546  004C52  0E19               	movlw	25
  7547  004C54  6E36               	movwf	(??_calibration_motor+1)^0,c
  7548  004C56  0E5A               	movlw	90
  7549  004C58  6E35               	movwf	??_calibration_motor^0,c
  7550  004C5A  0EB2               	movlw	178
  7551  004C5C                     u6077:
  7552  004C5C  2EE8               	decfsz	wreg,f,c
  7553  004C5E  D7FE               	bra	u6077
  7554  004C60  2E35               	decfsz	??_calibration_motor^0,f,c
  7555  004C62  D7FC               	bra	u6077
  7556  004C64  2E36               	decfsz	(??_calibration_motor+1)^0,f,c
  7557  004C66  D7FA               	bra	u6077
  7558  004C68  0E05               	movlw	5
  7559  004C6A  0100               	movlb	0	; () banked
  7560  004C6C  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
  7561  004C6E  0E00               	movlw	0
  7562  004C70  5BFF               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7563  004C72  EFD1  F025         	goto	l658
  7564  004C76                     l662:
  7565                           
  7566                           ;test_and_calibration.c: 79:     LATDbits.LATD7 = 0;
  7567  004C76  9E7C               	bcf	124,7,c	;volatile
  7568                           
  7569                           ;test_and_calibration.c: 80:     LATHbits.LATH3 = 0;
  7570  004C78  9680               	bcf	128,3,c	;volatile
  7571  004C7A                     
  7572                           ;test_and_calibration.c: 81:     test_action(mL, mR);
  7573  004C7A  C031  F02D         	movff	calibration_motor@mL,test_action@mL
  7574  004C7E  C032  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7575  004C82  C033  F02F         	movff	calibration_motor@mR,test_action@mR
  7576  004C86  C034  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7577  004C8A  ECB4  F029         	call	_test_action	;wreg free
  7578  004C8E  0012               	return		;funcret
  7579  004C90                     __end_of_calibration_motor:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _test_action *****************
  7583 ;; Defined at:
  7584 ;;		line 10 in file "test_and_calibration.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7587 ;;		 -> main@motorL(9), 
  7588 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7589 ;;		 -> main@motorR(9), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        4 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		_fullSpeedAhead_test
  7610 ;;		_turn45
  7611 ;; This function is called by:
  7612 ;;		_calibration_motor
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text31
  7617  005368                     __ptext31:
  7618                           	callstack 0
  7619  005368                     _test_action:
  7620                           	callstack 23
  7621  005368                     
  7622                           ;test_and_calibration.c: 10: void test_action (struct DC_motor *mL, struct DC_motor *mR)
      +                          ;test_and_calibration.c: 11: {;test_and_calibration.c: 12:     turn45(mL,mR,8,1);
  7623  005368  C02D  F020         	movff	test_action@mL,turn45@mL
  7624  00536C  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7625  005370  C02F  F022         	movff	test_action@mR,turn45@mR
  7626  005374  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7627  005378  0E08               	movlw	8
  7628  00537A  6E24               	movwf	turn45@turn_time^0,c
  7629  00537C  0E01               	movlw	1
  7630  00537E  6E25               	movwf	turn45@direction^0,c
  7631  005380  ECC8  F01F         	call	_turn45	;wreg free
  7632                           
  7633                           ;test_and_calibration.c: 13:     turn45(mL,mR,8,2);
  7634  005384  C02D  F020         	movff	test_action@mL,turn45@mL
  7635  005388  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7636  00538C  C02F  F022         	movff	test_action@mR,turn45@mR
  7637  005390  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7638  005394  0E08               	movlw	8
  7639  005396  6E24               	movwf	turn45@turn_time^0,c
  7640  005398  0E02               	movlw	2
  7641  00539A  6E25               	movwf	turn45@direction^0,c
  7642  00539C  ECC8  F01F         	call	_turn45	;wreg free
  7643                           
  7644                           ;test_and_calibration.c: 14:     fullSpeedAhead_test(mL,mR);
  7645  0053A0  C02D  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  7646  0053A4  C02E  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  7647  0053A8  C02F  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  7648  0053AC  C030  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  7649  0053B0  ECF8  F02B         	call	_fullSpeedAhead_test	;wreg free
  7650                           
  7651                           ;test_and_calibration.c: 15:     turn45(mL,mR,3,1);
  7652  0053B4  C02D  F020         	movff	test_action@mL,turn45@mL
  7653  0053B8  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7654  0053BC  C02F  F022         	movff	test_action@mR,turn45@mR
  7655  0053C0  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7656  0053C4  0E03               	movlw	3
  7657  0053C6  6E24               	movwf	turn45@turn_time^0,c
  7658  0053C8  0E01               	movlw	1
  7659  0053CA  6E25               	movwf	turn45@direction^0,c
  7660  0053CC  ECC8  F01F         	call	_turn45	;wreg free
  7661                           
  7662                           ;test_and_calibration.c: 16:     fullSpeedAhead_test(mL,mR);
  7663  0053D0  C02D  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  7664  0053D4  C02E  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  7665  0053D8  C02F  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  7666  0053DC  C030  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  7667  0053E0  ECF8  F02B         	call	_fullSpeedAhead_test	;wreg free
  7668  0053E4  0012               	return		;funcret
  7669  0053E6                     __end_of_test_action:
  7670                           	callstack 0
  7671                           
  7672 ;; *************** function _turn45 *****************
  7673 ;; Defined at:
  7674 ;;		line 91 in file "dc_motor.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7677 ;;		 -> main@motorL(9), 
  7678 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7679 ;;		 -> main@motorR(9), 
  7680 ;;  turn_time       1   35[COMRAM] unsigned char 
  7681 ;;  direction       1   36[COMRAM] unsigned char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  i               2   41[COMRAM] unsigned int 
  7684 ;;  i               2   39[COMRAM] unsigned int 
  7685 ;;  i               1   43[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7695 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;Total ram usage:       13 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; Hardware stack levels required when called: 4
  7702 ;; This function calls:
  7703 ;;		_setMotorPWM
  7704 ;;		_stop
  7705 ;; This function is called by:
  7706 ;;		_turning_action
  7707 ;;		_goback
  7708 ;;		_test_action
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text32
  7713  003F90                     __ptext32:
  7714                           	callstack 0
  7715  003F90                     _turn45:
  7716                           	callstack 25
  7717  003F90                     
  7718                           ;dc_motor.c: 91: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 92: {;dc_motor.c: 94:     unsigned char i =
      +                           0;
  7719  003F90  0E00               	movlw	0
  7720  003F92  6E2C               	movwf	turn45@i^0,c
  7721                           
  7722                           ;dc_motor.c: 95:     for (i = 0; i < turn_time; i++){
  7723  003F94  0E00               	movlw	0
  7724  003F96  6E2C               	movwf	turn45@i^0,c
  7725  003F98  EF96  F020         	goto	l4324
  7726  003F9C                     l4276:
  7727                           
  7728                           ;dc_motor.c: 96:         mL->direction=1;
  7729  003F9C  EE20 F001          	lfsr	2,1
  7730  003FA0  5020               	movf	turn45@mL^0,w,c
  7731  003FA2  26D9               	addwf	fsr2l,f,c
  7732  003FA4  5021               	movf	(turn45@mL+1)^0,w,c
  7733  003FA6  22DA               	addwfc	fsr2h,f,c
  7734  003FA8  0E01               	movlw	1
  7735  003FAA  6EDF               	movwf	indf2,c
  7736                           
  7737                           ;dc_motor.c: 97:         mR->direction=1;
  7738  003FAC  EE20 F001          	lfsr	2,1
  7739  003FB0  5022               	movf	turn45@mR^0,w,c
  7740  003FB2  26D9               	addwf	fsr2l,f,c
  7741  003FB4  5023               	movf	(turn45@mR+1)^0,w,c
  7742  003FB6  22DA               	addwfc	fsr2h,f,c
  7743  003FB8  0E01               	movlw	1
  7744  003FBA  6EDF               	movwf	indf2,c
  7745  003FBC                     
  7746                           ;dc_motor.c: 98:         if (direction == 1){
  7747  003FBC  0425               	decf	turn45@direction^0,w,c
  7748  003FBE  A4D8               	btfss	status,2,c
  7749  003FC0  EFE4  F01F         	goto	u4241
  7750  003FC4  EFE6  F01F         	goto	u4240
  7751  003FC8                     u4241:
  7752  003FC8  EF3B  F020         	goto	l4300
  7753  003FCC                     u4240:
  7754  003FCC  EF07  F020         	goto	l4290
  7755  003FD0                     l4282:
  7756                           
  7757                           ;dc_motor.c: 100:                 mR->power += 5;
  7758  003FD0  C022  FFD9         	movff	turn45@mR,fsr2l
  7759  003FD4  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7760  003FD8  0E05               	movlw	5
  7761  003FDA  26DF               	addwf	indf2,f,c
  7762                           
  7763                           ;dc_motor.c: 101:                 mL->power = 0;
  7764  003FDC  C020  FFD9         	movff	turn45@mL,fsr2l
  7765  003FE0  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7766  003FE4  0E00               	movlw	0
  7767  003FE6  6EDF               	movwf	indf2,c
  7768  003FE8                     
  7769                           ;dc_motor.c: 102:                 setMotorPWM(mL);
  7770  003FE8  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7771  003FEC  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7772  003FF0  EC29  F01D         	call	_setMotorPWM	;wreg free
  7773  003FF4                     
  7774                           ;dc_motor.c: 103:                 setMotorPWM(mR);
  7775  003FF4  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7776  003FF8  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7777  003FFC  EC29  F01D         	call	_setMotorPWM	;wreg free
  7778  004000                     
  7779                           ;dc_motor.c: 104:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7780  004000  0ED0               	movlw	208
  7781  004002  6E26               	movwf	??_turn45^0,c
  7782  004004  0ECA               	movlw	202
  7783  004006                     u6087:
  7784  004006  2EE8               	decfsz	wreg,f,c
  7785  004008  D7FE               	bra	u6087
  7786  00400A  2E26               	decfsz	??_turn45^0,f,c
  7787  00400C  D7FC               	bra	u6087
  7788  00400E                     l4290:
  7789                           
  7790                           ;dc_motor.c: 99:             while (mR->power <30){
  7791  00400E  C022  FFD9         	movff	turn45@mR,fsr2l
  7792  004012  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7793  004016  0E1D               	movlw	29
  7794  004018  64DF               	cpfsgt	indf2,c
  7795  00401A  EF11  F020         	goto	u4251
  7796  00401E  EF13  F020         	goto	u4250
  7797  004022                     u4251:
  7798  004022  EFE8  F01F         	goto	l4282
  7799  004026                     u4250:
  7800  004026                     
  7801                           ;dc_motor.c: 106:             for(unsigned int i = 0; i<SENSITIVITY; i++){_delay((unsign
      +                          ed long)((1)*(64000000/4000.0)));}
  7802  004026  0E00               	movlw	0
  7803  004028  6E29               	movwf	(turn45@i_1303+1)^0,c
  7804  00402A  0E00               	movlw	0
  7805  00402C  6E28               	movwf	turn45@i_1303^0,c
  7806  00402E  EF23  F020         	goto	l289
  7807  004032                     l4294:
  7808                           
  7809                           ; BSR set to: 0
  7810  004032  0E15               	movlw	21
  7811  004034  6E26               	movwf	??_turn45^0,c
  7812  004036  0EC6               	movlw	198
  7813  004038                     u6097:
  7814  004038  2EE8               	decfsz	wreg,f,c
  7815  00403A  D7FE               	bra	u6097
  7816  00403C  2E26               	decfsz	??_turn45^0,f,c
  7817  00403E  D7FC               	bra	u6097
  7818  004040  D000               	nop2	
  7819  004042  4A28               	infsnz	turn45@i_1303^0,f,c
  7820  004044  2A29               	incf	(turn45@i_1303+1)^0,f,c
  7821  004046                     l289:
  7822  004046  0100               	movlb	0	; () banked
  7823  004048  51FE               	movf	_SENSITIVITY& (0+255),w,b
  7824  00404A  5C28               	subwf	turn45@i_1303^0,w,c
  7825  00404C  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  7826  00404E  5829               	subwfb	(turn45@i_1303+1)^0,w,c
  7827  004050  A0D8               	btfss	status,0,c
  7828  004052  EF2D  F020         	goto	u4261
  7829  004056  EF2F  F020         	goto	u4260
  7830  00405A                     u4261:
  7831  00405A  EF19  F020         	goto	l4294
  7832  00405E                     u4260:
  7833  00405E                     l4298:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;dc_motor.c: 107:             stop(mL,mR);
  7837  00405E  C020  F01A         	movff	turn45@mL,stop@mL
  7838  004062  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  7839  004066  C022  F01C         	movff	turn45@mR,stop@mR
  7840  00406A  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  7841  00406E  EC14  F029         	call	_stop	;wreg free
  7842                           
  7843                           ;dc_motor.c: 108:         }
  7844  004072  EF95  F020         	goto	l4322
  7845  004076                     l4300:
  7846  004076  0E02               	movlw	2
  7847  004078  1825               	xorwf	turn45@direction^0,w,c
  7848  00407A  A4D8               	btfss	status,2,c
  7849  00407C  EF42  F020         	goto	u4271
  7850  004080  EF44  F020         	goto	u4270
  7851  004084                     u4271:
  7852  004084  EF95  F020         	goto	l4322
  7853  004088                     u4270:
  7854  004088  EF65  F020         	goto	l4312
  7855  00408C                     l4304:
  7856                           
  7857                           ;dc_motor.c: 111:                 mL->power += 5;
  7858  00408C  C020  FFD9         	movff	turn45@mL,fsr2l
  7859  004090  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7860  004094  0E05               	movlw	5
  7861  004096  26DF               	addwf	indf2,f,c
  7862                           
  7863                           ;dc_motor.c: 112:                 mR->power = 0;
  7864  004098  C022  FFD9         	movff	turn45@mR,fsr2l
  7865  00409C  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7866  0040A0  0E00               	movlw	0
  7867  0040A2  6EDF               	movwf	indf2,c
  7868  0040A4                     
  7869                           ;dc_motor.c: 113:                 setMotorPWM(mL);
  7870  0040A4  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7871  0040A8  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7872  0040AC  EC29  F01D         	call	_setMotorPWM	;wreg free
  7873  0040B0                     
  7874                           ;dc_motor.c: 114:                 setMotorPWM(mR);
  7875  0040B0  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7876  0040B4  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7877  0040B8  EC29  F01D         	call	_setMotorPWM	;wreg free
  7878  0040BC                     
  7879                           ;dc_motor.c: 115:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7880  0040BC  0ED0               	movlw	208
  7881  0040BE  6E26               	movwf	??_turn45^0,c
  7882  0040C0  0ECA               	movlw	202
  7883  0040C2                     u6107:
  7884  0040C2  2EE8               	decfsz	wreg,f,c
  7885  0040C4  D7FE               	bra	u6107
  7886  0040C6  2E26               	decfsz	??_turn45^0,f,c
  7887  0040C8  D7FC               	bra	u6107
  7888  0040CA                     l4312:
  7889                           
  7890                           ;dc_motor.c: 110:             while (mL->power <30){
  7891  0040CA  C020  FFD9         	movff	turn45@mL,fsr2l
  7892  0040CE  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7893  0040D2  0E1D               	movlw	29
  7894  0040D4  64DF               	cpfsgt	indf2,c
  7895  0040D6  EF6F  F020         	goto	u4281
  7896  0040DA  EF71  F020         	goto	u4280
  7897  0040DE                     u4281:
  7898  0040DE  EF46  F020         	goto	l4304
  7899  0040E2                     u4280:
  7900  0040E2                     
  7901                           ;dc_motor.c: 117:             for(unsigned int i = 0; i <SENSITIVITY + 10; i++){_delay((
      +                          unsigned long)((1)*(64000000/4000.0)));}
  7902  0040E2  0E00               	movlw	0
  7903  0040E4  6E2B               	movwf	(turn45@i_1305+1)^0,c
  7904  0040E6  0E00               	movlw	0
  7905  0040E8  6E2A               	movwf	turn45@i_1305^0,c
  7906  0040EA  EF81  F020         	goto	l297
  7907  0040EE                     l4316:
  7908                           
  7909                           ; BSR set to: 0
  7910  0040EE  0E15               	movlw	21
  7911  0040F0  6E26               	movwf	??_turn45^0,c
  7912  0040F2  0EC6               	movlw	198
  7913  0040F4                     u6117:
  7914  0040F4  2EE8               	decfsz	wreg,f,c
  7915  0040F6  D7FE               	bra	u6117
  7916  0040F8  2E26               	decfsz	??_turn45^0,f,c
  7917  0040FA  D7FC               	bra	u6117
  7918  0040FC  D000               	nop2	
  7919  0040FE  4A2A               	infsnz	turn45@i_1305^0,f,c
  7920  004100  2A2B               	incf	(turn45@i_1305+1)^0,f,c
  7921  004102                     l297:
  7922  004102  0E0A               	movlw	10
  7923  004104  0100               	movlb	0	; () banked
  7924  004106  25FE               	addwf	_SENSITIVITY& (0+255),w,b
  7925  004108  6E26               	movwf	??_turn45^0,c
  7926  00410A  0E00               	movlw	0
  7927  00410C  21FF               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  7928  00410E  6E27               	movwf	(??_turn45+1)^0,c
  7929  004110  5026               	movf	??_turn45^0,w,c
  7930  004112  5C2A               	subwf	turn45@i_1305^0,w,c
  7931  004114  5027               	movf	(??_turn45+1)^0,w,c
  7932  004116  582B               	subwfb	(turn45@i_1305+1)^0,w,c
  7933  004118  A0D8               	btfss	status,0,c
  7934  00411A  EF91  F020         	goto	u4291
  7935  00411E  EF93  F020         	goto	u4290
  7936  004122                     u4291:
  7937  004122  EF77  F020         	goto	l4316
  7938  004126                     u4290:
  7939  004126  EF2F  F020         	goto	l4298
  7940  00412A                     l4322:
  7941                           
  7942                           ;dc_motor.c: 120:     }
  7943  00412A  2A2C               	incf	turn45@i^0,f,c
  7944  00412C                     l4324:
  7945  00412C  5024               	movf	turn45@turn_time^0,w,c
  7946  00412E  5C2C               	subwf	turn45@i^0,w,c
  7947  004130  A0D8               	btfss	status,0,c
  7948  004132  EF9D  F020         	goto	u4301
  7949  004136  EF9F  F020         	goto	u4300
  7950  00413A                     u4301:
  7951  00413A  EFCE  F01F         	goto	l4276
  7952  00413E                     u4300:
  7953  00413E  0012               	return		;funcret
  7954  004140                     __end_of_turn45:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _fullSpeedAhead_test *****************
  7958 ;; Defined at:
  7959 ;;		line 137 in file "dc_motor.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7962 ;;		 -> main@motorL(9), 
  7963 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7964 ;;		 -> main@motorR(9), 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;Total ram usage:        6 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 4
  7983 ;; This function calls:
  7984 ;;		_fullSpeedAhead
  7985 ;;		_stop
  7986 ;; This function is called by:
  7987 ;;		_test_action
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text33
  7992  0057F0                     __ptext33:
  7993                           	callstack 0
  7994  0057F0                     _fullSpeedAhead_test:
  7995                           	callstack 23
  7996  0057F0                     
  7997                           ;dc_motor.c: 137: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 138: {;dc_motor.c: 139:     fullSpeedAhead(mL,mR);
  7998  0057F0  C020  F01A         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
  7999  0057F4  C021  F01B         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
  8000  0057F8  C022  F01C         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
  8001  0057FC  C023  F01D         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
  8002  005800  EC50  F028         	call	_fullSpeedAhead	;wreg free
  8003  005804                     
  8004                           ;dc_motor.c: 140:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  8005  005804  0EF4               	movlw	244
  8006  005806  6E25               	movwf	(??_fullSpeedAhead_test+1)^0,c
  8007  005808  0E82               	movlw	130
  8008  00580A  6E24               	movwf	??_fullSpeedAhead_test^0,c
  8009  00580C  0E05               	movlw	5
  8010  00580E                     u6127:
  8011  00580E  2EE8               	decfsz	wreg,f,c
  8012  005810  D7FE               	bra	u6127
  8013  005812  2E24               	decfsz	??_fullSpeedAhead_test^0,f,c
  8014  005814  D7FC               	bra	u6127
  8015  005816  2E25               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
  8016  005818  D7FA               	bra	u6127
  8017  00581A  F000               	nop	
  8018  00581C                     
  8019                           ;dc_motor.c: 141:     stop(mL,mR);
  8020  00581C  C020  F01A         	movff	fullSpeedAhead_test@mL,stop@mL
  8021  005820  C021  F01B         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
  8022  005824  C022  F01C         	movff	fullSpeedAhead_test@mR,stop@mR
  8023  005828  C023  F01D         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
  8024  00582C  EC14  F029         	call	_stop	;wreg free
  8025  005830  0012               	return		;funcret
  8026  005832                     __end_of_fullSpeedAhead_test:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _stop *****************
  8030 ;; Defined at:
  8031 ;;		line 79 in file "dc_motor.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8034 ;;		 -> main@motorL(9), 
  8035 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8036 ;;		 -> main@motorR(9), 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;Total ram usage:        6 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 3
  8055 ;; This function calls:
  8056 ;;		_setMotorPWM
  8057 ;; This function is called by:
  8058 ;;		_turn45
  8059 ;;		_fullSpeedAhead_test
  8060 ;;		_fullSpeedBack
  8061 ;;		_short_burst
  8062 ;;		_straight_action
  8063 ;;		_goback
  8064 ;;		_test_function
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text34
  8069  005228                     __ptext34:
  8070                           	callstack 0
  8071  005228                     _stop:
  8072                           	callstack 25
  8073  005228                     
  8074                           ;dc_motor.c: 79: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 80: {;d
      +                          c_motor.c: 81:     while (mL->power >0 | mR->power >0){
  8075  005228  EF4E  F029         	goto	l4026
  8076  00522C                     l4012:
  8077                           
  8078                           ;dc_motor.c: 82:         if (mL->power !=0){mL->power -= 2;}
  8079  00522C  C01A  FFD9         	movff	stop@mL,fsr2l
  8080  005230  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8081  005234  50DF               	movf	indf2,w,c
  8082  005236  B4D8               	btfsc	status,2,c
  8083  005238  EF20  F029         	goto	u3881
  8084  00523C  EF22  F029         	goto	u3880
  8085  005240                     u3881:
  8086  005240  EF28  F029         	goto	l4016
  8087  005244                     u3880:
  8088  005244  C01A  FFD9         	movff	stop@mL,fsr2l
  8089  005248  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8090  00524C  0E02               	movlw	2
  8091  00524E  5EDF               	subwf	indf2,f,c
  8092  005250                     l4016:
  8093                           
  8094                           ;dc_motor.c: 83:         if (mR->power !=0){mR->power -= 2;}
  8095  005250  C01C  FFD9         	movff	stop@mR,fsr2l
  8096  005254  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8097  005258  50DF               	movf	indf2,w,c
  8098  00525A  B4D8               	btfsc	status,2,c
  8099  00525C  EF32  F029         	goto	u3891
  8100  005260  EF34  F029         	goto	u3890
  8101  005264                     u3891:
  8102  005264  EF3A  F029         	goto	l4020
  8103  005268                     u3890:
  8104  005268  C01C  FFD9         	movff	stop@mR,fsr2l
  8105  00526C  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8106  005270  0E02               	movlw	2
  8107  005272  5EDF               	subwf	indf2,f,c
  8108  005274                     l4020:
  8109                           
  8110                           ;dc_motor.c: 84:         setMotorPWM(mL);
  8111  005274  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8112  005278  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8113  00527C  EC29  F01D         	call	_setMotorPWM	;wreg free
  8114  005280                     
  8115                           ;dc_motor.c: 85:         setMotorPWM(mR);
  8116  005280  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8117  005284  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8118  005288  EC29  F01D         	call	_setMotorPWM	;wreg free
  8119  00528C                     
  8120                           ;dc_motor.c: 86:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8121  00528C  0E68               	movlw	104
  8122  00528E  6E1E               	movwf	??_stop^0,c
  8123  005290  0EE4               	movlw	228
  8124  005292                     u6137:
  8125  005292  2EE8               	decfsz	wreg,f,c
  8126  005294  D7FE               	bra	u6137
  8127  005296  2E1E               	decfsz	??_stop^0,f,c
  8128  005298  D7FC               	bra	u6137
  8129  00529A  D000               	nop2	
  8130  00529C                     l4026:
  8131                           
  8132                           ;dc_motor.c: 81:     while (mL->power >0 | mR->power >0){
  8133  00529C  C01A  FFD9         	movff	stop@mL,fsr2l
  8134  0052A0  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8135  0052A4  50DF               	movf	indf2,w,c
  8136  0052A6  A4D8               	btfss	status,2,c
  8137  0052A8  EF58  F029         	goto	u3901
  8138  0052AC  EF5A  F029         	goto	u3900
  8139  0052B0                     u3901:
  8140  0052B0  EF16  F029         	goto	l4012
  8141  0052B4                     u3900:
  8142  0052B4  C01C  FFD9         	movff	stop@mR,fsr2l
  8143  0052B8  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8144  0052BC  50DF               	movf	indf2,w,c
  8145  0052BE  A4D8               	btfss	status,2,c
  8146  0052C0  EF64  F029         	goto	u3911
  8147  0052C4  EF66  F029         	goto	u3910
  8148  0052C8                     u3911:
  8149  0052C8  EF16  F029         	goto	l4012
  8150  0052CC                     u3910:
  8151  0052CC                     
  8152                           ;dc_motor.c: 88:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8153  0052CC  0E29               	movlw	41
  8154  0052CE  6E1F               	movwf	(??_stop+1)^0,c
  8155  0052D0  0E96               	movlw	150
  8156  0052D2  6E1E               	movwf	??_stop^0,c
  8157  0052D4  0E7F               	movlw	127
  8158  0052D6                     u6147:
  8159  0052D6  2EE8               	decfsz	wreg,f,c
  8160  0052D8  D7FE               	bra	u6147
  8161  0052DA  2E1E               	decfsz	??_stop^0,f,c
  8162  0052DC  D7FC               	bra	u6147
  8163  0052DE  2E1F               	decfsz	(??_stop+1)^0,f,c
  8164  0052E0  D7FA               	bra	u6147
  8165  0052E2  F000               	nop	
  8166  0052E4  0012               	return		;funcret
  8167  0052E6                     __end_of_stop:
  8168                           	callstack 0
  8169                           
  8170 ;; *************** function _fullSpeedAhead *****************
  8171 ;; Defined at:
  8172 ;;		line 124 in file "dc_motor.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8175 ;;		 -> main@motorL(9), 
  8176 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8177 ;;		 -> main@motorR(9), 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;Total ram usage:        5 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 3
  8196 ;; This function calls:
  8197 ;;		_setMotorPWM
  8198 ;; This function is called by:
  8199 ;;		_fullSpeedAhead_test
  8200 ;;		_short_burst
  8201 ;;		_straight_action
  8202 ;;		_goback
  8203 ;;		_test_function
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text35
  8208  0050A0                     __ptext35:
  8209                           	callstack 0
  8210  0050A0                     _fullSpeedAhead:
  8211                           	callstack 25
  8212  0050A0                     
  8213                           ;dc_motor.c: 124: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 125: {;dc_motor.c: 126:     mL->direction=1;
  8214  0050A0  EE20 F001          	lfsr	2,1
  8215  0050A4  501A               	movf	fullSpeedAhead@mL^0,w,c
  8216  0050A6  26D9               	addwf	fsr2l,f,c
  8217  0050A8  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8218  0050AA  22DA               	addwfc	fsr2h,f,c
  8219  0050AC  0E01               	movlw	1
  8220  0050AE  6EDF               	movwf	indf2,c
  8221                           
  8222                           ;dc_motor.c: 127:     mR->direction=1;
  8223  0050B0  EE20 F001          	lfsr	2,1
  8224  0050B4  501C               	movf	fullSpeedAhead@mR^0,w,c
  8225  0050B6  26D9               	addwf	fsr2l,f,c
  8226  0050B8  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8227  0050BA  22DA               	addwfc	fsr2h,f,c
  8228  0050BC  0E01               	movlw	1
  8229  0050BE  6EDF               	movwf	indf2,c
  8230                           
  8231                           ;dc_motor.c: 128:     while (mL->power<34 | mR->power<30){
  8232  0050C0  EF99  F028         	goto	l4048
  8233  0050C4                     l4034:
  8234                           
  8235                           ;dc_motor.c: 129:         if (mL->power<34) {mL->power += 2;}
  8236  0050C4  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8237  0050C8  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8238  0050CC  0E22               	movlw	34
  8239  0050CE  60DF               	cpfslt	indf2,c
  8240  0050D0  EF6C  F028         	goto	u3921
  8241  0050D4  EF6E  F028         	goto	u3920
  8242  0050D8                     u3921:
  8243  0050D8  EF74  F028         	goto	l4038
  8244  0050DC                     u3920:
  8245  0050DC  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8246  0050E0  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8247  0050E4  0E02               	movlw	2
  8248  0050E6  26DF               	addwf	indf2,f,c
  8249  0050E8                     l4038:
  8250                           
  8251                           ;dc_motor.c: 130:         if (mR->power<30) {mR->power += 2;}
  8252  0050E8  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8253  0050EC  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8254  0050F0  0E1E               	movlw	30
  8255  0050F2  60DF               	cpfslt	indf2,c
  8256  0050F4  EF7E  F028         	goto	u3931
  8257  0050F8  EF80  F028         	goto	u3930
  8258  0050FC                     u3931:
  8259  0050FC  EF86  F028         	goto	l4042
  8260  005100                     u3930:
  8261  005100  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8262  005104  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8263  005108  0E02               	movlw	2
  8264  00510A  26DF               	addwf	indf2,f,c
  8265  00510C                     l4042:
  8266                           
  8267                           ;dc_motor.c: 131:         setMotorPWM(mL);
  8268  00510C  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8269  005110  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8270  005114  EC29  F01D         	call	_setMotorPWM	;wreg free
  8271  005118                     
  8272                           ;dc_motor.c: 132:         setMotorPWM(mR);
  8273  005118  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8274  00511C  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8275  005120  EC29  F01D         	call	_setMotorPWM	;wreg free
  8276  005124                     
  8277                           ;dc_motor.c: 133:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8278  005124  0ED0               	movlw	208
  8279  005126  6E1E               	movwf	??_fullSpeedAhead^0,c
  8280  005128  0ECA               	movlw	202
  8281  00512A                     u6157:
  8282  00512A  2EE8               	decfsz	wreg,f,c
  8283  00512C  D7FE               	bra	u6157
  8284  00512E  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8285  005130  D7FC               	bra	u6157
  8286  005132                     l4048:
  8287                           
  8288                           ;dc_motor.c: 128:     while (mL->power<34 | mR->power<30){
  8289  005132  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8290  005136  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8291  00513A  0E21               	movlw	33
  8292  00513C  64DF               	cpfsgt	indf2,c
  8293  00513E  EFA3  F028         	goto	u3941
  8294  005142  EFA5  F028         	goto	u3940
  8295  005146                     u3941:
  8296  005146  EF62  F028         	goto	l4034
  8297  00514A                     u3940:
  8298  00514A  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8299  00514E  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8300  005152  0E1D               	movlw	29
  8301  005154  64DF               	cpfsgt	indf2,c
  8302  005156  EFAF  F028         	goto	u3951
  8303  00515A  EFB1  F028         	goto	u3950
  8304  00515E                     u3951:
  8305  00515E  EF62  F028         	goto	l4034
  8306  005162                     u3950:
  8307  005162  0012               	return		;funcret
  8308  005164                     __end_of_fullSpeedAhead:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function _setMotorPWM *****************
  8312 ;; Defined at:
  8313 ;;		line 59 in file "dc_motor.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8316 ;;		 -> main@motorR(9), main@motorL(9), 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  PWMduty         2   23[COMRAM] int 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      void 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;Total ram usage:       11 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; Hardware stack levels required when called: 2
  8335 ;; This function calls:
  8336 ;;		___awdiv
  8337 ;;		___wmul
  8338 ;; This function is called by:
  8339 ;;		_stop
  8340 ;;		_turn45
  8341 ;;		_fullSpeedAhead
  8342 ;;		_fullSpeedBack
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text36
  8347  003A52                     __ptext36:
  8348                           	callstack 0
  8349  003A52                     _setMotorPWM:
  8350                           	callstack 25
  8351  003A52                     
  8352                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 62:  if (m->direction){
  8353  003A52  EE20 F001          	lfsr	2,1
  8354  003A56  500F               	movf	setMotorPWM@m^0,w,c
  8355  003A58  26D9               	addwf	fsr2l,f,c
  8356  003A5A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8357  003A5C  22DA               	addwfc	fsr2h,f,c
  8358  003A5E  50DF               	movf	indf2,w,c
  8359  003A60  B4D8               	btfsc	status,2,c
  8360  003A62  EF35  F01D         	goto	u3391
  8361  003A66  EF37  F01D         	goto	u3390
  8362  003A6A                     u3391:
  8363  003A6A  EF68  F01D         	goto	l3726
  8364  003A6E                     u3390:
  8365  003A6E                     
  8366                           ;dc_motor.c: 64:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8367  003A6E  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8368  003A72  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8369  003A76  50DF               	movf	indf2,w,c
  8370  003A78  6E11               	movwf	??_setMotorPWM^0,c
  8371  003A7A  5011               	movf	??_setMotorPWM^0,w,c
  8372  003A7C  6E01               	movwf	___wmul@multiplier^0,c
  8373  003A7E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8374  003A80  EE20 F007          	lfsr	2,7
  8375  003A84  500F               	movf	setMotorPWM@m^0,w,c
  8376  003A86  26D9               	addwf	fsr2l,f,c
  8377  003A88  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8378  003A8A  22DA               	addwfc	fsr2h,f,c
  8379  003A8C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8380  003A90  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8381  003A94  EC7E  F02D         	call	___wmul	;wreg free
  8382  003A98  C001  F007         	movff	?___wmul,___awdiv@dividend
  8383  003A9C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8384  003AA0  0E00               	movlw	0
  8385  003AA2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8386  003AA4  0E64               	movlw	100
  8387  003AA6  6E09               	movwf	___awdiv@divisor^0,c
  8388  003AA8  ECB2  F028         	call	___awdiv	;wreg free
  8389  003AAC  EE20 F007          	lfsr	2,7
  8390  003AB0  500F               	movf	setMotorPWM@m^0,w,c
  8391  003AB2  26D9               	addwf	fsr2l,f,c
  8392  003AB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8393  003AB6  22DA               	addwfc	fsr2h,f,c
  8394  003AB8  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8395  003ABC  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8396  003AC0  5007               	movf	?___awdiv^0,w,c
  8397  003AC2  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8398  003AC4  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8399  003AC6  5008               	movf	(?___awdiv+1)^0,w,c
  8400  003AC8  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8401  003ACA  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8402                           
  8403                           ;dc_motor.c: 65:  }
  8404  003ACC  EF8B  F01D         	goto	l3728
  8405  003AD0                     l3726:
  8406                           
  8407                           ;dc_motor.c: 68:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8408  003AD0  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8409  003AD4  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8410  003AD8  50DF               	movf	indf2,w,c
  8411  003ADA  6E11               	movwf	??_setMotorPWM^0,c
  8412  003ADC  5011               	movf	??_setMotorPWM^0,w,c
  8413  003ADE  6E01               	movwf	___wmul@multiplier^0,c
  8414  003AE0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8415  003AE2  EE20 F007          	lfsr	2,7
  8416  003AE6  500F               	movf	setMotorPWM@m^0,w,c
  8417  003AE8  26D9               	addwf	fsr2l,f,c
  8418  003AEA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8419  003AEC  22DA               	addwfc	fsr2h,f,c
  8420  003AEE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8421  003AF2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8422  003AF6  EC7E  F02D         	call	___wmul	;wreg free
  8423  003AFA  C001  F007         	movff	?___wmul,___awdiv@dividend
  8424  003AFE  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8425  003B02  0E00               	movlw	0
  8426  003B04  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8427  003B06  0E64               	movlw	100
  8428  003B08  6E09               	movwf	___awdiv@divisor^0,c
  8429  003B0A  ECB2  F028         	call	___awdiv	;wreg free
  8430  003B0E  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8431  003B12  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8432  003B16                     l3728:
  8433                           
  8434                           ;dc_motor.c: 70:  *(m->dutyHighByte) = PWMduty;
  8435  003B16  EE20 F002          	lfsr	2,2
  8436  003B1A  500F               	movf	setMotorPWM@m^0,w,c
  8437  003B1C  26D9               	addwf	fsr2l,f,c
  8438  003B1E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8439  003B20  22DA               	addwfc	fsr2h,f,c
  8440  003B22  CFDE F011          	movff	postinc2,??_setMotorPWM
  8441  003B26  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8442  003B2A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8443  003B2E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8444  003B32  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8445  003B36                     
  8446                           ;dc_motor.c: 71:  if (m->direction){
  8447  003B36  EE20 F001          	lfsr	2,1
  8448  003B3A  500F               	movf	setMotorPWM@m^0,w,c
  8449  003B3C  26D9               	addwf	fsr2l,f,c
  8450  003B3E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8451  003B40  22DA               	addwfc	fsr2h,f,c
  8452  003B42  50DF               	movf	indf2,w,c
  8453  003B44  B4D8               	btfsc	status,2,c
  8454  003B46  EFA7  F01D         	goto	u3401
  8455  003B4A  EFA9  F01D         	goto	u3400
  8456  003B4E                     u3401:
  8457  003B4E  EFDE  F01D         	goto	l3734
  8458  003B52                     u3400:
  8459  003B52                     
  8460                           ;dc_motor.c: 72:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8461  003B52  EE20 F004          	lfsr	2,4
  8462  003B56  500F               	movf	setMotorPWM@m^0,w,c
  8463  003B58  26D9               	addwf	fsr2l,f,c
  8464  003B5A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8465  003B5C  22DA               	addwfc	fsr2h,f,c
  8466  003B5E  CFDE F011          	movff	postinc2,??_setMotorPWM
  8467  003B62  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8468  003B66  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8469  003B6A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8470  003B6E  EE10 F004          	lfsr	1,4
  8471  003B72  500F               	movf	setMotorPWM@m^0,w,c
  8472  003B74  26E1               	addwf	fsr1l,f,c
  8473  003B76  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8474  003B78  22E2               	addwfc	fsr1h,f,c
  8475  003B7A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8476  003B7E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8477  003B82  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8478  003B86  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8479  003B8A  50E7               	movf	indf1,w,c
  8480  003B8C  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8481  003B8E  EE10 F006          	lfsr	1,6
  8482  003B92  500F               	movf	setMotorPWM@m^0,w,c
  8483  003B94  26E1               	addwf	fsr1l,f,c
  8484  003B96  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8485  003B98  22E2               	addwfc	fsr1h,f,c
  8486  003B9A  50E7               	movf	indf1,w,c
  8487  003B9C  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8488  003B9E  0E01               	movlw	1
  8489  003BA0  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8490  003BA2  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8491  003BA4  EFD6  F01D         	goto	u3414
  8492  003BA8                     u3415:
  8493  003BA8  90D8               	bcf	status,0,c
  8494  003BAA  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8495  003BAC                     u3414:
  8496  003BAC  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8497  003BAE  EFD4  F01D         	goto	u3415
  8498  003BB2  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8499  003BB4  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8500  003BB6  6EDF               	movwf	indf2,c
  8501                           
  8502                           ;dc_motor.c: 73:  } else {
  8503  003BB8  EF12  F01E         	goto	l272
  8504  003BBC                     l3734:
  8505                           
  8506                           ;dc_motor.c: 74:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8507  003BBC  EE20 F004          	lfsr	2,4
  8508  003BC0  500F               	movf	setMotorPWM@m^0,w,c
  8509  003BC2  26D9               	addwf	fsr2l,f,c
  8510  003BC4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8511  003BC6  22DA               	addwfc	fsr2h,f,c
  8512  003BC8  CFDE F011          	movff	postinc2,??_setMotorPWM
  8513  003BCC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8514  003BD0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8515  003BD4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8516  003BD8  EE10 F004          	lfsr	1,4
  8517  003BDC  500F               	movf	setMotorPWM@m^0,w,c
  8518  003BDE  26E1               	addwf	fsr1l,f,c
  8519  003BE0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8520  003BE2  22E2               	addwfc	fsr1h,f,c
  8521  003BE4  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8522  003BE8  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8523  003BEC  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8524  003BF0  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8525  003BF4  50E7               	movf	indf1,w,c
  8526  003BF6  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8527  003BF8  EE10 F006          	lfsr	1,6
  8528  003BFC  500F               	movf	setMotorPWM@m^0,w,c
  8529  003BFE  26E1               	addwf	fsr1l,f,c
  8530  003C00  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8531  003C02  22E2               	addwfc	fsr1h,f,c
  8532  003C04  50E7               	movf	indf1,w,c
  8533  003C06  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8534  003C08  0E01               	movlw	1
  8535  003C0A  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8536  003C0C  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8537  003C0E  EF0B  F01E         	goto	u3424
  8538  003C12                     u3425:
  8539  003C12  90D8               	bcf	status,0,c
  8540  003C14  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8541  003C16                     u3424:
  8542  003C16  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8543  003C18  EF09  F01E         	goto	u3425
  8544  003C1C  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8545  003C1E  0AFF               	xorlw	255
  8546  003C20  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8547  003C22  6EDF               	movwf	indf2,c
  8548  003C24                     l272:
  8549  003C24  0012               	return		;funcret
  8550  003C26                     __end_of_setMotorPWM:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function ___wmul *****************
  8554 ;; Defined at:
  8555 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  multiplier      2    0[COMRAM] unsigned int 
  8558 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  product         2    4[COMRAM] unsigned int 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  2    0[COMRAM] unsigned int 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, prodl, prodh
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;Total ram usage:        6 bytes
  8575 ;; Hardware stack levels used: 1
  8576 ;; Hardware stack levels required when called: 1
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_setMotorPWM
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text37
  8585  005AFC                     __ptext37:
  8586                           	callstack 0
  8587  005AFC                     ___wmul:
  8588                           	callstack 25
  8589  005AFC  5001               	movf	___wmul@multiplier^0,w,c
  8590  005AFE  0203               	mulwf	___wmul@multiplicand^0,c
  8591  005B00  CFF3 F005          	movff	prodl,___wmul@product
  8592  005B04  CFF4 F006          	movff	prodh,___wmul@product+1
  8593  005B08  5001               	movf	___wmul@multiplier^0,w,c
  8594  005B0A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8595  005B0C  50F3               	movf	243,w,c
  8596  005B0E  2606               	addwf	(___wmul@product+1)^0,f,c
  8597  005B10  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8598  005B12  0203               	mulwf	___wmul@multiplicand^0,c
  8599  005B14  50F3               	movf	243,w,c
  8600  005B16  2606               	addwf	(___wmul@product+1)^0,f,c
  8601  005B18  C005  F001         	movff	___wmul@product,?___wmul
  8602  005B1C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8603  005B20  0012               	return		;funcret
  8604  005B22                     __end_of___wmul:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function ___awdiv *****************
  8608 ;; Defined at:
  8609 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  dividend        2    6[COMRAM] int 
  8612 ;;  divisor         2    8[COMRAM] int 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  quotient        2   12[COMRAM] int 
  8615 ;;  sign            1   11[COMRAM] unsigned char 
  8616 ;;  counter         1   10[COMRAM] unsigned char 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  2    6[COMRAM] int 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        8 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_setMotorPWM
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text38
  8641  005164                     __ptext38:
  8642                           	callstack 0
  8643  005164                     ___awdiv:
  8644                           	callstack 25
  8645  005164  0E00               	movlw	0
  8646  005166  6E0C               	movwf	___awdiv@sign^0,c
  8647  005168  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8648  00516A  EFBB  F028         	goto	u3160
  8649  00516E  EFB9  F028         	goto	u3161
  8650  005172                     u3161:
  8651  005172  EFC1  F028         	goto	l3620
  8652  005176                     u3160:
  8653  005176  6C09               	negf	___awdiv@divisor^0,c
  8654  005178  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8655  00517A  B0D8               	btfsc	status,0,c
  8656  00517C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8657  00517E  0E01               	movlw	1
  8658  005180  6E0C               	movwf	___awdiv@sign^0,c
  8659  005182                     l3620:
  8660  005182  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8661  005184  EFC8  F028         	goto	u3170
  8662  005188  EFC6  F028         	goto	u3171
  8663  00518C                     u3171:
  8664  00518C  EFCE  F028         	goto	l3626
  8665  005190                     u3170:
  8666  005190  6C07               	negf	___awdiv@dividend^0,c
  8667  005192  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8668  005194  B0D8               	btfsc	status,0,c
  8669  005196  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8670  005198  0E01               	movlw	1
  8671  00519A  1A0C               	xorwf	___awdiv@sign^0,f,c
  8672  00519C                     l3626:
  8673  00519C  0E00               	movlw	0
  8674  00519E  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8675  0051A0  0E00               	movlw	0
  8676  0051A2  6E0D               	movwf	___awdiv@quotient^0,c
  8677  0051A4  5009               	movf	___awdiv@divisor^0,w,c
  8678  0051A6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8679  0051A8  B4D8               	btfsc	status,2,c
  8680  0051AA  EFD9  F028         	goto	u3181
  8681  0051AE  EFDB  F028         	goto	u3180
  8682  0051B2                     u3181:
  8683  0051B2  EF03  F029         	goto	l3648
  8684  0051B6                     u3180:
  8685  0051B6  0E01               	movlw	1
  8686  0051B8  6E0B               	movwf	___awdiv@counter^0,c
  8687  0051BA  EFE3  F028         	goto	l3634
  8688  0051BE                     l3632:
  8689  0051BE  90D8               	bcf	status,0,c
  8690  0051C0  3609               	rlcf	___awdiv@divisor^0,f,c
  8691  0051C2  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8692  0051C4  2A0B               	incf	___awdiv@counter^0,f,c
  8693  0051C6                     l3634:
  8694  0051C6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8695  0051C8  EFE8  F028         	goto	u3191
  8696  0051CC  EFEA  F028         	goto	u3190
  8697  0051D0                     u3191:
  8698  0051D0  EFDF  F028         	goto	l3632
  8699  0051D4                     u3190:
  8700  0051D4                     l3636:
  8701  0051D4  90D8               	bcf	status,0,c
  8702  0051D6  360D               	rlcf	___awdiv@quotient^0,f,c
  8703  0051D8  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8704  0051DA  5009               	movf	___awdiv@divisor^0,w,c
  8705  0051DC  5C07               	subwf	___awdiv@dividend^0,w,c
  8706  0051DE  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8707  0051E0  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8708  0051E2  A0D8               	btfss	status,0,c
  8709  0051E4  EFF6  F028         	goto	u3201
  8710  0051E8  EFF8  F028         	goto	u3200
  8711  0051EC                     u3201:
  8712  0051EC  EFFD  F028         	goto	l3644
  8713  0051F0                     u3200:
  8714  0051F0  5009               	movf	___awdiv@divisor^0,w,c
  8715  0051F2  5E07               	subwf	___awdiv@dividend^0,f,c
  8716  0051F4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8717  0051F6  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8718  0051F8  800D               	bsf	___awdiv@quotient^0,0,c
  8719  0051FA                     l3644:
  8720  0051FA  90D8               	bcf	status,0,c
  8721  0051FC  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8722  0051FE  3209               	rrcf	___awdiv@divisor^0,f,c
  8723  005200  2E0B               	decfsz	___awdiv@counter^0,f,c
  8724  005202  EFEA  F028         	goto	l3636
  8725  005206                     l3648:
  8726  005206  500C               	movf	___awdiv@sign^0,w,c
  8727  005208  B4D8               	btfsc	status,2,c
  8728  00520A  EF09  F029         	goto	u3211
  8729  00520E  EF0B  F029         	goto	u3210
  8730  005212                     u3211:
  8731  005212  EF0F  F029         	goto	l3652
  8732  005216                     u3210:
  8733  005216  6C0D               	negf	___awdiv@quotient^0,c
  8734  005218  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8735  00521A  B0D8               	btfsc	status,0,c
  8736  00521C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8737  00521E                     l3652:
  8738  00521E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8739  005222  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8740  005226  0012               	return		;funcret
  8741  005228                     __end_of___awdiv:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function _calibrate_white *****************
  8745 ;; Defined at:
  8746 ;;		line 258 in file "color.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  w               2   11[COMRAM] PTR struct white_card
  8749 ;;		 -> main@white(28), 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;		None
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  1    wreg      void 
  8754 ;; Registers used:
  8755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8764 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8765 ;;Total ram usage:        4 bytes
  8766 ;; Hardware stack levels used: 1
  8767 ;; Hardware stack levels required when called: 4
  8768 ;; This function calls:
  8769 ;;		_LED_B
  8770 ;;		_LED_C
  8771 ;;		_LED_G
  8772 ;;		_LED_OFF
  8773 ;;		_LED_R
  8774 ;;		_color_read_Blue
  8775 ;;		_color_read_Clear
  8776 ;;		_color_read_Green
  8777 ;;		_color_read_Red
  8778 ;;		_toggle_light
  8779 ;; This function is called by:
  8780 ;;		_setup
  8781 ;;		_test_function
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text39
  8786  00366E                     __ptext39:
  8787                           	callstack 0
  8788  00366E                     _calibrate_white:
  8789                           	callstack 25
  8790  00366E                     
  8791                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  8792  00366E  ECA1  F02D         	call	_LED_OFF	;wreg free
  8793  003672                     
  8794                           ;color.c: 261:     toggle_light(1,2);
  8795  003672  0E02               	movlw	2
  8796  003674  6E01               	movwf	toggle_light@toggletime^0,c
  8797  003676  0E01               	movlw	1
  8798  003678  ECE1  F019         	call	_toggle_light
  8799  00367C                     
  8800                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8801  00367C  0E29               	movlw	41
  8802  00367E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8803  003680  0E96               	movlw	150
  8804  003682  6E0E               	movwf	??_calibrate_white^0,c
  8805  003684  0E7F               	movlw	127
  8806  003686                     u6167:
  8807  003686  2EE8               	decfsz	wreg,f,c
  8808  003688  D7FE               	bra	u6167
  8809  00368A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8810  00368C  D7FC               	bra	u6167
  8811  00368E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8812  003690  D7FA               	bra	u6167
  8813  003692  F000               	nop	
  8814  003694                     
  8815                           ;color.c: 264:     LED_R();
  8816  003694  EC91  F02D         	call	_LED_R	;wreg free
  8817  003698                     
  8818                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8819  003698  0E09               	movlw	9
  8820  00369A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8821  00369C  0E1E               	movlw	30
  8822  00369E  6E0E               	movwf	??_calibrate_white^0,c
  8823  0036A0  0EE4               	movlw	228
  8824  0036A2                     u6177:
  8825  0036A2  2EE8               	decfsz	wreg,f,c
  8826  0036A4  D7FE               	bra	u6177
  8827  0036A6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8828  0036A8  D7FC               	bra	u6177
  8829  0036AA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8830  0036AC  D7FA               	bra	u6177
  8831  0036AE  D000               	nop2	
  8832  0036B0                     
  8833                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8834  0036B0  ECF2  F02A         	call	_color_read_Red	;wreg free
  8835  0036B4  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8836  0036B8  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8837  0036BC  C005  FFDE         	movff	?_color_read_Red,postinc2
  8838  0036C0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8839  0036C4  EC1A  F02B         	call	_color_read_Green	;wreg free
  8840  0036C8  EE20 F002          	lfsr	2,2
  8841  0036CC  500C               	movf	calibrate_white@w^0,w,c
  8842  0036CE  26D9               	addwf	fsr2l,f,c
  8843  0036D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8844  0036D2  22DA               	addwfc	fsr2h,f,c
  8845  0036D4  C005  FFDE         	movff	?_color_read_Green,postinc2
  8846  0036D8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8847  0036DC  EC42  F02B         	call	_color_read_Blue	;wreg free
  8848  0036E0  EE20 F004          	lfsr	2,4
  8849  0036E4  500C               	movf	calibrate_white@w^0,w,c
  8850  0036E6  26D9               	addwf	fsr2l,f,c
  8851  0036E8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8852  0036EA  22DA               	addwfc	fsr2h,f,c
  8853  0036EC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8854  0036F0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8855  0036F4                     
  8856                           ;color.c: 269:     LED_G();
  8857  0036F4  ECB1  F02D         	call	_LED_G	;wreg free
  8858  0036F8                     
  8859                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8860  0036F8  0E09               	movlw	9
  8861  0036FA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8862  0036FC  0E1E               	movlw	30
  8863  0036FE  6E0E               	movwf	??_calibrate_white^0,c
  8864  003700  0EE4               	movlw	228
  8865  003702                     u6187:
  8866  003702  2EE8               	decfsz	wreg,f,c
  8867  003704  D7FE               	bra	u6187
  8868  003706  2E0E               	decfsz	??_calibrate_white^0,f,c
  8869  003708  D7FC               	bra	u6187
  8870  00370A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8871  00370C  D7FA               	bra	u6187
  8872  00370E  D000               	nop2	
  8873  003710                     
  8874                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8875  003710  ECF2  F02A         	call	_color_read_Red	;wreg free
  8876  003714  EE20 F006          	lfsr	2,6
  8877  003718  500C               	movf	calibrate_white@w^0,w,c
  8878  00371A  26D9               	addwf	fsr2l,f,c
  8879  00371C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8880  00371E  22DA               	addwfc	fsr2h,f,c
  8881  003720  C005  FFDE         	movff	?_color_read_Red,postinc2
  8882  003724  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8883  003728  EC1A  F02B         	call	_color_read_Green	;wreg free
  8884  00372C  EE20 F008          	lfsr	2,8
  8885  003730  500C               	movf	calibrate_white@w^0,w,c
  8886  003732  26D9               	addwf	fsr2l,f,c
  8887  003734  500D               	movf	(calibrate_white@w+1)^0,w,c
  8888  003736  22DA               	addwfc	fsr2h,f,c
  8889  003738  C005  FFDE         	movff	?_color_read_Green,postinc2
  8890  00373C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8891  003740  EC42  F02B         	call	_color_read_Blue	;wreg free
  8892  003744  EE20 F00A          	lfsr	2,10
  8893  003748  500C               	movf	calibrate_white@w^0,w,c
  8894  00374A  26D9               	addwf	fsr2l,f,c
  8895  00374C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8896  00374E  22DA               	addwfc	fsr2h,f,c
  8897  003750  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8898  003754  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8899  003758                     
  8900                           ;color.c: 275:     LED_B();
  8901  003758  ECC1  F02D         	call	_LED_B	;wreg free
  8902  00375C                     
  8903                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8904  00375C  0E09               	movlw	9
  8905  00375E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8906  003760  0E1E               	movlw	30
  8907  003762  6E0E               	movwf	??_calibrate_white^0,c
  8908  003764  0EE4               	movlw	228
  8909  003766                     u6197:
  8910  003766  2EE8               	decfsz	wreg,f,c
  8911  003768  D7FE               	bra	u6197
  8912  00376A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8913  00376C  D7FC               	bra	u6197
  8914  00376E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8915  003770  D7FA               	bra	u6197
  8916  003772  D000               	nop2	
  8917  003774                     
  8918                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  8919  003774  ECF2  F02A         	call	_color_read_Red	;wreg free
  8920  003778  EE20 F00C          	lfsr	2,12
  8921  00377C  500C               	movf	calibrate_white@w^0,w,c
  8922  00377E  26D9               	addwf	fsr2l,f,c
  8923  003780  500D               	movf	(calibrate_white@w+1)^0,w,c
  8924  003782  22DA               	addwfc	fsr2h,f,c
  8925  003784  C005  FFDE         	movff	?_color_read_Red,postinc2
  8926  003788  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8927  00378C  EC1A  F02B         	call	_color_read_Green	;wreg free
  8928  003790  EE20 F00E          	lfsr	2,14
  8929  003794  500C               	movf	calibrate_white@w^0,w,c
  8930  003796  26D9               	addwf	fsr2l,f,c
  8931  003798  500D               	movf	(calibrate_white@w+1)^0,w,c
  8932  00379A  22DA               	addwfc	fsr2h,f,c
  8933  00379C  C005  FFDE         	movff	?_color_read_Green,postinc2
  8934  0037A0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8935  0037A4  EC42  F02B         	call	_color_read_Blue	;wreg free
  8936  0037A8  EE20 F010          	lfsr	2,16
  8937  0037AC  500C               	movf	calibrate_white@w^0,w,c
  8938  0037AE  26D9               	addwf	fsr2l,f,c
  8939  0037B0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8940  0037B2  22DA               	addwfc	fsr2h,f,c
  8941  0037B4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8942  0037B8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8943  0037BC  EC6A  F02B         	call	_color_read_Clear	;wreg free
  8944  0037C0  EE20 F01A          	lfsr	2,26
  8945  0037C4  500C               	movf	calibrate_white@w^0,w,c
  8946  0037C6  26D9               	addwf	fsr2l,f,c
  8947  0037C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8948  0037CA  22DA               	addwfc	fsr2h,f,c
  8949  0037CC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8950  0037D0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8951  0037D4                     
  8952                           ;color.c: 280:     LED_C();
  8953  0037D4  ECD1  F02D         	call	_LED_C	;wreg free
  8954  0037D8                     
  8955                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8956  0037D8  0E09               	movlw	9
  8957  0037DA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8958  0037DC  0E1E               	movlw	30
  8959  0037DE  6E0E               	movwf	??_calibrate_white^0,c
  8960  0037E0  0EE4               	movlw	228
  8961  0037E2                     u6207:
  8962  0037E2  2EE8               	decfsz	wreg,f,c
  8963  0037E4  D7FE               	bra	u6207
  8964  0037E6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8965  0037E8  D7FC               	bra	u6207
  8966  0037EA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8967  0037EC  D7FA               	bra	u6207
  8968  0037EE  D000               	nop2	
  8969  0037F0                     
  8970                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  8971  0037F0  ECF2  F02A         	call	_color_read_Red	;wreg free
  8972  0037F4  EE20 F012          	lfsr	2,18
  8973  0037F8  500C               	movf	calibrate_white@w^0,w,c
  8974  0037FA  26D9               	addwf	fsr2l,f,c
  8975  0037FC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8976  0037FE  22DA               	addwfc	fsr2h,f,c
  8977  003800  C005  FFDE         	movff	?_color_read_Red,postinc2
  8978  003804  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8979  003808  EC1A  F02B         	call	_color_read_Green	;wreg free
  8980  00380C  EE20 F014          	lfsr	2,20
  8981  003810  500C               	movf	calibrate_white@w^0,w,c
  8982  003812  26D9               	addwf	fsr2l,f,c
  8983  003814  500D               	movf	(calibrate_white@w+1)^0,w,c
  8984  003816  22DA               	addwfc	fsr2h,f,c
  8985  003818  C005  FFDE         	movff	?_color_read_Green,postinc2
  8986  00381C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8987  003820  EC42  F02B         	call	_color_read_Blue	;wreg free
  8988  003824  EE20 F016          	lfsr	2,22
  8989  003828  500C               	movf	calibrate_white@w^0,w,c
  8990  00382A  26D9               	addwf	fsr2l,f,c
  8991  00382C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8992  00382E  22DA               	addwfc	fsr2h,f,c
  8993  003830  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8994  003834  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8995  003838  EC6A  F02B         	call	_color_read_Clear	;wreg free
  8996  00383C  EE20 F018          	lfsr	2,24
  8997  003840  500C               	movf	calibrate_white@w^0,w,c
  8998  003842  26D9               	addwf	fsr2l,f,c
  8999  003844  500D               	movf	(calibrate_white@w+1)^0,w,c
  9000  003846  22DA               	addwfc	fsr2h,f,c
  9001  003848  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9002  00384C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9003  003850                     
  9004                           ;color.c: 284:     LED_OFF();
  9005  003850  ECA1  F02D         	call	_LED_OFF	;wreg free
  9006  003854                     
  9007                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9008  003854  0E29               	movlw	41
  9009  003856  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9010  003858  0E96               	movlw	150
  9011  00385A  6E0E               	movwf	??_calibrate_white^0,c
  9012  00385C  0E7F               	movlw	127
  9013  00385E                     u6217:
  9014  00385E  2EE8               	decfsz	wreg,f,c
  9015  003860  D7FE               	bra	u6217
  9016  003862  2E0E               	decfsz	??_calibrate_white^0,f,c
  9017  003864  D7FC               	bra	u6217
  9018  003866  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9019  003868  D7FA               	bra	u6217
  9020  00386A  F000               	nop	
  9021                           
  9022                           ;color.c: 286:     toggle_light(1,2);
  9023  00386C  0E02               	movlw	2
  9024  00386E  6E01               	movwf	toggle_light@toggletime^0,c
  9025  003870  0E01               	movlw	1
  9026  003872  ECE1  F019         	call	_toggle_light
  9027  003876  0012               	return		;funcret
  9028  003878                     __end_of_calibrate_white:
  9029                           	callstack 0
  9030                           
  9031 ;; *************** function _color_read_Red *****************
  9032 ;; Defined at:
  9033 ;;		line 91 in file "color.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;		None
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  tmp             2    9[COMRAM] unsigned int 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  2    4[COMRAM] unsigned int 
  9040 ;; Registers used:
  9041 ;;		wreg, status,2, status,0, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9051 ;;Total ram usage:        7 bytes
  9052 ;; Hardware stack levels used: 1
  9053 ;; Hardware stack levels required when called: 3
  9054 ;; This function calls:
  9055 ;;		_I2C_2_Master_Read
  9056 ;;		_I2C_2_Master_RepStart
  9057 ;;		_I2C_2_Master_Start
  9058 ;;		_I2C_2_Master_Stop
  9059 ;;		_I2C_2_Master_Write
  9060 ;; This function is called by:
  9061 ;;		_read_color
  9062 ;;		_calibrate_white
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text40
  9067  0055E4                     __ptext40:
  9068                           	callstack 0
  9069  0055E4                     _color_read_Red:
  9070                           	callstack 24
  9071  0055E4                     
  9072                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  9073  0055E4  EC4C  F02E         	call	_I2C_2_Master_Start	;wreg free
  9074                           
  9075                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  9076  0055E8  0E52               	movlw	82
  9077  0055EA  EC36  F02E         	call	_I2C_2_Master_Write
  9078                           
  9079                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  9080  0055EE  0EB6               	movlw	182
  9081  0055F0  EC36  F02E         	call	_I2C_2_Master_Write
  9082                           
  9083                           ;color.c: 97:  I2C_2_Master_RepStart();
  9084  0055F4  EC42  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9085                           
  9086                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  9087  0055F8  0E53               	movlw	83
  9088  0055FA  EC36  F02E         	call	_I2C_2_Master_Write
  9089                           
  9090                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  9091  0055FE  0E01               	movlw	1
  9092  005600  EC19  F02C         	call	_I2C_2_Master_Read
  9093  005604  6E07               	movwf	??_color_read_Red^0,c
  9094  005606  5007               	movf	??_color_read_Red^0,w,c
  9095  005608  6E0A               	movwf	color_read_Red@tmp^0,c
  9096  00560A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9097                           
  9098                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9099  00560C  0E00               	movlw	0
  9100  00560E  EC19  F02C         	call	_I2C_2_Master_Read
  9101  005612  6E07               	movwf	??_color_read_Red^0,c
  9102  005614  5007               	movf	??_color_read_Red^0,w,c
  9103  005616  6E09               	movwf	(??_color_read_Red+2)^0,c
  9104  005618  6A08               	clrf	(??_color_read_Red+1)^0,c
  9105  00561A  500A               	movf	color_read_Red@tmp^0,w,c
  9106  00561C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9107  00561E  6E0A               	movwf	color_read_Red@tmp^0,c
  9108  005620  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9109  005622  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9110  005624  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9111                           
  9112                           ;color.c: 101:  I2C_2_Master_Stop();
  9113  005626  EC47  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9114  00562A                     
  9115                           ;color.c: 102:  return tmp;
  9116  00562A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9117  00562E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9118  005632  0012               	return		;funcret
  9119  005634                     __end_of_color_read_Red:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _color_read_Green *****************
  9123 ;; Defined at:
  9124 ;;		line 119 in file "color.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  tmp             2    9[COMRAM] unsigned int 
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  2    4[COMRAM] unsigned int 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9142 ;;Total ram usage:        7 bytes
  9143 ;; Hardware stack levels used: 1
  9144 ;; Hardware stack levels required when called: 3
  9145 ;; This function calls:
  9146 ;;		_I2C_2_Master_Read
  9147 ;;		_I2C_2_Master_RepStart
  9148 ;;		_I2C_2_Master_Start
  9149 ;;		_I2C_2_Master_Stop
  9150 ;;		_I2C_2_Master_Write
  9151 ;; This function is called by:
  9152 ;;		_read_color
  9153 ;;		_calibrate_white
  9154 ;;		_distance_measure
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text41
  9159  005634                     __ptext41:
  9160                           	callstack 0
  9161  005634                     _color_read_Green:
  9162                           	callstack 24
  9163  005634                     
  9164                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  9165  005634  EC4C  F02E         	call	_I2C_2_Master_Start	;wreg free
  9166                           
  9167                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  9168  005638  0E52               	movlw	82
  9169  00563A  EC36  F02E         	call	_I2C_2_Master_Write
  9170                           
  9171                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  9172  00563E  0EB8               	movlw	184
  9173  005640  EC36  F02E         	call	_I2C_2_Master_Write
  9174                           
  9175                           ;color.c: 125:  I2C_2_Master_RepStart();
  9176  005644  EC42  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9177                           
  9178                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  9179  005648  0E53               	movlw	83
  9180  00564A  EC36  F02E         	call	_I2C_2_Master_Write
  9181                           
  9182                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  9183  00564E  0E01               	movlw	1
  9184  005650  EC19  F02C         	call	_I2C_2_Master_Read
  9185  005654  6E07               	movwf	??_color_read_Green^0,c
  9186  005656  5007               	movf	??_color_read_Green^0,w,c
  9187  005658  6E0A               	movwf	color_read_Green@tmp^0,c
  9188  00565A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9189                           
  9190                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9191  00565C  0E00               	movlw	0
  9192  00565E  EC19  F02C         	call	_I2C_2_Master_Read
  9193  005662  6E07               	movwf	??_color_read_Green^0,c
  9194  005664  5007               	movf	??_color_read_Green^0,w,c
  9195  005666  6E09               	movwf	(??_color_read_Green+2)^0,c
  9196  005668  6A08               	clrf	(??_color_read_Green+1)^0,c
  9197  00566A  500A               	movf	color_read_Green@tmp^0,w,c
  9198  00566C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9199  00566E  6E0A               	movwf	color_read_Green@tmp^0,c
  9200  005670  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9201  005672  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9202  005674  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9203                           
  9204                           ;color.c: 129:  I2C_2_Master_Stop();
  9205  005676  EC47  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9206  00567A                     
  9207                           ;color.c: 130:  return tmp;
  9208  00567A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9209  00567E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9210  005682  0012               	return		;funcret
  9211  005684                     __end_of_color_read_Green:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _color_read_Blue *****************
  9215 ;; Defined at:
  9216 ;;		line 105 in file "color.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  tmp             2    9[COMRAM] unsigned int 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  2    4[COMRAM] unsigned int 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;Total ram usage:        7 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 3
  9237 ;; This function calls:
  9238 ;;		_I2C_2_Master_Read
  9239 ;;		_I2C_2_Master_RepStart
  9240 ;;		_I2C_2_Master_Start
  9241 ;;		_I2C_2_Master_Stop
  9242 ;;		_I2C_2_Master_Write
  9243 ;; This function is called by:
  9244 ;;		_read_color
  9245 ;;		_calibrate_white
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           	psect	text42
  9250  005684                     __ptext42:
  9251                           	callstack 0
  9252  005684                     _color_read_Blue:
  9253                           	callstack 24
  9254  005684                     
  9255                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  9256  005684  EC4C  F02E         	call	_I2C_2_Master_Start	;wreg free
  9257                           
  9258                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  9259  005688  0E52               	movlw	82
  9260  00568A  EC36  F02E         	call	_I2C_2_Master_Write
  9261                           
  9262                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  9263  00568E  0EBA               	movlw	186
  9264  005690  EC36  F02E         	call	_I2C_2_Master_Write
  9265                           
  9266                           ;color.c: 111:  I2C_2_Master_RepStart();
  9267  005694  EC42  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9268                           
  9269                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  9270  005698  0E53               	movlw	83
  9271  00569A  EC36  F02E         	call	_I2C_2_Master_Write
  9272                           
  9273                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  9274  00569E  0E01               	movlw	1
  9275  0056A0  EC19  F02C         	call	_I2C_2_Master_Read
  9276  0056A4  6E07               	movwf	??_color_read_Blue^0,c
  9277  0056A6  5007               	movf	??_color_read_Blue^0,w,c
  9278  0056A8  6E0A               	movwf	color_read_Blue@tmp^0,c
  9279  0056AA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9280                           
  9281                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9282  0056AC  0E00               	movlw	0
  9283  0056AE  EC19  F02C         	call	_I2C_2_Master_Read
  9284  0056B2  6E07               	movwf	??_color_read_Blue^0,c
  9285  0056B4  5007               	movf	??_color_read_Blue^0,w,c
  9286  0056B6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9287  0056B8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9288  0056BA  500A               	movf	color_read_Blue@tmp^0,w,c
  9289  0056BC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9290  0056BE  6E0A               	movwf	color_read_Blue@tmp^0,c
  9291  0056C0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9292  0056C2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9293  0056C4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9294                           
  9295                           ;color.c: 115:  I2C_2_Master_Stop();
  9296  0056C6  EC47  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9297  0056CA                     
  9298                           ;color.c: 116:  return tmp;
  9299  0056CA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9300  0056CE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9301  0056D2  0012               	return		;funcret
  9302  0056D4                     __end_of_color_read_Blue:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function _LED_R *****************
  9306 ;; Defined at:
  9307 ;;		line 164 in file "color.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;		None
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		wreg
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;Total ram usage:        2 bytes
  9326 ;; Hardware stack levels used: 1
  9327 ;; Hardware stack levels required when called: 1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_color_data_collection
  9332 ;;		_calibrate_white
  9333 ;;		_detect_color
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text43
  9338  005B22                     __ptext43:
  9339                           	callstack 0
  9340  005B22                     _LED_R:
  9341                           	callstack 27
  9342  005B22                     
  9343                           ;color.c: 166:     LATGbits.LATG1 = 1;
  9344  005B22  827F               	bsf	127,1,c	;volatile
  9345                           
  9346                           ;color.c: 167:     LATFbits.LATF7 = 0;
  9347  005B24  9E7E               	bcf	126,7,c	;volatile
  9348                           
  9349                           ;color.c: 168:     LATAbits.LATA4 = 0;
  9350  005B26  9879               	bcf	121,4,c	;volatile
  9351  005B28                     
  9352                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9353  005B28  0E11               	movlw	17
  9354  005B2A  6E02               	movwf	(??_LED_R+1)^0,c
  9355  005B2C  0E3C               	movlw	60
  9356  005B2E  6E01               	movwf	??_LED_R^0,c
  9357  005B30  0ECB               	movlw	203
  9358  005B32                     u6227:
  9359  005B32  2EE8               	decfsz	wreg,f,c
  9360  005B34  D7FE               	bra	u6227
  9361  005B36  2E01               	decfsz	??_LED_R^0,f,c
  9362  005B38  D7FC               	bra	u6227
  9363  005B3A  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9364  005B3C  D7FA               	bra	u6227
  9365  005B3E  F000               	nop	
  9366  005B40  0012               	return		;funcret
  9367  005B42                     __end_of_LED_R:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function _LED_OFF *****************
  9371 ;; Defined at:
  9372 ;;		line 155 in file "color.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used: 1
  9392 ;; Hardware stack levels required when called: 1
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_calibrate_white
  9397 ;;		_setup
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text44
  9402  005B42                     __ptext44:
  9403                           	callstack 0
  9404  005B42                     _LED_OFF:
  9405                           	callstack 27
  9406  005B42                     
  9407                           ;color.c: 157:     LATGbits.LATG1 = 0;
  9408  005B42  927F               	bcf	127,1,c	;volatile
  9409                           
  9410                           ;color.c: 158:     LATFbits.LATF7 = 0;
  9411  005B44  9E7E               	bcf	126,7,c	;volatile
  9412                           
  9413                           ;color.c: 159:     LATAbits.LATA4 = 0;
  9414  005B46  9879               	bcf	121,4,c	;volatile
  9415  005B48                     
  9416                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9417  005B48  0E11               	movlw	17
  9418  005B4A  6E02               	movwf	(??_LED_OFF+1)^0,c
  9419  005B4C  0E3C               	movlw	60
  9420  005B4E  6E01               	movwf	??_LED_OFF^0,c
  9421  005B50  0ECB               	movlw	203
  9422  005B52                     u6237:
  9423  005B52  2EE8               	decfsz	wreg,f,c
  9424  005B54  D7FE               	bra	u6237
  9425  005B56  2E01               	decfsz	??_LED_OFF^0,f,c
  9426  005B58  D7FC               	bra	u6237
  9427  005B5A  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9428  005B5C  D7FA               	bra	u6237
  9429  005B5E  F000               	nop	
  9430  005B60  0012               	return		;funcret
  9431  005B62                     __end_of_LED_OFF:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function _LED_G *****************
  9435 ;; Defined at:
  9436 ;;		line 191 in file "color.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;Total ram usage:        2 bytes
  9455 ;; Hardware stack levels used: 1
  9456 ;; Hardware stack levels required when called: 1
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_color_data_collection
  9461 ;;		_calibrate_white
  9462 ;;		_detect_color
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text45
  9467  005B62                     __ptext45:
  9468                           	callstack 0
  9469  005B62                     _LED_G:
  9470                           	callstack 27
  9471  005B62                     
  9472                           ;color.c: 193:     LATGbits.LATG1 = 0;
  9473  005B62  927F               	bcf	127,1,c	;volatile
  9474                           
  9475                           ;color.c: 194:     LATFbits.LATF7 = 0;
  9476  005B64  9E7E               	bcf	126,7,c	;volatile
  9477                           
  9478                           ;color.c: 195:     LATAbits.LATA4 = 1;
  9479  005B66  8879               	bsf	121,4,c	;volatile
  9480  005B68                     
  9481                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9482  005B68  0E11               	movlw	17
  9483  005B6A  6E02               	movwf	(??_LED_G+1)^0,c
  9484  005B6C  0E3C               	movlw	60
  9485  005B6E  6E01               	movwf	??_LED_G^0,c
  9486  005B70  0ECB               	movlw	203
  9487  005B72                     u6247:
  9488  005B72  2EE8               	decfsz	wreg,f,c
  9489  005B74  D7FE               	bra	u6247
  9490  005B76  2E01               	decfsz	??_LED_G^0,f,c
  9491  005B78  D7FC               	bra	u6247
  9492  005B7A  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9493  005B7C  D7FA               	bra	u6247
  9494  005B7E  F000               	nop	
  9495  005B80  0012               	return		;funcret
  9496  005B82                     __end_of_LED_G:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _LED_B *****************
  9500 ;; Defined at:
  9501 ;;		line 182 in file "color.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 1
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_color_data_collection
  9526 ;;		_calibrate_white
  9527 ;;		_detect_color
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text46
  9532  005B82                     __ptext46:
  9533                           	callstack 0
  9534  005B82                     _LED_B:
  9535                           	callstack 27
  9536  005B82                     
  9537                           ;color.c: 184:     LATGbits.LATG1 = 0;
  9538  005B82  927F               	bcf	127,1,c	;volatile
  9539                           
  9540                           ;color.c: 185:     LATFbits.LATF7 = 1;
  9541  005B84  8E7E               	bsf	126,7,c	;volatile
  9542                           
  9543                           ;color.c: 186:     LATAbits.LATA4 = 0;
  9544  005B86  9879               	bcf	121,4,c	;volatile
  9545  005B88                     
  9546                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9547  005B88  0E11               	movlw	17
  9548  005B8A  6E02               	movwf	(??_LED_B+1)^0,c
  9549  005B8C  0E3C               	movlw	60
  9550  005B8E  6E01               	movwf	??_LED_B^0,c
  9551  005B90  0ECB               	movlw	203
  9552  005B92                     u6257:
  9553  005B92  2EE8               	decfsz	wreg,f,c
  9554  005B94  D7FE               	bra	u6257
  9555  005B96  2E01               	decfsz	??_LED_B^0,f,c
  9556  005B98  D7FC               	bra	u6257
  9557  005B9A  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9558  005B9C  D7FA               	bra	u6257
  9559  005B9E  F000               	nop	
  9560  005BA0  0012               	return		;funcret
  9561  005BA2                     __end_of_LED_B:
  9562                           	callstack 0
  9563                           
  9564 ;; *************** function _amb_light_measure *****************
  9565 ;; Defined at:
  9566 ;;		line 378 in file "color.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9569 ;;		 -> main@rgb(8), main@amb(8), 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9572 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9573 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9574 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9575 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  2   10[BANK0 ] unsigned int 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9588 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;Total ram usage:       14 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 5
  9592 ;; This function calls:
  9593 ;;		_LED_C
  9594 ;;		___fldiv
  9595 ;;		___xxtofl
  9596 ;;		_color_read_Clear
  9597 ;;		_lroundf
  9598 ;;		_toggle_light
  9599 ;; This function is called by:
  9600 ;;		_setup
  9601 ;;		_test_function
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text47
  9606  00474C                     __ptext47:
  9607                           	callstack 0
  9608  00474C                     _amb_light_measure:
  9609                           	callstack 24
  9610  00474C  0E00               	movlw	0
  9611  00474E  0100               	movlb	0	; () banked
  9612  004750  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9613  004752  0E00               	movlw	0
  9614  004754  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9615  004756  0E00               	movlw	0
  9616  004758  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9617  00475A  0E00               	movlw	0
  9618  00475C  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9619  00475E  0E00               	movlw	0
  9620  004760  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9621  004762  0E00               	movlw	0
  9622  004764  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9623  004766                     
  9624                           ; BSR set to: 0
  9625                           ;color.c: 381:     toggle_light(2,2);
  9626  004766  0E02               	movlw	2
  9627  004768  6E01               	movwf	toggle_light@toggletime^0,c
  9628  00476A  0E02               	movlw	2
  9629  00476C  ECE1  F019         	call	_toggle_light
  9630  004770                     
  9631                           ;color.c: 382:     LED_C();
  9632  004770  ECD1  F02D         	call	_LED_C	;wreg free
  9633  004774                     
  9634                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9635  004774  0E29               	movlw	41
  9636  004776  0100               	movlb	0	; () banked
  9637  004778  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9638  00477A  0E96               	movlw	150
  9639  00477C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9640  00477E  0E7F               	movlw	127
  9641  004780                     u6267:
  9642  004780  2EE8               	decfsz	wreg,f,c
  9643  004782  D7FE               	bra	u6267
  9644  004784  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9645  004786  D7FC               	bra	u6267
  9646  004788  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9647  00478A  D7FA               	bra	u6267
  9648  00478C                     
  9649                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  9650  00478C  EC6A  F02B         	call	_color_read_Clear	;wreg free
  9651  004790  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9652  004794  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9653  004798                     
  9654                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9655  004798  0E11               	movlw	17
  9656  00479A  0100               	movlb	0	; () banked
  9657  00479C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9658  00479E  0E3C               	movlw	60
  9659  0047A0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9660  0047A2  0ECB               	movlw	203
  9661  0047A4                     u6277:
  9662  0047A4  2EE8               	decfsz	wreg,f,c
  9663  0047A6  D7FE               	bra	u6277
  9664  0047A8  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9665  0047AA  D7FC               	bra	u6277
  9666  0047AC  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9667  0047AE  D7FA               	bra	u6277
  9668  0047B0                     
  9669                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  9670  0047B0  EC6A  F02B         	call	_color_read_Clear	;wreg free
  9671  0047B4  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9672  0047B8  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9673  0047BC                     
  9674                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9675  0047BC  0E11               	movlw	17
  9676  0047BE  0100               	movlb	0	; () banked
  9677  0047C0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9678  0047C2  0E3C               	movlw	60
  9679  0047C4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9680  0047C6  0ECB               	movlw	203
  9681  0047C8                     u6287:
  9682  0047C8  2EE8               	decfsz	wreg,f,c
  9683  0047CA  D7FE               	bra	u6287
  9684  0047CC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9685  0047CE  D7FC               	bra	u6287
  9686  0047D0  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9687  0047D2  D7FA               	bra	u6287
  9688  0047D4                     
  9689                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  9690  0047D4  EC6A  F02B         	call	_color_read_Clear	;wreg free
  9691  0047D8  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9692  0047DC  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9693  0047E0                     
  9694                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9695  0047E0  0E11               	movlw	17
  9696  0047E2  0100               	movlb	0	; () banked
  9697  0047E4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9698  0047E6  0E3C               	movlw	60
  9699  0047E8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9700  0047EA  0ECB               	movlw	203
  9701  0047EC                     u6297:
  9702  0047EC  2EE8               	decfsz	wreg,f,c
  9703  0047EE  D7FE               	bra	u6297
  9704  0047F0  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9705  0047F2  D7FC               	bra	u6297
  9706  0047F4  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9707  0047F6  D7FA               	bra	u6297
  9708  0047F8                     
  9709                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9710  0047F8  0100               	movlb	0	; () banked
  9711  0047FA  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9712  0047FC  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9713  0047FE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9714  004800  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9715  004802  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9716  004804  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9717  004806  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9718  004808  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9719  00480A  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9720  00480C  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9721  00480E  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9722  004812  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9723  004816  6A03               	clrf	(___xxtofl@val+2)^0,c
  9724  004818  6A04               	clrf	(___xxtofl@val+3)^0,c
  9725  00481A  0E00               	movlw	0
  9726  00481C  ECEE  F01E         	call	___xxtofl
  9727  004820  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9728  004824  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9729  004828  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9730  00482C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9731  004830  0E00               	movlw	0
  9732  004832  6E13               	movwf	___fldiv@a^0,c
  9733  004834  0E00               	movlw	0
  9734  004836  6E14               	movwf	(___fldiv@a+1)^0,c
  9735  004838  0E40               	movlw	64
  9736  00483A  6E15               	movwf	(___fldiv@a+2)^0,c
  9737  00483C  0E40               	movlw	64
  9738  00483E  6E16               	movwf	(___fldiv@a+3)^0,c
  9739  004840  EC2A  F015         	call	___fldiv	;wreg free
  9740  004844  C00F  F066         	movff	?___fldiv,lroundf@x
  9741  004848  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9742  00484C  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9743  004850  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9744  004854  ECB8  F02C         	call	_lroundf	;wreg free
  9745  004858  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9746  00485C  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9747  004860                     
  9748                           ;color.c: 396:     toggle_light(2,2);
  9749  004860  0E02               	movlw	2
  9750  004862  6E01               	movwf	toggle_light@toggletime^0,c
  9751  004864  0E02               	movlw	2
  9752  004866  ECE1  F019         	call	_toggle_light
  9753  00486A                     
  9754                           ;color.c: 398:     return CC_amb_ave;
  9755  00486A  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9756  00486E  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9757  004872  0012               	return		;funcret
  9758  004874                     __end_of_amb_light_measure:
  9759                           	callstack 0
  9760                           
  9761 ;; *************** function _toggle_light *****************
  9762 ;; Defined at:
  9763 ;;		line 29 in file "color.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  lightnumber     1    wreg     unsigned char 
  9766 ;;  toggletime      1    0[COMRAM] unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9769 ;;  i               1    3[COMRAM] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;Total ram usage:        5 bytes
  9784 ;; Hardware stack levels used: 1
  9785 ;; Hardware stack levels required when called: 1
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_calibrate_white
  9790 ;;		_detect_color
  9791 ;;		_amb_light_measure
  9792 ;;		_turning_action
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text48
  9797  0033C2                     __ptext48:
  9798                           	callstack 0
  9799  0033C2                     _toggle_light:
  9800                           	callstack 27
  9801                           
  9802                           ;incstack = 0
  9803                           ;toggle_light@lightnumber stored from wreg
  9804  0033C2  6E05               	movwf	toggle_light@lightnumber^0,c
  9805  0033C4                     
  9806                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9807  0033C4  0E00               	movlw	0
  9808  0033C6  6E04               	movwf	toggle_light@i^0,c
  9809                           
  9810                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9811  0033C8  0E00               	movlw	0
  9812  0033CA  6E04               	movwf	toggle_light@i^0,c
  9813  0033CC  EF2D  F01B         	goto	l58
  9814  0033D0                     l4412:
  9815                           
  9816                           ;color.c: 34:         if (lightnumber == 1){
  9817  0033D0  0405               	decf	toggle_light@lightnumber^0,w,c
  9818  0033D2  A4D8               	btfss	status,2,c
  9819  0033D4  EFEE  F019         	goto	u4471
  9820  0033D8  EFF0  F019         	goto	u4470
  9821  0033DC                     u4471:
  9822  0033DC  EF28  F01A         	goto	l4420
  9823  0033E0                     u4470:
  9824  0033E0                     
  9825                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9826  0033E0  A280               	btfss	128,1,c	;volatile
  9827  0033E2  EFF5  F019         	goto	u4481
  9828  0033E6  EFF9  F019         	goto	u4480
  9829  0033EA                     u4481:
  9830  0033EA  6A02               	clrf	??_toggle_light^0,c
  9831  0033EC  2A02               	incf	??_toggle_light^0,f,c
  9832  0033EE  EFFA  F019         	goto	u4498
  9833  0033F2                     u4480:
  9834  0033F2  6A02               	clrf	??_toggle_light^0,c
  9835  0033F4                     u4498:
  9836  0033F4  4602               	rlncf	??_toggle_light^0,f,c
  9837  0033F6  5080               	movf	128,w,c	;volatile
  9838  0033F8  1802               	xorwf	??_toggle_light^0,w,c
  9839  0033FA  0BFD               	andlw	-3
  9840  0033FC  1802               	xorwf	??_toggle_light^0,w,c
  9841  0033FE  6E80               	movwf	128,c	;volatile
  9842  003400                     
  9843                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9844  003400  0E29               	movlw	41
  9845  003402  6E03               	movwf	(??_toggle_light+1)^0,c
  9846  003404  0E96               	movlw	150
  9847  003406  6E02               	movwf	??_toggle_light^0,c
  9848  003408  0E7F               	movlw	127
  9849  00340A                     u6307:
  9850  00340A  2EE8               	decfsz	wreg,f,c
  9851  00340C  D7FE               	bra	u6307
  9852  00340E  2E02               	decfsz	??_toggle_light^0,f,c
  9853  003410  D7FC               	bra	u6307
  9854  003412  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9855  003414  D7FA               	bra	u6307
  9856  003416  F000               	nop	
  9857  003418                     
  9858                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9859  003418  A280               	btfss	128,1,c	;volatile
  9860  00341A  EF11  F01A         	goto	u4501
  9861  00341E  EF15  F01A         	goto	u4500
  9862  003422                     u4501:
  9863  003422  6A02               	clrf	??_toggle_light^0,c
  9864  003424  2A02               	incf	??_toggle_light^0,f,c
  9865  003426  EF16  F01A         	goto	u4518
  9866  00342A                     u4500:
  9867  00342A  6A02               	clrf	??_toggle_light^0,c
  9868  00342C                     u4518:
  9869  00342C  4602               	rlncf	??_toggle_light^0,f,c
  9870  00342E  5080               	movf	128,w,c	;volatile
  9871  003430  1802               	xorwf	??_toggle_light^0,w,c
  9872  003432  0BFD               	andlw	-3
  9873  003434  1802               	xorwf	??_toggle_light^0,w,c
  9874  003436  6E80               	movwf	128,c	;volatile
  9875                           
  9876                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9877  003438  0E29               	movlw	41
  9878  00343A  6E03               	movwf	(??_toggle_light+1)^0,c
  9879  00343C  0E96               	movlw	150
  9880  00343E  6E02               	movwf	??_toggle_light^0,c
  9881  003440  0E7F               	movlw	127
  9882  003442                     u6317:
  9883  003442  2EE8               	decfsz	wreg,f,c
  9884  003444  D7FE               	bra	u6317
  9885  003446  2E02               	decfsz	??_toggle_light^0,f,c
  9886  003448  D7FC               	bra	u6317
  9887  00344A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9888  00344C  D7FA               	bra	u6317
  9889  00344E  F000               	nop	
  9890  003450                     l4420:
  9891                           
  9892                           ;color.c: 40:         if (lightnumber == 2){
  9893  003450  0E02               	movlw	2
  9894  003452  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9895  003454  A4D8               	btfss	status,2,c
  9896  003456  EF2F  F01A         	goto	u4521
  9897  00345A  EF31  F01A         	goto	u4520
  9898  00345E                     u4521:
  9899  00345E  EF69  F01A         	goto	l4428
  9900  003462                     u4520:
  9901  003462                     
  9902                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9903  003462  A87C               	btfss	124,4,c	;volatile
  9904  003464  EF36  F01A         	goto	u4531
  9905  003468  EF3A  F01A         	goto	u4530
  9906  00346C                     u4531:
  9907  00346C  6A02               	clrf	??_toggle_light^0,c
  9908  00346E  2A02               	incf	??_toggle_light^0,f,c
  9909  003470  EF3B  F01A         	goto	u4548
  9910  003474                     u4530:
  9911  003474  6A02               	clrf	??_toggle_light^0,c
  9912  003476                     u4548:
  9913  003476  3A02               	swapf	??_toggle_light^0,f,c
  9914  003478  507C               	movf	124,w,c	;volatile
  9915  00347A  1802               	xorwf	??_toggle_light^0,w,c
  9916  00347C  0BEF               	andlw	-17
  9917  00347E  1802               	xorwf	??_toggle_light^0,w,c
  9918  003480  6E7C               	movwf	124,c	;volatile
  9919  003482                     
  9920                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9921  003482  0E29               	movlw	41
  9922  003484  6E03               	movwf	(??_toggle_light+1)^0,c
  9923  003486  0E96               	movlw	150
  9924  003488  6E02               	movwf	??_toggle_light^0,c
  9925  00348A  0E7F               	movlw	127
  9926  00348C                     u6327:
  9927  00348C  2EE8               	decfsz	wreg,f,c
  9928  00348E  D7FE               	bra	u6327
  9929  003490  2E02               	decfsz	??_toggle_light^0,f,c
  9930  003492  D7FC               	bra	u6327
  9931  003494  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9932  003496  D7FA               	bra	u6327
  9933  003498  F000               	nop	
  9934  00349A                     
  9935                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9936  00349A  A87C               	btfss	124,4,c	;volatile
  9937  00349C  EF52  F01A         	goto	u4551
  9938  0034A0  EF56  F01A         	goto	u4550
  9939  0034A4                     u4551:
  9940  0034A4  6A02               	clrf	??_toggle_light^0,c
  9941  0034A6  2A02               	incf	??_toggle_light^0,f,c
  9942  0034A8  EF57  F01A         	goto	u4568
  9943  0034AC                     u4550:
  9944  0034AC  6A02               	clrf	??_toggle_light^0,c
  9945  0034AE                     u4568:
  9946  0034AE  3A02               	swapf	??_toggle_light^0,f,c
  9947  0034B0  507C               	movf	124,w,c	;volatile
  9948  0034B2  1802               	xorwf	??_toggle_light^0,w,c
  9949  0034B4  0BEF               	andlw	-17
  9950  0034B6  1802               	xorwf	??_toggle_light^0,w,c
  9951  0034B8  6E7C               	movwf	124,c	;volatile
  9952                           
  9953                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9954  0034BA  0E29               	movlw	41
  9955  0034BC  6E03               	movwf	(??_toggle_light+1)^0,c
  9956  0034BE  0E96               	movlw	150
  9957  0034C0  6E02               	movwf	??_toggle_light^0,c
  9958  0034C2  0E7F               	movlw	127
  9959  0034C4                     u6337:
  9960  0034C4  2EE8               	decfsz	wreg,f,c
  9961  0034C6  D7FE               	bra	u6337
  9962  0034C8  2E02               	decfsz	??_toggle_light^0,f,c
  9963  0034CA  D7FC               	bra	u6337
  9964  0034CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9965  0034CE  D7FA               	bra	u6337
  9966  0034D0  F000               	nop	
  9967  0034D2                     l4428:
  9968                           
  9969                           ;color.c: 46:         if (lightnumber == 3){
  9970  0034D2  0E03               	movlw	3
  9971  0034D4  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9972  0034D6  A4D8               	btfss	status,2,c
  9973  0034D8  EF70  F01A         	goto	u4571
  9974  0034DC  EF72  F01A         	goto	u4570
  9975  0034E0                     u4571:
  9976  0034E0  EFAE  F01A         	goto	l4436
  9977  0034E4                     u4570:
  9978  0034E4                     
  9979                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9980  0034E4  A67C               	btfss	124,3,c	;volatile
  9981  0034E6  EF77  F01A         	goto	u4581
  9982  0034EA  EF7B  F01A         	goto	u4580
  9983  0034EE                     u4581:
  9984  0034EE  6A02               	clrf	??_toggle_light^0,c
  9985  0034F0  2A02               	incf	??_toggle_light^0,f,c
  9986  0034F2  EF7C  F01A         	goto	u4598
  9987  0034F6                     u4580:
  9988  0034F6  6A02               	clrf	??_toggle_light^0,c
  9989  0034F8                     u4598:
  9990  0034F8  4602               	rlncf	??_toggle_light^0,f,c
  9991  0034FA  4602               	rlncf	??_toggle_light^0,f,c
  9992  0034FC  4602               	rlncf	??_toggle_light^0,f,c
  9993  0034FE  507C               	movf	124,w,c	;volatile
  9994  003500  1802               	xorwf	??_toggle_light^0,w,c
  9995  003502  0BF7               	andlw	-9
  9996  003504  1802               	xorwf	??_toggle_light^0,w,c
  9997  003506  6E7C               	movwf	124,c	;volatile
  9998  003508                     
  9999                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10000  003508  0E29               	movlw	41
 10001  00350A  6E03               	movwf	(??_toggle_light+1)^0,c
 10002  00350C  0E96               	movlw	150
 10003  00350E  6E02               	movwf	??_toggle_light^0,c
 10004  003510  0E7F               	movlw	127
 10005  003512                     u6347:
 10006  003512  2EE8               	decfsz	wreg,f,c
 10007  003514  D7FE               	bra	u6347
 10008  003516  2E02               	decfsz	??_toggle_light^0,f,c
 10009  003518  D7FC               	bra	u6347
 10010  00351A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10011  00351C  D7FA               	bra	u6347
 10012  00351E  F000               	nop	
 10013  003520                     
 10014                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 10015  003520  A67C               	btfss	124,3,c	;volatile
 10016  003522  EF95  F01A         	goto	u4601
 10017  003526  EF99  F01A         	goto	u4600
 10018  00352A                     u4601:
 10019  00352A  6A02               	clrf	??_toggle_light^0,c
 10020  00352C  2A02               	incf	??_toggle_light^0,f,c
 10021  00352E  EF9A  F01A         	goto	u4618
 10022  003532                     u4600:
 10023  003532  6A02               	clrf	??_toggle_light^0,c
 10024  003534                     u4618:
 10025  003534  4602               	rlncf	??_toggle_light^0,f,c
 10026  003536  4602               	rlncf	??_toggle_light^0,f,c
 10027  003538  4602               	rlncf	??_toggle_light^0,f,c
 10028  00353A  507C               	movf	124,w,c	;volatile
 10029  00353C  1802               	xorwf	??_toggle_light^0,w,c
 10030  00353E  0BF7               	andlw	-9
 10031  003540  1802               	xorwf	??_toggle_light^0,w,c
 10032  003542  6E7C               	movwf	124,c	;volatile
 10033                           
 10034                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10035  003544  0E29               	movlw	41
 10036  003546  6E03               	movwf	(??_toggle_light+1)^0,c
 10037  003548  0E96               	movlw	150
 10038  00354A  6E02               	movwf	??_toggle_light^0,c
 10039  00354C  0E7F               	movlw	127
 10040  00354E                     u6357:
 10041  00354E  2EE8               	decfsz	wreg,f,c
 10042  003550  D7FE               	bra	u6357
 10043  003552  2E02               	decfsz	??_toggle_light^0,f,c
 10044  003554  D7FC               	bra	u6357
 10045  003556  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10046  003558  D7FA               	bra	u6357
 10047  00355A  F000               	nop	
 10048  00355C                     l4436:
 10049                           
 10050                           ;color.c: 52:         if (lightnumber == 4){
 10051  00355C  0E04               	movlw	4
 10052  00355E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10053  003560  A4D8               	btfss	status,2,c
 10054  003562  EFB5  F01A         	goto	u4621
 10055  003566  EFB7  F01A         	goto	u4620
 10056  00356A                     u4621:
 10057  00356A  EFED  F01A         	goto	l4444
 10058  00356E                     u4620:
 10059  00356E                     
 10060                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 10061  00356E  A07E               	btfss	126,0,c	;volatile
 10062  003570  EFBC  F01A         	goto	u4631
 10063  003574  EFC0  F01A         	goto	u4630
 10064  003578                     u4631:
 10065  003578  6A02               	clrf	??_toggle_light^0,c
 10066  00357A  2A02               	incf	??_toggle_light^0,f,c
 10067  00357C  EFC1  F01A         	goto	u4648
 10068  003580                     u4630:
 10069  003580  6A02               	clrf	??_toggle_light^0,c
 10070  003582                     u4648:
 10071  003582  507E               	movf	126,w,c	;volatile
 10072  003584  1802               	xorwf	??_toggle_light^0,w,c
 10073  003586  0BFE               	andlw	-2
 10074  003588  1802               	xorwf	??_toggle_light^0,w,c
 10075  00358A  6E7E               	movwf	126,c	;volatile
 10076  00358C                     
 10077                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10078  00358C  0E29               	movlw	41
 10079  00358E  6E03               	movwf	(??_toggle_light+1)^0,c
 10080  003590  0E96               	movlw	150
 10081  003592  6E02               	movwf	??_toggle_light^0,c
 10082  003594  0E7F               	movlw	127
 10083  003596                     u6367:
 10084  003596  2EE8               	decfsz	wreg,f,c
 10085  003598  D7FE               	bra	u6367
 10086  00359A  2E02               	decfsz	??_toggle_light^0,f,c
 10087  00359C  D7FC               	bra	u6367
 10088  00359E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10089  0035A0  D7FA               	bra	u6367
 10090  0035A2  F000               	nop	
 10091  0035A4                     
 10092                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 10093  0035A4  A07E               	btfss	126,0,c	;volatile
 10094  0035A6  EFD7  F01A         	goto	u4651
 10095  0035AA  EFDB  F01A         	goto	u4650
 10096  0035AE                     u4651:
 10097  0035AE  6A02               	clrf	??_toggle_light^0,c
 10098  0035B0  2A02               	incf	??_toggle_light^0,f,c
 10099  0035B2  EFDC  F01A         	goto	u4668
 10100  0035B6                     u4650:
 10101  0035B6  6A02               	clrf	??_toggle_light^0,c
 10102  0035B8                     u4668:
 10103  0035B8  507E               	movf	126,w,c	;volatile
 10104  0035BA  1802               	xorwf	??_toggle_light^0,w,c
 10105  0035BC  0BFE               	andlw	-2
 10106  0035BE  1802               	xorwf	??_toggle_light^0,w,c
 10107  0035C0  6E7E               	movwf	126,c	;volatile
 10108                           
 10109                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10110  0035C2  0E29               	movlw	41
 10111  0035C4  6E03               	movwf	(??_toggle_light+1)^0,c
 10112  0035C6  0E96               	movlw	150
 10113  0035C8  6E02               	movwf	??_toggle_light^0,c
 10114  0035CA  0E7F               	movlw	127
 10115  0035CC                     u6377:
 10116  0035CC  2EE8               	decfsz	wreg,f,c
 10117  0035CE  D7FE               	bra	u6377
 10118  0035D0  2E02               	decfsz	??_toggle_light^0,f,c
 10119  0035D2  D7FC               	bra	u6377
 10120  0035D4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10121  0035D6  D7FA               	bra	u6377
 10122  0035D8  F000               	nop	
 10123  0035DA                     l4444:
 10124                           
 10125                           ;color.c: 58:         if (lightnumber == 3){
 10126  0035DA  0E03               	movlw	3
 10127  0035DC  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10128  0035DE  A4D8               	btfss	status,2,c
 10129  0035E0  EFF4  F01A         	goto	u4671
 10130  0035E4  EFF6  F01A         	goto	u4670
 10131  0035E8                     u4671:
 10132  0035E8  EF2C  F01B         	goto	l4452
 10133  0035EC                     u4670:
 10134  0035EC                     
 10135                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 10136  0035EC  A080               	btfss	128,0,c	;volatile
 10137  0035EE  EFFB  F01A         	goto	u4681
 10138  0035F2  EFFF  F01A         	goto	u4680
 10139  0035F6                     u4681:
 10140  0035F6  6A02               	clrf	??_toggle_light^0,c
 10141  0035F8  2A02               	incf	??_toggle_light^0,f,c
 10142  0035FA  EF00  F01B         	goto	u4698
 10143  0035FE                     u4680:
 10144  0035FE  6A02               	clrf	??_toggle_light^0,c
 10145  003600                     u4698:
 10146  003600  5080               	movf	128,w,c	;volatile
 10147  003602  1802               	xorwf	??_toggle_light^0,w,c
 10148  003604  0BFE               	andlw	-2
 10149  003606  1802               	xorwf	??_toggle_light^0,w,c
 10150  003608  6E80               	movwf	128,c	;volatile
 10151  00360A                     
 10152                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10153  00360A  0E29               	movlw	41
 10154  00360C  6E03               	movwf	(??_toggle_light+1)^0,c
 10155  00360E  0E96               	movlw	150
 10156  003610  6E02               	movwf	??_toggle_light^0,c
 10157  003612  0E7F               	movlw	127
 10158  003614                     u6387:
 10159  003614  2EE8               	decfsz	wreg,f,c
 10160  003616  D7FE               	bra	u6387
 10161  003618  2E02               	decfsz	??_toggle_light^0,f,c
 10162  00361A  D7FC               	bra	u6387
 10163  00361C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10164  00361E  D7FA               	bra	u6387
 10165  003620  F000               	nop	
 10166  003622                     
 10167                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 10168  003622  A080               	btfss	128,0,c	;volatile
 10169  003624  EF16  F01B         	goto	u4701
 10170  003628  EF1A  F01B         	goto	u4700
 10171  00362C                     u4701:
 10172  00362C  6A02               	clrf	??_toggle_light^0,c
 10173  00362E  2A02               	incf	??_toggle_light^0,f,c
 10174  003630  EF1B  F01B         	goto	u4718
 10175  003634                     u4700:
 10176  003634  6A02               	clrf	??_toggle_light^0,c
 10177  003636                     u4718:
 10178  003636  5080               	movf	128,w,c	;volatile
 10179  003638  1802               	xorwf	??_toggle_light^0,w,c
 10180  00363A  0BFE               	andlw	-2
 10181  00363C  1802               	xorwf	??_toggle_light^0,w,c
 10182  00363E  6E80               	movwf	128,c	;volatile
 10183                           
 10184                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10185  003640  0E29               	movlw	41
 10186  003642  6E03               	movwf	(??_toggle_light+1)^0,c
 10187  003644  0E96               	movlw	150
 10188  003646  6E02               	movwf	??_toggle_light^0,c
 10189  003648  0E7F               	movlw	127
 10190  00364A                     u6397:
 10191  00364A  2EE8               	decfsz	wreg,f,c
 10192  00364C  D7FE               	bra	u6397
 10193  00364E  2E02               	decfsz	??_toggle_light^0,f,c
 10194  003650  D7FC               	bra	u6397
 10195  003652  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10196  003654  D7FA               	bra	u6397
 10197  003656  F000               	nop	
 10198  003658                     l4452:
 10199                           
 10200                           ;color.c: 64:     }
 10201  003658  2A04               	incf	toggle_light@i^0,f,c
 10202  00365A                     l58:
 10203  00365A  5001               	movf	toggle_light@toggletime^0,w,c
 10204  00365C  5C04               	subwf	toggle_light@i^0,w,c
 10205  00365E  A0D8               	btfss	status,0,c
 10206  003660  EF34  F01B         	goto	u4721
 10207  003664  EF36  F01B         	goto	u4720
 10208  003668                     u4721:
 10209  003668  EFE8  F019         	goto	l4412
 10210  00366C                     u4720:
 10211  00366C  0012               	return		;funcret
 10212  00366E                     __end_of_toggle_light:
 10213                           	callstack 0
 10214                           
 10215 ;; *************** function _lroundf *****************
 10216 ;; Defined at:
 10217 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  x               4    6[BANK0 ] float 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  4    6[BANK0 ] long 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;Total ram usage:        4 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; Hardware stack levels required when called: 4
 10238 ;; This function calls:
 10239 ;;		___fltol
 10240 ;;		_roundf
 10241 ;; This function is called by:
 10242 ;;		_detect_color
 10243 ;;		_amb_light_measure
 10244 ;;		_distance_measure
 10245 ;;		_check_color_reading
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text49
 10250  005970                     __ptext49:
 10251                           	callstack 0
 10252  005970                     _lroundf:
 10253                           	callstack 24
 10254  005970  C066  F041         	movff	lroundf@x,roundf@x
 10255  005974  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10256  005978  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10257  00597C  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10258  005980  EC81  F011         	call	_roundf	;wreg free
 10259  005984  C041  F05B         	movff	?_roundf,___fltol@f1
 10260  005988  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10261  00598C  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10262  005990  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10263  005994  ECCB  F024         	call	___fltol	;wreg free
 10264  005998  C05B  F066         	movff	?___fltol,?_lroundf
 10265  00599C  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10266  0059A0  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10267  0059A4  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10268  0059A8  0012               	return		;funcret
 10269  0059AA                     __end_of_lroundf:
 10270                           	callstack 0
 10271                           
 10272 ;; *************** function _roundf *****************
 10273 ;; Defined at:
 10274 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  x               4   64[COMRAM] float 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  y               4   86[COMRAM] float 
 10279 ;;  u               4   82[COMRAM] struct .
 10280 ;;  e               2   76[COMRAM] int 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  4   64[COMRAM] float 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10291 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10292 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10293 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10294 ;;Total ram usage:       26 bytes
 10295 ;; Hardware stack levels used: 1
 10296 ;; Hardware stack levels required when called: 3
 10297 ;; This function calls:
 10298 ;;		___fladd
 10299 ;;		___flge
 10300 ;;		___flmul
 10301 ;;		___flneg
 10302 ;;		___flsub
 10303 ;; This function is called by:
 10304 ;;		_lroundf
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text50
 10309  002302                     __ptext50:
 10310                           	callstack 0
 10311  002302                     _roundf:
 10312                           	callstack 24
 10313  002302  C13A  F053         	movff	roundf@F527,roundf@u
 10314  002306  C13B  F054         	movff	roundf@F527+1,roundf@u+1
 10315  00230A  C13C  F055         	movff	roundf@F527+2,roundf@u+2
 10316  00230E  C13D  F056         	movff	roundf@F527+3,roundf@u+3
 10317  002312  C041  F053         	movff	roundf@x,roundf@u
 10318  002316  C042  F054         	movff	roundf@x+1,roundf@u+1
 10319  00231A  C043  F055         	movff	roundf@x+2,roundf@u+2
 10320  00231E  C044  F056         	movff	roundf@x+3,roundf@u+3
 10321  002322  C053  F045         	movff	roundf@u,??_roundf
 10322  002326  C054  F046         	movff	roundf@u+1,??_roundf+1
 10323  00232A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10324  00232E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10325  002332  0E18               	movlw	24
 10326  002334  EFA1  F011         	goto	u4380
 10327  002338                     u4385:
 10328  002338  90D8               	bcf	status,0,c
 10329  00233A  3248               	rrcf	(??_roundf+3)^0,f,c
 10330  00233C  3247               	rrcf	(??_roundf+2)^0,f,c
 10331  00233E  3246               	rrcf	(??_roundf+1)^0,f,c
 10332  002340  3245               	rrcf	??_roundf^0,f,c
 10333  002342                     u4380:
 10334  002342  2EE8               	decfsz	wreg,f,c
 10335  002344  EF9C  F011         	goto	u4385
 10336  002348  5045               	movf	??_roundf^0,w,c
 10337  00234A  6E4D               	movwf	roundf@e^0,c
 10338  00234C  6A4E               	clrf	(roundf@e+1)^0,c
 10339  00234E  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10340  002350  EFB3  F011         	goto	u4391
 10341  002354  504E               	movf	(roundf@e+1)^0,w,c
 10342  002356  E109               	bnz	u4390
 10343  002358  0E96               	movlw	150
 10344  00235A  5C4D               	subwf	roundf@e^0,w,c
 10345  00235C  A0D8               	btfss	status,0,c
 10346  00235E  EFB3  F011         	goto	u4391
 10347  002362  EFB5  F011         	goto	u4390
 10348  002366                     u4391:
 10349  002366  EFBF  F011         	goto	l4382
 10350  00236A                     u4390:
 10351  00236A  C041  F041         	movff	roundf@x,?_roundf
 10352  00236E  C042  F042         	movff	roundf@x+1,?_roundf+1
 10353  002372  C043  F043         	movff	roundf@x+2,?_roundf+2
 10354  002376  C044  F044         	movff	roundf@x+3,?_roundf+3
 10355  00237A  EF57  F013         	goto	l1463
 10356  00237E                     l4382:
 10357  00237E  C053  F045         	movff	roundf@u,??_roundf
 10358  002382  C054  F046         	movff	roundf@u+1,??_roundf+1
 10359  002386  C055  F047         	movff	roundf@u+2,??_roundf+2
 10360  00238A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10361  00238E  0E20               	movlw	32
 10362  002390  EFCF  F011         	goto	u4400
 10363  002394                     u4405:
 10364  002394  90D8               	bcf	status,0,c
 10365  002396  3248               	rrcf	(??_roundf+3)^0,f,c
 10366  002398  3247               	rrcf	(??_roundf+2)^0,f,c
 10367  00239A  3246               	rrcf	(??_roundf+1)^0,f,c
 10368  00239C  3245               	rrcf	??_roundf^0,f,c
 10369  00239E                     u4400:
 10370  00239E  2EE8               	decfsz	wreg,f,c
 10371  0023A0  EFCA  F011         	goto	u4405
 10372  0023A4  5045               	movf	??_roundf^0,w,c
 10373  0023A6  1046               	iorwf	(??_roundf+1)^0,w,c
 10374  0023A8  1047               	iorwf	(??_roundf+2)^0,w,c
 10375  0023AA  1048               	iorwf	(??_roundf+3)^0,w,c
 10376  0023AC  B4D8               	btfsc	status,2,c
 10377  0023AE  EFDB  F011         	goto	u4411
 10378  0023B2  EFDD  F011         	goto	u4410
 10379  0023B6                     u4411:
 10380  0023B6  EFEF  F011         	goto	l4386
 10381  0023BA                     u4410:
 10382  0023BA  C041  F001         	movff	roundf@x,___flneg@f1
 10383  0023BE  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10384  0023C2  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10385  0023C6  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10386  0023CA  ECD5  F02C         	call	___flneg	;wreg free
 10387  0023CE  C001  F041         	movff	?___flneg,roundf@x
 10388  0023D2  C002  F042         	movff	?___flneg+1,roundf@x+1
 10389  0023D6  C003  F043         	movff	?___flneg+2,roundf@x+2
 10390  0023DA  C004  F044         	movff	?___flneg+3,roundf@x+3
 10391  0023DE                     l4386:
 10392  0023DE  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10393  0023E0  EFFD  F011         	goto	u4420
 10394  0023E4  504E               	movf	(roundf@e+1)^0,w,c
 10395  0023E6  E107               	bnz	u4421
 10396  0023E8  0E7E               	movlw	126
 10397  0023EA  5C4D               	subwf	roundf@e^0,w,c
 10398  0023EC  B0D8               	btfsc	status,0,c
 10399  0023EE  EFFB  F011         	goto	u4421
 10400  0023F2  EFFD  F011         	goto	u4420
 10401  0023F6                     u4421:
 10402  0023F6  EF19  F012         	goto	l4392
 10403  0023FA                     u4420:
 10404  0023FA  C053  F028         	movff	roundf@u,___flmul@b
 10405  0023FE  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10406  002402  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10407  002406  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10408  00240A  0E00               	movlw	0
 10409  00240C  6E2C               	movwf	___flmul@a^0,c
 10410  00240E  0E00               	movlw	0
 10411  002410  6E2D               	movwf	(___flmul@a+1)^0,c
 10412  002412  0E00               	movlw	0
 10413  002414  6E2E               	movwf	(___flmul@a+2)^0,c
 10414  002416  0E00               	movlw	0
 10415  002418  6E2F               	movwf	(___flmul@a+3)^0,c
 10416  00241A  EC6C  F00F         	call	___flmul	;wreg free
 10417  00241E  C028  F041         	movff	?___flmul,?_roundf
 10418  002422  C029  F042         	movff	?___flmul+1,?_roundf+1
 10419  002426  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10420  00242A  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10421  00242E  EF57  F013         	goto	l1463
 10422  002432                     l4392:
 10423  002432  0E00               	movlw	0
 10424  002434  6E05               	movwf	___fladd@a^0,c
 10425  002436  0E00               	movlw	0
 10426  002438  6E06               	movwf	(___fladd@a+1)^0,c
 10427  00243A  0E00               	movlw	0
 10428  00243C  6E07               	movwf	(___fladd@a+2)^0,c
 10429  00243E  0E4B               	movlw	75
 10430  002440  6E08               	movwf	(___fladd@a+3)^0,c
 10431  002442  C041  F001         	movff	roundf@x,___fladd@b
 10432  002446  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10433  00244A  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10434  00244E  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10435  002452  EC0C  F00D         	call	___fladd	;wreg free
 10436  002456  C001  F04F         	movff	?___fladd,_roundf$3163
 10437  00245A  C002  F050         	movff	?___fladd+1,_roundf$3163+1
 10438  00245E  C003  F051         	movff	?___fladd+2,_roundf$3163+2
 10439  002462  C004  F052         	movff	?___fladd+3,_roundf$3163+3
 10440  002466  0E00               	movlw	0
 10441  002468  6E05               	movwf	___fladd@a^0,c
 10442  00246A  0E00               	movlw	0
 10443  00246C  6E06               	movwf	(___fladd@a+1)^0,c
 10444  00246E  0E00               	movlw	0
 10445  002470  6E07               	movwf	(___fladd@a+2)^0,c
 10446  002472  0ECB               	movlw	203
 10447  002474  6E08               	movwf	(___fladd@a+3)^0,c
 10448  002476  C04F  F001         	movff	_roundf$3163,___fladd@b
 10449  00247A  C050  F002         	movff	_roundf$3163+1,___fladd@b+1
 10450  00247E  C051  F003         	movff	_roundf$3163+2,___fladd@b+2
 10451  002482  C052  F004         	movff	_roundf$3163+3,___fladd@b+3
 10452  002486  EC0C  F00D         	call	___fladd	;wreg free
 10453  00248A  C001  F049         	movff	?___fladd,_roundf$3164
 10454  00248E  C002  F04A         	movff	?___fladd+1,_roundf$3164+1
 10455  002492  C003  F04B         	movff	?___fladd+2,_roundf$3164+2
 10456  002496  C004  F04C         	movff	?___fladd+3,_roundf$3164+3
 10457  00249A  C049  F011         	movff	_roundf$3164,___flsub@b
 10458  00249E  C04A  F012         	movff	_roundf$3164+1,___flsub@b+1
 10459  0024A2  C04B  F013         	movff	_roundf$3164+2,___flsub@b+2
 10460  0024A6  C04C  F014         	movff	_roundf$3164+3,___flsub@b+3
 10461  0024AA  C041  F015         	movff	roundf@x,___flsub@a
 10462  0024AE  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10463  0024B2  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10464  0024B6  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10465  0024BA  EC92  F02B         	call	___flsub	;wreg free
 10466  0024BE  C011  F057         	movff	?___flsub,roundf@y
 10467  0024C2  C012  F058         	movff	?___flsub+1,roundf@y+1
 10468  0024C6  C013  F059         	movff	?___flsub+2,roundf@y+2
 10469  0024CA  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10470  0024CE  0E00               	movlw	0
 10471  0024D0  6E01               	movwf	___flge@ff1^0,c
 10472  0024D2  0E00               	movlw	0
 10473  0024D4  6E02               	movwf	(___flge@ff1+1)^0,c
 10474  0024D6  0E00               	movlw	0
 10475  0024D8  6E03               	movwf	(___flge@ff1+2)^0,c
 10476  0024DA  0E3F               	movlw	63
 10477  0024DC  6E04               	movwf	(___flge@ff1+3)^0,c
 10478  0024DE  C057  F005         	movff	roundf@y,___flge@ff2
 10479  0024E2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10480  0024E6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10481  0024EA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10482  0024EE  EC4F  F025         	call	___flge	;wreg free
 10483  0024F2  B0D8               	btfsc	status,0,c
 10484  0024F4  EF7E  F012         	goto	u4431
 10485  0024F8  EF80  F012         	goto	u4430
 10486  0024FC                     u4431:
 10487  0024FC  EFB6  F012         	goto	l4396
 10488  002500                     u4430:
 10489  002500  C041  F005         	movff	roundf@x,___fladd@a
 10490  002504  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10491  002508  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10492  00250C  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10493  002510  C057  F001         	movff	roundf@y,___fladd@b
 10494  002514  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10495  002518  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10496  00251C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10497  002520  EC0C  F00D         	call	___fladd	;wreg free
 10498  002524  C001  F04F         	movff	?___fladd,_roundf$3163
 10499  002528  C002  F050         	movff	?___fladd+1,_roundf$3163+1
 10500  00252C  C003  F051         	movff	?___fladd+2,_roundf$3163+2
 10501  002530  C004  F052         	movff	?___fladd+3,_roundf$3163+3
 10502  002534  C04F  F001         	movff	_roundf$3163,___fladd@b
 10503  002538  C050  F002         	movff	_roundf$3163+1,___fladd@b+1
 10504  00253C  C051  F003         	movff	_roundf$3163+2,___fladd@b+2
 10505  002540  C052  F004         	movff	_roundf$3163+3,___fladd@b+3
 10506  002544  0E00               	movlw	0
 10507  002546  6E05               	movwf	___fladd@a^0,c
 10508  002548  0E00               	movlw	0
 10509  00254A  6E06               	movwf	(___fladd@a+1)^0,c
 10510  00254C  0E80               	movlw	128
 10511  00254E  6E07               	movwf	(___fladd@a+2)^0,c
 10512  002550  0EBF               	movlw	191
 10513  002552  6E08               	movwf	(___fladd@a+3)^0,c
 10514  002554  EC0C  F00D         	call	___fladd	;wreg free
 10515  002558  C001  F057         	movff	?___fladd,roundf@y
 10516  00255C  C002  F058         	movff	?___fladd+1,roundf@y+1
 10517  002560  C003  F059         	movff	?___fladd+2,roundf@y+2
 10518  002564  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10519  002568  EF1F  F013         	goto	l4402
 10520  00256C                     l4396:
 10521  00256C  0E00               	movlw	0
 10522  00256E  6E01               	movwf	___flge@ff1^0,c
 10523  002570  0E00               	movlw	0
 10524  002572  6E02               	movwf	(___flge@ff1+1)^0,c
 10525  002574  0E00               	movlw	0
 10526  002576  6E03               	movwf	(___flge@ff1+2)^0,c
 10527  002578  0EBF               	movlw	191
 10528  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
 10529  00257C  C057  F005         	movff	roundf@y,___flge@ff2
 10530  002580  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10531  002584  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10532  002588  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10533  00258C  EC4F  F025         	call	___flge	;wreg free
 10534  002590  A0D8               	btfss	status,0,c
 10535  002592  EFCD  F012         	goto	u4441
 10536  002596  EFCF  F012         	goto	u4440
 10537  00259A                     u4441:
 10538  00259A  EF05  F013         	goto	l4400
 10539  00259E                     u4440:
 10540  00259E  C041  F005         	movff	roundf@x,___fladd@a
 10541  0025A2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10542  0025A6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10543  0025AA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10544  0025AE  C057  F001         	movff	roundf@y,___fladd@b
 10545  0025B2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10546  0025B6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10547  0025BA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10548  0025BE  EC0C  F00D         	call	___fladd	;wreg free
 10549  0025C2  C001  F04F         	movff	?___fladd,_roundf$3163
 10550  0025C6  C002  F050         	movff	?___fladd+1,_roundf$3163+1
 10551  0025CA  C003  F051         	movff	?___fladd+2,_roundf$3163+2
 10552  0025CE  C004  F052         	movff	?___fladd+3,_roundf$3163+3
 10553  0025D2  C04F  F001         	movff	_roundf$3163,___fladd@b
 10554  0025D6  C050  F002         	movff	_roundf$3163+1,___fladd@b+1
 10555  0025DA  C051  F003         	movff	_roundf$3163+2,___fladd@b+2
 10556  0025DE  C052  F004         	movff	_roundf$3163+3,___fladd@b+3
 10557  0025E2  0E00               	movlw	0
 10558  0025E4  6E05               	movwf	___fladd@a^0,c
 10559  0025E6  0E00               	movlw	0
 10560  0025E8  6E06               	movwf	(___fladd@a+1)^0,c
 10561  0025EA  0E80               	movlw	128
 10562  0025EC  6E07               	movwf	(___fladd@a+2)^0,c
 10563  0025EE  0E3F               	movlw	63
 10564  0025F0  6E08               	movwf	(___fladd@a+3)^0,c
 10565  0025F2  EC0C  F00D         	call	___fladd	;wreg free
 10566  0025F6  C001  F057         	movff	?___fladd,roundf@y
 10567  0025FA  C002  F058         	movff	?___fladd+1,roundf@y+1
 10568  0025FE  C003  F059         	movff	?___fladd+2,roundf@y+2
 10569  002602  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10570  002606  EF1F  F013         	goto	l4402
 10571  00260A                     l4400:
 10572  00260A  C057  F001         	movff	roundf@y,___fladd@b
 10573  00260E  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10574  002612  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10575  002616  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10576  00261A  C041  F005         	movff	roundf@x,___fladd@a
 10577  00261E  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10578  002622  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10579  002626  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10580  00262A  EC0C  F00D         	call	___fladd	;wreg free
 10581  00262E  C001  F057         	movff	?___fladd,roundf@y
 10582  002632  C002  F058         	movff	?___fladd+1,roundf@y+1
 10583  002636  C003  F059         	movff	?___fladd+2,roundf@y+2
 10584  00263A  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10585  00263E                     l4402:
 10586  00263E  C053  F045         	movff	roundf@u,??_roundf
 10587  002642  C054  F046         	movff	roundf@u+1,??_roundf+1
 10588  002646  C055  F047         	movff	roundf@u+2,??_roundf+2
 10589  00264A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10590  00264E  0E20               	movlw	32
 10591  002650  EF2F  F013         	goto	u4450
 10592  002654                     u4455:
 10593  002654  90D8               	bcf	status,0,c
 10594  002656  3248               	rrcf	(??_roundf+3)^0,f,c
 10595  002658  3247               	rrcf	(??_roundf+2)^0,f,c
 10596  00265A  3246               	rrcf	(??_roundf+1)^0,f,c
 10597  00265C  3245               	rrcf	??_roundf^0,f,c
 10598  00265E                     u4450:
 10599  00265E  2EE8               	decfsz	wreg,f,c
 10600  002660  EF2A  F013         	goto	u4455
 10601  002664  5045               	movf	??_roundf^0,w,c
 10602  002666  1046               	iorwf	(??_roundf+1)^0,w,c
 10603  002668  1047               	iorwf	(??_roundf+2)^0,w,c
 10604  00266A  1048               	iorwf	(??_roundf+3)^0,w,c
 10605  00266C  B4D8               	btfsc	status,2,c
 10606  00266E  EF3B  F013         	goto	u4461
 10607  002672  EF3D  F013         	goto	u4460
 10608  002676                     u4461:
 10609  002676  EF4F  F013         	goto	l4406
 10610  00267A                     u4460:
 10611  00267A  C057  F001         	movff	roundf@y,___flneg@f1
 10612  00267E  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10613  002682  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10614  002686  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10615  00268A  ECD5  F02C         	call	___flneg	;wreg free
 10616  00268E  C001  F057         	movff	?___flneg,roundf@y
 10617  002692  C002  F058         	movff	?___flneg+1,roundf@y+1
 10618  002696  C003  F059         	movff	?___flneg+2,roundf@y+2
 10619  00269A  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10620  00269E                     l4406:
 10621  00269E  C057  F041         	movff	roundf@y,?_roundf
 10622  0026A2  C058  F042         	movff	roundf@y+1,?_roundf+1
 10623  0026A6  C059  F043         	movff	roundf@y+2,?_roundf+2
 10624  0026AA  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10625  0026AE                     l1463:
 10626  0026AE  0012               	return		;funcret
 10627  0026B0                     __end_of_roundf:
 10628                           	callstack 0
 10629                           
 10630 ;; *************** function ___flsub *****************
 10631 ;; Defined at:
 10632 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  b               4   16[COMRAM] float 
 10635 ;;  a               4   20[COMRAM] float 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  4   16[COMRAM] float 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, status,0, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;Total ram usage:        8 bytes
 10652 ;; Hardware stack levels used: 1
 10653 ;; Hardware stack levels required when called: 2
 10654 ;; This function calls:
 10655 ;;		___fladd
 10656 ;; This function is called by:
 10657 ;;		_roundf
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text51
 10662  005724                     __ptext51:
 10663                           	callstack 0
 10664  005724                     ___flsub:
 10665                           	callstack 24
 10666  005724  0E00               	movlw	0
 10667  005726  1A15               	xorwf	___flsub@a^0,f,c
 10668  005728  0E00               	movlw	0
 10669  00572A  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10670  00572C  0E00               	movlw	0
 10671  00572E  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10672  005730  0E80               	movlw	128
 10673  005732  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10674  005734  C011  F001         	movff	___flsub@b,___fladd@b
 10675  005738  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10676  00573C  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10677  005740  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10678  005744  C015  F005         	movff	___flsub@a,___fladd@a
 10679  005748  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10680  00574C  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10681  005750  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10682  005754  EC0C  F00D         	call	___fladd	;wreg free
 10683  005758  C001  F011         	movff	?___fladd,?___flsub
 10684  00575C  C002  F012         	movff	?___fladd+1,?___flsub+1
 10685  005760  C003  F013         	movff	?___fladd+2,?___flsub+2
 10686  005764  C004  F014         	movff	?___fladd+3,?___flsub+3
 10687  005768  0012               	return		;funcret
 10688  00576A                     __end_of___flsub:
 10689                           	callstack 0
 10690                           
 10691 ;; *************** function ___fladd *****************
 10692 ;; Defined at:
 10693 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  b               4    0[COMRAM] float 
 10696 ;;  a               4    4[COMRAM] float 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  grs             1   15[COMRAM] unsigned char 
 10699 ;;  bexp            1   14[COMRAM] unsigned char 
 10700 ;;  aexp            1   13[COMRAM] unsigned char 
 10701 ;;  signs           1   12[COMRAM] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  4    0[COMRAM] unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, status,2, status,0
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;Total ram usage:       16 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 1
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		___flsub
 10722 ;;		_roundf
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text52
 10727  001A18                     __ptext52:
 10728                           	callstack 0
 10729  001A18                     ___fladd:
 10730                           	callstack 24
 10731  001A18  5004               	movf	(___fladd@b+3)^0,w,c
 10732  001A1A  0B80               	andlw	128
 10733  001A1C  6E0D               	movwf	___fladd@signs^0,c
 10734  001A1E  5004               	movf	(___fladd@b+3)^0,w,c
 10735  001A20  2404               	addwf	(___fladd@b+3)^0,w,c
 10736  001A22  6E0F               	movwf	___fladd@bexp^0,c
 10737  001A24  AE03               	btfss	(___fladd@b+2)^0,7,c
 10738  001A26  EF17  F00D         	goto	u3431
 10739  001A2A  EF19  F00D         	goto	u3430
 10740  001A2E                     u3431:
 10741  001A2E  EF1A  F00D         	goto	l3742
 10742  001A32                     u3430:
 10743  001A32  800F               	bsf	___fladd@bexp^0,0,c
 10744  001A34                     l3742:
 10745  001A34  500F               	movf	___fladd@bexp^0,w,c
 10746  001A36  B4D8               	btfsc	status,2,c
 10747  001A38  EF20  F00D         	goto	u3441
 10748  001A3C  EF22  F00D         	goto	u3440
 10749  001A40                     u3441:
 10750  001A40  EF37  F00D         	goto	l3752
 10751  001A44                     u3440:
 10752  001A44  280F               	incf	___fladd@bexp^0,w,c
 10753  001A46  A4D8               	btfss	status,2,c
 10754  001A48  EF28  F00D         	goto	u3451
 10755  001A4C  EF2A  F00D         	goto	u3450
 10756  001A50                     u3451:
 10757  001A50  EF32  F00D         	goto	l3748
 10758  001A54                     u3450:
 10759  001A54  0E00               	movlw	0
 10760  001A56  6E01               	movwf	___fladd@b^0,c
 10761  001A58  0E00               	movlw	0
 10762  001A5A  6E02               	movwf	(___fladd@b+1)^0,c
 10763  001A5C  0E00               	movlw	0
 10764  001A5E  6E03               	movwf	(___fladd@b+2)^0,c
 10765  001A60  0E00               	movlw	0
 10766  001A62  6E04               	movwf	(___fladd@b+3)^0,c
 10767  001A64                     l3748:
 10768  001A64  8E03               	bsf	(___fladd@b+2)^0,7,c
 10769  001A66  0E00               	movlw	0
 10770  001A68  6E04               	movwf	(___fladd@b+3)^0,c
 10771  001A6A  EF3F  F00D         	goto	l3754
 10772  001A6E                     l3752:
 10773  001A6E  0E00               	movlw	0
 10774  001A70  6E01               	movwf	___fladd@b^0,c
 10775  001A72  0E00               	movlw	0
 10776  001A74  6E02               	movwf	(___fladd@b+1)^0,c
 10777  001A76  0E00               	movlw	0
 10778  001A78  6E03               	movwf	(___fladd@b+2)^0,c
 10779  001A7A  0E00               	movlw	0
 10780  001A7C  6E04               	movwf	(___fladd@b+3)^0,c
 10781  001A7E                     l3754:
 10782  001A7E  5008               	movf	(___fladd@a+3)^0,w,c
 10783  001A80  0B80               	andlw	128
 10784  001A82  6E0E               	movwf	___fladd@aexp^0,c
 10785  001A84  500D               	movf	___fladd@signs^0,w,c
 10786  001A86  180E               	xorwf	___fladd@aexp^0,w,c
 10787  001A88  B4D8               	btfsc	status,2,c
 10788  001A8A  EF49  F00D         	goto	u3461
 10789  001A8E  EF4B  F00D         	goto	u3460
 10790  001A92                     u3461:
 10791  001A92  EF4C  F00D         	goto	l3760
 10792  001A96                     u3460:
 10793  001A96  8C0D               	bsf	___fladd@signs^0,6,c
 10794  001A98                     l3760:
 10795  001A98  5008               	movf	(___fladd@a+3)^0,w,c
 10796  001A9A  2408               	addwf	(___fladd@a+3)^0,w,c
 10797  001A9C  6E0E               	movwf	___fladd@aexp^0,c
 10798  001A9E  AE07               	btfss	(___fladd@a+2)^0,7,c
 10799  001AA0  EF54  F00D         	goto	u3471
 10800  001AA4  EF56  F00D         	goto	u3470
 10801  001AA8                     u3471:
 10802  001AA8  EF57  F00D         	goto	l3766
 10803  001AAC                     u3470:
 10804  001AAC  800E               	bsf	___fladd@aexp^0,0,c
 10805  001AAE                     l3766:
 10806  001AAE  500E               	movf	___fladd@aexp^0,w,c
 10807  001AB0  B4D8               	btfsc	status,2,c
 10808  001AB2  EF5D  F00D         	goto	u3481
 10809  001AB6  EF5F  F00D         	goto	u3480
 10810  001ABA                     u3481:
 10811  001ABA  EF74  F00D         	goto	l3776
 10812  001ABE                     u3480:
 10813  001ABE  280E               	incf	___fladd@aexp^0,w,c
 10814  001AC0  A4D8               	btfss	status,2,c
 10815  001AC2  EF65  F00D         	goto	u3491
 10816  001AC6  EF67  F00D         	goto	u3490
 10817  001ACA                     u3491:
 10818  001ACA  EF6F  F00D         	goto	l3772
 10819  001ACE                     u3490:
 10820  001ACE  0E00               	movlw	0
 10821  001AD0  6E05               	movwf	___fladd@a^0,c
 10822  001AD2  0E00               	movlw	0
 10823  001AD4  6E06               	movwf	(___fladd@a+1)^0,c
 10824  001AD6  0E00               	movlw	0
 10825  001AD8  6E07               	movwf	(___fladd@a+2)^0,c
 10826  001ADA  0E00               	movlw	0
 10827  001ADC  6E08               	movwf	(___fladd@a+3)^0,c
 10828  001ADE                     l3772:
 10829  001ADE  8E07               	bsf	(___fladd@a+2)^0,7,c
 10830  001AE0  0E00               	movlw	0
 10831  001AE2  6E08               	movwf	(___fladd@a+3)^0,c
 10832  001AE4  EF7C  F00D         	goto	l3778
 10833  001AE8                     l3776:
 10834  001AE8  0E00               	movlw	0
 10835  001AEA  6E05               	movwf	___fladd@a^0,c
 10836  001AEC  0E00               	movlw	0
 10837  001AEE  6E06               	movwf	(___fladd@a+1)^0,c
 10838  001AF0  0E00               	movlw	0
 10839  001AF2  6E07               	movwf	(___fladd@a+2)^0,c
 10840  001AF4  0E00               	movlw	0
 10841  001AF6  6E08               	movwf	(___fladd@a+3)^0,c
 10842  001AF8                     l3778:
 10843  001AF8  500F               	movf	___fladd@bexp^0,w,c
 10844  001AFA  5C0E               	subwf	___fladd@aexp^0,w,c
 10845  001AFC  B0D8               	btfsc	status,0,c
 10846  001AFE  EF83  F00D         	goto	u3501
 10847  001B02  EF85  F00D         	goto	u3500
 10848  001B06                     u3501:
 10849  001B06  EFAC  F00D         	goto	l3814
 10850  001B0A                     u3500:
 10851  001B0A  AC0D               	btfss	___fladd@signs^0,6,c
 10852  001B0C  EF8A  F00D         	goto	u3511
 10853  001B10  EF8C  F00D         	goto	u3510
 10854  001B14                     u3511:
 10855  001B14  EF8E  F00D         	goto	l3784
 10856  001B18                     u3510:
 10857  001B18  0E80               	movlw	128
 10858  001B1A  1A0D               	xorwf	___fladd@signs^0,f,c
 10859  001B1C                     l3784:
 10860  001B1C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10861  001B20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10862  001B24  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10863  001B28  C001  F010         	movff	___fladd@b,___fladd@grs
 10864  001B2C  C005  F001         	movff	___fladd@a,___fladd@b
 10865  001B30  C010  F005         	movff	___fladd@grs,___fladd@a
 10866  001B34  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10867  001B38  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10868  001B3C  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10869  001B40  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10870  001B44  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10871  001B48  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10872  001B4C  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10873  001B50  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10874  001B54  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10875  001B58                     l3814:
 10876  001B58  0E00               	movlw	0
 10877  001B5A  6E10               	movwf	___fladd@grs^0,c
 10878  001B5C  500F               	movf	___fladd@bexp^0,w,c
 10879  001B5E  C00E  F009         	movff	___fladd@aexp,??___fladd
 10880  001B62  6A0A               	clrf	(??___fladd+1)^0,c
 10881  001B64  5E09               	subwf	??___fladd^0,f,c
 10882  001B66  0E00               	movlw	0
 10883  001B68  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10884  001B6A  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10885  001B6C  EFC1  F00D         	goto	u3521
 10886  001B70  500A               	movf	(??___fladd+1)^0,w,c
 10887  001B72  E109               	bnz	u3520
 10888  001B74  0E1A               	movlw	26
 10889  001B76  5C09               	subwf	??___fladd^0,w,c
 10890  001B78  A0D8               	btfss	status,0,c
 10891  001B7A  EFC1  F00D         	goto	u3521
 10892  001B7E  EFC3  F00D         	goto	u3520
 10893  001B82                     u3521:
 10894  001B82  EFFA  F00D         	goto	l1199
 10895  001B86                     u3520:
 10896  001B86  5001               	movf	___fladd@b^0,w,c
 10897  001B88  1002               	iorwf	(___fladd@b+1)^0,w,c
 10898  001B8A  1003               	iorwf	(___fladd@b+2)^0,w,c
 10899  001B8C  1004               	iorwf	(___fladd@b+3)^0,w,c
 10900  001B8E  A4D8               	btfss	status,2,c
 10901  001B90  EFCC  F00D         	goto	u3531
 10902  001B94  EFCF  F00D         	goto	u3530
 10903  001B98                     u3531:
 10904  001B98  0E01               	movlw	1
 10905  001B9A  EFD0  F00D         	goto	u3540
 10906  001B9E                     u3530:
 10907  001B9E  0E00               	movlw	0
 10908  001BA0                     u3540:
 10909  001BA0  6E10               	movwf	___fladd@grs^0,c
 10910  001BA2  0E00               	movlw	0
 10911  001BA4  6E01               	movwf	___fladd@b^0,c
 10912  001BA6  0E00               	movlw	0
 10913  001BA8  6E02               	movwf	(___fladd@b+1)^0,c
 10914  001BAA  0E00               	movlw	0
 10915  001BAC  6E03               	movwf	(___fladd@b+2)^0,c
 10916  001BAE  0E00               	movlw	0
 10917  001BB0  6E04               	movwf	(___fladd@b+3)^0,c
 10918  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10919  001BB6  EF03  F00E         	goto	l1198
 10920  001BBA                     l1200:
 10921  001BBA  A010               	btfss	___fladd@grs^0,0,c
 10922  001BBC  EFE2  F00D         	goto	u3551
 10923  001BC0  EFE4  F00D         	goto	u3550
 10924  001BC4                     u3551:
 10925  001BC4  EFEA  F00D         	goto	l3826
 10926  001BC8                     u3550:
 10927  001BC8  90D8               	bcf	status,0,c
 10928  001BCA  3010               	rrcf	___fladd@grs^0,w,c
 10929  001BCC  0901               	iorlw	1
 10930  001BCE  6E10               	movwf	___fladd@grs^0,c
 10931  001BD0  EFEC  F00D         	goto	l3828
 10932  001BD4                     l3826:
 10933  001BD4  90D8               	bcf	status,0,c
 10934  001BD6  3210               	rrcf	___fladd@grs^0,f,c
 10935  001BD8                     l3828:
 10936  001BD8  A001               	btfss	___fladd@b^0,0,c
 10937  001BDA  EFF1  F00D         	goto	u3561
 10938  001BDE  EFF3  F00D         	goto	u3560
 10939  001BE2                     u3561:
 10940  001BE2  EFF4  F00D         	goto	l3832
 10941  001BE6                     u3560:
 10942  001BE6  8E10               	bsf	___fladd@grs^0,7,c
 10943  001BE8                     l3832:
 10944  001BE8  3404               	rlcf	(___fladd@b+3)^0,w,c
 10945  001BEA  3204               	rrcf	(___fladd@b+3)^0,f,c
 10946  001BEC  3203               	rrcf	(___fladd@b+2)^0,f,c
 10947  001BEE  3202               	rrcf	(___fladd@b+1)^0,f,c
 10948  001BF0  3201               	rrcf	___fladd@b^0,f,c
 10949  001BF2  2A0F               	incf	___fladd@bexp^0,f,c
 10950  001BF4                     l1199:
 10951  001BF4  500E               	movf	___fladd@aexp^0,w,c
 10952  001BF6  5C0F               	subwf	___fladd@bexp^0,w,c
 10953  001BF8  A0D8               	btfss	status,0,c
 10954  001BFA  EF01  F00E         	goto	u3571
 10955  001BFE  EF03  F00E         	goto	u3570
 10956  001C02                     u3571:
 10957  001C02  EFDD  F00D         	goto	l1200
 10958  001C06                     u3570:
 10959  001C06                     l1198:
 10960  001C06  BC0D               	btfsc	___fladd@signs^0,6,c
 10961  001C08  EF08  F00E         	goto	u3581
 10962  001C0C  EF0A  F00E         	goto	u3580
 10963  001C10                     u3581:
 10964  001C10  EF4A  F00E         	goto	l3860
 10965  001C14                     u3580:
 10966  001C14  500F               	movf	___fladd@bexp^0,w,c
 10967  001C16  A4D8               	btfss	status,2,c
 10968  001C18  EF10  F00E         	goto	u3591
 10969  001C1C  EF12  F00E         	goto	u3590
 10970  001C20                     u3591:
 10971  001C20  EF1C  F00E         	goto	l3842
 10972  001C24                     u3590:
 10973  001C24  0E00               	movlw	0
 10974  001C26  6E01               	movwf	?___fladd^0,c
 10975  001C28  0E00               	movlw	0
 10976  001C2A  6E02               	movwf	(?___fladd+1)^0,c
 10977  001C2C  0E00               	movlw	0
 10978  001C2E  6E03               	movwf	(?___fladd+2)^0,c
 10979  001C30  0E00               	movlw	0
 10980  001C32  6E04               	movwf	(?___fladd+3)^0,c
 10981  001C34  EF6B  F00F         	goto	l1207
 10982  001C38                     l3842:
 10983  001C38  5005               	movf	___fladd@a^0,w,c
 10984  001C3A  2601               	addwf	___fladd@b^0,f,c
 10985  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
 10986  001C3E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10987  001C40  5007               	movf	(___fladd@a+2)^0,w,c
 10988  001C42  2203               	addwfc	(___fladd@b+2)^0,f,c
 10989  001C44  5008               	movf	(___fladd@a+3)^0,w,c
 10990  001C46  2204               	addwfc	(___fladd@b+3)^0,f,c
 10991  001C48  A004               	btfss	(___fladd@b+3)^0,0,c
 10992  001C4A  EF29  F00E         	goto	u3601
 10993  001C4E  EF2B  F00E         	goto	u3600
 10994  001C52                     u3601:
 10995  001C52  EFD7  F00E         	goto	l3896
 10996  001C56                     u3600:
 10997  001C56  A010               	btfss	___fladd@grs^0,0,c
 10998  001C58  EF30  F00E         	goto	u3611
 10999  001C5C  EF32  F00E         	goto	u3610
 11000  001C60                     u3611:
 11001  001C60  EF38  F00E         	goto	l3850
 11002  001C64                     u3610:
 11003  001C64  90D8               	bcf	status,0,c
 11004  001C66  3010               	rrcf	___fladd@grs^0,w,c
 11005  001C68  0901               	iorlw	1
 11006  001C6A  6E10               	movwf	___fladd@grs^0,c
 11007  001C6C  EF3A  F00E         	goto	l3852
 11008  001C70                     l3850:
 11009  001C70  90D8               	bcf	status,0,c
 11010  001C72  3210               	rrcf	___fladd@grs^0,f,c
 11011  001C74                     l3852:
 11012  001C74  A001               	btfss	___fladd@b^0,0,c
 11013  001C76  EF3F  F00E         	goto	u3621
 11014  001C7A  EF41  F00E         	goto	u3620
 11015  001C7E                     u3621:
 11016  001C7E  EF42  F00E         	goto	l3856
 11017  001C82                     u3620:
 11018  001C82  8E10               	bsf	___fladd@grs^0,7,c
 11019  001C84                     l3856:
 11020  001C84  3404               	rlcf	(___fladd@b+3)^0,w,c
 11021  001C86  3204               	rrcf	(___fladd@b+3)^0,f,c
 11022  001C88  3203               	rrcf	(___fladd@b+2)^0,f,c
 11023  001C8A  3202               	rrcf	(___fladd@b+1)^0,f,c
 11024  001C8C  3201               	rrcf	___fladd@b^0,f,c
 11025  001C8E  2A0F               	incf	___fladd@bexp^0,f,c
 11026  001C90  EFD7  F00E         	goto	l3896
 11027  001C94                     l3860:
 11028  001C94  5005               	movf	___fladd@a^0,w,c
 11029  001C96  5C01               	subwf	___fladd@b^0,w,c
 11030  001C98  5006               	movf	(___fladd@a+1)^0,w,c
 11031  001C9A  5802               	subwfb	(___fladd@b+1)^0,w,c
 11032  001C9C  5007               	movf	(___fladd@a+2)^0,w,c
 11033  001C9E  5803               	subwfb	(___fladd@b+2)^0,w,c
 11034  001CA0  5004               	movf	(___fladd@b+3)^0,w,c
 11035  001CA2  0A80               	xorlw	128
 11036  001CA4  6E09               	movwf	??___fladd^0,c
 11037  001CA6  5008               	movf	(___fladd@a+3)^0,w,c
 11038  001CA8  0A80               	xorlw	128
 11039  001CAA  5809               	subwfb	??___fladd^0,w,c
 11040  001CAC  B0D8               	btfsc	status,0,c
 11041  001CAE  EF5B  F00E         	goto	u3631
 11042  001CB2  EF5D  F00E         	goto	u3630
 11043  001CB6                     u3631:
 11044  001CB6  EF88  F00E         	goto	l3870
 11045  001CBA                     u3630:
 11046  001CBA  5001               	movf	___fladd@b^0,w,c
 11047  001CBC  5C05               	subwf	___fladd@a^0,w,c
 11048  001CBE  6E09               	movwf	??___fladd^0,c
 11049  001CC0  5002               	movf	(___fladd@b+1)^0,w,c
 11050  001CC2  5806               	subwfb	(___fladd@a+1)^0,w,c
 11051  001CC4  6E0A               	movwf	(??___fladd+1)^0,c
 11052  001CC6  5003               	movf	(___fladd@b+2)^0,w,c
 11053  001CC8  5807               	subwfb	(___fladd@a+2)^0,w,c
 11054  001CCA  6E0B               	movwf	(??___fladd+2)^0,c
 11055  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 11056  001CCE  5808               	subwfb	(___fladd@a+3)^0,w,c
 11057  001CD0  6E0C               	movwf	(??___fladd+3)^0,c
 11058  001CD2  0EFF               	movlw	255
 11059  001CD4  2409               	addwf	??___fladd^0,w,c
 11060  001CD6  6E01               	movwf	___fladd@b^0,c
 11061  001CD8  0EFF               	movlw	255
 11062  001CDA  200A               	addwfc	(??___fladd+1)^0,w,c
 11063  001CDC  6E02               	movwf	(___fladd@b+1)^0,c
 11064  001CDE  0EFF               	movlw	255
 11065  001CE0  200B               	addwfc	(??___fladd+2)^0,w,c
 11066  001CE2  6E03               	movwf	(___fladd@b+2)^0,c
 11067  001CE4  0EFF               	movlw	255
 11068  001CE6  200C               	addwfc	(??___fladd+3)^0,w,c
 11069  001CE8  6E04               	movwf	(___fladd@b+3)^0,c
 11070  001CEA  0E80               	movlw	128
 11071  001CEC  1A0D               	xorwf	___fladd@signs^0,f,c
 11072  001CEE  6C10               	negf	___fladd@grs^0,c
 11073  001CF0  5010               	movf	___fladd@grs^0,w,c
 11074  001CF2  A4D8               	btfss	status,2,c
 11075  001CF4  EF7E  F00E         	goto	u3641
 11076  001CF8  EF80  F00E         	goto	u3640
 11077  001CFC                     u3641:
 11078  001CFC  EF90  F00E         	goto	l1215
 11079  001D00                     u3640:
 11080  001D00  0E01               	movlw	1
 11081  001D02  2601               	addwf	___fladd@b^0,f,c
 11082  001D04  0E00               	movlw	0
 11083  001D06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11084  001D08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11085  001D0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11086  001D0C  EF90  F00E         	goto	l1215
 11087  001D10                     l3870:
 11088  001D10  5005               	movf	___fladd@a^0,w,c
 11089  001D12  5E01               	subwf	___fladd@b^0,f,c
 11090  001D14  5006               	movf	(___fladd@a+1)^0,w,c
 11091  001D16  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11092  001D18  5007               	movf	(___fladd@a+2)^0,w,c
 11093  001D1A  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11094  001D1C  5008               	movf	(___fladd@a+3)^0,w,c
 11095  001D1E  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11096  001D20                     l1215:
 11097  001D20  5001               	movf	___fladd@b^0,w,c
 11098  001D22  1002               	iorwf	(___fladd@b+1)^0,w,c
 11099  001D24  1003               	iorwf	(___fladd@b+2)^0,w,c
 11100  001D26  1004               	iorwf	(___fladd@b+3)^0,w,c
 11101  001D28  A4D8               	btfss	status,2,c
 11102  001D2A  EF99  F00E         	goto	u3651
 11103  001D2E  EF9B  F00E         	goto	u3650
 11104  001D32                     u3651:
 11105  001D32  EFD0  F00E         	goto	l3894
 11106  001D36                     u3650:
 11107  001D36  5010               	movf	___fladd@grs^0,w,c
 11108  001D38  A4D8               	btfss	status,2,c
 11109  001D3A  EFA1  F00E         	goto	u3661
 11110  001D3E  EFA3  F00E         	goto	u3660
 11111  001D42                     u3661:
 11112  001D42  EFD0  F00E         	goto	l3894
 11113  001D46                     u3660:
 11114  001D46  0E00               	movlw	0
 11115  001D48  6E01               	movwf	?___fladd^0,c
 11116  001D4A  0E00               	movlw	0
 11117  001D4C  6E02               	movwf	(?___fladd+1)^0,c
 11118  001D4E  0E00               	movlw	0
 11119  001D50  6E03               	movwf	(?___fladd+2)^0,c
 11120  001D52  0E00               	movlw	0
 11121  001D54  6E04               	movwf	(?___fladd+3)^0,c
 11122  001D56  EF6B  F00F         	goto	l1207
 11123  001D5A                     l3878:
 11124  001D5A  90D8               	bcf	status,0,c
 11125  001D5C  3601               	rlcf	___fladd@b^0,f,c
 11126  001D5E  3602               	rlcf	(___fladd@b+1)^0,f,c
 11127  001D60  3603               	rlcf	(___fladd@b+2)^0,f,c
 11128  001D62  3604               	rlcf	(___fladd@b+3)^0,f,c
 11129  001D64  AE10               	btfss	___fladd@grs^0,7,c
 11130  001D66  EFB7  F00E         	goto	u3671
 11131  001D6A  EFB9  F00E         	goto	u3670
 11132  001D6E                     u3671:
 11133  001D6E  EFBA  F00E         	goto	l3884
 11134  001D72                     u3670:
 11135  001D72  8001               	bsf	___fladd@b^0,0,c
 11136  001D74                     l3884:
 11137  001D74  A010               	btfss	___fladd@grs^0,0,c
 11138  001D76  EFBF  F00E         	goto	u3681
 11139  001D7A  EFC1  F00E         	goto	u3680
 11140  001D7E                     u3681:
 11141  001D7E  EFC5  F00E         	goto	l3888
 11142  001D82                     u3680:
 11143  001D82  80D8               	bsf	status,0,c
 11144  001D84  3610               	rlcf	___fladd@grs^0,f,c
 11145  001D86  EFC7  F00E         	goto	l3890
 11146  001D8A                     l3888:
 11147  001D8A  90D8               	bcf	status,0,c
 11148  001D8C  3610               	rlcf	___fladd@grs^0,f,c
 11149  001D8E                     l3890:
 11150  001D8E  500F               	movf	___fladd@bexp^0,w,c
 11151  001D90  B4D8               	btfsc	status,2,c
 11152  001D92  EFCD  F00E         	goto	u3691
 11153  001D96  EFCF  F00E         	goto	u3690
 11154  001D9A                     u3691:
 11155  001D9A  EFD0  F00E         	goto	l3894
 11156  001D9E                     u3690:
 11157  001D9E  060F               	decf	___fladd@bexp^0,f,c
 11158  001DA0                     l3894:
 11159  001DA0  AE03               	btfss	(___fladd@b+2)^0,7,c
 11160  001DA2  EFD5  F00E         	goto	u3701
 11161  001DA6  EFD7  F00E         	goto	u3700
 11162  001DAA                     u3701:
 11163  001DAA  EFAD  F00E         	goto	l3878
 11164  001DAE                     u3700:
 11165  001DAE                     l3896:
 11166  001DAE  0E00               	movlw	0
 11167  001DB0  6E0E               	movwf	___fladd@aexp^0,c
 11168  001DB2  AE10               	btfss	___fladd@grs^0,7,c
 11169  001DB4  EFDE  F00E         	goto	u3711
 11170  001DB8  EFE0  F00E         	goto	u3710
 11171  001DBC                     u3711:
 11172  001DBC  EFF8  F00E         	goto	l1224
 11173  001DC0                     u3710:
 11174  001DC0  C010  F009         	movff	___fladd@grs,??___fladd
 11175  001DC4  0E7F               	movlw	127
 11176  001DC6  1609               	andwf	??___fladd^0,f,c
 11177  001DC8  B4D8               	btfsc	status,2,c
 11178  001DCA  EFE9  F00E         	goto	u3721
 11179  001DCE  EFEB  F00E         	goto	u3720
 11180  001DD2                     u3721:
 11181  001DD2  EFEF  F00E         	goto	l1225
 11182  001DD6                     u3720:
 11183  001DD6                     l3902:
 11184  001DD6  0E01               	movlw	1
 11185  001DD8  6E0E               	movwf	___fladd@aexp^0,c
 11186  001DDA  EFF8  F00E         	goto	l1224
 11187  001DDE                     l1225:
 11188  001DDE  A001               	btfss	___fladd@b^0,0,c
 11189  001DE0  EFF4  F00E         	goto	u3731
 11190  001DE4  EFF6  F00E         	goto	u3730
 11191  001DE8                     u3731:
 11192  001DE8  EFF8  F00E         	goto	l1224
 11193  001DEC                     u3730:
 11194  001DEC  EFEB  F00E         	goto	l3902
 11195  001DF0                     l1224:
 11196  001DF0  500E               	movf	___fladd@aexp^0,w,c
 11197  001DF2  B4D8               	btfsc	status,2,c
 11198  001DF4  EFFE  F00E         	goto	u3741
 11199  001DF8  EF00  F00F         	goto	u3740
 11200  001DFC                     u3741:
 11201  001DFC  EF2B  F00F         	goto	l3914
 11202  001E00                     u3740:
 11203  001E00  0E01               	movlw	1
 11204  001E02  2601               	addwf	___fladd@b^0,f,c
 11205  001E04  0E00               	movlw	0
 11206  001E06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11207  001E08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11208  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11209  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
 11210  001E0E  EF0B  F00F         	goto	u3751
 11211  001E12  EF0D  F00F         	goto	u3750
 11212  001E16                     u3751:
 11213  001E16  EF2B  F00F         	goto	l3914
 11214  001E1A                     u3750:
 11215  001E1A  C001  F009         	movff	___fladd@b,??___fladd
 11216  001E1E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11217  001E22  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11218  001E26  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11219  001E2A  340C               	rlcf	(??___fladd+3)^0,w,c
 11220  001E2C  320C               	rrcf	(??___fladd+3)^0,f,c
 11221  001E2E  320B               	rrcf	(??___fladd+2)^0,f,c
 11222  001E30  320A               	rrcf	(??___fladd+1)^0,f,c
 11223  001E32  3209               	rrcf	??___fladd^0,f,c
 11224  001E34  C009  F001         	movff	??___fladd,___fladd@b
 11225  001E38  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11226  001E3C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11227  001E40  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11228  001E44  280F               	incf	___fladd@bexp^0,w,c
 11229  001E46  B4D8               	btfsc	status,2,c
 11230  001E48  EF28  F00F         	goto	u3761
 11231  001E4C  EF2A  F00F         	goto	u3760
 11232  001E50                     u3761:
 11233  001E50  EF2B  F00F         	goto	l3914
 11234  001E54                     u3760:
 11235  001E54  2A0F               	incf	___fladd@bexp^0,f,c
 11236  001E56                     l3914:
 11237  001E56  280F               	incf	___fladd@bexp^0,w,c
 11238  001E58  B4D8               	btfsc	status,2,c
 11239  001E5A  EF31  F00F         	goto	u3771
 11240  001E5E  EF33  F00F         	goto	u3770
 11241  001E62                     u3771:
 11242  001E62  EF3B  F00F         	goto	l3918
 11243  001E66                     u3770:
 11244  001E66  500F               	movf	___fladd@bexp^0,w,c
 11245  001E68  A4D8               	btfss	status,2,c
 11246  001E6A  EF39  F00F         	goto	u3781
 11247  001E6E  EF3B  F00F         	goto	u3780
 11248  001E72                     u3781:
 11249  001E72  EF4D  F00F         	goto	l3922
 11250  001E76                     u3780:
 11251  001E76                     l3918:
 11252  001E76  0E00               	movlw	0
 11253  001E78  6E01               	movwf	___fladd@b^0,c
 11254  001E7A  0E00               	movlw	0
 11255  001E7C  6E02               	movwf	(___fladd@b+1)^0,c
 11256  001E7E  0E00               	movlw	0
 11257  001E80  6E03               	movwf	(___fladd@b+2)^0,c
 11258  001E82  0E00               	movlw	0
 11259  001E84  6E04               	movwf	(___fladd@b+3)^0,c
 11260  001E86  500F               	movf	___fladd@bexp^0,w,c
 11261  001E88  A4D8               	btfss	status,2,c
 11262  001E8A  EF49  F00F         	goto	u3791
 11263  001E8E  EF4B  F00F         	goto	u3790
 11264  001E92                     u3791:
 11265  001E92  EF4D  F00F         	goto	l3922
 11266  001E96                     u3790:
 11267  001E96  0E00               	movlw	0
 11268  001E98  6E0D               	movwf	___fladd@signs^0,c
 11269  001E9A                     l3922:
 11270  001E9A  A00F               	btfss	___fladd@bexp^0,0,c
 11271  001E9C  EF52  F00F         	goto	u3801
 11272  001EA0  EF54  F00F         	goto	u3800
 11273  001EA4                     u3801:
 11274  001EA4  EF57  F00F         	goto	l3926
 11275  001EA8                     u3800:
 11276  001EA8  8E03               	bsf	(___fladd@b+2)^0,7,c
 11277  001EAA  EF58  F00F         	goto	l3928
 11278  001EAE                     l3926:
 11279  001EAE  9E03               	bcf	(___fladd@b+2)^0,7,c
 11280  001EB0                     l3928:
 11281  001EB0  90D8               	bcf	status,0,c
 11282  001EB2  300F               	rrcf	___fladd@bexp^0,w,c
 11283  001EB4  6E04               	movwf	(___fladd@b+3)^0,c
 11284  001EB6  AE0D               	btfss	___fladd@signs^0,7,c
 11285  001EB8  EF60  F00F         	goto	u3811
 11286  001EBC  EF62  F00F         	goto	u3810
 11287  001EC0                     u3811:
 11288  001EC0  EF63  F00F         	goto	l3934
 11289  001EC4                     u3810:
 11290  001EC4  8E04               	bsf	(___fladd@b+3)^0,7,c
 11291  001EC6                     l3934:
 11292  001EC6  C001  F001         	movff	___fladd@b,?___fladd
 11293  001ECA  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11294  001ECE  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11295  001ED2  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11296  001ED6                     l1207:
 11297  001ED6  0012               	return		;funcret
 11298  001ED8                     __end_of___fladd:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function ___flneg *****************
 11302 ;; Defined at:
 11303 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  f1              4    0[COMRAM] unsigned char 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  4    0[COMRAM] unsigned char 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2, status,0
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;Total ram usage:        4 bytes
 11322 ;; Hardware stack levels used: 1
 11323 ;; Hardware stack levels required when called: 1
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_roundf
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text53
 11332  0059AA                     __ptext53:
 11333                           	callstack 0
 11334  0059AA                     ___flneg:
 11335                           	callstack 25
 11336  0059AA  5001               	movf	___flneg@f1^0,w,c
 11337  0059AC  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11338  0059AE  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11339  0059B0  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11340  0059B2  B4D8               	btfsc	status,2,c
 11341  0059B4  EFDE  F02C         	goto	u4211
 11342  0059B8  EFE0  F02C         	goto	u4210
 11343  0059BC                     u4211:
 11344  0059BC  EFE8  F02C         	goto	l4218
 11345  0059C0                     u4210:
 11346  0059C0  0E00               	movlw	0
 11347  0059C2  1A01               	xorwf	___flneg@f1^0,f,c
 11348  0059C4  0E00               	movlw	0
 11349  0059C6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11350  0059C8  0E00               	movlw	0
 11351  0059CA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11352  0059CC  0E80               	movlw	128
 11353  0059CE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11354  0059D0                     l4218:
 11355  0059D0  C001  F001         	movff	___flneg@f1,?___flneg
 11356  0059D4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11357  0059D8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11358  0059DC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11359  0059E0  0012               	return		;funcret
 11360  0059E2                     __end_of___flneg:
 11361                           	callstack 0
 11362                           
 11363 ;; *************** function ___flmul *****************
 11364 ;; Defined at:
 11365 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  b               4   39[COMRAM] unsigned char 
 11368 ;;  a               4   43[COMRAM] unsigned char 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  prod            4   58[COMRAM] struct .
 11371 ;;  grs             4   52[COMRAM] unsigned long 
 11372 ;;  temp            2   62[COMRAM] struct .
 11373 ;;  bexp            1   57[COMRAM] unsigned char 
 11374 ;;  aexp            1   56[COMRAM] unsigned char 
 11375 ;;  sign            1   51[COMRAM] unsigned char 
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  4   39[COMRAM] unsigned char 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0, prodl, prodh
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11385 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;Total ram usage:       25 bytes
 11390 ;; Hardware stack levels used: 1
 11391 ;; Hardware stack levels required when called: 1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_detect_color
 11396 ;;		_distance_measure
 11397 ;;		_roundf
 11398 ;;		_check_color_reading
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text54
 11403  001ED8                     __ptext54:
 11404                           	callstack 0
 11405  001ED8                     ___flmul:
 11406                           	callstack 25
 11407  001ED8  502B               	movf	(___flmul@b+3)^0,w,c
 11408  001EDA  0B80               	andlw	128
 11409  001EDC  6E34               	movwf	___flmul@sign^0,c
 11410  001EDE  502B               	movf	(___flmul@b+3)^0,w,c
 11411  001EE0  242B               	addwf	(___flmul@b+3)^0,w,c
 11412  001EE2  6E3A               	movwf	___flmul@bexp^0,c
 11413  001EE4  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11414  001EE6  EF77  F00F         	goto	u3971
 11415  001EEA  EF79  F00F         	goto	u3970
 11416  001EEE                     u3971:
 11417  001EEE  EF7A  F00F         	goto	l4062
 11418  001EF2                     u3970:
 11419  001EF2  803A               	bsf	___flmul@bexp^0,0,c
 11420  001EF4                     l4062:
 11421  001EF4  503A               	movf	___flmul@bexp^0,w,c
 11422  001EF6  B4D8               	btfsc	status,2,c
 11423  001EF8  EF80  F00F         	goto	u3981
 11424  001EFC  EF82  F00F         	goto	u3980
 11425  001F00                     u3981:
 11426  001F00  EF95  F00F         	goto	l4070
 11427  001F04                     u3980:
 11428  001F04  283A               	incf	___flmul@bexp^0,w,c
 11429  001F06  A4D8               	btfss	status,2,c
 11430  001F08  EF88  F00F         	goto	u3991
 11431  001F0C  EF8A  F00F         	goto	u3990
 11432  001F10                     u3991:
 11433  001F10  EF92  F00F         	goto	l4068
 11434  001F14                     u3990:
 11435  001F14  0E00               	movlw	0
 11436  001F16  6E28               	movwf	___flmul@b^0,c
 11437  001F18  0E00               	movlw	0
 11438  001F1A  6E29               	movwf	(___flmul@b+1)^0,c
 11439  001F1C  0E00               	movlw	0
 11440  001F1E  6E2A               	movwf	(___flmul@b+2)^0,c
 11441  001F20  0E00               	movlw	0
 11442  001F22  6E2B               	movwf	(___flmul@b+3)^0,c
 11443  001F24                     l4068:
 11444  001F24  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11445  001F26  EF9D  F00F         	goto	l4072
 11446  001F2A                     l4070:
 11447  001F2A  0E00               	movlw	0
 11448  001F2C  6E28               	movwf	___flmul@b^0,c
 11449  001F2E  0E00               	movlw	0
 11450  001F30  6E29               	movwf	(___flmul@b+1)^0,c
 11451  001F32  0E00               	movlw	0
 11452  001F34  6E2A               	movwf	(___flmul@b+2)^0,c
 11453  001F36  0E00               	movlw	0
 11454  001F38  6E2B               	movwf	(___flmul@b+3)^0,c
 11455  001F3A                     l4072:
 11456  001F3A  502F               	movf	(___flmul@a+3)^0,w,c
 11457  001F3C  0B80               	andlw	128
 11458  001F3E  1A34               	xorwf	___flmul@sign^0,f,c
 11459  001F40  502F               	movf	(___flmul@a+3)^0,w,c
 11460  001F42  242F               	addwf	(___flmul@a+3)^0,w,c
 11461  001F44  6E39               	movwf	___flmul@aexp^0,c
 11462  001F46  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11463  001F48  EFA8  F00F         	goto	u4001
 11464  001F4C  EFAA  F00F         	goto	u4000
 11465  001F50                     u4001:
 11466  001F50  EFAB  F00F         	goto	l4080
 11467  001F54                     u4000:
 11468  001F54  8039               	bsf	___flmul@aexp^0,0,c
 11469  001F56                     l4080:
 11470  001F56  5039               	movf	___flmul@aexp^0,w,c
 11471  001F58  B4D8               	btfsc	status,2,c
 11472  001F5A  EFB1  F00F         	goto	u4011
 11473  001F5E  EFB3  F00F         	goto	u4010
 11474  001F62                     u4011:
 11475  001F62  EFC6  F00F         	goto	l4088
 11476  001F66                     u4010:
 11477  001F66  2839               	incf	___flmul@aexp^0,w,c
 11478  001F68  A4D8               	btfss	status,2,c
 11479  001F6A  EFB9  F00F         	goto	u4021
 11480  001F6E  EFBB  F00F         	goto	u4020
 11481  001F72                     u4021:
 11482  001F72  EFC3  F00F         	goto	l4086
 11483  001F76                     u4020:
 11484  001F76  0E00               	movlw	0
 11485  001F78  6E2C               	movwf	___flmul@a^0,c
 11486  001F7A  0E00               	movlw	0
 11487  001F7C  6E2D               	movwf	(___flmul@a+1)^0,c
 11488  001F7E  0E00               	movlw	0
 11489  001F80  6E2E               	movwf	(___flmul@a+2)^0,c
 11490  001F82  0E00               	movlw	0
 11491  001F84  6E2F               	movwf	(___flmul@a+3)^0,c
 11492  001F86                     l4086:
 11493  001F86  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11494  001F88  EFCE  F00F         	goto	l1284
 11495  001F8C                     l4088:
 11496  001F8C  0E00               	movlw	0
 11497  001F8E  6E2C               	movwf	___flmul@a^0,c
 11498  001F90  0E00               	movlw	0
 11499  001F92  6E2D               	movwf	(___flmul@a+1)^0,c
 11500  001F94  0E00               	movlw	0
 11501  001F96  6E2E               	movwf	(___flmul@a+2)^0,c
 11502  001F98  0E00               	movlw	0
 11503  001F9A  6E2F               	movwf	(___flmul@a+3)^0,c
 11504  001F9C                     l1284:
 11505  001F9C  5039               	movf	___flmul@aexp^0,w,c
 11506  001F9E  B4D8               	btfsc	status,2,c
 11507  001FA0  EFD4  F00F         	goto	u4031
 11508  001FA4  EFD6  F00F         	goto	u4030
 11509  001FA8                     u4031:
 11510  001FA8  EFDE  F00F         	goto	l4092
 11511  001FAC                     u4030:
 11512  001FAC  503A               	movf	___flmul@bexp^0,w,c
 11513  001FAE  A4D8               	btfss	status,2,c
 11514  001FB0  EFDC  F00F         	goto	u4041
 11515  001FB4  EFDE  F00F         	goto	u4040
 11516  001FB8                     u4041:
 11517  001FB8  EFE8  F00F         	goto	l4096
 11518  001FBC                     u4040:
 11519  001FBC                     l4092:
 11520  001FBC  0E00               	movlw	0
 11521  001FBE  6E28               	movwf	?___flmul^0,c
 11522  001FC0  0E00               	movlw	0
 11523  001FC2  6E29               	movwf	(?___flmul+1)^0,c
 11524  001FC4  0E00               	movlw	0
 11525  001FC6  6E2A               	movwf	(?___flmul+2)^0,c
 11526  001FC8  0E00               	movlw	0
 11527  001FCA  6E2B               	movwf	(?___flmul+3)^0,c
 11528  001FCC  EF80  F011         	goto	l1288
 11529  001FD0                     l4096:
 11530  001FD0  502E               	movf	(___flmul@a+2)^0,w,c
 11531  001FD2  0228               	mulwf	___flmul@b^0,c
 11532  001FD4  CFF3 F03F          	movff	prodl,___flmul@temp
 11533  001FD8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11534  001FDC  503F               	movf	___flmul@temp^0,w,c
 11535  001FDE  6E35               	movwf	___flmul@grs^0,c
 11536  001FE0  6A36               	clrf	(___flmul@grs+1)^0,c
 11537  001FE2  6A37               	clrf	(___flmul@grs+2)^0,c
 11538  001FE4  6A38               	clrf	(___flmul@grs+3)^0,c
 11539  001FE6  5040               	movf	(___flmul@temp+1)^0,w,c
 11540  001FE8  6E3B               	movwf	___flmul@prod^0,c
 11541  001FEA  6A3C               	clrf	(___flmul@prod+1)^0,c
 11542  001FEC  6A3D               	clrf	(___flmul@prod+2)^0,c
 11543  001FEE  6A3E               	clrf	(___flmul@prod+3)^0,c
 11544  001FF0  502D               	movf	(___flmul@a+1)^0,w,c
 11545  001FF2  0229               	mulwf	(___flmul@b+1)^0,c
 11546  001FF4  CFF3 F03F          	movff	prodl,___flmul@temp
 11547  001FF8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11548  001FFC  503F               	movf	___flmul@temp^0,w,c
 11549  001FFE  2635               	addwf	___flmul@grs^0,f,c
 11550  002000  0E00               	movlw	0
 11551  002002  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11552  002004  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11553  002006  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11554  002008  5040               	movf	(___flmul@temp+1)^0,w,c
 11555  00200A  263B               	addwf	___flmul@prod^0,f,c
 11556  00200C  0E00               	movlw	0
 11557  00200E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11558  002010  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11559  002012  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11560  002014  502C               	movf	___flmul@a^0,w,c
 11561  002016  022A               	mulwf	(___flmul@b+2)^0,c
 11562  002018  CFF3 F03F          	movff	prodl,___flmul@temp
 11563  00201C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11564  002020  503F               	movf	___flmul@temp^0,w,c
 11565  002022  2635               	addwf	___flmul@grs^0,f,c
 11566  002024  0E00               	movlw	0
 11567  002026  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11568  002028  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11569  00202A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11570  00202C  5040               	movf	(___flmul@temp+1)^0,w,c
 11571  00202E  263B               	addwf	___flmul@prod^0,f,c
 11572  002030  0E00               	movlw	0
 11573  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11574  002034  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11575  002036  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11576  002038  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11577  00203C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11578  002040  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11579  002044  6A35               	clrf	___flmul@grs^0,c
 11580  002046  502C               	movf	___flmul@a^0,w,c
 11581  002048  0229               	mulwf	(___flmul@b+1)^0,c
 11582  00204A  CFF3 F03F          	movff	prodl,___flmul@temp
 11583  00204E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11584  002052  503F               	movf	___flmul@temp^0,w,c
 11585  002054  2635               	addwf	___flmul@grs^0,f,c
 11586  002056  5040               	movf	(___flmul@temp+1)^0,w,c
 11587  002058  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11588  00205A  0E00               	movlw	0
 11589  00205C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11590  00205E  0E00               	movlw	0
 11591  002060  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11592  002062  502D               	movf	(___flmul@a+1)^0,w,c
 11593  002064  0228               	mulwf	___flmul@b^0,c
 11594  002066  CFF3 F03F          	movff	prodl,___flmul@temp
 11595  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
 11596  00206E  503F               	movf	___flmul@temp^0,w,c
 11597  002070  2635               	addwf	___flmul@grs^0,f,c
 11598  002072  5040               	movf	(___flmul@temp+1)^0,w,c
 11599  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11600  002076  0E00               	movlw	0
 11601  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11602  00207A  0E00               	movlw	0
 11603  00207C  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11604  00207E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11605  002082  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11606  002086  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11607  00208A  6A35               	clrf	___flmul@grs^0,c
 11608  00208C  502C               	movf	___flmul@a^0,w,c
 11609  00208E  0228               	mulwf	___flmul@b^0,c
 11610  002090  CFF3 F03F          	movff	prodl,___flmul@temp
 11611  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
 11612  002098  503F               	movf	___flmul@temp^0,w,c
 11613  00209A  2635               	addwf	___flmul@grs^0,f,c
 11614  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
 11615  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11616  0020A0  0E00               	movlw	0
 11617  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11618  0020A4  0E00               	movlw	0
 11619  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11620  0020A8  502E               	movf	(___flmul@a+2)^0,w,c
 11621  0020AA  0229               	mulwf	(___flmul@b+1)^0,c
 11622  0020AC  CFF3 F03F          	movff	prodl,___flmul@temp
 11623  0020B0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11624  0020B4  503F               	movf	___flmul@temp^0,w,c
 11625  0020B6  263B               	addwf	___flmul@prod^0,f,c
 11626  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
 11627  0020BA  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11628  0020BC  0E00               	movlw	0
 11629  0020BE  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11630  0020C0  0E00               	movlw	0
 11631  0020C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11632  0020C4  502D               	movf	(___flmul@a+1)^0,w,c
 11633  0020C6  022A               	mulwf	(___flmul@b+2)^0,c
 11634  0020C8  CFF3 F03F          	movff	prodl,___flmul@temp
 11635  0020CC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11636  0020D0  503F               	movf	___flmul@temp^0,w,c
 11637  0020D2  263B               	addwf	___flmul@prod^0,f,c
 11638  0020D4  5040               	movf	(___flmul@temp+1)^0,w,c
 11639  0020D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11640  0020D8  0E00               	movlw	0
 11641  0020DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11642  0020DC  0E00               	movlw	0
 11643  0020DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11644  0020E0  502E               	movf	(___flmul@a+2)^0,w,c
 11645  0020E2  022A               	mulwf	(___flmul@b+2)^0,c
 11646  0020E4  CFF3 F03F          	movff	prodl,___flmul@temp
 11647  0020E8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11648  0020EC  503F               	movf	___flmul@temp^0,w,c
 11649  0020EE  6E30               	movwf	??___flmul^0,c
 11650  0020F0  5040               	movf	(___flmul@temp+1)^0,w,c
 11651  0020F2  6E31               	movwf	(??___flmul+1)^0,c
 11652  0020F4  6A32               	clrf	(??___flmul+2)^0,c
 11653  0020F6  6A33               	clrf	(??___flmul+3)^0,c
 11654  0020F8  C032  F033         	movff	??___flmul+2,??___flmul+3
 11655  0020FC  C031  F032         	movff	??___flmul+1,??___flmul+2
 11656  002100  C030  F031         	movff	??___flmul,??___flmul+1
 11657  002104  6A30               	clrf	??___flmul^0,c
 11658  002106  5030               	movf	??___flmul^0,w,c
 11659  002108  263B               	addwf	___flmul@prod^0,f,c
 11660  00210A  5031               	movf	(??___flmul+1)^0,w,c
 11661  00210C  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11662  00210E  5032               	movf	(??___flmul+2)^0,w,c
 11663  002110  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11664  002112  5033               	movf	(??___flmul+3)^0,w,c
 11665  002114  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11666  002116  C035  F030         	movff	___flmul@grs,??___flmul
 11667  00211A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11668  00211E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11669  002122  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11670  002126  0E19               	movlw	25
 11671  002128  EF9B  F010         	goto	u4050
 11672  00212C                     u4055:
 11673  00212C  90D8               	bcf	status,0,c
 11674  00212E  3233               	rrcf	(??___flmul+3)^0,f,c
 11675  002130  3232               	rrcf	(??___flmul+2)^0,f,c
 11676  002132  3231               	rrcf	(??___flmul+1)^0,f,c
 11677  002134  3230               	rrcf	??___flmul^0,f,c
 11678  002136                     u4050:
 11679  002136  2EE8               	decfsz	wreg,f,c
 11680  002138  EF96  F010         	goto	u4055
 11681  00213C  5030               	movf	??___flmul^0,w,c
 11682  00213E  263B               	addwf	___flmul@prod^0,f,c
 11683  002140  5031               	movf	(??___flmul+1)^0,w,c
 11684  002142  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11685  002144  5032               	movf	(??___flmul+2)^0,w,c
 11686  002146  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11687  002148  5033               	movf	(??___flmul+3)^0,w,c
 11688  00214A  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11689  00214C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11690  002150  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11691  002154  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11692  002158  6A35               	clrf	___flmul@grs^0,c
 11693  00215A  5039               	movf	___flmul@aexp^0,w,c
 11694  00215C  C03A  F030         	movff	___flmul@bexp,??___flmul
 11695  002160  6A31               	clrf	(??___flmul+1)^0,c
 11696  002162  2630               	addwf	??___flmul^0,f,c
 11697  002164  0E00               	movlw	0
 11698  002166  2231               	addwfc	(??___flmul+1)^0,f,c
 11699  002168  0E82               	movlw	130
 11700  00216A  2430               	addwf	??___flmul^0,w,c
 11701  00216C  6E3F               	movwf	___flmul@temp^0,c
 11702  00216E  0EFF               	movlw	255
 11703  002170  2031               	addwfc	(??___flmul+1)^0,w,c
 11704  002172  6E40               	movwf	(___flmul@temp+1)^0,c
 11705  002174  EFD1  F010         	goto	l4144
 11706  002178                     l4138:
 11707  002178  90D8               	bcf	status,0,c
 11708  00217A  363B               	rlcf	___flmul@prod^0,f,c
 11709  00217C  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11710  00217E  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11711  002180  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11712  002182  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11713  002184  EFC6  F010         	goto	u4061
 11714  002188  EFC8  F010         	goto	u4060
 11715  00218C                     u4061:
 11716  00218C  EFC9  F010         	goto	l1291
 11717  002190                     u4060:
 11718  002190  803B               	bsf	___flmul@prod^0,0,c
 11719  002192                     l1291:
 11720  002192  90D8               	bcf	status,0,c
 11721  002194  3635               	rlcf	___flmul@grs^0,f,c
 11722  002196  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11723  002198  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11724  00219A  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11725  00219C  063F               	decf	___flmul@temp^0,f,c
 11726  00219E  A0D8               	btfss	status,0,c
 11727  0021A0  0640               	decf	(___flmul@temp+1)^0,f,c
 11728  0021A2                     l4144:
 11729  0021A2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11730  0021A4  EFD6  F010         	goto	u4071
 11731  0021A8  EFD8  F010         	goto	u4070
 11732  0021AC                     u4071:
 11733  0021AC  EFBC  F010         	goto	l4138
 11734  0021B0                     u4070:
 11735  0021B0  0E00               	movlw	0
 11736  0021B2  6E39               	movwf	___flmul@aexp^0,c
 11737  0021B4  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11738  0021B6  EFDF  F010         	goto	u4081
 11739  0021BA  EFE1  F010         	goto	u4080
 11740  0021BE                     u4081:
 11741  0021BE  EF05  F011         	goto	l1293
 11742  0021C2                     u4080:
 11743  0021C2  0EFF               	movlw	255
 11744  0021C4  1435               	andwf	___flmul@grs^0,w,c
 11745  0021C6  6E30               	movwf	??___flmul^0,c
 11746  0021C8  0EFF               	movlw	255
 11747  0021CA  1436               	andwf	(___flmul@grs+1)^0,w,c
 11748  0021CC  6E31               	movwf	(??___flmul+1)^0,c
 11749  0021CE  0EFF               	movlw	255
 11750  0021D0  1437               	andwf	(___flmul@grs+2)^0,w,c
 11751  0021D2  6E32               	movwf	(??___flmul+2)^0,c
 11752  0021D4  0E7F               	movlw	127
 11753  0021D6  1438               	andwf	(___flmul@grs+3)^0,w,c
 11754  0021D8  6E33               	movwf	(??___flmul+3)^0,c
 11755  0021DA  5030               	movf	??___flmul^0,w,c
 11756  0021DC  1031               	iorwf	(??___flmul+1)^0,w,c
 11757  0021DE  1032               	iorwf	(??___flmul+2)^0,w,c
 11758  0021E0  1033               	iorwf	(??___flmul+3)^0,w,c
 11759  0021E2  B4D8               	btfsc	status,2,c
 11760  0021E4  EFF6  F010         	goto	u4091
 11761  0021E8  EFF8  F010         	goto	u4090
 11762  0021EC                     u4091:
 11763  0021EC  EFFC  F010         	goto	l1294
 11764  0021F0                     u4090:
 11765  0021F0                     l4152:
 11766  0021F0  0E01               	movlw	1
 11767  0021F2  6E39               	movwf	___flmul@aexp^0,c
 11768  0021F4  EF05  F011         	goto	l1293
 11769  0021F8                     l1294:
 11770  0021F8  A03B               	btfss	___flmul@prod^0,0,c
 11771  0021FA  EF01  F011         	goto	u4101
 11772  0021FE  EF03  F011         	goto	u4100
 11773  002202                     u4101:
 11774  002202  EF05  F011         	goto	l1293
 11775  002206                     u4100:
 11776  002206  EFF8  F010         	goto	l4152
 11777  00220A                     l1293:
 11778  00220A  5039               	movf	___flmul@aexp^0,w,c
 11779  00220C  B4D8               	btfsc	status,2,c
 11780  00220E  EF0B  F011         	goto	u4111
 11781  002212  EF0D  F011         	goto	u4110
 11782  002216                     u4111:
 11783  002216  EF31  F011         	goto	l4164
 11784  00221A                     u4110:
 11785  00221A  0E01               	movlw	1
 11786  00221C  263B               	addwf	___flmul@prod^0,f,c
 11787  00221E  0E00               	movlw	0
 11788  002220  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11789  002222  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11790  002224  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11791  002226  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11792  002228  EF18  F011         	goto	u4121
 11793  00222C  EF1A  F011         	goto	u4120
 11794  002230                     u4121:
 11795  002230  EF31  F011         	goto	l4164
 11796  002234                     u4120:
 11797  002234  C03B  F030         	movff	___flmul@prod,??___flmul
 11798  002238  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11799  00223C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11800  002240  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11801  002244  3433               	rlcf	(??___flmul+3)^0,w,c
 11802  002246  3233               	rrcf	(??___flmul+3)^0,f,c
 11803  002248  3232               	rrcf	(??___flmul+2)^0,f,c
 11804  00224A  3231               	rrcf	(??___flmul+1)^0,f,c
 11805  00224C  3230               	rrcf	??___flmul^0,f,c
 11806  00224E  C030  F03B         	movff	??___flmul,___flmul@prod
 11807  002252  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11808  002256  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11809  00225A  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11810  00225E  4A3F               	infsnz	___flmul@temp^0,f,c
 11811  002260  2A40               	incf	(___flmul@temp+1)^0,f,c
 11812  002262                     l4164:
 11813  002262  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11814  002264  EF3C  F011         	goto	u4131
 11815  002268  5040               	movf	(___flmul@temp+1)^0,w,c
 11816  00226A  E108               	bnz	u4130
 11817  00226C  283F               	incf	___flmul@temp^0,w,c
 11818  00226E  A0D8               	btfss	status,0,c
 11819  002270  EF3C  F011         	goto	u4131
 11820  002274  EF3E  F011         	goto	u4130
 11821  002278                     u4131:
 11822  002278  EF48  F011         	goto	l4168
 11823  00227C                     u4130:
 11824  00227C  0E00               	movlw	0
 11825  00227E  6E3B               	movwf	___flmul@prod^0,c
 11826  002280  0E00               	movlw	0
 11827  002282  6E3C               	movwf	(___flmul@prod+1)^0,c
 11828  002284  0E80               	movlw	128
 11829  002286  6E3D               	movwf	(___flmul@prod+2)^0,c
 11830  002288  0E7F               	movlw	127
 11831  00228A  6E3E               	movwf	(___flmul@prod+3)^0,c
 11832  00228C  EF76  F011         	goto	l4180
 11833  002290                     l4168:
 11834  002290  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11835  002292  EF55  F011         	goto	u4140
 11836  002296  5040               	movf	(___flmul@temp+1)^0,w,c
 11837  002298  E106               	bnz	u4141
 11838  00229A  043F               	decf	___flmul@temp^0,w,c
 11839  00229C  B0D8               	btfsc	status,0,c
 11840  00229E  EF53  F011         	goto	u4141
 11841  0022A2  EF55  F011         	goto	u4140
 11842  0022A6                     u4141:
 11843  0022A6  EF61  F011         	goto	l1301
 11844  0022AA                     u4140:
 11845  0022AA  0E00               	movlw	0
 11846  0022AC  6E3B               	movwf	___flmul@prod^0,c
 11847  0022AE  0E00               	movlw	0
 11848  0022B0  6E3C               	movwf	(___flmul@prod+1)^0,c
 11849  0022B2  0E00               	movlw	0
 11850  0022B4  6E3D               	movwf	(___flmul@prod+2)^0,c
 11851  0022B6  0E00               	movlw	0
 11852  0022B8  6E3E               	movwf	(___flmul@prod+3)^0,c
 11853  0022BA  0E00               	movlw	0
 11854  0022BC  6E34               	movwf	___flmul@sign^0,c
 11855  0022BE  EF76  F011         	goto	l4180
 11856  0022C2                     l1301:
 11857  0022C2  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11858  0022C6  0EFF               	movlw	255
 11859  0022C8  163B               	andwf	___flmul@prod^0,f,c
 11860  0022CA  0EFF               	movlw	255
 11861  0022CC  163C               	andwf	(___flmul@prod+1)^0,f,c
 11862  0022CE  0E7F               	movlw	127
 11863  0022D0  163D               	andwf	(___flmul@prod+2)^0,f,c
 11864  0022D2  0E00               	movlw	0
 11865  0022D4  163E               	andwf	(___flmul@prod+3)^0,f,c
 11866  0022D6  A03A               	btfss	___flmul@bexp^0,0,c
 11867  0022D8  EF70  F011         	goto	u4151
 11868  0022DC  EF72  F011         	goto	u4150
 11869  0022E0                     u4151:
 11870  0022E0  EF73  F011         	goto	l4178
 11871  0022E4                     u4150:
 11872  0022E4  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 11873  0022E6                     l4178:
 11874  0022E6  90D8               	bcf	status,0,c
 11875  0022E8  303A               	rrcf	___flmul@bexp^0,w,c
 11876  0022EA  6E3E               	movwf	(___flmul@prod+3)^0,c
 11877  0022EC                     l4180:
 11878  0022EC  5034               	movf	___flmul@sign^0,w,c
 11879  0022EE  123E               	iorwf	(___flmul@prod+3)^0,f,c
 11880  0022F0  C03B  F028         	movff	___flmul@prod,?___flmul
 11881  0022F4  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 11882  0022F8  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 11883  0022FC  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 11884  002300                     l1288:
 11885  002300  0012               	return		;funcret
 11886  002302                     __end_of___flmul:
 11887                           	callstack 0
 11888                           
 11889 ;; *************** function ___flge *****************
 11890 ;; Defined at:
 11891 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  ff1             4    0[COMRAM] unsigned char 
 11894 ;;  ff2             4    4[COMRAM] unsigned char 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;		None
 11897 ;; Return value:  Size  Location     Type
 11898 ;;		None               void
 11899 ;; Registers used:
 11900 ;;		wreg, status,2, status,0
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11909 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11910 ;;Total ram usage:       12 bytes
 11911 ;; Hardware stack levels used: 1
 11912 ;; Hardware stack levels required when called: 1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_roundf
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text55
 11921  004A9E                     __ptext55:
 11922                           	callstack 0
 11923  004A9E                     ___flge:
 11924                           	callstack 25
 11925  004A9E  0E00               	movlw	0
 11926  004AA0  1401               	andwf	___flge@ff1^0,w,c
 11927  004AA2  6E09               	movwf	??___flge^0,c
 11928  004AA4  0E00               	movlw	0
 11929  004AA6  1402               	andwf	(___flge@ff1+1)^0,w,c
 11930  004AA8  6E0A               	movwf	(??___flge+1)^0,c
 11931  004AAA  0E80               	movlw	128
 11932  004AAC  1403               	andwf	(___flge@ff1+2)^0,w,c
 11933  004AAE  6E0B               	movwf	(??___flge+2)^0,c
 11934  004AB0  0E7F               	movlw	127
 11935  004AB2  1404               	andwf	(___flge@ff1+3)^0,w,c
 11936  004AB4  6E0C               	movwf	(??___flge+3)^0,c
 11937  004AB6  5009               	movf	??___flge^0,w,c
 11938  004AB8  100A               	iorwf	(??___flge+1)^0,w,c
 11939  004ABA  100B               	iorwf	(??___flge+2)^0,w,c
 11940  004ABC  100C               	iorwf	(??___flge+3)^0,w,c
 11941  004ABE  A4D8               	btfss	status,2,c
 11942  004AC0  EF64  F025         	goto	u4161
 11943  004AC4  EF66  F025         	goto	u4160
 11944  004AC8                     u4161:
 11945  004AC8  EF6E  F025         	goto	l4196
 11946  004ACC                     u4160:
 11947  004ACC  0E00               	movlw	0
 11948  004ACE  6E01               	movwf	___flge@ff1^0,c
 11949  004AD0  0E00               	movlw	0
 11950  004AD2  6E02               	movwf	(___flge@ff1+1)^0,c
 11951  004AD4  0E00               	movlw	0
 11952  004AD6  6E03               	movwf	(___flge@ff1+2)^0,c
 11953  004AD8  0E00               	movlw	0
 11954  004ADA  6E04               	movwf	(___flge@ff1+3)^0,c
 11955  004ADC                     l4196:
 11956  004ADC  0E00               	movlw	0
 11957  004ADE  1405               	andwf	___flge@ff2^0,w,c
 11958  004AE0  6E09               	movwf	??___flge^0,c
 11959  004AE2  0E00               	movlw	0
 11960  004AE4  1406               	andwf	(___flge@ff2+1)^0,w,c
 11961  004AE6  6E0A               	movwf	(??___flge+1)^0,c
 11962  004AE8  0E80               	movlw	128
 11963  004AEA  1407               	andwf	(___flge@ff2+2)^0,w,c
 11964  004AEC  6E0B               	movwf	(??___flge+2)^0,c
 11965  004AEE  0E7F               	movlw	127
 11966  004AF0  1408               	andwf	(___flge@ff2+3)^0,w,c
 11967  004AF2  6E0C               	movwf	(??___flge+3)^0,c
 11968  004AF4  5009               	movf	??___flge^0,w,c
 11969  004AF6  100A               	iorwf	(??___flge+1)^0,w,c
 11970  004AF8  100B               	iorwf	(??___flge+2)^0,w,c
 11971  004AFA  100C               	iorwf	(??___flge+3)^0,w,c
 11972  004AFC  A4D8               	btfss	status,2,c
 11973  004AFE  EF83  F025         	goto	u4171
 11974  004B02  EF85  F025         	goto	u4170
 11975  004B06                     u4171:
 11976  004B06  EF8D  F025         	goto	l4200
 11977  004B0A                     u4170:
 11978  004B0A  0E00               	movlw	0
 11979  004B0C  6E05               	movwf	___flge@ff2^0,c
 11980  004B0E  0E00               	movlw	0
 11981  004B10  6E06               	movwf	(___flge@ff2+1)^0,c
 11982  004B12  0E00               	movlw	0
 11983  004B14  6E07               	movwf	(___flge@ff2+2)^0,c
 11984  004B16  0E00               	movlw	0
 11985  004B18  6E08               	movwf	(___flge@ff2+3)^0,c
 11986  004B1A                     l4200:
 11987  004B1A  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11988  004B1C  EF92  F025         	goto	u4181
 11989  004B20  EF94  F025         	goto	u4180
 11990  004B24                     u4181:
 11991  004B24  EF9D  F025         	goto	l4204
 11992  004B28                     u4180:
 11993  004B28  6C01               	negf	___flge@ff1^0,c
 11994  004B2A  1E02               	comf	(___flge@ff1+1)^0,f,c
 11995  004B2C  B0D8               	btfsc	status,0,c
 11996  004B2E  2A02               	incf	(___flge@ff1+1)^0,f,c
 11997  004B30  1E03               	comf	(___flge@ff1+2)^0,f,c
 11998  004B32  B0D8               	btfsc	status,0,c
 11999  004B34  2A03               	incf	(___flge@ff1+2)^0,f,c
 12000  004B36  0E80               	movlw	128
 12001  004B38  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12002  004B3A                     l4204:
 12003  004B3A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12004  004B3C  EFA2  F025         	goto	u4191
 12005  004B40  EFA4  F025         	goto	u4190
 12006  004B44                     u4191:
 12007  004B44  EFAD  F025         	goto	l935
 12008  004B48                     u4190:
 12009  004B48  6C05               	negf	___flge@ff2^0,c
 12010  004B4A  1E06               	comf	(___flge@ff2+1)^0,f,c
 12011  004B4C  B0D8               	btfsc	status,0,c
 12012  004B4E  2A06               	incf	(___flge@ff2+1)^0,f,c
 12013  004B50  1E07               	comf	(___flge@ff2+2)^0,f,c
 12014  004B52  B0D8               	btfsc	status,0,c
 12015  004B54  2A07               	incf	(___flge@ff2+2)^0,f,c
 12016  004B56  0E80               	movlw	128
 12017  004B58  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12018  004B5A                     l935:
 12019  004B5A  0E00               	movlw	0
 12020  004B5C  1A01               	xorwf	___flge@ff1^0,f,c
 12021  004B5E  0E00               	movlw	0
 12022  004B60  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12023  004B62  0E00               	movlw	0
 12024  004B64  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12025  004B66  0E80               	movlw	128
 12026  004B68  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12027  004B6A  0E00               	movlw	0
 12028  004B6C  1A05               	xorwf	___flge@ff2^0,f,c
 12029  004B6E  0E00               	movlw	0
 12030  004B70  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12031  004B72  0E00               	movlw	0
 12032  004B74  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12033  004B76  0E80               	movlw	128
 12034  004B78  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12035  004B7A  5005               	movf	___flge@ff2^0,w,c
 12036  004B7C  5C01               	subwf	___flge@ff1^0,w,c
 12037  004B7E  5006               	movf	(___flge@ff2+1)^0,w,c
 12038  004B80  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12039  004B82  5007               	movf	(___flge@ff2+2)^0,w,c
 12040  004B84  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12041  004B86  5008               	movf	(___flge@ff2+3)^0,w,c
 12042  004B88  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12043  004B8A  B0D8               	btfsc	status,0,c
 12044  004B8C  EFCA  F025         	goto	u4201
 12045  004B90  EFCC  F025         	goto	u4200
 12046  004B94                     u4201:
 12047  004B94  EFCF  F025         	goto	l4210
 12048  004B98                     u4200:
 12049  004B98  90D8               	bcf	status,0,c
 12050  004B9A  EFD0  F025         	goto	l940
 12051  004B9E                     l4210:
 12052  004B9E  80D8               	bsf	status,0,c
 12053  004BA0                     l940:
 12054  004BA0  0012               	return		;funcret
 12055  004BA2                     __end_of___flge:
 12056                           	callstack 0
 12057                           
 12058 ;; *************** function ___fltol *****************
 12059 ;; Defined at:
 12060 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  f1              4   90[COMRAM] unsigned char 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  exp1            1    5[BANK0 ] unsigned char 
 12065 ;;  sign1           1    4[BANK0 ] unsigned char 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  4   90[COMRAM] long 
 12068 ;; Registers used:
 12069 ;;		wreg, status,2, status,0
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12079 ;;Total ram usage:       10 bytes
 12080 ;; Hardware stack levels used: 1
 12081 ;; Hardware stack levels required when called: 1
 12082 ;; This function calls:
 12083 ;;		Nothing
 12084 ;; This function is called by:
 12085 ;;		_lroundf
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text56
 12090  004996                     __ptext56:
 12091                           	callstack 0
 12092  004996                     ___fltol:
 12093                           	callstack 26
 12094  004996  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12095  004998  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12096  00499A  0100               	movlb	0	; () banked
 12097  00499C  6F65               	movwf	___fltol@exp1& (0+255),b
 12098  00499E  5165               	movf	___fltol@exp1& (0+255),w,b
 12099  0049A0  A4D8               	btfss	status,2,c
 12100  0049A2  EFD5  F024         	goto	u4311
 12101  0049A6  EFD7  F024         	goto	u4310
 12102  0049AA                     u4311:
 12103  0049AA  EFE1  F024         	goto	l4338
 12104  0049AE                     u4310:
 12105  0049AE                     l4334:
 12106                           
 12107                           ; BSR set to: 0
 12108  0049AE  0E00               	movlw	0
 12109  0049B0  6E5B               	movwf	?___fltol^0,c
 12110  0049B2  0E00               	movlw	0
 12111  0049B4  6E5C               	movwf	(?___fltol+1)^0,c
 12112  0049B6  0E00               	movlw	0
 12113  0049B8  6E5D               	movwf	(?___fltol+2)^0,c
 12114  0049BA  0E00               	movlw	0
 12115  0049BC  6E5E               	movwf	(?___fltol+3)^0,c
 12116  0049BE  EF4E  F025         	goto	l967
 12117  0049C2                     l4338:
 12118                           
 12119                           ; BSR set to: 0
 12120  0049C2  C05B  F060         	movff	___fltol@f1,??___fltol
 12121  0049C6  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12122  0049CA  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12123  0049CE  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12124  0049D2  0E20               	movlw	32
 12125  0049D4  EFF1  F024         	goto	u4320
 12126  0049D8                     u4325:
 12127  0049D8  90D8               	bcf	status,0,c
 12128  0049DA  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12129  0049DC  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12130  0049DE  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12131  0049E0  3360               	rrcf	??___fltol& (0+255),f,b
 12132  0049E2                     u4320:
 12133  0049E2  2EE8               	decfsz	wreg,f,c
 12134  0049E4  EFEC  F024         	goto	u4325
 12135  0049E8  5160               	movf	??___fltol& (0+255),w,b
 12136  0049EA  6F64               	movwf	___fltol@sign1& (0+255),b
 12137  0049EC                     
 12138                           ; BSR set to: 0
 12139  0049EC  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12140  0049EE                     
 12141                           ; BSR set to: 0
 12142  0049EE  0EFF               	movlw	255
 12143  0049F0  165B               	andwf	___fltol@f1^0,f,c
 12144  0049F2  0EFF               	movlw	255
 12145  0049F4  165C               	andwf	(___fltol@f1+1)^0,f,c
 12146  0049F6  0EFF               	movlw	255
 12147  0049F8  165D               	andwf	(___fltol@f1+2)^0,f,c
 12148  0049FA  0E00               	movlw	0
 12149  0049FC  165E               	andwf	(___fltol@f1+3)^0,f,c
 12150  0049FE                     
 12151                           ; BSR set to: 0
 12152  0049FE  0E96               	movlw	150
 12153  004A00  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12154  004A02                     
 12155                           ; BSR set to: 0
 12156  004A02  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12157  004A04  EF08  F025         	goto	u4330
 12158  004A08  EF06  F025         	goto	u4331
 12159  004A0C                     u4331:
 12160  004A0C  EF1E  F025         	goto	l4358
 12161  004A10                     u4330:
 12162  004A10                     
 12163                           ; BSR set to: 0
 12164  004A10  5165               	movf	___fltol@exp1& (0+255),w,b
 12165  004A12  0A80               	xorlw	128
 12166  004A14  0F97               	addlw	151
 12167  004A16  B0D8               	btfsc	status,0,c
 12168  004A18  EF10  F025         	goto	u4341
 12169  004A1C  EF12  F025         	goto	u4340
 12170  004A20                     u4341:
 12171  004A20  EF14  F025         	goto	l4354
 12172  004A24                     u4340:
 12173  004A24  EFD7  F024         	goto	l4334
 12174  004A28                     l4354:
 12175                           
 12176                           ; BSR set to: 0
 12177  004A28  90D8               	bcf	status,0,c
 12178  004A2A  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12179  004A2C  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12180  004A2E  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12181  004A30  325B               	rrcf	___fltol@f1^0,f,c
 12182  004A32                     
 12183                           ; BSR set to: 0
 12184  004A32  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12185  004A34  EF14  F025         	goto	l4354
 12186  004A38  EF36  F025         	goto	l4368
 12187  004A3C                     l4358:
 12188                           
 12189                           ; BSR set to: 0
 12190  004A3C  0E1F               	movlw	31
 12191  004A3E  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12192  004A40  EF24  F025         	goto	u4351
 12193  004A44  EF26  F025         	goto	u4350
 12194  004A48                     u4351:
 12195  004A48  EF2E  F025         	goto	l4366
 12196  004A4C                     u4350:
 12197  004A4C  EFD7  F024         	goto	l4334
 12198  004A50                     l4364:
 12199                           
 12200                           ; BSR set to: 0
 12201  004A50  90D8               	bcf	status,0,c
 12202  004A52  365B               	rlcf	___fltol@f1^0,f,c
 12203  004A54  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12204  004A56  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12205  004A58  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12206  004A5A  0765               	decf	___fltol@exp1& (0+255),f,b
 12207  004A5C                     l4366:
 12208                           
 12209                           ; BSR set to: 0
 12210  004A5C  5165               	movf	___fltol@exp1& (0+255),w,b
 12211  004A5E  A4D8               	btfss	status,2,c
 12212  004A60  EF34  F025         	goto	u4361
 12213  004A64  EF36  F025         	goto	u4360
 12214  004A68                     u4361:
 12215  004A68  EF28  F025         	goto	l4364
 12216  004A6C                     u4360:
 12217  004A6C                     l4368:
 12218                           
 12219                           ; BSR set to: 0
 12220  004A6C  5164               	movf	___fltol@sign1& (0+255),w,b
 12221  004A6E  B4D8               	btfsc	status,2,c
 12222  004A70  EF3C  F025         	goto	u4371
 12223  004A74  EF3E  F025         	goto	u4370
 12224  004A78                     u4371:
 12225  004A78  EF46  F025         	goto	l4372
 12226  004A7C                     u4370:
 12227  004A7C                     
 12228                           ; BSR set to: 0
 12229  004A7C  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12230  004A7E  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12231  004A80  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12232  004A82  6C5B               	negf	___fltol@f1^0,c
 12233  004A84  0E00               	movlw	0
 12234  004A86  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12235  004A88  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12236  004A8A  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12237  004A8C                     l4372:
 12238                           
 12239                           ; BSR set to: 0
 12240  004A8C  C05B  F05B         	movff	___fltol@f1,?___fltol
 12241  004A90  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12242  004A94  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12243  004A98  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12244  004A9C                     l967:
 12245                           
 12246                           ; BSR set to: 0
 12247  004A9C  0012               	return		;funcret
 12248  004A9E                     __end_of___fltol:
 12249                           	callstack 0
 12250                           
 12251 ;; *************** function _color_read_Clear *****************
 12252 ;; Defined at:
 12253 ;;		line 133 in file "color.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;  tmp             2    9[COMRAM] unsigned int 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2    4[COMRAM] unsigned int 
 12260 ;; Registers used:
 12261 ;;		wreg, status,2, status,0, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;Total ram usage:        7 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 3
 12274 ;; This function calls:
 12275 ;;		_I2C_2_Master_Read
 12276 ;;		_I2C_2_Master_RepStart
 12277 ;;		_I2C_2_Master_Start
 12278 ;;		_I2C_2_Master_Stop
 12279 ;;		_I2C_2_Master_Write
 12280 ;; This function is called by:
 12281 ;;		_read_color
 12282 ;;		_calibrate_white
 12283 ;;		_amb_light_measure
 12284 ;;		_distance_measure
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text57
 12289  0056D4                     __ptext57:
 12290                           	callstack 0
 12291  0056D4                     _color_read_Clear:
 12292                           	callstack 24
 12293  0056D4                     
 12294                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
 12295  0056D4  EC4C  F02E         	call	_I2C_2_Master_Start	;wreg free
 12296                           
 12297                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
 12298  0056D8  0E52               	movlw	82
 12299  0056DA  EC36  F02E         	call	_I2C_2_Master_Write
 12300                           
 12301                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
 12302  0056DE  0EB4               	movlw	180
 12303  0056E0  EC36  F02E         	call	_I2C_2_Master_Write
 12304                           
 12305                           ;color.c: 139:  I2C_2_Master_RepStart();
 12306  0056E4  EC42  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 12307                           
 12308                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
 12309  0056E8  0E53               	movlw	83
 12310  0056EA  EC36  F02E         	call	_I2C_2_Master_Write
 12311                           
 12312                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
 12313  0056EE  0E01               	movlw	1
 12314  0056F0  EC19  F02C         	call	_I2C_2_Master_Read
 12315  0056F4  6E07               	movwf	??_color_read_Clear^0,c
 12316  0056F6  5007               	movf	??_color_read_Clear^0,w,c
 12317  0056F8  6E0A               	movwf	color_read_Clear@tmp^0,c
 12318  0056FA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12319                           
 12320                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12321  0056FC  0E00               	movlw	0
 12322  0056FE  EC19  F02C         	call	_I2C_2_Master_Read
 12323  005702  6E07               	movwf	??_color_read_Clear^0,c
 12324  005704  5007               	movf	??_color_read_Clear^0,w,c
 12325  005706  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12326  005708  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12327  00570A  500A               	movf	color_read_Clear@tmp^0,w,c
 12328  00570C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12329  00570E  6E0A               	movwf	color_read_Clear@tmp^0,c
 12330  005710  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12331  005712  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12332  005714  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12333                           
 12334                           ;color.c: 143:  I2C_2_Master_Stop();
 12335  005716  EC47  F02E         	call	_I2C_2_Master_Stop	;wreg free
 12336  00571A                     
 12337                           ;color.c: 144:  return tmp;
 12338  00571A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12339  00571E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12340  005722  0012               	return		;funcret
 12341  005724                     __end_of_color_read_Clear:
 12342                           	callstack 0
 12343                           
 12344 ;; *************** function _I2C_2_Master_RepStart *****************
 12345 ;; Defined at:
 12346 ;;		line 33 in file "i2c.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;		None
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;		None
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2, status,0, cstack
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;Total ram usage:        0 bytes
 12365 ;; Hardware stack levels used: 1
 12366 ;; Hardware stack levels required when called: 2
 12367 ;; This function calls:
 12368 ;;		_I2C_2_Master_Idle
 12369 ;; This function is called by:
 12370 ;;		_color_read_Red
 12371 ;;		_color_read_Blue
 12372 ;;		_color_read_Green
 12373 ;;		_color_read_Clear
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           	psect	text58
 12378  005C84                     __ptext58:
 12379                           	callstack 0
 12380  005C84                     _I2C_2_Master_RepStart:
 12381                           	callstack 24
 12382  005C84                     
 12383                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12384  005C84  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12385  005C88                     
 12386                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12387  005C88  010E               	movlb	14	; () banked
 12388  005C8A  83DA               	bsf	218,1,b	;volatile
 12389  005C8C                     
 12390                           ; BSR set to: 14
 12391  005C8C  0012               	return		;funcret
 12392  005C8E                     __end_of_I2C_2_Master_RepStart:
 12393                           	callstack 0
 12394                           
 12395 ;; *************** function _I2C_2_Master_Read *****************
 12396 ;; Defined at:
 12397 ;;		line 51 in file "i2c.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  ack             1    wreg     unsigned char 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  ack             1    2[COMRAM] unsigned char 
 12402 ;;  tmp             1    3[COMRAM] unsigned char 
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  1    wreg      unsigned char 
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0, cstack
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12416 ;;Total ram usage:        3 bytes
 12417 ;; Hardware stack levels used: 1
 12418 ;; Hardware stack levels required when called: 2
 12419 ;; This function calls:
 12420 ;;		_I2C_2_Master_Idle
 12421 ;; This function is called by:
 12422 ;;		_color_read_Red
 12423 ;;		_color_read_Blue
 12424 ;;		_color_read_Green
 12425 ;;		_color_read_Clear
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text59
 12430  005832                     __ptext59:
 12431                           	callstack 0
 12432  005832                     _I2C_2_Master_Read:
 12433                           	callstack 24
 12434                           
 12435                           ; BSR set to: 14
 12436                           ;incstack = 0
 12437                           ;I2C_2_Master_Read@ack stored from wreg
 12438  005832  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12439  005834                     
 12440                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12441  005834  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12442  005838                     
 12443                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12444  005838  010E               	movlb	14	; () banked
 12445  00583A  87DA               	bsf	218,3,b	;volatile
 12446                           
 12447                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12448  00583C  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12449  005840                     
 12450                           ;i2c.c: 57:   tmp = SSP2BUF;
 12451  005840  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12452                           
 12453                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12454  005844  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12455  005848                     
 12456                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12457  005848  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12458  00584A  B4D8               	btfsc	status,2,c
 12459  00584C  EF2A  F02C         	goto	u3861
 12460  005850  EF2E  F02C         	goto	u3860
 12461  005854                     u3861:
 12462  005854  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12463  005856  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12464  005858  EF2F  F02C         	goto	u3878
 12465  00585C                     u3860:
 12466  00585C  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12467  00585E                     u3878:
 12468  00585E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12469  005860  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12470  005862  010E               	movlb	14	; () banked
 12471  005864  51DA               	movf	218,w,b	;volatile
 12472  005866  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12473  005868  0BDF               	andlw	-33
 12474  00586A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12475  00586C  6FDA               	movwf	218,b	;volatile
 12476  00586E                     
 12477                           ; BSR set to: 14
 12478                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12479  00586E  89DA               	bsf	218,4,b	;volatile
 12480  005870                     
 12481                           ; BSR set to: 14
 12482                           ;i2c.c: 61:   return tmp;
 12483  005870  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12484  005872                     
 12485                           ; BSR set to: 14
 12486  005872  0012               	return		;funcret
 12487  005874                     __end_of_I2C_2_Master_Read:
 12488                           	callstack 0
 12489                           
 12490 ;; *************** function ___xxtofl *****************
 12491 ;; Defined at:
 12492 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  sign            1    wreg     unsigned char 
 12495 ;;  val             4    0[COMRAM] long 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;  sign            1    8[COMRAM] unsigned char 
 12498 ;;  arg             4   10[COMRAM] unsigned long 
 12499 ;;  exp             1    9[COMRAM] unsigned char 
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  4    0[COMRAM] unsigned char 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12510 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12512 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;Total ram usage:       14 bytes
 12514 ;; Hardware stack levels used: 1
 12515 ;; Hardware stack levels required when called: 1
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_detect_color
 12520 ;;		_amb_light_measure
 12521 ;;		_distance_measure
 12522 ;;		_check_color_reading
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text60
 12527  003DDC                     __ptext60:
 12528                           	callstack 0
 12529  003DDC                     ___xxtofl:
 12530                           	callstack 27
 12531                           
 12532                           ; BSR set to: 14
 12533                           ;incstack = 0
 12534                           ;___xxtofl@sign stored from wreg
 12535  003DDC  6E09               	movwf	___xxtofl@sign^0,c
 12536  003DDE  5009               	movf	___xxtofl@sign^0,w,c
 12537  003DE0  B4D8               	btfsc	status,2,c
 12538  003DE2  EFF5  F01E         	goto	u5031
 12539  003DE6  EFF7  F01E         	goto	u5030
 12540  003DEA                     u5031:
 12541  003DEA  EF19  F01F         	goto	l1325
 12542  003DEE                     u5030:
 12543  003DEE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12544  003DF0  EFFE  F01E         	goto	u5040
 12545  003DF4  EFFC  F01E         	goto	u5041
 12546  003DF8                     u5041:
 12547  003DF8  EF19  F01F         	goto	l1325
 12548  003DFC                     u5040:
 12549  003DFC  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12550  003E00  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12551  003E04  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12552  003E08  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12553  003E0C  1E05               	comf	??___xxtofl^0,f,c
 12554  003E0E  1E06               	comf	(??___xxtofl+1)^0,f,c
 12555  003E10  1E07               	comf	(??___xxtofl+2)^0,f,c
 12556  003E12  1E08               	comf	(??___xxtofl+3)^0,f,c
 12557  003E14  2A05               	incf	??___xxtofl^0,f,c
 12558  003E16  0E00               	movlw	0
 12559  003E18  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12560  003E1A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12561  003E1C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12562  003E1E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12563  003E22  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12564  003E26  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12565  003E2A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12566  003E2E  EF21  F01F         	goto	l4672
 12567  003E32                     l1325:
 12568  003E32  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12569  003E36  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12570  003E3A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12571  003E3E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12572  003E42                     l4672:
 12573  003E42  5001               	movf	___xxtofl@val^0,w,c
 12574  003E44  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12575  003E46  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12576  003E48  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12577  003E4A  A4D8               	btfss	status,2,c
 12578  003E4C  EF2A  F01F         	goto	u5051
 12579  003E50  EF2C  F01F         	goto	u5050
 12580  003E54                     u5051:
 12581  003E54  EF36  F01F         	goto	l4678
 12582  003E58                     u5050:
 12583  003E58  0E00               	movlw	0
 12584  003E5A  6E01               	movwf	?___xxtofl^0,c
 12585  003E5C  0E00               	movlw	0
 12586  003E5E  6E02               	movwf	(?___xxtofl+1)^0,c
 12587  003E60  0E00               	movlw	0
 12588  003E62  6E03               	movwf	(?___xxtofl+2)^0,c
 12589  003E64  0E00               	movlw	0
 12590  003E66  6E04               	movwf	(?___xxtofl+3)^0,c
 12591  003E68  EFC7  F01F         	goto	l1328
 12592  003E6C                     l4678:
 12593  003E6C  0E96               	movlw	150
 12594  003E6E  6E0A               	movwf	___xxtofl@exp^0,c
 12595  003E70  EF40  F01F         	goto	l4682
 12596  003E74                     l4680:
 12597  003E74  2A0A               	incf	___xxtofl@exp^0,f,c
 12598  003E76  90D8               	bcf	status,0,c
 12599  003E78  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12600  003E7A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12601  003E7C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12602  003E7E  320B               	rrcf	___xxtofl@arg^0,f,c
 12603  003E80                     l4682:
 12604  003E80  0E00               	movlw	0
 12605  003E82  140B               	andwf	___xxtofl@arg^0,w,c
 12606  003E84  6E05               	movwf	??___xxtofl^0,c
 12607  003E86  0E00               	movlw	0
 12608  003E88  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12609  003E8A  6E06               	movwf	(??___xxtofl+1)^0,c
 12610  003E8C  0E00               	movlw	0
 12611  003E8E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12612  003E90  6E07               	movwf	(??___xxtofl+2)^0,c
 12613  003E92  0EFE               	movlw	254
 12614  003E94  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12615  003E96  6E08               	movwf	(??___xxtofl+3)^0,c
 12616  003E98  5005               	movf	??___xxtofl^0,w,c
 12617  003E9A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12618  003E9C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12619  003E9E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12620  003EA0  A4D8               	btfss	status,2,c
 12621  003EA2  EF55  F01F         	goto	u5061
 12622  003EA6  EF57  F01F         	goto	u5060
 12623  003EAA                     u5061:
 12624  003EAA  EF3A  F01F         	goto	l4680
 12625  003EAE                     u5060:
 12626  003EAE  EF65  F01F         	goto	l1332
 12627  003EB2                     l4684:
 12628  003EB2  2A0A               	incf	___xxtofl@exp^0,f,c
 12629  003EB4  0E01               	movlw	1
 12630  003EB6  260B               	addwf	___xxtofl@arg^0,f,c
 12631  003EB8  0E00               	movlw	0
 12632  003EBA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12633  003EBC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12634  003EBE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12635  003EC0  90D8               	bcf	status,0,c
 12636  003EC2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12637  003EC4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12638  003EC6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12639  003EC8  320B               	rrcf	___xxtofl@arg^0,f,c
 12640  003ECA                     l1332:
 12641  003ECA  0E00               	movlw	0
 12642  003ECC  140B               	andwf	___xxtofl@arg^0,w,c
 12643  003ECE  6E05               	movwf	??___xxtofl^0,c
 12644  003ED0  0E00               	movlw	0
 12645  003ED2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12646  003ED4  6E06               	movwf	(??___xxtofl+1)^0,c
 12647  003ED6  0E00               	movlw	0
 12648  003ED8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12649  003EDA  6E07               	movwf	(??___xxtofl+2)^0,c
 12650  003EDC  0EFF               	movlw	255
 12651  003EDE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12652  003EE0  6E08               	movwf	(??___xxtofl+3)^0,c
 12653  003EE2  5005               	movf	??___xxtofl^0,w,c
 12654  003EE4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12655  003EE6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12656  003EE8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12657  003EEA  A4D8               	btfss	status,2,c
 12658  003EEC  EF7A  F01F         	goto	u5071
 12659  003EF0  EF7C  F01F         	goto	u5070
 12660  003EF4                     u5071:
 12661  003EF4  EF59  F01F         	goto	l4684
 12662  003EF8                     u5070:
 12663  003EF8  EF84  F01F         	goto	l4692
 12664  003EFC                     l4690:
 12665  003EFC  060A               	decf	___xxtofl@exp^0,f,c
 12666  003EFE  90D8               	bcf	status,0,c
 12667  003F00  360B               	rlcf	___xxtofl@arg^0,f,c
 12668  003F02  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12669  003F04  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12670  003F06  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12671  003F08                     l4692:
 12672  003F08  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12673  003F0A  EF89  F01F         	goto	u5081
 12674  003F0E  EF8B  F01F         	goto	u5080
 12675  003F12                     u5081:
 12676  003F12  EF93  F01F         	goto	l1339
 12677  003F16                     u5080:
 12678  003F16  0E02               	movlw	2
 12679  003F18  600A               	cpfslt	___xxtofl@exp^0,c
 12680  003F1A  EF91  F01F         	goto	u5091
 12681  003F1E  EF93  F01F         	goto	u5090
 12682  003F22                     u5091:
 12683  003F22  EF7E  F01F         	goto	l4690
 12684  003F26                     u5090:
 12685  003F26                     l1339:
 12686  003F26  B00A               	btfsc	___xxtofl@exp^0,0,c
 12687  003F28  EF98  F01F         	goto	u5101
 12688  003F2C  EF9A  F01F         	goto	u5100
 12689  003F30                     u5101:
 12690  003F30  EF9B  F01F         	goto	l4698
 12691  003F34                     u5100:
 12692  003F34  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12693  003F36                     l4698:
 12694  003F36  90D8               	bcf	status,0,c
 12695  003F38  320A               	rrcf	___xxtofl@exp^0,f,c
 12696  003F3A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12697  003F3E  6A06               	clrf	(??___xxtofl+1)^0,c
 12698  003F40  6A07               	clrf	(??___xxtofl+2)^0,c
 12699  003F42  6A08               	clrf	(??___xxtofl+3)^0,c
 12700  003F44  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12701  003F48  6A07               	clrf	(??___xxtofl+2)^0,c
 12702  003F4A  6A06               	clrf	(??___xxtofl+1)^0,c
 12703  003F4C  6A05               	clrf	??___xxtofl^0,c
 12704  003F4E  5005               	movf	??___xxtofl^0,w,c
 12705  003F50  120B               	iorwf	___xxtofl@arg^0,f,c
 12706  003F52  5006               	movf	(??___xxtofl+1)^0,w,c
 12707  003F54  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12708  003F56  5007               	movf	(??___xxtofl+2)^0,w,c
 12709  003F58  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12710  003F5A  5008               	movf	(??___xxtofl+3)^0,w,c
 12711  003F5C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12712  003F5E  5009               	movf	___xxtofl@sign^0,w,c
 12713  003F60  B4D8               	btfsc	status,2,c
 12714  003F62  EFB5  F01F         	goto	u5111
 12715  003F66  EFB7  F01F         	goto	u5110
 12716  003F6A                     u5111:
 12717  003F6A  EFBF  F01F         	goto	l4708
 12718  003F6E                     u5110:
 12719  003F6E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12720  003F70  EFBE  F01F         	goto	u5120
 12721  003F74  EFBC  F01F         	goto	u5121
 12722  003F78                     u5121:
 12723  003F78  EFBF  F01F         	goto	l4708
 12724  003F7C                     u5120:
 12725  003F7C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12726  003F7E                     l4708:
 12727  003F7E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12728  003F82  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12729  003F86  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12730  003F8A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12731  003F8E                     l1328:
 12732  003F8E  0012               	return		;funcret
 12733  003F90                     __end_of___xxtofl:
 12734                           	callstack 0
 12735                           
 12736 ;; *************** function ___fldiv *****************
 12737 ;; Defined at:
 12738 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  b               4   14[COMRAM] unsigned char 
 12741 ;;  a               4   18[COMRAM] unsigned char 
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;  grs             4   33[COMRAM] unsigned long 
 12744 ;;  rem             4   26[COMRAM] unsigned long 
 12745 ;;  new_exp         2   31[COMRAM] short 
 12746 ;;  aexp            1   38[COMRAM] unsigned char 
 12747 ;;  bexp            1   37[COMRAM] unsigned char 
 12748 ;;  sign            1   30[COMRAM] unsigned char 
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  4   14[COMRAM] unsigned char 
 12751 ;; Registers used:
 12752 ;;		wreg, status,2, status,0
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12758 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12759 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12761 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12762 ;;Total ram usage:       25 bytes
 12763 ;; Hardware stack levels used: 1
 12764 ;; Hardware stack levels required when called: 1
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_detect_color
 12769 ;;		_amb_light_measure
 12770 ;;		_check_color_reading
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774                           	psect	text61
 12775  002A54                     __ptext61:
 12776                           	callstack 0
 12777  002A54                     ___fldiv:
 12778                           	callstack 27
 12779  002A54  5012               	movf	(___fldiv@b+3)^0,w,c
 12780  002A56  0B80               	andlw	128
 12781  002A58  6E1F               	movwf	___fldiv@sign^0,c
 12782  002A5A  5012               	movf	(___fldiv@b+3)^0,w,c
 12783  002A5C  2412               	addwf	(___fldiv@b+3)^0,w,c
 12784  002A5E  6E26               	movwf	___fldiv@bexp^0,c
 12785  002A60  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12786  002A62  EF35  F015         	goto	u4801
 12787  002A66  EF37  F015         	goto	u4800
 12788  002A6A                     u4801:
 12789  002A6A  EF38  F015         	goto	l4534
 12790  002A6E                     u4800:
 12791  002A6E  8026               	bsf	___fldiv@bexp^0,0,c
 12792  002A70                     l4534:
 12793  002A70  5026               	movf	___fldiv@bexp^0,w,c
 12794  002A72  B4D8               	btfsc	status,2,c
 12795  002A74  EF3E  F015         	goto	u4811
 12796  002A78  EF40  F015         	goto	u4810
 12797  002A7C                     u4811:
 12798  002A7C  EF55  F015         	goto	l4544
 12799  002A80                     u4810:
 12800  002A80  2826               	incf	___fldiv@bexp^0,w,c
 12801  002A82  A4D8               	btfss	status,2,c
 12802  002A84  EF46  F015         	goto	u4821
 12803  002A88  EF48  F015         	goto	u4820
 12804  002A8C                     u4821:
 12805  002A8C  EF50  F015         	goto	l4540
 12806  002A90                     u4820:
 12807  002A90  0E00               	movlw	0
 12808  002A92  6E0F               	movwf	___fldiv@b^0,c
 12809  002A94  0E00               	movlw	0
 12810  002A96  6E10               	movwf	(___fldiv@b+1)^0,c
 12811  002A98  0E00               	movlw	0
 12812  002A9A  6E11               	movwf	(___fldiv@b+2)^0,c
 12813  002A9C  0E00               	movlw	0
 12814  002A9E  6E12               	movwf	(___fldiv@b+3)^0,c
 12815  002AA0                     l4540:
 12816  002AA0  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12817  002AA2  0E00               	movlw	0
 12818  002AA4  6E12               	movwf	(___fldiv@b+3)^0,c
 12819  002AA6  EF5D  F015         	goto	l4546
 12820  002AAA                     l4544:
 12821  002AAA  0E00               	movlw	0
 12822  002AAC  6E0F               	movwf	___fldiv@b^0,c
 12823  002AAE  0E00               	movlw	0
 12824  002AB0  6E10               	movwf	(___fldiv@b+1)^0,c
 12825  002AB2  0E00               	movlw	0
 12826  002AB4  6E11               	movwf	(___fldiv@b+2)^0,c
 12827  002AB6  0E00               	movlw	0
 12828  002AB8  6E12               	movwf	(___fldiv@b+3)^0,c
 12829  002ABA                     l4546:
 12830  002ABA  5016               	movf	(___fldiv@a+3)^0,w,c
 12831  002ABC  0B80               	andlw	128
 12832  002ABE  1A1F               	xorwf	___fldiv@sign^0,f,c
 12833  002AC0  5016               	movf	(___fldiv@a+3)^0,w,c
 12834  002AC2  2416               	addwf	(___fldiv@a+3)^0,w,c
 12835  002AC4  6E27               	movwf	___fldiv@aexp^0,c
 12836  002AC6  AE15               	btfss	(___fldiv@a+2)^0,7,c
 12837  002AC8  EF68  F015         	goto	u4831
 12838  002ACC  EF6A  F015         	goto	u4830
 12839  002AD0                     u4831:
 12840  002AD0  EF6B  F015         	goto	l4554
 12841  002AD4                     u4830:
 12842  002AD4  8027               	bsf	___fldiv@aexp^0,0,c
 12843  002AD6                     l4554:
 12844  002AD6  5027               	movf	___fldiv@aexp^0,w,c
 12845  002AD8  B4D8               	btfsc	status,2,c
 12846  002ADA  EF71  F015         	goto	u4841
 12847  002ADE  EF73  F015         	goto	u4840
 12848  002AE2                     u4841:
 12849  002AE2  EF88  F015         	goto	l4564
 12850  002AE6                     u4840:
 12851  002AE6  2827               	incf	___fldiv@aexp^0,w,c
 12852  002AE8  A4D8               	btfss	status,2,c
 12853  002AEA  EF79  F015         	goto	u4851
 12854  002AEE  EF7B  F015         	goto	u4850
 12855  002AF2                     u4851:
 12856  002AF2  EF83  F015         	goto	l4560
 12857  002AF6                     u4850:
 12858  002AF6  0E00               	movlw	0
 12859  002AF8  6E13               	movwf	___fldiv@a^0,c
 12860  002AFA  0E00               	movlw	0
 12861  002AFC  6E14               	movwf	(___fldiv@a+1)^0,c
 12862  002AFE  0E00               	movlw	0
 12863  002B00  6E15               	movwf	(___fldiv@a+2)^0,c
 12864  002B02  0E00               	movlw	0
 12865  002B04  6E16               	movwf	(___fldiv@a+3)^0,c
 12866  002B06                     l4560:
 12867  002B06  8E15               	bsf	(___fldiv@a+2)^0,7,c
 12868  002B08  0E00               	movlw	0
 12869  002B0A  6E16               	movwf	(___fldiv@a+3)^0,c
 12870  002B0C  EF90  F015         	goto	l4566
 12871  002B10                     l4564:
 12872  002B10  0E00               	movlw	0
 12873  002B12  6E13               	movwf	___fldiv@a^0,c
 12874  002B14  0E00               	movlw	0
 12875  002B16  6E14               	movwf	(___fldiv@a+1)^0,c
 12876  002B18  0E00               	movlw	0
 12877  002B1A  6E15               	movwf	(___fldiv@a+2)^0,c
 12878  002B1C  0E00               	movlw	0
 12879  002B1E  6E16               	movwf	(___fldiv@a+3)^0,c
 12880  002B20                     l4566:
 12881  002B20  5013               	movf	___fldiv@a^0,w,c
 12882  002B22  1014               	iorwf	(___fldiv@a+1)^0,w,c
 12883  002B24  1015               	iorwf	(___fldiv@a+2)^0,w,c
 12884  002B26  1016               	iorwf	(___fldiv@a+3)^0,w,c
 12885  002B28  A4D8               	btfss	status,2,c
 12886  002B2A  EF99  F015         	goto	u4861
 12887  002B2E  EF9B  F015         	goto	u4860
 12888  002B32                     u4861:
 12889  002B32  EFB3  F015         	goto	l4578
 12890  002B36                     u4860:
 12891  002B36  0E00               	movlw	0
 12892  002B38  6E0F               	movwf	___fldiv@b^0,c
 12893  002B3A  0E00               	movlw	0
 12894  002B3C  6E10               	movwf	(___fldiv@b+1)^0,c
 12895  002B3E  0E00               	movlw	0
 12896  002B40  6E11               	movwf	(___fldiv@b+2)^0,c
 12897  002B42  0E00               	movlw	0
 12898  002B44  6E12               	movwf	(___fldiv@b+3)^0,c
 12899  002B46  0E80               	movlw	128
 12900  002B48  1211               	iorwf	(___fldiv@b+2)^0,f,c
 12901  002B4A  0E7F               	movlw	127
 12902  002B4C  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12903  002B4E                     l4572:
 12904  002B4E  501F               	movf	___fldiv@sign^0,w,c
 12905  002B50  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12906  002B52  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12907  002B56  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12908  002B5A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12909  002B5E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12910  002B62  EFF6  F016         	goto	l1252
 12911  002B66                     l4578:
 12912  002B66  5026               	movf	___fldiv@bexp^0,w,c
 12913  002B68  A4D8               	btfss	status,2,c
 12914  002B6A  EFB9  F015         	goto	u4871
 12915  002B6E  EFBB  F015         	goto	u4870
 12916  002B72                     u4871:
 12917  002B72  EFC5  F015         	goto	l4586
 12918  002B76                     u4870:
 12919  002B76  0E00               	movlw	0
 12920  002B78  6E0F               	movwf	?___fldiv^0,c
 12921  002B7A  0E00               	movlw	0
 12922  002B7C  6E10               	movwf	(?___fldiv+1)^0,c
 12923  002B7E  0E00               	movlw	0
 12924  002B80  6E11               	movwf	(?___fldiv+2)^0,c
 12925  002B82  0E00               	movlw	0
 12926  002B84  6E12               	movwf	(?___fldiv+3)^0,c
 12927  002B86  EFF6  F016         	goto	l1252
 12928  002B8A                     l4586:
 12929  002B8A  5027               	movf	___fldiv@aexp^0,w,c
 12930  002B8C  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12931  002B90  6A18               	clrf	(??___fldiv+1)^0,c
 12932  002B92  5E17               	subwf	??___fldiv^0,f,c
 12933  002B94  0E00               	movlw	0
 12934  002B96  5A18               	subwfb	(??___fldiv+1)^0,f,c
 12935  002B98  0E7F               	movlw	127
 12936  002B9A  2417               	addwf	??___fldiv^0,w,c
 12937  002B9C  6E20               	movwf	___fldiv@new_exp^0,c
 12938  002B9E  0E00               	movlw	0
 12939  002BA0  2018               	addwfc	(??___fldiv+1)^0,w,c
 12940  002BA2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12941  002BA4  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12942  002BA8  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12943  002BAC  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12944  002BB0  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12945  002BB4  0E00               	movlw	0
 12946  002BB6  6E0F               	movwf	___fldiv@b^0,c
 12947  002BB8  0E00               	movlw	0
 12948  002BBA  6E10               	movwf	(___fldiv@b+1)^0,c
 12949  002BBC  0E00               	movlw	0
 12950  002BBE  6E11               	movwf	(___fldiv@b+2)^0,c
 12951  002BC0  0E00               	movlw	0
 12952  002BC2  6E12               	movwf	(___fldiv@b+3)^0,c
 12953  002BC4  0E00               	movlw	0
 12954  002BC6  6E22               	movwf	___fldiv@grs^0,c
 12955  002BC8  0E00               	movlw	0
 12956  002BCA  6E23               	movwf	(___fldiv@grs+1)^0,c
 12957  002BCC  0E00               	movlw	0
 12958  002BCE  6E24               	movwf	(___fldiv@grs+2)^0,c
 12959  002BD0  0E00               	movlw	0
 12960  002BD2  6E25               	movwf	(___fldiv@grs+3)^0,c
 12961  002BD4  0E00               	movlw	0
 12962  002BD6  6E27               	movwf	___fldiv@aexp^0,c
 12963  002BD8  EF26  F016         	goto	l1254
 12964  002BDC                     l4596:
 12965  002BDC  5027               	movf	___fldiv@aexp^0,w,c
 12966  002BDE  B4D8               	btfsc	status,2,c
 12967  002BE0  EFF4  F015         	goto	u4881
 12968  002BE4  EFF6  F015         	goto	u4880
 12969  002BE8                     u4881:
 12970  002BE8  EF0D  F016         	goto	l4604
 12971  002BEC                     u4880:
 12972  002BEC  90D8               	bcf	status,0,c
 12973  002BEE  361B               	rlcf	___fldiv@rem^0,f,c
 12974  002BF0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 12975  002BF2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 12976  002BF4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 12977  002BF6  90D8               	bcf	status,0,c
 12978  002BF8  360F               	rlcf	___fldiv@b^0,f,c
 12979  002BFA  3610               	rlcf	(___fldiv@b+1)^0,f,c
 12980  002BFC  3611               	rlcf	(___fldiv@b+2)^0,f,c
 12981  002BFE  3612               	rlcf	(___fldiv@b+3)^0,f,c
 12982  002C00  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12983  002C02  EF05  F016         	goto	u4891
 12984  002C06  EF07  F016         	goto	u4890
 12985  002C0A                     u4891:
 12986  002C0A  EF08  F016         	goto	l1257
 12987  002C0E                     u4890:
 12988  002C0E  800F               	bsf	___fldiv@b^0,0,c
 12989  002C10                     l1257:
 12990  002C10  90D8               	bcf	status,0,c
 12991  002C12  3622               	rlcf	___fldiv@grs^0,f,c
 12992  002C14  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 12993  002C16  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 12994  002C18  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 12995  002C1A                     l4604:
 12996  002C1A  5013               	movf	___fldiv@a^0,w,c
 12997  002C1C  5C1B               	subwf	___fldiv@rem^0,w,c
 12998  002C1E  5014               	movf	(___fldiv@a+1)^0,w,c
 12999  002C20  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13000  002C22  5015               	movf	(___fldiv@a+2)^0,w,c
 13001  002C24  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13002  002C26  5016               	movf	(___fldiv@a+3)^0,w,c
 13003  002C28  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13004  002C2A  A0D8               	btfss	status,0,c
 13005  002C2C  EF1A  F016         	goto	u4901
 13006  002C30  EF1C  F016         	goto	u4900
 13007  002C34                     u4901:
 13008  002C34  EF25  F016         	goto	l4610
 13009  002C38                     u4900:
 13010  002C38  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13011  002C3A  5013               	movf	___fldiv@a^0,w,c
 13012  002C3C  5E1B               	subwf	___fldiv@rem^0,f,c
 13013  002C3E  5014               	movf	(___fldiv@a+1)^0,w,c
 13014  002C40  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13015  002C42  5015               	movf	(___fldiv@a+2)^0,w,c
 13016  002C44  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13017  002C46  5016               	movf	(___fldiv@a+3)^0,w,c
 13018  002C48  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13019  002C4A                     l4610:
 13020  002C4A  2A27               	incf	___fldiv@aexp^0,f,c
 13021  002C4C                     l1254:
 13022  002C4C  0E19               	movlw	25
 13023  002C4E  6427               	cpfsgt	___fldiv@aexp^0,c
 13024  002C50  EF2C  F016         	goto	u4911
 13025  002C54  EF2E  F016         	goto	u4910
 13026  002C58                     u4911:
 13027  002C58  EFEE  F015         	goto	l4596
 13028  002C5C                     u4910:
 13029  002C5C  501B               	movf	___fldiv@rem^0,w,c
 13030  002C5E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13031  002C60  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13032  002C62  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13033  002C64  B4D8               	btfsc	status,2,c
 13034  002C66  EF37  F016         	goto	u4921
 13035  002C6A  EF39  F016         	goto	u4920
 13036  002C6E                     u4921:
 13037  002C6E  EF51  F016         	goto	l4622
 13038  002C72                     u4920:
 13039  002C72  8022               	bsf	___fldiv@grs^0,0,c
 13040  002C74  EF51  F016         	goto	l4622
 13041  002C78                     l4616:
 13042  002C78  90D8               	bcf	status,0,c
 13043  002C7A  360F               	rlcf	___fldiv@b^0,f,c
 13044  002C7C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13045  002C7E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13046  002C80  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13047  002C82  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13048  002C84  EF46  F016         	goto	u4931
 13049  002C88  EF48  F016         	goto	u4930
 13050  002C8C                     u4931:
 13051  002C8C  EF49  F016         	goto	l1263
 13052  002C90                     u4930:
 13053  002C90  800F               	bsf	___fldiv@b^0,0,c
 13054  002C92                     l1263:
 13055  002C92  90D8               	bcf	status,0,c
 13056  002C94  3622               	rlcf	___fldiv@grs^0,f,c
 13057  002C96  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13058  002C98  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13059  002C9A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13060  002C9C  0620               	decf	___fldiv@new_exp^0,f,c
 13061  002C9E  A0D8               	btfss	status,0,c
 13062  002CA0  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13063  002CA2                     l4622:
 13064  002CA2  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13065  002CA4  EF56  F016         	goto	u4941
 13066  002CA8  EF58  F016         	goto	u4940
 13067  002CAC                     u4941:
 13068  002CAC  EF3C  F016         	goto	l4616
 13069  002CB0                     u4940:
 13070  002CB0  0E00               	movlw	0
 13071  002CB2  6E27               	movwf	___fldiv@aexp^0,c
 13072  002CB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13073  002CB6  EF5F  F016         	goto	u4951
 13074  002CBA  EF61  F016         	goto	u4950
 13075  002CBE                     u4951:
 13076  002CBE  EF85  F016         	goto	l1265
 13077  002CC2                     u4950:
 13078  002CC2  0EFF               	movlw	255
 13079  002CC4  1422               	andwf	___fldiv@grs^0,w,c
 13080  002CC6  6E17               	movwf	??___fldiv^0,c
 13081  002CC8  0EFF               	movlw	255
 13082  002CCA  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13083  002CCC  6E18               	movwf	(??___fldiv+1)^0,c
 13084  002CCE  0EFF               	movlw	255
 13085  002CD0  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13086  002CD2  6E19               	movwf	(??___fldiv+2)^0,c
 13087  002CD4  0E7F               	movlw	127
 13088  002CD6  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13089  002CD8  6E1A               	movwf	(??___fldiv+3)^0,c
 13090  002CDA  5017               	movf	??___fldiv^0,w,c
 13091  002CDC  1018               	iorwf	(??___fldiv+1)^0,w,c
 13092  002CDE  1019               	iorwf	(??___fldiv+2)^0,w,c
 13093  002CE0  101A               	iorwf	(??___fldiv+3)^0,w,c
 13094  002CE2  B4D8               	btfsc	status,2,c
 13095  002CE4  EF76  F016         	goto	u4961
 13096  002CE8  EF78  F016         	goto	u4960
 13097  002CEC                     u4961:
 13098  002CEC  EF7C  F016         	goto	l1266
 13099  002CF0                     u4960:
 13100  002CF0                     l4630:
 13101  002CF0  0E01               	movlw	1
 13102  002CF2  6E27               	movwf	___fldiv@aexp^0,c
 13103  002CF4  EF85  F016         	goto	l1265
 13104  002CF8                     l1266:
 13105  002CF8  A00F               	btfss	___fldiv@b^0,0,c
 13106  002CFA  EF81  F016         	goto	u4971
 13107  002CFE  EF83  F016         	goto	u4970
 13108  002D02                     u4971:
 13109  002D02  EF85  F016         	goto	l1265
 13110  002D06                     u4970:
 13111  002D06  EF78  F016         	goto	l4630
 13112  002D0A                     l1265:
 13113  002D0A  5027               	movf	___fldiv@aexp^0,w,c
 13114  002D0C  B4D8               	btfsc	status,2,c
 13115  002D0E  EF8B  F016         	goto	u4981
 13116  002D12  EF8D  F016         	goto	u4980
 13117  002D16                     u4981:
 13118  002D16  EFB1  F016         	goto	l4642
 13119  002D1A                     u4980:
 13120  002D1A  0E01               	movlw	1
 13121  002D1C  260F               	addwf	___fldiv@b^0,f,c
 13122  002D1E  0E00               	movlw	0
 13123  002D20  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13124  002D22  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13125  002D24  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13126  002D26  A012               	btfss	(___fldiv@b+3)^0,0,c
 13127  002D28  EF98  F016         	goto	u4991
 13128  002D2C  EF9A  F016         	goto	u4990
 13129  002D30                     u4991:
 13130  002D30  EFB1  F016         	goto	l4642
 13131  002D34                     u4990:
 13132  002D34  C00F  F017         	movff	___fldiv@b,??___fldiv
 13133  002D38  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13134  002D3C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13135  002D40  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13136  002D44  341A               	rlcf	(??___fldiv+3)^0,w,c
 13137  002D46  321A               	rrcf	(??___fldiv+3)^0,f,c
 13138  002D48  3219               	rrcf	(??___fldiv+2)^0,f,c
 13139  002D4A  3218               	rrcf	(??___fldiv+1)^0,f,c
 13140  002D4C  3217               	rrcf	??___fldiv^0,f,c
 13141  002D4E  C017  F00F         	movff	??___fldiv,___fldiv@b
 13142  002D52  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13143  002D56  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13144  002D5A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13145  002D5E  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13146  002D60  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13147  002D62                     l4642:
 13148  002D62  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13149  002D64  EFBC  F016         	goto	u5001
 13150  002D68  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13151  002D6A  E108               	bnz	u5000
 13152  002D6C  2820               	incf	___fldiv@new_exp^0,w,c
 13153  002D6E  A0D8               	btfss	status,0,c
 13154  002D70  EFBC  F016         	goto	u5001
 13155  002D74  EFBE  F016         	goto	u5000
 13156  002D78                     u5001:
 13157  002D78  EFC9  F016         	goto	l4646
 13158  002D7C                     u5000:
 13159  002D7C  0E00               	movlw	0
 13160  002D7E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13161  002D80  6820               	setf	___fldiv@new_exp^0,c
 13162  002D82  0E00               	movlw	0
 13163  002D84  6E0F               	movwf	___fldiv@b^0,c
 13164  002D86  0E00               	movlw	0
 13165  002D88  6E10               	movwf	(___fldiv@b+1)^0,c
 13166  002D8A  0E00               	movlw	0
 13167  002D8C  6E11               	movwf	(___fldiv@b+2)^0,c
 13168  002D8E  0E00               	movlw	0
 13169  002D90  6E12               	movwf	(___fldiv@b+3)^0,c
 13170  002D92                     l4646:
 13171  002D92  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13172  002D94  EFD6  F016         	goto	u5010
 13173  002D98  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13174  002D9A  E106               	bnz	u5011
 13175  002D9C  0420               	decf	___fldiv@new_exp^0,w,c
 13176  002D9E  B0D8               	btfsc	status,0,c
 13177  002DA0  EFD4  F016         	goto	u5011
 13178  002DA4  EFD6  F016         	goto	u5010
 13179  002DA8                     u5011:
 13180  002DA8  EFE4  F016         	goto	l4650
 13181  002DAC                     u5010:
 13182  002DAC  0E00               	movlw	0
 13183  002DAE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13184  002DB0  0E00               	movlw	0
 13185  002DB2  6E20               	movwf	___fldiv@new_exp^0,c
 13186  002DB4  0E00               	movlw	0
 13187  002DB6  6E0F               	movwf	___fldiv@b^0,c
 13188  002DB8  0E00               	movlw	0
 13189  002DBA  6E10               	movwf	(___fldiv@b+1)^0,c
 13190  002DBC  0E00               	movlw	0
 13191  002DBE  6E11               	movwf	(___fldiv@b+2)^0,c
 13192  002DC0  0E00               	movlw	0
 13193  002DC2  6E12               	movwf	(___fldiv@b+3)^0,c
 13194  002DC4  0E00               	movlw	0
 13195  002DC6  6E1F               	movwf	___fldiv@sign^0,c
 13196  002DC8                     l4650:
 13197  002DC8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13198  002DCC  A026               	btfss	___fldiv@bexp^0,0,c
 13199  002DCE  EFEB  F016         	goto	u5021
 13200  002DD2  EFED  F016         	goto	u5020
 13201  002DD6                     u5021:
 13202  002DD6  EFF0  F016         	goto	l4656
 13203  002DDA                     u5020:
 13204  002DDA  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13205  002DDC  EFF1  F016         	goto	l4658
 13206  002DE0                     l4656:
 13207  002DE0  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13208  002DE2                     l4658:
 13209  002DE2  90D8               	bcf	status,0,c
 13210  002DE4  3026               	rrcf	___fldiv@bexp^0,w,c
 13211  002DE6  6E12               	movwf	(___fldiv@b+3)^0,c
 13212  002DE8  EFA7  F015         	goto	l4572
 13213  002DEC                     l1252:
 13214  002DEC  0012               	return		;funcret
 13215  002DEE                     __end_of___fldiv:
 13216                           	callstack 0
 13217                           
 13218 ;; *************** function _LED_C *****************
 13219 ;; Defined at:
 13220 ;;		line 173 in file "color.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;		None
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1    wreg      void 
 13227 ;; Registers used:
 13228 ;;		wreg
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13238 ;;Total ram usage:        2 bytes
 13239 ;; Hardware stack levels used: 1
 13240 ;; Hardware stack levels required when called: 1
 13241 ;; This function calls:
 13242 ;;		Nothing
 13243 ;; This function is called by:
 13244 ;;		_color_data_collection
 13245 ;;		_calibrate_white
 13246 ;;		_amb_light_measure
 13247 ;;		_distance_measure
 13248 ;;		_test_function
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text62
 13253  005BA2                     __ptext62:
 13254                           	callstack 0
 13255  005BA2                     _LED_C:
 13256                           	callstack 27
 13257  005BA2                     
 13258                           ;color.c: 175:     LATGbits.LATG1 = 1;
 13259  005BA2  827F               	bsf	127,1,c	;volatile
 13260                           
 13261                           ;color.c: 176:     LATFbits.LATF7 = 1;
 13262  005BA4  8E7E               	bsf	126,7,c	;volatile
 13263                           
 13264                           ;color.c: 177:     LATAbits.LATA4 = 1;
 13265  005BA6  8879               	bsf	121,4,c	;volatile
 13266  005BA8                     
 13267                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13268  005BA8  0E11               	movlw	17
 13269  005BAA  6E02               	movwf	(??_LED_C+1)^0,c
 13270  005BAC  0E3C               	movlw	60
 13271  005BAE  6E01               	movwf	??_LED_C^0,c
 13272  005BB0  0ECB               	movlw	203
 13273  005BB2                     u6407:
 13274  005BB2  2EE8               	decfsz	wreg,f,c
 13275  005BB4  D7FE               	bra	u6407
 13276  005BB6  2E01               	decfsz	??_LED_C^0,f,c
 13277  005BB8  D7FC               	bra	u6407
 13278  005BBA  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13279  005BBC  D7FA               	bra	u6407
 13280  005BBE  F000               	nop	
 13281  005BC0  0012               	return		;funcret
 13282  005BC2                     __end_of_LED_C:
 13283                           	callstack 0
 13284                           
 13285 ;; *************** function _pin_init *****************
 13286 ;; Defined at:
 13287 ;;		line 10 in file "movement.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;		None
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1    wreg      void 
 13294 ;; Registers used:
 13295 ;;		None
 13296 ;; Tracked objects:
 13297 ;;		On entry : 0/0
 13298 ;;		On exit  : 0/0
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13305 ;;Total ram usage:        0 bytes
 13306 ;; Hardware stack levels used: 1
 13307 ;; Hardware stack levels required when called: 1
 13308 ;; This function calls:
 13309 ;;		Nothing
 13310 ;; This function is called by:
 13311 ;;		_main
 13312 ;; This function uses a non-reentrant model
 13313 ;;
 13314                           
 13315                           	psect	text63
 13316  005BC2                     __ptext63:
 13317                           	callstack 0
 13318  005BC2                     _pin_init:
 13319                           	callstack 29
 13320  005BC2  8486               	bsf	134,2,c	;volatile
 13321                           
 13322                           ;movement.c: 12:     ANSELFbits.ANSELF2=0;
 13323  005BC4  010E               	movlb	14	; () banked
 13324  005BC6  95B4               	bcf	180,2,b	;volatile
 13325                           
 13326                           ;movement.c: 13:     TRISFbits.TRISF3=1;
 13327  005BC8  8686               	bsf	134,3,c	;volatile
 13328                           
 13329                           ;movement.c: 14:     ANSELFbits.ANSELF3=0;
 13330  005BCA  97B4               	bcf	180,3,b	;volatile
 13331                           
 13332                           ;movement.c: 16:     TRISGbits.TRISG1 = 0;
 13333  005BCC  9287               	bcf	135,1,c	;volatile
 13334                           
 13335                           ;movement.c: 17:     TRISFbits.TRISF7 = 0;
 13336  005BCE  9E86               	bcf	134,7,c	;volatile
 13337                           
 13338                           ;movement.c: 18:     TRISAbits.TRISA4 = 0;
 13339  005BD0  9881               	bcf	129,4,c	;volatile
 13340                           
 13341                           ;movement.c: 19:     LATGbits.LATG1 = 1;
 13342  005BD2  827F               	bsf	127,1,c	;volatile
 13343                           
 13344                           ;movement.c: 20:     LATFbits.LATF7 = 1;
 13345  005BD4  8E7E               	bsf	126,7,c	;volatile
 13346                           
 13347                           ;movement.c: 21:     LATAbits.LATA4 = 1;
 13348  005BD6  8879               	bsf	121,4,c	;volatile
 13349                           
 13350                           ;movement.c: 24:     TRISDbits.TRISD7 = 0;
 13351  005BD8  9E84               	bcf	132,7,c	;volatile
 13352                           
 13353                           ;movement.c: 25:     LATDbits.LATD7 = 0;
 13354  005BDA  9E7C               	bcf	124,7,c	;volatile
 13355                           
 13356                           ;movement.c: 26:     TRISHbits.TRISH3 = 0;
 13357  005BDC  9688               	bcf	136,3,c	;volatile
 13358                           
 13359                           ;movement.c: 27:     LATHbits.LATH3 = 0;
 13360  005BDE  9680               	bcf	128,3,c	;volatile
 13361  005BE0                     
 13362                           ; BSR set to: 14
 13363  005BE0  0012               	return		;funcret
 13364  005BE2                     __end_of_pin_init:
 13365                           	callstack 0
 13366                           
 13367 ;; *************** function _initUSART4 *****************
 13368 ;; Defined at:
 13369 ;;		line 4 in file "serial.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;		None
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      void 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used: 1
 13389 ;; Hardware stack levels required when called: 1
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_main
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text64
 13398  005C02                     __ptext64:
 13399                           	callstack 0
 13400  005C02                     _initUSART4:
 13401                           	callstack 29
 13402  005C02                     
 13403                           ;serial.c: 8:     RC0PPS = 0x12;
 13404  005C02  0E12               	movlw	18
 13405  005C04  010E               	movlb	14	; () banked
 13406  005C06  6F62               	movwf	98,b	;volatile
 13407                           
 13408                           ;serial.c: 9:     RX4PPS = 0x11;
 13409  005C08  0E11               	movlw	17
 13410  005C0A  6F15               	movwf	21,b	;volatile
 13411  005C0C                     
 13412                           ; BSR set to: 14
 13413                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13414  005C0C  97E9               	bcf	233,3,b	;volatile
 13415  005C0E                     
 13416                           ; BSR set to: 14
 13417                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13418  005C0E  95E8               	bcf	232,2,b	;volatile
 13419                           
 13420                           ;serial.c: 13:     SP4BRGL = 51;
 13421  005C10  0E33               	movlw	51
 13422  005C12  6FE5               	movwf	229,b	;volatile
 13423                           
 13424                           ;serial.c: 15:     SP4BRGH = 0;
 13425  005C14  0E00               	movlw	0
 13426  005C16  6FE6               	movwf	230,b	;volatile
 13427  005C18                     
 13428                           ; BSR set to: 14
 13429                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13430  005C18  89E7               	bsf	231,4,b	;volatile
 13431  005C1A                     
 13432                           ; BSR set to: 14
 13433                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13434  005C1A  8BE8               	bsf	232,5,b	;volatile
 13435  005C1C                     
 13436                           ; BSR set to: 14
 13437                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13438  005C1C  8FE7               	bsf	231,7,b	;volatile
 13439  005C1E                     
 13440                           ; BSR set to: 14
 13441  005C1E  0012               	return		;funcret
 13442  005C20                     __end_of_initUSART4:
 13443                           	callstack 0
 13444                           
 13445 ;; *************** function _initDCmotors_parameter *****************
 13446 ;; Defined at:
 13447 ;;		line 40 in file "dc_motor.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13450 ;;		 -> main@motorL(9), 
 13451 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13452 ;;		 -> main@motorR(9), 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;Total ram usage:        4 bytes
 13469 ;; Hardware stack levels used: 1
 13470 ;; Hardware stack levels required when called: 1
 13471 ;; This function calls:
 13472 ;;		Nothing
 13473 ;; This function is called by:
 13474 ;;		_main
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           	psect	text65
 13479  004D78                     __ptext65:
 13480                           	callstack 0
 13481  004D78                     _initDCmotors_parameter:
 13482                           	callstack 29
 13483  004D78                     
 13484                           ;dc_motor.c: 42:     motorL->power = 0;
 13485  004D78  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13486  004D7C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13487  004D80  0E00               	movlw	0
 13488  004D82  6EDF               	movwf	indf2,c
 13489  004D84                     
 13490                           ;dc_motor.c: 43:     motorL->direction = 1;
 13491  004D84  EE20 F001          	lfsr	2,1
 13492  004D88  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13493  004D8A  26D9               	addwf	fsr2l,f,c
 13494  004D8C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13495  004D8E  22DA               	addwfc	fsr2h,f,c
 13496  004D90  0E01               	movlw	1
 13497  004D92  6EDF               	movwf	indf2,c
 13498  004D94                     
 13499                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13500  004D94  EE20 F002          	lfsr	2,2
 13501  004D98  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13502  004D9A  26D9               	addwf	fsr2l,f,c
 13503  004D9C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13504  004D9E  22DA               	addwfc	fsr2h,f,c
 13505  004DA0  0EA3               	movlw	163
 13506  004DA2  6EDE               	movwf	postinc2,c
 13507  004DA4  0E0F               	movlw	15
 13508  004DA6  6EDD               	movwf	postdec2,c
 13509  004DA8                     
 13510                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13511  004DA8  EE20 F004          	lfsr	2,4
 13512  004DAC  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13513  004DAE  26D9               	addwf	fsr2l,f,c
 13514  004DB0  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13515  004DB2  22DA               	addwfc	fsr2h,f,c
 13516  004DB4  0E7D               	movlw	125
 13517  004DB6  6EDE               	movwf	postinc2,c
 13518  004DB8  0E0F               	movlw	15
 13519  004DBA  6EDD               	movwf	postdec2,c
 13520  004DBC                     
 13521                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
 13522  004DBC  EE20 F006          	lfsr	2,6
 13523  004DC0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13524  004DC2  26D9               	addwf	fsr2l,f,c
 13525  004DC4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13526  004DC6  22DA               	addwfc	fsr2h,f,c
 13527  004DC8  0E04               	movlw	4
 13528  004DCA  6EDF               	movwf	indf2,c
 13529  004DCC                     
 13530                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
 13531  004DCC  EE20 F007          	lfsr	2,7
 13532  004DD0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13533  004DD2  26D9               	addwf	fsr2l,f,c
 13534  004DD4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13535  004DD6  22DA               	addwfc	fsr2h,f,c
 13536  004DD8  0EC7               	movlw	199
 13537  004DDA  6EDE               	movwf	postinc2,c
 13538  004DDC  0E00               	movlw	0
 13539  004DDE  6EDD               	movwf	postdec2,c
 13540  004DE0                     
 13541                           ;dc_motor.c: 50:     motorR->power = 0;
 13542  004DE0  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13543  004DE4  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13544  004DE8  0E00               	movlw	0
 13545  004DEA  6EDF               	movwf	indf2,c
 13546                           
 13547                           ;dc_motor.c: 51:     motorR->direction = 1;
 13548  004DEC  EE20 F001          	lfsr	2,1
 13549  004DF0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13550  004DF2  26D9               	addwf	fsr2l,f,c
 13551  004DF4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13552  004DF6  22DA               	addwfc	fsr2h,f,c
 13553  004DF8  0E01               	movlw	1
 13554  004DFA  6EDF               	movwf	indf2,c
 13555                           
 13556                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13557  004DFC  EE20 F002          	lfsr	2,2
 13558  004E00  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13559  004E02  26D9               	addwf	fsr2l,f,c
 13560  004E04  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13561  004E06  22DA               	addwfc	fsr2h,f,c
 13562  004E08  0EA0               	movlw	160
 13563  004E0A  6EDE               	movwf	postinc2,c
 13564  004E0C  0E0F               	movlw	15
 13565  004E0E  6EDD               	movwf	postdec2,c
 13566                           
 13567                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13568  004E10  EE20 F004          	lfsr	2,4
 13569  004E14  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13570  004E16  26D9               	addwf	fsr2l,f,c
 13571  004E18  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13572  004E1A  22DA               	addwfc	fsr2h,f,c
 13573  004E1C  0E7F               	movlw	127
 13574  004E1E  6EDE               	movwf	postinc2,c
 13575  004E20  0E0F               	movlw	15
 13576  004E22  6EDD               	movwf	postdec2,c
 13577                           
 13578                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
 13579  004E24  EE20 F006          	lfsr	2,6
 13580  004E28  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13581  004E2A  26D9               	addwf	fsr2l,f,c
 13582  004E2C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13583  004E2E  22DA               	addwfc	fsr2h,f,c
 13584  004E30  0E06               	movlw	6
 13585  004E32  6EDF               	movwf	indf2,c
 13586                           
 13587                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
 13588  004E34  EE20 F007          	lfsr	2,7
 13589  004E38  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13590  004E3A  26D9               	addwf	fsr2l,f,c
 13591  004E3C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13592  004E3E  22DA               	addwfc	fsr2h,f,c
 13593  004E40  0EC7               	movlw	199
 13594  004E42  6EDE               	movwf	postinc2,c
 13595  004E44  0E00               	movlw	0
 13596  004E46  6EDD               	movwf	postdec2,c
 13597  004E48  0012               	return		;funcret
 13598  004E4A                     __end_of_initDCmotors_parameter:
 13599                           	callstack 0
 13600                           
 13601 ;; *************** function _initDCmotorsPWM *****************
 13602 ;; Defined at:
 13603 ;;		line 10 in file "dc_motor.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;  PWMperiod       2    0[COMRAM] int 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;		None
 13608 ;; Return value:  Size  Location     Type
 13609 ;;                  1    wreg      void 
 13610 ;; Registers used:
 13611 ;;		wreg, status,2
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13621 ;;Total ram usage:        2 bytes
 13622 ;; Hardware stack levels used: 1
 13623 ;; Hardware stack levels required when called: 1
 13624 ;; This function calls:
 13625 ;;		Nothing
 13626 ;; This function is called by:
 13627 ;;		_main
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           	psect	text66
 13632  005874                     __ptext66:
 13633                           	callstack 0
 13634  005874                     _initDCmotorsPWM:
 13635                           	callstack 29
 13636  005874                     
 13637                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
 13638  005874  9485               	bcf	133,2,c	;volatile
 13639                           
 13640                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
 13641  005876  9E83               	bcf	131,7,c	;volatile
 13642                           
 13643                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
 13644  005878  9C87               	bcf	135,6,c	;volatile
 13645                           
 13646                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
 13647  00587A  9885               	bcf	133,4,c	;volatile
 13648                           
 13649                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
 13650  00587C  947D               	bcf	125,2,c	;volatile
 13651                           
 13652                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
 13653  00587E  9E7B               	bcf	123,7,c	;volatile
 13654                           
 13655                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
 13656  005880  9C7F               	bcf	127,6,c	;volatile
 13657                           
 13658                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
 13659  005882  987D               	bcf	125,4,c	;volatile
 13660  005884                     
 13661                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
 13662  005884  50BD               	movf	189,w,c	;volatile
 13663  005886  0B8F               	andlw	-113
 13664  005888  0930               	iorlw	48
 13665  00588A  6EBD               	movwf	189,c	;volatile
 13666                           
 13667                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
 13668  00588C  0EE0               	movlw	-32
 13669  00588E  16BE               	andwf	190,f,c	;volatile
 13670                           
 13671                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
 13672  005890  50BF               	movf	191,w,c	;volatile
 13673  005892  0BF0               	andlw	-16
 13674  005894  0901               	iorlw	1
 13675  005896  6EBF               	movwf	191,c	;volatile
 13676                           
 13677                           ;dc_motor.c: 28:     T2PR=200-1;
 13678  005898  0EC7               	movlw	199
 13679  00589A  6EBC               	movwf	188,c	;volatile
 13680  00589C                     
 13681                           ;dc_motor.c: 29:     T2CONbits.ON=1;
 13682  00589C  8EBD               	bsf	189,7,c	;volatile
 13683                           
 13684                           ;dc_motor.c: 31:     RE2PPS=0x0A;
 13685  00589E  0E0A               	movlw	10
 13686  0058A0  010E               	movlb	14	; () banked
 13687  0058A2  6F74               	movwf	116,b	;volatile
 13688                           
 13689                           ;dc_motor.c: 32:     RC7PPS=0x0B;
 13690  0058A4  0E0B               	movlw	11
 13691  0058A6  6F69               	movwf	105,b	;volatile
 13692                           
 13693                           ;dc_motor.c: 34:     PWM6DCH=0;
 13694  0058A8  0E00               	movlw	0
 13695  0058AA  6EA3               	movwf	163,c	;volatile
 13696                           
 13697                           ;dc_motor.c: 35:     PWM7DCH=0;
 13698  0058AC  0E00               	movlw	0
 13699  0058AE  6EA0               	movwf	160,c	;volatile
 13700  0058B0                     
 13701                           ; BSR set to: 14
 13702                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
 13703  0058B0  8EA4               	bsf	164,7,c	;volatile
 13704  0058B2                     
 13705                           ; BSR set to: 14
 13706                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
 13707  0058B2  8EA1               	bsf	161,7,c	;volatile
 13708  0058B4                     
 13709                           ; BSR set to: 14
 13710  0058B4  0012               	return		;funcret
 13711  0058B6                     __end_of_initDCmotorsPWM:
 13712                           	callstack 0
 13713                           
 13714 ;; *************** function _color_click_init *****************
 13715 ;; Defined at:
 13716 ;;		line 67 in file "color.c"
 13717 ;; Parameters:    Size  Location     Type
 13718 ;;		None
 13719 ;; Auto vars:     Size  Location     Type
 13720 ;;		None
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  1    wreg      void 
 13723 ;; Registers used:
 13724 ;;		wreg, status,2, status,0, cstack
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13734 ;;Total ram usage:        1 bytes
 13735 ;; Hardware stack levels used: 1
 13736 ;; Hardware stack levels required when called: 4
 13737 ;; This function calls:
 13738 ;;		_I2C_2_Master_Init
 13739 ;;		_color_writetoaddr
 13740 ;; This function is called by:
 13741 ;;		_main
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           
 13745                           	psect	text67
 13746  005A18                     __ptext67:
 13747                           	callstack 0
 13748  005A18                     _color_click_init:
 13749                           	callstack 26
 13750  005A18                     
 13751                           ;color.c: 70:     I2C_2_Master_Init();
 13752  005A18  EC55  F02D         	call	_I2C_2_Master_Init	;wreg free
 13753  005A1C                     
 13754                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
 13755  005A1C  0E01               	movlw	1
 13756  005A1E  6E03               	movwf	color_writetoaddr@value^0,c
 13757  005A20  0E00               	movlw	0
 13758  005A22  ECF1  F02D         	call	_color_writetoaddr
 13759  005A26                     
 13760                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13761  005A26  0E3F               	movlw	63
 13762  005A28  6E05               	movwf	??_color_click_init^0,c
 13763  005A2A  0E55               	movlw	85
 13764  005A2C                     u6417:
 13765  005A2C  2EE8               	decfsz	wreg,f,c
 13766  005A2E  D7FE               	bra	u6417
 13767  005A30  2E05               	decfsz	??_color_click_init^0,f,c
 13768  005A32  D7FC               	bra	u6417
 13769  005A34  F000               	nop	
 13770  005A36                     
 13771                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
 13772  005A36  0E03               	movlw	3
 13773  005A38  6E03               	movwf	color_writetoaddr@value^0,c
 13774  005A3A  0E00               	movlw	0
 13775  005A3C  ECF1  F02D         	call	_color_writetoaddr
 13776  005A40                     
 13777                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
 13778  005A40  0ED5               	movlw	213
 13779  005A42  6E03               	movwf	color_writetoaddr@value^0,c
 13780  005A44  0E01               	movlw	1
 13781  005A46  ECF1  F02D         	call	_color_writetoaddr
 13782  005A4A  0012               	return		;funcret
 13783  005A4C                     __end_of_color_click_init:
 13784                           	callstack 0
 13785                           
 13786 ;; *************** function _color_writetoaddr *****************
 13787 ;; Defined at:
 13788 ;;		line 83 in file "color.c"
 13789 ;; Parameters:    Size  Location     Type
 13790 ;;  address         1    wreg     unsigned char 
 13791 ;;  value           1    2[COMRAM] unsigned char 
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;  address         1    3[COMRAM] unsigned char 
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		wreg, status,2, status,0, cstack
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;Total ram usage:        2 bytes
 13808 ;; Hardware stack levels used: 1
 13809 ;; Hardware stack levels required when called: 3
 13810 ;; This function calls:
 13811 ;;		_I2C_2_Master_Start
 13812 ;;		_I2C_2_Master_Stop
 13813 ;;		_I2C_2_Master_Write
 13814 ;; This function is called by:
 13815 ;;		_color_click_init
 13816 ;; This function uses a non-reentrant model
 13817 ;;
 13818                           
 13819                           	psect	text68
 13820  005BE2                     __ptext68:
 13821                           	callstack 0
 13822  005BE2                     _color_writetoaddr:
 13823                           	callstack 26
 13824                           
 13825                           ;incstack = 0
 13826                           ;color_writetoaddr@address stored from wreg
 13827  005BE2  6E04               	movwf	color_writetoaddr@address^0,c
 13828  005BE4                     
 13829                           ;color.c: 84:     I2C_2_Master_Start();
 13830  005BE4  EC4C  F02E         	call	_I2C_2_Master_Start	;wreg free
 13831                           
 13832                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
 13833  005BE8  0E52               	movlw	82
 13834  005BEA  EC36  F02E         	call	_I2C_2_Master_Write
 13835                           
 13836                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
 13837  005BEE  5004               	movf	color_writetoaddr@address^0,w,c
 13838  005BF0  0980               	iorlw	128
 13839  005BF2  EC36  F02E         	call	_I2C_2_Master_Write
 13840                           
 13841                           ;color.c: 87:     I2C_2_Master_Write(value);
 13842  005BF6  5003               	movf	color_writetoaddr@value^0,w,c
 13843  005BF8  EC36  F02E         	call	_I2C_2_Master_Write
 13844                           
 13845                           ;color.c: 88:     I2C_2_Master_Stop();
 13846  005BFC  EC47  F02E         	call	_I2C_2_Master_Stop	;wreg free
 13847  005C00  0012               	return		;funcret
 13848  005C02                     __end_of_color_writetoaddr:
 13849                           	callstack 0
 13850                           
 13851 ;; *************** function _I2C_2_Master_Write *****************
 13852 ;; Defined at:
 13853 ;;		line 45 in file "i2c.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  data_byte       1    wreg     unsigned char 
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;  data_byte       1    1[COMRAM] unsigned char 
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  1    wreg      void 
 13860 ;; Registers used:
 13861 ;;		wreg, status,2, status,0, cstack
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13871 ;;Total ram usage:        1 bytes
 13872 ;; Hardware stack levels used: 1
 13873 ;; Hardware stack levels required when called: 2
 13874 ;; This function calls:
 13875 ;;		_I2C_2_Master_Idle
 13876 ;; This function is called by:
 13877 ;;		_color_writetoaddr
 13878 ;;		_color_read_Red
 13879 ;;		_color_read_Blue
 13880 ;;		_color_read_Green
 13881 ;;		_color_read_Clear
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text69
 13886  005C6C                     __ptext69:
 13887                           	callstack 0
 13888  005C6C                     _I2C_2_Master_Write:
 13889                           	callstack 24
 13890                           
 13891                           ;incstack = 0
 13892                           ;I2C_2_Master_Write@data_byte stored from wreg
 13893  005C6C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13894  005C6E                     
 13895                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 13896  005C6E  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13897  005C72                     
 13898                           ;i2c.c: 48:   SSP2BUF = data_byte;
 13899  005C72  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13900  005C76  0012               	return		;funcret
 13901  005C78                     __end_of_I2C_2_Master_Write:
 13902                           	callstack 0
 13903                           
 13904 ;; *************** function _I2C_2_Master_Stop *****************
 13905 ;; Defined at:
 13906 ;;		line 39 in file "i2c.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;		None
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      void 
 13913 ;; Registers used:
 13914 ;;		wreg, status,2, status,0, cstack
 13915 ;; Tracked objects:
 13916 ;;		On entry : 0/0
 13917 ;;		On exit  : 0/0
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13924 ;;Total ram usage:        0 bytes
 13925 ;; Hardware stack levels used: 1
 13926 ;; Hardware stack levels required when called: 2
 13927 ;; This function calls:
 13928 ;;		_I2C_2_Master_Idle
 13929 ;; This function is called by:
 13930 ;;		_color_writetoaddr
 13931 ;;		_color_read_Red
 13932 ;;		_color_read_Blue
 13933 ;;		_color_read_Green
 13934 ;;		_color_read_Clear
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text70
 13939  005C8E                     __ptext70:
 13940                           	callstack 0
 13941  005C8E                     _I2C_2_Master_Stop:
 13942                           	callstack 24
 13943  005C8E                     
 13944                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13945  005C8E  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13946  005C92                     
 13947                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 13948  005C92  010E               	movlb	14	; () banked
 13949  005C94  85DA               	bsf	218,2,b	;volatile
 13950  005C96                     
 13951                           ; BSR set to: 14
 13952  005C96  0012               	return		;funcret
 13953  005C98                     __end_of_I2C_2_Master_Stop:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _I2C_2_Master_Start *****************
 13957 ;; Defined at:
 13958 ;;		line 27 in file "i2c.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      void 
 13965 ;; Registers used:
 13966 ;;		wreg, status,2, status,0, cstack
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13976 ;;Total ram usage:        0 bytes
 13977 ;; Hardware stack levels used: 1
 13978 ;; Hardware stack levels required when called: 2
 13979 ;; This function calls:
 13980 ;;		_I2C_2_Master_Idle
 13981 ;; This function is called by:
 13982 ;;		_color_writetoaddr
 13983 ;;		_color_read_Red
 13984 ;;		_color_read_Blue
 13985 ;;		_color_read_Green
 13986 ;;		_color_read_Clear
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           
 13990                           	psect	text71
 13991  005C98                     __ptext71:
 13992                           	callstack 0
 13993  005C98                     _I2C_2_Master_Start:
 13994                           	callstack 24
 13995  005C98                     
 13996                           ;i2c.c: 29:   I2C_2_Master_Idle();
 13997  005C98  EC6A  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13998  005C9C                     
 13999                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14000  005C9C  010E               	movlb	14	; () banked
 14001  005C9E  81DA               	bsf	218,0,b	;volatile
 14002  005CA0                     
 14003                           ; BSR set to: 14
 14004  005CA0  0012               	return		;funcret
 14005  005CA2                     __end_of_I2C_2_Master_Start:
 14006                           	callstack 0
 14007                           
 14008 ;; *************** function _I2C_2_Master_Idle *****************
 14009 ;; Defined at:
 14010 ;;		line 22 in file "i2c.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;		None
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;		None
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  1    wreg      void 
 14017 ;; Registers used:
 14018 ;;		wreg, status,2, status,0
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;Total ram usage:        1 bytes
 14029 ;; Hardware stack levels used: 1
 14030 ;; Hardware stack levels required when called: 1
 14031 ;; This function calls:
 14032 ;;		Nothing
 14033 ;; This function is called by:
 14034 ;;		_I2C_2_Master_Start
 14035 ;;		_I2C_2_Master_RepStart
 14036 ;;		_I2C_2_Master_Stop
 14037 ;;		_I2C_2_Master_Write
 14038 ;;		_I2C_2_Master_Read
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text72
 14043  005AD4                     __ptext72:
 14044                           	callstack 0
 14045  005AD4                     _I2C_2_Master_Idle:
 14046                           	callstack 24
 14047  005AD4                     l191:
 14048  005AD4  010E               	movlb	14	; () banked
 14049  005AD6  B5D8               	btfsc	216,2,b	;volatile
 14050  005AD8  EF70  F02D         	goto	u3371
 14051  005ADC  EF72  F02D         	goto	u3370
 14052  005AE0                     u3371:
 14053  005AE0  EF6A  F02D         	goto	l191
 14054  005AE4                     u3370:
 14055  005AE4                     
 14056                           ; BSR set to: 14
 14057  005AE4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14058  005AE8  0E1F               	movlw	31
 14059  005AEA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14060  005AEC  A4D8               	btfss	status,2,c
 14061  005AEE  EF7B  F02D         	goto	u3381
 14062  005AF2  EF7D  F02D         	goto	u3380
 14063  005AF6                     u3381:
 14064  005AF6  EF6A  F02D         	goto	l191
 14065  005AFA                     u3380:
 14066  005AFA                     
 14067                           ; BSR set to: 14
 14068  005AFA  0012               	return		;funcret
 14069  005AFC                     __end_of_I2C_2_Master_Idle:
 14070                           	callstack 0
 14071                           
 14072 ;; *************** function _I2C_2_Master_Init *****************
 14073 ;; Defined at:
 14074 ;;		line 4 in file "i2c.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;		None
 14077 ;; Auto vars:     Size  Location     Type
 14078 ;;		None
 14079 ;; Return value:  Size  Location     Type
 14080 ;;                  1    wreg      void 
 14081 ;; Registers used:
 14082 ;;		wreg, status,2
 14083 ;; Tracked objects:
 14084 ;;		On entry : 0/0
 14085 ;;		On exit  : 0/0
 14086 ;;		Unchanged: 0/0
 14087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14092 ;;Total ram usage:        0 bytes
 14093 ;; Hardware stack levels used: 1
 14094 ;; Hardware stack levels required when called: 1
 14095 ;; This function calls:
 14096 ;;		Nothing
 14097 ;; This function is called by:
 14098 ;;		_color_click_init
 14099 ;;		_main
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           	psect	text73
 14104  005AAA                     __ptext73:
 14105                           	callstack 0
 14106  005AAA                     _I2C_2_Master_Init:
 14107                           	callstack 28
 14108  005AAA                     
 14109                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14110  005AAA  010E               	movlb	14	; () banked
 14111  005AAC  51D9               	movf	217,w,b	;volatile
 14112  005AAE  0BF0               	andlw	-16
 14113  005AB0  0908               	iorlw	8
 14114  005AB2  6FD9               	movwf	217,b	;volatile
 14115  005AB4                     
 14116                           ; BSR set to: 14
 14117                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14118  005AB4  8BD9               	bsf	217,5,b	;volatile
 14119                           
 14120                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14121  005AB6  0E9F               	movlw	159
 14122  005AB8  6FD6               	movwf	214,b	;volatile
 14123  005ABA                     
 14124                           ; BSR set to: 14
 14125                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14126  005ABA  8A84               	bsf	132,5,c	;volatile
 14127  005ABC                     
 14128                           ; BSR set to: 14
 14129                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14130  005ABC  8C84               	bsf	132,6,c	;volatile
 14131  005ABE                     
 14132                           ; BSR set to: 14
 14133                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14134  005ABE  9BA7               	bcf	167,5,b	;volatile
 14135  005AC0                     
 14136                           ; BSR set to: 14
 14137                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14138  005AC0  9DA7               	bcf	167,6,b	;volatile
 14139                           
 14140                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14141  005AC2  0E1D               	movlw	29
 14142  005AC4  6F1D               	movwf	29,b	;volatile
 14143                           
 14144                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14145  005AC6  0E1E               	movlw	30
 14146  005AC8  6F1C               	movwf	28,b	;volatile
 14147                           
 14148                           ;i2c.c: 18:   RD5PPS=0x1C;
 14149  005ACA  0E1C               	movlw	28
 14150  005ACC  6F6F               	movwf	111,b	;volatile
 14151                           
 14152                           ;i2c.c: 19:   RD6PPS=0x1B;
 14153  005ACE  0E1B               	movlw	27
 14154  005AD0  6F70               	movwf	112,b	;volatile
 14155  005AD2                     
 14156                           ; BSR set to: 14
 14157  005AD2  0012               	return		;funcret
 14158  005AD4                     __end_of_I2C_2_Master_Init:
 14159                           	callstack 0
 14160                           
 14161 ;; *************** function _buggylight_init *****************
 14162 ;; Defined at:
 14163 ;;		line 13 in file "color.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;		None
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		None
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used: 1
 14183 ;; Hardware stack levels required when called: 1
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		_main
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           	psect	text74
 14192  005C56                     __ptext74:
 14193                           	callstack 0
 14194  005C56                     _buggylight_init:
 14195                           	callstack 29
 14196  005C56                     
 14197                           ;color.c: 15:     TRISHbits.TRISH1=0;
 14198  005C56  9288               	bcf	136,1,c	;volatile
 14199                           
 14200                           ;color.c: 16:     TRISDbits.TRISD4=0;
 14201  005C58  9884               	bcf	132,4,c	;volatile
 14202                           
 14203                           ;color.c: 17:     TRISDbits.TRISD3=0;
 14204  005C5A  9684               	bcf	132,3,c	;volatile
 14205                           
 14206                           ;color.c: 18:     TRISFbits.TRISF0=0;
 14207  005C5C  9086               	bcf	134,0,c	;volatile
 14208                           
 14209                           ;color.c: 19:     TRISHbits.TRISH0=0;
 14210  005C5E  9088               	bcf	136,0,c	;volatile
 14211                           
 14212                           ;color.c: 21:     LATHbits.LATH1 = 0;
 14213  005C60  9280               	bcf	128,1,c	;volatile
 14214                           
 14215                           ;color.c: 22:     LATDbits.LATD4 = 0;
 14216  005C62  987C               	bcf	124,4,c	;volatile
 14217                           
 14218                           ;color.c: 23:     LATDbits.LATD3 = 0;
 14219  005C64  967C               	bcf	124,3,c	;volatile
 14220                           
 14221                           ;color.c: 24:     LATFbits.LATF0 = 0;
 14222  005C66  907E               	bcf	126,0,c	;volatile
 14223                           
 14224                           ;color.c: 25:     LATHbits.LATH0 = 0;
 14225  005C68  9080               	bcf	128,0,c	;volatile
 14226  005C6A  0012               	return		;funcret
 14227  005C6C                     __end_of_buggylight_init:
 14228                           	callstack 0
 14229                           
 14230 ;; *************** function _Timer0_init *****************
 14231 ;; Defined at:
 14232 ;;		line 7 in file "timers.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;		None
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      void 
 14239 ;; Registers used:
 14240 ;;		wreg, status,2
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;Total ram usage:        0 bytes
 14251 ;; Hardware stack levels used: 1
 14252 ;; Hardware stack levels required when called: 1
 14253 ;; This function calls:
 14254 ;;		Nothing
 14255 ;; This function is called by:
 14256 ;;		_main
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text75
 14261  005C20                     __ptext75:
 14262                           	callstack 0
 14263  005C20                     _Timer0_init:
 14264                           	callstack 29
 14265  005C20                     
 14266                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14267  005C20  50D6               	movf	214,w,c	;volatile
 14268  005C22  0B1F               	andlw	-225
 14269  005C24  0940               	iorlw	64
 14270  005C26  6ED6               	movwf	214,c	;volatile
 14271  005C28                     
 14272                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14273  005C28  88D6               	bsf	214,4,c	;volatile
 14274                           
 14275                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14276  005C2A  50D6               	movf	214,w,c	;volatile
 14277  005C2C  0BF0               	andlw	-16
 14278  005C2E  0905               	iorlw	5
 14279  005C30  6ED6               	movwf	214,c	;volatile
 14280  005C32                     
 14281                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14282  005C32  88D5               	bsf	213,4,c	;volatile
 14283                           
 14284                           ;timers.c: 16:     TMR0H=0b00111100;
 14285  005C34  0E3C               	movlw	60
 14286  005C36  6ED4               	movwf	212,c	;volatile
 14287                           
 14288                           ;timers.c: 17:     TMR0L=0b10101111;
 14289  005C38  0EAF               	movlw	175
 14290  005C3A  6ED3               	movwf	211,c	;volatile
 14291  005C3C  0012               	return		;funcret
 14292  005C3E                     __end_of_Timer0_init:
 14293                           	callstack 0
 14294                           
 14295 ;; *************** function _Interrupts_init *****************
 14296 ;; Defined at:
 14297 ;;		line 9 in file "interrupts.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;		None
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;		None
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  1    wreg      void 
 14304 ;; Registers used:
 14305 ;;		None
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14315 ;;Total ram usage:        0 bytes
 14316 ;; Hardware stack levels used: 1
 14317 ;; Hardware stack levels required when called: 1
 14318 ;; This function calls:
 14319 ;;		Nothing
 14320 ;; This function is called by:
 14321 ;;		_main
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text76
 14326  005C78                     __ptext76:
 14327                           	callstack 0
 14328  005C78                     _Interrupts_init:
 14329                           	callstack 29
 14330  005C78  8EF2               	bsf	242,7,c	;volatile
 14331                           
 14332                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14333  005C7A  8AF2               	bsf	242,5,c	;volatile
 14334                           
 14335                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14336  005C7C  8CF2               	bsf	242,6,c	;volatile
 14337                           
 14338                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14339  005C7E  010E               	movlb	14	; () banked
 14340  005C80  8B29               	bsf	41,5,b	;volatile
 14341  005C82                     
 14342                           ; BSR set to: 14
 14343  005C82  0012               	return		;funcret
 14344  005C84                     __end_of_Interrupts_init:
 14345                           	callstack 0
 14346                           
 14347 ;; *************** function _HighISR *****************
 14348 ;; Defined at:
 14349 ;;		line 21 in file "interrupts.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;		None
 14352 ;; Auto vars:     Size  Location     Type
 14353 ;;		None
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  1    wreg      void 
 14356 ;; Registers used:
 14357 ;;		wreg, status,2, status,0
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14367 ;;Total ram usage:        0 bytes
 14368 ;; Hardware stack levels used: 1
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		Interrupt level 2
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	intcode
 14377  000008                     __pintcode:
 14378                           	callstack 0
 14379  000008                     _HighISR:
 14380                           	callstack 19
 14381                           
 14382                           ; BSR set to: 14
 14383                           ;incstack = 0
 14384  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14385  00000A                     
 14386                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14387  00000A  010E               	movlb	14	; () banked
 14388  00000C  AB33               	btfss	51,5,b	;volatile
 14389  00000E  EF0B  F000         	goto	i2u581_41
 14390  000012  EF0D  F000         	goto	i2u581_40
 14391  000016                     i2u581_41:
 14392  000016  EF16  F000         	goto	i2l581
 14393  00001A                     i2u581_40:
 14394  00001A                     
 14395                           ; BSR set to: 14
 14396                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14397  00001A  0E3C               	movlw	60
 14398  00001C  6ED4               	movwf	212,c	;volatile
 14399                           
 14400                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14401  00001E  0EAF               	movlw	175
 14402  000020  6ED3               	movwf	211,c	;volatile
 14403  000022                     
 14404                           ; BSR set to: 14
 14405                           ;interrupts.c: 26:         centisecond ++;
 14406  000022  0101               	movlb	1	; () banked
 14407  000024  4B42               	infsnz	_centisecond& (0+255),f,b
 14408  000026  2B43               	incf	(_centisecond+1)& (0+255),f,b
 14409  000028                     
 14410                           ; BSR set to: 1
 14411                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14412  000028  010E               	movlb	14	; () banked
 14413  00002A  9B33               	bcf	51,5,b	;volatile
 14414  00002C                     i2l581:
 14415                           
 14416                           ; BSR set to: 14
 14417  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14418  00002E  0011               	retfie		f
 14419  000030                     __end_of_HighISR:
 14420                           	callstack 0
 14421                           
 14422                           	psect	rparam
 14423  0000                     
 14424                           	psect	temp
 14425  00005F                     btemp:
 14426                           	callstack 0
 14427  00005F                     	ds	1
 14428  0000                     int$flags	set	btemp
 14429  0000                     wtemp8	set	btemp+1
 14430  0000                     ttemp5	set	btemp+1
 14431  0000                     ttemp6	set	btemp+4
 14432  0000                     ttemp7	set	btemp+8
 14433                           
 14434                           	psect	idloc
 14435                           
 14436                           ;Config register IDLOC0 @ 0x200000
 14437                           ;	unspecified, using default values
 14438  200000                     	org	2097152
 14439  200000  0FFF               	dw	4095
 14440                           
 14441                           ;Config register IDLOC1 @ 0x200002
 14442                           ;	unspecified, using default values
 14443  200002                     	org	2097154
 14444  200002  0FFF               	dw	4095
 14445                           
 14446                           ;Config register IDLOC2 @ 0x200004
 14447                           ;	unspecified, using default values
 14448  200004                     	org	2097156
 14449  200004  0FFF               	dw	4095
 14450                           
 14451                           ;Config register IDLOC3 @ 0x200006
 14452                           ;	unspecified, using default values
 14453  200006                     	org	2097158
 14454  200006  0FFF               	dw	4095
 14455                           
 14456                           ;Config register IDLOC4 @ 0x200008
 14457                           ;	unspecified, using default values
 14458  200008                     	org	2097160
 14459  200008  0FFF               	dw	4095
 14460                           
 14461                           ;Config register IDLOC5 @ 0x20000A
 14462                           ;	unspecified, using default values
 14463  20000A                     	org	2097162
 14464  20000A  0FFF               	dw	4095
 14465                           
 14466                           ;Config register IDLOC6 @ 0x20000C
 14467                           ;	unspecified, using default values
 14468  20000C                     	org	2097164
 14469  20000C  0FFF               	dw	4095
 14470                           
 14471                           ;Config register IDLOC7 @ 0x20000E
 14472                           ;	unspecified, using default values
 14473  20000E                     	org	2097166
 14474  20000E  0FFF               	dw	4095
 14475                           
 14476                           	psect	config
 14477                           
 14478                           ;Config register CONFIG1L @ 0x300000
 14479                           ;	External Oscillator mode Selection bits
 14480                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14481                           ;	Power-up default value for COSC bits
 14482                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14483  300000                     	org	3145728
 14484  300000  AA                 	db	170
 14485                           
 14486                           ;Config register CONFIG1H @ 0x300001
 14487                           ;	unspecified, using default values
 14488                           ;	Clock Out Enable bit
 14489                           ;	CLKOUTEN = 0x1, unprogrammed default
 14490                           ;	Clock Switch Enable bit
 14491                           ;	CSWEN = 0x1, unprogrammed default
 14492                           ;	Fail-Safe Clock Monitor Enable bit
 14493                           ;	FCMEN = 0x1, unprogrammed default
 14494  300001                     	org	3145729
 14495  300001  FF                 	db	255
 14496                           
 14497                           ;Config register CONFIG2L @ 0x300002
 14498                           ;	unspecified, using default values
 14499                           ;	Master Clear Enable bit
 14500                           ;	MCLRE = 0x1, unprogrammed default
 14501                           ;	Power-up Timer Enable bit
 14502                           ;	PWRTE = 0x1, unprogrammed default
 14503                           ;	Low-power BOR enable bit
 14504                           ;	LPBOREN = 0x1, unprogrammed default
 14505                           ;	Brown-out Reset Enable bits
 14506                           ;	BOREN = 0x3, unprogrammed default
 14507  300002                     	org	3145730
 14508  300002  FF                 	db	255
 14509                           
 14510                           ;Config register CONFIG2H @ 0x300003
 14511                           ;	unspecified, using default values
 14512                           ;	Brown Out Reset Voltage selection bits
 14513                           ;	BORV = 0x3, unprogrammed default
 14514                           ;	ZCD Disable bit
 14515                           ;	ZCD = 0x1, unprogrammed default
 14516                           ;	PPSLOCK bit One-Way Set Enable bit
 14517                           ;	PPS1WAY = 0x1, unprogrammed default
 14518                           ;	Stack Full/Underflow Reset Enable bit
 14519                           ;	STVREN = 0x1, unprogrammed default
 14520                           ;	Debugger Enable bit
 14521                           ;	DEBUG = 0x1, unprogrammed default
 14522                           ;	Extended Instruction Set Enable bit
 14523                           ;	XINST = 0x1, unprogrammed default
 14524  300003                     	org	3145731
 14525  300003  FF                 	db	255
 14526                           
 14527                           ;Config register CONFIG3L @ 0x300004
 14528                           ;	WDT Period Select bits
 14529                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14530                           ;	WDT operating mode
 14531                           ;	WDTE = OFF, WDT Disabled
 14532  300004                     	org	3145732
 14533  300004  9F                 	db	159
 14534                           
 14535                           ;Config register CONFIG3H @ 0x300005
 14536                           ;	unspecified, using default values
 14537                           ;	WDT Window Select bits
 14538                           ;	WDTCWS = 0x7, unprogrammed default
 14539                           ;	WDT input clock selector
 14540                           ;	WDTCCS = 0x7, unprogrammed default
 14541  300005                     	org	3145733
 14542  300005  FF                 	db	255
 14543                           
 14544                           ;Config register CONFIG4L @ 0x300006
 14545                           ;	unspecified, using default values
 14546                           ;	Write Protection Block 0
 14547                           ;	WRT0 = 0x1, unprogrammed default
 14548                           ;	Write Protection Block 1
 14549                           ;	WRT1 = 0x1, unprogrammed default
 14550                           ;	Write Protection Block 2
 14551                           ;	WRT2 = 0x1, unprogrammed default
 14552                           ;	Write Protection Block 3
 14553                           ;	WRT3 = 0x1, unprogrammed default
 14554                           ;	Write Protection Block 3
 14555                           ;	WRT4 = 0x1, unprogrammed default
 14556                           ;	Write Protection Block 3
 14557                           ;	WRT5 = 0x1, unprogrammed default
 14558                           ;	Write Protection Block 3
 14559                           ;	WRT6 = 0x1, unprogrammed default
 14560                           ;	Write Protection Block 3
 14561                           ;	WRT7 = 0x1, unprogrammed default
 14562  300006                     	org	3145734
 14563  300006  FF                 	db	255
 14564                           
 14565                           ;Config register CONFIG4H @ 0x300007
 14566                           ;	unspecified, using default values
 14567                           ;	Configuration Register Write Protection bit
 14568                           ;	WRTC = 0x1, unprogrammed default
 14569                           ;	Boot Block Write Protection bit
 14570                           ;	WRTB = 0x1, unprogrammed default
 14571                           ;	Data EEPROM Write Protection bit
 14572                           ;	WRTD = 0x1, unprogrammed default
 14573                           ;	Scanner Enable bit
 14574                           ;	SCANE = 0x1, unprogrammed default
 14575                           ;	Low Voltage Programming Enable bit
 14576                           ;	LVP = 0x1, unprogrammed default
 14577  300007                     	org	3145735
 14578  300007  FF                 	db	255
 14579                           
 14580                           ;Config register CONFIG5L @ 0x300008
 14581                           ;	unspecified, using default values
 14582                           ;	UserNVM Program Memory Code Protection bit
 14583                           ;	CP = 0x1, unprogrammed default
 14584                           ;	DataNVM Memory Code Protection bit
 14585                           ;	CPD = 0x1, unprogrammed default
 14586  300008                     	org	3145736
 14587  300008  FF                 	db	255
 14588                           
 14589                           ;Config register CONFIG5H @ 0x300009
 14590                           ;	unspecified, using default values
 14591  300009                     	org	3145737
 14592  300009  FF                 	db	255
 14593                           
 14594                           ;Config register CONFIG6L @ 0x30000A
 14595                           ;	unspecified, using default values
 14596                           ;	Table Read Protection Block 0
 14597                           ;	EBTR0 = 0x1, unprogrammed default
 14598                           ;	Table Read Protection Block 1
 14599                           ;	EBTR1 = 0x1, unprogrammed default
 14600                           ;	Table Read Protection Block 2
 14601                           ;	EBTR2 = 0x1, unprogrammed default
 14602                           ;	Table Read Protection Block 3
 14603                           ;	EBTR3 = 0x1, unprogrammed default
 14604                           ;	Table Read Protection Block 4
 14605                           ;	EBTR4 = 0x1, unprogrammed default
 14606                           ;	Table Read Protection Block 5
 14607                           ;	EBTR5 = 0x1, unprogrammed default
 14608                           ;	Table Read Protection Block 6
 14609                           ;	EBTR6 = 0x1, unprogrammed default
 14610                           ;	Table Read Protection Block 7
 14611                           ;	EBTR7 = 0x1, unprogrammed default
 14612  30000A                     	org	3145738
 14613  30000A  FF                 	db	255
 14614                           
 14615                           ;Config register CONFIG6H @ 0x30000B
 14616                           ;	unspecified, using default values
 14617                           ;	Boot Block Table Read Protection bit
 14618                           ;	EBTRB = 0x1, unprogrammed default
 14619  30000B                     	org	3145739
 14620  30000B  FF                 	db	255
 14621                           tosu	equ	0xFFF
 14622                           tosh	equ	0xFFE
 14623                           tosl	equ	0xFFD
 14624                           stkptr	equ	0xFFC
 14625                           pclatu	equ	0xFFB
 14626                           pclath	equ	0xFFA
 14627                           pcl	equ	0xFF9
 14628                           tblptru	equ	0xFF8
 14629                           tblptrh	equ	0xFF7
 14630                           tblptrl	equ	0xFF6
 14631                           tablat	equ	0xFF5
 14632                           prodh	equ	0xFF4
 14633                           prodl	equ	0xFF3
 14634                           indf0	equ	0xFEF
 14635                           postinc0	equ	0xFEE
 14636                           postdec0	equ	0xFED
 14637                           preinc0	equ	0xFEC
 14638                           plusw0	equ	0xFEB
 14639                           fsr0h	equ	0xFEA
 14640                           fsr0l	equ	0xFE9
 14641                           wreg	equ	0xFE8
 14642                           indf1	equ	0xFE7
 14643                           postinc1	equ	0xFE6
 14644                           postdec1	equ	0xFE5
 14645                           preinc1	equ	0xFE4
 14646                           plusw1	equ	0xFE3
 14647                           fsr1h	equ	0xFE2
 14648                           fsr1l	equ	0xFE1
 14649                           bsr	equ	0xFE0
 14650                           indf2	equ	0xFDF
 14651                           postinc2	equ	0xFDE
 14652                           postdec2	equ	0xFDD
 14653                           preinc2	equ	0xFDC
 14654                           plusw2	equ	0xFDB
 14655                           fsr2h	equ	0xFDA
 14656                           fsr2l	equ	0xFD9
 14657                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    154     160
    BANK1           256     69     171
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2746$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2746$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    straight_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    straight_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _fullSpeedAhead_test->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _straight_action->_distance_measure
    _distance_measure->_lroundf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  320863
                                            150 BANK0      4     4      0
                                              0 BANK1     69    69      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                    _buggylight_init
                   _color_click_init
                      _color_predict
                       _detect_color
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                    _straight_action
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26931
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   51827
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   29079
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5    9548
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  104761
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26645
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   15832
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _straight_action                                     13     3     10   26293
                                             29 BANK0     13     3     10
                   _distance_measure
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6834
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     2     10   39940
                                             24 BANK0     12     2     10
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   19131
                                             48 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (3) _test_action                                          4     0      4   18935
                                             44 COMRAM     4     0      4
                _fullSpeedAhead_test
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   11577
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead_test                                  6     2      4    6986
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3579
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3015
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _buggylight_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_predict
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _toggle_light
   _goback
     _fullSpeedAhead
       _setMotorPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead_test
           _fullSpeedAhead
           _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _straight_action
     _distance_measure
       _LED_C
       ___flmul
       ___xxtofl
       _color_read_Clear
       _color_read_Green
       _lroundf
     _fullSpeedAhead
     _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      AB       7       66.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      55        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      53        0.0%
BITBIGSFRllllll      9      0       0      52        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A9      56        0.0%
DATA                 0      0     1A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 16 01:12:16 2022

                _color_read_Red 55E4                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 5684                   _color_predict 5A7C  
                            l55 5C6A                              l72 5C00                              l81 5682  
                            l66 366C                              l58 365A                              l90 5B60  
                            l75 5632                              l84 5722                              l69 5A4A  
                            l93 5B40                              l78 56D2                              l87 5590  
                            l96 5BC0                              l99 5BA0                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 56D4                _color_read_Green 5634  
             ??_Interrupts_init 0001                             l102 5B80                             l200 5C8C  
                           l113 42D4                             l122 5AA8                             l203 5C96  
                           l116 54D0                             l125 3876                             l301 413E  
                           l206 5C76                             l312 5830                             l160 509C  
                           l209 5872                             l161 509E                             l145 1A16  
                           l321 4994                             l153 5460                             l500 4D4E  
                           l148 596C                             l157 4872                             l309 5162  
                           l149 596E                             l262 58B4                             l502 4D76  
                           l510 5336                             l191 5AD4                             l511 5366  
                           l344 5C1E                             l272 3C24                             l280 52E4  
                           l265 4E48                             l505 57EE                             l353 5C40  
                           l194 5AFA                             l362 5A7A                             l188 5AD2  
                           l356 5C54                             l197 5CA0                             l552 2A44  
                           l297 4102                             l289 4046                             l529 30DC  
                           l546 2A12                             l538 2A16                             l491 4CA6  
                           l556 2A52                             l901 5226                             l637 53E4  
                           l493 4CDA                             l486 5BE0                             l670 5B20  
                           l662 4C76                             l575 5C82                             l495 4CE8  
                           l592 5C3C                             l664 4C42                             l489 4C98  
                           l658 4BA2                             l498 4D40                             l667 4C8E  
                           l659 4C0C                             l940 4BA0                             l935 4B5A  
                           l944 59E0                             l784 45E6                             l797 474A  
                           l967 4A9C               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 50A0                             _abs 58F6                             _pad 4F14  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5B62                    ___fltol@exp1 0065  
                          l1200 1BBA                            ?_abs 0013                            l1301 22C2  
                          l1215 1D20                            l1207 1ED6                            l1224 1DF0  
                          l1240 5768                            l1225 1DDE                            l1411 33C0  
                          l1252 2DEC                            l1332 3ECA                            l1325 3E32  
                          l1254 2C4C                            l1263 2C92                            l1328 3F8E  
                          l4000 5840                            l1432 5934                            l1424 552A  
                          l1265 2D0A                            l1257 2C10                            l1425 5532  
                          l1353 55E2                            l1266 2CF8                            l4002 5848  
                          l1346 59A8                            l4010 5228                            l1418 3DDA  
                          l1339 3F26                            l1291 2192                            l4004 586E  
                          l4100 1FE6                            l1284 1F9C                            l4020 5274  
                          l4012 522C                            l1444 4F12                            l1452 57AC  
                          l1380 4F5A                            l1293 220A                            l1429 592C  
                          l4006 5870                            l1294 21F8                            l4110 2038  
                          l4102 1FFC                            l1198 1C06                            l4030 52CC  
                          l4022 5280                            l4014 5244                            l1199 1BF4  
                          l1463 26AE                            l1455 5CA4                            l1383 4F9C  
                          l1391 317E                            l4200 4B1A                            l4120 207E  
                          l4112 2046                            l4104 2008                            l1288 2300  
                          l4040 5100                            l4032 50A0                            l4024 528C  
                          l4016 5250                            l1385 4FD8                            l1393 3186  
                          l4210 4B9E                            l4202 4B28                            l4130 20EC  
                          l4122 2098                            l4114 2052                            l4106 2020  
                          l4050 514A                            l4042 510C                            l4034 50C4  
                          l4018 5268                            l4026 529C                            l5010 501A  
                          l5002 4FDA                            l4204 4B3A                            l4140 2182  
                          l4132 2116                            l4124 20A8                            l4116 2062  
                          l4108 202C                            l4060 1EF2                            l4044 5118  
                          l4036 50DC                            l4028 52B4                            l4300 4076  
                          l5100 4BF0                            l5012 501E                            l5004 4FF0  
                          l4052 5C40                            l3500 4460                            l1476 5A16  
                          l4206 4B48                            l4150 21C2                            l4142 2190  
                          l4134 214C                            l4126 20C4                            l4118 206E  
                          l4070 1F2A                            l4062 1EF4                            l4214 59AA  
                          l4230 55E4                            l4046 5124                            l4038 50E8  
                          l4310 40BC                            l5102 4BFA                            l5014 5064  
                          l5006 4FF4                            l4054 5C50                            l3510 44A4  
                          l3502 4464                            l4222 54D2                            l5030 2720  
                          l5022 26B0                            l5120 5C56                            l4208 4B98  
                          l4160 2234                            l4152 21F0                            l4144 21A2  
                          l4136 215A                            l4128 20D0                            l4080 1F56  
                          l4072 1F3A                            l4064 1F04                            l4056 1ED8  
                          l4216 59C0                            l4400 260A                            l4232 562A  
                          l4048 5132                            l4304 408C                            l4312 40CA  
                          l5112 4C50                            l5200 4C96                            l5016 5080  
                          l5008 500E                            l3520 44FA                            l3512 44C4  
                          l3504 4472                            l4224 54DA                            l5032 2738  
                          l5024 26FC                            l5130 5A40                            l5122 5A18  
                          l4250 571A                            l4170 22AA                            l4162 225E  
                          l4146 21B0                            l4138 2178                            l4090 1FAC  
                          l4082 1F66                            l4074 1F40                            l4066 1F14  
                          l4058 1EE4                            l4218 59D0                            l4402 263E  
                          l4410 33C4                            l4242 5634                            l4330 581C  
                          l4314 40E2                            l4306 40A4                            l4322 412A  
                          l5114 4C52                            l5106 4C1A                            l5210 4D02  
                          l5202 4CB4                            l5018 5098                            l3530 457C  
                          l3522 450E                            l3514 44C8                            l3506 4492  
                          l3602 58F6                            l4226 54E8                            l5050 27EA  
                          l5042 278E                            l5034 273C                            l5026 2700  
                          l5124 5A1C                            l4340 49EC                            l4332 4996  
                          l4172 22C6                            l4180 22EC                            l4156 221A  
                          l4164 2262                            l4148 21B4                            l4092 1FBC  
                          l4084 1F76                            l4076 1F46                            l4068 1F24  
                          l4404 267A                            l4420 3450                            l4412 33D0  
                          l4236 5684                            l4244 567A                            l3620 5182  
                          l3612 5164                            l4316 40EE                            l4308 40B0  
                          l4324 412C                            l5116 4C68                            l5108 4C30  
                          l5220 4D5C                            l5212 4D04                            l5204 4CC0  
                          l3540 45C6                            l3532 457E                            l3524 451C  
                          l3516 44D4                            l3508 4496                            l3604 5910  
                          l3700 333A                            l4228 550E                            l4260 55B4  
                          l4500 4898                            l5052 280E                            l5044 2790  
                          l5036 2764                            l5028 2714                            l5300 2E10  
                          l5140 5458                            l5132 53EA                            l5126 5A26  
                          l5150 5874                            l4342 49EE                            l4334 49AE  
                          l4182 22F0                            l4174 22D6                            l4166 227C  
                          l4158 2226                            l4086 1F86                            l4078 1F54  
                          l4406 269E                            l4430 34E4                            l4422 3462  
                          l4414 33E0                            l4238 56CA                            l3630 51B6  
                          l3622 5190                            l3614 5168                            l3606 5AFC  
                          l4326 57F0                            l4318 40FE                            l5118 4C7A  
                          l5222 4D5E                            l5214 4D1C                            l5206 4CC2  
                          l4270 5A5E                            l3534 4590                            l3526 452E  
                          l3518 44F2                            l3550 461A                            l3470 4E5C  
                          l3710 3380                            l3702 334C                            l4262 55D0  
                          l4254 5592                            l5230 430A                            l4510 48EE  
                          l4502 48B0                            l5070 2922                            l5062 28A2  
                          l5046 27B2                            l5038 2778                            l5310 2EA6  
                          l5302 2E44                            l5134 5402                            l3720 5AE4  
                          l5128 5A36                            l5152 5884                            l5160 4D78  
                          l4600 2C00                            l4248 56D4                            l4344 49FE  
                          l4192 4A9E                            l4176 22E4                            l4168 2290  
                          l4096 1FD0                            l4088 1F8C                            l3800 1B3C  
                          l4440 358C                            l4432 3508                            l4424 3482  
                          l4416 3400                            l3640 51F0                            l3632 51BE  
                          l3624 5198                            l3616 5176                            l3608 5B18  
                          l4328 5804                            l5216 4D1E                            l5208 4CF6  
                          l4272 5A62                            l3528 455C                            l3536 4596  
                          l3560 4672                            l3552 461E                            l3544 45E8  
                          l3472 4E6E                            l3712 3388                            l3704 335C  
                          l4256 55A4                            l5240 4354                            l5232 431E  
                          l5224 42DA                            l4520 4956                            l4512 4906  
                          l4504 48BC                            l5080 29B6                            l5064 28C6  
                          l5056 2846                            l5320 2F22                            l5312 2EC0  
                          l5304 2E5E                            l5136 5420                            l5400 3958  
                          l5154 589C                            l5170 4DCC                            l5162 4D84  
                          l4610 2C4A                            l4602 2C0E                            l4530 2A60  
                          l4370 4A7C                            l4354 4A28                            l4346 4A02  
                          l4338 49C2                            l4194 4ACC                            l4178 22E6  
                          l4098 1FDC                            l3810 1B50                            l3802 1B40  
                          l4186 5724                            l4450 3622                            l4442 35A4  
                          l4434 3520                            l4426 349A                            l4418 3418  
                          l3650 5216                            l3642 51F8                            l3634 51C6  
                          l3626 519C                            l3618 517E                            l3730 3B36  
                          l3722 3A52                            l4282 3FD0                            l4290 400E  
                          l4274 3F90                            l5218 4D2C                            l4266 5A4C  
                          l3538 45A6                            l3570 46F4                            l3562 4686  
                          l3554 462C                            l3546 45EC                            l3474 4E78  
                          l3482 576A                            l3490 59E2                            l3706 3362  
                          l3714 3398                            l4258 55AC                            l5242 4360  
                          l5234 4332                            l5226 42EC                            l4522 4968  
                          l4514 4916                            l4506 48C8                            l5090 2A3E  
                          l5082 29DA                            l5074 295A                            l5058 286A  
                          l5330 2F86                            l5322 2F24                            l5314 2EC2  
                          l5306 2E60                            l5146 545E                            l5138 5438  
                          l5410 39B8                            l5402 3996                            l5156 58B0  
                          l5172 4DE0                            l5164 4D94                            l5180 5C18  
                          l4620 2C90                            l4612 2C5C                            l4604 2C1A  
                          l4540 2AA0                            l4532 2A6E                            l4700 3F3A  
                          l4372 4A8C                            l4364 4A50                            l4356 4A32  
                          l4348 4A10                            l4196 4ADC                            l3900 1DC0  
                          l3820 1BA2                            l3812 1B54                            l3804 1B44  
                          l3740 1A32                            l4188 5734                            l4380 236A  
                          l4452 3658                            l4444 35DA                            l4436 355C  
                          l4428 34D2                            l4460 5B22                            l3652 521E  
                          l3644 51FA                            l3636 51D4                            l3628 51A4  
                          l3732 3B52                            l3724 3A6E                            l4292 4026  
                          l4284 3FE8                            l4276 3F9C                            l5092 4BB4  
                          l4268 5A50                            l3564 4694                            l3572 46FA  
                          l3556 464C                            l3548 45FA                            l3476 4E96  
                          l3468 4E4A                            l3484 5776                            l3492 59EE  
                          l3580 4F14                            l3708 3374                            l3660 3126  
                          l5252 43AA                            l5244 4374                            l5236 4344  
                          l5228 42FE                            l4524 4980                            l4516 492C  
                          l4508 48D6                            l5076 297E                            l5068 28FE  
                          l5340 2FFA                            l5332 2F98                            l5324 2F36  
                          l5316 2ED4                            l5308 2E72                            l5420 3A2E  
                          l5412 39CC                            l5404 399C                            l5190 5C32  
                          l3718 5AD4                            l5158 58B2                            l5166 4DA8  
                          l5182 5C1A                            l5174 5C02                            l4630 2CF0  
                          l4614 2C72                            l4622 2CA2                            l4606 2C38  
                          l4550 2AC6                            l4542 2AA2                            l4534 2A70  
                          l4702 3F5E                            l4366 4A5C                            l4358 4A3C  
                          l4198 4B0A                            l3910 1E1A                            l3902 1DD6  
                          l3830 1BE6                            l3822 1BB2                            l3806 1B48  
                          l3814 1B58                            l3750 1A66                            l3742 1A34  
                          l4382 237E                            l4446 35EC                            l4438 356E  
                          l4470 5B88                            l4462 5B28                            l3646 5200  
                          l3638 51DA                            l3734 3BBC                            l3726 3AD0  
                          l4294 4032                            l4286 3FF4                            l4278 3FBC  
                          l4526 5368                            l5094 4BCA                            l3574 470A  
                          l3566 46C2                            l3558 466A                            l3478 4ECC  
                          l3486 5788                            l3494 59F2                            l3590 4F66  
                          l3582 4F24                            l3670 318E                            l3662 3146  
                          l4454 5534                            l5270 443A                            l5262 43E2  
                          l5254 43B6                            l5246 438C                            l5238 4348  
                          l4518 493E                            l5086 2A1C                            l5350 3090  
                          l5342 302E                            l5334 2FCC                            l5326 2F6A  
                          l5318 2F08                            l5422 3A44                            l5406 39A0  
                          l5414 39D2                            ?_pad 0011                            l5192 5C78  
                          l4720 5ABE                            l4712 5AAA                            l5168 4DBC  
                          l5184 5C1C                            l5176 5C0C                            l4464 5BA2  
                          l4640 2D5E                            l4624 2CB0                            l4616 2C78  
                          l4608 2C3A                            l4560 2B06                            l4552 2AD4  
                          l4536 2A80                            l4544 2AAA                            l4528 2A54  
                          l4704 3F6E                            l4368 4A6C                            l3920 1E96  
                          l3912 1E54                            l3832 1BE8                            l3824 1BC8  
                          l3816 1B5C                            l3808 1B4C                            l3760 1A98  
                          l3744 1A44                            l3752 1A6E                            l3736 1A18  
                          l4392 2432                            l4384 23BA                            l4376 2302  
                          l4448 360A                            l4472 5B62                            l4456 5B42  
                          l3648 5206                            l3728 3B16                            l4296 4042  
                          l4288 4000                            l5096 4BD8                            l5280 52F2  
                          l3576 472A                            l3568 46E2                            l3488 578C  
                          l3496 5A0A                            l3592 4F7A                            l3584 4F38  
                          l3680 31C6                            l3672 31A0                            l3664 3156  
                          l3656 30DE                            l4480 5A80                            l4800 42D0  
                          l5272 4454                            l5264 43F6                            l5256 43BC  
                          l5248 4392                            l5088 2A30                            l5352 30AA  
                          l5344 3048                            l5336 2FE6                            l5328 2F84  
                          l5424 3A4A                            l5416 39E6                            l5408 39A6  
                          l5186 5C20                            l4722 5AC0                            l4714 5AB4  
                          l5178 5C0E                            l5194 5BC2                            l4466 5BA8  
                          l4650 2DC8                            l4634 2D1A                            l4642 2D62  
                          l4626 2CB4                            l4618 2C82                            l4570 2B46  
                          l4562 2B08                            l4554 2AD6                            l4546 2ABA  
                          l4538 2A90                            l4706 3F7C                            l3930 1EB6  
                          l3922 1E9A                            l3906 1E00                            l3914 1E56  
                          l3850 1C70                            l3842 1C38                            l3834 1BF2  
                          l3826 1BD4                            l3818 1B86                            l3770 1ACE  
                          l3762 1A9E                            l3754 1A7E                            l3746 1A54  
                          l3738 1A24                            l4394 2500                            l4386 23DE  
                          l4378 2322                            l4474 5B68                            l4458 5B48  
                          l4810 3698                            l4802 366E                            l4298 405E  
                          l5098 4BDA                            l5290 57AE                            l5282 5306  
                          l5274 52E6                            l3594 4F7E                            l3586 4F46  
                          l3682 31CC                            l3690 32BE                            l3674 31AE  
                          l3666 3158                            l3658 30FE                            l4482 5A9C  
                          l4490 593C                            l5266 4416                            l5258 43CC  
                          l5354 30AC                            l5346 304A                            l5338 2FE8  
                          l5418 3A00                            l5370 388C                            l5188 5C28  
                          l4716 5ABA                            l4724 5BE4                            l4652 2DCC  
                          l4644 2D7C                            l4636 2D26                            l4628 2CC2  
                          l4580 2B76                            l4572 2B4E                            l4556 2AE6  
                          l4564 2B10                            l4548 2AC0                            l4708 3F7E  
                          l3932 1EC4                            l3924 1EA8                            l3916 1E66  
                          l3908 1E0C                            l3852 1C74                            l3844 1C48  
                          l3836 1C14                            l3860 1C94                            l3828 1BD8  
                          l3780 1B0A                            l3772 1ADE                            l3764 1AAC  
                          l3756 1A84                            l3748 1A64                            l4396 256C  
                          l4388 23FA                            l4484 5970                            l4468 5B82  
                          l4820 36F8                            l4812 36B0                            l4804 3672  
                          l5196 4C90                            l5292 57C2                            l5284 5326  
                          l5276 52EC                            l3596 4FAC                            l3588 4F52  
                          l3692 32D8                            l3684 324E                            l3676 31B4  
                          l3668 3172                            l3940 3C4A                            l4476 5462  
                          l4740 4196                            l4732 4162                            l4492 5952  
                          l4900 136A                            l5268 4426                            l5356 30BE  
                          l5348 305C                            l5380 38A0                            l5372 3890  
                          l5364 3878                            l4718 5ABC                            l4654 2DDA  
                          l4646 2D92                            l4638 2D34                            l4590 2BB4  
                          l4582 2B76                            l4574 2B52                            l4566 2B20  
                          l4558 2AF6                            l4670 3DFC                            l3934 1EC6  
                          l3926 1EAE                            l3918 1E76                            l3862 1CBA  
                          l3870 1D10                            l3854 1C82                            l3846 1C56  
                          l3838 1C24                            l3790 1B28                            l3782 1B18  
                          l3774 1AE0                            l3766 1AAE                            l3758 1A96  
                          l4398 259E                            l4830 375C                            l4822 3710  
                          l4814 36C4                            l4806 367C                            l5198 4C94  
                          l5294 57DA                            l5286 5338                            l5278 52EE  
                          l3598 4FC0                            l3694 32F6                            l3686 3254  
                          l3678 31BC                            l3950 3CB8                            l3942 3C58  
                          l4478 54C4                            l4750 41BE                            l4742 419C  
                          l4734 4166                            l4726 4140                            l4494 5968  
                          l4910 14F8                            l4902 1376                            l5358 30C8  
                          l5390 38CA                            l5382 38B4                            l5374 3894  
                          l5366 387C                            l4656 2DE0                            l4648 2DAC  
                          l4592 2BC4                            l4568 2B36                            l4680 3E74  
                          l4672 3E42                            l3928 1EB0                            l3880 1D64  
                          l3872 1D36                            l3864 1CEE                            l3856 1C84  
                          l3848 1C64                            l3792 1B2C                            l3784 1B1C  
                          l3768 1ABE                            l3776 1AE8                            l4840 37D4  
                          l4832 3774                            l4824 3728                            l4816 36DC  
                          l4808 3694                            l5288 534C                            l3696 3310  
                          l3688 325A                            l3960 3D6A                            l3952 3D00  
                          l3944 3C6A                            l4760 41F8                            l4752 41C2  
                          l4744 41B6                            l4736 417E                            l4488 5936  
                          l4920 16A6                            l4912 15A0                            l4904 1418  
                          l5296 2DF0                            l5392 38D2                            l5384 38B4  
                          l5376 3898                            l5368 3880                            l4658 2DE2  
                          l4594 2BD4                            l4586 2B8A                            l4578 2B66  
                          l4690 3EFC                            l4682 3E80                            l4674 3E58  
                          l4666 3DDE                            l3890 1D8E                            l3882 1D72  
                          l3874 1D46                            l3866 1CF0                            l3858 1C8E  
                          l3794 1B30                            l3786 1B20                            l3778 1AF8  
                          l4850 3838                            l4842 37D8                            l4834 378C  
                          l4826 3740                            l4818 36F4                            l3698 332A  
                          l3962 3D7E                            l3946 3C70                            l3938 3C26  
                          l4770 421E                            l4762 4212                            l4754 41DA  
                          l4738 418A                            l4930 17B6                            l4922 1774  
                          l4914 15BC                            l4906 1434                            l4498 4874  
                          l5298 2E00                            l5386 38BE                            l5378 389C  
                          l3980 5C98                            l4596 2BDC                            l4588 2BA4  
                          l4692 3F08                            l4684 3EB2                            l4668 3DEE  
                          l3892 1D9E                            l3884 1D74                            l3868 1D00  
                          l3796 1B34                            l3788 1B24                            l4852 3850  
                          l4844 37F0                            l4836 37A4                            l4828 3758  
                          l3956 3D38                            l3948 3C94                            l3972 3DA4  
                          l4780 426E                            l4772 4236                            l4756 41E6  
                          l4940 18B6                            l4932 1876                            l4924 177E  
                          l4916 1664                            l4908 14DC                            l4860 0E66  
                          l5396 3900                            l5388 38C2                            l3982 5C9C  
                          l3990 5C92                            l4598 2BEC                            l4694 3F16  
                          l4686 3EB4                            l4678 3E6C                            l3886 1D82  
                          l3878 1D5A                            l3894 1DA0                            l3798 1B38  
                          l4854 3854                            l4846 3808                            l4838 37BC  
                          l3974 3DC8                            l3958 3D5C                            l3966 3D8A  
                          l4790 4292                            l4774 4242                            l4758 41F2  
                          l4942 18CC                            l4950 18FA                            l4934 1880  
                          l4926 1788                            l4918 1678                            l4870 0FEC  
                          l4862 0E80                            l5398 392E                            l3984 5C6E  
                          l4696 3F34                            l4688 3EC0                            l3992 5C84  
                          l3888 1D8A                            l3896 1DAE                            l4848 3820  
                          l3968 3D98                            l4792 429E                            l4776 424E  
                          l4768 421A                            l4960 1992                            l4944 18D4  
                          l4928 17A0                            l4936 188A                            l4952 18FE  
                          l4880 10E0                            l4872 1000                            l4864 0E8C  
                          l4856 0E14                            l3986 5C72                            l4698 3F36  
                          l3994 5C88                            l3898 1DB2                            l4794 42AA  
                          l4786 4276                            l4778 4254                            l4970 1A12  
                          l4962 19C0                            l4954 192C                            l4946 18EA  
                          l4938 18A0                            l4890 126C                            l4882 10FA  
                          l4874 10A8                            l4866 0F28                            l4858 0E62  
                          l3988 5C8E                            l3996 5834                            l4980 4774  
                          l4796 42B0                            l4788 427A                            l4964 19EE  
                          l4956 195C                            l4948 18F2                            l4892 1288  
                          l4884 1106                            l4876 10C4                            l4868 0F44  
                          l3998 5838                            l4990 47D4                            l4982 478C  
                          l4974 474C                            l4798 42CA                            l4966 19F4  
                          l4958 198C                            l4894 1330                            l4886 11A8  
                          l4878 10DC                            l4992 47E0                            l4984 4798  
                          l4976 4766                            l4968 1A08                            l4896 134C  
                          l4888 11C4                            l4994 47F8                            l4986 47B0  
                          l4978 4770                            l4898 1350                            l4996 4860  
                          l4988 47BC                            l4998 486A                            STR_1 0E05  
                          STR_2 0E0D                            u3001 44CE                            u3010 44F2  
                          u3011 44EE                            u3020 451C                            u3100 470A  
                          u3021 4518                            u3101 4706                            u3030 455C  
                          u3110 4F24                            u3031 4558                            u3111 4F20  
                          u4000 1F54                            u3200 51F0                            u3040 45A6  
                          u3120 4F46                    _BAUD4CONbits 000EE9                            u4001 1F50  
                          u3201 51EC                            u3041 45A2                            u3121 4F42  
                          _LATE 000F7D                            u4010 1F66                            u3210 5216  
                          u3050 45FA                            u3130 4F9C                            u4011 1F62  
                          u3211 5212                            u3051 45F6                            u3131 4F98  
                          _LATG 000F7F                            u4100 2206                            u4020 1F76  
                          u3060 462C                            u3140 4FAC                            u3300 32F6  
                          u3220 310E                            u4101 2202                            u4021 1F72  
                          u3061 4628                            u3141 4FA8                            u3301 32F2  
                          u3221 3108                            u4110 221A                            u4030 1FAC  
                          u3070 466A                            u3150 5910                            u3310 3310  
                          u3230 3110                            u4111 2216                            u4031 1FA8  
                          u3071 4666                            u3151 590C                            u3311 330C  
                          u5000 2D7C                            u4200 4B98                            u4120 2234  
                          u4040 1FBC                            u3160 5176                            u3400 3B52  
                          u3080 4694                            u3320 332A                            u3240 3126  
                          u5001 2D78                            u4201 4B94                            u4121 2230  
                          u4041 1FB8                            u3161 5172                            u3401 3B4E  
                          u3081 4690                            u3321 3326                            u3241 3122  
                          u5010 2DAC                            u4130 227C                            u4050 2136  
                          u4210 59C0                            u3170 5190                            u3090 46C2  
                          u3330 333A                            u3250 3156                            _T2PR 000FBC  
                          u5011 2DA8                            u4131 2278                            u4211 59BC  
                          u3171 518C                            u3091 46BE                            u3331 3336  
                          u3251 3152                            u5020 2DDA                            u5100 3F34  
                          u4140 22AA                            u4060 2190                            u3500 1B0A  
                          u3180 51B6                            u4300 413E                            u3340 334C  
                          u3260 3172                            u4220 552A                            u5021 2DD6  
                          u5101 3F30                            u4141 22A6                            u4061 218C  
                          u3501 1B06                            u3181 51B2                            u4301 413A  
                          u3341 3348                            u3261 316E                            u4221 5526  
                          u5110 3F6E                            u5030 3DEE                            u4310 49AE  
                          u4150 22E4                            u4070 21B0                            u3510 1B18  
                          u3430 1A32                            u3190 51D4                            u3414 3BAC  
                          u4230 5A7A                            u3350 335C                            u3270 31A0  
                          u5111 3F6A                            u5031 3DEA                            u4311 49AA  
                          u4151 22E0                            u4071 21AC                            u4055 212C  
                          u3511 1B14                            u3431 1A2E                            u3191 51D0  
                          u3415 3BA8                            u4231 5A76                            u3351 3358  
                          u3271 319C                            u5120 3F7C                            u5040 3DFC  
                          u4320 49E2                            u4160 4ACC                            u4080 21C2  
                          u3600 1C56                            u3520 1B86                            u3440 1A44  
                          u4400 239E                            u3424 3C16                            u4240 3FCC  
                          u3360 3374                            u3280 31AE                            u5200 17B6  
                          u5121 3F78                            u5041 3DF8                            u4161 4AC8  
                          u4081 21BE                            u3601 1C52                            u3521 1B82  
                          u3441 1A40                            u3425 3C12                            u4241 3FC8  
                          u3361 3370                            u3281 31AA                            u5201 17B2  
                          u3370 5AE4                            u5050 3E58                            u4330 4A10  
                          u4170 4B0A                            u4090 21F0                            u3610 1C64  
                          u3530 1B9E                            u3450 1A54                            u4410 23BA  
                          u4250 4026                            u3290 32D8                            u5130 41B6  
                          u5210 1876                            u3371 5AE0                            u5051 3E54  
                          u4331 4A0C                            u4171 4B06                            u4091 21EC  
                          u3611 1C60                            u3531 1B98                            u3451 1A50  
                          u4411 23B6                            u4251 4022                            u3291 32D4  
                          u5131 41B2                            u5211 1872                            u3380 5AFA  
                          u5060 3EAE                            u4340 4A24                            u4180 4B28  
                          u3700 1DAE                            u3620 1C82                            u3540 1BA0  
                          u3460 1A96                            u4420 23FA                            u4500 342A  
                          u4260 405E                            u5140 4212                            u5300 19EE  
                          u5220 18A0                            u3381 5AF6                            u5061 3EAA  
                          u4341 4A20                            u4325 49D8                            u4181 4B24  
                          u3701 1DAA                            u3621 1C7E                            u3461 1A92  
                          u4421 23F6                            u4405 2394                            u4501 3422  
                          u4261 405A                            u5141 420E                            u5301 19EA  
                          u5221 189C                            u5070 3EF8                            u4350 4A4C  
                          u4190 4B48                            u3710 1DC0                            u3630 1CBA  
                          u3550 1BC8                            u3470 1AAC                            u4430 2500  
                          u3390 3A6E                            u4270 4088                            u5150 426E  
                          u5310 1A08                            u5230 18B6                            u5071 3EF4  
                          u4351 4A48                            u4191 4B44                            u3711 1DBC  
                          u3631 1CB6                            u3551 1BC4                            u3471 1AA8  
                          u4431 24FC                            u3391 3A6A                            u4271 4084  
                          u6007 57CC                            u5151 426A                            u5311 1A04  
                          u5231 18B2                            u5080 3F16                            u4360 4A6C  
                          u3800 1EA8                            u3720 1DD6                            u3640 1D00  
                          u3560 1BE6                            u3480 1ABE                            u4440 259E  
                          u4600 3532                            u4520 3462                            u4280 40E2  
                          u5320 5098                            u2920 4E5C                            u5160 42CA  
                          u5240 18CC                            u5400 297E                            u5081 3F12  
                          u4361 4A68                            u3801 1EA4                            u3721 1DD2  
                          u3641 1CFC                            u3561 1BE2                            u3481 1ABA  
                          u4441 259A                            u4601 352A                            u4521 345E  
                          u4281 40DE                            u6017 4CCE                            u5321 5094  
                          u2921 4E58                            u5161 42C6                            u5241 18C8  
                          u5401 297A                            u5090 3F26                            u4370 4A7C  
                          u3810 1EC4                            u3730 1DEC                            u3650 1D36  
                          u3570 1C06                            u3490 1ACE                            u4450 265E  
                          u4530 3474                            u4290 4126                            u2930 4E6E  
                          u5250 18EA                            u5170 16A6                            u5410 29DA  
                          u5330 2764              verify_color@color2 0098                            u5091 3F22  
                          u4371 4A78                            u3811 1EC0                            u3731 1DE8  
                          u3651 1D32                            u3571 1C02                            u3491 1ACA  
                          u4531 346C                            u4291 4122                            u6107 40C2  
                          u6027 4D10                            u2931 4E6A                            u5251 18E6  
                          u5171 16A2                            u5411 29D6                            u5331 2760  
                          u3740 1E00                            u3660 1D46                            u3580 1C14  
                          u4460 267A                            u4380 2342                            u4700 3634  
                          u4620 356E                            u3900 52B4                            u2940 4E96  
                          u3820 3C4A                            u5260 192C                            u5180 1774  
                          u5420 2A3E                            u5340 278A                            u5500 5458  
                          u3741 1DFC                            u3661 1D42                            u3581 1C10  
                          u4461 2676                            u4701 362C                            u4621 356A  
                          u3901 52B0                            u6117 40F4                            u6037 4D6A  
                          u2941 4E92                            u3821 3C46                            u5261 1928  
                          u5181 1770                            u5421 2A3A                            u5341 2786  
                          u5501 5454                            u3750 1E1A                            u3670 1D72  
                          u3590 1C24                            u4390 236A                            u4630 3580  
                          u4550 34AC                            u4518 342C                            u4470 33E0  
                          u3910 52CC                            u5510 4CA6                            u2950 4ECC  
                          u3830 3C94                            u5270 195C                            u5190 17A0  
                          u5430 2A52                            u5350 27B2                            u3751 1E16  
                          u3671 1D6E                            u3591 1C20                            u4455 2654  
                          u4391 2366                            u4631 3578                            u4551 34A4  
                          u4471 33DC                            u6207 37E2                            u3911 52C8  
                          u6127 580E                            u6047 4BBE                            u5511 4CA2  
                          u2951 4EC8                            u3831 3C90                            u5271 1958  
                          u5191 179C                            u5431 2A4E                            u5351 27AE  
                          u4800 2A6E                            u3760 1E54                            u3680 1D82  
                          u4720 366C                            u4480 33F2                            u3920 50DC  
                          u5440 4BB4                            u5520 4CB4                            u2960 57AC  
                          u3840 3CB8                            u5280 198C                            u5600 4344  
                          u5360 280E                            u4801 2A6A                            u3761 1E50  
                          u3681 1D7E                            u4385 2338                            u4721 3668  
                          u4481 33EA                            u6217 385E                            u3921 50D8  
                          u6137 5292                            u6057 4BE4                            u5441 4BB0  
                          u5521 4CB0                            u2961 57A8                            u3841 3CB4  
                          u5281 1988                            u5601 4340                            u5361 280A  
                          u4810 2A80                            u3770 1E66                            u3690 1D9E  
                          u4650 35B6                            u4618 3534                            u4570 34E4  
                          u3930 5100                            u5450 4BD8                            u5530 4CE8  
                          u2970 5A0A                            u3850 3D5C                            u4730 5952  
                          u5290 19C0                            u5610 4374                            u5370 286A  
                          u4811 2A7C                            u3771 1E62                            u3691 1D9A  
                          u4651 35AE                            u4571 34E0                            u6307 340A  
                          u6227 5B32                            u3931 50FC                            u6147 52D6  
                          u6067 4C24                            u5451 4BD4                            u5531 4CE4  
                          u2971 5A06                            u3851 3D58                            u4731 594E  
                          u5291 19BC                            u5611 4370                            u5371 2866  
                          u4900 2C38                            u4820 2A90                            u3860 585C  
                          u3780 1E76                            u4580 34F6                            u4548 3476  
                          u3940 514A                            u5460 4C08                            u5540 4CF6  
                          u2980 4472                            u4740 5968                            u5620 43A6  
                          u5380 28C6                            u5700 2ED4                            u4901 2C34  
                          u4821 2A8C                            u3861 5854                            u3781 1E72  
                          u4581 34EE                            u6317 3442                            u6237 5B52  
                          u3941 5146                            u6157 512A                            u6077 4C5C  
                          u5461 4C04                            u5541 4CF2                            u2981 446E  
                          u4741 5964                            u5621 43A2                            u5381 28C2  
                          u5701 2ED0                            u4910 2C5C                            u4830 2AD4  
                          u3790 1E96                            u4718 3636                            u4670 35EC  
                          u3950 5162                            u5470 4C1A                            u5550 4D2C  
                          u2990 44A4                            u5630 43CC                            u4750 48EE  
                          u5390 2922                            u5710 2F36                            u6407 5BB2  
                          u4911 2C58                            u4831 2AD0                            u3791 1E92  
                          u4671 35E8                            u6327 348C                            u6247 5B72  
                          u6167 3686                            u3951 515E                            u6087 4006  
                          u5471 4C16                            u5551 4D28                            u2991 44A0  
                          u5631 43C8                            u4751 48EA                            u5391 291E  
                          u5711 2F32                            u4920 2C72                            u4840 2AE6  
                          u4680 35FE                            u4648 3582                            u4568 34AE  
                          u3880 5244                            u5480 4C3E                            u5560 4D4E  
                          u3960 5C50                            u5640 43DE                            u4760 4906  
                          u5720 2F98                            u6417 5A2C                            u4921 2C6E  
                          u4841 2AE2                            u4681 35F6                            u6337 34C4  
                          u6257 5B92                            u6177 36A2                            u3881 5240  
                          u6097 4038                            u5481 4C3A                            u5561 4D4A  
                          u3961 5C4C                            u5641 43DA                            u4761 4902  
                          u5721 2F94                            u4930 2C90                            u4850 2AF6  
                          u3970 1EF2                            u4498 33F4                            u3890 5268  
                          u5490 4C50                            u5570 4D5C                            u5650 4426  
                          u4770 4916                            u5730 2FFA                            u4931 2C8C  
                          u4851 2AF2                            u3971 1EEE                            u6347 3512  
                          u6267 4780                            u6187 3702                            u3891 5264  
                          u5491 4C4C                            u5571 4D58                            u5651 4422  
                          u4771 4912                            u5731 2FF6                            u4940 2CB0  
                          u4860 2B36                            u3980 1F04                            u4668 35B8  
                          u5660 5336                            u5580 42FE                            u4780 493E  
                          u5740 305C                            u4941 2CAC                            u4861 2B32  
                          u3981 1F00                            u6357 354E                            u6277 47A4  
                          u6197 3766                            u5661 5332                            u5581 42FA  
                          u4781 493A                            u5741 3058                            u4950 2CC2  
                          u4870 2B76                            u3878 585E                            u3990 1F14  
                          u4598 34F8                            u5590 431E                            u4790 4968  
                          u5750 30BE                            u5670 2E00                            u4951 2CBE  
                          u4871 2B72                            u3991 1F10                            u6367 3596  
                          u6287 47C8                            u5591 431A                            u4791 4964  
                          u5751 30BA                            u5671 2DFC                            u4960 2CF0  
                          u4880 2BEC                            u5680 2E10                            u5760 3958  
                          u4961 2CEC                            u4881 2BE8                            u6377 35CC  
                          u6297 47EC                            u5681 2E0C                            u5761 3954  
                          u4970 2D06                            u4890 2C0E                            u4698 3600  
                          u5690 2E72                            u5770 39B8                            u4971 2D02  
                          u4891 2C0A                            u6387 3614                            u5907 0E72  
                          u5691 2E6E                            u5827 53F6                            u5771 39B4  
                          u4980 2D1A                            u5780 3A2E                            u4981 2D16  
                          u6397 364A                            u5917 10D0                            u5837 542C  
                          u5781 3A2A                            u4990 2D34                            u4991 2D30  
                          u5927 10EC                            u5847 272A                            u5937 135C  
                          u5857 48CE                            u5947 4170                            u5867 4920  
                          u5957 41CC                            u5877 4948                            u5967 4228  
                          u5887 4972                            u5977 4284                            u5897 4446  
                          u5987 5358                            u5997 5000                            abs@a 0013  
      straight_action@stop_time 0085                            _dbuf 0146                            _main 3878  
                          _dtoa 30DE                turning_action@mL 0035                turning_action@mR 0037  
                          _prec 00FA                            _nout 013E                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 5228                            prodh 000FF4                            prodl 000FF3  
                          start 0030                    main@accident 0170                  ?_color_display 0058  
                 test_action@mL 002D                   test_action@mR 002F                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 5634                 __end_of_HighISR 0030                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 45E8       amb_light_measure@CC_amb_1 0072  
     amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1ED8  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 474C  
               __end_of___fldiv 2DEE                 __end_of___awdiv 5228                 __end_of___flneg 59E2  
               __end_of___flmul 2302                 __end_of___flsub 576A                 __end_of___fltol 4A9E  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 5B82  
                         _LED_C 5BA2                           _LED_G 5B62                           _LED_R 5B22  
                         i2l581 002C                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5C56  
    __end_of_I2C_2_Master_Start 5CA2         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5C78  
               __end_of_compare 5970                    compare@lower 006A                           _flags 00FC  
                         _color 0144                    compare@upper 006E                           _fputc 4E4A  
                         _fputs 576A                           _setup 4C90                           pad@fp 0011  
                         _width 0140                           _putch 5CA4                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE                ?_straight_action 007D            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 59AA                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 55E4                color_display@buf 0079  
       __end_of_color_read_Blue 56D4           _I2C_2_Master_RepStart 5C84               _calibration_motor 4BA2  
               ?_color_read_Red 0005                 __initialization 58B6                   short_burst@mL 0020  
                 short_burst@mR 0022              ?_calibration_motor 0031                    __end_of_main 3A52  
                  __end_of_dtoa 33C2                   main@amb_light 016E            __end_of_detect_color 1A18  
                  __end_of_stop 52E6          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
           ??_calibration_motor 0035                          ??_main 00F6                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
               _buggylight_init 5C56                       ??_LED_OFF 0001          _initDCmotors_parameter 4D78  
                  turn45@i_1303 0028                    turn45@i_1305 002A                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_setup 0078                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5450 0028  
                        i2l5444 000A                          i2l5446 001A                          i2l5448 0022  
                     ??_HighISR 0001        __end_of_color_click_init 5A4C                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A       __end_of_calibration_motor 4C90  
              __end_of___xxtofl 3F90                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056               straight_action@mL 007D               straight_action@mR 007F  
                        ___flge 4A9E                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5AFC                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 26B0  
                 compare@result 0070                          _memory 0100                          clear_0 58D4  
              ___awdiv@quotient 000D                          _motorL 0131                          _motorR 0128  
                        isa$std 000001                          pad@buf 0013                          _turn45 3F90  
                        _roundf 2302                          dtoa@fp 001C                          _strlen 59E2  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5BE2  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 5534                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                ??_turning_action 0039                    ?_test_action 002D  
                     ??_sprintf 0058                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                   main@stop_time 0173                      __accesstop 0060  
       __end_of__initialization 58E4                   verify_color@m 0092                   verify_color@w 0094  
      __end_of_color_read_Clear 5724                      ___flneg@f1 0001        __end_of_color_read_Green 5684  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5BA2                   __end_of_LED_C 5BC2                   __end_of_LED_G 5B82  
                 __end_of_LED_R 5B42                ?_color_read_Blue 0005                 _Interrupts_init 5C78  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4874                    __pidataBANK0 5CA2  
       __end_of_buggylight_init 5C6C           _distance_measure$3162 0074                   __end_of_fputc 4F14  
             detect_color@color 0089                   __end_of_fputs 57AE                   __end_of_setup 4D78  
                 __end_of_putch 5CA6                   __end_of_toint 0E05             __end_of_Timer0_init 5C3E  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 006A           fullSpeedAhead_test@mL 0020  
         fullSpeedAhead_test@mR 0022              ??_distance_measure 0070                         ??_fputc 0005  
                       ??_fputs 000E                         ??_setup 0082                         ??_putch 0001  
                    __pbssBANK0 00FA                      __pbssBANK1 0100             calibration_motor@mL 0031  
           calibration_motor@mR 0033                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 5BE2                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_goback 002D                         ?_turn45 0020                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5B42  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E                    _detect_color 0E14  
 __end_of_color_data_collection 42D6         __end_of_Interrupts_init 5C84          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5C02  
            _I2C_2_Master_Start 5C98                      _initUSART4 5C02              _I2C_2_Master_Write 5C6C  
           _fullSpeedAhead_test 57F0                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 00F2                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5C20         sendStringSerial4@string 0002                         ___aodiv 4460  
                       ___fladd 1A18                         ___aomod 45E8                         ___fldiv 2A54  
                       ___awdiv 5164                         ___flneg 59AA                         ___flmul 1ED8  
                       ___flsub 5724                         ___fltol 4996             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001        fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00       distance_measure@threshold 007A  
                       __pcinit 58B6                         __ramtop 0E00                      _read_color 5534  
                       __ptext0 3878                         __ptext1 53E6                         __ptext2 2DEE  
                       __ptext3 26B0                         __ptext4 4874                         __ptext5 42D6  
                       __ptext6 0E14                         __ptext7 5936                         __ptext8 4140  
                       __ptext9 5534                         _compare 5936         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD            ?_fullSpeedAhead_test 0020                      ??___xxtofl 0005  
           turning_action@color 0039                       _T2HLTbits 000FBE                         _lroundf 5970  
                       goback@i 0033          distance_measure@CC_amb 0078                         main@amb 0166  
        distance_measure@CG_amb 0072                         _sprintf 5592                         main@rgb 0175  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 58E4  
            setMotorPWM@PWMduty 0018                         fputc@fp 0003           __end_of_test_function 4460  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 00EA  
               test_function@mR 00EC                 ??_fullSpeedBack 0025                      ??_pin_init 0001  
            ??_color_click_init 0005                         setup@mL 007E               __end_of_vfpfcnvrt 3DDC  
                       setup@mR 0080                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       turn45@i 002C                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                main@start_time 0171                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5874                 turn45@direction 0025  __end_of_initDCmotors_parameter 4E4A  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4           ??_fullSpeedAhead_test 0024  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 0092           __end_of_color_display 54D2  
                    main@motorL 0199                      main@motorR 01A2     amb_light_measure@CC_amb_ave 0070  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 007F                  detect_color@BC 007B  
                detect_color@BG 008C                  detect_color@GB 0083                  detect_color@GG 0087  
                detect_color@BR 0085                  detect_color@GR 007D                  detect_color@RB 0081  
                detect_color@RG 0079                  detect_color@RR 008A           __end_of_color_predict 5AAA  
                __end_of___flge 4BA2                  _fullSpeedAhead 50A0                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                  __end_of___wmul 5B22  
                   ?_read_color 000C                  __end_of_goback 2A54                  __end_of_turn45 4140  
                __end_of_roundf 26B0                  __end_of_strlen 5A18             color_read_Clear@tmp 000A  
           start_initialization 58B6                     __end_of_abs 5936                     __end_of_pad 4FDA  
               turn45@turn_time 0024                  ??_toggle_light 0002                  ??_verify_color 0096  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 58B6                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 5164                        ??___flge 0009                        ??___wmul 0005  
                      ??_goback 0031                     __pdataBANK0 00FE               ??_straight_action 0087  
                      ??_turn45 0026                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0166                ___aodiv@dividend 0001  
                      ?_HighISR 0001                       _dtoa$2828 002E                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001A                       __pintcode 0008                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
                      ?___awdiv 0007       straight_action@start_time 0083                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                     _centisecond 0142  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 5AD4               _I2C_2_Master_Init 5AAA  
             _I2C_2_Master_Read 5832               _I2C_2_Master_Stop 5C8E          toggle_light@toggletime 0001  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 5A4C  
         _color_data_collection 4140             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u581_40 001A  
                      i2u581_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0145                       _vfpfcnvrt 3C26                      setup@white 007A  
     __end_of_I2C_2_Master_Idle 5AFC            __end_of_toggle_light 366E       __end_of_I2C_2_Master_Init 5AD4  
     __end_of_I2C_2_Master_Read 5874               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5C98  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5462  
        test_function@amb_light 00F0                       main@white 017D               ??_color_read_Blue 0007  
                 detect_color@m 0071                   detect_color@w 0073                   ??_test_action 0031  
               _calibrate_white 366E       __end_of_sendStringSerial4 5A7C                   ??_short_burst 0024  
             _amb_light_measure 474C   __end_of_I2C_2_Master_RepStart 5C8E              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3C26                      roundf@F527 013A                _distance_measure 4FDA  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 4996                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C     __end_of_fullSpeedAhead_test 5832                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                      sprintf@fmt 0062  
                      ___xxtofl 3DDC                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5C20                        __ptext10 5A7C                        __ptext11 5462  
                      __ptext20 5CA4                        __ptext12 5592                        __ptext21 58F6  
                      __ptext13 54D2                        __ptext30 4BA2                        __ptext22 45E8  
                      __ptext14 3C26                        __ptext31 5368                        __ptext23 4460  
                      __ptext15 30DE                        __ptext40 55E4                        __ptext32 3F90  
                      __ptext24 5A4C                        __ptext16 4F14                        __ptext41 5634  
                      __ptext33 57F0                        __ptext25 5C3E                        __ptext17 59E2  
                      __ptext50 2302                        __ptext42 5684                        __ptext34 5228  
                      __ptext26 52E6                        __ptext18 576A                        __ptext51 5724  
                      __ptext43 5B22                        __ptext35 50A0                        __ptext27 4FDA  
                      __ptext19 4E4A                        __ptext60 3DDC                        __ptext52 1A18  
                      __ptext44 5B42                        __ptext36 3A52                        __ptext28 57AE  
                      __ptext61 2A54                        __ptext53 59AA                        __ptext45 5B62  
                      __ptext37 5AFC                        __ptext29 4C90                        __ptext70 5C8E  
                      __ptext62 5BA2                        __ptext54 1ED8                        __ptext46 5B82  
                      __ptext38 5164                        __ptext71 5C98                        __ptext63 5BC2  
                      __ptext55 4A9E                        __ptext47 474C                        __ptext39 366E  
                      __ptext72 5AD4                        __ptext64 5C02                        __ptext56 4996  
                      __ptext48 33C2                        __ptext73 5AAA                        __ptext65 4D78  
                      __ptext57 56D4                        __ptext49 5970                        __ptext74 5C56  
                      __ptext66 5874                        __ptext58 5C84                        __ptext75 5C20  
                      __ptext67 5A18                        __ptext59 5832                        __ptext76 5C78  
                      __ptext68 5BE2                        __ptext69 5C6C       __end_of_amb_light_measure 4874  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
        test_function@test_code 00F5             __end_of_test_action 53E6              __end_of_read_color 5592  
               _straight_action 52E6                        _pin_init 5BC2                  _turning_action 2DEE  
           __end_of_short_burst 57F0                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FE  
                      goback@mL 002D                        goback@mR 002F                        _vfprintf 54D2  
              ___aomod@dividend 0001         __end_of_calibrate_white 3878                      _INTCONbits 000FF2  
                   _setMotorPWM 3A52                   ?_detect_color 0071                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0001          __end_of_turning_action 30DE                ??_fullSpeedAhead 001E  
                 _test_function 42D6                  setup@amb_light 0078                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                        setup@amb 007C        straight_action@amb_light 0081  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
                      turn45@mL 0020                        turn45@mR 0022                _color_click_init 5A18  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$3161 008E  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 006A  
            distance_measure@mR 006C                  ??_detect_color 0075                     _test_action 5368  
                 ___fladd@signs 000D         __end_of_straight_action 5368      straight_action@stop_signal 0089  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 5C3E  
                   _short_burst 57AE                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                 ?_turning_action 0035                    _toggle_light 33C2  
                  ___aomod@sign 0012                    _verify_color 53E6                     _roundf$3163 004F  
                   _roundf$3164 0049                   _color_display 5462  
