

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 15:38:50 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   102  0000                     
   103                           ; Version 2.35
   104                           ; Generated 05/05/2021 GMT
   105                           ; 
   106                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F67K40 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139                           	psect	idataBANK0
   140  005C6A                     __pidataBANK0:
   141                           	callstack 0
   142                           
   143                           ;initializer for _SENSITIVITY
   144  005C6A  0A                 	db	10
   145                           
   146                           ;initializer for _CALIBRATION_135
   147  005C6B  0F                 	db	15
   148                           
   149                           	psect	idataBANK1
   150  005C6E                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _CALIBRATION_180
   154  005C6E  0A                 	db	10
   155                           
   156                           	psect	smallconst
   157  000E00                     __psmallconst:
   158                           	callstack 0
   159  000E00  00                 	db	0
   160  000E01  0000               	dw	0
   161  000E03  4B00               	dw	19200
   162  000E05                     __end_of_toint:
   163                           	callstack 0
   164  0000                     _TX4REG	set	3812
   165  0000                     _RC4STAbits	set	3815
   166  0000                     _SP4BRGH	set	3814
   167  0000                     _LATEbits	set	3965
   168  0000                     _TRISGbits	set	3975
   169  0000                     _TRISEbits	set	3973
   170  0000                     _LATGbits	set	3967
   171  0000                     _LATFbits	set	3966
   172  0000                     _TRISFbits	set	3974
   173  0000                     _SSP2CON2bits	set	3802
   174  0000                     _LATG	set	3967
   175  0000                     _LATE	set	3965
   176  0000                     _RX4PPS	set	3605
   177  0000                     _SSP2CLKPPS	set	3612
   178  0000                     _SSP2DATPPS	set	3613
   179  0000                     _ANSELDbits	set	3751
   180  0000                     _SSP2ADD	set	3798
   181  0000                     _SSP2CON1bits	set	3801
   182  0000                     _LATAbits	set	3961
   183  0000                     _LATDbits	set	3964
   184  0000                     _LATHbits	set	3968
   185  0000                     _TRISDbits	set	3972
   186  0000                     _TRISHbits	set	3976
   187  0000                     _PORTFbits	set	3982
   188  0000                     _T2PR	set	4028
   189  0000                     _T2CONbits	set	4029
   190  0000                     _PWM7DCH	set	4000
   191  0000                     _PWM6DCH	set	4003
   192  0000                     _TRISAbits	set	3969
   193  0000                     _TRISCbits	set	3971
   194  0000                     _LATCbits	set	3963
   195  0000                     _RC4REG	set	3811
   196  0000                     _SP4BRGL	set	3813
   197  0000                     _TX4STAbits	set	3816
   198  0000                     _BAUD4CONbits	set	3817
   199  0000                     _SSP2CON2	set	3802
   200  0000                     _SSP2STAT	set	3800
   201  0000                     _ANSELFbits	set	3764
   202  0000                     _SSP2BUF	set	3797
   203  0000                     _PIE0bits	set	3625
   204  0000                     _PIE4bits	set	3629
   205  0000                     _PIR4bits	set	3639
   206  0000                     _RC0PPS	set	3682
   207  0000                     _RC7PPS	set	3689
   208  0000                     _RD5PPS	set	3695
   209  0000                     _RE2PPS	set	3700
   210  0000                     _RD6PPS	set	3696
   211  0000                     _TMR0L	set	4051
   212  0000                     _TMR0H	set	4052
   213  0000                     _T0CON0bits	set	4053
   214  0000                     _T2CLKCONbits	set	4031
   215  0000                     _T2HLTbits	set	4030
   216  0000                     _PWM6CONbits	set	4004
   217  0000                     _PWM7CONbits	set	4001
   218  0000                     _PIR0bits	set	3635
   219  0000                     _T0CON1bits	set	4054
   220  0000                     _INTCONbits	set	4082
   221  000E05                     STR_6:
   222                           
   223                           ; BSR set to: 14
   224  000E05  67                 	db	103	;'g'
   225  000E06  6F                 	db	111	;'o'
   226  000E07  20                 	db	32
   227  000E08  62                 	db	98	;'b'
   228  000E09  61                 	db	97	;'a'
   229  000E0A  63                 	db	99	;'c'
   230  000E0B  6B                 	db	107	;'k'
   231  000E0C  20                 	db	32
   232  000E0D  66                 	db	102	;'f'
   233  000E0E  69                 	db	105	;'i'
   234  000E0F  6E                 	db	110	;'n'
   235  000E10  69                 	db	105	;'i'
   236  000E11  73                 	db	115	;'s'
   237  000E12  68                 	db	104	;'h'
   238  000E13  0D                 	db	13
   239  000E14  0A                 	db	10
   240  000E15  00                 	db	0
   241  000E16                     STR_1:
   242                           
   243                           ; BSR set to: 14
   244  000E16  25                 	db	37
   245  000E17  64                 	db	100	;'d'
   246  000E18  09                 	db	9
   247  000E19  25                 	db	37
   248  000E1A  64                 	db	100	;'d'
   249  000E1B  09                 	db	9
   250  000E1C  25                 	db	37
   251  000E1D  64                 	db	100	;'d'
   252  000E1E  09                 	db	9
   253  000E1F  25                 	db	37
   254  000E20  64                 	db	100	;'d'
   255  000E21  0D                 	db	13
   256  000E22  0A                 	db	10
   257  000E23  00                 	db	0
   258  000E24                     STR_3:
   259                           
   260                           ; BSR set to: 14
   261  000E24  72                 	db	114	;'r'
   262  000E25  65                 	db	101	;'e'
   263  000E26  73                 	db	115	;'s'
   264  000E27  75                 	db	117	;'u'
   265  000E28  6C                 	db	108	;'l'
   266  000E29  74                 	db	116	;'t'
   267  000E2A  3A                 	db	58	;':'
   268  000E2B  20                 	db	32
   269  000E2C  25                 	db	37
   270  000E2D  64                 	db	100	;'d'
   271  000E2E  0D                 	db	13
   272  000E2F  0A                 	db	10
   273  000E30  00                 	db	0
   274  000E31                     STR_4:
   275                           
   276                           ; BSR set to: 14
   277  000E31  67                 	db	103	;'g'
   278  000E32  6F                 	db	111	;'o'
   279  000E33  20                 	db	32
   280  000E34  62                 	db	98	;'b'
   281  000E35  61                 	db	97	;'a'
   282  000E36  63                 	db	99	;'c'
   283  000E37  6B                 	db	107	;'k'
   284  000E38  0D                 	db	13
   285  000E39  0A                 	db	10
   286  000E3A  00                 	db	0
   287  000E3B                     STR_5:
   288                           
   289                           ; BSR set to: 14
   290  000E3B  72                 	db	114	;'r'
   291  000E3C  65                 	db	101	;'e'
   292  000E3D  70                 	db	112	;'p'
   293  000E3E  65                 	db	101	;'e'
   294  000E3F  61                 	db	97	;'a'
   295  000E40  74                 	db	116	;'t'
   296  000E41  0D                 	db	13
   297  000E42  0A                 	db	10
   298  000E43  00                 	db	0
   299  000E44  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304  00541A                     __pcinit:
   305                           	callstack 0
   306  00541A                     start_initialization:
   307                           	callstack 0
   308  00541A                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK1 (1 bytes)
   312                           ; load TBLPTR registers with __pidataBANK1
   313  00541A  0E6E               	movlw	low __pidataBANK1
   314  00541C  6EF6               	movwf	tblptrl,c
   315  00541E  0E5C               	movlw	high __pidataBANK1
   316  005420  6EF7               	movwf	tblptrh,c
   317  005422  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   318  005424  6EF8               	movwf	tblptru,c
   319  005426  0009               	tblrd		*+	;fetch initializer
   320  005428  CFF5 F1FA          	movff	tablat,__pdataBANK1
   321                           
   322                           ; Initialize objects allocated to BANK0 (2 bytes)
   323                           ; load TBLPTR registers with __pidataBANK0
   324  00542C  0E6A               	movlw	low __pidataBANK0
   325  00542E  6EF6               	movwf	tblptrl,c
   326  005430  0E5C               	movlw	high __pidataBANK0
   327  005432  6EF7               	movwf	tblptrh,c
   328  005434  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   329  005436  6EF8               	movwf	tblptru,c
   330  005438  0009               	tblrd		*+	;fetch initializer
   331  00543A  CFF5 F0FE          	movff	tablat,__pdataBANK0
   332  00543E  0009               	tblrd		*+	;fetch initializer
   333  005440  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   334                           
   335                           ; Clear objects allocated to BANK3 (108 bytes)
   336  005444  EE03  F000         	lfsr	0,__pbssBANK3
   337  005448  0E6C               	movlw	108
   338  00544A                     clear_0:
   339  00544A  6AEE               	clrf	postinc0,c
   340  00544C  06E8               	decf	wreg,f,c
   341  00544E  E1FD               	bnz	clear_0
   342                           
   343                           ; Clear objects allocated to BANK2 (32 bytes)
   344  005450  EE02  F0C9         	lfsr	0,__pbssBANK2
   345  005454  0E20               	movlw	32
   346  005456                     clear_1:
   347  005456  6AEE               	clrf	postinc0,c
   348  005458  06E8               	decf	wreg,f,c
   349  00545A  E1FD               	bnz	clear_1
   350                           
   351                           ; Clear objects allocated to BANK1 (50 bytes)
   352  00545C  EE01  F0C8         	lfsr	0,__pbssBANK1
   353  005460  0E32               	movlw	50
   354  005462                     clear_2:
   355  005462  6AEE               	clrf	postinc0,c
   356  005464  06E8               	decf	wreg,f,c
   357  005466  E1FD               	bnz	clear_2
   358                           
   359                           ; Clear objects allocated to BANK0 (6 bytes)
   360  005468  0100               	movlb	0
   361  00546A  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   362  00546C  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   363  00546E  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   364  005470  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   365  005472  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   366  005474  6BF8               	clrf	__pbssBANK0& (0+255),b
   367  005476                     end_of_initialization:
   368                           	callstack 0
   369  005476                     __end_of__initialization:
   370                           	callstack 0
   371  005476  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372  005478  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373  00547A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   374  00547C  6EF8               	movwf	tblptru,c
   375  00547E  0E0E               	movlw	high __Lsmallconst
   376  005480  6EF7               	movwf	tblptrh,c
   377  005482  0100               	movlb	0
   378  005484  EF69  F01C         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssBANK0
   381  0000F8                     __pbssBANK0:
   382                           	callstack 0
   383  0000F8                     _flags:
   384                           	callstack 0
   385  0000F8                     	ds	2
   386  0000FA                     _TxBufReadCnt:
   387                           	callstack 0
   388  0000FA                     	ds	1
   389  0000FB                     _TxBufWriteCnt:
   390                           	callstack 0
   391  0000FB                     	ds	1
   392  0000FC                     _RxBufReadCnt:
   393                           	callstack 0
   394  0000FC                     	ds	1
   395  0000FD                     _RxBufWriteCnt:
   396                           	callstack 0
   397  0000FD                     	ds	1
   398                           
   399                           	psect	dataBANK0
   400  0000FE                     __pdataBANK0:
   401                           	callstack 0
   402  0000FE                     _SENSITIVITY:
   403                           	callstack 0
   404  0000FE                     	ds	1
   405  0000FF                     _CALIBRATION_135:
   406                           	callstack 0
   407  0000FF                     	ds	1
   408                           
   409                           	psect	bssBANK1
   410  0001C8                     __pbssBANK1:
   411                           	callstack 0
   412  0001C8                     _EUSART4RXbuf:
   413                           	callstack 0
   414  0001C8                     	ds	20
   415  0001DC                     _motorR:
   416                           	callstack 0
   417  0001DC                     	ds	10
   418  0001E6                     _motorL:
   419                           	callstack 0
   420  0001E6                     	ds	10
   421  0001F0                     roundf@F527:
   422                           	callstack 0
   423  0001F0                     	ds	4
   424  0001F4                     _nout:
   425                           	callstack 0
   426  0001F4                     	ds	2
   427  0001F6                     _width:
   428                           	callstack 0
   429  0001F6                     	ds	2
   430  0001F8                     _prec:
   431                           	callstack 0
   432  0001F8                     	ds	2
   433                           
   434                           	psect	dataBANK1
   435  0001FA                     __pdataBANK1:
   436                           	callstack 0
   437  0001FA                     _CALIBRATION_180:
   438                           	callstack 0
   439  0001FA                     	ds	1
   440                           
   441                           	psect	bssBANK2
   442  0002C9                     __pbssBANK2:
   443                           	callstack 0
   444  0002C9                     _dbuf:
   445                           	callstack 0
   446  0002C9                     	ds	32
   447                           
   448                           	psect	bssBANK3
   449  000300                     __pbssBANK3:
   450                           	callstack 0
   451  000300                     _EUSART4TXbuf:
   452                           	callstack 0
   453  000300                     	ds	60
   454  00033C                     _memory:
   455                           	callstack 0
   456  00033C                     	ds	40
   457  000364                     _stop_move:
   458                           	callstack 0
   459  000364                     	ds	2
   460  000366                     _start_move:
   461                           	callstack 0
   462  000366                     	ds	2
   463  000368                     _second:
   464                           	callstack 0
   465  000368                     	ds	2
   466  00036A                     _color:
   467                           	callstack 0
   468  00036A                     	ds	1
   469  00036B                     _array_index:
   470                           	callstack 0
   471  00036B                     	ds	1
   472                           
   473                           	psect	cstackBANK3
   474  00036C                     __pcstackBANK3:
   475                           	callstack 0
   476  00036C                     main@amb:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x0
   480  00036C                     	ds	8
   481  000374                     main@amb_light:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x8
   485  000374                     	ds	2
   486  000376                     main@stop_signal:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xA
   490  000376                     	ds	1
   491  000377                     main@rgb:
   492                           	callstack 0
   493                           
   494                           ; 8 bytes @ 0xB
   495  000377                     	ds	8
   496  00037F                     main@white:
   497                           	callstack 0
   498                           
   499                           ; 28 bytes @ 0x13
   500  00037F                     	ds	28
   501  00039B                     main@motorL:
   502                           	callstack 0
   503                           
   504                           ; 10 bytes @ 0x2F
   505  00039B                     	ds	10
   506  0003A5                     main@motorR:
   507                           	callstack 0
   508                           
   509                           ; 10 bytes @ 0x39
   510  0003A5                     	ds	10
   511                           
   512                           	psect	cstackBANK2
   513  000200                     __pcstackBANK2:
   514                           	callstack 0
   515  000200                     goback@buf2:
   516                           	callstack 0
   517                           
   518                           ; 100 bytes @ 0x0
   519  000200                     	ds	100
   520  000264                     action@buf:
   521                           	callstack 0
   522                           
   523                           ; 100 bytes @ 0x64
   524  000264                     	ds	100
   525  0002C8                     action@color:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0xC8
   529  0002C8                     	ds	1
   530                           
   531                           	psect	cstackBANK1
   532  000100                     __pcstackBANK1:
   533                           	callstack 0
   534  000100                     goback@buf:
   535                           	callstack 0
   536                           
   537                           ; 100 bytes @ 0x0
   538  000100                     	ds	100
   539  000164                     goback@buf3:
   540                           	callstack 0
   541                           
   542                           ; 100 bytes @ 0x64
   543  000164                     	ds	100
   544                           
   545                           	psect	cstackBANK0
   546  000060                     __pcstackBANK0:
   547                           	callstack 0
   548  000060                     ??___fltol:
   549  000060                     ?_sprintf:
   550                           	callstack 0
   551  000060                     sprintf@s:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x0
   555  000060                     	ds	2
   556  000062                     sprintf@fmt:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x2
   560  000062                     	ds	2
   561  000064                     ___fltol@sign1:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x4
   565  000064                     	ds	1
   566  000065                     ___fltol@exp1:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x5
   570  000065                     	ds	1
   571  000066                     ?_lroundf:
   572                           	callstack 0
   573  000066                     lroundf@x:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x6
   577  000066                     	ds	4
   578  00006A                     ?_amb_light_measure:
   579                           	callstack 0
   580  00006A                     compare@lower:
   581                           	callstack 0
   582  00006A                     amb_light_measure@amb:
   583                           	callstack 0
   584  00006A                     distance_measure@mL:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xA
   588  00006A                     	ds	2
   589  00006C                     ??_amb_light_measure:
   590  00006C                     compare@value2compare:
   591                           	callstack 0
   592  00006C                     distance_measure@mR:
   593                           	callstack 0
   594  00006C                     sprintf@ap:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xC
   598  00006C                     	ds	2
   599  00006E                     compare@upper:
   600                           	callstack 0
   601  00006E                     amb_light_measure@upper_bound:
   602                           	callstack 0
   603  00006E                     distance_measure@amb_light:
   604                           	callstack 0
   605  00006E                     sprintf@f:
   606                           	callstack 0
   607                           
   608                           ; 11 bytes @ 0xE
   609  00006E                     	ds	2
   610  000070                     ??_distance_measure:
   611  000070                     compare@result:
   612                           	callstack 0
   613  000070                     amb_light_measure@CC_amb_ave:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x10
   617  000070                     	ds	1
   618  000071                     detect_color@m:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x11
   622  000071                     	ds	1
   623  000072                     amb_light_measure@CC_amb_1:
   624                           	callstack 0
   625  000072                     distance_measure@CG_amb:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x12
   629  000072                     	ds	1
   630  000073                     detect_color@w:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x13
   634  000073                     	ds	1
   635  000074                     amb_light_measure@CC_amb_2:
   636                           	callstack 0
   637  000074                     _distance_measure$3278:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x14
   641  000074                     	ds	1
   642  000075                     ??_detect_color:
   643                           
   644                           ; 1 bytes @ 0x15
   645  000075                     	ds	1
   646  000076                     amb_light_measure@CC_amb_3:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x16
   650  000076                     	ds	2
   651  000078                     distance_measure@CC_amb:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000078                     	ds	1
   656  000079                     detect_color@RG:
   657                           	callstack 0
   658  000079                     color_display@buf:
   659                           	callstack 0
   660  000079                     color_predict@buf:
   661                           	callstack 0
   662                           
   663                           ; 100 bytes @ 0x19
   664  000079                     	ds	1
   665  00007A                     distance_measure@threshold:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x1A
   669  00007A                     	ds	1
   670  00007B                     detect_color@RB:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x1B
   674  00007B                     	ds	1
   675  00007C                     distance_measure@stop:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x1C
   679  00007C                     	ds	1
   680  00007D                     detect_color@GB:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x1D
   684  00007D                     	ds	2
   685  00007F                     detect_color@BC:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x1F
   689  00007F                     	ds	2
   690  000081                     detect_color@GR:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x21
   694  000081                     	ds	2
   695  000083                     detect_color@RR:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x23
   699  000083                     	ds	2
   700  000085                     detect_color@BB:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x25
   704  000085                     	ds	2
   705  000087                     detect_color@GG:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x27
   709  000087                     	ds	2
   710  000089                     detect_color@BG:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x29
   714  000089                     	ds	2
   715  00008B                     detect_color@color:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x2B
   719  00008B                     	ds	1
   720  00008C                     detect_color@BR:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2C
   724  00008C                     	ds	2
   725  00008E                     _detect_color$3277:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x2E
   729  00008E                     	ds	4
   730  000092                     verify_color@m:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x32
   734  000092                     	ds	2
   735  000094                     verify_color@w:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x34
   739  000094                     	ds	2
   740  000096                     ??_verify_color:
   741                           
   742                           ; 1 bytes @ 0x36
   743  000096                     	ds	2
   744  000098                     verify_color@color2:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x38
   748  000098                     	ds	2
   749  00009A                     verify_color@color:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x3A
   753  00009A                     	ds	67
   754  0000DD                     color_predict@color:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x7D
   758  0000DD                     	ds	1
   759  0000DE                     color_data_collection@i:
   760                           	callstack 0
   761  0000DE                     goback@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x7E
   765  0000DE                     	ds	2
   766  0000E0                     color_data_collection@j:
   767                           	callstack 0
   768  0000E0                     action@mL:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x80
   772  0000E0                     	ds	2
   773  0000E2                     color_data_collection@k:
   774                           	callstack 0
   775  0000E2                     action@mR:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x82
   779  0000E2                     	ds	2
   780  0000E4                     color_data_collection@x:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x84
   784  0000E4                     	ds	2
   785  0000E6                     test_function@m:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x86
   789  0000E6                     	ds	2
   790  0000E8                     test_function@w:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x88
   794  0000E8                     	ds	2
   795  0000EA                     test_function@mL:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x8A
   799  0000EA                     	ds	2
   800  0000EC                     test_function@mR:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x8C
   804  0000EC                     	ds	2
   805  0000EE                     ??_test_function:
   806                           
   807                           ; 1 bytes @ 0x8E
   808  0000EE                     	ds	2
   809  0000F0                     test_function@amb_light:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x90
   813  0000F0                     	ds	2
   814  0000F2                     test_function@complete:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x92
   818  0000F2                     	ds	1
   819  0000F3                     test_function@color:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x93
   823  0000F3                     	ds	1
   824  0000F4                     test_function@stop_signal:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x94
   828  0000F4                     	ds	1
   829  0000F5                     test_function@test_code:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x95
   833  0000F5                     	ds	1
   834  0000F6                     ??_main:
   835                           
   836                           ; 1 bytes @ 0x96
   837  0000F6                     	ds	2
   838                           
   839                           	psect	cstackCOMRAM
   840  000001                     __pcstackCOMRAM:
   841                           	callstack 0
   842  000001                     ??_LED_OFF:
   843  000001                     ??_LED_R:
   844  000001                     ??_LED_C:
   845  000001                     ??_LED_B:
   846  000001                     ??_LED_G:
   847  000001                     ??_I2C_2_Master_Idle:
   848  000001                     ?_strlen:
   849                           	callstack 0
   850  000001                     ?___wmul:
   851                           	callstack 0
   852  000001                     ?___fladd:
   853                           	callstack 0
   854  000001                     ?___flneg:
   855                           	callstack 0
   856  000001                     ?___xxtofl:
   857                           	callstack 0
   858  000001                     ?___aodiv:
   859                           	callstack 0
   860  000001                     ?___aomod:
   861                           	callstack 0
   862  000001                     toggle_light@toggletime:
   863                           	callstack 0
   864  000001                     sendCharSerial4@charToSend:
   865                           	callstack 0
   866  000001                     initDCmotorsPWM@PWMperiod:
   867                           	callstack 0
   868  000001                     initDCmotors_parameter@motorL:
   869                           	callstack 0
   870  000001                     ___wmul@multiplier:
   871                           	callstack 0
   872  000001                     fputc@c:
   873                           	callstack 0
   874  000001                     strlen@s:
   875                           	callstack 0
   876  000001                     ___flge@ff1:
   877                           	callstack 0
   878  000001                     ___flneg@f1:
   879                           	callstack 0
   880  000001                     ___fladd@b:
   881                           	callstack 0
   882  000001                     ___xxtofl@val:
   883                           	callstack 0
   884  000001                     ___aodiv@dividend:
   885                           	callstack 0
   886  000001                     ___aomod@dividend:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x0
   890  000001                     	ds	1
   891  000002                     ??_I2C_2_Master_Read:
   892  000002                     ??_toggle_light:
   893  000002                     I2C_2_Master_Write@data_byte:
   894                           	callstack 0
   895  000002                     sendStringSerial4@string:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x1
   899  000002                     	ds	1
   900  000003                     color_writetoaddr@value:
   901                           	callstack 0
   902  000003                     I2C_2_Master_Read@ack:
   903                           	callstack 0
   904  000003                     initDCmotors_parameter@motorR:
   905                           	callstack 0
   906  000003                     ___wmul@multiplicand:
   907                           	callstack 0
   908  000003                     fputc@fp:
   909                           	callstack 0
   910  000003                     strlen@a:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x2
   914  000003                     	ds	1
   915  000004                     toggle_light@i:
   916                           	callstack 0
   917  000004                     color_writetoaddr@address:
   918                           	callstack 0
   919  000004                     I2C_2_Master_Read@tmp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x3
   923  000004                     	ds	1
   924  000005                     ??_fputc:
   925  000005                     ??_color_click_init:
   926  000005                     ??___xxtofl:
   927  000005                     ?_color_read_Red:
   928                           	callstack 0
   929  000005                     ?_color_read_Blue:
   930                           	callstack 0
   931  000005                     ?_color_read_Green:
   932                           	callstack 0
   933  000005                     ?_color_read_Clear:
   934                           	callstack 0
   935  000005                     toggle_light@lightnumber:
   936                           	callstack 0
   937  000005                     ___wmul@product:
   938                           	callstack 0
   939  000005                     ___flge@ff2:
   940                           	callstack 0
   941  000005                     ___fladd@a:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x4
   945  000005                     	ds	2
   946  000007                     ??_color_read_Red:
   947  000007                     ??_color_read_Blue:
   948  000007                     ??_color_read_Green:
   949  000007                     ??_color_read_Clear:
   950  000007                     ?___awdiv:
   951                           	callstack 0
   952  000007                     ___awdiv@dividend:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x6
   956  000007                     	ds	2
   957  000009                     ??___fladd:
   958  000009                     ??___flge:
   959  000009                     ___xxtofl@sign:
   960                           	callstack 0
   961  000009                     ___awdiv@divisor:
   962                           	callstack 0
   963  000009                     ___aodiv@divisor:
   964                           	callstack 0
   965  000009                     ___aomod@divisor:
   966                           	callstack 0
   967                           
   968                           ; 8 bytes @ 0x8
   969  000009                     	ds	1
   970  00000A                     ___xxtofl@exp:
   971                           	callstack 0
   972  00000A                     color_read_Red@tmp:
   973                           	callstack 0
   974  00000A                     color_read_Blue@tmp:
   975                           	callstack 0
   976  00000A                     color_read_Green@tmp:
   977                           	callstack 0
   978  00000A                     color_read_Clear@tmp:
   979                           	callstack 0
   980  00000A                     fputs@s:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x9
   984  00000A                     	ds	1
   985  00000B                     ___awdiv@counter:
   986                           	callstack 0
   987  00000B                     ___xxtofl@arg:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0xA
   991  00000B                     	ds	1
   992  00000C                     ___awdiv@sign:
   993                           	callstack 0
   994  00000C                     read_color@m:
   995                           	callstack 0
   996  00000C                     calibrate_white@w:
   997                           	callstack 0
   998  00000C                     fputs@fp:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0xB
  1002  00000C                     	ds	1
  1003  00000D                     ___fladd@signs:
  1004                           	callstack 0
  1005  00000D                     ___awdiv@quotient:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0xC
  1009  00000D                     	ds	1
  1010  00000E                     ??_calibrate_white:
  1011  00000E                     ___fladd@aexp:
  1012                           	callstack 0
  1013  00000E                     fputs@c:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0xD
  1017  00000E                     	ds	1
  1018  00000F                     ?___fldiv:
  1019                           	callstack 0
  1020  00000F                     ___fladd@bexp:
  1021                           	callstack 0
  1022  00000F                     setMotorPWM@m:
  1023                           	callstack 0
  1024  00000F                     fputs@i:
  1025                           	callstack 0
  1026  00000F                     ___fldiv@b:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0xE
  1030  00000F                     	ds	1
  1031  000010                     ___fladd@grs:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0xF
  1035  000010                     	ds	1
  1036  000011                     ??_setMotorPWM:
  1037  000011                     ?_pad:
  1038                           	callstack 0
  1039  000011                     ?___flsub:
  1040                           	callstack 0
  1041  000011                     ___aodiv@counter:
  1042                           	callstack 0
  1043  000011                     ___aomod@counter:
  1044                           	callstack 0
  1045  000011                     pad@fp:
  1046                           	callstack 0
  1047  000011                     ___flsub@b:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x10
  1051  000011                     	ds	1
  1052  000012                     ___aodiv@sign:
  1053                           	callstack 0
  1054  000012                     ___aomod@sign:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x11
  1058  000012                     	ds	1
  1059  000013                     ?_abs:
  1060                           	callstack 0
  1061  000013                     pad@buf:
  1062                           	callstack 0
  1063  000013                     abs@a:
  1064                           	callstack 0
  1065  000013                     ___fldiv@a:
  1066                           	callstack 0
  1067  000013                     ___aodiv@quotient:
  1068                           	callstack 0
  1069                           
  1070                           ; 8 bytes @ 0x12
  1071  000013                     	ds	2
  1072  000015                     ??_abs:
  1073  000015                     pad@p:
  1074                           	callstack 0
  1075  000015                     ___flsub@a:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x14
  1079  000015                     	ds	2
  1080  000017                     ??___fldiv:
  1081  000017                     ??_pad:
  1082                           
  1083                           ; 1 bytes @ 0x16
  1084  000017                     	ds	1
  1085  000018                     setMotorPWM@PWMduty:
  1086                           	callstack 0
  1087  000018                     pad@i:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x17
  1091  000018                     	ds	1
  1092  000019                     
  1093                           ; 1 bytes @ 0x18
  1094  000019                     	ds	1
  1095  00001A                     stop@mL:
  1096                           	callstack 0
  1097  00001A                     fullSpeedAhead@mL:
  1098                           	callstack 0
  1099  00001A                     pad@w:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x19
  1103  00001A                     	ds	1
  1104  00001B                     ___fldiv@rem:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1A
  1108  00001B                     	ds	1
  1109  00001C                     ?_dtoa:
  1110                           	callstack 0
  1111  00001C                     stop@mR:
  1112                           	callstack 0
  1113  00001C                     fullSpeedAhead@mR:
  1114                           	callstack 0
  1115  00001C                     dtoa@fp:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x1B
  1119  00001C                     	ds	2
  1120  00001E                     ??_stop:
  1121  00001E                     ??_fullSpeedAhead:
  1122  00001E                     dtoa@d:
  1123                           	callstack 0
  1124                           
  1125                           ; 8 bytes @ 0x1D
  1126  00001E                     	ds	1
  1127  00001F                     ___fldiv@sign:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x1E
  1131  00001F                     	ds	1
  1132  000020                     turnLeft@mL:
  1133                           	callstack 0
  1134  000020                     turnRight@mL:
  1135                           	callstack 0
  1136  000020                     fullSpeedBack@mL:
  1137                           	callstack 0
  1138  000020                     halfSpeedBack@mL:
  1139                           	callstack 0
  1140  000020                     ___fldiv@new_exp:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x1F
  1144  000020                     	ds	2
  1145  000022                     turnLeft@mR:
  1146                           	callstack 0
  1147  000022                     turnRight@mR:
  1148                           	callstack 0
  1149  000022                     fullSpeedBack@mR:
  1150                           	callstack 0
  1151  000022                     halfSpeedBack@mR:
  1152                           	callstack 0
  1153  000022                     ___fldiv@grs:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x21
  1157  000022                     	ds	2
  1158  000024                     ??_fullSpeedBack:
  1159  000024                     ??_halfSpeedBack:
  1160  000024                     turnLeft@angle_left:
  1161                           	callstack 0
  1162  000024                     turnRight@angle_right:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x23
  1166  000024                     	ds	1
  1167  000025                     ??_turnLeft:
  1168  000025                     ??_turnRight:
  1169                           
  1170                           ; 1 bytes @ 0x24
  1171  000025                     	ds	1
  1172  000026                     ??_dtoa:
  1173  000026                     ___fldiv@bexp:
  1174                           	callstack 0
  1175  000026                     turnLeft@delay_135:
  1176                           	callstack 0
  1177  000026                     turnRight@delay_135:
  1178                           	callstack 0
  1179  000026                     short_reverse@mL:
  1180                           	callstack 0
  1181  000026                     reverse_square@mL:
  1182                           	callstack 0
  1183  000026                     short_burst_back@mL:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x25
  1187  000026                     	ds	1
  1188  000027                     ___fldiv@aexp:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x26
  1192  000027                     	ds	1
  1193  000028                     ?___flmul:
  1194                           	callstack 0
  1195  000028                     turnLeft@delay_180:
  1196                           	callstack 0
  1197  000028                     turnRight@delay_180:
  1198                           	callstack 0
  1199  000028                     short_reverse@mR:
  1200                           	callstack 0
  1201  000028                     reverse_square@mR:
  1202                           	callstack 0
  1203  000028                     short_burst_back@mR:
  1204                           	callstack 0
  1205  000028                     ___flmul@b:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x27
  1209  000028                     	ds	2
  1210  00002A                     ??_short_burst_back:
  1211  00002A                     ??_short_reverse:
  1212  00002A                     ??_reverse_square:
  1213  00002A                     turnLeft@i:
  1214                           	callstack 0
  1215  00002A                     turnRight@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x29
  1219  00002A                     	ds	2
  1220  00002C                     turnLeft@i_1333:
  1221                           	callstack 0
  1222  00002C                     turnRight@i_1358:
  1223                           	callstack 0
  1224  00002C                     ___flmul@a:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x2B
  1228  00002C                     	ds	2
  1229  00002E                     turnLeft@i_1334:
  1230                           	callstack 0
  1231  00002E                     turnRight@i_1359:
  1232                           	callstack 0
  1233  00002E                     _dtoa$2913:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x2D
  1237  00002E                     	ds	2
  1238  000030                     ??___flmul:
  1239  000030                     turnLeft@delay:
  1240                           	callstack 0
  1241  000030                     turnRight@delay:
  1242                           	callstack 0
  1243  000030                     dtoa@p:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x2F
  1247  000030                     	ds	2
  1248  000032                     dtoa@w:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x31
  1252  000032                     	ds	2
  1253  000034                     ___flmul@sign:
  1254                           	callstack 0
  1255  000034                     dtoa@s:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x33
  1259  000034                     	ds	1
  1260  000035                     ___flmul@grs:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x34
  1264  000035                     	ds	1
  1265  000036                     dtoa@n:
  1266                           	callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x35
  1269  000036                     	ds	3
  1270  000039                     ___flmul@aexp:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x38
  1274  000039                     	ds	1
  1275  00003A                     ___flmul@bexp:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x39
  1279  00003A                     	ds	1
  1280  00003B                     ___flmul@prod:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x3A
  1284  00003B                     	ds	3
  1285  00003E                     dtoa@i:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x3D
  1289  00003E                     	ds	1
  1290  00003F                     ___flmul@temp:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x3E
  1294  00003F                     	ds	1
  1295  000040                     ?_vfpfcnvrt:
  1296                           	callstack 0
  1297  000040                     vfpfcnvrt@fp:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x3F
  1301  000040                     	ds	1
  1302  000041                     ?_roundf:
  1303                           	callstack 0
  1304  000041                     roundf@x:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x40
  1308  000041                     	ds	1
  1309  000042                     vfpfcnvrt@fmt:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x41
  1313  000042                     	ds	2
  1314  000044                     vfpfcnvrt@ap:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x43
  1318  000044                     	ds	1
  1319  000045                     ??_roundf:
  1320                           
  1321                           ; 1 bytes @ 0x44
  1322  000045                     	ds	1
  1323  000046                     ??_vfpfcnvrt:
  1324                           
  1325                           ; 1 bytes @ 0x45
  1326  000046                     	ds	2
  1327  000048                     vfpfcnvrt@ll:
  1328                           	callstack 0
  1329                           
  1330                           ; 8 bytes @ 0x47
  1331  000048                     	ds	1
  1332  000049                     _roundf$3280:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x48
  1336  000049                     	ds	4
  1337  00004D                     roundf@e:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x4C
  1341  00004D                     	ds	2
  1342  00004F                     _roundf$3279:
  1343                           	callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x4E
  1346  00004F                     	ds	1
  1347  000050                     ?_vfprintf:
  1348                           	callstack 0
  1349  000050                     vfprintf@fp:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x4F
  1353  000050                     	ds	2
  1354  000052                     vfprintf@fmt:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x51
  1358  000052                     	ds	1
  1359  000053                     roundf@u:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x52
  1363  000053                     	ds	1
  1364  000054                     vfprintf@ap:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x53
  1368  000054                     	ds	2
  1369  000056                     vfprintf@cfmt:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x55
  1373  000056                     	ds	1
  1374  000057                     roundf@y:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x56
  1378  000057                     	ds	1
  1379  000058                     color_display@m:
  1380                           	callstack 0
  1381  000058                     goback@mL:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x57
  1385  000058                     	ds	2
  1386  00005A                     color_data_collection@m:
  1387                           	callstack 0
  1388  00005A                     goback@mR:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x59
  1392  00005A                     	ds	1
  1393  00005B                     ?___fltol:
  1394                           	callstack 0
  1395  00005B                     ___fltol@f1:
  1396                           	callstack 0
  1397                           
  1398                           ; 4 bytes @ 0x5A
  1399  00005B                     	ds	1
  1400  00005C                     ??_goback:
  1401  00005C                     ??_color_data_collection:
  1402                           
  1403                           ; 1 bytes @ 0x5B
  1404  00005C                     	ds	2
  1405  00005E                     
  1406                           ; 1 bytes @ 0x5D
  1407  00005E                     	ds	1
  1408  00005F                     
  1409                           ; 1 bytes @ 0x5E
  1410 ;;
  1411 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1412 ;;
  1413 ;; *************** function _main *****************
  1414 ;; Defined at:
  1415 ;;		line 29 in file "main.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  white          28   19[BANK3 ] struct white_card
  1420 ;;  motorR         10   57[BANK3 ] struct DC_motor
  1421 ;;  motorL         10   47[BANK3 ] struct DC_motor
  1422 ;;  rgb             8   11[BANK3 ] struct color_rgb
  1423 ;;  amb             8    0[BANK3 ] struct color_rgb
  1424 ;;  amb_light       2    8[BANK3 ] unsigned int 
  1425 ;;  stop_signal     1   10[BANK3 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Locals:         0       0       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Totals:         0       2       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;Total ram usage:       69 bytes
  1440 ;; Hardware stack levels required when called: 12
  1441 ;; This function calls:
  1442 ;;		_I2C_2_Master_Init
  1443 ;;		_Interrupts_init
  1444 ;;		_Timer0_init
  1445 ;;		_action
  1446 ;;		_amb_light_measure
  1447 ;;		_buggylight_init
  1448 ;;		_calibrate_white
  1449 ;;		_color_click_init
  1450 ;;		_color_predict
  1451 ;;		_detect_color
  1452 ;;		_distance_measure
  1453 ;;		_fullSpeedAhead
  1454 ;;		_initDCmotorsPWM
  1455 ;;		_initDCmotors_parameter
  1456 ;;		_initUSART4
  1457 ;;		_pin_init
  1458 ;;		_short_burst_back
  1459 ;;		_stop
  1460 ;;		_test_function
  1461 ;;		_verify_color
  1462 ;; This function is called by:
  1463 ;;		Startup code after reset
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text0
  1468  0038D2                     __ptext0:
  1469                           	callstack 0
  1470  0038D2                     _main:
  1471                           	callstack 19
  1472  0038D2                     
  1473                           ;main.c: 32:     I2C_2_Master_Init();
  1474  0038D2  EC39  F02D         	call	_I2C_2_Master_Init	;wreg free
  1475  0038D6                     
  1476                           ;main.c: 33:     color_click_init();
  1477  0038D6  ECF0  F02C         	call	_color_click_init	;wreg free
  1478  0038DA                     
  1479                           ;main.c: 34:     initDCmotorsPWM(199);
  1480  0038DA  0E00               	movlw	0
  1481  0038DC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1482  0038DE  0EC7               	movlw	199
  1483  0038E0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1484  0038E2  ECFE  F02B         	call	_initDCmotorsPWM	;wreg free
  1485  0038E6                     
  1486                           ;main.c: 35:     buggylight_init();
  1487  0038E6  EC0F  F02E         	call	_buggylight_init	;wreg free
  1488  0038EA                     
  1489                           ;main.c: 36:     initUSART4();
  1490  0038EA  ECE5  F02D         	call	_initUSART4	;wreg free
  1491  0038EE                     
  1492                           ;main.c: 37:     Timer0_init();
  1493  0038EE  ECF4  F02D         	call	_Timer0_init	;wreg free
  1494  0038F2                     
  1495                           ;main.c: 38:     Interrupts_init();
  1496  0038F2  EC20  F02E         	call	_Interrupts_init	;wreg free
  1497  0038F6                     
  1498                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1499  0038F6  ECC5  F02D         	call	_pin_init	;wreg free
  1500  0038FA                     
  1501                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1502  0038FA  0E9B               	movlw	low main@motorL
  1503  0038FC  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1504  0038FE  0E03               	movlw	high main@motorL
  1505  003900  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1506  003902  0EA5               	movlw	low main@motorR
  1507  003904  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1508  003906  0E03               	movlw	high main@motorR
  1509  003908  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1510  00390A  EC39  F026         	call	_initDCmotors_parameter	;wreg free
  1511  00390E                     
  1512                           ;main.c: 49:     unsigned char stop_signal = 0;
  1513  00390E  0E00               	movlw	0
  1514  003910  0103               	movlb	3	; () banked
  1515  003912  6F76               	movwf	main@stop_signal& (0+255),b
  1516  003914                     
  1517                           ; BSR set to: 3
  1518                           ;main.c: 54:         calibrate_white(&white);
  1519  003914  0E7F               	movlw	low main@white
  1520  003916  6E0C               	movwf	calibrate_white@w^0,c
  1521  003918  0E03               	movlw	high main@white
  1522  00391A  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1523  00391C  EC64  F01B         	call	_calibrate_white	;wreg free
  1524  003920                     
  1525                           ;main.c: 55:         amb_light = amb_light_measure(&amb);
  1526  003920  0E6C               	movlw	low main@amb
  1527  003922  0100               	movlb	0	; () banked
  1528  003924  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1529  003926  0E03               	movlw	high main@amb
  1530  003928  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1531  00392A  EC9F  F024         	call	_amb_light_measure	;wreg free
  1532  00392E  C06A  F374         	movff	?_amb_light_measure,main@amb_light
  1533  003932  C06B  F375         	movff	?_amb_light_measure+1,main@amb_light+1
  1534  003936                     l5618:
  1535                           
  1536                           ;main.c: 66:             T0CON0bits.T0EN=1;
  1537  003936  8ED5               	bsf	213,7,c	;volatile
  1538  003938                     
  1539                           ;main.c: 67:             start_move = second;
  1540  003938  C368  F366         	movff	_second,_start_move
  1541  00393C  C369  F367         	movff	_second+1,_start_move+1
  1542                           
  1543                           ;main.c: 68:             while (stop_signal == 0){
  1544  003940  EFBD  F01C         	goto	l5626
  1545  003944                     l5622:
  1546                           
  1547                           ; BSR set to: 3
  1548                           ;main.c: 69:                 fullSpeedAhead(&motorL, &motorR);
  1549  003944  0E9B               	movlw	low main@motorL
  1550  003946  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1551  003948  0E03               	movlw	high main@motorL
  1552  00394A  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1553  00394C  0EA5               	movlw	low main@motorR
  1554  00394E  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1555  003950  0E03               	movlw	high main@motorR
  1556  003952  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1557  003954  EC4D  F029         	call	_fullSpeedAhead	;wreg free
  1558  003958                     
  1559                           ;main.c: 70:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1560  003958  0E9B               	movlw	low main@motorL
  1561  00395A  0100               	movlb	0	; () banked
  1562  00395C  6F6A               	movwf	distance_measure@mL& (0+255),b
  1563  00395E  0E03               	movlw	high main@motorL
  1564  003960  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1565  003962  0EA5               	movlw	low main@motorR
  1566  003964  6F6C               	movwf	distance_measure@mR& (0+255),b
  1567  003966  0E03               	movlw	high main@motorR
  1568  003968  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1569  00396A  C374  F06E         	movff	main@amb_light,distance_measure@amb_light
  1570  00396E  C375  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1571  003972  EC07  F027         	call	_distance_measure	;wreg free
  1572  003976  0103               	movlb	3	; () banked
  1573  003978  6F76               	movwf	main@stop_signal& (0+255),b
  1574  00397A                     l5626:
  1575                           
  1576                           ;main.c: 68:             while (stop_signal == 0){
  1577  00397A  0103               	movlb	3	; () banked
  1578  00397C  5176               	movf	main@stop_signal& (0+255),w,b
  1579  00397E  B4D8               	btfsc	status,2,c
  1580  003980  EFC4  F01C         	goto	u5611
  1581  003984  EFC6  F01C         	goto	u5610
  1582  003988                     u5611:
  1583  003988  EFA2  F01C         	goto	l5622
  1584  00398C                     u5610:
  1585  00398C                     
  1586                           ; BSR set to: 3
  1587                           ;main.c: 72:             T0CON0bits.T0EN=0;
  1588  00398C  9ED5               	bcf	213,7,c	;volatile
  1589                           
  1590                           ;main.c: 73:             stop_move = second;
  1591  00398E  C368  F364         	movff	_second,_stop_move
  1592  003992  C369  F365         	movff	_second+1,_stop_move+1
  1593  003996                     
  1594                           ; BSR set to: 3
  1595                           ;main.c: 74:             if ((stop_move-start_move)>1){
  1596  003996  5166               	movf	_start_move& (0+255),w,b
  1597  003998  5D64               	subwf	_stop_move& (0+255),w,b
  1598  00399A  0100               	movlb	0	; () banked
  1599  00399C  6FF6               	movwf	??_main& (0+255),b
  1600  00399E  0103               	movlb	3	; () banked
  1601  0039A0  5167               	movf	(_start_move+1)& (0+255),w,b
  1602  0039A2  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1603  0039A4  0100               	movlb	0	; () banked
  1604  0039A6  6FF7               	movwf	(??_main+1)& (0+255),b
  1605  0039A8  51F7               	movf	(??_main+1)& (0+255),w,b
  1606  0039AA  E109               	bnz	u5620
  1607  0039AC  0E02               	movlw	2
  1608  0039AE  5DF6               	subwf	??_main& (0+255),w,b
  1609  0039B0  A0D8               	btfss	status,0,c
  1610  0039B2  EFDD  F01C         	goto	u5621
  1611  0039B6  EFDF  F01C         	goto	u5620
  1612  0039BA                     u5621:
  1613  0039BA  EF0A  F01D         	goto	l5640
  1614  0039BE                     u5620:
  1615  0039BE                     
  1616                           ; BSR set to: 0
  1617                           ;main.c: 75:                 memory[array_index] = (stop_move-start_move);
  1618  0039BE  0103               	movlb	3	; () banked
  1619  0039C0  5166               	movf	_start_move& (0+255),w,b
  1620  0039C2  5D64               	subwf	_stop_move& (0+255),w,b
  1621  0039C4  0100               	movlb	0	; () banked
  1622  0039C6  6FF6               	movwf	??_main& (0+255),b
  1623  0039C8  0103               	movlb	3	; () banked
  1624  0039CA  5167               	movf	(_start_move+1)& (0+255),w,b
  1625  0039CC  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1626  0039CE  0100               	movlb	0	; () banked
  1627  0039D0  6FF7               	movwf	(??_main+1)& (0+255),b
  1628  0039D2  0103               	movlb	3	; () banked
  1629  0039D4  516B               	movf	_array_index& (0+255),w,b
  1630  0039D6  0D02               	mullw	2
  1631  0039D8  0E3C               	movlw	low _memory
  1632  0039DA  24F3               	addwf	243,w,c
  1633  0039DC  6ED9               	movwf	fsr2l,c
  1634  0039DE  0E03               	movlw	high _memory
  1635  0039E0  20F4               	addwfc	prodh,w,c
  1636  0039E2  6EDA               	movwf	fsr2h,c
  1637  0039E4  C0F6  FFDE         	movff	??_main,postinc2
  1638  0039E8  C0F7  FFDD         	movff	??_main+1,postdec2
  1639  0039EC                     
  1640                           ; BSR set to: 3
  1641                           ;main.c: 76:                 color_predict(array_index);
  1642  0039EC  516B               	movf	_array_index& (0+255),w,b
  1643  0039EE  EC22  F02D         	call	_color_predict
  1644  0039F2                     
  1645                           ;main.c: 77:                 color_predict(memory[array_index]);
  1646  0039F2  0103               	movlb	3	; () banked
  1647  0039F4  516B               	movf	_array_index& (0+255),w,b
  1648  0039F6  0D02               	mullw	2
  1649  0039F8  0E3C               	movlw	low _memory
  1650  0039FA  24F3               	addwf	243,w,c
  1651  0039FC  6ED9               	movwf	fsr2l,c
  1652  0039FE  0E03               	movlw	high _memory
  1653  003A00  20F4               	addwfc	prodh,w,c
  1654  003A02  6EDA               	movwf	fsr2h,c
  1655  003A04  50DF               	movf	indf2,w,c
  1656  003A06  EC22  F02D         	call	_color_predict
  1657  003A0A                     
  1658                           ;main.c: 78:                 color_predict(200);
  1659  003A0A  0EC8               	movlw	200
  1660  003A0C  EC22  F02D         	call	_color_predict
  1661  003A10                     
  1662                           ;main.c: 79:                 array_index++;
  1663  003A10  0103               	movlb	3	; () banked
  1664  003A12  2B6B               	incf	_array_index& (0+255),f,b
  1665  003A14                     l5640:
  1666                           
  1667                           ;main.c: 81:             stop(&motorL, &motorR);
  1668  003A14  0E9B               	movlw	low main@motorL
  1669  003A16  6E1A               	movwf	stop@mL^0,c
  1670  003A18  0E03               	movlw	high main@motorL
  1671  003A1A  6E1B               	movwf	(stop@mL+1)^0,c
  1672  003A1C  0EA5               	movlw	low main@motorR
  1673  003A1E  6E1C               	movwf	stop@mR^0,c
  1674  003A20  0E03               	movlw	high main@motorR
  1675  003A22  6E1D               	movwf	(stop@mR+1)^0,c
  1676  003A24  ECEF  F028         	call	_stop	;wreg free
  1677  003A28                     
  1678                           ;main.c: 82:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1679  003A28  0E52               	movlw	82
  1680  003A2A  0100               	movlb	0	; () banked
  1681  003A2C  6FF7               	movwf	(??_main+1)& (0+255),b
  1682  003A2E  0E2B               	movlw	43
  1683  003A30  6FF6               	movwf	??_main& (0+255),b
  1684  003A32  0E00               	movlw	0
  1685  003A34                     u5707:
  1686  003A34  2EE8               	decfsz	wreg,f,c
  1687  003A36  D7FE               	bra	u5707
  1688  003A38  2FF6               	decfsz	??_main& (0+255),f,b
  1689  003A3A  D7FC               	bra	u5707
  1690  003A3C  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1691  003A3E  D7FA               	bra	u5707
  1692  003A40  F000               	nop	
  1693  003A42                     
  1694                           ;main.c: 83:             short_burst_back(&motorL, &motorR);
  1695  003A42  0E9B               	movlw	low main@motorL
  1696  003A44  6E26               	movwf	short_burst_back@mL^0,c
  1697  003A46  0E03               	movlw	high main@motorL
  1698  003A48  6E27               	movwf	(short_burst_back@mL+1)^0,c
  1699  003A4A  0EA5               	movlw	low main@motorR
  1700  003A4C  6E28               	movwf	short_burst_back@mR^0,c
  1701  003A4E  0E03               	movlw	high main@motorR
  1702  003A50  6E29               	movwf	(short_burst_back@mR+1)^0,c
  1703  003A52  ECA4  F02A         	call	_short_burst_back	;wreg free
  1704  003A56                     
  1705                           ;main.c: 84:             color = detect_color(&rgb, &white);
  1706  003A56  0E77               	movlw	low main@rgb
  1707  003A58  0100               	movlb	0	; () banked
  1708  003A5A  6F71               	movwf	detect_color@m& (0+255),b
  1709  003A5C  0E03               	movlw	high main@rgb
  1710  003A5E  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1711  003A60  0E7F               	movlw	low main@white
  1712  003A62  6F73               	movwf	detect_color@w& (0+255),b
  1713  003A64  0E03               	movlw	high main@white
  1714  003A66  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1715  003A68  EC23  F007         	call	_detect_color	;wreg free
  1716  003A6C  0103               	movlb	3	; () banked
  1717  003A6E  6F6A               	movwf	_color& (0+255),b
  1718  003A70                     
  1719                           ; BSR set to: 3
  1720                           ;main.c: 85:             color = verify_color(color, &rgb, &white);
  1721  003A70  0E77               	movlw	low main@rgb
  1722  003A72  0100               	movlb	0	; () banked
  1723  003A74  6F92               	movwf	verify_color@m& (0+255),b
  1724  003A76  0E03               	movlw	high main@rgb
  1725  003A78  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1726  003A7A  0E7F               	movlw	low main@white
  1727  003A7C  6F94               	movwf	verify_color@w& (0+255),b
  1728  003A7E  0E03               	movlw	high main@white
  1729  003A80  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1730  003A82  0103               	movlb	3	; () banked
  1731  003A84  516A               	movf	_color& (0+255),w,b
  1732  003A86  EC97  F029         	call	_verify_color
  1733  003A8A  0103               	movlb	3	; () banked
  1734  003A8C  6F6A               	movwf	_color& (0+255),b
  1735  003A8E                     
  1736                           ; BSR set to: 3
  1737                           ;main.c: 88:             action(color, &motorL, &motorR);
  1738  003A8E  0E9B               	movlw	low main@motorL
  1739  003A90  0100               	movlb	0	; () banked
  1740  003A92  6FE0               	movwf	action@mL& (0+255),b
  1741  003A94  0E03               	movlw	high main@motorL
  1742  003A96  6FE1               	movwf	(action@mL+1)& (0+255),b
  1743  003A98  0EA5               	movlw	low main@motorR
  1744  003A9A  6FE2               	movwf	action@mR& (0+255),b
  1745  003A9C  0E03               	movlw	high main@motorR
  1746  003A9E  6FE3               	movwf	(action@mR+1)& (0+255),b
  1747  003AA0  0103               	movlb	3	; () banked
  1748  003AA2  516A               	movf	_color& (0+255),w,b
  1749  003AA4  EC15  F017         	call	_action
  1750  003AA8                     
  1751                           ;main.c: 89:             color = 0;
  1752  003AA8  0E00               	movlw	0
  1753  003AAA  0103               	movlb	3	; () banked
  1754  003AAC  6F6A               	movwf	_color& (0+255),b
  1755  003AAE                     
  1756                           ; BSR set to: 3
  1757                           ;main.c: 90:             stop_signal = 0;
  1758  003AAE  0E00               	movlw	0
  1759  003AB0  6F76               	movwf	main@stop_signal& (0+255),b
  1760  003AB2  EF9B  F01C         	goto	l5618
  1761  003AB6  EF14  F000         	goto	start
  1762  003ABA                     __end_of_main:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _verify_color *****************
  1766 ;; Defined at:
  1767 ;;		line 362 in file "color.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  color           1    wreg     unsigned char 
  1770 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1771 ;;		 -> main@rgb(8), 
  1772 ;;  w               2   52[BANK0 ] PTR struct white_card
  1773 ;;		 -> main@white(28), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  color           1   58[BANK0 ] unsigned char 
  1776 ;;  color2          2   56[BANK0 ] unsigned int 
  1777 ;;  color3          2    0        unsigned int 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      unsigned char 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;Total ram usage:        9 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 6
  1794 ;; This function calls:
  1795 ;;		_detect_color
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text1
  1802  00532E                     __ptext1:
  1803                           	callstack 0
  1804  00532E                     _verify_color:
  1805                           	callstack 24
  1806                           
  1807                           ; BSR set to: 3
  1808                           ;incstack = 0
  1809                           ;verify_color@color stored from wreg
  1810  00532E  0100               	movlb	0	; () banked
  1811  005330  6F9A               	movwf	verify_color@color& (0+255),b
  1812  005332                     
  1813                           ;color.c: 362: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 363: {;color.c: 364:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1814  005332  0E05               	movlw	5
  1815  005334  0100               	movlb	0	; () banked
  1816  005336  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1817  005338  0E0F               	movlw	15
  1818  00533A  6F96               	movwf	??_verify_color& (0+255),b
  1819  00533C  0EF1               	movlw	241
  1820  00533E                     u5717:
  1821  00533E  2EE8               	decfsz	wreg,f,c
  1822  005340  D7FE               	bra	u5717
  1823  005342  2F96               	decfsz	??_verify_color& (0+255),f,b
  1824  005344  D7FC               	bra	u5717
  1825  005346  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1826  005348  D7FA               	bra	u5717
  1827  00534A                     
  1828                           ;color.c: 365:     unsigned int color2, color3;;color.c: 366:     color2 = detect_color(
      +                          m,w);
  1829  00534A  C092  F071         	movff	verify_color@m,detect_color@m
  1830  00534E  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1831  005352  C094  F073         	movff	verify_color@w,detect_color@w
  1832  005356  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1833  00535A  EC23  F007         	call	_detect_color	;wreg free
  1834  00535E  0100               	movlb	0	; () banked
  1835  005360  6F96               	movwf	??_verify_color& (0+255),b
  1836  005362  5196               	movf	??_verify_color& (0+255),w,b
  1837  005364  6F98               	movwf	verify_color@color2& (0+255),b
  1838  005366  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1839  005368                     
  1840                           ; BSR set to: 0
  1841                           ;color.c: 367:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1842  005368  0E05               	movlw	5
  1843  00536A  0100               	movlb	0	; () banked
  1844  00536C  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1845  00536E  0E0F               	movlw	15
  1846  005370  6F96               	movwf	??_verify_color& (0+255),b
  1847  005372  0EF1               	movlw	241
  1848  005374                     u5727:
  1849  005374  2EE8               	decfsz	wreg,f,c
  1850  005376  D7FE               	bra	u5727
  1851  005378  2F96               	decfsz	??_verify_color& (0+255),f,b
  1852  00537A  D7FC               	bra	u5727
  1853  00537C  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1854  00537E  D7FA               	bra	u5727
  1855  005380                     
  1856                           ;color.c: 369:     if (color == color2){return color;}
  1857  005380  0100               	movlb	0	; () banked
  1858  005382  519A               	movf	verify_color@color& (0+255),w,b
  1859  005384  6F96               	movwf	??_verify_color& (0+255),b
  1860  005386  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1861  005388  5198               	movf	verify_color@color2& (0+255),w,b
  1862  00538A  1996               	xorwf	??_verify_color& (0+255),w,b
  1863  00538C  E107               	bnz	u5361
  1864  00538E  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1865  005390  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1866  005392  A4D8               	btfss	status,2,c
  1867  005394  EFCE  F029         	goto	u5361
  1868  005398  EFD0  F029         	goto	u5360
  1869  00539C                     u5361:
  1870  00539C  EFD3  F029         	goto	l5362
  1871  0053A0                     u5360:
  1872  0053A0                     
  1873                           ; BSR set to: 0
  1874  0053A0  519A               	movf	verify_color@color& (0+255),w,b
  1875  0053A2  EFD4  F029         	goto	l167
  1876  0053A6                     l5362:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;color.c: 372:         return color;}
  1880  0053A6  0E00               	movlw	0
  1881  0053A8                     l167:
  1882                           
  1883                           ; BSR set to: 0
  1884  0053A8  0012               	return		;funcret
  1885  0053AA                     __end_of_verify_color:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function _test_function *****************
  1889 ;; Defined at:
  1890 ;;		line 16 in file "test_and_calibration.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  test_code       1    wreg     unsigned char 
  1893 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1894 ;;		 -> main@rgb(8), 
  1895 ;;  w               2  136[BANK0 ] PTR struct white_card
  1896 ;;		 -> main@white(28), 
  1897 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1898 ;;		 -> main@motorL(10), 
  1899 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1900 ;;		 -> main@motorR(10), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  test_code       1  149[BANK0 ] unsigned char 
  1903 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1904 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1905 ;;  color           1  147[BANK0 ] unsigned char 
  1906 ;;  complete        1  146[BANK0 ] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1916 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;Total ram usage:       16 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 11
  1923 ;; This function calls:
  1924 ;;		_LED_C
  1925 ;;		_amb_light_measure
  1926 ;;		_calibrate_white
  1927 ;;		_color_data_collection
  1928 ;;		_color_display
  1929 ;;		_color_predict
  1930 ;;		_detect_color
  1931 ;;		_distance_measure
  1932 ;;		_fullSpeedAhead
  1933 ;;		_read_color
  1934 ;;		_stop
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text2
  1941  0044C8                     __ptext2:
  1942                           	callstack 0
  1943  0044C8                     _test_function:
  1944                           	callstack 19
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;incstack = 0
  1948                           ;test_function@test_code stored from wreg
  1949  0044C8  0100               	movlb	0	; () banked
  1950  0044CA  6FF5               	movwf	test_function@test_code& (0+255),b
  1951  0044CC                     
  1952                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1953  0044CC  0E00               	movlw	0
  1954  0044CE  0100               	movlb	0	; () banked
  1955  0044D0  6FF2               	movwf	test_function@complete& (0+255),b
  1956                           
  1957                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1958  0044D2  0E00               	movlw	0
  1959  0044D4  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1960                           
  1961                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1962  0044D6  0E00               	movlw	0
  1963  0044D8  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1964  0044DA  0E00               	movlw	0
  1965  0044DC  6FF0               	movwf	test_function@amb_light& (0+255),b
  1966  0044DE                     
  1967                           ; BSR set to: 0
  1968                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1969  0044DE  0E02               	movlw	2
  1970  0044E0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1971  0044E2  A4D8               	btfss	status,2,c
  1972  0044E4  EF76  F022         	goto	u5391
  1973  0044E8  EF78  F022         	goto	u5390
  1974  0044EC                     u5391:
  1975  0044EC  EF7E  F022         	goto	l5422
  1976  0044F0                     u5390:
  1977  0044F0                     
  1978                           ; BSR set to: 0
  1979  0044F0  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1980  0044F4  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1981  0044F8  EC64  F01B         	call	_calibrate_white	;wreg free
  1982  0044FC                     l5422:
  1983                           
  1984                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1985  0044FC  0E04               	movlw	4
  1986  0044FE  0100               	movlb	0	; () banked
  1987  004500  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1988  004502  A4D8               	btfss	status,2,c
  1989  004504  EF86  F022         	goto	u5401
  1990  004508  EF88  F022         	goto	u5400
  1991  00450C                     u5401:
  1992  00450C  EF92  F022         	goto	l5426
  1993  004510                     u5400:
  1994  004510                     
  1995                           ; BSR set to: 0
  1996  004510  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1997  004514  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1998  004518  EC9F  F024         	call	_amb_light_measure	;wreg free
  1999  00451C  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  2000  004520  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2001  004524                     l5426:
  2002                           
  2003                           ;test_and_calibration.c: 28:         if (test_code == 1){
  2004  004524  0100               	movlb	0	; () banked
  2005  004526  05F5               	decf	test_function@test_code& (0+255),w,b
  2006  004528  A4D8               	btfss	status,2,c
  2007  00452A  EF99  F022         	goto	u5411
  2008  00452E  EF9B  F022         	goto	u5410
  2009  004532                     u5411:
  2010  004532  EFA9  F022         	goto	l5434
  2011  004536                     u5410:
  2012  004536                     
  2013                           ; BSR set to: 0
  2014                           ;test_and_calibration.c: 29:             LED_C();
  2015  004536  ECB5  F02D         	call	_LED_C	;wreg free
  2016  00453A                     
  2017                           ;test_and_calibration.c: 30:             read_color(m);
  2018  00453A  C0E6  F00C         	movff	test_function@m,read_color@m
  2019  00453E  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2020  004542  EC75  F02A         	call	_read_color	;wreg free
  2021  004546                     
  2022                           ;test_and_calibration.c: 31:             color_display(m);
  2023  004546  C0E6  F058         	movff	test_function@m,color_display@m
  2024  00454A  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2025  00454E  ECD5  F029         	call	_color_display	;wreg free
  2026  004552                     l5434:
  2027                           
  2028                           ;test_and_calibration.c: 34:         if (test_code == 2){
  2029  004552  0E02               	movlw	2
  2030  004554  0100               	movlb	0	; () banked
  2031  004556  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2032  004558  A4D8               	btfss	status,2,c
  2033  00455A  EFB1  F022         	goto	u5421
  2034  00455E  EFB3  F022         	goto	u5420
  2035  004562                     u5421:
  2036  004562  EFC2  F022         	goto	l5440
  2037  004566                     u5420:
  2038  004566                     
  2039                           ; BSR set to: 0
  2040                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  2041  004566  C0E6  F071         	movff	test_function@m,detect_color@m
  2042  00456A  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2043  00456E  C0E8  F073         	movff	test_function@w,detect_color@w
  2044  004572  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2045  004576  EC23  F007         	call	_detect_color	;wreg free
  2046  00457A  0100               	movlb	0	; () banked
  2047  00457C  6FF3               	movwf	test_function@color& (0+255),b
  2048  00457E                     
  2049                           ; BSR set to: 0
  2050                           ;test_and_calibration.c: 37:             color_predict(color);
  2051  00457E  51F3               	movf	test_function@color& (0+255),w,b
  2052  004580  EC22  F02D         	call	_color_predict
  2053  004584                     l5440:
  2054                           
  2055                           ;test_and_calibration.c: 40:         if (test_code == 3){
  2056  004584  0E03               	movlw	3
  2057  004586  0100               	movlb	0	; () banked
  2058  004588  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2059  00458A  A4D8               	btfss	status,2,c
  2060  00458C  EFCA  F022         	goto	u5431
  2061  004590  EFCC  F022         	goto	u5430
  2062  004594                     u5431:
  2063  004594  EFDF  F022         	goto	l5450
  2064  004598                     u5430:
  2065  004598  EFD7  F022         	goto	l5448
  2066  00459C                     l5444:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  2070  00459C  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  2071  0045A0  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2072  0045A4  EC47  F01E         	call	_color_data_collection	;wreg free
  2073  0045A8                     
  2074                           ;test_and_calibration.c: 43:                 complete = 1;
  2075  0045A8  0E01               	movlw	1
  2076  0045AA  0100               	movlb	0	; () banked
  2077  0045AC  6FF2               	movwf	test_function@complete& (0+255),b
  2078  0045AE                     l5448:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;test_and_calibration.c: 41:             while (complete == 0){
  2082  0045AE  51F2               	movf	test_function@complete& (0+255),w,b
  2083  0045B0  B4D8               	btfsc	status,2,c
  2084  0045B2  EFDD  F022         	goto	u5441
  2085  0045B6  EFDF  F022         	goto	u5440
  2086  0045BA                     u5441:
  2087  0045BA  EFCE  F022         	goto	l5444
  2088  0045BE                     u5440:
  2089  0045BE                     l5450:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;test_and_calibration.c: 47:         if (test_code == 4){
  2093  0045BE  0E04               	movlw	4
  2094  0045C0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2095  0045C2  A4D8               	btfss	status,2,c
  2096  0045C4  EFE6  F022         	goto	u5451
  2097  0045C8  EFE8  F022         	goto	u5450
  2098  0045CC                     u5451:
  2099  0045CC  EF92  F022         	goto	l5426
  2100  0045D0                     u5450:
  2101  0045D0  EF04  F023         	goto	l5458
  2102  0045D4                     l5454:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  2106  0045D4  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  2107  0045D8  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  2108  0045DC  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  2109  0045E0  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  2110  0045E4  EC4D  F029         	call	_fullSpeedAhead	;wreg free
  2111  0045E8                     
  2112                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  2113  0045E8  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  2114  0045EC  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  2115  0045F0  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  2116  0045F4  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  2117  0045F8  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  2118  0045FC  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  2119  004600  EC07  F027         	call	_distance_measure	;wreg free
  2120  004604  0100               	movlb	0	; () banked
  2121  004606  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2122  004608                     l5458:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  2126  004608  51F4               	movf	test_function@stop_signal& (0+255),w,b
  2127  00460A  B4D8               	btfsc	status,2,c
  2128  00460C  EF0A  F023         	goto	u5461
  2129  004610  EF0C  F023         	goto	u5460
  2130  004614                     u5461:
  2131  004614  EFEA  F022         	goto	l5454
  2132  004618                     u5460:
  2133  004618                     
  2134                           ; BSR set to: 0
  2135                           ;test_and_calibration.c: 52:             stop(mL, mR);
  2136  004618  C0EA  F01A         	movff	test_function@mL,stop@mL
  2137  00461C  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  2138  004620  C0EC  F01C         	movff	test_function@mR,stop@mR
  2139  004624  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  2140  004628  ECEF  F028         	call	_stop	;wreg free
  2141  00462C                     
  2142                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  2143  00462C  0E52               	movlw	82
  2144  00462E  0100               	movlb	0	; () banked
  2145  004630  6FEF               	movwf	(??_test_function+1)& (0+255),b
  2146  004632  0E2B               	movlw	43
  2147  004634  6FEE               	movwf	??_test_function& (0+255),b
  2148  004636  0E00               	movlw	0
  2149  004638                     u5737:
  2150  004638  2EE8               	decfsz	wreg,f,c
  2151  00463A  D7FE               	bra	u5737
  2152  00463C  2FEE               	decfsz	??_test_function& (0+255),f,b
  2153  00463E  D7FC               	bra	u5737
  2154  004640  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  2155  004642  D7FA               	bra	u5737
  2156  004644  F000               	nop	
  2157  004646                     
  2158                           ;test_and_calibration.c: 54:             stop_signal = 0;
  2159  004646  0E00               	movlw	0
  2160  004648  0100               	movlb	0	; () banked
  2161  00464A  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2162  00464C  EF92  F022         	goto	l5426
  2163  004650  0012               	return		;funcret
  2164  004652                     __end_of_test_function:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _distance_measure *****************
  2168 ;; Defined at:
  2169 ;;		line 398 in file "color.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2172 ;;		 -> main@motorL(10), 
  2173 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2174 ;;		 -> main@motorR(10), 
  2175 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  threshold       2   26[BANK0 ] unsigned int 
  2178 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2179 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2180 ;;  stop            1   28[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;Total ram usage:       19 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 5
  2197 ;; This function calls:
  2198 ;;		_LED_C
  2199 ;;		___flmul
  2200 ;;		___xxtofl
  2201 ;;		_color_read_Clear
  2202 ;;		_color_read_Green
  2203 ;;		_lroundf
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;;		_test_function
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text3
  2211  004E0E                     __ptext3:
  2212                           	callstack 0
  2213  004E0E                     _distance_measure:
  2214                           	callstack 24
  2215  004E0E  0E00               	movlw	0
  2216  004E10  0100               	movlb	0	; () banked
  2217  004E12  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2218  004E14  0E00               	movlw	0
  2219  004E16  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2220                           
  2221                           ;color.c: 401:     unsigned char stop = 0;
  2222  004E18  0E00               	movlw	0
  2223  004E1A  6F7C               	movwf	distance_measure@stop& (0+255),b
  2224                           
  2225                           ;color.c: 402:     unsigned int threshold = 0;
  2226  004E1C  0E00               	movlw	0
  2227  004E1E  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2228  004E20  0E00               	movlw	0
  2229  004E22  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2230  004E24                     
  2231                           ; BSR set to: 0
  2232                           ;color.c: 403:     LED_C();
  2233  004E24  ECB5  F02D         	call	_LED_C	;wreg free
  2234  004E28                     
  2235                           ;color.c: 404:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2236  004E28  0E09               	movlw	9
  2237  004E2A  0100               	movlb	0	; () banked
  2238  004E2C  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2239  004E2E  0E1E               	movlw	30
  2240  004E30  6F70               	movwf	??_distance_measure& (0+255),b
  2241  004E32  0EE4               	movlw	228
  2242  004E34                     u5747:
  2243  004E34  2EE8               	decfsz	wreg,f,c
  2244  004E36  D7FE               	bra	u5747
  2245  004E38  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2246  004E3A  D7FC               	bra	u5747
  2247  004E3C  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2248  004E3E  D7FA               	bra	u5747
  2249  004E40  F000               	nop	
  2250  004E42                     
  2251                           ;color.c: 405:     CC_amb = color_read_Clear();
  2252  004E42  EC70  F02B         	call	_color_read_Clear	;wreg free
  2253  004E46  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2254  004E4A  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2255  004E4E  EC20  F02B         	call	_color_read_Green	;wreg free
  2256  004E52                     
  2257                           ;color.c: 407:     threshold = lroundf((float)amb_light * 1.05);
  2258  004E52  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2259  004E56  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2260  004E5A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2261  004E5C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2262  004E5E  0E00               	movlw	0
  2263  004E60  EC22  F01F         	call	___xxtofl
  2264  004E64  C001  F028         	movff	?___xxtofl,___flmul@b
  2265  004E68  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2266  004E6C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2267  004E70  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2268  004E74  0E66               	movlw	102
  2269  004E76  6E2C               	movwf	___flmul@a^0,c
  2270  004E78  0E66               	movlw	102
  2271  004E7A  6E2D               	movwf	(___flmul@a+1)^0,c
  2272  004E7C  0E86               	movlw	134
  2273  004E7E  6E2E               	movwf	(___flmul@a+2)^0,c
  2274  004E80  0E3F               	movlw	63
  2275  004E82  6E2F               	movwf	(___flmul@a+3)^0,c
  2276  004E84  ECA6  F00F         	call	___flmul	;wreg free
  2277  004E88  C028  F074         	movff	?___flmul,_distance_measure$3278
  2278  004E8C  C029  F075         	movff	?___flmul+1,_distance_measure$3278+1
  2279  004E90  C02A  F076         	movff	?___flmul+2,_distance_measure$3278+2
  2280  004E94  C02B  F077         	movff	?___flmul+3,_distance_measure$3278+3
  2281  004E98                     
  2282                           ;color.c: 407:     threshold = lroundf((float)amb_light * 1.05);
  2283  004E98  C074  F066         	movff	_distance_measure$3278,lroundf@x
  2284  004E9C  C075  F067         	movff	_distance_measure$3278+1,lroundf@x+1
  2285  004EA0  C076  F068         	movff	_distance_measure$3278+2,lroundf@x+2
  2286  004EA4  C077  F069         	movff	_distance_measure$3278+3,lroundf@x+3
  2287  004EA8  EC9C  F02C         	call	_lroundf	;wreg free
  2288  004EAC  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2289  004EB0  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2290  004EB4                     
  2291                           ;color.c: 410:     if (CC_amb >= threshold){stop = 1;}
  2292  004EB4  0100               	movlb	0	; () banked
  2293  004EB6  517A               	movf	distance_measure@threshold& (0+255),w,b
  2294  004EB8  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2295  004EBA  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2296  004EBC  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2297  004EBE  A0D8               	btfss	status,0,c
  2298  004EC0  EF64  F027         	goto	u5241
  2299  004EC4  EF66  F027         	goto	u5240
  2300  004EC8                     u5241:
  2301  004EC8  EF68  F027         	goto	l174
  2302  004ECC                     u5240:
  2303  004ECC                     
  2304                           ; BSR set to: 0
  2305  004ECC  0E01               	movlw	1
  2306  004ECE  6F7C               	movwf	distance_measure@stop& (0+255),b
  2307  004ED0                     l174:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;color.c: 411:     return stop;
  2311  004ED0  517C               	movf	distance_measure@stop& (0+255),w,b
  2312  004ED2                     
  2313                           ; BSR set to: 0
  2314  004ED2  0012               	return		;funcret
  2315  004ED4                     __end_of_distance_measure:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _detect_color *****************
  2319 ;; Defined at:
  2320 ;;		line 287 in file "color.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2323 ;;		 -> main@rgb(8), 
  2324 ;;  w               2   19[BANK0 ] PTR struct white_card
  2325 ;;		 -> main@white(28), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  buf           100    0        unsigned char [100]
  2328 ;;  BR              2   44[BANK0 ] unsigned int 
  2329 ;;  BG              2   41[BANK0 ] unsigned int 
  2330 ;;  GG              2   39[BANK0 ] unsigned int 
  2331 ;;  BB              2   37[BANK0 ] unsigned int 
  2332 ;;  RR              2   35[BANK0 ] unsigned int 
  2333 ;;  GR              2   33[BANK0 ] unsigned int 
  2334 ;;  BC              2   31[BANK0 ] unsigned int 
  2335 ;;  GB              2   29[BANK0 ] unsigned int 
  2336 ;;  RB              2   27[BANK0 ] unsigned int 
  2337 ;;  RG              2   25[BANK0 ] unsigned int 
  2338 ;;  color           1   43[BANK0 ] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      unsigned char 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;Total ram usage:       33 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 5
  2355 ;; This function calls:
  2356 ;;		_LED_B
  2357 ;;		_LED_G
  2358 ;;		_LED_R
  2359 ;;		___fldiv
  2360 ;;		___flmul
  2361 ;;		___wmul
  2362 ;;		___xxtofl
  2363 ;;		_compare
  2364 ;;		_lroundf
  2365 ;;		_read_color
  2366 ;;		_toggle_light
  2367 ;; This function is called by:
  2368 ;;		_verify_color
  2369 ;;		_main
  2370 ;;		_test_function
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text4
  2375  000E46                     __ptext4:
  2376                           	callstack 0
  2377  000E46                     _detect_color:
  2378                           	callstack 24
  2379  000E46  0E00               	movlw	0
  2380  000E48  0100               	movlb	0	; () banked
  2381  000E4A  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2382  000E4C  0E00               	movlw	0
  2383  000E4E  6F79               	movwf	detect_color@RG& (0+255),b
  2384  000E50  0E00               	movlw	0
  2385  000E52  6F7C               	movwf	(detect_color@RB+1)& (0+255),b
  2386  000E54  0E00               	movlw	0
  2387  000E56  6F7B               	movwf	detect_color@RB& (0+255),b
  2388  000E58  0E00               	movlw	0
  2389  000E5A  6F82               	movwf	(detect_color@GR+1)& (0+255),b
  2390  000E5C  0E00               	movlw	0
  2391  000E5E  6F81               	movwf	detect_color@GR& (0+255),b
  2392  000E60  0E00               	movlw	0
  2393  000E62  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2394  000E64  0E00               	movlw	0
  2395  000E66  6F87               	movwf	detect_color@GG& (0+255),b
  2396  000E68  0E00               	movlw	0
  2397  000E6A  6F7E               	movwf	(detect_color@GB+1)& (0+255),b
  2398  000E6C  0E00               	movlw	0
  2399  000E6E  6F7D               	movwf	detect_color@GB& (0+255),b
  2400  000E70  0E00               	movlw	0
  2401  000E72  6F8D               	movwf	(detect_color@BR+1)& (0+255),b
  2402  000E74  0E00               	movlw	0
  2403  000E76  6F8C               	movwf	detect_color@BR& (0+255),b
  2404  000E78  0E00               	movlw	0
  2405  000E7A  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2406  000E7C  0E00               	movlw	0
  2407  000E7E  6F89               	movwf	detect_color@BG& (0+255),b
  2408  000E80  0E00               	movlw	0
  2409  000E82  6F86               	movwf	(detect_color@BB+1)& (0+255),b
  2410  000E84  0E00               	movlw	0
  2411  000E86  6F85               	movwf	detect_color@BB& (0+255),b
  2412  000E88  0E00               	movlw	0
  2413  000E8A  6F80               	movwf	(detect_color@BC+1)& (0+255),b
  2414  000E8C  0E00               	movlw	0
  2415  000E8E  6F7F               	movwf	detect_color@BC& (0+255),b
  2416                           
  2417                           ;color.c: 294:     unsigned char color = 0;
  2418  000E90  0E00               	movlw	0
  2419  000E92  6F8B               	movwf	detect_color@color& (0+255),b
  2420  000E94                     
  2421                           ; BSR set to: 0
  2422                           ;color.c: 296:     LED_R();
  2423  000E94  EC75  F02D         	call	_LED_R	;wreg free
  2424  000E98                     
  2425                           ;color.c: 297:     read_color(m);
  2426  000E98  C071  F00C         	movff	detect_color@m,read_color@m
  2427  000E9C  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2428  000EA0  EC75  F02A         	call	_read_color	;wreg free
  2429  000EA4                     
  2430                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2431  000EA4  C073  FFD9         	movff	detect_color@w,fsr2l
  2432  000EA8  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2433  000EAC  CFDE F075          	movff	postinc2,??_detect_color
  2434  000EB0  CFDD F076          	movff	postdec2,??_detect_color+1
  2435  000EB4  C075  F001         	movff	??_detect_color,___xxtofl@val
  2436  000EB8  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2437  000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2438  000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2439  000EC0  0E00               	movlw	0
  2440  000EC2  EC22  F01F         	call	___xxtofl
  2441  000EC6  C001  F013         	movff	?___xxtofl,___fldiv@a
  2442  000ECA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2443  000ECE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2444  000ED2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2445  000ED6  C071  FFD9         	movff	detect_color@m,fsr2l
  2446  000EDA  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2447  000EDE  CFDE F077          	movff	postinc2,??_detect_color+2
  2448  000EE2  CFDD F078          	movff	postdec2,??_detect_color+3
  2449  000EE6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2450  000EEA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2451  000EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2452  000EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2453  000EF2  0E00               	movlw	0
  2454  000EF4  EC22  F01F         	call	___xxtofl
  2455  000EF8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2456  000EFC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2457  000F00  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2458  000F04  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2459  000F08  EC92  F013         	call	___fldiv	;wreg free
  2460  000F0C  C00F  F028         	movff	?___fldiv,___flmul@b
  2461  000F10  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2462  000F14  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2463  000F18  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2464  000F1C  0E00               	movlw	0
  2465  000F1E  6E2C               	movwf	___flmul@a^0,c
  2466  000F20  0E00               	movlw	0
  2467  000F22  6E2D               	movwf	(___flmul@a+1)^0,c
  2468  000F24  0EC8               	movlw	200
  2469  000F26  6E2E               	movwf	(___flmul@a+2)^0,c
  2470  000F28  0E42               	movlw	66
  2471  000F2A  6E2F               	movwf	(___flmul@a+3)^0,c
  2472  000F2C  ECA6  F00F         	call	___flmul	;wreg free
  2473  000F30  C028  F08E         	movff	?___flmul,_detect_color$3277
  2474  000F34  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2475  000F38  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2476  000F3C  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2477  000F40                     
  2478                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2479  000F40  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2480  000F44  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2481  000F48  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2482  000F4C  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2483  000F50  EC9C  F02C         	call	_lroundf	;wreg free
  2484  000F54  C066  F083         	movff	?_lroundf,detect_color@RR
  2485  000F58  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  2486  000F5C  0100               	movlb	0	; () banked
  2487  000F5E  EE20 F002          	lfsr	2,2
  2488  000F62  5173               	movf	detect_color@w& (0+255),w,b
  2489  000F64  26D9               	addwf	fsr2l,f,c
  2490  000F66  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2491  000F68  22DA               	addwfc	fsr2h,f,c
  2492  000F6A  CFDE F075          	movff	postinc2,??_detect_color
  2493  000F6E  CFDD F076          	movff	postdec2,??_detect_color+1
  2494  000F72  C075  F001         	movff	??_detect_color,___xxtofl@val
  2495  000F76  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2496  000F7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2497  000F7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2498  000F7E  0E00               	movlw	0
  2499  000F80  EC22  F01F         	call	___xxtofl
  2500  000F84  C001  F013         	movff	?___xxtofl,___fldiv@a
  2501  000F88  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2502  000F8C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2503  000F90  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2504  000F94  0100               	movlb	0	; () banked
  2505  000F96  EE20 F002          	lfsr	2,2
  2506  000F9A  5171               	movf	detect_color@m& (0+255),w,b
  2507  000F9C  26D9               	addwf	fsr2l,f,c
  2508  000F9E  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2509  000FA0  22DA               	addwfc	fsr2h,f,c
  2510  000FA2  CFDE F077          	movff	postinc2,??_detect_color+2
  2511  000FA6  CFDD F078          	movff	postdec2,??_detect_color+3
  2512  000FAA  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2513  000FAE  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2514  000FB2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2515  000FB4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2516  000FB6  0E00               	movlw	0
  2517  000FB8  EC22  F01F         	call	___xxtofl
  2518  000FBC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2519  000FC0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2520  000FC4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2521  000FC8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2522  000FCC  EC92  F013         	call	___fldiv	;wreg free
  2523  000FD0  C00F  F028         	movff	?___fldiv,___flmul@b
  2524  000FD4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2525  000FD8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2526  000FDC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2527  000FE0  0E00               	movlw	0
  2528  000FE2  6E2C               	movwf	___flmul@a^0,c
  2529  000FE4  0E00               	movlw	0
  2530  000FE6  6E2D               	movwf	(___flmul@a+1)^0,c
  2531  000FE8  0EC8               	movlw	200
  2532  000FEA  6E2E               	movwf	(___flmul@a+2)^0,c
  2533  000FEC  0E42               	movlw	66
  2534  000FEE  6E2F               	movwf	(___flmul@a+3)^0,c
  2535  000FF0  ECA6  F00F         	call	___flmul	;wreg free
  2536  000FF4  C028  F08E         	movff	?___flmul,_detect_color$3277
  2537  000FF8  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2538  000FFC  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2539  001000  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2540  001004  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2541  001008  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2542  00100C  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2543  001010  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2544  001014  EC9C  F02C         	call	_lroundf	;wreg free
  2545  001018  0100               	movlb	0	; () banked
  2546  00101A  EE20 F004          	lfsr	2,4
  2547  00101E  5173               	movf	detect_color@w& (0+255),w,b
  2548  001020  26D9               	addwf	fsr2l,f,c
  2549  001022  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2550  001024  22DA               	addwfc	fsr2h,f,c
  2551  001026  CFDE F075          	movff	postinc2,??_detect_color
  2552  00102A  CFDD F076          	movff	postdec2,??_detect_color+1
  2553  00102E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2554  001032  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2555  001036  6A03               	clrf	(___xxtofl@val+2)^0,c
  2556  001038  6A04               	clrf	(___xxtofl@val+3)^0,c
  2557  00103A  0E00               	movlw	0
  2558  00103C  EC22  F01F         	call	___xxtofl
  2559  001040  C001  F013         	movff	?___xxtofl,___fldiv@a
  2560  001044  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2561  001048  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2562  00104C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2563  001050  0100               	movlb	0	; () banked
  2564  001052  EE20 F004          	lfsr	2,4
  2565  001056  5171               	movf	detect_color@m& (0+255),w,b
  2566  001058  26D9               	addwf	fsr2l,f,c
  2567  00105A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2568  00105C  22DA               	addwfc	fsr2h,f,c
  2569  00105E  CFDE F077          	movff	postinc2,??_detect_color+2
  2570  001062  CFDD F078          	movff	postdec2,??_detect_color+3
  2571  001066  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2572  00106A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2573  00106E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2574  001070  6A04               	clrf	(___xxtofl@val+3)^0,c
  2575  001072  0E00               	movlw	0
  2576  001074  EC22  F01F         	call	___xxtofl
  2577  001078  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2578  00107C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2579  001080  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2580  001084  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2581  001088  EC92  F013         	call	___fldiv	;wreg free
  2582  00108C  C00F  F028         	movff	?___fldiv,___flmul@b
  2583  001090  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2584  001094  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2585  001098  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2586  00109C  0E00               	movlw	0
  2587  00109E  6E2C               	movwf	___flmul@a^0,c
  2588  0010A0  0E00               	movlw	0
  2589  0010A2  6E2D               	movwf	(___flmul@a+1)^0,c
  2590  0010A4  0EC8               	movlw	200
  2591  0010A6  6E2E               	movwf	(___flmul@a+2)^0,c
  2592  0010A8  0E42               	movlw	66
  2593  0010AA  6E2F               	movwf	(___flmul@a+3)^0,c
  2594  0010AC  ECA6  F00F         	call	___flmul	;wreg free
  2595  0010B0  C028  F08E         	movff	?___flmul,_detect_color$3277
  2596  0010B4  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2597  0010B8  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2598  0010BC  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2599  0010C0  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2600  0010C4  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2601  0010C8  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2602  0010CC  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2603  0010D0  EC9C  F02C         	call	_lroundf	;wreg free
  2604  0010D4                     
  2605                           ;color.c: 300:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2606  0010D4  0E05               	movlw	5
  2607  0010D6  0100               	movlb	0	; () banked
  2608  0010D8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2609  0010DA  0E0F               	movlw	15
  2610  0010DC  6F75               	movwf	??_detect_color& (0+255),b
  2611  0010DE  0EF1               	movlw	241
  2612  0010E0                     u5757:
  2613  0010E0  2EE8               	decfsz	wreg,f,c
  2614  0010E2  D7FE               	bra	u5757
  2615  0010E4  2F75               	decfsz	??_detect_color& (0+255),f,b
  2616  0010E6  D7FC               	bra	u5757
  2617  0010E8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2618  0010EA  D7FA               	bra	u5757
  2619  0010EC                     
  2620                           ;color.c: 301:     char buf[100];;color.c: 306:     LED_G();
  2621  0010EC  EC95  F02D         	call	_LED_G	;wreg free
  2622  0010F0                     
  2623                           ;color.c: 307:     read_color(m);
  2624  0010F0  C071  F00C         	movff	detect_color@m,read_color@m
  2625  0010F4  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2626  0010F8  EC75  F02A         	call	_read_color	;wreg free
  2627  0010FC                     
  2628                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2629  0010FC  0100               	movlb	0	; () banked
  2630  0010FE  EE20 F006          	lfsr	2,6
  2631  001102  5173               	movf	detect_color@w& (0+255),w,b
  2632  001104  26D9               	addwf	fsr2l,f,c
  2633  001106  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2634  001108  22DA               	addwfc	fsr2h,f,c
  2635  00110A  CFDE F075          	movff	postinc2,??_detect_color
  2636  00110E  CFDD F076          	movff	postdec2,??_detect_color+1
  2637  001112  C075  F001         	movff	??_detect_color,___xxtofl@val
  2638  001116  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2639  00111A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2640  00111C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2641  00111E  0E00               	movlw	0
  2642  001120  EC22  F01F         	call	___xxtofl
  2643  001124  C001  F013         	movff	?___xxtofl,___fldiv@a
  2644  001128  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2645  00112C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2646  001130  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2647  001134  C071  FFD9         	movff	detect_color@m,fsr2l
  2648  001138  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2649  00113C  CFDE F077          	movff	postinc2,??_detect_color+2
  2650  001140  CFDD F078          	movff	postdec2,??_detect_color+3
  2651  001144  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2652  001148  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2653  00114C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2654  00114E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2655  001150  0E00               	movlw	0
  2656  001152  EC22  F01F         	call	___xxtofl
  2657  001156  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2658  00115A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2659  00115E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2660  001162  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2661  001166  EC92  F013         	call	___fldiv	;wreg free
  2662  00116A  C00F  F028         	movff	?___fldiv,___flmul@b
  2663  00116E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2664  001172  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2665  001176  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2666  00117A  0E00               	movlw	0
  2667  00117C  6E2C               	movwf	___flmul@a^0,c
  2668  00117E  0E00               	movlw	0
  2669  001180  6E2D               	movwf	(___flmul@a+1)^0,c
  2670  001182  0EC8               	movlw	200
  2671  001184  6E2E               	movwf	(___flmul@a+2)^0,c
  2672  001186  0E42               	movlw	66
  2673  001188  6E2F               	movwf	(___flmul@a+3)^0,c
  2674  00118A  ECA6  F00F         	call	___flmul	;wreg free
  2675  00118E  C028  F08E         	movff	?___flmul,_detect_color$3277
  2676  001192  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2677  001196  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2678  00119A  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2679  00119E                     
  2680                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2681  00119E  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2682  0011A2  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2683  0011A6  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2684  0011AA  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2685  0011AE  EC9C  F02C         	call	_lroundf	;wreg free
  2686  0011B2  C066  F081         	movff	?_lroundf,detect_color@GR
  2687  0011B6  C067  F082         	movff	?_lroundf+1,detect_color@GR+1
  2688  0011BA  0100               	movlb	0	; () banked
  2689  0011BC  EE20 F008          	lfsr	2,8
  2690  0011C0  5173               	movf	detect_color@w& (0+255),w,b
  2691  0011C2  26D9               	addwf	fsr2l,f,c
  2692  0011C4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2693  0011C6  22DA               	addwfc	fsr2h,f,c
  2694  0011C8  CFDE F075          	movff	postinc2,??_detect_color
  2695  0011CC  CFDD F076          	movff	postdec2,??_detect_color+1
  2696  0011D0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2697  0011D4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2698  0011D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2699  0011DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2700  0011DC  0E00               	movlw	0
  2701  0011DE  EC22  F01F         	call	___xxtofl
  2702  0011E2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2703  0011E6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2704  0011EA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2705  0011EE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2706  0011F2  0100               	movlb	0	; () banked
  2707  0011F4  EE20 F002          	lfsr	2,2
  2708  0011F8  5171               	movf	detect_color@m& (0+255),w,b
  2709  0011FA  26D9               	addwf	fsr2l,f,c
  2710  0011FC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2711  0011FE  22DA               	addwfc	fsr2h,f,c
  2712  001200  CFDE F077          	movff	postinc2,??_detect_color+2
  2713  001204  CFDD F078          	movff	postdec2,??_detect_color+3
  2714  001208  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2715  00120C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2716  001210  6A03               	clrf	(___xxtofl@val+2)^0,c
  2717  001212  6A04               	clrf	(___xxtofl@val+3)^0,c
  2718  001214  0E00               	movlw	0
  2719  001216  EC22  F01F         	call	___xxtofl
  2720  00121A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2721  00121E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2722  001222  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2723  001226  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2724  00122A  EC92  F013         	call	___fldiv	;wreg free
  2725  00122E  C00F  F028         	movff	?___fldiv,___flmul@b
  2726  001232  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2727  001236  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2728  00123A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2729  00123E  0E00               	movlw	0
  2730  001240  6E2C               	movwf	___flmul@a^0,c
  2731  001242  0E00               	movlw	0
  2732  001244  6E2D               	movwf	(___flmul@a+1)^0,c
  2733  001246  0EC8               	movlw	200
  2734  001248  6E2E               	movwf	(___flmul@a+2)^0,c
  2735  00124A  0E42               	movlw	66
  2736  00124C  6E2F               	movwf	(___flmul@a+3)^0,c
  2737  00124E  ECA6  F00F         	call	___flmul	;wreg free
  2738  001252  C028  F08E         	movff	?___flmul,_detect_color$3277
  2739  001256  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2740  00125A  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2741  00125E  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2742  001262  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2743  001266  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2744  00126A  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2745  00126E  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2746  001272  EC9C  F02C         	call	_lroundf	;wreg free
  2747  001276  C066  F087         	movff	?_lroundf,detect_color@GG
  2748  00127A  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2749  00127E  0100               	movlb	0	; () banked
  2750  001280  EE20 F00A          	lfsr	2,10
  2751  001284  5173               	movf	detect_color@w& (0+255),w,b
  2752  001286  26D9               	addwf	fsr2l,f,c
  2753  001288  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2754  00128A  22DA               	addwfc	fsr2h,f,c
  2755  00128C  CFDE F075          	movff	postinc2,??_detect_color
  2756  001290  CFDD F076          	movff	postdec2,??_detect_color+1
  2757  001294  C075  F001         	movff	??_detect_color,___xxtofl@val
  2758  001298  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2759  00129C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2760  00129E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2761  0012A0  0E00               	movlw	0
  2762  0012A2  EC22  F01F         	call	___xxtofl
  2763  0012A6  C001  F013         	movff	?___xxtofl,___fldiv@a
  2764  0012AA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2765  0012AE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2766  0012B2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2767  0012B6  0100               	movlb	0	; () banked
  2768  0012B8  EE20 F004          	lfsr	2,4
  2769  0012BC  5171               	movf	detect_color@m& (0+255),w,b
  2770  0012BE  26D9               	addwf	fsr2l,f,c
  2771  0012C0  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2772  0012C2  22DA               	addwfc	fsr2h,f,c
  2773  0012C4  CFDE F077          	movff	postinc2,??_detect_color+2
  2774  0012C8  CFDD F078          	movff	postdec2,??_detect_color+3
  2775  0012CC  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2776  0012D0  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2777  0012D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2778  0012D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2779  0012D8  0E00               	movlw	0
  2780  0012DA  EC22  F01F         	call	___xxtofl
  2781  0012DE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2782  0012E2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2783  0012E6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2784  0012EA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2785  0012EE  EC92  F013         	call	___fldiv	;wreg free
  2786  0012F2  C00F  F028         	movff	?___fldiv,___flmul@b
  2787  0012F6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2788  0012FA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2789  0012FE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2790  001302  0E00               	movlw	0
  2791  001304  6E2C               	movwf	___flmul@a^0,c
  2792  001306  0E00               	movlw	0
  2793  001308  6E2D               	movwf	(___flmul@a+1)^0,c
  2794  00130A  0EC8               	movlw	200
  2795  00130C  6E2E               	movwf	(___flmul@a+2)^0,c
  2796  00130E  0E42               	movlw	66
  2797  001310  6E2F               	movwf	(___flmul@a+3)^0,c
  2798  001312  ECA6  F00F         	call	___flmul	;wreg free
  2799  001316  C028  F08E         	movff	?___flmul,_detect_color$3277
  2800  00131A  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2801  00131E  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2802  001322  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2803  001326  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2804  00132A  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2805  00132E  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2806  001332  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2807  001336  EC9C  F02C         	call	_lroundf	;wreg free
  2808  00133A                     
  2809                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2810  00133A  0E05               	movlw	5
  2811  00133C  0100               	movlb	0	; () banked
  2812  00133E  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2813  001340  0E0F               	movlw	15
  2814  001342  6F75               	movwf	??_detect_color& (0+255),b
  2815  001344  0EF1               	movlw	241
  2816  001346                     u5767:
  2817  001346  2EE8               	decfsz	wreg,f,c
  2818  001348  D7FE               	bra	u5767
  2819  00134A  2F75               	decfsz	??_detect_color& (0+255),f,b
  2820  00134C  D7FC               	bra	u5767
  2821  00134E  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2822  001350  D7FA               	bra	u5767
  2823  001352                     
  2824                           ;color.c: 316:     LED_B();
  2825  001352  ECA5  F02D         	call	_LED_B	;wreg free
  2826  001356                     
  2827                           ;color.c: 317:     read_color(m);
  2828  001356  C071  F00C         	movff	detect_color@m,read_color@m
  2829  00135A  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2830  00135E  EC75  F02A         	call	_read_color	;wreg free
  2831  001362                     
  2832                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2833  001362  0100               	movlb	0	; () banked
  2834  001364  EE20 F00C          	lfsr	2,12
  2835  001368  5173               	movf	detect_color@w& (0+255),w,b
  2836  00136A  26D9               	addwf	fsr2l,f,c
  2837  00136C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2838  00136E  22DA               	addwfc	fsr2h,f,c
  2839  001370  CFDE F075          	movff	postinc2,??_detect_color
  2840  001374  CFDD F076          	movff	postdec2,??_detect_color+1
  2841  001378  C075  F001         	movff	??_detect_color,___xxtofl@val
  2842  00137C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2843  001380  6A03               	clrf	(___xxtofl@val+2)^0,c
  2844  001382  6A04               	clrf	(___xxtofl@val+3)^0,c
  2845  001384  0E00               	movlw	0
  2846  001386  EC22  F01F         	call	___xxtofl
  2847  00138A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2848  00138E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2849  001392  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2850  001396  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2851  00139A  C071  FFD9         	movff	detect_color@m,fsr2l
  2852  00139E  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2853  0013A2  CFDE F077          	movff	postinc2,??_detect_color+2
  2854  0013A6  CFDD F078          	movff	postdec2,??_detect_color+3
  2855  0013AA  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2856  0013AE  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2857  0013B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2858  0013B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2859  0013B6  0E00               	movlw	0
  2860  0013B8  EC22  F01F         	call	___xxtofl
  2861  0013BC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2862  0013C0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2863  0013C4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2864  0013C8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2865  0013CC  EC92  F013         	call	___fldiv	;wreg free
  2866  0013D0  C00F  F028         	movff	?___fldiv,___flmul@b
  2867  0013D4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2868  0013D8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2869  0013DC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2870  0013E0  0E00               	movlw	0
  2871  0013E2  6E2C               	movwf	___flmul@a^0,c
  2872  0013E4  0E00               	movlw	0
  2873  0013E6  6E2D               	movwf	(___flmul@a+1)^0,c
  2874  0013E8  0EC8               	movlw	200
  2875  0013EA  6E2E               	movwf	(___flmul@a+2)^0,c
  2876  0013EC  0E42               	movlw	66
  2877  0013EE  6E2F               	movwf	(___flmul@a+3)^0,c
  2878  0013F0  ECA6  F00F         	call	___flmul	;wreg free
  2879  0013F4  C028  F08E         	movff	?___flmul,_detect_color$3277
  2880  0013F8  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2881  0013FC  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2882  001400  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2883  001404                     
  2884                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2885  001404  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2886  001408  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2887  00140C  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2888  001410  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2889  001414  EC9C  F02C         	call	_lroundf	;wreg free
  2890  001418  C066  F08C         	movff	?_lroundf,detect_color@BR
  2891  00141C  C067  F08D         	movff	?_lroundf+1,detect_color@BR+1
  2892  001420  0100               	movlb	0	; () banked
  2893  001422  EE20 F00E          	lfsr	2,14
  2894  001426  5173               	movf	detect_color@w& (0+255),w,b
  2895  001428  26D9               	addwf	fsr2l,f,c
  2896  00142A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2897  00142C  22DA               	addwfc	fsr2h,f,c
  2898  00142E  CFDE F075          	movff	postinc2,??_detect_color
  2899  001432  CFDD F076          	movff	postdec2,??_detect_color+1
  2900  001436  C075  F001         	movff	??_detect_color,___xxtofl@val
  2901  00143A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2902  00143E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2903  001440  6A04               	clrf	(___xxtofl@val+3)^0,c
  2904  001442  0E00               	movlw	0
  2905  001444  EC22  F01F         	call	___xxtofl
  2906  001448  C001  F013         	movff	?___xxtofl,___fldiv@a
  2907  00144C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2908  001450  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2909  001454  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2910  001458  0100               	movlb	0	; () banked
  2911  00145A  EE20 F002          	lfsr	2,2
  2912  00145E  5171               	movf	detect_color@m& (0+255),w,b
  2913  001460  26D9               	addwf	fsr2l,f,c
  2914  001462  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2915  001464  22DA               	addwfc	fsr2h,f,c
  2916  001466  CFDE F077          	movff	postinc2,??_detect_color+2
  2917  00146A  CFDD F078          	movff	postdec2,??_detect_color+3
  2918  00146E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2919  001472  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2920  001476  6A03               	clrf	(___xxtofl@val+2)^0,c
  2921  001478  6A04               	clrf	(___xxtofl@val+3)^0,c
  2922  00147A  0E00               	movlw	0
  2923  00147C  EC22  F01F         	call	___xxtofl
  2924  001480  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2925  001484  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2926  001488  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2927  00148C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2928  001490  EC92  F013         	call	___fldiv	;wreg free
  2929  001494  C00F  F028         	movff	?___fldiv,___flmul@b
  2930  001498  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2931  00149C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2932  0014A0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2933  0014A4  0E00               	movlw	0
  2934  0014A6  6E2C               	movwf	___flmul@a^0,c
  2935  0014A8  0E00               	movlw	0
  2936  0014AA  6E2D               	movwf	(___flmul@a+1)^0,c
  2937  0014AC  0EC8               	movlw	200
  2938  0014AE  6E2E               	movwf	(___flmul@a+2)^0,c
  2939  0014B0  0E42               	movlw	66
  2940  0014B2  6E2F               	movwf	(___flmul@a+3)^0,c
  2941  0014B4  ECA6  F00F         	call	___flmul	;wreg free
  2942  0014B8  C028  F08E         	movff	?___flmul,_detect_color$3277
  2943  0014BC  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  2944  0014C0  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  2945  0014C4  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  2946  0014C8  C08E  F066         	movff	_detect_color$3277,lroundf@x
  2947  0014CC  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  2948  0014D0  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  2949  0014D4  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  2950  0014D8  EC9C  F02C         	call	_lroundf	;wreg free
  2951  0014DC  C066  F089         	movff	?_lroundf,detect_color@BG
  2952  0014E0  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2953  0014E4  0100               	movlb	0	; () banked
  2954  0014E6  EE20 F010          	lfsr	2,16
  2955  0014EA  5173               	movf	detect_color@w& (0+255),w,b
  2956  0014EC  26D9               	addwf	fsr2l,f,c
  2957  0014EE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2958  0014F0  22DA               	addwfc	fsr2h,f,c
  2959  0014F2  CFDE F075          	movff	postinc2,??_detect_color
  2960  0014F6  CFDD F076          	movff	postdec2,??_detect_color+1
  2961  0014FA  C075  F001         	movff	??_detect_color,___xxtofl@val
  2962  0014FE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2963  001502  6A03               	clrf	(___xxtofl@val+2)^0,c
  2964  001504  6A04               	clrf	(___xxtofl@val+3)^0,c
  2965  001506  0E00               	movlw	0
  2966  001508  EC22  F01F         	call	___xxtofl
  2967  00150C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2968  001510  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2969  001514  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2970  001518  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2971  00151C  0100               	movlb	0	; () banked
  2972  00151E  EE20 F004          	lfsr	2,4
  2973  001522  5171               	movf	detect_color@m& (0+255),w,b
  2974  001524  26D9               	addwf	fsr2l,f,c
  2975  001526  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2976  001528  22DA               	addwfc	fsr2h,f,c
  2977  00152A  CFDE F077          	movff	postinc2,??_detect_color+2
  2978  00152E  CFDD F078          	movff	postdec2,??_detect_color+3
  2979  001532  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2980  001536  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2981  00153A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2982  00153C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2983  00153E  0E00               	movlw	0
  2984  001540  EC22  F01F         	call	___xxtofl
  2985  001544  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2986  001548  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2987  00154C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2988  001550  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2989  001554  EC92  F013         	call	___fldiv	;wreg free
  2990  001558  C00F  F028         	movff	?___fldiv,___flmul@b
  2991  00155C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2992  001560  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2993  001564  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2994  001568  0E00               	movlw	0
  2995  00156A  6E2C               	movwf	___flmul@a^0,c
  2996  00156C  0E00               	movlw	0
  2997  00156E  6E2D               	movwf	(___flmul@a+1)^0,c
  2998  001570  0EC8               	movlw	200
  2999  001572  6E2E               	movwf	(___flmul@a+2)^0,c
  3000  001574  0E42               	movlw	66
  3001  001576  6E2F               	movwf	(___flmul@a+3)^0,c
  3002  001578  ECA6  F00F         	call	___flmul	;wreg free
  3003  00157C  C028  F08E         	movff	?___flmul,_detect_color$3277
  3004  001580  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  3005  001584  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  3006  001588  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  3007  00158C  C08E  F066         	movff	_detect_color$3277,lroundf@x
  3008  001590  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  3009  001594  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  3010  001598  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  3011  00159C  EC9C  F02C         	call	_lroundf	;wreg free
  3012  0015A0  C066  F085         	movff	?_lroundf,detect_color@BB
  3013  0015A4  C067  F086         	movff	?_lroundf+1,detect_color@BB+1
  3014  0015A8                     
  3015                           ;color.c: 319:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3016  0015A8  0100               	movlb	0	; () banked
  3017  0015AA  EE20 F01A          	lfsr	2,26
  3018  0015AE  5173               	movf	detect_color@w& (0+255),w,b
  3019  0015B0  26D9               	addwf	fsr2l,f,c
  3020  0015B2  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3021  0015B4  22DA               	addwfc	fsr2h,f,c
  3022  0015B6  CFDE F075          	movff	postinc2,??_detect_color
  3023  0015BA  CFDD F076          	movff	postdec2,??_detect_color+1
  3024  0015BE  C075  F001         	movff	??_detect_color,___xxtofl@val
  3025  0015C2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3026  0015C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3027  0015C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3028  0015CA  0E00               	movlw	0
  3029  0015CC  EC22  F01F         	call	___xxtofl
  3030  0015D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3031  0015D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3032  0015D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3033  0015DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3034  0015E0  0100               	movlb	0	; () banked
  3035  0015E2  EE20 F006          	lfsr	2,6
  3036  0015E6  5171               	movf	detect_color@m& (0+255),w,b
  3037  0015E8  26D9               	addwf	fsr2l,f,c
  3038  0015EA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3039  0015EC  22DA               	addwfc	fsr2h,f,c
  3040  0015EE  CFDE F077          	movff	postinc2,??_detect_color+2
  3041  0015F2  CFDD F078          	movff	postdec2,??_detect_color+3
  3042  0015F6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3043  0015FA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3044  0015FE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3045  001600  6A04               	clrf	(___xxtofl@val+3)^0,c
  3046  001602  0E00               	movlw	0
  3047  001604  EC22  F01F         	call	___xxtofl
  3048  001608  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3049  00160C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3050  001610  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3051  001614  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3052  001618  EC92  F013         	call	___fldiv	;wreg free
  3053  00161C  C00F  F028         	movff	?___fldiv,___flmul@b
  3054  001620  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3055  001624  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3056  001628  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3057  00162C  0E00               	movlw	0
  3058  00162E  6E2C               	movwf	___flmul@a^0,c
  3059  001630  0E00               	movlw	0
  3060  001632  6E2D               	movwf	(___flmul@a+1)^0,c
  3061  001634  0EC8               	movlw	200
  3062  001636  6E2E               	movwf	(___flmul@a+2)^0,c
  3063  001638  0E42               	movlw	66
  3064  00163A  6E2F               	movwf	(___flmul@a+3)^0,c
  3065  00163C  ECA6  F00F         	call	___flmul	;wreg free
  3066  001640  C028  F08E         	movff	?___flmul,_detect_color$3277
  3067  001644  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  3068  001648  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  3069  00164C  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  3070  001650  C08E  F066         	movff	_detect_color$3277,lroundf@x
  3071  001654  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  3072  001658  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  3073  00165C  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  3074  001660  EC9C  F02C         	call	_lroundf	;wreg free
  3075  001664                     
  3076                           ;color.c: 320:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3077  001664  0E05               	movlw	5
  3078  001666  0100               	movlb	0	; () banked
  3079  001668  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3080  00166A  0E0F               	movlw	15
  3081  00166C  6F75               	movwf	??_detect_color& (0+255),b
  3082  00166E  0EF1               	movlw	241
  3083  001670                     u5777:
  3084  001670  2EE8               	decfsz	wreg,f,c
  3085  001672  D7FE               	bra	u5777
  3086  001674  2F75               	decfsz	??_detect_color& (0+255),f,b
  3087  001676  D7FC               	bra	u5777
  3088  001678  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3089  00167A  D7FA               	bra	u5777
  3090  00167C                     
  3091                           ;color.c: 326:     if (compare(0, BR, 70)){
  3092  00167C  0E00               	movlw	0
  3093  00167E  0100               	movlb	0	; () banked
  3094  001680  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3095  001682  0E00               	movlw	0
  3096  001684  6F6A               	movwf	compare@lower& (0+255),b
  3097  001686  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3098  00168A  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3099  00168E  0E00               	movlw	0
  3100  001690  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3101  001692  0E46               	movlw	70
  3102  001694  6F6E               	movwf	compare@upper& (0+255),b
  3103  001696  EC7F  F02C         	call	_compare	;wreg free
  3104  00169A  0900               	iorlw	0
  3105  00169C  B4D8               	btfsc	status,2,c
  3106  00169E  EF53  F00B         	goto	u5131
  3107  0016A2  EF55  F00B         	goto	u5130
  3108  0016A6                     u5131:
  3109  0016A6  EFC6  F00B         	goto	l5130
  3110  0016AA                     u5130:
  3111  0016AA                     
  3112                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  3113  0016AA  C085  F001         	movff	detect_color@BB,___xxtofl@val
  3114  0016AE  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3115  0016B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3116  0016B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3117  0016B6  0E00               	movlw	0
  3118  0016B8  EC22  F01F         	call	___xxtofl
  3119  0016BC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3120  0016C0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3121  0016C4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3122  0016C8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3123  0016CC  0100               	movlb	0	; () banked
  3124  0016CE  5189               	movf	detect_color@BG& (0+255),w,b
  3125  0016D0  2587               	addwf	detect_color@GG& (0+255),w,b
  3126  0016D2  6F75               	movwf	??_detect_color& (0+255),b
  3127  0016D4  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3128  0016D6  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3129  0016D8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3130  0016DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3131  0016DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3132  0016E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3133  0016E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3134  0016E6  0E00               	movlw	0
  3135  0016E8  EC22  F01F         	call	___xxtofl
  3136  0016EC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3137  0016F0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3138  0016F4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3139  0016F8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3140  0016FC  EC92  F013         	call	___fldiv	;wreg free
  3141  001700  C00F  F028         	movff	?___fldiv,___flmul@b
  3142  001704  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3143  001708  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3144  00170C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3145  001710  0E00               	movlw	0
  3146  001712  6E2C               	movwf	___flmul@a^0,c
  3147  001714  0E00               	movlw	0
  3148  001716  6E2D               	movwf	(___flmul@a+1)^0,c
  3149  001718  0E48               	movlw	72
  3150  00171A  6E2E               	movwf	(___flmul@a+2)^0,c
  3151  00171C  0E43               	movlw	67
  3152  00171E  6E2F               	movwf	(___flmul@a+3)^0,c
  3153  001720  ECA6  F00F         	call	___flmul	;wreg free
  3154  001724  C028  F08E         	movff	?___flmul,_detect_color$3277
  3155  001728  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  3156  00172C  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  3157  001730  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  3158                           
  3159                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  3160  001734  0E00               	movlw	0
  3161  001736  0100               	movlb	0	; () banked
  3162  001738  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3163  00173A  0E00               	movlw	0
  3164  00173C  6F6A               	movwf	compare@lower& (0+255),b
  3165  00173E  C08E  F066         	movff	_detect_color$3277,lroundf@x
  3166  001742  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  3167  001746  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  3168  00174A  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  3169  00174E  EC9C  F02C         	call	_lroundf	;wreg free
  3170  001752  C066  F06C         	movff	?_lroundf,compare@value2compare
  3171  001756  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3172  00175A  0E01               	movlw	1
  3173  00175C  0100               	movlb	0	; () banked
  3174  00175E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3175  001760  0E9B               	movlw	155
  3176  001762  6F6E               	movwf	compare@upper& (0+255),b
  3177  001764  EC7F  F02C         	call	_compare	;wreg free
  3178  001768  0900               	iorlw	0
  3179  00176A  B4D8               	btfsc	status,2,c
  3180  00176C  EFBA  F00B         	goto	u5141
  3181  001770  EFBC  F00B         	goto	u5140
  3182  001774                     u5141:
  3183  001774  EFC1  F00B         	goto	l5128
  3184  001778                     u5140:
  3185  001778  0E03               	movlw	3
  3186  00177A  0100               	movlb	0	; () banked
  3187  00177C  6F8B               	movwf	detect_color@color& (0+255),b
  3188  00177E  EFBF  F00C         	goto	l5148
  3189  001782                     l5128:
  3190  001782  0E02               	movlw	2
  3191  001784  0100               	movlb	0	; () banked
  3192  001786  6F8B               	movwf	detect_color@color& (0+255),b
  3193  001788  EFBF  F00C         	goto	l5148
  3194  00178C                     l5130:
  3195                           
  3196                           ;color.c: 331:         if (compare(0, BG, 75)){
  3197  00178C  0E00               	movlw	0
  3198  00178E  0100               	movlb	0	; () banked
  3199  001790  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3200  001792  0E00               	movlw	0
  3201  001794  6F6A               	movwf	compare@lower& (0+255),b
  3202  001796  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3203  00179A  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3204  00179E  0E00               	movlw	0
  3205  0017A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3206  0017A2  0E4B               	movlw	75
  3207  0017A4  6F6E               	movwf	compare@upper& (0+255),b
  3208  0017A6  EC7F  F02C         	call	_compare	;wreg free
  3209  0017AA  0900               	iorlw	0
  3210  0017AC  B4D8               	btfsc	status,2,c
  3211  0017AE  EFDB  F00B         	goto	u5151
  3212  0017B2  EFDD  F00B         	goto	u5150
  3213  0017B6                     u5151:
  3214  0017B6  EF47  F00C         	goto	l5138
  3215  0017BA                     u5150:
  3216  0017BA                     
  3217                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  3218  0017BA  C083  F001         	movff	detect_color@RR,___xxtofl@val
  3219  0017BE  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3220  0017C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3221  0017C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3222  0017C6  0E00               	movlw	0
  3223  0017C8  EC22  F01F         	call	___xxtofl
  3224  0017CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3225  0017D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3226  0017D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3227  0017D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3228  0017DC  C081  F001         	movff	detect_color@GR,___xxtofl@val
  3229  0017E0  C082  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  3230  0017E4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3231  0017E6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3232  0017E8  0E00               	movlw	0
  3233  0017EA  EC22  F01F         	call	___xxtofl
  3234  0017EE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3235  0017F2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3236  0017F6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3237  0017FA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3238  0017FE  EC92  F013         	call	___fldiv	;wreg free
  3239  001802  C00F  F028         	movff	?___fldiv,___flmul@b
  3240  001806  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3241  00180A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3242  00180E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3243  001812  0E00               	movlw	0
  3244  001814  6E2C               	movwf	___flmul@a^0,c
  3245  001816  0E00               	movlw	0
  3246  001818  6E2D               	movwf	(___flmul@a+1)^0,c
  3247  00181A  0EFA               	movlw	250
  3248  00181C  6E2E               	movwf	(___flmul@a+2)^0,c
  3249  00181E  0E43               	movlw	67
  3250  001820  6E2F               	movwf	(___flmul@a+3)^0,c
  3251  001822  ECA6  F00F         	call	___flmul	;wreg free
  3252  001826  C028  F08E         	movff	?___flmul,_detect_color$3277
  3253  00182A  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  3254  00182E  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  3255  001832  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  3256                           
  3257                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  3258  001836  0E01               	movlw	1
  3259  001838  0100               	movlb	0	; () banked
  3260  00183A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3261  00183C  0EE0               	movlw	224
  3262  00183E  6F6A               	movwf	compare@lower& (0+255),b
  3263  001840  C08E  F066         	movff	_detect_color$3277,lroundf@x
  3264  001844  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  3265  001848  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  3266  00184C  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  3267  001850  EC9C  F02C         	call	_lroundf	;wreg free
  3268  001854  C066  F06C         	movff	?_lroundf,compare@value2compare
  3269  001858  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3270  00185C  0E02               	movlw	2
  3271  00185E  0100               	movlb	0	; () banked
  3272  001860  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3273  001862  0E08               	movlw	8
  3274  001864  6F6E               	movwf	compare@upper& (0+255),b
  3275  001866  EC7F  F02C         	call	_compare	;wreg free
  3276  00186A  0900               	iorlw	0
  3277  00186C  B4D8               	btfsc	status,2,c
  3278  00186E  EF3B  F00C         	goto	u5161
  3279  001872  EF3D  F00C         	goto	u5160
  3280  001876                     u5161:
  3281  001876  EF42  F00C         	goto	l5136
  3282  00187A                     u5160:
  3283  00187A  0E06               	movlw	6
  3284  00187C  0100               	movlb	0	; () banked
  3285  00187E  6F8B               	movwf	detect_color@color& (0+255),b
  3286  001880  EFBF  F00C         	goto	l5148
  3287  001884                     l5136:
  3288  001884  0E01               	movlw	1
  3289  001886  0100               	movlb	0	; () banked
  3290  001888  6F8B               	movwf	detect_color@color& (0+255),b
  3291  00188A  EFBF  F00C         	goto	l5148
  3292  00188E                     l5138:
  3293                           
  3294                           ;color.c: 338:             if (BG > BR) {color = 7;}
  3295  00188E  0100               	movlb	0	; () banked
  3296  001890  5189               	movf	detect_color@BG& (0+255),w,b
  3297  001892  5D8C               	subwf	detect_color@BR& (0+255),w,b
  3298  001894  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3299  001896  598D               	subwfb	(detect_color@BR+1)& (0+255),w,b
  3300  001898  B0D8               	btfsc	status,0,c
  3301  00189A  EF51  F00C         	goto	u5171
  3302  00189E  EF53  F00C         	goto	u5170
  3303  0018A2                     u5171:
  3304  0018A2  EF57  F00C         	goto	l5142
  3305  0018A6                     u5170:
  3306  0018A6                     
  3307                           ; BSR set to: 0
  3308  0018A6  0E07               	movlw	7
  3309  0018A8  6F8B               	movwf	detect_color@color& (0+255),b
  3310  0018AA  EFBF  F00C         	goto	l5148
  3311  0018AE                     l5142:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;color.c: 340:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3315  0018AE  C085  F001         	movff	detect_color@BB,___xxtofl@val
  3316  0018B2  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3317  0018B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3318  0018B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3319  0018BA  0E00               	movlw	0
  3320  0018BC  EC22  F01F         	call	___xxtofl
  3321  0018C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3322  0018C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3323  0018C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3324  0018CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3325  0018D0  C089  F001         	movff	detect_color@BG,___xxtofl@val
  3326  0018D4  C08A  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3327  0018D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3328  0018DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3329  0018DC  0E00               	movlw	0
  3330  0018DE  EC22  F01F         	call	___xxtofl
  3331  0018E2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3332  0018E6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3333  0018EA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3334  0018EE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3335  0018F2  EC92  F013         	call	___fldiv	;wreg free
  3336  0018F6  C00F  F028         	movff	?___fldiv,___flmul@b
  3337  0018FA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3338  0018FE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3339  001902  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3340  001906  0E00               	movlw	0
  3341  001908  6E2C               	movwf	___flmul@a^0,c
  3342  00190A  0E00               	movlw	0
  3343  00190C  6E2D               	movwf	(___flmul@a+1)^0,c
  3344  00190E  0EFA               	movlw	250
  3345  001910  6E2E               	movwf	(___flmul@a+2)^0,c
  3346  001912  0E43               	movlw	67
  3347  001914  6E2F               	movwf	(___flmul@a+3)^0,c
  3348  001916  ECA6  F00F         	call	___flmul	;wreg free
  3349  00191A  C028  F08E         	movff	?___flmul,_detect_color$3277
  3350  00191E  C029  F08F         	movff	?___flmul+1,_detect_color$3277+1
  3351  001922  C02A  F090         	movff	?___flmul+2,_detect_color$3277+2
  3352  001926  C02B  F091         	movff	?___flmul+3,_detect_color$3277+3
  3353                           
  3354                           ;color.c: 340:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3355  00192A  0E00               	movlw	0
  3356  00192C  0100               	movlb	0	; () banked
  3357  00192E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3358  001930  0E00               	movlw	0
  3359  001932  6F6A               	movwf	compare@lower& (0+255),b
  3360  001934  C08E  F066         	movff	_detect_color$3277,lroundf@x
  3361  001938  C08F  F067         	movff	_detect_color$3277+1,lroundf@x+1
  3362  00193C  C090  F068         	movff	_detect_color$3277+2,lroundf@x+2
  3363  001940  C091  F069         	movff	_detect_color$3277+3,lroundf@x+3
  3364  001944  EC9C  F02C         	call	_lroundf	;wreg free
  3365  001948  C066  F06C         	movff	?_lroundf,compare@value2compare
  3366  00194C  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3367  001950  0E02               	movlw	2
  3368  001952  0100               	movlb	0	; () banked
  3369  001954  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3370  001956  0E26               	movlw	38
  3371  001958  6F6E               	movwf	compare@upper& (0+255),b
  3372  00195A  EC7F  F02C         	call	_compare	;wreg free
  3373  00195E  0900               	iorlw	0
  3374  001960  B4D8               	btfsc	status,2,c
  3375  001962  EFB5  F00C         	goto	u5181
  3376  001966  EFB7  F00C         	goto	u5180
  3377  00196A                     u5181:
  3378  00196A  EFBC  F00C         	goto	l5146
  3379  00196E                     u5180:
  3380  00196E  0E05               	movlw	5
  3381  001970  0100               	movlb	0	; () banked
  3382  001972  6F8B               	movwf	detect_color@color& (0+255),b
  3383  001974  EFBF  F00C         	goto	l5148
  3384  001978                     l5146:
  3385  001978  0E04               	movlw	4
  3386  00197A  0100               	movlb	0	; () banked
  3387  00197C  6F8B               	movwf	detect_color@color& (0+255),b
  3388  00197E                     l5148:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;color.c: 346:     if (compare(90, BR, BR * 30) && compare(90, GG, GG * 30)){color = 8;}
  3392  00197E  0E00               	movlw	0
  3393  001980  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3394  001982  0E5A               	movlw	90
  3395  001984  6F6A               	movwf	compare@lower& (0+255),b
  3396  001986  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3397  00198A  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3398  00198E  C08C  F001         	movff	detect_color@BR,___wmul@multiplier
  3399  001992  C08D  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3400  001996  0E00               	movlw	0
  3401  001998  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3402  00199A  0E1E               	movlw	30
  3403  00199C  6E03               	movwf	___wmul@multiplicand^0,c
  3404  00199E  EC62  F02D         	call	___wmul	;wreg free
  3405  0019A2  C001  F06E         	movff	?___wmul,compare@upper
  3406  0019A6  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3407  0019AA  EC7F  F02C         	call	_compare	;wreg free
  3408  0019AE  0900               	iorlw	0
  3409  0019B0  B4D8               	btfsc	status,2,c
  3410  0019B2  EFDD  F00C         	goto	u5191
  3411  0019B6  EFDF  F00C         	goto	u5190
  3412  0019BA                     u5191:
  3413  0019BA  EF03  F00D         	goto	l5154
  3414  0019BE                     u5190:
  3415  0019BE  0E00               	movlw	0
  3416  0019C0  0100               	movlb	0	; () banked
  3417  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3418  0019C4  0E5A               	movlw	90
  3419  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  3420  0019C8  C087  F06C         	movff	detect_color@GG,compare@value2compare
  3421  0019CC  C088  F06D         	movff	detect_color@GG+1,compare@value2compare+1
  3422  0019D0  C087  F001         	movff	detect_color@GG,___wmul@multiplier
  3423  0019D4  C088  F002         	movff	detect_color@GG+1,___wmul@multiplier+1
  3424  0019D8  0E00               	movlw	0
  3425  0019DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3426  0019DC  0E1E               	movlw	30
  3427  0019DE  6E03               	movwf	___wmul@multiplicand^0,c
  3428  0019E0  EC62  F02D         	call	___wmul	;wreg free
  3429  0019E4  C001  F06E         	movff	?___wmul,compare@upper
  3430  0019E8  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3431  0019EC  EC7F  F02C         	call	_compare	;wreg free
  3432  0019F0  0900               	iorlw	0
  3433  0019F2  B4D8               	btfsc	status,2,c
  3434  0019F4  EFFE  F00C         	goto	u5201
  3435  0019F8  EF00  F00D         	goto	u5200
  3436  0019FC                     u5201:
  3437  0019FC  EF03  F00D         	goto	l5154
  3438  001A00                     u5200:
  3439  001A00  0E08               	movlw	8
  3440  001A02  0100               	movlb	0	; () banked
  3441  001A04  6F8B               	movwf	detect_color@color& (0+255),b
  3442  001A06                     l5154:
  3443                           
  3444                           ;color.c: 347:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3445  001A06  0E00               	movlw	0
  3446  001A08  0100               	movlb	0	; () banked
  3447  001A0A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3448  001A0C  0E00               	movlw	0
  3449  001A0E  6F6A               	movwf	compare@lower& (0+255),b
  3450  001A10  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3451  001A14  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3452  001A18  0E00               	movlw	0
  3453  001A1A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3454  001A1C  0E19               	movlw	25
  3455  001A1E  6F6E               	movwf	compare@upper& (0+255),b
  3456  001A20  EC7F  F02C         	call	_compare	;wreg free
  3457  001A24  0900               	iorlw	0
  3458  001A26  B4D8               	btfsc	status,2,c
  3459  001A28  EF18  F00D         	goto	u5211
  3460  001A2C  EF1A  F00D         	goto	u5210
  3461  001A30                     u5211:
  3462  001A30  EF34  F00D         	goto	l5160
  3463  001A34                     u5210:
  3464  001A34  0E00               	movlw	0
  3465  001A36  0100               	movlb	0	; () banked
  3466  001A38  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3467  001A3A  0E00               	movlw	0
  3468  001A3C  6F6A               	movwf	compare@lower& (0+255),b
  3469  001A3E  C083  F06C         	movff	detect_color@RR,compare@value2compare
  3470  001A42  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3471  001A46  0E00               	movlw	0
  3472  001A48  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3473  001A4A  0E5A               	movlw	90
  3474  001A4C  6F6E               	movwf	compare@upper& (0+255),b
  3475  001A4E  EC7F  F02C         	call	_compare	;wreg free
  3476  001A52  0900               	iorlw	0
  3477  001A54  B4D8               	btfsc	status,2,c
  3478  001A56  EF2F  F00D         	goto	u5221
  3479  001A5A  EF31  F00D         	goto	u5220
  3480  001A5E                     u5221:
  3481  001A5E  EF34  F00D         	goto	l5160
  3482  001A62                     u5220:
  3483  001A62  0E00               	movlw	0
  3484  001A64  0100               	movlb	0	; () banked
  3485  001A66  6F8B               	movwf	detect_color@color& (0+255),b
  3486  001A68                     l5160:
  3487                           
  3488                           ;color.c: 349:     if (color == 8) {toggle_light(2,1);}
  3489  001A68  0E08               	movlw	8
  3490  001A6A  0100               	movlb	0	; () banked
  3491  001A6C  198B               	xorwf	detect_color@color& (0+255),w,b
  3492  001A6E  A4D8               	btfss	status,2,c
  3493  001A70  EF3C  F00D         	goto	u5231
  3494  001A74  EF3E  F00D         	goto	u5230
  3495  001A78                     u5231:
  3496  001A78  EF43  F00D         	goto	l5164
  3497  001A7C                     u5230:
  3498  001A7C                     
  3499                           ; BSR set to: 0
  3500  001A7C  0E01               	movlw	1
  3501  001A7E  6E01               	movwf	toggle_light@toggletime^0,c
  3502  001A80  0E02               	movlw	2
  3503  001A82  EC0E  F01A         	call	_toggle_light
  3504  001A86                     l5164:
  3505                           
  3506                           ;color.c: 351:     return color;
  3507  001A86  0100               	movlb	0	; () banked
  3508  001A88  518B               	movf	detect_color@color& (0+255),w,b
  3509  001A8A                     
  3510                           ; BSR set to: 0
  3511  001A8A  0012               	return		;funcret
  3512  001A8C                     __end_of_detect_color:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _compare *****************
  3516 ;; Defined at:
  3517 ;;		line 354 in file "color.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  lower           2   10[BANK0 ] unsigned int 
  3520 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3521 ;;  upper           2   14[BANK0 ] unsigned int 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  result          1   16[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      unsigned char 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3533 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;Total ram usage:        7 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 1
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_detect_color
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text5
  3548  0058FE                     __ptext5:
  3549                           	callstack 0
  3550  0058FE                     _compare:
  3551                           	callstack 27
  3552  0058FE                     
  3553                           ;color.c: 354: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 355: {;color.c: 356:     unsigned char result = 0;
  3554  0058FE  0E00               	movlw	0
  3555  005900  0100               	movlb	0	; () banked
  3556  005902  6F70               	movwf	compare@result& (0+255),b
  3557  005904                     
  3558                           ; BSR set to: 0
  3559                           ;color.c: 357:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3560  005904  516C               	movf	compare@value2compare& (0+255),w,b
  3561  005906  5D6A               	subwf	compare@lower& (0+255),w,b
  3562  005908  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3563  00590A  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3564  00590C  B0D8               	btfsc	status,0,c
  3565  00590E  EF8B  F02C         	goto	u4581
  3566  005912  EF8D  F02C         	goto	u4580
  3567  005916                     u4581:
  3568  005916  EF9A  F02C         	goto	l162
  3569  00591A                     u4580:
  3570  00591A                     
  3571                           ; BSR set to: 0
  3572  00591A  516C               	movf	compare@value2compare& (0+255),w,b
  3573  00591C  5D6E               	subwf	compare@upper& (0+255),w,b
  3574  00591E  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3575  005920  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3576  005922  A0D8               	btfss	status,0,c
  3577  005924  EF96  F02C         	goto	u4591
  3578  005928  EF98  F02C         	goto	u4590
  3579  00592C                     u4591:
  3580  00592C  EF9A  F02C         	goto	l162
  3581  005930                     u4590:
  3582  005930                     
  3583                           ; BSR set to: 0
  3584  005930  0E01               	movlw	1
  3585  005932  6F70               	movwf	compare@result& (0+255),b
  3586  005934                     l162:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;color.c: 358:     return result;
  3590  005934  5170               	movf	compare@result& (0+255),w,b
  3591  005936                     
  3592                           ; BSR set to: 0
  3593  005936  0012               	return		;funcret
  3594  005938                     __end_of_compare:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _color_data_collection *****************
  3598 ;; Defined at:
  3599 ;;		line 200 in file "color.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3602 ;;		 -> main@rgb(8), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  x               2  132[BANK0 ] int 
  3605 ;;  k               2  130[BANK0 ] int 
  3606 ;;  j               2  128[BANK0 ] int 
  3607 ;;  i               2  126[BANK0 ] int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;Total ram usage:       12 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 10
  3624 ;; This function calls:
  3625 ;;		_LED_B
  3626 ;;		_LED_C
  3627 ;;		_LED_G
  3628 ;;		_LED_R
  3629 ;;		_color_display
  3630 ;;		_color_predict
  3631 ;;		_read_color
  3632 ;; This function is called by:
  3633 ;;		_test_function
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text6
  3638  003C8E                     __ptext6:
  3639                           	callstack 0
  3640  003C8E                     _color_data_collection:
  3641                           	callstack 19
  3642  003C8E                     
  3643                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3644  003C8E  0E00               	movlw	0
  3645  003C90  0100               	movlb	0	; () banked
  3646  003C92  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3647  003C94  0E00               	movlw	0
  3648  003C96  6FDE               	movwf	color_data_collection@i& (0+255),b
  3649  003C98  0E00               	movlw	0
  3650  003C9A  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3651  003C9C  0E00               	movlw	0
  3652  003C9E  6FE2               	movwf	color_data_collection@k& (0+255),b
  3653  003CA0  0E00               	movlw	0
  3654  003CA2  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3655  003CA4  0E00               	movlw	0
  3656  003CA6  6FE4               	movwf	color_data_collection@x& (0+255),b
  3657                           
  3658                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3659  003CA8  0E00               	movlw	0
  3660  003CAA  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3661  003CAC  0E00               	movlw	0
  3662  003CAE  6FDE               	movwf	color_data_collection@i& (0+255),b
  3663  003CB0                     l4932:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;color.c: 204:         LED_C();
  3667  003CB0  ECB5  F02D         	call	_LED_C	;wreg free
  3668  003CB4                     
  3669                           ;color.c: 205:         read_color(m);
  3670  003CB4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3671  003CB8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3672  003CBC  EC75  F02A         	call	_read_color	;wreg free
  3673  003CC0                     
  3674                           ;color.c: 206:         color_display(m);
  3675  003CC0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3676  003CC4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3677  003CC8  ECD5  F029         	call	_color_display	;wreg free
  3678  003CCC                     
  3679                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3680  003CCC  0E09               	movlw	9
  3681  003CCE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3682  003CD0  0E1E               	movlw	30
  3683  003CD2  6E5C               	movwf	??_color_data_collection^0,c
  3684  003CD4  0EE4               	movlw	228
  3685  003CD6                     u5787:
  3686  003CD6  2EE8               	decfsz	wreg,f,c
  3687  003CD8  D7FE               	bra	u5787
  3688  003CDA  2E5C               	decfsz	??_color_data_collection^0,f,c
  3689  003CDC  D7FC               	bra	u5787
  3690  003CDE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3691  003CE0  D7FA               	bra	u5787
  3692  003CE2  D000               	nop2	
  3693  003CE4                     
  3694                           ;color.c: 208:     }
  3695  003CE4  0100               	movlb	0	; () banked
  3696  003CE6  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3697  003CE8  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3698  003CEA                     
  3699                           ; BSR set to: 0
  3700  003CEA  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3701  003CEC  EF81  F01E         	goto	u5091
  3702  003CF0  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3703  003CF2  E109               	bnz	u5090
  3704  003CF4  0E05               	movlw	5
  3705  003CF6  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3706  003CF8  A0D8               	btfss	status,0,c
  3707  003CFA  EF81  F01E         	goto	u5091
  3708  003CFE  EF83  F01E         	goto	u5090
  3709  003D02                     u5091:
  3710  003D02  EF58  F01E         	goto	l4932
  3711  003D06                     u5090:
  3712  003D06                     
  3713                           ; BSR set to: 0
  3714                           ;color.c: 209:     color_predict(00000);
  3715  003D06  0E00               	movlw	0
  3716  003D08  EC22  F02D         	call	_color_predict
  3717  003D0C                     
  3718                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3719  003D0C  0E00               	movlw	0
  3720  003D0E  0100               	movlb	0	; () banked
  3721  003D10  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3722  003D12  0E00               	movlw	0
  3723  003D14  6FE0               	movwf	color_data_collection@j& (0+255),b
  3724  003D16                     l4952:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;color.c: 211:         LED_R();
  3728  003D16  EC75  F02D         	call	_LED_R	;wreg free
  3729  003D1A                     
  3730                           ;color.c: 212:         read_color(m);
  3731  003D1A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3732  003D1E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3733  003D22  EC75  F02A         	call	_read_color	;wreg free
  3734  003D26                     
  3735                           ;color.c: 213:         color_display(m);
  3736  003D26  C05A  F058         	movff	color_data_collection@m,color_display@m
  3737  003D2A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3738  003D2E  ECD5  F029         	call	_color_display	;wreg free
  3739  003D32                     
  3740                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3741  003D32  0E09               	movlw	9
  3742  003D34  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3743  003D36  0E1E               	movlw	30
  3744  003D38  6E5C               	movwf	??_color_data_collection^0,c
  3745  003D3A  0EE4               	movlw	228
  3746  003D3C                     u5797:
  3747  003D3C  2EE8               	decfsz	wreg,f,c
  3748  003D3E  D7FE               	bra	u5797
  3749  003D40  2E5C               	decfsz	??_color_data_collection^0,f,c
  3750  003D42  D7FC               	bra	u5797
  3751  003D44  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3752  003D46  D7FA               	bra	u5797
  3753  003D48  D000               	nop2	
  3754  003D4A                     
  3755                           ;color.c: 215:     }
  3756  003D4A  0100               	movlb	0	; () banked
  3757  003D4C  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3758  003D4E  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3759  003D50                     
  3760                           ; BSR set to: 0
  3761  003D50  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3762  003D52  EFB4  F01E         	goto	u5101
  3763  003D56  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3764  003D58  E109               	bnz	u5100
  3765  003D5A  0E05               	movlw	5
  3766  003D5C  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3767  003D5E  A0D8               	btfss	status,0,c
  3768  003D60  EFB4  F01E         	goto	u5101
  3769  003D64  EFB6  F01E         	goto	u5100
  3770  003D68                     u5101:
  3771  003D68  EF8B  F01E         	goto	l4952
  3772  003D6C                     u5100:
  3773  003D6C                     
  3774                           ; BSR set to: 0
  3775                           ;color.c: 216:     color_predict(00000);
  3776  003D6C  0E00               	movlw	0
  3777  003D6E  EC22  F02D         	call	_color_predict
  3778  003D72                     
  3779                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3780  003D72  0E00               	movlw	0
  3781  003D74  0100               	movlb	0	; () banked
  3782  003D76  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3783  003D78  0E00               	movlw	0
  3784  003D7A  6FE2               	movwf	color_data_collection@k& (0+255),b
  3785  003D7C                     l4972:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;color.c: 218:         LED_G();
  3789  003D7C  EC95  F02D         	call	_LED_G	;wreg free
  3790  003D80                     
  3791                           ;color.c: 219:         read_color(m);
  3792  003D80  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3793  003D84  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3794  003D88  EC75  F02A         	call	_read_color	;wreg free
  3795  003D8C                     
  3796                           ;color.c: 220:         color_display(m);
  3797  003D8C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3798  003D90  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3799  003D94  ECD5  F029         	call	_color_display	;wreg free
  3800  003D98                     
  3801                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3802  003D98  0E09               	movlw	9
  3803  003D9A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3804  003D9C  0E1E               	movlw	30
  3805  003D9E  6E5C               	movwf	??_color_data_collection^0,c
  3806  003DA0  0EE4               	movlw	228
  3807  003DA2                     u5807:
  3808  003DA2  2EE8               	decfsz	wreg,f,c
  3809  003DA4  D7FE               	bra	u5807
  3810  003DA6  2E5C               	decfsz	??_color_data_collection^0,f,c
  3811  003DA8  D7FC               	bra	u5807
  3812  003DAA  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3813  003DAC  D7FA               	bra	u5807
  3814  003DAE  D000               	nop2	
  3815  003DB0                     
  3816                           ;color.c: 222:     }
  3817  003DB0  0100               	movlb	0	; () banked
  3818  003DB2  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3819  003DB4  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3820  003DB6                     
  3821                           ; BSR set to: 0
  3822  003DB6  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3823  003DB8  EFE7  F01E         	goto	u5111
  3824  003DBC  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3825  003DBE  E109               	bnz	u5110
  3826  003DC0  0E05               	movlw	5
  3827  003DC2  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3828  003DC4  A0D8               	btfss	status,0,c
  3829  003DC6  EFE7  F01E         	goto	u5111
  3830  003DCA  EFE9  F01E         	goto	u5110
  3831  003DCE                     u5111:
  3832  003DCE  EFBE  F01E         	goto	l4972
  3833  003DD2                     u5110:
  3834  003DD2                     
  3835                           ; BSR set to: 0
  3836                           ;color.c: 223:     color_predict(00000);
  3837  003DD2  0E00               	movlw	0
  3838  003DD4  EC22  F02D         	call	_color_predict
  3839  003DD8                     
  3840                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3841  003DD8  0E00               	movlw	0
  3842  003DDA  0100               	movlb	0	; () banked
  3843  003DDC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3844  003DDE  0E00               	movlw	0
  3845  003DE0  6FE4               	movwf	color_data_collection@x& (0+255),b
  3846  003DE2                     l4992:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;color.c: 225:         LED_B();
  3850  003DE2  ECA5  F02D         	call	_LED_B	;wreg free
  3851  003DE6                     
  3852                           ;color.c: 226:         read_color(m);
  3853  003DE6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3854  003DEA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3855  003DEE  EC75  F02A         	call	_read_color	;wreg free
  3856  003DF2                     
  3857                           ;color.c: 227:         color_display(m);
  3858  003DF2  C05A  F058         	movff	color_data_collection@m,color_display@m
  3859  003DF6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3860  003DFA  ECD5  F029         	call	_color_display	;wreg free
  3861  003DFE                     
  3862                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3863  003DFE  0E09               	movlw	9
  3864  003E00  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3865  003E02  0E1E               	movlw	30
  3866  003E04  6E5C               	movwf	??_color_data_collection^0,c
  3867  003E06  0EE4               	movlw	228
  3868  003E08                     u5817:
  3869  003E08  2EE8               	decfsz	wreg,f,c
  3870  003E0A  D7FE               	bra	u5817
  3871  003E0C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3872  003E0E  D7FC               	bra	u5817
  3873  003E10  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3874  003E12  D7FA               	bra	u5817
  3875  003E14  D000               	nop2	
  3876  003E16                     
  3877                           ;color.c: 229:     }
  3878  003E16  0100               	movlb	0	; () banked
  3879  003E18  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3880  003E1A  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3881  003E1C                     
  3882                           ; BSR set to: 0
  3883  003E1C  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3884  003E1E  EF1A  F01F         	goto	u5121
  3885  003E22  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3886  003E24  E109               	bnz	u5120
  3887  003E26  0E05               	movlw	5
  3888  003E28  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3889  003E2A  A0D8               	btfss	status,0,c
  3890  003E2C  EF1A  F01F         	goto	u5121
  3891  003E30  EF1C  F01F         	goto	u5120
  3892  003E34                     u5121:
  3893  003E34  EFF1  F01E         	goto	l4992
  3894  003E38                     u5120:
  3895  003E38                     
  3896                           ; BSR set to: 0
  3897                           ;color.c: 230:     color_predict(1);
  3898  003E38  0E01               	movlw	1
  3899  003E3A  EC22  F02D         	call	_color_predict
  3900  003E3E                     
  3901                           ;color.c: 231:     LED_C();
  3902  003E3E  ECB5  F02D         	call	_LED_C	;wreg free
  3903  003E42  0012               	return		;funcret
  3904  003E44                     __end_of_color_data_collection:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _read_color *****************
  3908 ;; Defined at:
  3909 ;;		line 147 in file "color.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3912 ;;		 -> main@rgb(8), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 4
  3931 ;; This function calls:
  3932 ;;		_color_read_Blue
  3933 ;;		_color_read_Clear
  3934 ;;		_color_read_Green
  3935 ;;		_color_read_Red
  3936 ;; This function is called by:
  3937 ;;		_color_data_collection
  3938 ;;		_detect_color
  3939 ;;		_test_function
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text7
  3944  0054EA                     __ptext7:
  3945                           	callstack 0
  3946  0054EA                     _read_color:
  3947                           	callstack 24
  3948  0054EA                     
  3949                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3950  0054EA  ECF8  F02A         	call	_color_read_Red	;wreg free
  3951  0054EE  C00C  FFD9         	movff	read_color@m,fsr2l
  3952  0054F2  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3953  0054F6  C005  FFDE         	movff	?_color_read_Red,postinc2
  3954  0054FA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3955                           
  3956                           ;color.c: 150:     m->B = color_read_Blue();
  3957  0054FE  EC48  F02B         	call	_color_read_Blue	;wreg free
  3958  005502  EE20 F004          	lfsr	2,4
  3959  005506  500C               	movf	read_color@m^0,w,c
  3960  005508  26D9               	addwf	fsr2l,f,c
  3961  00550A  500D               	movf	(read_color@m+1)^0,w,c
  3962  00550C  22DA               	addwfc	fsr2h,f,c
  3963  00550E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3964  005512  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3965                           
  3966                           ;color.c: 151:     m->G = color_read_Green();
  3967  005516  EC20  F02B         	call	_color_read_Green	;wreg free
  3968  00551A  EE20 F002          	lfsr	2,2
  3969  00551E  500C               	movf	read_color@m^0,w,c
  3970  005520  26D9               	addwf	fsr2l,f,c
  3971  005522  500D               	movf	(read_color@m+1)^0,w,c
  3972  005524  22DA               	addwfc	fsr2h,f,c
  3973  005526  C005  FFDE         	movff	?_color_read_Green,postinc2
  3974  00552A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3975                           
  3976                           ;color.c: 152:     m->C = color_read_Clear();
  3977  00552E  EC70  F02B         	call	_color_read_Clear	;wreg free
  3978  005532  EE20 F006          	lfsr	2,6
  3979  005536  500C               	movf	read_color@m^0,w,c
  3980  005538  26D9               	addwf	fsr2l,f,c
  3981  00553A  500D               	movf	(read_color@m+1)^0,w,c
  3982  00553C  22DA               	addwfc	fsr2h,f,c
  3983  00553E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3984  005542  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3985  005546  0012               	return		;funcret
  3986  005548                     __end_of_read_color:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _color_display *****************
  3990 ;; Defined at:
  3991 ;;		line 234 in file "color.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3994 ;;		 -> main@rgb(8), 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;Total ram usage:      102 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 9
  4013 ;; This function calls:
  4014 ;;		_sendStringSerial4
  4015 ;;		_sprintf
  4016 ;; This function is called by:
  4017 ;;		_color_data_collection
  4018 ;;		_test_function
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text8
  4023  0053AA                     __ptext8:
  4024                           	callstack 0
  4025  0053AA                     _color_display:
  4026                           	callstack 20
  4027  0053AA                     
  4028                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4029  0053AA  0E79               	movlw	low color_display@buf
  4030  0053AC  0100               	movlb	0	; () banked
  4031  0053AE  6F60               	movwf	sprintf@s& (0+255),b
  4032  0053B0  0E00               	movlw	high color_display@buf
  4033  0053B2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4034  0053B4  0E16               	movlw	low STR_1
  4035  0053B6  6F62               	movwf	sprintf@fmt& (0+255),b
  4036  0053B8  0E0E               	movlw	high STR_1
  4037  0053BA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4038  0053BC  C058  FFD9         	movff	color_display@m,fsr2l
  4039  0053C0  C059  FFDA         	movff	color_display@m+1,fsr2h
  4040  0053C4  CFDE F064          	movff	postinc2,?_sprintf+4
  4041  0053C8  CFDD F065          	movff	postdec2,?_sprintf+5
  4042  0053CC  EE20 F002          	lfsr	2,2
  4043  0053D0  5058               	movf	color_display@m^0,w,c
  4044  0053D2  26D9               	addwf	fsr2l,f,c
  4045  0053D4  5059               	movf	(color_display@m+1)^0,w,c
  4046  0053D6  22DA               	addwfc	fsr2h,f,c
  4047  0053D8  CFDE F066          	movff	postinc2,?_sprintf+6
  4048  0053DC  CFDD F067          	movff	postdec2,?_sprintf+7
  4049  0053E0  EE20 F004          	lfsr	2,4
  4050  0053E4  5058               	movf	color_display@m^0,w,c
  4051  0053E6  26D9               	addwf	fsr2l,f,c
  4052  0053E8  5059               	movf	(color_display@m+1)^0,w,c
  4053  0053EA  22DA               	addwfc	fsr2h,f,c
  4054  0053EC  CFDE F068          	movff	postinc2,?_sprintf+8
  4055  0053F0  CFDD F069          	movff	postdec2,?_sprintf+9
  4056  0053F4  EE20 F006          	lfsr	2,6
  4057  0053F8  5058               	movf	color_display@m^0,w,c
  4058  0053FA  26D9               	addwf	fsr2l,f,c
  4059  0053FC  5059               	movf	(color_display@m+1)^0,w,c
  4060  0053FE  22DA               	addwfc	fsr2h,f,c
  4061  005400  CFDE F06A          	movff	postinc2,?_sprintf+10
  4062  005404  CFDD F06B          	movff	postdec2,?_sprintf+11
  4063  005408  ECCF  F02A         	call	_sprintf	;wreg free
  4064  00540C                     
  4065                           ;color.c: 238:     sendStringSerial4(buf);
  4066  00540C  0E79               	movlw	low color_display@buf
  4067  00540E  6E02               	movwf	sendStringSerial4@string^0,c
  4068  005410  0E00               	movlw	high color_display@buf
  4069  005412  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4070  005414  EC0A  F02D         	call	_sendStringSerial4	;wreg free
  4071  005418  0012               	return		;funcret
  4072  00541A                     __end_of_color_display:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _calibrate_white *****************
  4076 ;; Defined at:
  4077 ;;		line 258 in file "color.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  w               2   11[COMRAM] PTR struct white_card
  4080 ;;		 -> main@white(28), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        4 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 4
  4099 ;; This function calls:
  4100 ;;		_LED_B
  4101 ;;		_LED_C
  4102 ;;		_LED_G
  4103 ;;		_LED_OFF
  4104 ;;		_LED_R
  4105 ;;		_color_read_Blue
  4106 ;;		_color_read_Clear
  4107 ;;		_color_read_Green
  4108 ;;		_color_read_Red
  4109 ;;		_toggle_light
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;;		_test_function
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text9
  4117  0036C8                     __ptext9:
  4118                           	callstack 0
  4119  0036C8                     _calibrate_white:
  4120                           	callstack 25
  4121  0036C8                     
  4122                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  4123  0036C8  EC85  F02D         	call	_LED_OFF	;wreg free
  4124  0036CC                     
  4125                           ;color.c: 261:     toggle_light(1,2);
  4126  0036CC  0E02               	movlw	2
  4127  0036CE  6E01               	movwf	toggle_light@toggletime^0,c
  4128  0036D0  0E01               	movlw	1
  4129  0036D2  EC0E  F01A         	call	_toggle_light
  4130  0036D6                     
  4131                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4132  0036D6  0E29               	movlw	41
  4133  0036D8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4134  0036DA  0E96               	movlw	150
  4135  0036DC  6E0E               	movwf	??_calibrate_white^0,c
  4136  0036DE  0E7F               	movlw	127
  4137  0036E0                     u5827:
  4138  0036E0  2EE8               	decfsz	wreg,f,c
  4139  0036E2  D7FE               	bra	u5827
  4140  0036E4  2E0E               	decfsz	??_calibrate_white^0,f,c
  4141  0036E6  D7FC               	bra	u5827
  4142  0036E8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4143  0036EA  D7FA               	bra	u5827
  4144  0036EC  F000               	nop	
  4145  0036EE                     
  4146                           ;color.c: 264:     LED_R();
  4147  0036EE  EC75  F02D         	call	_LED_R	;wreg free
  4148  0036F2                     
  4149                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  4150  0036F2  ECF8  F02A         	call	_color_read_Red	;wreg free
  4151  0036F6  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  4152  0036FA  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  4153  0036FE  C005  FFDE         	movff	?_color_read_Red,postinc2
  4154  003702  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4155  003706  EC20  F02B         	call	_color_read_Green	;wreg free
  4156  00370A  EE20 F002          	lfsr	2,2
  4157  00370E  500C               	movf	calibrate_white@w^0,w,c
  4158  003710  26D9               	addwf	fsr2l,f,c
  4159  003712  500D               	movf	(calibrate_white@w+1)^0,w,c
  4160  003714  22DA               	addwfc	fsr2h,f,c
  4161  003716  C005  FFDE         	movff	?_color_read_Green,postinc2
  4162  00371A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4163  00371E  EC48  F02B         	call	_color_read_Blue	;wreg free
  4164  003722  EE20 F004          	lfsr	2,4
  4165  003726  500C               	movf	calibrate_white@w^0,w,c
  4166  003728  26D9               	addwf	fsr2l,f,c
  4167  00372A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4168  00372C  22DA               	addwfc	fsr2h,f,c
  4169  00372E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4170  003732  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4171  003736                     
  4172                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4173  003736  0E09               	movlw	9
  4174  003738  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4175  00373A  0E1E               	movlw	30
  4176  00373C  6E0E               	movwf	??_calibrate_white^0,c
  4177  00373E  0EE4               	movlw	228
  4178  003740                     u5837:
  4179  003740  2EE8               	decfsz	wreg,f,c
  4180  003742  D7FE               	bra	u5837
  4181  003744  2E0E               	decfsz	??_calibrate_white^0,f,c
  4182  003746  D7FC               	bra	u5837
  4183  003748  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4184  00374A  D7FA               	bra	u5837
  4185  00374C  D000               	nop2	
  4186  00374E                     
  4187                           ;color.c: 268:     LED_G();
  4188  00374E  EC95  F02D         	call	_LED_G	;wreg free
  4189  003752                     
  4190                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  4191  003752  ECF8  F02A         	call	_color_read_Red	;wreg free
  4192  003756  EE20 F006          	lfsr	2,6
  4193  00375A  500C               	movf	calibrate_white@w^0,w,c
  4194  00375C  26D9               	addwf	fsr2l,f,c
  4195  00375E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4196  003760  22DA               	addwfc	fsr2h,f,c
  4197  003762  C005  FFDE         	movff	?_color_read_Red,postinc2
  4198  003766  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4199  00376A  EC20  F02B         	call	_color_read_Green	;wreg free
  4200  00376E  EE20 F008          	lfsr	2,8
  4201  003772  500C               	movf	calibrate_white@w^0,w,c
  4202  003774  26D9               	addwf	fsr2l,f,c
  4203  003776  500D               	movf	(calibrate_white@w+1)^0,w,c
  4204  003778  22DA               	addwfc	fsr2h,f,c
  4205  00377A  C005  FFDE         	movff	?_color_read_Green,postinc2
  4206  00377E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4207  003782  EC48  F02B         	call	_color_read_Blue	;wreg free
  4208  003786  EE20 F00A          	lfsr	2,10
  4209  00378A  500C               	movf	calibrate_white@w^0,w,c
  4210  00378C  26D9               	addwf	fsr2l,f,c
  4211  00378E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4212  003790  22DA               	addwfc	fsr2h,f,c
  4213  003792  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4214  003796  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4215  00379A                     
  4216                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4217  00379A  0E09               	movlw	9
  4218  00379C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4219  00379E  0E1E               	movlw	30
  4220  0037A0  6E0E               	movwf	??_calibrate_white^0,c
  4221  0037A2  0EE4               	movlw	228
  4222  0037A4                     u5847:
  4223  0037A4  2EE8               	decfsz	wreg,f,c
  4224  0037A6  D7FE               	bra	u5847
  4225  0037A8  2E0E               	decfsz	??_calibrate_white^0,f,c
  4226  0037AA  D7FC               	bra	u5847
  4227  0037AC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4228  0037AE  D7FA               	bra	u5847
  4229  0037B0  D000               	nop2	
  4230  0037B2                     
  4231                           ;color.c: 273:     LED_B();
  4232  0037B2  ECA5  F02D         	call	_LED_B	;wreg free
  4233  0037B6                     
  4234                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  4235  0037B6  ECF8  F02A         	call	_color_read_Red	;wreg free
  4236  0037BA  EE20 F00C          	lfsr	2,12
  4237  0037BE  500C               	movf	calibrate_white@w^0,w,c
  4238  0037C0  26D9               	addwf	fsr2l,f,c
  4239  0037C2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4240  0037C4  22DA               	addwfc	fsr2h,f,c
  4241  0037C6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4242  0037CA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4243  0037CE  EC20  F02B         	call	_color_read_Green	;wreg free
  4244  0037D2  EE20 F00E          	lfsr	2,14
  4245  0037D6  500C               	movf	calibrate_white@w^0,w,c
  4246  0037D8  26D9               	addwf	fsr2l,f,c
  4247  0037DA  500D               	movf	(calibrate_white@w+1)^0,w,c
  4248  0037DC  22DA               	addwfc	fsr2h,f,c
  4249  0037DE  C005  FFDE         	movff	?_color_read_Green,postinc2
  4250  0037E2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4251  0037E6  EC48  F02B         	call	_color_read_Blue	;wreg free
  4252  0037EA  EE20 F010          	lfsr	2,16
  4253  0037EE  500C               	movf	calibrate_white@w^0,w,c
  4254  0037F0  26D9               	addwf	fsr2l,f,c
  4255  0037F2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4256  0037F4  22DA               	addwfc	fsr2h,f,c
  4257  0037F6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4258  0037FA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4259  0037FE  EC70  F02B         	call	_color_read_Clear	;wreg free
  4260  003802  EE20 F01A          	lfsr	2,26
  4261  003806  500C               	movf	calibrate_white@w^0,w,c
  4262  003808  26D9               	addwf	fsr2l,f,c
  4263  00380A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4264  00380C  22DA               	addwfc	fsr2h,f,c
  4265  00380E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4266  003812  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4267  003816                     
  4268                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4269  003816  0E09               	movlw	9
  4270  003818  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4271  00381A  0E1E               	movlw	30
  4272  00381C  6E0E               	movwf	??_calibrate_white^0,c
  4273  00381E  0EE4               	movlw	228
  4274  003820                     u5857:
  4275  003820  2EE8               	decfsz	wreg,f,c
  4276  003822  D7FE               	bra	u5857
  4277  003824  2E0E               	decfsz	??_calibrate_white^0,f,c
  4278  003826  D7FC               	bra	u5857
  4279  003828  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4280  00382A  D7FA               	bra	u5857
  4281  00382C  D000               	nop2	
  4282  00382E                     
  4283                           ;color.c: 277:     LED_C();
  4284  00382E  ECB5  F02D         	call	_LED_C	;wreg free
  4285  003832                     
  4286                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4287  003832  ECF8  F02A         	call	_color_read_Red	;wreg free
  4288  003836  EE20 F012          	lfsr	2,18
  4289  00383A  500C               	movf	calibrate_white@w^0,w,c
  4290  00383C  26D9               	addwf	fsr2l,f,c
  4291  00383E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4292  003840  22DA               	addwfc	fsr2h,f,c
  4293  003842  C005  FFDE         	movff	?_color_read_Red,postinc2
  4294  003846  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4295  00384A  EC20  F02B         	call	_color_read_Green	;wreg free
  4296  00384E  EE20 F014          	lfsr	2,20
  4297  003852  500C               	movf	calibrate_white@w^0,w,c
  4298  003854  26D9               	addwf	fsr2l,f,c
  4299  003856  500D               	movf	(calibrate_white@w+1)^0,w,c
  4300  003858  22DA               	addwfc	fsr2h,f,c
  4301  00385A  C005  FFDE         	movff	?_color_read_Green,postinc2
  4302  00385E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4303  003862  EC48  F02B         	call	_color_read_Blue	;wreg free
  4304  003866  EE20 F016          	lfsr	2,22
  4305  00386A  500C               	movf	calibrate_white@w^0,w,c
  4306  00386C  26D9               	addwf	fsr2l,f,c
  4307  00386E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4308  003870  22DA               	addwfc	fsr2h,f,c
  4309  003872  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4310  003876  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4311  00387A  EC70  F02B         	call	_color_read_Clear	;wreg free
  4312  00387E  EE20 F018          	lfsr	2,24
  4313  003882  500C               	movf	calibrate_white@w^0,w,c
  4314  003884  26D9               	addwf	fsr2l,f,c
  4315  003886  500D               	movf	(calibrate_white@w+1)^0,w,c
  4316  003888  22DA               	addwfc	fsr2h,f,c
  4317  00388A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4318  00388E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4319  003892                     
  4320                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4321  003892  0E29               	movlw	41
  4322  003894  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4323  003896  0E96               	movlw	150
  4324  003898  6E0E               	movwf	??_calibrate_white^0,c
  4325  00389A  0E7F               	movlw	127
  4326  00389C                     u5867:
  4327  00389C  2EE8               	decfsz	wreg,f,c
  4328  00389E  D7FE               	bra	u5867
  4329  0038A0  2E0E               	decfsz	??_calibrate_white^0,f,c
  4330  0038A2  D7FC               	bra	u5867
  4331  0038A4  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4332  0038A6  D7FA               	bra	u5867
  4333  0038A8  F000               	nop	
  4334  0038AA                     
  4335                           ;color.c: 281:     LED_OFF();
  4336  0038AA  EC85  F02D         	call	_LED_OFF	;wreg free
  4337  0038AE                     
  4338                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4339  0038AE  0E29               	movlw	41
  4340  0038B0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4341  0038B2  0E96               	movlw	150
  4342  0038B4  6E0E               	movwf	??_calibrate_white^0,c
  4343  0038B6  0E7F               	movlw	127
  4344  0038B8                     u5877:
  4345  0038B8  2EE8               	decfsz	wreg,f,c
  4346  0038BA  D7FE               	bra	u5877
  4347  0038BC  2E0E               	decfsz	??_calibrate_white^0,f,c
  4348  0038BE  D7FC               	bra	u5877
  4349  0038C0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4350  0038C2  D7FA               	bra	u5877
  4351  0038C4  F000               	nop	
  4352                           
  4353                           ;color.c: 283:     toggle_light(1,2);
  4354  0038C6  0E02               	movlw	2
  4355  0038C8  6E01               	movwf	toggle_light@toggletime^0,c
  4356  0038CA  0E01               	movlw	1
  4357  0038CC  EC0E  F01A         	call	_toggle_light
  4358  0038D0  0012               	return		;funcret
  4359  0038D2                     __end_of_calibrate_white:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _color_read_Red *****************
  4363 ;; Defined at:
  4364 ;;		line 91 in file "color.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  tmp             2    9[COMRAM] unsigned int 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2    4[COMRAM] unsigned int 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;Total ram usage:        7 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 3
  4385 ;; This function calls:
  4386 ;;		_I2C_2_Master_Read
  4387 ;;		_I2C_2_Master_RepStart
  4388 ;;		_I2C_2_Master_Start
  4389 ;;		_I2C_2_Master_Stop
  4390 ;;		_I2C_2_Master_Write
  4391 ;; This function is called by:
  4392 ;;		_read_color
  4393 ;;		_calibrate_white
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text10
  4398  0055F0                     __ptext10:
  4399                           	callstack 0
  4400  0055F0                     _color_read_Red:
  4401                           	callstack 24
  4402  0055F0                     
  4403                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4404  0055F0  EC30  F02E         	call	_I2C_2_Master_Start	;wreg free
  4405                           
  4406                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4407  0055F4  0E52               	movlw	82
  4408  0055F6  EC1A  F02E         	call	_I2C_2_Master_Write
  4409                           
  4410                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4411  0055FA  0EB6               	movlw	182
  4412  0055FC  EC1A  F02E         	call	_I2C_2_Master_Write
  4413                           
  4414                           ;color.c: 97:  I2C_2_Master_RepStart();
  4415  005600  EC26  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4416                           
  4417                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4418  005604  0E53               	movlw	83
  4419  005606  EC1A  F02E         	call	_I2C_2_Master_Write
  4420                           
  4421                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4422  00560A  0E01               	movlw	1
  4423  00560C  ECDD  F02B         	call	_I2C_2_Master_Read
  4424  005610  6E07               	movwf	??_color_read_Red^0,c
  4425  005612  5007               	movf	??_color_read_Red^0,w,c
  4426  005614  6E0A               	movwf	color_read_Red@tmp^0,c
  4427  005616  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4428                           
  4429                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4430  005618  0E00               	movlw	0
  4431  00561A  ECDD  F02B         	call	_I2C_2_Master_Read
  4432  00561E  6E07               	movwf	??_color_read_Red^0,c
  4433  005620  5007               	movf	??_color_read_Red^0,w,c
  4434  005622  6E09               	movwf	(??_color_read_Red+2)^0,c
  4435  005624  6A08               	clrf	(??_color_read_Red+1)^0,c
  4436  005626  500A               	movf	color_read_Red@tmp^0,w,c
  4437  005628  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4438  00562A  6E0A               	movwf	color_read_Red@tmp^0,c
  4439  00562C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4440  00562E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4441  005630  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4442                           
  4443                           ;color.c: 101:  I2C_2_Master_Stop();
  4444  005632  EC2B  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4445  005636                     
  4446                           ;color.c: 102:  return tmp;
  4447  005636  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4448  00563A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4449  00563E  0012               	return		;funcret
  4450  005640                     __end_of_color_read_Red:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _color_read_Green *****************
  4454 ;; Defined at:
  4455 ;;		line 119 in file "color.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  tmp             2    9[COMRAM] unsigned int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  2    4[COMRAM] unsigned int 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;Total ram usage:        7 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 3
  4476 ;; This function calls:
  4477 ;;		_I2C_2_Master_Read
  4478 ;;		_I2C_2_Master_RepStart
  4479 ;;		_I2C_2_Master_Start
  4480 ;;		_I2C_2_Master_Stop
  4481 ;;		_I2C_2_Master_Write
  4482 ;; This function is called by:
  4483 ;;		_read_color
  4484 ;;		_calibrate_white
  4485 ;;		_distance_measure
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text11
  4490  005640                     __ptext11:
  4491                           	callstack 0
  4492  005640                     _color_read_Green:
  4493                           	callstack 24
  4494  005640                     
  4495                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4496  005640  EC30  F02E         	call	_I2C_2_Master_Start	;wreg free
  4497                           
  4498                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4499  005644  0E52               	movlw	82
  4500  005646  EC1A  F02E         	call	_I2C_2_Master_Write
  4501                           
  4502                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4503  00564A  0EB8               	movlw	184
  4504  00564C  EC1A  F02E         	call	_I2C_2_Master_Write
  4505                           
  4506                           ;color.c: 125:  I2C_2_Master_RepStart();
  4507  005650  EC26  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4508                           
  4509                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4510  005654  0E53               	movlw	83
  4511  005656  EC1A  F02E         	call	_I2C_2_Master_Write
  4512                           
  4513                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4514  00565A  0E01               	movlw	1
  4515  00565C  ECDD  F02B         	call	_I2C_2_Master_Read
  4516  005660  6E07               	movwf	??_color_read_Green^0,c
  4517  005662  5007               	movf	??_color_read_Green^0,w,c
  4518  005664  6E0A               	movwf	color_read_Green@tmp^0,c
  4519  005666  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4520                           
  4521                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4522  005668  0E00               	movlw	0
  4523  00566A  ECDD  F02B         	call	_I2C_2_Master_Read
  4524  00566E  6E07               	movwf	??_color_read_Green^0,c
  4525  005670  5007               	movf	??_color_read_Green^0,w,c
  4526  005672  6E09               	movwf	(??_color_read_Green+2)^0,c
  4527  005674  6A08               	clrf	(??_color_read_Green+1)^0,c
  4528  005676  500A               	movf	color_read_Green@tmp^0,w,c
  4529  005678  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4530  00567A  6E0A               	movwf	color_read_Green@tmp^0,c
  4531  00567C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4532  00567E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4533  005680  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4534                           
  4535                           ;color.c: 129:  I2C_2_Master_Stop();
  4536  005682  EC2B  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4537  005686                     
  4538                           ;color.c: 130:  return tmp;
  4539  005686  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4540  00568A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4541  00568E  0012               	return		;funcret
  4542  005690                     __end_of_color_read_Green:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _color_read_Blue *****************
  4546 ;; Defined at:
  4547 ;;		line 105 in file "color.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  tmp             2    9[COMRAM] unsigned int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2    4[COMRAM] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        7 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 3
  4568 ;; This function calls:
  4569 ;;		_I2C_2_Master_Read
  4570 ;;		_I2C_2_Master_RepStart
  4571 ;;		_I2C_2_Master_Start
  4572 ;;		_I2C_2_Master_Stop
  4573 ;;		_I2C_2_Master_Write
  4574 ;; This function is called by:
  4575 ;;		_read_color
  4576 ;;		_calibrate_white
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text12
  4581  005690                     __ptext12:
  4582                           	callstack 0
  4583  005690                     _color_read_Blue:
  4584                           	callstack 24
  4585  005690                     
  4586                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4587  005690  EC30  F02E         	call	_I2C_2_Master_Start	;wreg free
  4588                           
  4589                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4590  005694  0E52               	movlw	82
  4591  005696  EC1A  F02E         	call	_I2C_2_Master_Write
  4592                           
  4593                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4594  00569A  0EBA               	movlw	186
  4595  00569C  EC1A  F02E         	call	_I2C_2_Master_Write
  4596                           
  4597                           ;color.c: 111:  I2C_2_Master_RepStart();
  4598  0056A0  EC26  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4599                           
  4600                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4601  0056A4  0E53               	movlw	83
  4602  0056A6  EC1A  F02E         	call	_I2C_2_Master_Write
  4603                           
  4604                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4605  0056AA  0E01               	movlw	1
  4606  0056AC  ECDD  F02B         	call	_I2C_2_Master_Read
  4607  0056B0  6E07               	movwf	??_color_read_Blue^0,c
  4608  0056B2  5007               	movf	??_color_read_Blue^0,w,c
  4609  0056B4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4610  0056B6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4611                           
  4612                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4613  0056B8  0E00               	movlw	0
  4614  0056BA  ECDD  F02B         	call	_I2C_2_Master_Read
  4615  0056BE  6E07               	movwf	??_color_read_Blue^0,c
  4616  0056C0  5007               	movf	??_color_read_Blue^0,w,c
  4617  0056C2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4618  0056C4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4619  0056C6  500A               	movf	color_read_Blue@tmp^0,w,c
  4620  0056C8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4621  0056CA  6E0A               	movwf	color_read_Blue@tmp^0,c
  4622  0056CC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4623  0056CE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4624  0056D0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4625                           
  4626                           ;color.c: 115:  I2C_2_Master_Stop();
  4627  0056D2  EC2B  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4628  0056D6                     
  4629                           ;color.c: 116:  return tmp;
  4630  0056D6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4631  0056DA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4632  0056DE  0012               	return		;funcret
  4633  0056E0                     __end_of_color_read_Blue:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _LED_R *****************
  4637 ;; Defined at:
  4638 ;;		line 164 in file "color.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;Total ram usage:        2 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_color_data_collection
  4663 ;;		_calibrate_white
  4664 ;;		_detect_color
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text13
  4669  005AEA                     __ptext13:
  4670                           	callstack 0
  4671  005AEA                     _LED_R:
  4672                           	callstack 27
  4673  005AEA                     
  4674                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4675  005AEA  827F               	bsf	127,1,c	;volatile
  4676                           
  4677                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4678  005AEC  9E7E               	bcf	126,7,c	;volatile
  4679                           
  4680                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4681  005AEE  9879               	bcf	121,4,c	;volatile
  4682  005AF0                     
  4683                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4684  005AF0  0E11               	movlw	17
  4685  005AF2  6E02               	movwf	(??_LED_R+1)^0,c
  4686  005AF4  0E3C               	movlw	60
  4687  005AF6  6E01               	movwf	??_LED_R^0,c
  4688  005AF8  0ECB               	movlw	203
  4689  005AFA                     u5887:
  4690  005AFA  2EE8               	decfsz	wreg,f,c
  4691  005AFC  D7FE               	bra	u5887
  4692  005AFE  2E01               	decfsz	??_LED_R^0,f,c
  4693  005B00  D7FC               	bra	u5887
  4694  005B02  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4695  005B04  D7FA               	bra	u5887
  4696  005B06  F000               	nop	
  4697  005B08  0012               	return		;funcret
  4698  005B0A                     __end_of_LED_R:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _LED_OFF *****************
  4702 ;; Defined at:
  4703 ;;		line 155 in file "color.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;Total ram usage:        2 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_calibrate_white
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text14
  4732  005B0A                     __ptext14:
  4733                           	callstack 0
  4734  005B0A                     _LED_OFF:
  4735                           	callstack 27
  4736  005B0A                     
  4737                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4738  005B0A  927F               	bcf	127,1,c	;volatile
  4739                           
  4740                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4741  005B0C  9E7E               	bcf	126,7,c	;volatile
  4742                           
  4743                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4744  005B0E  9879               	bcf	121,4,c	;volatile
  4745  005B10                     
  4746                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4747  005B10  0E11               	movlw	17
  4748  005B12  6E02               	movwf	(??_LED_OFF+1)^0,c
  4749  005B14  0E3C               	movlw	60
  4750  005B16  6E01               	movwf	??_LED_OFF^0,c
  4751  005B18  0ECB               	movlw	203
  4752  005B1A                     u5897:
  4753  005B1A  2EE8               	decfsz	wreg,f,c
  4754  005B1C  D7FE               	bra	u5897
  4755  005B1E  2E01               	decfsz	??_LED_OFF^0,f,c
  4756  005B20  D7FC               	bra	u5897
  4757  005B22  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4758  005B24  D7FA               	bra	u5897
  4759  005B26  F000               	nop	
  4760  005B28  0012               	return		;funcret
  4761  005B2A                     __end_of_LED_OFF:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _LED_G *****************
  4765 ;; Defined at:
  4766 ;;		line 191 in file "color.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;Total ram usage:        2 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_color_data_collection
  4791 ;;		_calibrate_white
  4792 ;;		_detect_color
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text15
  4797  005B2A                     __ptext15:
  4798                           	callstack 0
  4799  005B2A                     _LED_G:
  4800                           	callstack 27
  4801  005B2A                     
  4802                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4803  005B2A  927F               	bcf	127,1,c	;volatile
  4804                           
  4805                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4806  005B2C  9E7E               	bcf	126,7,c	;volatile
  4807                           
  4808                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4809  005B2E  8879               	bsf	121,4,c	;volatile
  4810  005B30                     
  4811                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4812  005B30  0E11               	movlw	17
  4813  005B32  6E02               	movwf	(??_LED_G+1)^0,c
  4814  005B34  0E3C               	movlw	60
  4815  005B36  6E01               	movwf	??_LED_G^0,c
  4816  005B38  0ECB               	movlw	203
  4817  005B3A                     u5907:
  4818  005B3A  2EE8               	decfsz	wreg,f,c
  4819  005B3C  D7FE               	bra	u5907
  4820  005B3E  2E01               	decfsz	??_LED_G^0,f,c
  4821  005B40  D7FC               	bra	u5907
  4822  005B42  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4823  005B44  D7FA               	bra	u5907
  4824  005B46  F000               	nop	
  4825  005B48  0012               	return		;funcret
  4826  005B4A                     __end_of_LED_G:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _LED_B *****************
  4830 ;; Defined at:
  4831 ;;		line 182 in file "color.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;Total ram usage:        2 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 1
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_color_data_collection
  4856 ;;		_calibrate_white
  4857 ;;		_detect_color
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text16
  4862  005B4A                     __ptext16:
  4863                           	callstack 0
  4864  005B4A                     _LED_B:
  4865                           	callstack 27
  4866  005B4A                     
  4867                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4868  005B4A  927F               	bcf	127,1,c	;volatile
  4869                           
  4870                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4871  005B4C  8E7E               	bsf	126,7,c	;volatile
  4872                           
  4873                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4874  005B4E  9879               	bcf	121,4,c	;volatile
  4875  005B50                     
  4876                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4877  005B50  0E11               	movlw	17
  4878  005B52  6E02               	movwf	(??_LED_B+1)^0,c
  4879  005B54  0E3C               	movlw	60
  4880  005B56  6E01               	movwf	??_LED_B^0,c
  4881  005B58  0ECB               	movlw	203
  4882  005B5A                     u5917:
  4883  005B5A  2EE8               	decfsz	wreg,f,c
  4884  005B5C  D7FE               	bra	u5917
  4885  005B5E  2E01               	decfsz	??_LED_B^0,f,c
  4886  005B60  D7FC               	bra	u5917
  4887  005B62  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4888  005B64  D7FA               	bra	u5917
  4889  005B66  F000               	nop	
  4890  005B68  0012               	return		;funcret
  4891  005B6A                     __end_of_LED_B:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _amb_light_measure *****************
  4895 ;; Defined at:
  4896 ;;		line 375 in file "color.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4899 ;;		 -> main@rgb(8), main@amb(8), 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4902 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4903 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4904 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4905 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  2   10[BANK0 ] unsigned int 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;Total ram usage:       14 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 5
  4922 ;; This function calls:
  4923 ;;		_LED_C
  4924 ;;		___fldiv
  4925 ;;		___xxtofl
  4926 ;;		_color_read_Clear
  4927 ;;		_lroundf
  4928 ;;		_toggle_light
  4929 ;; This function is called by:
  4930 ;;		_main
  4931 ;;		_test_function
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text17
  4936  00493E                     __ptext17:
  4937                           	callstack 0
  4938  00493E                     _amb_light_measure:
  4939                           	callstack 24
  4940  00493E  0E00               	movlw	0
  4941  004940  0100               	movlb	0	; () banked
  4942  004942  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4943  004944  0E00               	movlw	0
  4944  004946  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4945  004948  0E00               	movlw	0
  4946  00494A  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4947  00494C  0E00               	movlw	0
  4948  00494E  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4949  004950  0E00               	movlw	0
  4950  004952  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4951  004954  0E00               	movlw	0
  4952  004956  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4953  004958                     
  4954                           ; BSR set to: 0
  4955                           ;color.c: 378:     toggle_light(2,2);
  4956  004958  0E02               	movlw	2
  4957  00495A  6E01               	movwf	toggle_light@toggletime^0,c
  4958  00495C  0E02               	movlw	2
  4959  00495E  EC0E  F01A         	call	_toggle_light
  4960  004962                     
  4961                           ;color.c: 379:     LED_C();
  4962  004962  ECB5  F02D         	call	_LED_C	;wreg free
  4963  004966                     
  4964                           ;color.c: 380:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4965  004966  0E29               	movlw	41
  4966  004968  0100               	movlb	0	; () banked
  4967  00496A  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4968  00496C  0E96               	movlw	150
  4969  00496E  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4970  004970  0E7F               	movlw	127
  4971  004972                     u5927:
  4972  004972  2EE8               	decfsz	wreg,f,c
  4973  004974  D7FE               	bra	u5927
  4974  004976  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4975  004978  D7FC               	bra	u5927
  4976  00497A  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4977  00497C  D7FA               	bra	u5927
  4978  00497E                     
  4979                           ;color.c: 382:     CC_amb_1 = color_read_Clear();
  4980  00497E  EC70  F02B         	call	_color_read_Clear	;wreg free
  4981  004982  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4982  004986  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4983  00498A                     
  4984                           ;color.c: 383:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4985  00498A  0E11               	movlw	17
  4986  00498C  0100               	movlb	0	; () banked
  4987  00498E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4988  004990  0E3C               	movlw	60
  4989  004992  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4990  004994  0ECB               	movlw	203
  4991  004996                     u5937:
  4992  004996  2EE8               	decfsz	wreg,f,c
  4993  004998  D7FE               	bra	u5937
  4994  00499A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4995  00499C  D7FC               	bra	u5937
  4996  00499E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4997  0049A0  D7FA               	bra	u5937
  4998  0049A2                     
  4999                           ;color.c: 385:     CC_amb_2 = color_read_Clear();
  5000  0049A2  EC70  F02B         	call	_color_read_Clear	;wreg free
  5001  0049A6  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  5002  0049AA  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  5003  0049AE                     
  5004                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  5005  0049AE  0E11               	movlw	17
  5006  0049B0  0100               	movlb	0	; () banked
  5007  0049B2  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5008  0049B4  0E3C               	movlw	60
  5009  0049B6  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5010  0049B8  0ECB               	movlw	203
  5011  0049BA                     u5947:
  5012  0049BA  2EE8               	decfsz	wreg,f,c
  5013  0049BC  D7FE               	bra	u5947
  5014  0049BE  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  5015  0049C0  D7FC               	bra	u5947
  5016  0049C2  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5017  0049C4  D7FA               	bra	u5947
  5018  0049C6                     
  5019                           ;color.c: 388:     CC_amb_3 = color_read_Clear();
  5020  0049C6  EC70  F02B         	call	_color_read_Clear	;wreg free
  5021  0049CA  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  5022  0049CE  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  5023  0049D2                     
  5024                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  5025  0049D2  0E11               	movlw	17
  5026  0049D4  0100               	movlb	0	; () banked
  5027  0049D6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5028  0049D8  0E3C               	movlw	60
  5029  0049DA  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5030  0049DC  0ECB               	movlw	203
  5031  0049DE                     u5957:
  5032  0049DE  2EE8               	decfsz	wreg,f,c
  5033  0049E0  D7FE               	bra	u5957
  5034  0049E2  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  5035  0049E4  D7FC               	bra	u5957
  5036  0049E6  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5037  0049E8  D7FA               	bra	u5957
  5038  0049EA                     
  5039                           ;color.c: 391:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  5040  0049EA  0100               	movlb	0	; () banked
  5041  0049EC  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  5042  0049EE  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  5043  0049F0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5044  0049F2  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  5045  0049F4  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  5046  0049F6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5047  0049F8  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  5048  0049FA  276C               	addwf	??_amb_light_measure& (0+255),f,b
  5049  0049FC  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  5050  0049FE  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  5051  004A00  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  5052  004A04  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  5053  004A08  6A03               	clrf	(___xxtofl@val+2)^0,c
  5054  004A0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  5055  004A0C  0E00               	movlw	0
  5056  004A0E  EC22  F01F         	call	___xxtofl
  5057  004A12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5058  004A16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5059  004A1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5060  004A1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5061  004A22  0E00               	movlw	0
  5062  004A24  6E13               	movwf	___fldiv@a^0,c
  5063  004A26  0E00               	movlw	0
  5064  004A28  6E14               	movwf	(___fldiv@a+1)^0,c
  5065  004A2A  0E40               	movlw	64
  5066  004A2C  6E15               	movwf	(___fldiv@a+2)^0,c
  5067  004A2E  0E40               	movlw	64
  5068  004A30  6E16               	movwf	(___fldiv@a+3)^0,c
  5069  004A32  EC92  F013         	call	___fldiv	;wreg free
  5070  004A36  C00F  F066         	movff	?___fldiv,lroundf@x
  5071  004A3A  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  5072  004A3E  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  5073  004A42  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  5074  004A46  EC9C  F02C         	call	_lroundf	;wreg free
  5075  004A4A  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  5076  004A4E  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  5077  004A52                     
  5078                           ;color.c: 393:     toggle_light(2,2);
  5079  004A52  0E02               	movlw	2
  5080  004A54  6E01               	movwf	toggle_light@toggletime^0,c
  5081  004A56  0E02               	movlw	2
  5082  004A58  EC0E  F01A         	call	_toggle_light
  5083  004A5C                     
  5084                           ;color.c: 395:     return CC_amb_ave;
  5085  004A5C  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  5086  004A60  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  5087  004A64  0012               	return		;funcret
  5088  004A66                     __end_of_amb_light_measure:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _lroundf *****************
  5092 ;; Defined at:
  5093 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  x               4    6[BANK0 ] float 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  4    6[BANK0 ] long 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;Total ram usage:        4 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 4
  5114 ;; This function calls:
  5115 ;;		___fltol
  5116 ;;		_roundf
  5117 ;; This function is called by:
  5118 ;;		_detect_color
  5119 ;;		_amb_light_measure
  5120 ;;		_distance_measure
  5121 ;;		_check_color_reading
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text18
  5126  005938                     __ptext18:
  5127                           	callstack 0
  5128  005938                     _lroundf:
  5129                           	callstack 24
  5130  005938  C066  F041         	movff	lroundf@x,roundf@x
  5131  00593C  C067  F042         	movff	lroundf@x+1,roundf@x+1
  5132  005940  C068  F043         	movff	lroundf@x+2,roundf@x+2
  5133  005944  C069  F044         	movff	lroundf@x+3,roundf@x+3
  5134  005948  ECBB  F011         	call	_roundf	;wreg free
  5135  00594C  C041  F05B         	movff	?_roundf,___fltol@f1
  5136  005950  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  5137  005954  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  5138  005958  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  5139  00595C  EC33  F025         	call	___fltol	;wreg free
  5140  005960  C05B  F066         	movff	?___fltol,?_lroundf
  5141  005964  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  5142  005968  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  5143  00596C  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  5144  005970  0012               	return		;funcret
  5145  005972                     __end_of_lroundf:
  5146                           	callstack 0
  5147                           
  5148 ;; *************** function _roundf *****************
  5149 ;; Defined at:
  5150 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  x               4   64[COMRAM] float 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  y               4   86[COMRAM] float 
  5155 ;;  u               4   82[COMRAM] struct .
  5156 ;;  e               2   76[COMRAM] int 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4   64[COMRAM] float 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;Total ram usage:       26 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 3
  5173 ;; This function calls:
  5174 ;;		___fladd
  5175 ;;		___flge
  5176 ;;		___flmul
  5177 ;;		___flneg
  5178 ;;		___flsub
  5179 ;; This function is called by:
  5180 ;;		_lroundf
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text19
  5185  002376                     __ptext19:
  5186                           	callstack 0
  5187  002376                     _roundf:
  5188                           	callstack 24
  5189  002376  C1F0  F053         	movff	roundf@F527,roundf@u
  5190  00237A  C1F1  F054         	movff	roundf@F527+1,roundf@u+1
  5191  00237E  C1F2  F055         	movff	roundf@F527+2,roundf@u+2
  5192  002382  C1F3  F056         	movff	roundf@F527+3,roundf@u+3
  5193  002386  C041  F053         	movff	roundf@x,roundf@u
  5194  00238A  C042  F054         	movff	roundf@x+1,roundf@u+1
  5195  00238E  C043  F055         	movff	roundf@x+2,roundf@u+2
  5196  002392  C044  F056         	movff	roundf@x+3,roundf@u+3
  5197  002396  C053  F045         	movff	roundf@u,??_roundf
  5198  00239A  C054  F046         	movff	roundf@u+1,??_roundf+1
  5199  00239E  C055  F047         	movff	roundf@u+2,??_roundf+2
  5200  0023A2  C056  F048         	movff	roundf@u+3,??_roundf+3
  5201  0023A6  0E18               	movlw	24
  5202  0023A8  EFDB  F011         	goto	u4230
  5203  0023AC                     u4235:
  5204  0023AC  90D8               	bcf	status,0,c
  5205  0023AE  3248               	rrcf	(??_roundf+3)^0,f,c
  5206  0023B0  3247               	rrcf	(??_roundf+2)^0,f,c
  5207  0023B2  3246               	rrcf	(??_roundf+1)^0,f,c
  5208  0023B4  3245               	rrcf	??_roundf^0,f,c
  5209  0023B6                     u4230:
  5210  0023B6  2EE8               	decfsz	wreg,f,c
  5211  0023B8  EFD6  F011         	goto	u4235
  5212  0023BC  5045               	movf	??_roundf^0,w,c
  5213  0023BE  6E4D               	movwf	roundf@e^0,c
  5214  0023C0  6A4E               	clrf	(roundf@e+1)^0,c
  5215  0023C2  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5216  0023C4  EFED  F011         	goto	u4241
  5217  0023C8  504E               	movf	(roundf@e+1)^0,w,c
  5218  0023CA  E109               	bnz	u4240
  5219  0023CC  0E96               	movlw	150
  5220  0023CE  5C4D               	subwf	roundf@e^0,w,c
  5221  0023D0  A0D8               	btfss	status,0,c
  5222  0023D2  EFED  F011         	goto	u4241
  5223  0023D6  EFEF  F011         	goto	u4240
  5224  0023DA                     u4241:
  5225  0023DA  EFF9  F011         	goto	l4504
  5226  0023DE                     u4240:
  5227  0023DE  C041  F041         	movff	roundf@x,?_roundf
  5228  0023E2  C042  F042         	movff	roundf@x+1,?_roundf+1
  5229  0023E6  C043  F043         	movff	roundf@x+2,?_roundf+2
  5230  0023EA  C044  F044         	movff	roundf@x+3,?_roundf+3
  5231  0023EE  EF91  F013         	goto	l1587
  5232  0023F2                     l4504:
  5233  0023F2  C053  F045         	movff	roundf@u,??_roundf
  5234  0023F6  C054  F046         	movff	roundf@u+1,??_roundf+1
  5235  0023FA  C055  F047         	movff	roundf@u+2,??_roundf+2
  5236  0023FE  C056  F048         	movff	roundf@u+3,??_roundf+3
  5237  002402  0E20               	movlw	32
  5238  002404  EF09  F012         	goto	u4250
  5239  002408                     u4255:
  5240  002408  90D8               	bcf	status,0,c
  5241  00240A  3248               	rrcf	(??_roundf+3)^0,f,c
  5242  00240C  3247               	rrcf	(??_roundf+2)^0,f,c
  5243  00240E  3246               	rrcf	(??_roundf+1)^0,f,c
  5244  002410  3245               	rrcf	??_roundf^0,f,c
  5245  002412                     u4250:
  5246  002412  2EE8               	decfsz	wreg,f,c
  5247  002414  EF04  F012         	goto	u4255
  5248  002418  5045               	movf	??_roundf^0,w,c
  5249  00241A  1046               	iorwf	(??_roundf+1)^0,w,c
  5250  00241C  1047               	iorwf	(??_roundf+2)^0,w,c
  5251  00241E  1048               	iorwf	(??_roundf+3)^0,w,c
  5252  002420  B4D8               	btfsc	status,2,c
  5253  002422  EF15  F012         	goto	u4261
  5254  002426  EF17  F012         	goto	u4260
  5255  00242A                     u4261:
  5256  00242A  EF29  F012         	goto	l4508
  5257  00242E                     u4260:
  5258  00242E  C041  F001         	movff	roundf@x,___flneg@f1
  5259  002432  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5260  002436  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5261  00243A  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5262  00243E  ECB9  F02C         	call	___flneg	;wreg free
  5263  002442  C001  F041         	movff	?___flneg,roundf@x
  5264  002446  C002  F042         	movff	?___flneg+1,roundf@x+1
  5265  00244A  C003  F043         	movff	?___flneg+2,roundf@x+2
  5266  00244E  C004  F044         	movff	?___flneg+3,roundf@x+3
  5267  002452                     l4508:
  5268  002452  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5269  002454  EF37  F012         	goto	u4270
  5270  002458  504E               	movf	(roundf@e+1)^0,w,c
  5271  00245A  E107               	bnz	u4271
  5272  00245C  0E7E               	movlw	126
  5273  00245E  5C4D               	subwf	roundf@e^0,w,c
  5274  002460  B0D8               	btfsc	status,0,c
  5275  002462  EF35  F012         	goto	u4271
  5276  002466  EF37  F012         	goto	u4270
  5277  00246A                     u4271:
  5278  00246A  EF53  F012         	goto	l4514
  5279  00246E                     u4270:
  5280  00246E  C053  F028         	movff	roundf@u,___flmul@b
  5281  002472  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5282  002476  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5283  00247A  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5284  00247E  0E00               	movlw	0
  5285  002480  6E2C               	movwf	___flmul@a^0,c
  5286  002482  0E00               	movlw	0
  5287  002484  6E2D               	movwf	(___flmul@a+1)^0,c
  5288  002486  0E00               	movlw	0
  5289  002488  6E2E               	movwf	(___flmul@a+2)^0,c
  5290  00248A  0E00               	movlw	0
  5291  00248C  6E2F               	movwf	(___flmul@a+3)^0,c
  5292  00248E  ECA6  F00F         	call	___flmul	;wreg free
  5293  002492  C028  F041         	movff	?___flmul,?_roundf
  5294  002496  C029  F042         	movff	?___flmul+1,?_roundf+1
  5295  00249A  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5296  00249E  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5297  0024A2  EF91  F013         	goto	l1587
  5298  0024A6                     l4514:
  5299  0024A6  0E00               	movlw	0
  5300  0024A8  6E05               	movwf	___fladd@a^0,c
  5301  0024AA  0E00               	movlw	0
  5302  0024AC  6E06               	movwf	(___fladd@a+1)^0,c
  5303  0024AE  0E00               	movlw	0
  5304  0024B0  6E07               	movwf	(___fladd@a+2)^0,c
  5305  0024B2  0E4B               	movlw	75
  5306  0024B4  6E08               	movwf	(___fladd@a+3)^0,c
  5307  0024B6  C041  F001         	movff	roundf@x,___fladd@b
  5308  0024BA  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5309  0024BE  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5310  0024C2  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5311  0024C6  EC46  F00D         	call	___fladd	;wreg free
  5312  0024CA  C001  F04F         	movff	?___fladd,_roundf$3279
  5313  0024CE  C002  F050         	movff	?___fladd+1,_roundf$3279+1
  5314  0024D2  C003  F051         	movff	?___fladd+2,_roundf$3279+2
  5315  0024D6  C004  F052         	movff	?___fladd+3,_roundf$3279+3
  5316  0024DA  0E00               	movlw	0
  5317  0024DC  6E05               	movwf	___fladd@a^0,c
  5318  0024DE  0E00               	movlw	0
  5319  0024E0  6E06               	movwf	(___fladd@a+1)^0,c
  5320  0024E2  0E00               	movlw	0
  5321  0024E4  6E07               	movwf	(___fladd@a+2)^0,c
  5322  0024E6  0ECB               	movlw	203
  5323  0024E8  6E08               	movwf	(___fladd@a+3)^0,c
  5324  0024EA  C04F  F001         	movff	_roundf$3279,___fladd@b
  5325  0024EE  C050  F002         	movff	_roundf$3279+1,___fladd@b+1
  5326  0024F2  C051  F003         	movff	_roundf$3279+2,___fladd@b+2
  5327  0024F6  C052  F004         	movff	_roundf$3279+3,___fladd@b+3
  5328  0024FA  EC46  F00D         	call	___fladd	;wreg free
  5329  0024FE  C001  F049         	movff	?___fladd,_roundf$3280
  5330  002502  C002  F04A         	movff	?___fladd+1,_roundf$3280+1
  5331  002506  C003  F04B         	movff	?___fladd+2,_roundf$3280+2
  5332  00250A  C004  F04C         	movff	?___fladd+3,_roundf$3280+3
  5333  00250E  C049  F011         	movff	_roundf$3280,___flsub@b
  5334  002512  C04A  F012         	movff	_roundf$3280+1,___flsub@b+1
  5335  002516  C04B  F013         	movff	_roundf$3280+2,___flsub@b+2
  5336  00251A  C04C  F014         	movff	_roundf$3280+3,___flsub@b+3
  5337  00251E  C041  F015         	movff	roundf@x,___flsub@a
  5338  002522  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5339  002526  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5340  00252A  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5341  00252E  EC98  F02B         	call	___flsub	;wreg free
  5342  002532  C011  F057         	movff	?___flsub,roundf@y
  5343  002536  C012  F058         	movff	?___flsub+1,roundf@y+1
  5344  00253A  C013  F059         	movff	?___flsub+2,roundf@y+2
  5345  00253E  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5346  002542  0E00               	movlw	0
  5347  002544  6E01               	movwf	___flge@ff1^0,c
  5348  002546  0E00               	movlw	0
  5349  002548  6E02               	movwf	(___flge@ff1+1)^0,c
  5350  00254A  0E00               	movlw	0
  5351  00254C  6E03               	movwf	(___flge@ff1+2)^0,c
  5352  00254E  0E3F               	movlw	63
  5353  002550  6E04               	movwf	(___flge@ff1+3)^0,c
  5354  002552  C057  F005         	movff	roundf@y,___flge@ff2
  5355  002556  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5356  00255A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5357  00255E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5358  002562  ECB7  F025         	call	___flge	;wreg free
  5359  002566  B0D8               	btfsc	status,0,c
  5360  002568  EFB8  F012         	goto	u4281
  5361  00256C  EFBA  F012         	goto	u4280
  5362  002570                     u4281:
  5363  002570  EFF0  F012         	goto	l4518
  5364  002574                     u4280:
  5365  002574  C041  F005         	movff	roundf@x,___fladd@a
  5366  002578  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5367  00257C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5368  002580  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5369  002584  C057  F001         	movff	roundf@y,___fladd@b
  5370  002588  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5371  00258C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5372  002590  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5373  002594  EC46  F00D         	call	___fladd	;wreg free
  5374  002598  C001  F04F         	movff	?___fladd,_roundf$3279
  5375  00259C  C002  F050         	movff	?___fladd+1,_roundf$3279+1
  5376  0025A0  C003  F051         	movff	?___fladd+2,_roundf$3279+2
  5377  0025A4  C004  F052         	movff	?___fladd+3,_roundf$3279+3
  5378  0025A8  C04F  F001         	movff	_roundf$3279,___fladd@b
  5379  0025AC  C050  F002         	movff	_roundf$3279+1,___fladd@b+1
  5380  0025B0  C051  F003         	movff	_roundf$3279+2,___fladd@b+2
  5381  0025B4  C052  F004         	movff	_roundf$3279+3,___fladd@b+3
  5382  0025B8  0E00               	movlw	0
  5383  0025BA  6E05               	movwf	___fladd@a^0,c
  5384  0025BC  0E00               	movlw	0
  5385  0025BE  6E06               	movwf	(___fladd@a+1)^0,c
  5386  0025C0  0E80               	movlw	128
  5387  0025C2  6E07               	movwf	(___fladd@a+2)^0,c
  5388  0025C4  0EBF               	movlw	191
  5389  0025C6  6E08               	movwf	(___fladd@a+3)^0,c
  5390  0025C8  EC46  F00D         	call	___fladd	;wreg free
  5391  0025CC  C001  F057         	movff	?___fladd,roundf@y
  5392  0025D0  C002  F058         	movff	?___fladd+1,roundf@y+1
  5393  0025D4  C003  F059         	movff	?___fladd+2,roundf@y+2
  5394  0025D8  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5395  0025DC  EF59  F013         	goto	l4524
  5396  0025E0                     l4518:
  5397  0025E0  0E00               	movlw	0
  5398  0025E2  6E01               	movwf	___flge@ff1^0,c
  5399  0025E4  0E00               	movlw	0
  5400  0025E6  6E02               	movwf	(___flge@ff1+1)^0,c
  5401  0025E8  0E00               	movlw	0
  5402  0025EA  6E03               	movwf	(___flge@ff1+2)^0,c
  5403  0025EC  0EBF               	movlw	191
  5404  0025EE  6E04               	movwf	(___flge@ff1+3)^0,c
  5405  0025F0  C057  F005         	movff	roundf@y,___flge@ff2
  5406  0025F4  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5407  0025F8  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5408  0025FC  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5409  002600  ECB7  F025         	call	___flge	;wreg free
  5410  002604  A0D8               	btfss	status,0,c
  5411  002606  EF07  F013         	goto	u4291
  5412  00260A  EF09  F013         	goto	u4290
  5413  00260E                     u4291:
  5414  00260E  EF3F  F013         	goto	l4522
  5415  002612                     u4290:
  5416  002612  C041  F005         	movff	roundf@x,___fladd@a
  5417  002616  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5418  00261A  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5419  00261E  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5420  002622  C057  F001         	movff	roundf@y,___fladd@b
  5421  002626  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5422  00262A  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5423  00262E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5424  002632  EC46  F00D         	call	___fladd	;wreg free
  5425  002636  C001  F04F         	movff	?___fladd,_roundf$3279
  5426  00263A  C002  F050         	movff	?___fladd+1,_roundf$3279+1
  5427  00263E  C003  F051         	movff	?___fladd+2,_roundf$3279+2
  5428  002642  C004  F052         	movff	?___fladd+3,_roundf$3279+3
  5429  002646  C04F  F001         	movff	_roundf$3279,___fladd@b
  5430  00264A  C050  F002         	movff	_roundf$3279+1,___fladd@b+1
  5431  00264E  C051  F003         	movff	_roundf$3279+2,___fladd@b+2
  5432  002652  C052  F004         	movff	_roundf$3279+3,___fladd@b+3
  5433  002656  0E00               	movlw	0
  5434  002658  6E05               	movwf	___fladd@a^0,c
  5435  00265A  0E00               	movlw	0
  5436  00265C  6E06               	movwf	(___fladd@a+1)^0,c
  5437  00265E  0E80               	movlw	128
  5438  002660  6E07               	movwf	(___fladd@a+2)^0,c
  5439  002662  0E3F               	movlw	63
  5440  002664  6E08               	movwf	(___fladd@a+3)^0,c
  5441  002666  EC46  F00D         	call	___fladd	;wreg free
  5442  00266A  C001  F057         	movff	?___fladd,roundf@y
  5443  00266E  C002  F058         	movff	?___fladd+1,roundf@y+1
  5444  002672  C003  F059         	movff	?___fladd+2,roundf@y+2
  5445  002676  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5446  00267A  EF59  F013         	goto	l4524
  5447  00267E                     l4522:
  5448  00267E  C057  F001         	movff	roundf@y,___fladd@b
  5449  002682  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5450  002686  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5451  00268A  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5452  00268E  C041  F005         	movff	roundf@x,___fladd@a
  5453  002692  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5454  002696  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5455  00269A  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5456  00269E  EC46  F00D         	call	___fladd	;wreg free
  5457  0026A2  C001  F057         	movff	?___fladd,roundf@y
  5458  0026A6  C002  F058         	movff	?___fladd+1,roundf@y+1
  5459  0026AA  C003  F059         	movff	?___fladd+2,roundf@y+2
  5460  0026AE  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5461  0026B2                     l4524:
  5462  0026B2  C053  F045         	movff	roundf@u,??_roundf
  5463  0026B6  C054  F046         	movff	roundf@u+1,??_roundf+1
  5464  0026BA  C055  F047         	movff	roundf@u+2,??_roundf+2
  5465  0026BE  C056  F048         	movff	roundf@u+3,??_roundf+3
  5466  0026C2  0E20               	movlw	32
  5467  0026C4  EF69  F013         	goto	u4300
  5468  0026C8                     u4305:
  5469  0026C8  90D8               	bcf	status,0,c
  5470  0026CA  3248               	rrcf	(??_roundf+3)^0,f,c
  5471  0026CC  3247               	rrcf	(??_roundf+2)^0,f,c
  5472  0026CE  3246               	rrcf	(??_roundf+1)^0,f,c
  5473  0026D0  3245               	rrcf	??_roundf^0,f,c
  5474  0026D2                     u4300:
  5475  0026D2  2EE8               	decfsz	wreg,f,c
  5476  0026D4  EF64  F013         	goto	u4305
  5477  0026D8  5045               	movf	??_roundf^0,w,c
  5478  0026DA  1046               	iorwf	(??_roundf+1)^0,w,c
  5479  0026DC  1047               	iorwf	(??_roundf+2)^0,w,c
  5480  0026DE  1048               	iorwf	(??_roundf+3)^0,w,c
  5481  0026E0  B4D8               	btfsc	status,2,c
  5482  0026E2  EF75  F013         	goto	u4311
  5483  0026E6  EF77  F013         	goto	u4310
  5484  0026EA                     u4311:
  5485  0026EA  EF89  F013         	goto	l4528
  5486  0026EE                     u4310:
  5487  0026EE  C057  F001         	movff	roundf@y,___flneg@f1
  5488  0026F2  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5489  0026F6  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5490  0026FA  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5491  0026FE  ECB9  F02C         	call	___flneg	;wreg free
  5492  002702  C001  F057         	movff	?___flneg,roundf@y
  5493  002706  C002  F058         	movff	?___flneg+1,roundf@y+1
  5494  00270A  C003  F059         	movff	?___flneg+2,roundf@y+2
  5495  00270E  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5496  002712                     l4528:
  5497  002712  C057  F041         	movff	roundf@y,?_roundf
  5498  002716  C058  F042         	movff	roundf@y+1,?_roundf+1
  5499  00271A  C059  F043         	movff	roundf@y+2,?_roundf+2
  5500  00271E  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5501  002722                     l1587:
  5502  002722  0012               	return		;funcret
  5503  002724                     __end_of_roundf:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function ___flsub *****************
  5507 ;; Defined at:
  5508 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  b               4   16[COMRAM] float 
  5511 ;;  a               4   20[COMRAM] float 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  4   16[COMRAM] float 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5523 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;Total ram usage:        8 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 2
  5530 ;; This function calls:
  5531 ;;		___fladd
  5532 ;; This function is called by:
  5533 ;;		_roundf
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text20
  5538  005730                     __ptext20:
  5539                           	callstack 0
  5540  005730                     ___flsub:
  5541                           	callstack 24
  5542  005730  0E00               	movlw	0
  5543  005732  1A15               	xorwf	___flsub@a^0,f,c
  5544  005734  0E00               	movlw	0
  5545  005736  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5546  005738  0E00               	movlw	0
  5547  00573A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5548  00573C  0E80               	movlw	128
  5549  00573E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5550  005740  C011  F001         	movff	___flsub@b,___fladd@b
  5551  005744  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5552  005748  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5553  00574C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5554  005750  C015  F005         	movff	___flsub@a,___fladd@a
  5555  005754  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5556  005758  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5557  00575C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5558  005760  EC46  F00D         	call	___fladd	;wreg free
  5559  005764  C001  F011         	movff	?___fladd,?___flsub
  5560  005768  C002  F012         	movff	?___fladd+1,?___flsub+1
  5561  00576C  C003  F013         	movff	?___fladd+2,?___flsub+2
  5562  005770  C004  F014         	movff	?___fladd+3,?___flsub+3
  5563  005774  0012               	return		;funcret
  5564  005776                     __end_of___flsub:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function ___fladd *****************
  5568 ;; Defined at:
  5569 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  b               4    0[COMRAM] float 
  5572 ;;  a               4    4[COMRAM] float 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  grs             1   15[COMRAM] unsigned char 
  5575 ;;  bexp            1   14[COMRAM] unsigned char 
  5576 ;;  aexp            1   13[COMRAM] unsigned char 
  5577 ;;  signs           1   12[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    0[COMRAM] unsigned char 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5587 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;Total ram usage:       16 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		___flsub
  5598 ;;		_roundf
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text21
  5603  001A8C                     __ptext21:
  5604                           	callstack 0
  5605  001A8C                     ___fladd:
  5606                           	callstack 24
  5607  001A8C  5004               	movf	(___fladd@b+3)^0,w,c
  5608  001A8E  0B80               	andlw	128
  5609  001A90  6E0D               	movwf	___fladd@signs^0,c
  5610  001A92  5004               	movf	(___fladd@b+3)^0,w,c
  5611  001A94  2404               	addwf	(___fladd@b+3)^0,w,c
  5612  001A96  6E0F               	movwf	___fladd@bexp^0,c
  5613  001A98  AE03               	btfss	(___fladd@b+2)^0,7,c
  5614  001A9A  EF51  F00D         	goto	u3371
  5615  001A9E  EF53  F00D         	goto	u3370
  5616  001AA2                     u3371:
  5617  001AA2  EF54  F00D         	goto	l3924
  5618  001AA6                     u3370:
  5619  001AA6  800F               	bsf	___fladd@bexp^0,0,c
  5620  001AA8                     l3924:
  5621  001AA8  500F               	movf	___fladd@bexp^0,w,c
  5622  001AAA  B4D8               	btfsc	status,2,c
  5623  001AAC  EF5A  F00D         	goto	u3381
  5624  001AB0  EF5C  F00D         	goto	u3380
  5625  001AB4                     u3381:
  5626  001AB4  EF71  F00D         	goto	l3934
  5627  001AB8                     u3380:
  5628  001AB8  280F               	incf	___fladd@bexp^0,w,c
  5629  001ABA  A4D8               	btfss	status,2,c
  5630  001ABC  EF62  F00D         	goto	u3391
  5631  001AC0  EF64  F00D         	goto	u3390
  5632  001AC4                     u3391:
  5633  001AC4  EF6C  F00D         	goto	l3930
  5634  001AC8                     u3390:
  5635  001AC8  0E00               	movlw	0
  5636  001ACA  6E01               	movwf	___fladd@b^0,c
  5637  001ACC  0E00               	movlw	0
  5638  001ACE  6E02               	movwf	(___fladd@b+1)^0,c
  5639  001AD0  0E00               	movlw	0
  5640  001AD2  6E03               	movwf	(___fladd@b+2)^0,c
  5641  001AD4  0E00               	movlw	0
  5642  001AD6  6E04               	movwf	(___fladd@b+3)^0,c
  5643  001AD8                     l3930:
  5644  001AD8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5645  001ADA  0E00               	movlw	0
  5646  001ADC  6E04               	movwf	(___fladd@b+3)^0,c
  5647  001ADE  EF79  F00D         	goto	l3936
  5648  001AE2                     l3934:
  5649  001AE2  0E00               	movlw	0
  5650  001AE4  6E01               	movwf	___fladd@b^0,c
  5651  001AE6  0E00               	movlw	0
  5652  001AE8  6E02               	movwf	(___fladd@b+1)^0,c
  5653  001AEA  0E00               	movlw	0
  5654  001AEC  6E03               	movwf	(___fladd@b+2)^0,c
  5655  001AEE  0E00               	movlw	0
  5656  001AF0  6E04               	movwf	(___fladd@b+3)^0,c
  5657  001AF2                     l3936:
  5658  001AF2  5008               	movf	(___fladd@a+3)^0,w,c
  5659  001AF4  0B80               	andlw	128
  5660  001AF6  6E0E               	movwf	___fladd@aexp^0,c
  5661  001AF8  500D               	movf	___fladd@signs^0,w,c
  5662  001AFA  180E               	xorwf	___fladd@aexp^0,w,c
  5663  001AFC  B4D8               	btfsc	status,2,c
  5664  001AFE  EF83  F00D         	goto	u3401
  5665  001B02  EF85  F00D         	goto	u3400
  5666  001B06                     u3401:
  5667  001B06  EF86  F00D         	goto	l3942
  5668  001B0A                     u3400:
  5669  001B0A  8C0D               	bsf	___fladd@signs^0,6,c
  5670  001B0C                     l3942:
  5671  001B0C  5008               	movf	(___fladd@a+3)^0,w,c
  5672  001B0E  2408               	addwf	(___fladd@a+3)^0,w,c
  5673  001B10  6E0E               	movwf	___fladd@aexp^0,c
  5674  001B12  AE07               	btfss	(___fladd@a+2)^0,7,c
  5675  001B14  EF8E  F00D         	goto	u3411
  5676  001B18  EF90  F00D         	goto	u3410
  5677  001B1C                     u3411:
  5678  001B1C  EF91  F00D         	goto	l3948
  5679  001B20                     u3410:
  5680  001B20  800E               	bsf	___fladd@aexp^0,0,c
  5681  001B22                     l3948:
  5682  001B22  500E               	movf	___fladd@aexp^0,w,c
  5683  001B24  B4D8               	btfsc	status,2,c
  5684  001B26  EF97  F00D         	goto	u3421
  5685  001B2A  EF99  F00D         	goto	u3420
  5686  001B2E                     u3421:
  5687  001B2E  EFAE  F00D         	goto	l3958
  5688  001B32                     u3420:
  5689  001B32  280E               	incf	___fladd@aexp^0,w,c
  5690  001B34  A4D8               	btfss	status,2,c
  5691  001B36  EF9F  F00D         	goto	u3431
  5692  001B3A  EFA1  F00D         	goto	u3430
  5693  001B3E                     u3431:
  5694  001B3E  EFA9  F00D         	goto	l3954
  5695  001B42                     u3430:
  5696  001B42  0E00               	movlw	0
  5697  001B44  6E05               	movwf	___fladd@a^0,c
  5698  001B46  0E00               	movlw	0
  5699  001B48  6E06               	movwf	(___fladd@a+1)^0,c
  5700  001B4A  0E00               	movlw	0
  5701  001B4C  6E07               	movwf	(___fladd@a+2)^0,c
  5702  001B4E  0E00               	movlw	0
  5703  001B50  6E08               	movwf	(___fladd@a+3)^0,c
  5704  001B52                     l3954:
  5705  001B52  8E07               	bsf	(___fladd@a+2)^0,7,c
  5706  001B54  0E00               	movlw	0
  5707  001B56  6E08               	movwf	(___fladd@a+3)^0,c
  5708  001B58  EFB6  F00D         	goto	l3960
  5709  001B5C                     l3958:
  5710  001B5C  0E00               	movlw	0
  5711  001B5E  6E05               	movwf	___fladd@a^0,c
  5712  001B60  0E00               	movlw	0
  5713  001B62  6E06               	movwf	(___fladd@a+1)^0,c
  5714  001B64  0E00               	movlw	0
  5715  001B66  6E07               	movwf	(___fladd@a+2)^0,c
  5716  001B68  0E00               	movlw	0
  5717  001B6A  6E08               	movwf	(___fladd@a+3)^0,c
  5718  001B6C                     l3960:
  5719  001B6C  500F               	movf	___fladd@bexp^0,w,c
  5720  001B6E  5C0E               	subwf	___fladd@aexp^0,w,c
  5721  001B70  B0D8               	btfsc	status,0,c
  5722  001B72  EFBD  F00D         	goto	u3441
  5723  001B76  EFBF  F00D         	goto	u3440
  5724  001B7A                     u3441:
  5725  001B7A  EFE6  F00D         	goto	l3996
  5726  001B7E                     u3440:
  5727  001B7E  AC0D               	btfss	___fladd@signs^0,6,c
  5728  001B80  EFC4  F00D         	goto	u3451
  5729  001B84  EFC6  F00D         	goto	u3450
  5730  001B88                     u3451:
  5731  001B88  EFC8  F00D         	goto	l3966
  5732  001B8C                     u3450:
  5733  001B8C  0E80               	movlw	128
  5734  001B8E  1A0D               	xorwf	___fladd@signs^0,f,c
  5735  001B90                     l3966:
  5736  001B90  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5737  001B94  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5738  001B98  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5739  001B9C  C001  F010         	movff	___fladd@b,___fladd@grs
  5740  001BA0  C005  F001         	movff	___fladd@a,___fladd@b
  5741  001BA4  C010  F005         	movff	___fladd@grs,___fladd@a
  5742  001BA8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5743  001BAC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5744  001BB0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5745  001BB4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5746  001BB8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5747  001BBC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5748  001BC0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5749  001BC4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5750  001BC8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5751  001BCC                     l3996:
  5752  001BCC  0E00               	movlw	0
  5753  001BCE  6E10               	movwf	___fladd@grs^0,c
  5754  001BD0  500F               	movf	___fladd@bexp^0,w,c
  5755  001BD2  C00E  F009         	movff	___fladd@aexp,??___fladd
  5756  001BD6  6A0A               	clrf	(??___fladd+1)^0,c
  5757  001BD8  5E09               	subwf	??___fladd^0,f,c
  5758  001BDA  0E00               	movlw	0
  5759  001BDC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5760  001BDE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5761  001BE0  EFFB  F00D         	goto	u3461
  5762  001BE4  500A               	movf	(??___fladd+1)^0,w,c
  5763  001BE6  E109               	bnz	u3460
  5764  001BE8  0E1A               	movlw	26
  5765  001BEA  5C09               	subwf	??___fladd^0,w,c
  5766  001BEC  A0D8               	btfss	status,0,c
  5767  001BEE  EFFB  F00D         	goto	u3461
  5768  001BF2  EFFD  F00D         	goto	u3460
  5769  001BF6                     u3461:
  5770  001BF6  EF34  F00E         	goto	l1323
  5771  001BFA                     u3460:
  5772  001BFA  5001               	movf	___fladd@b^0,w,c
  5773  001BFC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5774  001BFE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5775  001C00  1004               	iorwf	(___fladd@b+3)^0,w,c
  5776  001C02  A4D8               	btfss	status,2,c
  5777  001C04  EF06  F00E         	goto	u3471
  5778  001C08  EF09  F00E         	goto	u3470
  5779  001C0C                     u3471:
  5780  001C0C  0E01               	movlw	1
  5781  001C0E  EF0A  F00E         	goto	u3480
  5782  001C12                     u3470:
  5783  001C12  0E00               	movlw	0
  5784  001C14                     u3480:
  5785  001C14  6E10               	movwf	___fladd@grs^0,c
  5786  001C16  0E00               	movlw	0
  5787  001C18  6E01               	movwf	___fladd@b^0,c
  5788  001C1A  0E00               	movlw	0
  5789  001C1C  6E02               	movwf	(___fladd@b+1)^0,c
  5790  001C1E  0E00               	movlw	0
  5791  001C20  6E03               	movwf	(___fladd@b+2)^0,c
  5792  001C22  0E00               	movlw	0
  5793  001C24  6E04               	movwf	(___fladd@b+3)^0,c
  5794  001C26  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5795  001C2A  EF3D  F00E         	goto	l1322
  5796  001C2E                     l1324:
  5797  001C2E  A010               	btfss	___fladd@grs^0,0,c
  5798  001C30  EF1C  F00E         	goto	u3491
  5799  001C34  EF1E  F00E         	goto	u3490
  5800  001C38                     u3491:
  5801  001C38  EF24  F00E         	goto	l4008
  5802  001C3C                     u3490:
  5803  001C3C  90D8               	bcf	status,0,c
  5804  001C3E  3010               	rrcf	___fladd@grs^0,w,c
  5805  001C40  0901               	iorlw	1
  5806  001C42  6E10               	movwf	___fladd@grs^0,c
  5807  001C44  EF26  F00E         	goto	l4010
  5808  001C48                     l4008:
  5809  001C48  90D8               	bcf	status,0,c
  5810  001C4A  3210               	rrcf	___fladd@grs^0,f,c
  5811  001C4C                     l4010:
  5812  001C4C  A001               	btfss	___fladd@b^0,0,c
  5813  001C4E  EF2B  F00E         	goto	u3501
  5814  001C52  EF2D  F00E         	goto	u3500
  5815  001C56                     u3501:
  5816  001C56  EF2E  F00E         	goto	l4014
  5817  001C5A                     u3500:
  5818  001C5A  8E10               	bsf	___fladd@grs^0,7,c
  5819  001C5C                     l4014:
  5820  001C5C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5821  001C5E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5822  001C60  3203               	rrcf	(___fladd@b+2)^0,f,c
  5823  001C62  3202               	rrcf	(___fladd@b+1)^0,f,c
  5824  001C64  3201               	rrcf	___fladd@b^0,f,c
  5825  001C66  2A0F               	incf	___fladd@bexp^0,f,c
  5826  001C68                     l1323:
  5827  001C68  500E               	movf	___fladd@aexp^0,w,c
  5828  001C6A  5C0F               	subwf	___fladd@bexp^0,w,c
  5829  001C6C  A0D8               	btfss	status,0,c
  5830  001C6E  EF3B  F00E         	goto	u3511
  5831  001C72  EF3D  F00E         	goto	u3510
  5832  001C76                     u3511:
  5833  001C76  EF17  F00E         	goto	l1324
  5834  001C7A                     u3510:
  5835  001C7A                     l1322:
  5836  001C7A  BC0D               	btfsc	___fladd@signs^0,6,c
  5837  001C7C  EF42  F00E         	goto	u3521
  5838  001C80  EF44  F00E         	goto	u3520
  5839  001C84                     u3521:
  5840  001C84  EF84  F00E         	goto	l4042
  5841  001C88                     u3520:
  5842  001C88  500F               	movf	___fladd@bexp^0,w,c
  5843  001C8A  A4D8               	btfss	status,2,c
  5844  001C8C  EF4A  F00E         	goto	u3531
  5845  001C90  EF4C  F00E         	goto	u3530
  5846  001C94                     u3531:
  5847  001C94  EF56  F00E         	goto	l4024
  5848  001C98                     u3530:
  5849  001C98  0E00               	movlw	0
  5850  001C9A  6E01               	movwf	?___fladd^0,c
  5851  001C9C  0E00               	movlw	0
  5852  001C9E  6E02               	movwf	(?___fladd+1)^0,c
  5853  001CA0  0E00               	movlw	0
  5854  001CA2  6E03               	movwf	(?___fladd+2)^0,c
  5855  001CA4  0E00               	movlw	0
  5856  001CA6  6E04               	movwf	(?___fladd+3)^0,c
  5857  001CA8  EFA5  F00F         	goto	l1331
  5858  001CAC                     l4024:
  5859  001CAC  5005               	movf	___fladd@a^0,w,c
  5860  001CAE  2601               	addwf	___fladd@b^0,f,c
  5861  001CB0  5006               	movf	(___fladd@a+1)^0,w,c
  5862  001CB2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5863  001CB4  5007               	movf	(___fladd@a+2)^0,w,c
  5864  001CB6  2203               	addwfc	(___fladd@b+2)^0,f,c
  5865  001CB8  5008               	movf	(___fladd@a+3)^0,w,c
  5866  001CBA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5867  001CBC  A004               	btfss	(___fladd@b+3)^0,0,c
  5868  001CBE  EF63  F00E         	goto	u3541
  5869  001CC2  EF65  F00E         	goto	u3540
  5870  001CC6                     u3541:
  5871  001CC6  EF11  F00F         	goto	l4078
  5872  001CCA                     u3540:
  5873  001CCA  A010               	btfss	___fladd@grs^0,0,c
  5874  001CCC  EF6A  F00E         	goto	u3551
  5875  001CD0  EF6C  F00E         	goto	u3550
  5876  001CD4                     u3551:
  5877  001CD4  EF72  F00E         	goto	l4032
  5878  001CD8                     u3550:
  5879  001CD8  90D8               	bcf	status,0,c
  5880  001CDA  3010               	rrcf	___fladd@grs^0,w,c
  5881  001CDC  0901               	iorlw	1
  5882  001CDE  6E10               	movwf	___fladd@grs^0,c
  5883  001CE0  EF74  F00E         	goto	l4034
  5884  001CE4                     l4032:
  5885  001CE4  90D8               	bcf	status,0,c
  5886  001CE6  3210               	rrcf	___fladd@grs^0,f,c
  5887  001CE8                     l4034:
  5888  001CE8  A001               	btfss	___fladd@b^0,0,c
  5889  001CEA  EF79  F00E         	goto	u3561
  5890  001CEE  EF7B  F00E         	goto	u3560
  5891  001CF2                     u3561:
  5892  001CF2  EF7C  F00E         	goto	l4038
  5893  001CF6                     u3560:
  5894  001CF6  8E10               	bsf	___fladd@grs^0,7,c
  5895  001CF8                     l4038:
  5896  001CF8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5897  001CFA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5898  001CFC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5899  001CFE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5900  001D00  3201               	rrcf	___fladd@b^0,f,c
  5901  001D02  2A0F               	incf	___fladd@bexp^0,f,c
  5902  001D04  EF11  F00F         	goto	l4078
  5903  001D08                     l4042:
  5904  001D08  5005               	movf	___fladd@a^0,w,c
  5905  001D0A  5C01               	subwf	___fladd@b^0,w,c
  5906  001D0C  5006               	movf	(___fladd@a+1)^0,w,c
  5907  001D0E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5908  001D10  5007               	movf	(___fladd@a+2)^0,w,c
  5909  001D12  5803               	subwfb	(___fladd@b+2)^0,w,c
  5910  001D14  5004               	movf	(___fladd@b+3)^0,w,c
  5911  001D16  0A80               	xorlw	128
  5912  001D18  6E09               	movwf	??___fladd^0,c
  5913  001D1A  5008               	movf	(___fladd@a+3)^0,w,c
  5914  001D1C  0A80               	xorlw	128
  5915  001D1E  5809               	subwfb	??___fladd^0,w,c
  5916  001D20  B0D8               	btfsc	status,0,c
  5917  001D22  EF95  F00E         	goto	u3571
  5918  001D26  EF97  F00E         	goto	u3570
  5919  001D2A                     u3571:
  5920  001D2A  EFC2  F00E         	goto	l4052
  5921  001D2E                     u3570:
  5922  001D2E  5001               	movf	___fladd@b^0,w,c
  5923  001D30  5C05               	subwf	___fladd@a^0,w,c
  5924  001D32  6E09               	movwf	??___fladd^0,c
  5925  001D34  5002               	movf	(___fladd@b+1)^0,w,c
  5926  001D36  5806               	subwfb	(___fladd@a+1)^0,w,c
  5927  001D38  6E0A               	movwf	(??___fladd+1)^0,c
  5928  001D3A  5003               	movf	(___fladd@b+2)^0,w,c
  5929  001D3C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5930  001D3E  6E0B               	movwf	(??___fladd+2)^0,c
  5931  001D40  5004               	movf	(___fladd@b+3)^0,w,c
  5932  001D42  5808               	subwfb	(___fladd@a+3)^0,w,c
  5933  001D44  6E0C               	movwf	(??___fladd+3)^0,c
  5934  001D46  0EFF               	movlw	255
  5935  001D48  2409               	addwf	??___fladd^0,w,c
  5936  001D4A  6E01               	movwf	___fladd@b^0,c
  5937  001D4C  0EFF               	movlw	255
  5938  001D4E  200A               	addwfc	(??___fladd+1)^0,w,c
  5939  001D50  6E02               	movwf	(___fladd@b+1)^0,c
  5940  001D52  0EFF               	movlw	255
  5941  001D54  200B               	addwfc	(??___fladd+2)^0,w,c
  5942  001D56  6E03               	movwf	(___fladd@b+2)^0,c
  5943  001D58  0EFF               	movlw	255
  5944  001D5A  200C               	addwfc	(??___fladd+3)^0,w,c
  5945  001D5C  6E04               	movwf	(___fladd@b+3)^0,c
  5946  001D5E  0E80               	movlw	128
  5947  001D60  1A0D               	xorwf	___fladd@signs^0,f,c
  5948  001D62  6C10               	negf	___fladd@grs^0,c
  5949  001D64  5010               	movf	___fladd@grs^0,w,c
  5950  001D66  A4D8               	btfss	status,2,c
  5951  001D68  EFB8  F00E         	goto	u3581
  5952  001D6C  EFBA  F00E         	goto	u3580
  5953  001D70                     u3581:
  5954  001D70  EFCA  F00E         	goto	l1339
  5955  001D74                     u3580:
  5956  001D74  0E01               	movlw	1
  5957  001D76  2601               	addwf	___fladd@b^0,f,c
  5958  001D78  0E00               	movlw	0
  5959  001D7A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5960  001D7C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5961  001D7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5962  001D80  EFCA  F00E         	goto	l1339
  5963  001D84                     l4052:
  5964  001D84  5005               	movf	___fladd@a^0,w,c
  5965  001D86  5E01               	subwf	___fladd@b^0,f,c
  5966  001D88  5006               	movf	(___fladd@a+1)^0,w,c
  5967  001D8A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5968  001D8C  5007               	movf	(___fladd@a+2)^0,w,c
  5969  001D8E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5970  001D90  5008               	movf	(___fladd@a+3)^0,w,c
  5971  001D92  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5972  001D94                     l1339:
  5973  001D94  5001               	movf	___fladd@b^0,w,c
  5974  001D96  1002               	iorwf	(___fladd@b+1)^0,w,c
  5975  001D98  1003               	iorwf	(___fladd@b+2)^0,w,c
  5976  001D9A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5977  001D9C  A4D8               	btfss	status,2,c
  5978  001D9E  EFD3  F00E         	goto	u3591
  5979  001DA2  EFD5  F00E         	goto	u3590
  5980  001DA6                     u3591:
  5981  001DA6  EF0A  F00F         	goto	l4076
  5982  001DAA                     u3590:
  5983  001DAA  5010               	movf	___fladd@grs^0,w,c
  5984  001DAC  A4D8               	btfss	status,2,c
  5985  001DAE  EFDB  F00E         	goto	u3601
  5986  001DB2  EFDD  F00E         	goto	u3600
  5987  001DB6                     u3601:
  5988  001DB6  EF0A  F00F         	goto	l4076
  5989  001DBA                     u3600:
  5990  001DBA  0E00               	movlw	0
  5991  001DBC  6E01               	movwf	?___fladd^0,c
  5992  001DBE  0E00               	movlw	0
  5993  001DC0  6E02               	movwf	(?___fladd+1)^0,c
  5994  001DC2  0E00               	movlw	0
  5995  001DC4  6E03               	movwf	(?___fladd+2)^0,c
  5996  001DC6  0E00               	movlw	0
  5997  001DC8  6E04               	movwf	(?___fladd+3)^0,c
  5998  001DCA  EFA5  F00F         	goto	l1331
  5999  001DCE                     l4060:
  6000  001DCE  90D8               	bcf	status,0,c
  6001  001DD0  3601               	rlcf	___fladd@b^0,f,c
  6002  001DD2  3602               	rlcf	(___fladd@b+1)^0,f,c
  6003  001DD4  3603               	rlcf	(___fladd@b+2)^0,f,c
  6004  001DD6  3604               	rlcf	(___fladd@b+3)^0,f,c
  6005  001DD8  AE10               	btfss	___fladd@grs^0,7,c
  6006  001DDA  EFF1  F00E         	goto	u3611
  6007  001DDE  EFF3  F00E         	goto	u3610
  6008  001DE2                     u3611:
  6009  001DE2  EFF4  F00E         	goto	l4066
  6010  001DE6                     u3610:
  6011  001DE6  8001               	bsf	___fladd@b^0,0,c
  6012  001DE8                     l4066:
  6013  001DE8  A010               	btfss	___fladd@grs^0,0,c
  6014  001DEA  EFF9  F00E         	goto	u3621
  6015  001DEE  EFFB  F00E         	goto	u3620
  6016  001DF2                     u3621:
  6017  001DF2  EFFF  F00E         	goto	l4070
  6018  001DF6                     u3620:
  6019  001DF6  80D8               	bsf	status,0,c
  6020  001DF8  3610               	rlcf	___fladd@grs^0,f,c
  6021  001DFA  EF01  F00F         	goto	l4072
  6022  001DFE                     l4070:
  6023  001DFE  90D8               	bcf	status,0,c
  6024  001E00  3610               	rlcf	___fladd@grs^0,f,c
  6025  001E02                     l4072:
  6026  001E02  500F               	movf	___fladd@bexp^0,w,c
  6027  001E04  B4D8               	btfsc	status,2,c
  6028  001E06  EF07  F00F         	goto	u3631
  6029  001E0A  EF09  F00F         	goto	u3630
  6030  001E0E                     u3631:
  6031  001E0E  EF0A  F00F         	goto	l4076
  6032  001E12                     u3630:
  6033  001E12  060F               	decf	___fladd@bexp^0,f,c
  6034  001E14                     l4076:
  6035  001E14  AE03               	btfss	(___fladd@b+2)^0,7,c
  6036  001E16  EF0F  F00F         	goto	u3641
  6037  001E1A  EF11  F00F         	goto	u3640
  6038  001E1E                     u3641:
  6039  001E1E  EFE7  F00E         	goto	l4060
  6040  001E22                     u3640:
  6041  001E22                     l4078:
  6042  001E22  0E00               	movlw	0
  6043  001E24  6E0E               	movwf	___fladd@aexp^0,c
  6044  001E26  AE10               	btfss	___fladd@grs^0,7,c
  6045  001E28  EF18  F00F         	goto	u3651
  6046  001E2C  EF1A  F00F         	goto	u3650
  6047  001E30                     u3651:
  6048  001E30  EF32  F00F         	goto	l1348
  6049  001E34                     u3650:
  6050  001E34  C010  F009         	movff	___fladd@grs,??___fladd
  6051  001E38  0E7F               	movlw	127
  6052  001E3A  1609               	andwf	??___fladd^0,f,c
  6053  001E3C  B4D8               	btfsc	status,2,c
  6054  001E3E  EF23  F00F         	goto	u3661
  6055  001E42  EF25  F00F         	goto	u3660
  6056  001E46                     u3661:
  6057  001E46  EF29  F00F         	goto	l1349
  6058  001E4A                     u3660:
  6059  001E4A                     l4084:
  6060  001E4A  0E01               	movlw	1
  6061  001E4C  6E0E               	movwf	___fladd@aexp^0,c
  6062  001E4E  EF32  F00F         	goto	l1348
  6063  001E52                     l1349:
  6064  001E52  A001               	btfss	___fladd@b^0,0,c
  6065  001E54  EF2E  F00F         	goto	u3671
  6066  001E58  EF30  F00F         	goto	u3670
  6067  001E5C                     u3671:
  6068  001E5C  EF32  F00F         	goto	l1348
  6069  001E60                     u3670:
  6070  001E60  EF25  F00F         	goto	l4084
  6071  001E64                     l1348:
  6072  001E64  500E               	movf	___fladd@aexp^0,w,c
  6073  001E66  B4D8               	btfsc	status,2,c
  6074  001E68  EF38  F00F         	goto	u3681
  6075  001E6C  EF3A  F00F         	goto	u3680
  6076  001E70                     u3681:
  6077  001E70  EF65  F00F         	goto	l4096
  6078  001E74                     u3680:
  6079  001E74  0E01               	movlw	1
  6080  001E76  2601               	addwf	___fladd@b^0,f,c
  6081  001E78  0E00               	movlw	0
  6082  001E7A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6083  001E7C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6084  001E7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6085  001E80  A004               	btfss	(___fladd@b+3)^0,0,c
  6086  001E82  EF45  F00F         	goto	u3691
  6087  001E86  EF47  F00F         	goto	u3690
  6088  001E8A                     u3691:
  6089  001E8A  EF65  F00F         	goto	l4096
  6090  001E8E                     u3690:
  6091  001E8E  C001  F009         	movff	___fladd@b,??___fladd
  6092  001E92  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6093  001E96  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6094  001E9A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6095  001E9E  340C               	rlcf	(??___fladd+3)^0,w,c
  6096  001EA0  320C               	rrcf	(??___fladd+3)^0,f,c
  6097  001EA2  320B               	rrcf	(??___fladd+2)^0,f,c
  6098  001EA4  320A               	rrcf	(??___fladd+1)^0,f,c
  6099  001EA6  3209               	rrcf	??___fladd^0,f,c
  6100  001EA8  C009  F001         	movff	??___fladd,___fladd@b
  6101  001EAC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6102  001EB0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6103  001EB4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6104  001EB8  280F               	incf	___fladd@bexp^0,w,c
  6105  001EBA  B4D8               	btfsc	status,2,c
  6106  001EBC  EF62  F00F         	goto	u3701
  6107  001EC0  EF64  F00F         	goto	u3700
  6108  001EC4                     u3701:
  6109  001EC4  EF65  F00F         	goto	l4096
  6110  001EC8                     u3700:
  6111  001EC8  2A0F               	incf	___fladd@bexp^0,f,c
  6112  001ECA                     l4096:
  6113  001ECA  280F               	incf	___fladd@bexp^0,w,c
  6114  001ECC  B4D8               	btfsc	status,2,c
  6115  001ECE  EF6B  F00F         	goto	u3711
  6116  001ED2  EF6D  F00F         	goto	u3710
  6117  001ED6                     u3711:
  6118  001ED6  EF75  F00F         	goto	l4100
  6119  001EDA                     u3710:
  6120  001EDA  500F               	movf	___fladd@bexp^0,w,c
  6121  001EDC  A4D8               	btfss	status,2,c
  6122  001EDE  EF73  F00F         	goto	u3721
  6123  001EE2  EF75  F00F         	goto	u3720
  6124  001EE6                     u3721:
  6125  001EE6  EF87  F00F         	goto	l4104
  6126  001EEA                     u3720:
  6127  001EEA                     l4100:
  6128  001EEA  0E00               	movlw	0
  6129  001EEC  6E01               	movwf	___fladd@b^0,c
  6130  001EEE  0E00               	movlw	0
  6131  001EF0  6E02               	movwf	(___fladd@b+1)^0,c
  6132  001EF2  0E00               	movlw	0
  6133  001EF4  6E03               	movwf	(___fladd@b+2)^0,c
  6134  001EF6  0E00               	movlw	0
  6135  001EF8  6E04               	movwf	(___fladd@b+3)^0,c
  6136  001EFA  500F               	movf	___fladd@bexp^0,w,c
  6137  001EFC  A4D8               	btfss	status,2,c
  6138  001EFE  EF83  F00F         	goto	u3731
  6139  001F02  EF85  F00F         	goto	u3730
  6140  001F06                     u3731:
  6141  001F06  EF87  F00F         	goto	l4104
  6142  001F0A                     u3730:
  6143  001F0A  0E00               	movlw	0
  6144  001F0C  6E0D               	movwf	___fladd@signs^0,c
  6145  001F0E                     l4104:
  6146  001F0E  A00F               	btfss	___fladd@bexp^0,0,c
  6147  001F10  EF8C  F00F         	goto	u3741
  6148  001F14  EF8E  F00F         	goto	u3740
  6149  001F18                     u3741:
  6150  001F18  EF91  F00F         	goto	l4108
  6151  001F1C                     u3740:
  6152  001F1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  6153  001F1E  EF92  F00F         	goto	l4110
  6154  001F22                     l4108:
  6155  001F22  9E03               	bcf	(___fladd@b+2)^0,7,c
  6156  001F24                     l4110:
  6157  001F24  90D8               	bcf	status,0,c
  6158  001F26  300F               	rrcf	___fladd@bexp^0,w,c
  6159  001F28  6E04               	movwf	(___fladd@b+3)^0,c
  6160  001F2A  AE0D               	btfss	___fladd@signs^0,7,c
  6161  001F2C  EF9A  F00F         	goto	u3751
  6162  001F30  EF9C  F00F         	goto	u3750
  6163  001F34                     u3751:
  6164  001F34  EF9D  F00F         	goto	l4116
  6165  001F38                     u3750:
  6166  001F38  8E04               	bsf	(___fladd@b+3)^0,7,c
  6167  001F3A                     l4116:
  6168  001F3A  C001  F001         	movff	___fladd@b,?___fladd
  6169  001F3E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6170  001F42  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6171  001F46  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6172  001F4A                     l1331:
  6173  001F4A  0012               	return		;funcret
  6174  001F4C                     __end_of___fladd:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function ___flneg *****************
  6178 ;; Defined at:
  6179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  f1              4    0[COMRAM] unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  4    0[COMRAM] unsigned char 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;Total ram usage:        4 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_roundf
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text22
  6208  005972                     __ptext22:
  6209                           	callstack 0
  6210  005972                     ___flneg:
  6211                           	callstack 25
  6212  005972  5001               	movf	___flneg@f1^0,w,c
  6213  005974  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6214  005976  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6215  005978  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6216  00597A  B4D8               	btfsc	status,2,c
  6217  00597C  EFC2  F02C         	goto	u4111
  6218  005980  EFC4  F02C         	goto	u4110
  6219  005984                     u4111:
  6220  005984  EFCC  F02C         	goto	l4380
  6221  005988                     u4110:
  6222  005988  0E00               	movlw	0
  6223  00598A  1A01               	xorwf	___flneg@f1^0,f,c
  6224  00598C  0E00               	movlw	0
  6225  00598E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6226  005990  0E00               	movlw	0
  6227  005992  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6228  005994  0E80               	movlw	128
  6229  005996  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6230  005998                     l4380:
  6231  005998  C001  F001         	movff	___flneg@f1,?___flneg
  6232  00599C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6233  0059A0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6234  0059A4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6235  0059A8  0012               	return		;funcret
  6236  0059AA                     __end_of___flneg:
  6237                           	callstack 0
  6238                           
  6239 ;; *************** function ___flmul *****************
  6240 ;; Defined at:
  6241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  b               4   39[COMRAM] unsigned char 
  6244 ;;  a               4   43[COMRAM] unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  prod            4   58[COMRAM] struct .
  6247 ;;  grs             4   52[COMRAM] unsigned long 
  6248 ;;  temp            2   62[COMRAM] struct .
  6249 ;;  bexp            1   57[COMRAM] unsigned char 
  6250 ;;  aexp            1   56[COMRAM] unsigned char 
  6251 ;;  sign            1   51[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  4   39[COMRAM] unsigned char 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0, prodl, prodh
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;Total ram usage:       25 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_detect_color
  6272 ;;		_distance_measure
  6273 ;;		_roundf
  6274 ;;		_check_color_reading
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text23
  6279  001F4C                     __ptext23:
  6280                           	callstack 0
  6281  001F4C                     ___flmul:
  6282                           	callstack 25
  6283  001F4C  502B               	movf	(___flmul@b+3)^0,w,c
  6284  001F4E  0B80               	andlw	128
  6285  001F50  6E34               	movwf	___flmul@sign^0,c
  6286  001F52  502B               	movf	(___flmul@b+3)^0,w,c
  6287  001F54  242B               	addwf	(___flmul@b+3)^0,w,c
  6288  001F56  6E3A               	movwf	___flmul@bexp^0,c
  6289  001F58  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6290  001F5A  EFB1  F00F         	goto	u3871
  6291  001F5E  EFB3  F00F         	goto	u3870
  6292  001F62                     u3871:
  6293  001F62  EFB4  F00F         	goto	l4224
  6294  001F66                     u3870:
  6295  001F66  803A               	bsf	___flmul@bexp^0,0,c
  6296  001F68                     l4224:
  6297  001F68  503A               	movf	___flmul@bexp^0,w,c
  6298  001F6A  B4D8               	btfsc	status,2,c
  6299  001F6C  EFBA  F00F         	goto	u3881
  6300  001F70  EFBC  F00F         	goto	u3880
  6301  001F74                     u3881:
  6302  001F74  EFCF  F00F         	goto	l4232
  6303  001F78                     u3880:
  6304  001F78  283A               	incf	___flmul@bexp^0,w,c
  6305  001F7A  A4D8               	btfss	status,2,c
  6306  001F7C  EFC2  F00F         	goto	u3891
  6307  001F80  EFC4  F00F         	goto	u3890
  6308  001F84                     u3891:
  6309  001F84  EFCC  F00F         	goto	l4230
  6310  001F88                     u3890:
  6311  001F88  0E00               	movlw	0
  6312  001F8A  6E28               	movwf	___flmul@b^0,c
  6313  001F8C  0E00               	movlw	0
  6314  001F8E  6E29               	movwf	(___flmul@b+1)^0,c
  6315  001F90  0E00               	movlw	0
  6316  001F92  6E2A               	movwf	(___flmul@b+2)^0,c
  6317  001F94  0E00               	movlw	0
  6318  001F96  6E2B               	movwf	(___flmul@b+3)^0,c
  6319  001F98                     l4230:
  6320  001F98  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6321  001F9A  EFD7  F00F         	goto	l4234
  6322  001F9E                     l4232:
  6323  001F9E  0E00               	movlw	0
  6324  001FA0  6E28               	movwf	___flmul@b^0,c
  6325  001FA2  0E00               	movlw	0
  6326  001FA4  6E29               	movwf	(___flmul@b+1)^0,c
  6327  001FA6  0E00               	movlw	0
  6328  001FA8  6E2A               	movwf	(___flmul@b+2)^0,c
  6329  001FAA  0E00               	movlw	0
  6330  001FAC  6E2B               	movwf	(___flmul@b+3)^0,c
  6331  001FAE                     l4234:
  6332  001FAE  502F               	movf	(___flmul@a+3)^0,w,c
  6333  001FB0  0B80               	andlw	128
  6334  001FB2  1A34               	xorwf	___flmul@sign^0,f,c
  6335  001FB4  502F               	movf	(___flmul@a+3)^0,w,c
  6336  001FB6  242F               	addwf	(___flmul@a+3)^0,w,c
  6337  001FB8  6E39               	movwf	___flmul@aexp^0,c
  6338  001FBA  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6339  001FBC  EFE2  F00F         	goto	u3901
  6340  001FC0  EFE4  F00F         	goto	u3900
  6341  001FC4                     u3901:
  6342  001FC4  EFE5  F00F         	goto	l4242
  6343  001FC8                     u3900:
  6344  001FC8  8039               	bsf	___flmul@aexp^0,0,c
  6345  001FCA                     l4242:
  6346  001FCA  5039               	movf	___flmul@aexp^0,w,c
  6347  001FCC  B4D8               	btfsc	status,2,c
  6348  001FCE  EFEB  F00F         	goto	u3911
  6349  001FD2  EFED  F00F         	goto	u3910
  6350  001FD6                     u3911:
  6351  001FD6  EF00  F010         	goto	l4250
  6352  001FDA                     u3910:
  6353  001FDA  2839               	incf	___flmul@aexp^0,w,c
  6354  001FDC  A4D8               	btfss	status,2,c
  6355  001FDE  EFF3  F00F         	goto	u3921
  6356  001FE2  EFF5  F00F         	goto	u3920
  6357  001FE6                     u3921:
  6358  001FE6  EFFD  F00F         	goto	l4248
  6359  001FEA                     u3920:
  6360  001FEA  0E00               	movlw	0
  6361  001FEC  6E2C               	movwf	___flmul@a^0,c
  6362  001FEE  0E00               	movlw	0
  6363  001FF0  6E2D               	movwf	(___flmul@a+1)^0,c
  6364  001FF2  0E00               	movlw	0
  6365  001FF4  6E2E               	movwf	(___flmul@a+2)^0,c
  6366  001FF6  0E00               	movlw	0
  6367  001FF8  6E2F               	movwf	(___flmul@a+3)^0,c
  6368  001FFA                     l4248:
  6369  001FFA  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6370  001FFC  EF08  F010         	goto	l1408
  6371  002000                     l4250:
  6372  002000  0E00               	movlw	0
  6373  002002  6E2C               	movwf	___flmul@a^0,c
  6374  002004  0E00               	movlw	0
  6375  002006  6E2D               	movwf	(___flmul@a+1)^0,c
  6376  002008  0E00               	movlw	0
  6377  00200A  6E2E               	movwf	(___flmul@a+2)^0,c
  6378  00200C  0E00               	movlw	0
  6379  00200E  6E2F               	movwf	(___flmul@a+3)^0,c
  6380  002010                     l1408:
  6381  002010  5039               	movf	___flmul@aexp^0,w,c
  6382  002012  B4D8               	btfsc	status,2,c
  6383  002014  EF0E  F010         	goto	u3931
  6384  002018  EF10  F010         	goto	u3930
  6385  00201C                     u3931:
  6386  00201C  EF18  F010         	goto	l4254
  6387  002020                     u3930:
  6388  002020  503A               	movf	___flmul@bexp^0,w,c
  6389  002022  A4D8               	btfss	status,2,c
  6390  002024  EF16  F010         	goto	u3941
  6391  002028  EF18  F010         	goto	u3940
  6392  00202C                     u3941:
  6393  00202C  EF22  F010         	goto	l4258
  6394  002030                     u3940:
  6395  002030                     l4254:
  6396  002030  0E00               	movlw	0
  6397  002032  6E28               	movwf	?___flmul^0,c
  6398  002034  0E00               	movlw	0
  6399  002036  6E29               	movwf	(?___flmul+1)^0,c
  6400  002038  0E00               	movlw	0
  6401  00203A  6E2A               	movwf	(?___flmul+2)^0,c
  6402  00203C  0E00               	movlw	0
  6403  00203E  6E2B               	movwf	(?___flmul+3)^0,c
  6404  002040  EFBA  F011         	goto	l1412
  6405  002044                     l4258:
  6406  002044  502E               	movf	(___flmul@a+2)^0,w,c
  6407  002046  0228               	mulwf	___flmul@b^0,c
  6408  002048  CFF3 F03F          	movff	prodl,___flmul@temp
  6409  00204C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6410  002050  503F               	movf	___flmul@temp^0,w,c
  6411  002052  6E35               	movwf	___flmul@grs^0,c
  6412  002054  6A36               	clrf	(___flmul@grs+1)^0,c
  6413  002056  6A37               	clrf	(___flmul@grs+2)^0,c
  6414  002058  6A38               	clrf	(___flmul@grs+3)^0,c
  6415  00205A  5040               	movf	(___flmul@temp+1)^0,w,c
  6416  00205C  6E3B               	movwf	___flmul@prod^0,c
  6417  00205E  6A3C               	clrf	(___flmul@prod+1)^0,c
  6418  002060  6A3D               	clrf	(___flmul@prod+2)^0,c
  6419  002062  6A3E               	clrf	(___flmul@prod+3)^0,c
  6420  002064  502D               	movf	(___flmul@a+1)^0,w,c
  6421  002066  0229               	mulwf	(___flmul@b+1)^0,c
  6422  002068  CFF3 F03F          	movff	prodl,___flmul@temp
  6423  00206C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6424  002070  503F               	movf	___flmul@temp^0,w,c
  6425  002072  2635               	addwf	___flmul@grs^0,f,c
  6426  002074  0E00               	movlw	0
  6427  002076  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6428  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6429  00207A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6430  00207C  5040               	movf	(___flmul@temp+1)^0,w,c
  6431  00207E  263B               	addwf	___flmul@prod^0,f,c
  6432  002080  0E00               	movlw	0
  6433  002082  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6434  002084  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6435  002086  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6436  002088  502C               	movf	___flmul@a^0,w,c
  6437  00208A  022A               	mulwf	(___flmul@b+2)^0,c
  6438  00208C  CFF3 F03F          	movff	prodl,___flmul@temp
  6439  002090  CFF4 F040          	movff	prodh,___flmul@temp+1
  6440  002094  503F               	movf	___flmul@temp^0,w,c
  6441  002096  2635               	addwf	___flmul@grs^0,f,c
  6442  002098  0E00               	movlw	0
  6443  00209A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6444  00209C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6445  00209E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6446  0020A0  5040               	movf	(___flmul@temp+1)^0,w,c
  6447  0020A2  263B               	addwf	___flmul@prod^0,f,c
  6448  0020A4  0E00               	movlw	0
  6449  0020A6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6450  0020A8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6451  0020AA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6452  0020AC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6453  0020B0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6454  0020B4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6455  0020B8  6A35               	clrf	___flmul@grs^0,c
  6456  0020BA  502C               	movf	___flmul@a^0,w,c
  6457  0020BC  0229               	mulwf	(___flmul@b+1)^0,c
  6458  0020BE  CFF3 F03F          	movff	prodl,___flmul@temp
  6459  0020C2  CFF4 F040          	movff	prodh,___flmul@temp+1
  6460  0020C6  503F               	movf	___flmul@temp^0,w,c
  6461  0020C8  2635               	addwf	___flmul@grs^0,f,c
  6462  0020CA  5040               	movf	(___flmul@temp+1)^0,w,c
  6463  0020CC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6464  0020CE  0E00               	movlw	0
  6465  0020D0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6466  0020D2  0E00               	movlw	0
  6467  0020D4  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6468  0020D6  502D               	movf	(___flmul@a+1)^0,w,c
  6469  0020D8  0228               	mulwf	___flmul@b^0,c
  6470  0020DA  CFF3 F03F          	movff	prodl,___flmul@temp
  6471  0020DE  CFF4 F040          	movff	prodh,___flmul@temp+1
  6472  0020E2  503F               	movf	___flmul@temp^0,w,c
  6473  0020E4  2635               	addwf	___flmul@grs^0,f,c
  6474  0020E6  5040               	movf	(___flmul@temp+1)^0,w,c
  6475  0020E8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6476  0020EA  0E00               	movlw	0
  6477  0020EC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6478  0020EE  0E00               	movlw	0
  6479  0020F0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6480  0020F2  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6481  0020F6  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6482  0020FA  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6483  0020FE  6A35               	clrf	___flmul@grs^0,c
  6484  002100  502C               	movf	___flmul@a^0,w,c
  6485  002102  0228               	mulwf	___flmul@b^0,c
  6486  002104  CFF3 F03F          	movff	prodl,___flmul@temp
  6487  002108  CFF4 F040          	movff	prodh,___flmul@temp+1
  6488  00210C  503F               	movf	___flmul@temp^0,w,c
  6489  00210E  2635               	addwf	___flmul@grs^0,f,c
  6490  002110  5040               	movf	(___flmul@temp+1)^0,w,c
  6491  002112  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6492  002114  0E00               	movlw	0
  6493  002116  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6494  002118  0E00               	movlw	0
  6495  00211A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6496  00211C  502E               	movf	(___flmul@a+2)^0,w,c
  6497  00211E  0229               	mulwf	(___flmul@b+1)^0,c
  6498  002120  CFF3 F03F          	movff	prodl,___flmul@temp
  6499  002124  CFF4 F040          	movff	prodh,___flmul@temp+1
  6500  002128  503F               	movf	___flmul@temp^0,w,c
  6501  00212A  263B               	addwf	___flmul@prod^0,f,c
  6502  00212C  5040               	movf	(___flmul@temp+1)^0,w,c
  6503  00212E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6504  002130  0E00               	movlw	0
  6505  002132  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6506  002134  0E00               	movlw	0
  6507  002136  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6508  002138  502D               	movf	(___flmul@a+1)^0,w,c
  6509  00213A  022A               	mulwf	(___flmul@b+2)^0,c
  6510  00213C  CFF3 F03F          	movff	prodl,___flmul@temp
  6511  002140  CFF4 F040          	movff	prodh,___flmul@temp+1
  6512  002144  503F               	movf	___flmul@temp^0,w,c
  6513  002146  263B               	addwf	___flmul@prod^0,f,c
  6514  002148  5040               	movf	(___flmul@temp+1)^0,w,c
  6515  00214A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6516  00214C  0E00               	movlw	0
  6517  00214E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6518  002150  0E00               	movlw	0
  6519  002152  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6520  002154  502E               	movf	(___flmul@a+2)^0,w,c
  6521  002156  022A               	mulwf	(___flmul@b+2)^0,c
  6522  002158  CFF3 F03F          	movff	prodl,___flmul@temp
  6523  00215C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6524  002160  503F               	movf	___flmul@temp^0,w,c
  6525  002162  6E30               	movwf	??___flmul^0,c
  6526  002164  5040               	movf	(___flmul@temp+1)^0,w,c
  6527  002166  6E31               	movwf	(??___flmul+1)^0,c
  6528  002168  6A32               	clrf	(??___flmul+2)^0,c
  6529  00216A  6A33               	clrf	(??___flmul+3)^0,c
  6530  00216C  C032  F033         	movff	??___flmul+2,??___flmul+3
  6531  002170  C031  F032         	movff	??___flmul+1,??___flmul+2
  6532  002174  C030  F031         	movff	??___flmul,??___flmul+1
  6533  002178  6A30               	clrf	??___flmul^0,c
  6534  00217A  5030               	movf	??___flmul^0,w,c
  6535  00217C  263B               	addwf	___flmul@prod^0,f,c
  6536  00217E  5031               	movf	(??___flmul+1)^0,w,c
  6537  002180  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6538  002182  5032               	movf	(??___flmul+2)^0,w,c
  6539  002184  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6540  002186  5033               	movf	(??___flmul+3)^0,w,c
  6541  002188  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6542  00218A  C035  F030         	movff	___flmul@grs,??___flmul
  6543  00218E  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6544  002192  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6545  002196  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6546  00219A  0E19               	movlw	25
  6547  00219C  EFD5  F010         	goto	u3950
  6548  0021A0                     u3955:
  6549  0021A0  90D8               	bcf	status,0,c
  6550  0021A2  3233               	rrcf	(??___flmul+3)^0,f,c
  6551  0021A4  3232               	rrcf	(??___flmul+2)^0,f,c
  6552  0021A6  3231               	rrcf	(??___flmul+1)^0,f,c
  6553  0021A8  3230               	rrcf	??___flmul^0,f,c
  6554  0021AA                     u3950:
  6555  0021AA  2EE8               	decfsz	wreg,f,c
  6556  0021AC  EFD0  F010         	goto	u3955
  6557  0021B0  5030               	movf	??___flmul^0,w,c
  6558  0021B2  263B               	addwf	___flmul@prod^0,f,c
  6559  0021B4  5031               	movf	(??___flmul+1)^0,w,c
  6560  0021B6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6561  0021B8  5032               	movf	(??___flmul+2)^0,w,c
  6562  0021BA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6563  0021BC  5033               	movf	(??___flmul+3)^0,w,c
  6564  0021BE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6565  0021C0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6566  0021C4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6567  0021C8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6568  0021CC  6A35               	clrf	___flmul@grs^0,c
  6569  0021CE  5039               	movf	___flmul@aexp^0,w,c
  6570  0021D0  C03A  F030         	movff	___flmul@bexp,??___flmul
  6571  0021D4  6A31               	clrf	(??___flmul+1)^0,c
  6572  0021D6  2630               	addwf	??___flmul^0,f,c
  6573  0021D8  0E00               	movlw	0
  6574  0021DA  2231               	addwfc	(??___flmul+1)^0,f,c
  6575  0021DC  0E82               	movlw	130
  6576  0021DE  2430               	addwf	??___flmul^0,w,c
  6577  0021E0  6E3F               	movwf	___flmul@temp^0,c
  6578  0021E2  0EFF               	movlw	255
  6579  0021E4  2031               	addwfc	(??___flmul+1)^0,w,c
  6580  0021E6  6E40               	movwf	(___flmul@temp+1)^0,c
  6581  0021E8  EF0B  F011         	goto	l4306
  6582  0021EC                     l4300:
  6583  0021EC  90D8               	bcf	status,0,c
  6584  0021EE  363B               	rlcf	___flmul@prod^0,f,c
  6585  0021F0  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6586  0021F2  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6587  0021F4  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6588  0021F6  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6589  0021F8  EF00  F011         	goto	u3961
  6590  0021FC  EF02  F011         	goto	u3960
  6591  002200                     u3961:
  6592  002200  EF03  F011         	goto	l1415
  6593  002204                     u3960:
  6594  002204  803B               	bsf	___flmul@prod^0,0,c
  6595  002206                     l1415:
  6596  002206  90D8               	bcf	status,0,c
  6597  002208  3635               	rlcf	___flmul@grs^0,f,c
  6598  00220A  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6599  00220C  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6600  00220E  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6601  002210  063F               	decf	___flmul@temp^0,f,c
  6602  002212  A0D8               	btfss	status,0,c
  6603  002214  0640               	decf	(___flmul@temp+1)^0,f,c
  6604  002216                     l4306:
  6605  002216  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6606  002218  EF10  F011         	goto	u3971
  6607  00221C  EF12  F011         	goto	u3970
  6608  002220                     u3971:
  6609  002220  EFF6  F010         	goto	l4300
  6610  002224                     u3970:
  6611  002224  0E00               	movlw	0
  6612  002226  6E39               	movwf	___flmul@aexp^0,c
  6613  002228  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6614  00222A  EF19  F011         	goto	u3981
  6615  00222E  EF1B  F011         	goto	u3980
  6616  002232                     u3981:
  6617  002232  EF3F  F011         	goto	l1417
  6618  002236                     u3980:
  6619  002236  0EFF               	movlw	255
  6620  002238  1435               	andwf	___flmul@grs^0,w,c
  6621  00223A  6E30               	movwf	??___flmul^0,c
  6622  00223C  0EFF               	movlw	255
  6623  00223E  1436               	andwf	(___flmul@grs+1)^0,w,c
  6624  002240  6E31               	movwf	(??___flmul+1)^0,c
  6625  002242  0EFF               	movlw	255
  6626  002244  1437               	andwf	(___flmul@grs+2)^0,w,c
  6627  002246  6E32               	movwf	(??___flmul+2)^0,c
  6628  002248  0E7F               	movlw	127
  6629  00224A  1438               	andwf	(___flmul@grs+3)^0,w,c
  6630  00224C  6E33               	movwf	(??___flmul+3)^0,c
  6631  00224E  5030               	movf	??___flmul^0,w,c
  6632  002250  1031               	iorwf	(??___flmul+1)^0,w,c
  6633  002252  1032               	iorwf	(??___flmul+2)^0,w,c
  6634  002254  1033               	iorwf	(??___flmul+3)^0,w,c
  6635  002256  B4D8               	btfsc	status,2,c
  6636  002258  EF30  F011         	goto	u3991
  6637  00225C  EF32  F011         	goto	u3990
  6638  002260                     u3991:
  6639  002260  EF36  F011         	goto	l1418
  6640  002264                     u3990:
  6641  002264                     l4314:
  6642  002264  0E01               	movlw	1
  6643  002266  6E39               	movwf	___flmul@aexp^0,c
  6644  002268  EF3F  F011         	goto	l1417
  6645  00226C                     l1418:
  6646  00226C  A03B               	btfss	___flmul@prod^0,0,c
  6647  00226E  EF3B  F011         	goto	u4001
  6648  002272  EF3D  F011         	goto	u4000
  6649  002276                     u4001:
  6650  002276  EF3F  F011         	goto	l1417
  6651  00227A                     u4000:
  6652  00227A  EF32  F011         	goto	l4314
  6653  00227E                     l1417:
  6654  00227E  5039               	movf	___flmul@aexp^0,w,c
  6655  002280  B4D8               	btfsc	status,2,c
  6656  002282  EF45  F011         	goto	u4011
  6657  002286  EF47  F011         	goto	u4010
  6658  00228A                     u4011:
  6659  00228A  EF6B  F011         	goto	l4326
  6660  00228E                     u4010:
  6661  00228E  0E01               	movlw	1
  6662  002290  263B               	addwf	___flmul@prod^0,f,c
  6663  002292  0E00               	movlw	0
  6664  002294  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6665  002296  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6666  002298  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6667  00229A  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6668  00229C  EF52  F011         	goto	u4021
  6669  0022A0  EF54  F011         	goto	u4020
  6670  0022A4                     u4021:
  6671  0022A4  EF6B  F011         	goto	l4326
  6672  0022A8                     u4020:
  6673  0022A8  C03B  F030         	movff	___flmul@prod,??___flmul
  6674  0022AC  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6675  0022B0  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6676  0022B4  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6677  0022B8  3433               	rlcf	(??___flmul+3)^0,w,c
  6678  0022BA  3233               	rrcf	(??___flmul+3)^0,f,c
  6679  0022BC  3232               	rrcf	(??___flmul+2)^0,f,c
  6680  0022BE  3231               	rrcf	(??___flmul+1)^0,f,c
  6681  0022C0  3230               	rrcf	??___flmul^0,f,c
  6682  0022C2  C030  F03B         	movff	??___flmul,___flmul@prod
  6683  0022C6  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6684  0022CA  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6685  0022CE  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6686  0022D2  4A3F               	infsnz	___flmul@temp^0,f,c
  6687  0022D4  2A40               	incf	(___flmul@temp+1)^0,f,c
  6688  0022D6                     l4326:
  6689  0022D6  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6690  0022D8  EF76  F011         	goto	u4031
  6691  0022DC  5040               	movf	(___flmul@temp+1)^0,w,c
  6692  0022DE  E108               	bnz	u4030
  6693  0022E0  283F               	incf	___flmul@temp^0,w,c
  6694  0022E2  A0D8               	btfss	status,0,c
  6695  0022E4  EF76  F011         	goto	u4031
  6696  0022E8  EF78  F011         	goto	u4030
  6697  0022EC                     u4031:
  6698  0022EC  EF82  F011         	goto	l4330
  6699  0022F0                     u4030:
  6700  0022F0  0E00               	movlw	0
  6701  0022F2  6E3B               	movwf	___flmul@prod^0,c
  6702  0022F4  0E00               	movlw	0
  6703  0022F6  6E3C               	movwf	(___flmul@prod+1)^0,c
  6704  0022F8  0E80               	movlw	128
  6705  0022FA  6E3D               	movwf	(___flmul@prod+2)^0,c
  6706  0022FC  0E7F               	movlw	127
  6707  0022FE  6E3E               	movwf	(___flmul@prod+3)^0,c
  6708  002300  EFB0  F011         	goto	l4342
  6709  002304                     l4330:
  6710  002304  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6711  002306  EF8F  F011         	goto	u4040
  6712  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
  6713  00230C  E106               	bnz	u4041
  6714  00230E  043F               	decf	___flmul@temp^0,w,c
  6715  002310  B0D8               	btfsc	status,0,c
  6716  002312  EF8D  F011         	goto	u4041
  6717  002316  EF8F  F011         	goto	u4040
  6718  00231A                     u4041:
  6719  00231A  EF9B  F011         	goto	l1425
  6720  00231E                     u4040:
  6721  00231E  0E00               	movlw	0
  6722  002320  6E3B               	movwf	___flmul@prod^0,c
  6723  002322  0E00               	movlw	0
  6724  002324  6E3C               	movwf	(___flmul@prod+1)^0,c
  6725  002326  0E00               	movlw	0
  6726  002328  6E3D               	movwf	(___flmul@prod+2)^0,c
  6727  00232A  0E00               	movlw	0
  6728  00232C  6E3E               	movwf	(___flmul@prod+3)^0,c
  6729  00232E  0E00               	movlw	0
  6730  002330  6E34               	movwf	___flmul@sign^0,c
  6731  002332  EFB0  F011         	goto	l4342
  6732  002336                     l1425:
  6733  002336  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6734  00233A  0EFF               	movlw	255
  6735  00233C  163B               	andwf	___flmul@prod^0,f,c
  6736  00233E  0EFF               	movlw	255
  6737  002340  163C               	andwf	(___flmul@prod+1)^0,f,c
  6738  002342  0E7F               	movlw	127
  6739  002344  163D               	andwf	(___flmul@prod+2)^0,f,c
  6740  002346  0E00               	movlw	0
  6741  002348  163E               	andwf	(___flmul@prod+3)^0,f,c
  6742  00234A  A03A               	btfss	___flmul@bexp^0,0,c
  6743  00234C  EFAA  F011         	goto	u4051
  6744  002350  EFAC  F011         	goto	u4050
  6745  002354                     u4051:
  6746  002354  EFAD  F011         	goto	l4340
  6747  002358                     u4050:
  6748  002358  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6749  00235A                     l4340:
  6750  00235A  90D8               	bcf	status,0,c
  6751  00235C  303A               	rrcf	___flmul@bexp^0,w,c
  6752  00235E  6E3E               	movwf	(___flmul@prod+3)^0,c
  6753  002360                     l4342:
  6754  002360  5034               	movf	___flmul@sign^0,w,c
  6755  002362  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6756  002364  C03B  F028         	movff	___flmul@prod,?___flmul
  6757  002368  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6758  00236C  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6759  002370  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6760  002374                     l1412:
  6761  002374  0012               	return		;funcret
  6762  002376                     __end_of___flmul:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function ___flge *****************
  6766 ;; Defined at:
  6767 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  ff1             4    0[COMRAM] unsigned char 
  6770 ;;  ff2             4    4[COMRAM] unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6782 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;Total ram usage:       12 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 1
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_roundf
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           	psect	text24
  6797  004B6E                     __ptext24:
  6798                           	callstack 0
  6799  004B6E                     ___flge:
  6800                           	callstack 25
  6801  004B6E  0E00               	movlw	0
  6802  004B70  1401               	andwf	___flge@ff1^0,w,c
  6803  004B72  6E09               	movwf	??___flge^0,c
  6804  004B74  0E00               	movlw	0
  6805  004B76  1402               	andwf	(___flge@ff1+1)^0,w,c
  6806  004B78  6E0A               	movwf	(??___flge+1)^0,c
  6807  004B7A  0E80               	movlw	128
  6808  004B7C  1403               	andwf	(___flge@ff1+2)^0,w,c
  6809  004B7E  6E0B               	movwf	(??___flge+2)^0,c
  6810  004B80  0E7F               	movlw	127
  6811  004B82  1404               	andwf	(___flge@ff1+3)^0,w,c
  6812  004B84  6E0C               	movwf	(??___flge+3)^0,c
  6813  004B86  5009               	movf	??___flge^0,w,c
  6814  004B88  100A               	iorwf	(??___flge+1)^0,w,c
  6815  004B8A  100B               	iorwf	(??___flge+2)^0,w,c
  6816  004B8C  100C               	iorwf	(??___flge+3)^0,w,c
  6817  004B8E  A4D8               	btfss	status,2,c
  6818  004B90  EFCC  F025         	goto	u4061
  6819  004B94  EFCE  F025         	goto	u4060
  6820  004B98                     u4061:
  6821  004B98  EFD6  F025         	goto	l4358
  6822  004B9C                     u4060:
  6823  004B9C  0E00               	movlw	0
  6824  004B9E  6E01               	movwf	___flge@ff1^0,c
  6825  004BA0  0E00               	movlw	0
  6826  004BA2  6E02               	movwf	(___flge@ff1+1)^0,c
  6827  004BA4  0E00               	movlw	0
  6828  004BA6  6E03               	movwf	(___flge@ff1+2)^0,c
  6829  004BA8  0E00               	movlw	0
  6830  004BAA  6E04               	movwf	(___flge@ff1+3)^0,c
  6831  004BAC                     l4358:
  6832  004BAC  0E00               	movlw	0
  6833  004BAE  1405               	andwf	___flge@ff2^0,w,c
  6834  004BB0  6E09               	movwf	??___flge^0,c
  6835  004BB2  0E00               	movlw	0
  6836  004BB4  1406               	andwf	(___flge@ff2+1)^0,w,c
  6837  004BB6  6E0A               	movwf	(??___flge+1)^0,c
  6838  004BB8  0E80               	movlw	128
  6839  004BBA  1407               	andwf	(___flge@ff2+2)^0,w,c
  6840  004BBC  6E0B               	movwf	(??___flge+2)^0,c
  6841  004BBE  0E7F               	movlw	127
  6842  004BC0  1408               	andwf	(___flge@ff2+3)^0,w,c
  6843  004BC2  6E0C               	movwf	(??___flge+3)^0,c
  6844  004BC4  5009               	movf	??___flge^0,w,c
  6845  004BC6  100A               	iorwf	(??___flge+1)^0,w,c
  6846  004BC8  100B               	iorwf	(??___flge+2)^0,w,c
  6847  004BCA  100C               	iorwf	(??___flge+3)^0,w,c
  6848  004BCC  A4D8               	btfss	status,2,c
  6849  004BCE  EFEB  F025         	goto	u4071
  6850  004BD2  EFED  F025         	goto	u4070
  6851  004BD6                     u4071:
  6852  004BD6  EFF5  F025         	goto	l4362
  6853  004BDA                     u4070:
  6854  004BDA  0E00               	movlw	0
  6855  004BDC  6E05               	movwf	___flge@ff2^0,c
  6856  004BDE  0E00               	movlw	0
  6857  004BE0  6E06               	movwf	(___flge@ff2+1)^0,c
  6858  004BE2  0E00               	movlw	0
  6859  004BE4  6E07               	movwf	(___flge@ff2+2)^0,c
  6860  004BE6  0E00               	movlw	0
  6861  004BE8  6E08               	movwf	(___flge@ff2+3)^0,c
  6862  004BEA                     l4362:
  6863  004BEA  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6864  004BEC  EFFA  F025         	goto	u4081
  6865  004BF0  EFFC  F025         	goto	u4080
  6866  004BF4                     u4081:
  6867  004BF4  EF05  F026         	goto	l4366
  6868  004BF8                     u4080:
  6869  004BF8  6C01               	negf	___flge@ff1^0,c
  6870  004BFA  1E02               	comf	(___flge@ff1+1)^0,f,c
  6871  004BFC  B0D8               	btfsc	status,0,c
  6872  004BFE  2A02               	incf	(___flge@ff1+1)^0,f,c
  6873  004C00  1E03               	comf	(___flge@ff1+2)^0,f,c
  6874  004C02  B0D8               	btfsc	status,0,c
  6875  004C04  2A03               	incf	(___flge@ff1+2)^0,f,c
  6876  004C06  0E80               	movlw	128
  6877  004C08  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6878  004C0A                     l4366:
  6879  004C0A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6880  004C0C  EF0A  F026         	goto	u4091
  6881  004C10  EF0C  F026         	goto	u4090
  6882  004C14                     u4091:
  6883  004C14  EF15  F026         	goto	l1059
  6884  004C18                     u4090:
  6885  004C18  6C05               	negf	___flge@ff2^0,c
  6886  004C1A  1E06               	comf	(___flge@ff2+1)^0,f,c
  6887  004C1C  B0D8               	btfsc	status,0,c
  6888  004C1E  2A06               	incf	(___flge@ff2+1)^0,f,c
  6889  004C20  1E07               	comf	(___flge@ff2+2)^0,f,c
  6890  004C22  B0D8               	btfsc	status,0,c
  6891  004C24  2A07               	incf	(___flge@ff2+2)^0,f,c
  6892  004C26  0E80               	movlw	128
  6893  004C28  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6894  004C2A                     l1059:
  6895  004C2A  0E00               	movlw	0
  6896  004C2C  1A01               	xorwf	___flge@ff1^0,f,c
  6897  004C2E  0E00               	movlw	0
  6898  004C30  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6899  004C32  0E00               	movlw	0
  6900  004C34  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6901  004C36  0E80               	movlw	128
  6902  004C38  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6903  004C3A  0E00               	movlw	0
  6904  004C3C  1A05               	xorwf	___flge@ff2^0,f,c
  6905  004C3E  0E00               	movlw	0
  6906  004C40  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6907  004C42  0E00               	movlw	0
  6908  004C44  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6909  004C46  0E80               	movlw	128
  6910  004C48  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6911  004C4A  5005               	movf	___flge@ff2^0,w,c
  6912  004C4C  5C01               	subwf	___flge@ff1^0,w,c
  6913  004C4E  5006               	movf	(___flge@ff2+1)^0,w,c
  6914  004C50  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6915  004C52  5007               	movf	(___flge@ff2+2)^0,w,c
  6916  004C54  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6917  004C56  5008               	movf	(___flge@ff2+3)^0,w,c
  6918  004C58  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6919  004C5A  B0D8               	btfsc	status,0,c
  6920  004C5C  EF32  F026         	goto	u4101
  6921  004C60  EF34  F026         	goto	u4100
  6922  004C64                     u4101:
  6923  004C64  EF37  F026         	goto	l4372
  6924  004C68                     u4100:
  6925  004C68  90D8               	bcf	status,0,c
  6926  004C6A  EF38  F026         	goto	l1064
  6927  004C6E                     l4372:
  6928  004C6E  80D8               	bsf	status,0,c
  6929  004C70                     l1064:
  6930  004C70  0012               	return		;funcret
  6931  004C72                     __end_of___flge:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function ___fltol *****************
  6935 ;; Defined at:
  6936 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  f1              4   90[COMRAM] unsigned char 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  exp1            1    5[BANK0 ] unsigned char 
  6941 ;;  sign1           1    4[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  4   90[COMRAM] long 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;Total ram usage:       10 bytes
  6956 ;; Hardware stack levels used: 1
  6957 ;; Hardware stack levels required when called: 1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_lroundf
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text25
  6966  004A66                     __ptext25:
  6967                           	callstack 0
  6968  004A66                     ___fltol:
  6969                           	callstack 26
  6970  004A66  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6971  004A68  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6972  004A6A  0100               	movlb	0	; () banked
  6973  004A6C  6F65               	movwf	___fltol@exp1& (0+255),b
  6974  004A6E  5165               	movf	___fltol@exp1& (0+255),w,b
  6975  004A70  A4D8               	btfss	status,2,c
  6976  004A72  EF3D  F025         	goto	u4161
  6977  004A76  EF3F  F025         	goto	u4160
  6978  004A7A                     u4161:
  6979  004A7A  EF49  F025         	goto	l4460
  6980  004A7E                     u4160:
  6981  004A7E                     l4456:
  6982                           
  6983                           ; BSR set to: 0
  6984  004A7E  0E00               	movlw	0
  6985  004A80  6E5B               	movwf	?___fltol^0,c
  6986  004A82  0E00               	movlw	0
  6987  004A84  6E5C               	movwf	(?___fltol+1)^0,c
  6988  004A86  0E00               	movlw	0
  6989  004A88  6E5D               	movwf	(?___fltol+2)^0,c
  6990  004A8A  0E00               	movlw	0
  6991  004A8C  6E5E               	movwf	(?___fltol+3)^0,c
  6992  004A8E  EFB6  F025         	goto	l1091
  6993  004A92                     l4460:
  6994                           
  6995                           ; BSR set to: 0
  6996  004A92  C05B  F060         	movff	___fltol@f1,??___fltol
  6997  004A96  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6998  004A9A  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6999  004A9E  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  7000  004AA2  0E20               	movlw	32
  7001  004AA4  EF59  F025         	goto	u4170
  7002  004AA8                     u4175:
  7003  004AA8  90D8               	bcf	status,0,c
  7004  004AAA  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  7005  004AAC  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  7006  004AAE  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  7007  004AB0  3360               	rrcf	??___fltol& (0+255),f,b
  7008  004AB2                     u4170:
  7009  004AB2  2EE8               	decfsz	wreg,f,c
  7010  004AB4  EF54  F025         	goto	u4175
  7011  004AB8  5160               	movf	??___fltol& (0+255),w,b
  7012  004ABA  6F64               	movwf	___fltol@sign1& (0+255),b
  7013  004ABC                     
  7014                           ; BSR set to: 0
  7015  004ABC  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  7016  004ABE                     
  7017                           ; BSR set to: 0
  7018  004ABE  0EFF               	movlw	255
  7019  004AC0  165B               	andwf	___fltol@f1^0,f,c
  7020  004AC2  0EFF               	movlw	255
  7021  004AC4  165C               	andwf	(___fltol@f1+1)^0,f,c
  7022  004AC6  0EFF               	movlw	255
  7023  004AC8  165D               	andwf	(___fltol@f1+2)^0,f,c
  7024  004ACA  0E00               	movlw	0
  7025  004ACC  165E               	andwf	(___fltol@f1+3)^0,f,c
  7026  004ACE                     
  7027                           ; BSR set to: 0
  7028  004ACE  0E96               	movlw	150
  7029  004AD0  5F65               	subwf	___fltol@exp1& (0+255),f,b
  7030  004AD2                     
  7031                           ; BSR set to: 0
  7032  004AD2  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  7033  004AD4  EF70  F025         	goto	u4180
  7034  004AD8  EF6E  F025         	goto	u4181
  7035  004ADC                     u4181:
  7036  004ADC  EF86  F025         	goto	l4480
  7037  004AE0                     u4180:
  7038  004AE0                     
  7039                           ; BSR set to: 0
  7040  004AE0  5165               	movf	___fltol@exp1& (0+255),w,b
  7041  004AE2  0A80               	xorlw	128
  7042  004AE4  0F97               	addlw	151
  7043  004AE6  B0D8               	btfsc	status,0,c
  7044  004AE8  EF78  F025         	goto	u4191
  7045  004AEC  EF7A  F025         	goto	u4190
  7046  004AF0                     u4191:
  7047  004AF0  EF7C  F025         	goto	l4476
  7048  004AF4                     u4190:
  7049  004AF4  EF3F  F025         	goto	l4456
  7050  004AF8                     l4476:
  7051                           
  7052                           ; BSR set to: 0
  7053  004AF8  90D8               	bcf	status,0,c
  7054  004AFA  325E               	rrcf	(___fltol@f1+3)^0,f,c
  7055  004AFC  325D               	rrcf	(___fltol@f1+2)^0,f,c
  7056  004AFE  325C               	rrcf	(___fltol@f1+1)^0,f,c
  7057  004B00  325B               	rrcf	___fltol@f1^0,f,c
  7058  004B02                     
  7059                           ; BSR set to: 0
  7060  004B02  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  7061  004B04  EF7C  F025         	goto	l4476
  7062  004B08  EF9E  F025         	goto	l4490
  7063  004B0C                     l4480:
  7064                           
  7065                           ; BSR set to: 0
  7066  004B0C  0E1F               	movlw	31
  7067  004B0E  6565               	cpfsgt	___fltol@exp1& (0+255),b
  7068  004B10  EF8C  F025         	goto	u4201
  7069  004B14  EF8E  F025         	goto	u4200
  7070  004B18                     u4201:
  7071  004B18  EF96  F025         	goto	l4488
  7072  004B1C                     u4200:
  7073  004B1C  EF3F  F025         	goto	l4456
  7074  004B20                     l4486:
  7075                           
  7076                           ; BSR set to: 0
  7077  004B20  90D8               	bcf	status,0,c
  7078  004B22  365B               	rlcf	___fltol@f1^0,f,c
  7079  004B24  365C               	rlcf	(___fltol@f1+1)^0,f,c
  7080  004B26  365D               	rlcf	(___fltol@f1+2)^0,f,c
  7081  004B28  365E               	rlcf	(___fltol@f1+3)^0,f,c
  7082  004B2A  0765               	decf	___fltol@exp1& (0+255),f,b
  7083  004B2C                     l4488:
  7084                           
  7085                           ; BSR set to: 0
  7086  004B2C  5165               	movf	___fltol@exp1& (0+255),w,b
  7087  004B2E  A4D8               	btfss	status,2,c
  7088  004B30  EF9C  F025         	goto	u4211
  7089  004B34  EF9E  F025         	goto	u4210
  7090  004B38                     u4211:
  7091  004B38  EF90  F025         	goto	l4486
  7092  004B3C                     u4210:
  7093  004B3C                     l4490:
  7094                           
  7095                           ; BSR set to: 0
  7096  004B3C  5164               	movf	___fltol@sign1& (0+255),w,b
  7097  004B3E  B4D8               	btfsc	status,2,c
  7098  004B40  EFA4  F025         	goto	u4221
  7099  004B44  EFA6  F025         	goto	u4220
  7100  004B48                     u4221:
  7101  004B48  EFAE  F025         	goto	l4494
  7102  004B4C                     u4220:
  7103  004B4C                     
  7104                           ; BSR set to: 0
  7105  004B4C  1E5E               	comf	(___fltol@f1+3)^0,f,c
  7106  004B4E  1E5D               	comf	(___fltol@f1+2)^0,f,c
  7107  004B50  1E5C               	comf	(___fltol@f1+1)^0,f,c
  7108  004B52  6C5B               	negf	___fltol@f1^0,c
  7109  004B54  0E00               	movlw	0
  7110  004B56  225C               	addwfc	(___fltol@f1+1)^0,f,c
  7111  004B58  225D               	addwfc	(___fltol@f1+2)^0,f,c
  7112  004B5A  225E               	addwfc	(___fltol@f1+3)^0,f,c
  7113  004B5C                     l4494:
  7114                           
  7115                           ; BSR set to: 0
  7116  004B5C  C05B  F05B         	movff	___fltol@f1,?___fltol
  7117  004B60  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  7118  004B64  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  7119  004B68  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  7120  004B6C                     l1091:
  7121                           
  7122                           ; BSR set to: 0
  7123  004B6C  0012               	return		;funcret
  7124  004B6E                     __end_of___fltol:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _color_read_Clear *****************
  7128 ;; Defined at:
  7129 ;;		line 133 in file "color.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  tmp             2    9[COMRAM] unsigned int 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    4[COMRAM] unsigned int 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;Total ram usage:        7 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 3
  7150 ;; This function calls:
  7151 ;;		_I2C_2_Master_Read
  7152 ;;		_I2C_2_Master_RepStart
  7153 ;;		_I2C_2_Master_Start
  7154 ;;		_I2C_2_Master_Stop
  7155 ;;		_I2C_2_Master_Write
  7156 ;; This function is called by:
  7157 ;;		_read_color
  7158 ;;		_calibrate_white
  7159 ;;		_amb_light_measure
  7160 ;;		_distance_measure
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text26
  7165  0056E0                     __ptext26:
  7166                           	callstack 0
  7167  0056E0                     _color_read_Clear:
  7168                           	callstack 24
  7169  0056E0                     
  7170                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  7171  0056E0  EC30  F02E         	call	_I2C_2_Master_Start	;wreg free
  7172                           
  7173                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  7174  0056E4  0E52               	movlw	82
  7175  0056E6  EC1A  F02E         	call	_I2C_2_Master_Write
  7176                           
  7177                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  7178  0056EA  0EB4               	movlw	180
  7179  0056EC  EC1A  F02E         	call	_I2C_2_Master_Write
  7180                           
  7181                           ;color.c: 139:  I2C_2_Master_RepStart();
  7182  0056F0  EC26  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  7183                           
  7184                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  7185  0056F4  0E53               	movlw	83
  7186  0056F6  EC1A  F02E         	call	_I2C_2_Master_Write
  7187                           
  7188                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  7189  0056FA  0E01               	movlw	1
  7190  0056FC  ECDD  F02B         	call	_I2C_2_Master_Read
  7191  005700  6E07               	movwf	??_color_read_Clear^0,c
  7192  005702  5007               	movf	??_color_read_Clear^0,w,c
  7193  005704  6E0A               	movwf	color_read_Clear@tmp^0,c
  7194  005706  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7195                           
  7196                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7197  005708  0E00               	movlw	0
  7198  00570A  ECDD  F02B         	call	_I2C_2_Master_Read
  7199  00570E  6E07               	movwf	??_color_read_Clear^0,c
  7200  005710  5007               	movf	??_color_read_Clear^0,w,c
  7201  005712  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7202  005714  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7203  005716  500A               	movf	color_read_Clear@tmp^0,w,c
  7204  005718  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7205  00571A  6E0A               	movwf	color_read_Clear@tmp^0,c
  7206  00571C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7207  00571E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7208  005720  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7209                           
  7210                           ;color.c: 143:  I2C_2_Master_Stop();
  7211  005722  EC2B  F02E         	call	_I2C_2_Master_Stop	;wreg free
  7212  005726                     
  7213                           ;color.c: 144:  return tmp;
  7214  005726  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7215  00572A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7216  00572E  0012               	return		;funcret
  7217  005730                     __end_of_color_read_Clear:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _I2C_2_Master_RepStart *****************
  7221 ;; Defined at:
  7222 ;;		line 33 in file "i2c.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;Total ram usage:        0 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 2
  7243 ;; This function calls:
  7244 ;;		_I2C_2_Master_Idle
  7245 ;; This function is called by:
  7246 ;;		_color_read_Red
  7247 ;;		_color_read_Blue
  7248 ;;		_color_read_Green
  7249 ;;		_color_read_Clear
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text27
  7254  005C4C                     __ptext27:
  7255                           	callstack 0
  7256  005C4C                     _I2C_2_Master_RepStart:
  7257                           	callstack 24
  7258  005C4C                     
  7259                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7260  005C4C  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7261  005C50                     
  7262                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7263  005C50  010E               	movlb	14	; () banked
  7264  005C52  83DA               	bsf	218,1,b	;volatile
  7265  005C54                     
  7266                           ; BSR set to: 14
  7267  005C54  0012               	return		;funcret
  7268  005C56                     __end_of_I2C_2_Master_RepStart:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _I2C_2_Master_Read *****************
  7272 ;; Defined at:
  7273 ;;		line 51 in file "i2c.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  ack             1    wreg     unsigned char 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  ack             1    2[COMRAM] unsigned char 
  7278 ;;  tmp             1    3[COMRAM] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      unsigned char 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;Total ram usage:        3 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 2
  7295 ;; This function calls:
  7296 ;;		_I2C_2_Master_Idle
  7297 ;; This function is called by:
  7298 ;;		_color_read_Red
  7299 ;;		_color_read_Blue
  7300 ;;		_color_read_Green
  7301 ;;		_color_read_Clear
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text28
  7306  0057BA                     __ptext28:
  7307                           	callstack 0
  7308  0057BA                     _I2C_2_Master_Read:
  7309                           	callstack 24
  7310                           
  7311                           ; BSR set to: 14
  7312                           ;incstack = 0
  7313                           ;I2C_2_Master_Read@ack stored from wreg
  7314  0057BA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7315  0057BC                     
  7316                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7317  0057BC  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7318  0057C0                     
  7319                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7320  0057C0  010E               	movlb	14	; () banked
  7321  0057C2  87DA               	bsf	218,3,b	;volatile
  7322                           
  7323                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7324  0057C4  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7325  0057C8                     
  7326                           ;i2c.c: 57:   tmp = SSP2BUF;
  7327  0057C8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7328                           
  7329                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7330  0057CC  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7331  0057D0                     
  7332                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7333  0057D0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7334  0057D2  B4D8               	btfsc	status,2,c
  7335  0057D4  EFEE  F02B         	goto	u3801
  7336  0057D8  EFF2  F02B         	goto	u3800
  7337  0057DC                     u3801:
  7338  0057DC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7339  0057DE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7340  0057E0  EFF3  F02B         	goto	u3818
  7341  0057E4                     u3800:
  7342  0057E4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7343  0057E6                     u3818:
  7344  0057E6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7345  0057E8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7346  0057EA  010E               	movlb	14	; () banked
  7347  0057EC  51DA               	movf	218,w,b	;volatile
  7348  0057EE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7349  0057F0  0BDF               	andlw	-33
  7350  0057F2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7351  0057F4  6FDA               	movwf	218,b	;volatile
  7352  0057F6                     
  7353                           ; BSR set to: 14
  7354                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7355  0057F6  89DA               	bsf	218,4,b	;volatile
  7356  0057F8                     
  7357                           ; BSR set to: 14
  7358                           ;i2c.c: 61:   return tmp;
  7359  0057F8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7360  0057FA                     
  7361                           ; BSR set to: 14
  7362  0057FA  0012               	return		;funcret
  7363  0057FC                     __end_of_I2C_2_Master_Read:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function ___xxtofl *****************
  7367 ;; Defined at:
  7368 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  sign            1    wreg     unsigned char 
  7371 ;;  val             4    0[COMRAM] long 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  sign            1    8[COMRAM] unsigned char 
  7374 ;;  arg             4   10[COMRAM] unsigned long 
  7375 ;;  exp             1    9[COMRAM] unsigned char 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  4    0[COMRAM] unsigned char 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;Total ram usage:       14 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 1
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_detect_color
  7396 ;;		_amb_light_measure
  7397 ;;		_distance_measure
  7398 ;;		_check_color_reading
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text29
  7403  003E44                     __ptext29:
  7404                           	callstack 0
  7405  003E44                     ___xxtofl:
  7406                           	callstack 27
  7407                           
  7408                           ; BSR set to: 14
  7409                           ;incstack = 0
  7410                           ;___xxtofl@sign stored from wreg
  7411  003E44  6E09               	movwf	___xxtofl@sign^0,c
  7412  003E46  5009               	movf	___xxtofl@sign^0,w,c
  7413  003E48  B4D8               	btfsc	status,2,c
  7414  003E4A  EF29  F01F         	goto	u4991
  7415  003E4E  EF2B  F01F         	goto	u4990
  7416  003E52                     u4991:
  7417  003E52  EF4D  F01F         	goto	l1449
  7418  003E56                     u4990:
  7419  003E56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7420  003E58  EF32  F01F         	goto	u5000
  7421  003E5C  EF30  F01F         	goto	u5001
  7422  003E60                     u5001:
  7423  003E60  EF4D  F01F         	goto	l1449
  7424  003E64                     u5000:
  7425  003E64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7426  003E68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7427  003E6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7428  003E70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7429  003E74  1E05               	comf	??___xxtofl^0,f,c
  7430  003E76  1E06               	comf	(??___xxtofl+1)^0,f,c
  7431  003E78  1E07               	comf	(??___xxtofl+2)^0,f,c
  7432  003E7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7433  003E7C  2A05               	incf	??___xxtofl^0,f,c
  7434  003E7E  0E00               	movlw	0
  7435  003E80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7436  003E82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7437  003E84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7438  003E86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7439  003E8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7440  003E8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7441  003E92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7442  003E96  EF55  F01F         	goto	l4872
  7443  003E9A                     l1449:
  7444  003E9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7445  003E9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7446  003EA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7447  003EA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7448  003EAA                     l4872:
  7449  003EAA  5001               	movf	___xxtofl@val^0,w,c
  7450  003EAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7451  003EAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7452  003EB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7453  003EB2  A4D8               	btfss	status,2,c
  7454  003EB4  EF5E  F01F         	goto	u5011
  7455  003EB8  EF60  F01F         	goto	u5010
  7456  003EBC                     u5011:
  7457  003EBC  EF6A  F01F         	goto	l4878
  7458  003EC0                     u5010:
  7459  003EC0  0E00               	movlw	0
  7460  003EC2  6E01               	movwf	?___xxtofl^0,c
  7461  003EC4  0E00               	movlw	0
  7462  003EC6  6E02               	movwf	(?___xxtofl+1)^0,c
  7463  003EC8  0E00               	movlw	0
  7464  003ECA  6E03               	movwf	(?___xxtofl+2)^0,c
  7465  003ECC  0E00               	movlw	0
  7466  003ECE  6E04               	movwf	(?___xxtofl+3)^0,c
  7467  003ED0  EFFB  F01F         	goto	l1452
  7468  003ED4                     l4878:
  7469  003ED4  0E96               	movlw	150
  7470  003ED6  6E0A               	movwf	___xxtofl@exp^0,c
  7471  003ED8  EF74  F01F         	goto	l4882
  7472  003EDC                     l4880:
  7473  003EDC  2A0A               	incf	___xxtofl@exp^0,f,c
  7474  003EDE  90D8               	bcf	status,0,c
  7475  003EE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7476  003EE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7477  003EE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7478  003EE6  320B               	rrcf	___xxtofl@arg^0,f,c
  7479  003EE8                     l4882:
  7480  003EE8  0E00               	movlw	0
  7481  003EEA  140B               	andwf	___xxtofl@arg^0,w,c
  7482  003EEC  6E05               	movwf	??___xxtofl^0,c
  7483  003EEE  0E00               	movlw	0
  7484  003EF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7485  003EF2  6E06               	movwf	(??___xxtofl+1)^0,c
  7486  003EF4  0E00               	movlw	0
  7487  003EF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7488  003EF8  6E07               	movwf	(??___xxtofl+2)^0,c
  7489  003EFA  0EFE               	movlw	254
  7490  003EFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7491  003EFE  6E08               	movwf	(??___xxtofl+3)^0,c
  7492  003F00  5005               	movf	??___xxtofl^0,w,c
  7493  003F02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7494  003F04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7495  003F06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7496  003F08  A4D8               	btfss	status,2,c
  7497  003F0A  EF89  F01F         	goto	u5021
  7498  003F0E  EF8B  F01F         	goto	u5020
  7499  003F12                     u5021:
  7500  003F12  EF6E  F01F         	goto	l4880
  7501  003F16                     u5020:
  7502  003F16  EF99  F01F         	goto	l1456
  7503  003F1A                     l4884:
  7504  003F1A  2A0A               	incf	___xxtofl@exp^0,f,c
  7505  003F1C  0E01               	movlw	1
  7506  003F1E  260B               	addwf	___xxtofl@arg^0,f,c
  7507  003F20  0E00               	movlw	0
  7508  003F22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7509  003F24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7510  003F26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7511  003F28  90D8               	bcf	status,0,c
  7512  003F2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7513  003F2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7514  003F2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7515  003F30  320B               	rrcf	___xxtofl@arg^0,f,c
  7516  003F32                     l1456:
  7517  003F32  0E00               	movlw	0
  7518  003F34  140B               	andwf	___xxtofl@arg^0,w,c
  7519  003F36  6E05               	movwf	??___xxtofl^0,c
  7520  003F38  0E00               	movlw	0
  7521  003F3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7522  003F3C  6E06               	movwf	(??___xxtofl+1)^0,c
  7523  003F3E  0E00               	movlw	0
  7524  003F40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7525  003F42  6E07               	movwf	(??___xxtofl+2)^0,c
  7526  003F44  0EFF               	movlw	255
  7527  003F46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7528  003F48  6E08               	movwf	(??___xxtofl+3)^0,c
  7529  003F4A  5005               	movf	??___xxtofl^0,w,c
  7530  003F4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7531  003F4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7532  003F50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7533  003F52  A4D8               	btfss	status,2,c
  7534  003F54  EFAE  F01F         	goto	u5031
  7535  003F58  EFB0  F01F         	goto	u5030
  7536  003F5C                     u5031:
  7537  003F5C  EF8D  F01F         	goto	l4884
  7538  003F60                     u5030:
  7539  003F60  EFB8  F01F         	goto	l4892
  7540  003F64                     l4890:
  7541  003F64  060A               	decf	___xxtofl@exp^0,f,c
  7542  003F66  90D8               	bcf	status,0,c
  7543  003F68  360B               	rlcf	___xxtofl@arg^0,f,c
  7544  003F6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7545  003F6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7546  003F6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7547  003F70                     l4892:
  7548  003F70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7549  003F72  EFBD  F01F         	goto	u5041
  7550  003F76  EFBF  F01F         	goto	u5040
  7551  003F7A                     u5041:
  7552  003F7A  EFC7  F01F         	goto	l1463
  7553  003F7E                     u5040:
  7554  003F7E  0E02               	movlw	2
  7555  003F80  600A               	cpfslt	___xxtofl@exp^0,c
  7556  003F82  EFC5  F01F         	goto	u5051
  7557  003F86  EFC7  F01F         	goto	u5050
  7558  003F8A                     u5051:
  7559  003F8A  EFB2  F01F         	goto	l4890
  7560  003F8E                     u5050:
  7561  003F8E                     l1463:
  7562  003F8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7563  003F90  EFCC  F01F         	goto	u5061
  7564  003F94  EFCE  F01F         	goto	u5060
  7565  003F98                     u5061:
  7566  003F98  EFCF  F01F         	goto	l4898
  7567  003F9C                     u5060:
  7568  003F9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7569  003F9E                     l4898:
  7570  003F9E  90D8               	bcf	status,0,c
  7571  003FA0  320A               	rrcf	___xxtofl@exp^0,f,c
  7572  003FA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7573  003FA6  6A06               	clrf	(??___xxtofl+1)^0,c
  7574  003FA8  6A07               	clrf	(??___xxtofl+2)^0,c
  7575  003FAA  6A08               	clrf	(??___xxtofl+3)^0,c
  7576  003FAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7577  003FB0  6A07               	clrf	(??___xxtofl+2)^0,c
  7578  003FB2  6A06               	clrf	(??___xxtofl+1)^0,c
  7579  003FB4  6A05               	clrf	??___xxtofl^0,c
  7580  003FB6  5005               	movf	??___xxtofl^0,w,c
  7581  003FB8  120B               	iorwf	___xxtofl@arg^0,f,c
  7582  003FBA  5006               	movf	(??___xxtofl+1)^0,w,c
  7583  003FBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7584  003FBE  5007               	movf	(??___xxtofl+2)^0,w,c
  7585  003FC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7586  003FC2  5008               	movf	(??___xxtofl+3)^0,w,c
  7587  003FC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7588  003FC6  5009               	movf	___xxtofl@sign^0,w,c
  7589  003FC8  B4D8               	btfsc	status,2,c
  7590  003FCA  EFE9  F01F         	goto	u5071
  7591  003FCE  EFEB  F01F         	goto	u5070
  7592  003FD2                     u5071:
  7593  003FD2  EFF3  F01F         	goto	l4908
  7594  003FD6                     u5070:
  7595  003FD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7596  003FD8  EFF2  F01F         	goto	u5080
  7597  003FDC  EFF0  F01F         	goto	u5081
  7598  003FE0                     u5081:
  7599  003FE0  EFF3  F01F         	goto	l4908
  7600  003FE4                     u5080:
  7601  003FE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7602  003FE6                     l4908:
  7603  003FE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7604  003FEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7605  003FEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7606  003FF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7607  003FF6                     l1452:
  7608  003FF6  0012               	return		;funcret
  7609  003FF8                     __end_of___xxtofl:
  7610                           	callstack 0
  7611                           
  7612 ;; *************** function ___fldiv *****************
  7613 ;; Defined at:
  7614 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  b               4   14[COMRAM] unsigned char 
  7617 ;;  a               4   18[COMRAM] unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  grs             4   33[COMRAM] unsigned long 
  7620 ;;  rem             4   26[COMRAM] unsigned long 
  7621 ;;  new_exp         2   31[COMRAM] short 
  7622 ;;  aexp            1   38[COMRAM] unsigned char 
  7623 ;;  bexp            1   37[COMRAM] unsigned char 
  7624 ;;  sign            1   30[COMRAM] unsigned char 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  4   14[COMRAM] unsigned char 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7634 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;Total ram usage:       25 bytes
  7639 ;; Hardware stack levels used: 1
  7640 ;; Hardware stack levels required when called: 1
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_detect_color
  7645 ;;		_amb_light_measure
  7646 ;;		_check_color_reading
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text30
  7651  002724                     __ptext30:
  7652                           	callstack 0
  7653  002724                     ___fldiv:
  7654                           	callstack 27
  7655  002724  5012               	movf	(___fldiv@b+3)^0,w,c
  7656  002726  0B80               	andlw	128
  7657  002728  6E1F               	movwf	___fldiv@sign^0,c
  7658  00272A  5012               	movf	(___fldiv@b+3)^0,w,c
  7659  00272C  2412               	addwf	(___fldiv@b+3)^0,w,c
  7660  00272E  6E26               	movwf	___fldiv@bexp^0,c
  7661  002730  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7662  002732  EF9D  F013         	goto	u4761
  7663  002736  EF9F  F013         	goto	u4760
  7664  00273A                     u4761:
  7665  00273A  EFA0  F013         	goto	l4734
  7666  00273E                     u4760:
  7667  00273E  8026               	bsf	___fldiv@bexp^0,0,c
  7668  002740                     l4734:
  7669  002740  5026               	movf	___fldiv@bexp^0,w,c
  7670  002742  B4D8               	btfsc	status,2,c
  7671  002744  EFA6  F013         	goto	u4771
  7672  002748  EFA8  F013         	goto	u4770
  7673  00274C                     u4771:
  7674  00274C  EFBD  F013         	goto	l4744
  7675  002750                     u4770:
  7676  002750  2826               	incf	___fldiv@bexp^0,w,c
  7677  002752  A4D8               	btfss	status,2,c
  7678  002754  EFAE  F013         	goto	u4781
  7679  002758  EFB0  F013         	goto	u4780
  7680  00275C                     u4781:
  7681  00275C  EFB8  F013         	goto	l4740
  7682  002760                     u4780:
  7683  002760  0E00               	movlw	0
  7684  002762  6E0F               	movwf	___fldiv@b^0,c
  7685  002764  0E00               	movlw	0
  7686  002766  6E10               	movwf	(___fldiv@b+1)^0,c
  7687  002768  0E00               	movlw	0
  7688  00276A  6E11               	movwf	(___fldiv@b+2)^0,c
  7689  00276C  0E00               	movlw	0
  7690  00276E  6E12               	movwf	(___fldiv@b+3)^0,c
  7691  002770                     l4740:
  7692  002770  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7693  002772  0E00               	movlw	0
  7694  002774  6E12               	movwf	(___fldiv@b+3)^0,c
  7695  002776  EFC5  F013         	goto	l4746
  7696  00277A                     l4744:
  7697  00277A  0E00               	movlw	0
  7698  00277C  6E0F               	movwf	___fldiv@b^0,c
  7699  00277E  0E00               	movlw	0
  7700  002780  6E10               	movwf	(___fldiv@b+1)^0,c
  7701  002782  0E00               	movlw	0
  7702  002784  6E11               	movwf	(___fldiv@b+2)^0,c
  7703  002786  0E00               	movlw	0
  7704  002788  6E12               	movwf	(___fldiv@b+3)^0,c
  7705  00278A                     l4746:
  7706  00278A  5016               	movf	(___fldiv@a+3)^0,w,c
  7707  00278C  0B80               	andlw	128
  7708  00278E  1A1F               	xorwf	___fldiv@sign^0,f,c
  7709  002790  5016               	movf	(___fldiv@a+3)^0,w,c
  7710  002792  2416               	addwf	(___fldiv@a+3)^0,w,c
  7711  002794  6E27               	movwf	___fldiv@aexp^0,c
  7712  002796  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7713  002798  EFD0  F013         	goto	u4791
  7714  00279C  EFD2  F013         	goto	u4790
  7715  0027A0                     u4791:
  7716  0027A0  EFD3  F013         	goto	l4754
  7717  0027A4                     u4790:
  7718  0027A4  8027               	bsf	___fldiv@aexp^0,0,c
  7719  0027A6                     l4754:
  7720  0027A6  5027               	movf	___fldiv@aexp^0,w,c
  7721  0027A8  B4D8               	btfsc	status,2,c
  7722  0027AA  EFD9  F013         	goto	u4801
  7723  0027AE  EFDB  F013         	goto	u4800
  7724  0027B2                     u4801:
  7725  0027B2  EFF0  F013         	goto	l4764
  7726  0027B6                     u4800:
  7727  0027B6  2827               	incf	___fldiv@aexp^0,w,c
  7728  0027B8  A4D8               	btfss	status,2,c
  7729  0027BA  EFE1  F013         	goto	u4811
  7730  0027BE  EFE3  F013         	goto	u4810
  7731  0027C2                     u4811:
  7732  0027C2  EFEB  F013         	goto	l4760
  7733  0027C6                     u4810:
  7734  0027C6  0E00               	movlw	0
  7735  0027C8  6E13               	movwf	___fldiv@a^0,c
  7736  0027CA  0E00               	movlw	0
  7737  0027CC  6E14               	movwf	(___fldiv@a+1)^0,c
  7738  0027CE  0E00               	movlw	0
  7739  0027D0  6E15               	movwf	(___fldiv@a+2)^0,c
  7740  0027D2  0E00               	movlw	0
  7741  0027D4  6E16               	movwf	(___fldiv@a+3)^0,c
  7742  0027D6                     l4760:
  7743  0027D6  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7744  0027D8  0E00               	movlw	0
  7745  0027DA  6E16               	movwf	(___fldiv@a+3)^0,c
  7746  0027DC  EFF8  F013         	goto	l4766
  7747  0027E0                     l4764:
  7748  0027E0  0E00               	movlw	0
  7749  0027E2  6E13               	movwf	___fldiv@a^0,c
  7750  0027E4  0E00               	movlw	0
  7751  0027E6  6E14               	movwf	(___fldiv@a+1)^0,c
  7752  0027E8  0E00               	movlw	0
  7753  0027EA  6E15               	movwf	(___fldiv@a+2)^0,c
  7754  0027EC  0E00               	movlw	0
  7755  0027EE  6E16               	movwf	(___fldiv@a+3)^0,c
  7756  0027F0                     l4766:
  7757  0027F0  5013               	movf	___fldiv@a^0,w,c
  7758  0027F2  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7759  0027F4  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7760  0027F6  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7761  0027F8  A4D8               	btfss	status,2,c
  7762  0027FA  EF01  F014         	goto	u4821
  7763  0027FE  EF03  F014         	goto	u4820
  7764  002802                     u4821:
  7765  002802  EF1B  F014         	goto	l4778
  7766  002806                     u4820:
  7767  002806  0E00               	movlw	0
  7768  002808  6E0F               	movwf	___fldiv@b^0,c
  7769  00280A  0E00               	movlw	0
  7770  00280C  6E10               	movwf	(___fldiv@b+1)^0,c
  7771  00280E  0E00               	movlw	0
  7772  002810  6E11               	movwf	(___fldiv@b+2)^0,c
  7773  002812  0E00               	movlw	0
  7774  002814  6E12               	movwf	(___fldiv@b+3)^0,c
  7775  002816  0E80               	movlw	128
  7776  002818  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7777  00281A  0E7F               	movlw	127
  7778  00281C  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7779  00281E                     l4772:
  7780  00281E  501F               	movf	___fldiv@sign^0,w,c
  7781  002820  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7782  002822  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7783  002826  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7784  00282A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7785  00282E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7786  002832  EF5E  F015         	goto	l1376
  7787  002836                     l4778:
  7788  002836  5026               	movf	___fldiv@bexp^0,w,c
  7789  002838  A4D8               	btfss	status,2,c
  7790  00283A  EF21  F014         	goto	u4831
  7791  00283E  EF23  F014         	goto	u4830
  7792  002842                     u4831:
  7793  002842  EF2D  F014         	goto	l4786
  7794  002846                     u4830:
  7795  002846  0E00               	movlw	0
  7796  002848  6E0F               	movwf	?___fldiv^0,c
  7797  00284A  0E00               	movlw	0
  7798  00284C  6E10               	movwf	(?___fldiv+1)^0,c
  7799  00284E  0E00               	movlw	0
  7800  002850  6E11               	movwf	(?___fldiv+2)^0,c
  7801  002852  0E00               	movlw	0
  7802  002854  6E12               	movwf	(?___fldiv+3)^0,c
  7803  002856  EF5E  F015         	goto	l1376
  7804  00285A                     l4786:
  7805  00285A  5027               	movf	___fldiv@aexp^0,w,c
  7806  00285C  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7807  002860  6A18               	clrf	(??___fldiv+1)^0,c
  7808  002862  5E17               	subwf	??___fldiv^0,f,c
  7809  002864  0E00               	movlw	0
  7810  002866  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7811  002868  0E7F               	movlw	127
  7812  00286A  2417               	addwf	??___fldiv^0,w,c
  7813  00286C  6E20               	movwf	___fldiv@new_exp^0,c
  7814  00286E  0E00               	movlw	0
  7815  002870  2018               	addwfc	(??___fldiv+1)^0,w,c
  7816  002872  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7817  002874  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7818  002878  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7819  00287C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7820  002880  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7821  002884  0E00               	movlw	0
  7822  002886  6E0F               	movwf	___fldiv@b^0,c
  7823  002888  0E00               	movlw	0
  7824  00288A  6E10               	movwf	(___fldiv@b+1)^0,c
  7825  00288C  0E00               	movlw	0
  7826  00288E  6E11               	movwf	(___fldiv@b+2)^0,c
  7827  002890  0E00               	movlw	0
  7828  002892  6E12               	movwf	(___fldiv@b+3)^0,c
  7829  002894  0E00               	movlw	0
  7830  002896  6E22               	movwf	___fldiv@grs^0,c
  7831  002898  0E00               	movlw	0
  7832  00289A  6E23               	movwf	(___fldiv@grs+1)^0,c
  7833  00289C  0E00               	movlw	0
  7834  00289E  6E24               	movwf	(___fldiv@grs+2)^0,c
  7835  0028A0  0E00               	movlw	0
  7836  0028A2  6E25               	movwf	(___fldiv@grs+3)^0,c
  7837  0028A4  0E00               	movlw	0
  7838  0028A6  6E27               	movwf	___fldiv@aexp^0,c
  7839  0028A8  EF8E  F014         	goto	l1378
  7840  0028AC                     l4796:
  7841  0028AC  5027               	movf	___fldiv@aexp^0,w,c
  7842  0028AE  B4D8               	btfsc	status,2,c
  7843  0028B0  EF5C  F014         	goto	u4841
  7844  0028B4  EF5E  F014         	goto	u4840
  7845  0028B8                     u4841:
  7846  0028B8  EF75  F014         	goto	l4804
  7847  0028BC                     u4840:
  7848  0028BC  90D8               	bcf	status,0,c
  7849  0028BE  361B               	rlcf	___fldiv@rem^0,f,c
  7850  0028C0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7851  0028C2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7852  0028C4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7853  0028C6  90D8               	bcf	status,0,c
  7854  0028C8  360F               	rlcf	___fldiv@b^0,f,c
  7855  0028CA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7856  0028CC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7857  0028CE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7858  0028D0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7859  0028D2  EF6D  F014         	goto	u4851
  7860  0028D6  EF6F  F014         	goto	u4850
  7861  0028DA                     u4851:
  7862  0028DA  EF70  F014         	goto	l1381
  7863  0028DE                     u4850:
  7864  0028DE  800F               	bsf	___fldiv@b^0,0,c
  7865  0028E0                     l1381:
  7866  0028E0  90D8               	bcf	status,0,c
  7867  0028E2  3622               	rlcf	___fldiv@grs^0,f,c
  7868  0028E4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7869  0028E6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7870  0028E8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7871  0028EA                     l4804:
  7872  0028EA  5013               	movf	___fldiv@a^0,w,c
  7873  0028EC  5C1B               	subwf	___fldiv@rem^0,w,c
  7874  0028EE  5014               	movf	(___fldiv@a+1)^0,w,c
  7875  0028F0  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7876  0028F2  5015               	movf	(___fldiv@a+2)^0,w,c
  7877  0028F4  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7878  0028F6  5016               	movf	(___fldiv@a+3)^0,w,c
  7879  0028F8  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7880  0028FA  A0D8               	btfss	status,0,c
  7881  0028FC  EF82  F014         	goto	u4861
  7882  002900  EF84  F014         	goto	u4860
  7883  002904                     u4861:
  7884  002904  EF8D  F014         	goto	l4810
  7885  002908                     u4860:
  7886  002908  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7887  00290A  5013               	movf	___fldiv@a^0,w,c
  7888  00290C  5E1B               	subwf	___fldiv@rem^0,f,c
  7889  00290E  5014               	movf	(___fldiv@a+1)^0,w,c
  7890  002910  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7891  002912  5015               	movf	(___fldiv@a+2)^0,w,c
  7892  002914  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7893  002916  5016               	movf	(___fldiv@a+3)^0,w,c
  7894  002918  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7895  00291A                     l4810:
  7896  00291A  2A27               	incf	___fldiv@aexp^0,f,c
  7897  00291C                     l1378:
  7898  00291C  0E19               	movlw	25
  7899  00291E  6427               	cpfsgt	___fldiv@aexp^0,c
  7900  002920  EF94  F014         	goto	u4871
  7901  002924  EF96  F014         	goto	u4870
  7902  002928                     u4871:
  7903  002928  EF56  F014         	goto	l4796
  7904  00292C                     u4870:
  7905  00292C  501B               	movf	___fldiv@rem^0,w,c
  7906  00292E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7907  002930  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7908  002932  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7909  002934  B4D8               	btfsc	status,2,c
  7910  002936  EF9F  F014         	goto	u4881
  7911  00293A  EFA1  F014         	goto	u4880
  7912  00293E                     u4881:
  7913  00293E  EFB9  F014         	goto	l4822
  7914  002942                     u4880:
  7915  002942  8022               	bsf	___fldiv@grs^0,0,c
  7916  002944  EFB9  F014         	goto	l4822
  7917  002948                     l4816:
  7918  002948  90D8               	bcf	status,0,c
  7919  00294A  360F               	rlcf	___fldiv@b^0,f,c
  7920  00294C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7921  00294E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7922  002950  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7923  002952  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7924  002954  EFAE  F014         	goto	u4891
  7925  002958  EFB0  F014         	goto	u4890
  7926  00295C                     u4891:
  7927  00295C  EFB1  F014         	goto	l1387
  7928  002960                     u4890:
  7929  002960  800F               	bsf	___fldiv@b^0,0,c
  7930  002962                     l1387:
  7931  002962  90D8               	bcf	status,0,c
  7932  002964  3622               	rlcf	___fldiv@grs^0,f,c
  7933  002966  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7934  002968  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7935  00296A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7936  00296C  0620               	decf	___fldiv@new_exp^0,f,c
  7937  00296E  A0D8               	btfss	status,0,c
  7938  002970  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7939  002972                     l4822:
  7940  002972  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7941  002974  EFBE  F014         	goto	u4901
  7942  002978  EFC0  F014         	goto	u4900
  7943  00297C                     u4901:
  7944  00297C  EFA4  F014         	goto	l4816
  7945  002980                     u4900:
  7946  002980  0E00               	movlw	0
  7947  002982  6E27               	movwf	___fldiv@aexp^0,c
  7948  002984  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7949  002986  EFC7  F014         	goto	u4911
  7950  00298A  EFC9  F014         	goto	u4910
  7951  00298E                     u4911:
  7952  00298E  EFED  F014         	goto	l1389
  7953  002992                     u4910:
  7954  002992  0EFF               	movlw	255
  7955  002994  1422               	andwf	___fldiv@grs^0,w,c
  7956  002996  6E17               	movwf	??___fldiv^0,c
  7957  002998  0EFF               	movlw	255
  7958  00299A  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7959  00299C  6E18               	movwf	(??___fldiv+1)^0,c
  7960  00299E  0EFF               	movlw	255
  7961  0029A0  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7962  0029A2  6E19               	movwf	(??___fldiv+2)^0,c
  7963  0029A4  0E7F               	movlw	127
  7964  0029A6  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7965  0029A8  6E1A               	movwf	(??___fldiv+3)^0,c
  7966  0029AA  5017               	movf	??___fldiv^0,w,c
  7967  0029AC  1018               	iorwf	(??___fldiv+1)^0,w,c
  7968  0029AE  1019               	iorwf	(??___fldiv+2)^0,w,c
  7969  0029B0  101A               	iorwf	(??___fldiv+3)^0,w,c
  7970  0029B2  B4D8               	btfsc	status,2,c
  7971  0029B4  EFDE  F014         	goto	u4921
  7972  0029B8  EFE0  F014         	goto	u4920
  7973  0029BC                     u4921:
  7974  0029BC  EFE4  F014         	goto	l1390
  7975  0029C0                     u4920:
  7976  0029C0                     l4830:
  7977  0029C0  0E01               	movlw	1
  7978  0029C2  6E27               	movwf	___fldiv@aexp^0,c
  7979  0029C4  EFED  F014         	goto	l1389
  7980  0029C8                     l1390:
  7981  0029C8  A00F               	btfss	___fldiv@b^0,0,c
  7982  0029CA  EFE9  F014         	goto	u4931
  7983  0029CE  EFEB  F014         	goto	u4930
  7984  0029D2                     u4931:
  7985  0029D2  EFED  F014         	goto	l1389
  7986  0029D6                     u4930:
  7987  0029D6  EFE0  F014         	goto	l4830
  7988  0029DA                     l1389:
  7989  0029DA  5027               	movf	___fldiv@aexp^0,w,c
  7990  0029DC  B4D8               	btfsc	status,2,c
  7991  0029DE  EFF3  F014         	goto	u4941
  7992  0029E2  EFF5  F014         	goto	u4940
  7993  0029E6                     u4941:
  7994  0029E6  EF19  F015         	goto	l4842
  7995  0029EA                     u4940:
  7996  0029EA  0E01               	movlw	1
  7997  0029EC  260F               	addwf	___fldiv@b^0,f,c
  7998  0029EE  0E00               	movlw	0
  7999  0029F0  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8000  0029F2  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8001  0029F4  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8002  0029F6  A012               	btfss	(___fldiv@b+3)^0,0,c
  8003  0029F8  EF00  F015         	goto	u4951
  8004  0029FC  EF02  F015         	goto	u4950
  8005  002A00                     u4951:
  8006  002A00  EF19  F015         	goto	l4842
  8007  002A04                     u4950:
  8008  002A04  C00F  F017         	movff	___fldiv@b,??___fldiv
  8009  002A08  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8010  002A0C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8011  002A10  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8012  002A14  341A               	rlcf	(??___fldiv+3)^0,w,c
  8013  002A16  321A               	rrcf	(??___fldiv+3)^0,f,c
  8014  002A18  3219               	rrcf	(??___fldiv+2)^0,f,c
  8015  002A1A  3218               	rrcf	(??___fldiv+1)^0,f,c
  8016  002A1C  3217               	rrcf	??___fldiv^0,f,c
  8017  002A1E  C017  F00F         	movff	??___fldiv,___fldiv@b
  8018  002A22  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8019  002A26  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8020  002A2A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8021  002A2E  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8022  002A30  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8023  002A32                     l4842:
  8024  002A32  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8025  002A34  EF24  F015         	goto	u4961
  8026  002A38  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8027  002A3A  E108               	bnz	u4960
  8028  002A3C  2820               	incf	___fldiv@new_exp^0,w,c
  8029  002A3E  A0D8               	btfss	status,0,c
  8030  002A40  EF24  F015         	goto	u4961
  8031  002A44  EF26  F015         	goto	u4960
  8032  002A48                     u4961:
  8033  002A48  EF31  F015         	goto	l4846
  8034  002A4C                     u4960:
  8035  002A4C  0E00               	movlw	0
  8036  002A4E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8037  002A50  6820               	setf	___fldiv@new_exp^0,c
  8038  002A52  0E00               	movlw	0
  8039  002A54  6E0F               	movwf	___fldiv@b^0,c
  8040  002A56  0E00               	movlw	0
  8041  002A58  6E10               	movwf	(___fldiv@b+1)^0,c
  8042  002A5A  0E00               	movlw	0
  8043  002A5C  6E11               	movwf	(___fldiv@b+2)^0,c
  8044  002A5E  0E00               	movlw	0
  8045  002A60  6E12               	movwf	(___fldiv@b+3)^0,c
  8046  002A62                     l4846:
  8047  002A62  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8048  002A64  EF3E  F015         	goto	u4970
  8049  002A68  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8050  002A6A  E106               	bnz	u4971
  8051  002A6C  0420               	decf	___fldiv@new_exp^0,w,c
  8052  002A6E  B0D8               	btfsc	status,0,c
  8053  002A70  EF3C  F015         	goto	u4971
  8054  002A74  EF3E  F015         	goto	u4970
  8055  002A78                     u4971:
  8056  002A78  EF4C  F015         	goto	l4850
  8057  002A7C                     u4970:
  8058  002A7C  0E00               	movlw	0
  8059  002A7E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8060  002A80  0E00               	movlw	0
  8061  002A82  6E20               	movwf	___fldiv@new_exp^0,c
  8062  002A84  0E00               	movlw	0
  8063  002A86  6E0F               	movwf	___fldiv@b^0,c
  8064  002A88  0E00               	movlw	0
  8065  002A8A  6E10               	movwf	(___fldiv@b+1)^0,c
  8066  002A8C  0E00               	movlw	0
  8067  002A8E  6E11               	movwf	(___fldiv@b+2)^0,c
  8068  002A90  0E00               	movlw	0
  8069  002A92  6E12               	movwf	(___fldiv@b+3)^0,c
  8070  002A94  0E00               	movlw	0
  8071  002A96  6E1F               	movwf	___fldiv@sign^0,c
  8072  002A98                     l4850:
  8073  002A98  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8074  002A9C  A026               	btfss	___fldiv@bexp^0,0,c
  8075  002A9E  EF53  F015         	goto	u4981
  8076  002AA2  EF55  F015         	goto	u4980
  8077  002AA6                     u4981:
  8078  002AA6  EF58  F015         	goto	l4856
  8079  002AAA                     u4980:
  8080  002AAA  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8081  002AAC  EF59  F015         	goto	l4858
  8082  002AB0                     l4856:
  8083  002AB0  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8084  002AB2                     l4858:
  8085  002AB2  90D8               	bcf	status,0,c
  8086  002AB4  3026               	rrcf	___fldiv@bexp^0,w,c
  8087  002AB6  6E12               	movwf	(___fldiv@b+3)^0,c
  8088  002AB8  EF0F  F014         	goto	l4772
  8089  002ABC                     l1376:
  8090  002ABC  0012               	return		;funcret
  8091  002ABE                     __end_of___fldiv:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function _LED_C *****************
  8095 ;; Defined at:
  8096 ;;		line 173 in file "color.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;Total ram usage:        2 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; Hardware stack levels required when called: 1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_color_data_collection
  8121 ;;		_calibrate_white
  8122 ;;		_amb_light_measure
  8123 ;;		_distance_measure
  8124 ;;		_test_function
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text31
  8129  005B6A                     __ptext31:
  8130                           	callstack 0
  8131  005B6A                     _LED_C:
  8132                           	callstack 27
  8133  005B6A                     
  8134                           ;color.c: 175:     LATGbits.LATG1 = 1;
  8135  005B6A  827F               	bsf	127,1,c	;volatile
  8136                           
  8137                           ;color.c: 176:     LATFbits.LATF7 = 1;
  8138  005B6C  8E7E               	bsf	126,7,c	;volatile
  8139                           
  8140                           ;color.c: 177:     LATAbits.LATA4 = 1;
  8141  005B6E  8879               	bsf	121,4,c	;volatile
  8142  005B70                     
  8143                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8144  005B70  0E05               	movlw	5
  8145  005B72  6E02               	movwf	(??_LED_C+1)^0,c
  8146  005B74  0E0F               	movlw	15
  8147  005B76  6E01               	movwf	??_LED_C^0,c
  8148  005B78  0EF1               	movlw	241
  8149  005B7A                     u5967:
  8150  005B7A  2EE8               	decfsz	wreg,f,c
  8151  005B7C  D7FE               	bra	u5967
  8152  005B7E  2E01               	decfsz	??_LED_C^0,f,c
  8153  005B80  D7FC               	bra	u5967
  8154  005B82  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8155  005B84  D7FA               	bra	u5967
  8156  005B86  F000               	nop	
  8157  005B88  0012               	return		;funcret
  8158  005B8A                     __end_of_LED_C:
  8159                           	callstack 0
  8160                           
  8161 ;; *************** function _short_burst_back *****************
  8162 ;; Defined at:
  8163 ;;		line 10 in file "movement.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  8166 ;;		 -> main@motorL(10), 
  8167 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  8168 ;;		 -> main@motorR(10), 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;Total ram usage:        6 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 5
  8187 ;; This function calls:
  8188 ;;		_fullSpeedAhead
  8189 ;;		_halfSpeedBack
  8190 ;;		_stop
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text32
  8197  005548                     __ptext32:
  8198                           	callstack 0
  8199  005548                     _short_burst_back:
  8200                           	callstack 25
  8201  005548                     
  8202                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  8203  005548  C026  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
  8204  00554C  C027  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
  8205  005550  C028  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
  8206  005554  C029  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
  8207  005558  EC4D  F029         	call	_fullSpeedAhead	;wreg free
  8208  00555C                     
  8209                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8210  00555C  0E29               	movlw	41
  8211  00555E  6E2B               	movwf	(??_short_burst_back+1)^0,c
  8212  005560  0E96               	movlw	150
  8213  005562  6E2A               	movwf	??_short_burst_back^0,c
  8214  005564  0E7F               	movlw	127
  8215  005566                     u5977:
  8216  005566  2EE8               	decfsz	wreg,f,c
  8217  005568  D7FE               	bra	u5977
  8218  00556A  2E2A               	decfsz	??_short_burst_back^0,f,c
  8219  00556C  D7FC               	bra	u5977
  8220  00556E  2E2B               	decfsz	(??_short_burst_back+1)^0,f,c
  8221  005570  D7FA               	bra	u5977
  8222  005572  F000               	nop	
  8223  005574                     
  8224                           ;movement.c: 14:     halfSpeedBack(mL,mR);
  8225  005574  C026  F020         	movff	short_burst_back@mL,halfSpeedBack@mL
  8226  005578  C027  F021         	movff	short_burst_back@mL+1,halfSpeedBack@mL+1
  8227  00557C  C028  F022         	movff	short_burst_back@mR,halfSpeedBack@mR
  8228  005580  C029  F023         	movff	short_burst_back@mR+1,halfSpeedBack@mR+1
  8229  005584  EC2F  F028         	call	_halfSpeedBack	;wreg free
  8230  005588                     
  8231                           ;movement.c: 15:     stop(mL,mR);
  8232  005588  C026  F01A         	movff	short_burst_back@mL,stop@mL
  8233  00558C  C027  F01B         	movff	short_burst_back@mL+1,stop@mL+1
  8234  005590  C028  F01C         	movff	short_burst_back@mR,stop@mR
  8235  005594  C029  F01D         	movff	short_burst_back@mR+1,stop@mR+1
  8236  005598  ECEF  F028         	call	_stop	;wreg free
  8237  00559C  0012               	return		;funcret
  8238  00559E                     __end_of_short_burst_back:
  8239                           	callstack 0
  8240                           
  8241 ;; *************** function _halfSpeedBack *****************
  8242 ;; Defined at:
  8243 ;;		line 183 in file "dc_motor.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8246 ;;		 -> main@motorL(10), 
  8247 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8248 ;;		 -> main@motorR(10), 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;Total ram usage:        6 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 4
  8267 ;; This function calls:
  8268 ;;		_setMotorPWM
  8269 ;;		_stop
  8270 ;; This function is called by:
  8271 ;;		_short_burst_back
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text33
  8276  00505E                     __ptext33:
  8277                           	callstack 0
  8278  00505E                     _halfSpeedBack:
  8279                           	callstack 25
  8280  00505E                     
  8281                           ;dc_motor.c: 183: void halfSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: {;dc_motor.c: 185:     mL->direction=0;
  8282  00505E  EE20 F001          	lfsr	2,1
  8283  005062  5020               	movf	halfSpeedBack@mL^0,w,c
  8284  005064  26D9               	addwf	fsr2l,f,c
  8285  005066  5021               	movf	(halfSpeedBack@mL+1)^0,w,c
  8286  005068  22DA               	addwfc	fsr2h,f,c
  8287  00506A  0E00               	movlw	0
  8288  00506C  6EDF               	movwf	indf2,c
  8289                           
  8290                           ;dc_motor.c: 186:     mR->direction=0;
  8291  00506E  EE20 F001          	lfsr	2,1
  8292  005072  5022               	movf	halfSpeedBack@mR^0,w,c
  8293  005074  26D9               	addwf	fsr2l,f,c
  8294  005076  5023               	movf	(halfSpeedBack@mR+1)^0,w,c
  8295  005078  22DA               	addwfc	fsr2h,f,c
  8296  00507A  0E00               	movlw	0
  8297  00507C  6EDF               	movwf	indf2,c
  8298                           
  8299                           ;dc_motor.c: 187:     while (mL->power<40 && mR->power<40){
  8300  00507E  EF60  F028         	goto	l5232
  8301  005082                     l5224:
  8302                           
  8303                           ;dc_motor.c: 188:         mL->power += 10;
  8304  005082  C020  FFD9         	movff	halfSpeedBack@mL,fsr2l
  8305  005086  C021  FFDA         	movff	halfSpeedBack@mL+1,fsr2h
  8306  00508A  0E0A               	movlw	10
  8307  00508C  26DF               	addwf	indf2,f,c
  8308                           
  8309                           ;dc_motor.c: 189:         mR->power += 10;
  8310  00508E  C022  FFD9         	movff	halfSpeedBack@mR,fsr2l
  8311  005092  C023  FFDA         	movff	halfSpeedBack@mR+1,fsr2h
  8312  005096  0E0A               	movlw	10
  8313  005098  26DF               	addwf	indf2,f,c
  8314  00509A                     
  8315                           ;dc_motor.c: 190:         setMotorPWM(mL);
  8316  00509A  C020  F00F         	movff	halfSpeedBack@mL,setMotorPWM@m
  8317  00509E  C021  F010         	movff	halfSpeedBack@mL+1,setMotorPWM@m+1
  8318  0050A2  EC5D  F01D         	call	_setMotorPWM	;wreg free
  8319  0050A6                     
  8320                           ;dc_motor.c: 191:         setMotorPWM(mR);
  8321  0050A6  C022  F00F         	movff	halfSpeedBack@mR,setMotorPWM@m
  8322  0050AA  C023  F010         	movff	halfSpeedBack@mR+1,setMotorPWM@m+1
  8323  0050AE  EC5D  F01D         	call	_setMotorPWM	;wreg free
  8324  0050B2                     
  8325                           ;dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8326  0050B2  0ED0               	movlw	208
  8327  0050B4  6E24               	movwf	??_halfSpeedBack^0,c
  8328  0050B6  0ECA               	movlw	202
  8329  0050B8                     u5987:
  8330  0050B8  2EE8               	decfsz	wreg,f,c
  8331  0050BA  D7FE               	bra	u5987
  8332  0050BC  2E24               	decfsz	??_halfSpeedBack^0,f,c
  8333  0050BE  D7FC               	bra	u5987
  8334  0050C0                     l5232:
  8335                           
  8336                           ;dc_motor.c: 187:     while (mL->power<40 && mR->power<40){
  8337  0050C0  C020  FFD9         	movff	halfSpeedBack@mL,fsr2l
  8338  0050C4  C021  FFDA         	movff	halfSpeedBack@mL+1,fsr2h
  8339  0050C8  0E28               	movlw	40
  8340  0050CA  60DF               	cpfslt	indf2,c
  8341  0050CC  EF6A  F028         	goto	u5251
  8342  0050D0  EF6C  F028         	goto	u5250
  8343  0050D4                     u5251:
  8344  0050D4  EF78  F028         	goto	l5236
  8345  0050D8                     u5250:
  8346  0050D8  C022  FFD9         	movff	halfSpeedBack@mR,fsr2l
  8347  0050DC  C023  FFDA         	movff	halfSpeedBack@mR+1,fsr2h
  8348  0050E0  0E27               	movlw	39
  8349  0050E2  64DF               	cpfsgt	indf2,c
  8350  0050E4  EF76  F028         	goto	u5261
  8351  0050E8  EF78  F028         	goto	u5260
  8352  0050EC                     u5261:
  8353  0050EC  EF41  F028         	goto	l5224
  8354  0050F0                     u5260:
  8355  0050F0                     l5236:
  8356                           
  8357                           ;dc_motor.c: 194:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8358  0050F0  0E09               	movlw	9
  8359  0050F2  6E25               	movwf	(??_halfSpeedBack+1)^0,c
  8360  0050F4  0E1E               	movlw	30
  8361  0050F6  6E24               	movwf	??_halfSpeedBack^0,c
  8362  0050F8  0EE4               	movlw	228
  8363  0050FA                     u5997:
  8364  0050FA  2EE8               	decfsz	wreg,f,c
  8365  0050FC  D7FE               	bra	u5997
  8366  0050FE  2E24               	decfsz	??_halfSpeedBack^0,f,c
  8367  005100  D7FC               	bra	u5997
  8368  005102  2E25               	decfsz	(??_halfSpeedBack+1)^0,f,c
  8369  005104  D7FA               	bra	u5997
  8370  005106  D000               	nop2	
  8371  005108                     
  8372                           ;dc_motor.c: 195:     stop(mL,mR);
  8373  005108  C020  F01A         	movff	halfSpeedBack@mL,stop@mL
  8374  00510C  C021  F01B         	movff	halfSpeedBack@mL+1,stop@mL+1
  8375  005110  C022  F01C         	movff	halfSpeedBack@mR,stop@mR
  8376  005114  C023  F01D         	movff	halfSpeedBack@mR+1,stop@mR+1
  8377  005118  ECEF  F028         	call	_stop	;wreg free
  8378  00511C  0012               	return		;funcret
  8379  00511E                     __end_of_halfSpeedBack:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function _pin_init *****************
  8383 ;; Defined at:
  8384 ;;		line 100 in file "movement.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		None
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; Hardware stack levels required when called: 1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text34
  8413  005B8A                     __ptext34:
  8414                           	callstack 0
  8415  005B8A                     _pin_init:
  8416                           	callstack 29
  8417  005B8A  8486               	bsf	134,2,c	;volatile
  8418                           
  8419                           ;movement.c: 102:     ANSELFbits.ANSELF2=0;
  8420  005B8C  010E               	movlb	14	; () banked
  8421  005B8E  95B4               	bcf	180,2,b	;volatile
  8422                           
  8423                           ;movement.c: 103:     TRISFbits.TRISF3=1;
  8424  005B90  8686               	bsf	134,3,c	;volatile
  8425                           
  8426                           ;movement.c: 104:     ANSELFbits.ANSELF3=0;
  8427  005B92  97B4               	bcf	180,3,b	;volatile
  8428                           
  8429                           ;movement.c: 109:     TRISGbits.TRISG1 = 0;
  8430  005B94  9287               	bcf	135,1,c	;volatile
  8431                           
  8432                           ;movement.c: 110:     TRISFbits.TRISF7 = 0;
  8433  005B96  9E86               	bcf	134,7,c	;volatile
  8434                           
  8435                           ;movement.c: 111:     TRISAbits.TRISA4 = 0;
  8436  005B98  9881               	bcf	129,4,c	;volatile
  8437                           
  8438                           ;movement.c: 112:     LATGbits.LATG1 = 1;
  8439  005B9A  827F               	bsf	127,1,c	;volatile
  8440                           
  8441                           ;movement.c: 113:     LATFbits.LATF7 = 1;
  8442  005B9C  8E7E               	bsf	126,7,c	;volatile
  8443                           
  8444                           ;movement.c: 114:     LATAbits.LATA4 = 1;
  8445  005B9E  8879               	bsf	121,4,c	;volatile
  8446                           
  8447                           ;movement.c: 117:     TRISDbits.TRISD7 = 0;
  8448  005BA0  9E84               	bcf	132,7,c	;volatile
  8449                           
  8450                           ;movement.c: 118:     LATDbits.LATD7 = 0;
  8451  005BA2  9E7C               	bcf	124,7,c	;volatile
  8452                           
  8453                           ;movement.c: 119:     TRISHbits.TRISH3 = 0;
  8454  005BA4  9688               	bcf	136,3,c	;volatile
  8455                           
  8456                           ;movement.c: 120:     LATHbits.LATH3 = 0;
  8457  005BA6  9680               	bcf	128,3,c	;volatile
  8458  005BA8                     
  8459                           ; BSR set to: 14
  8460  005BA8  0012               	return		;funcret
  8461  005BAA                     __end_of_pin_init:
  8462                           	callstack 0
  8463                           
  8464 ;; *************** function _initUSART4 *****************
  8465 ;; Defined at:
  8466 ;;		line 4 in file "serial.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  1    wreg      void 
  8473 ;; Registers used:
  8474 ;;		wreg, status,2
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;Total ram usage:        0 bytes
  8485 ;; Hardware stack levels used: 1
  8486 ;; Hardware stack levels required when called: 1
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text35
  8495  005BCA                     __ptext35:
  8496                           	callstack 0
  8497  005BCA                     _initUSART4:
  8498                           	callstack 29
  8499  005BCA                     
  8500                           ;serial.c: 8:     RC0PPS = 0x12;
  8501  005BCA  0E12               	movlw	18
  8502  005BCC  010E               	movlb	14	; () banked
  8503  005BCE  6F62               	movwf	98,b	;volatile
  8504                           
  8505                           ;serial.c: 9:     RX4PPS = 0x11;
  8506  005BD0  0E11               	movlw	17
  8507  005BD2  6F15               	movwf	21,b	;volatile
  8508  005BD4                     
  8509                           ; BSR set to: 14
  8510                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8511  005BD4  97E9               	bcf	233,3,b	;volatile
  8512  005BD6                     
  8513                           ; BSR set to: 14
  8514                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8515  005BD6  95E8               	bcf	232,2,b	;volatile
  8516                           
  8517                           ;serial.c: 13:     SP4BRGL = 51;
  8518  005BD8  0E33               	movlw	51
  8519  005BDA  6FE5               	movwf	229,b	;volatile
  8520                           
  8521                           ;serial.c: 15:     SP4BRGH = 0;
  8522  005BDC  0E00               	movlw	0
  8523  005BDE  6FE6               	movwf	230,b	;volatile
  8524  005BE0                     
  8525                           ; BSR set to: 14
  8526                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8527  005BE0  89E7               	bsf	231,4,b	;volatile
  8528  005BE2                     
  8529                           ; BSR set to: 14
  8530                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8531  005BE2  8BE8               	bsf	232,5,b	;volatile
  8532  005BE4                     
  8533                           ; BSR set to: 14
  8534                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8535  005BE4  8FE7               	bsf	231,7,b	;volatile
  8536  005BE6                     
  8537                           ; BSR set to: 14
  8538  005BE6  0012               	return		;funcret
  8539  005BE8                     __end_of_initUSART4:
  8540                           	callstack 0
  8541                           
  8542 ;; *************** function _initDCmotors_parameter *****************
  8543 ;; Defined at:
  8544 ;;		line 40 in file "dc_motor.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8547 ;;		 -> main@motorL(10), 
  8548 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8549 ;;		 -> main@motorR(10), 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;Total ram usage:        4 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 1
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_main
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text36
  8576  004C72                     __ptext36:
  8577                           	callstack 0
  8578  004C72                     _initDCmotors_parameter:
  8579                           	callstack 29
  8580  004C72                     
  8581                           ;dc_motor.c: 42:     motorL->power = 0;
  8582  004C72  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8583  004C76  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8584  004C7A  0E00               	movlw	0
  8585  004C7C  6EDF               	movwf	indf2,c
  8586  004C7E                     
  8587                           ;dc_motor.c: 43:     motorL->direction = 1;
  8588  004C7E  EE20 F001          	lfsr	2,1
  8589  004C82  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8590  004C84  26D9               	addwf	fsr2l,f,c
  8591  004C86  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8592  004C88  22DA               	addwfc	fsr2h,f,c
  8593  004C8A  0E01               	movlw	1
  8594  004C8C  6EDF               	movwf	indf2,c
  8595  004C8E                     
  8596                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8597  004C8E  EE20 F002          	lfsr	2,2
  8598  004C92  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8599  004C94  26D9               	addwf	fsr2l,f,c
  8600  004C96  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8601  004C98  22DA               	addwfc	fsr2h,f,c
  8602  004C9A  0EA3               	movlw	163
  8603  004C9C  6EDE               	movwf	postinc2,c
  8604  004C9E  0E0F               	movlw	15
  8605  004CA0  6EDD               	movwf	postdec2,c
  8606  004CA2                     
  8607                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8608  004CA2  EE20 F004          	lfsr	2,4
  8609  004CA6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8610  004CA8  26D9               	addwf	fsr2l,f,c
  8611  004CAA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8612  004CAC  22DA               	addwfc	fsr2h,f,c
  8613  004CAE  0E7D               	movlw	125
  8614  004CB0  6EDE               	movwf	postinc2,c
  8615  004CB2  0E0F               	movlw	15
  8616  004CB4  6EDD               	movwf	postdec2,c
  8617  004CB6                     
  8618                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8619  004CB6  EE20 F006          	lfsr	2,6
  8620  004CBA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8621  004CBC  26D9               	addwf	fsr2l,f,c
  8622  004CBE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8623  004CC0  22DA               	addwfc	fsr2h,f,c
  8624  004CC2  0E04               	movlw	4
  8625  004CC4  6EDF               	movwf	indf2,c
  8626  004CC6                     
  8627                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8628  004CC6  EE20 F007          	lfsr	2,7
  8629  004CCA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8630  004CCC  26D9               	addwf	fsr2l,f,c
  8631  004CCE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8632  004CD0  22DA               	addwfc	fsr2h,f,c
  8633  004CD2  0EC7               	movlw	199
  8634  004CD4  6EDE               	movwf	postinc2,c
  8635  004CD6  0E00               	movlw	0
  8636  004CD8  6EDD               	movwf	postdec2,c
  8637  004CDA                     
  8638                           ;dc_motor.c: 50:     motorR->power = 0;
  8639  004CDA  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8640  004CDE  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8641  004CE2  0E00               	movlw	0
  8642  004CE4  6EDF               	movwf	indf2,c
  8643                           
  8644                           ;dc_motor.c: 51:     motorR->direction = 1;
  8645  004CE6  EE20 F001          	lfsr	2,1
  8646  004CEA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8647  004CEC  26D9               	addwf	fsr2l,f,c
  8648  004CEE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8649  004CF0  22DA               	addwfc	fsr2h,f,c
  8650  004CF2  0E01               	movlw	1
  8651  004CF4  6EDF               	movwf	indf2,c
  8652                           
  8653                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8654  004CF6  EE20 F002          	lfsr	2,2
  8655  004CFA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8656  004CFC  26D9               	addwf	fsr2l,f,c
  8657  004CFE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8658  004D00  22DA               	addwfc	fsr2h,f,c
  8659  004D02  0EA0               	movlw	160
  8660  004D04  6EDE               	movwf	postinc2,c
  8661  004D06  0E0F               	movlw	15
  8662  004D08  6EDD               	movwf	postdec2,c
  8663                           
  8664                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8665  004D0A  EE20 F004          	lfsr	2,4
  8666  004D0E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8667  004D10  26D9               	addwf	fsr2l,f,c
  8668  004D12  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8669  004D14  22DA               	addwfc	fsr2h,f,c
  8670  004D16  0E7F               	movlw	127
  8671  004D18  6EDE               	movwf	postinc2,c
  8672  004D1A  0E0F               	movlw	15
  8673  004D1C  6EDD               	movwf	postdec2,c
  8674                           
  8675                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8676  004D1E  EE20 F006          	lfsr	2,6
  8677  004D22  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8678  004D24  26D9               	addwf	fsr2l,f,c
  8679  004D26  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8680  004D28  22DA               	addwfc	fsr2h,f,c
  8681  004D2A  0E06               	movlw	6
  8682  004D2C  6EDF               	movwf	indf2,c
  8683                           
  8684                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8685  004D2E  EE20 F007          	lfsr	2,7
  8686  004D32  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8687  004D34  26D9               	addwf	fsr2l,f,c
  8688  004D36  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8689  004D38  22DA               	addwfc	fsr2h,f,c
  8690  004D3A  0EC7               	movlw	199
  8691  004D3C  6EDE               	movwf	postinc2,c
  8692  004D3E  0E00               	movlw	0
  8693  004D40  6EDD               	movwf	postdec2,c
  8694  004D42  0012               	return		;funcret
  8695  004D44                     __end_of_initDCmotors_parameter:
  8696                           	callstack 0
  8697                           
  8698 ;; *************** function _initDCmotorsPWM *****************
  8699 ;; Defined at:
  8700 ;;		line 10 in file "dc_motor.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  PWMperiod       2    0[COMRAM] int 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;Total ram usage:        2 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 1
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text37
  8729  0057FC                     __ptext37:
  8730                           	callstack 0
  8731  0057FC                     _initDCmotorsPWM:
  8732                           	callstack 29
  8733  0057FC                     
  8734                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8735  0057FC  9485               	bcf	133,2,c	;volatile
  8736                           
  8737                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8738  0057FE  9E83               	bcf	131,7,c	;volatile
  8739                           
  8740                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8741  005800  9C87               	bcf	135,6,c	;volatile
  8742                           
  8743                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8744  005802  9885               	bcf	133,4,c	;volatile
  8745                           
  8746                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8747  005804  947D               	bcf	125,2,c	;volatile
  8748                           
  8749                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8750  005806  9E7B               	bcf	123,7,c	;volatile
  8751                           
  8752                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8753  005808  9C7F               	bcf	127,6,c	;volatile
  8754                           
  8755                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8756  00580A  987D               	bcf	125,4,c	;volatile
  8757  00580C                     
  8758                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8759  00580C  50BD               	movf	189,w,c	;volatile
  8760  00580E  0B8F               	andlw	-113
  8761  005810  0930               	iorlw	48
  8762  005812  6EBD               	movwf	189,c	;volatile
  8763                           
  8764                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8765  005814  0EE0               	movlw	-32
  8766  005816  16BE               	andwf	190,f,c	;volatile
  8767                           
  8768                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8769  005818  50BF               	movf	191,w,c	;volatile
  8770  00581A  0BF0               	andlw	-16
  8771  00581C  0901               	iorlw	1
  8772  00581E  6EBF               	movwf	191,c	;volatile
  8773                           
  8774                           ;dc_motor.c: 28:     T2PR=200-1;
  8775  005820  0EC7               	movlw	199
  8776  005822  6EBC               	movwf	188,c	;volatile
  8777  005824                     
  8778                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8779  005824  8EBD               	bsf	189,7,c	;volatile
  8780                           
  8781                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8782  005826  0E0A               	movlw	10
  8783  005828  010E               	movlb	14	; () banked
  8784  00582A  6F74               	movwf	116,b	;volatile
  8785                           
  8786                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8787  00582C  0E0B               	movlw	11
  8788  00582E  6F69               	movwf	105,b	;volatile
  8789                           
  8790                           ;dc_motor.c: 34:     PWM6DCH=0;
  8791  005830  0E00               	movlw	0
  8792  005832  6EA3               	movwf	163,c	;volatile
  8793                           
  8794                           ;dc_motor.c: 35:     PWM7DCH=0;
  8795  005834  0E00               	movlw	0
  8796  005836  6EA0               	movwf	160,c	;volatile
  8797  005838                     
  8798                           ; BSR set to: 14
  8799                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8800  005838  8EA4               	bsf	164,7,c	;volatile
  8801  00583A                     
  8802                           ; BSR set to: 14
  8803                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8804  00583A  8EA1               	bsf	161,7,c	;volatile
  8805  00583C                     
  8806                           ; BSR set to: 14
  8807  00583C  0012               	return		;funcret
  8808  00583E                     __end_of_initDCmotorsPWM:
  8809                           	callstack 0
  8810                           
  8811 ;; *************** function _color_click_init *****************
  8812 ;; Defined at:
  8813 ;;		line 67 in file "color.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;		None
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, status,2, status,0, cstack
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;Total ram usage:        1 bytes
  8832 ;; Hardware stack levels used: 1
  8833 ;; Hardware stack levels required when called: 4
  8834 ;; This function calls:
  8835 ;;		_I2C_2_Master_Init
  8836 ;;		_color_writetoaddr
  8837 ;; This function is called by:
  8838 ;;		_main
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text38
  8843  0059E0                     __ptext38:
  8844                           	callstack 0
  8845  0059E0                     _color_click_init:
  8846                           	callstack 26
  8847  0059E0                     
  8848                           ;color.c: 70:     I2C_2_Master_Init();
  8849  0059E0  EC39  F02D         	call	_I2C_2_Master_Init	;wreg free
  8850  0059E4                     
  8851                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8852  0059E4  0E01               	movlw	1
  8853  0059E6  6E03               	movwf	color_writetoaddr@value^0,c
  8854  0059E8  0E00               	movlw	0
  8855  0059EA  ECD5  F02D         	call	_color_writetoaddr
  8856  0059EE                     
  8857                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8858  0059EE  0E3F               	movlw	63
  8859  0059F0  6E05               	movwf	??_color_click_init^0,c
  8860  0059F2  0E55               	movlw	85
  8861  0059F4                     u6007:
  8862  0059F4  2EE8               	decfsz	wreg,f,c
  8863  0059F6  D7FE               	bra	u6007
  8864  0059F8  2E05               	decfsz	??_color_click_init^0,f,c
  8865  0059FA  D7FC               	bra	u6007
  8866  0059FC  F000               	nop	
  8867  0059FE                     
  8868                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8869  0059FE  0E03               	movlw	3
  8870  005A00  6E03               	movwf	color_writetoaddr@value^0,c
  8871  005A02  0E00               	movlw	0
  8872  005A04  ECD5  F02D         	call	_color_writetoaddr
  8873  005A08                     
  8874                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8875  005A08  0ED5               	movlw	213
  8876  005A0A  6E03               	movwf	color_writetoaddr@value^0,c
  8877  005A0C  0E01               	movlw	1
  8878  005A0E  ECD5  F02D         	call	_color_writetoaddr
  8879  005A12  0012               	return		;funcret
  8880  005A14                     __end_of_color_click_init:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _color_writetoaddr *****************
  8884 ;; Defined at:
  8885 ;;		line 83 in file "color.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  address         1    wreg     unsigned char 
  8888 ;;  value           1    2[COMRAM] unsigned char 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  address         1    3[COMRAM] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;Total ram usage:        2 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 3
  8907 ;; This function calls:
  8908 ;;		_I2C_2_Master_Start
  8909 ;;		_I2C_2_Master_Stop
  8910 ;;		_I2C_2_Master_Write
  8911 ;; This function is called by:
  8912 ;;		_color_click_init
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text39
  8917  005BAA                     __ptext39:
  8918                           	callstack 0
  8919  005BAA                     _color_writetoaddr:
  8920                           	callstack 26
  8921                           
  8922                           ;incstack = 0
  8923                           ;color_writetoaddr@address stored from wreg
  8924  005BAA  6E04               	movwf	color_writetoaddr@address^0,c
  8925  005BAC                     
  8926                           ;color.c: 84:     I2C_2_Master_Start();
  8927  005BAC  EC30  F02E         	call	_I2C_2_Master_Start	;wreg free
  8928                           
  8929                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8930  005BB0  0E52               	movlw	82
  8931  005BB2  EC1A  F02E         	call	_I2C_2_Master_Write
  8932                           
  8933                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8934  005BB6  5004               	movf	color_writetoaddr@address^0,w,c
  8935  005BB8  0980               	iorlw	128
  8936  005BBA  EC1A  F02E         	call	_I2C_2_Master_Write
  8937                           
  8938                           ;color.c: 87:     I2C_2_Master_Write(value);
  8939  005BBE  5003               	movf	color_writetoaddr@value^0,w,c
  8940  005BC0  EC1A  F02E         	call	_I2C_2_Master_Write
  8941                           
  8942                           ;color.c: 88:     I2C_2_Master_Stop();
  8943  005BC4  EC2B  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8944  005BC8  0012               	return		;funcret
  8945  005BCA                     __end_of_color_writetoaddr:
  8946                           	callstack 0
  8947                           
  8948 ;; *************** function _I2C_2_Master_Write *****************
  8949 ;; Defined at:
  8950 ;;		line 45 in file "i2c.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  data_byte       1    wreg     unsigned char 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  data_byte       1    1[COMRAM] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;Total ram usage:        1 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 2
  8971 ;; This function calls:
  8972 ;;		_I2C_2_Master_Idle
  8973 ;; This function is called by:
  8974 ;;		_color_writetoaddr
  8975 ;;		_color_read_Red
  8976 ;;		_color_read_Blue
  8977 ;;		_color_read_Green
  8978 ;;		_color_read_Clear
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text40
  8983  005C34                     __ptext40:
  8984                           	callstack 0
  8985  005C34                     _I2C_2_Master_Write:
  8986                           	callstack 24
  8987                           
  8988                           ;incstack = 0
  8989                           ;I2C_2_Master_Write@data_byte stored from wreg
  8990  005C34  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8991  005C36                     
  8992                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8993  005C36  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8994  005C3A                     
  8995                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8996  005C3A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8997  005C3E  0012               	return		;funcret
  8998  005C40                     __end_of_I2C_2_Master_Write:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function _I2C_2_Master_Stop *****************
  9002 ;; Defined at:
  9003 ;;		line 39 in file "i2c.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 2
  9024 ;; This function calls:
  9025 ;;		_I2C_2_Master_Idle
  9026 ;; This function is called by:
  9027 ;;		_color_writetoaddr
  9028 ;;		_color_read_Red
  9029 ;;		_color_read_Blue
  9030 ;;		_color_read_Green
  9031 ;;		_color_read_Clear
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text41
  9036  005C56                     __ptext41:
  9037                           	callstack 0
  9038  005C56                     _I2C_2_Master_Stop:
  9039                           	callstack 24
  9040  005C56                     
  9041                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9042  005C56  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9043  005C5A                     
  9044                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9045  005C5A  010E               	movlb	14	; () banked
  9046  005C5C  85DA               	bsf	218,2,b	;volatile
  9047  005C5E                     
  9048                           ; BSR set to: 14
  9049  005C5E  0012               	return		;funcret
  9050  005C60                     __end_of_I2C_2_Master_Stop:
  9051                           	callstack 0
  9052                           
  9053 ;; *************** function _I2C_2_Master_Start *****************
  9054 ;; Defined at:
  9055 ;;		line 27 in file "i2c.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;Total ram usage:        0 bytes
  9074 ;; Hardware stack levels used: 1
  9075 ;; Hardware stack levels required when called: 2
  9076 ;; This function calls:
  9077 ;;		_I2C_2_Master_Idle
  9078 ;; This function is called by:
  9079 ;;		_color_writetoaddr
  9080 ;;		_color_read_Red
  9081 ;;		_color_read_Blue
  9082 ;;		_color_read_Green
  9083 ;;		_color_read_Clear
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text42
  9088  005C60                     __ptext42:
  9089                           	callstack 0
  9090  005C60                     _I2C_2_Master_Start:
  9091                           	callstack 24
  9092  005C60                     
  9093                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9094  005C60  EC4E  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9095  005C64                     
  9096                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9097  005C64  010E               	movlb	14	; () banked
  9098  005C66  81DA               	bsf	218,0,b	;volatile
  9099  005C68                     
  9100                           ; BSR set to: 14
  9101  005C68  0012               	return		;funcret
  9102  005C6A                     __end_of_I2C_2_Master_Start:
  9103                           	callstack 0
  9104                           
  9105 ;; *************** function _I2C_2_Master_Idle *****************
  9106 ;; Defined at:
  9107 ;;		line 22 in file "i2c.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;		None
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;		None
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg, status,2, status,0
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;Total ram usage:        1 bytes
  9126 ;; Hardware stack levels used: 1
  9127 ;; Hardware stack levels required when called: 1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_I2C_2_Master_Start
  9132 ;;		_I2C_2_Master_RepStart
  9133 ;;		_I2C_2_Master_Stop
  9134 ;;		_I2C_2_Master_Write
  9135 ;;		_I2C_2_Master_Read
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text43
  9140  005A9C                     __ptext43:
  9141                           	callstack 0
  9142  005A9C                     _I2C_2_Master_Idle:
  9143                           	callstack 24
  9144  005A9C                     l205:
  9145  005A9C  010E               	movlb	14	; () banked
  9146  005A9E  B5D8               	btfsc	216,2,b	;volatile
  9147  005AA0  EF54  F02D         	goto	u3311
  9148  005AA4  EF56  F02D         	goto	u3310
  9149  005AA8                     u3311:
  9150  005AA8  EF4E  F02D         	goto	l205
  9151  005AAC                     u3310:
  9152  005AAC                     
  9153                           ; BSR set to: 14
  9154  005AAC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9155  005AB0  0E1F               	movlw	31
  9156  005AB2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9157  005AB4  A4D8               	btfss	status,2,c
  9158  005AB6  EF5F  F02D         	goto	u3321
  9159  005ABA  EF61  F02D         	goto	u3320
  9160  005ABE                     u3321:
  9161  005ABE  EF4E  F02D         	goto	l205
  9162  005AC2                     u3320:
  9163  005AC2                     
  9164                           ; BSR set to: 14
  9165  005AC2  0012               	return		;funcret
  9166  005AC4                     __end_of_I2C_2_Master_Idle:
  9167                           	callstack 0
  9168                           
  9169 ;; *************** function _I2C_2_Master_Init *****************
  9170 ;; Defined at:
  9171 ;;		line 4 in file "i2c.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;		None
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, status,2
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;Total ram usage:        0 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; Hardware stack levels required when called: 1
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_color_click_init
  9196 ;;		_main
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text44
  9201  005A72                     __ptext44:
  9202                           	callstack 0
  9203  005A72                     _I2C_2_Master_Init:
  9204                           	callstack 28
  9205  005A72                     
  9206                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9207  005A72  010E               	movlb	14	; () banked
  9208  005A74  51D9               	movf	217,w,b	;volatile
  9209  005A76  0BF0               	andlw	-16
  9210  005A78  0908               	iorlw	8
  9211  005A7A  6FD9               	movwf	217,b	;volatile
  9212  005A7C                     
  9213                           ; BSR set to: 14
  9214                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9215  005A7C  8BD9               	bsf	217,5,b	;volatile
  9216                           
  9217                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9218  005A7E  0E9F               	movlw	159
  9219  005A80  6FD6               	movwf	214,b	;volatile
  9220  005A82                     
  9221                           ; BSR set to: 14
  9222                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9223  005A82  8A84               	bsf	132,5,c	;volatile
  9224  005A84                     
  9225                           ; BSR set to: 14
  9226                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9227  005A84  8C84               	bsf	132,6,c	;volatile
  9228  005A86                     
  9229                           ; BSR set to: 14
  9230                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9231  005A86  9BA7               	bcf	167,5,b	;volatile
  9232  005A88                     
  9233                           ; BSR set to: 14
  9234                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9235  005A88  9DA7               	bcf	167,6,b	;volatile
  9236                           
  9237                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9238  005A8A  0E1D               	movlw	29
  9239  005A8C  6F1D               	movwf	29,b	;volatile
  9240                           
  9241                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9242  005A8E  0E1E               	movlw	30
  9243  005A90  6F1C               	movwf	28,b	;volatile
  9244                           
  9245                           ;i2c.c: 18:   RD5PPS=0x1C;
  9246  005A92  0E1C               	movlw	28
  9247  005A94  6F6F               	movwf	111,b	;volatile
  9248                           
  9249                           ;i2c.c: 19:   RD6PPS=0x1B;
  9250  005A96  0E1B               	movlw	27
  9251  005A98  6F70               	movwf	112,b	;volatile
  9252  005A9A                     
  9253                           ; BSR set to: 14
  9254  005A9A  0012               	return		;funcret
  9255  005A9C                     __end_of_I2C_2_Master_Init:
  9256                           	callstack 0
  9257                           
  9258 ;; *************** function _buggylight_init *****************
  9259 ;; Defined at:
  9260 ;;		line 13 in file "color.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		None
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;Total ram usage:        0 bytes
  9279 ;; Hardware stack levels used: 1
  9280 ;; Hardware stack levels required when called: 1
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_main
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text45
  9289  005C1E                     __ptext45:
  9290                           	callstack 0
  9291  005C1E                     _buggylight_init:
  9292                           	callstack 29
  9293  005C1E                     
  9294                           ;color.c: 15:     TRISHbits.TRISH1=0;
  9295  005C1E  9288               	bcf	136,1,c	;volatile
  9296                           
  9297                           ;color.c: 16:     TRISDbits.TRISD4=0;
  9298  005C20  9884               	bcf	132,4,c	;volatile
  9299                           
  9300                           ;color.c: 17:     TRISDbits.TRISD3=0;
  9301  005C22  9684               	bcf	132,3,c	;volatile
  9302                           
  9303                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9304  005C24  9086               	bcf	134,0,c	;volatile
  9305                           
  9306                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9307  005C26  9088               	bcf	136,0,c	;volatile
  9308                           
  9309                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9310  005C28  9280               	bcf	128,1,c	;volatile
  9311                           
  9312                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9313  005C2A  987C               	bcf	124,4,c	;volatile
  9314                           
  9315                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9316  005C2C  967C               	bcf	124,3,c	;volatile
  9317                           
  9318                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9319  005C2E  907E               	bcf	126,0,c	;volatile
  9320                           
  9321                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9322  005C30  9080               	bcf	128,0,c	;volatile
  9323  005C32  0012               	return		;funcret
  9324  005C34                     __end_of_buggylight_init:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _action *****************
  9328 ;; Defined at:
  9329 ;;		line 19 in file "movement.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  color           1    wreg     unsigned char 
  9332 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9333 ;;		 -> main@motorL(10), 
  9334 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9335 ;;		 -> main@motorR(10), 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  color           1  200[BANK2 ] unsigned char 
  9338 ;;  buf           100  100[BANK2 ] unsigned char [100]
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9349 ;;      Locals:         0       0       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9351 ;;      Totals:         0       4       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9352 ;;Total ram usage:      105 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; Hardware stack levels required when called: 11
  9355 ;; This function calls:
  9356 ;;		_goback
  9357 ;;		_reverse_square
  9358 ;;		_sendStringSerial4
  9359 ;;		_short_reverse
  9360 ;;		_sprintf
  9361 ;;		_toggle_light
  9362 ;;		_turnLeft
  9363 ;;		_turnRight
  9364 ;; This function is called by:
  9365 ;;		_main
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text46
  9370  002E2A                     __ptext46:
  9371                           	callstack 0
  9372  002E2A                     _action:
  9373                           	callstack 19
  9374                           
  9375                           ;incstack = 0
  9376                           ;action@color stored from wreg
  9377  002E2A  0102               	movlb	2	; () banked
  9378  002E2C  6FC8               	movwf	action@color& (0+255),b
  9379  002E2E                     
  9380                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: {;movement.c: 23:     if (color != 0){
  9381  002E2E  0102               	movlb	2	; () banked
  9382  002E30  51C8               	movf	action@color& (0+255),w,b
  9383  002E32  B4D8               	btfsc	status,2,c
  9384  002E34  EF1E  F017         	goto	u5471
  9385  002E38  EF20  F017         	goto	u5470
  9386  002E3C                     u5471:
  9387  002E3C  EF98  F018         	goto	l641
  9388  002E40                     u5470:
  9389  002E40                     
  9390                           ; BSR set to: 2
  9391                           ;movement.c: 25:         char buf[100];;movement.c: 26:         sprintf(buf,"result: %d\
      +                          r\n", color);
  9392  002E40  0E64               	movlw	low action@buf
  9393  002E42  0100               	movlb	0	; () banked
  9394  002E44  6F60               	movwf	sprintf@s& (0+255),b
  9395  002E46  0E02               	movlw	high action@buf
  9396  002E48  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9397  002E4A  0E24               	movlw	low STR_3
  9398  002E4C  6F62               	movwf	sprintf@fmt& (0+255),b
  9399  002E4E  0E0E               	movlw	high STR_3
  9400  002E50  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9401  002E52  C2C8  F064         	movff	action@color,?_sprintf+4
  9402  002E56  6B65               	clrf	(?_sprintf+5)& (0+255),b
  9403  002E58  ECCF  F02A         	call	_sprintf	;wreg free
  9404  002E5C                     
  9405                           ;movement.c: 27:         sendStringSerial4(buf);
  9406  002E5C  0E64               	movlw	low action@buf
  9407  002E5E  6E02               	movwf	sendStringSerial4@string^0,c
  9408  002E60  0E02               	movlw	high action@buf
  9409  002E62  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9410  002E64  EC0A  F02D         	call	_sendStringSerial4	;wreg free
  9411  002E68                     
  9412                           ;movement.c: 28:         if (color == 1){
  9413  002E68  0102               	movlb	2	; () banked
  9414  002E6A  05C8               	decf	action@color& (0+255),w,b
  9415  002E6C  A4D8               	btfss	status,2,c
  9416  002E6E  EF3B  F017         	goto	u5481
  9417  002E72  EF3D  F017         	goto	u5480
  9418  002E76                     u5481:
  9419  002E76  EF61  F017         	goto	l5488
  9420  002E7A                     u5480:
  9421  002E7A                     
  9422                           ; BSR set to: 2
  9423                           ;movement.c: 29:             short_reverse(mL,mR);
  9424  002E7A  C0E0  F026         	movff	action@mL,short_reverse@mL
  9425  002E7E  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9426  002E82  C0E2  F028         	movff	action@mR,short_reverse@mR
  9427  002E86  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9428  002E8A  EC1F  F02C         	call	_short_reverse	;wreg free
  9429                           
  9430                           ;movement.c: 30:             turnRight(mL,mR,90);
  9431  002E8E  C0E0  F020         	movff	action@mL,turnRight@mL
  9432  002E92  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9433  002E96  C0E2  F022         	movff	action@mR,turnRight@mR
  9434  002E9A  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9435  002E9E  0E5A               	movlw	90
  9436  002EA0  6E24               	movwf	turnRight@angle_right^0,c
  9437  002EA2  ECD6  F020         	call	_turnRight	;wreg free
  9438  002EA6                     
  9439                           ;movement.c: 31:             memory[array_index] = 1;
  9440  002EA6  0103               	movlb	3	; () banked
  9441  002EA8  516B               	movf	_array_index& (0+255),w,b
  9442  002EAA  0D02               	mullw	2
  9443  002EAC  0E3C               	movlw	low _memory
  9444  002EAE  24F3               	addwf	243,w,c
  9445  002EB0  6ED9               	movwf	fsr2l,c
  9446  002EB2  0E03               	movlw	high _memory
  9447  002EB4  20F4               	addwfc	prodh,w,c
  9448  002EB6  6EDA               	movwf	fsr2h,c
  9449  002EB8  0E01               	movlw	1
  9450  002EBA  6EDE               	movwf	postinc2,c
  9451  002EBC  0E00               	movlw	0
  9452  002EBE  6EDD               	movwf	postdec2,c
  9453  002EC0                     
  9454                           ; BSR set to: 3
  9455                           ;movement.c: 32:             array_index++;
  9456  002EC0  2B6B               	incf	_array_index& (0+255),f,b
  9457  002EC2                     l5488:
  9458                           
  9459                           ;movement.c: 34:         if (color == 2){
  9460  002EC2  0E02               	movlw	2
  9461  002EC4  0102               	movlb	2	; () banked
  9462  002EC6  19C8               	xorwf	action@color& (0+255),w,b
  9463  002EC8  A4D8               	btfss	status,2,c
  9464  002ECA  EF69  F017         	goto	u5491
  9465  002ECE  EF6B  F017         	goto	u5490
  9466  002ED2                     u5491:
  9467  002ED2  EF8F  F017         	goto	l5496
  9468  002ED6                     u5490:
  9469  002ED6                     
  9470                           ; BSR set to: 2
  9471                           ;movement.c: 35:             short_reverse(mL,mR);
  9472  002ED6  C0E0  F026         	movff	action@mL,short_reverse@mL
  9473  002EDA  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9474  002EDE  C0E2  F028         	movff	action@mR,short_reverse@mR
  9475  002EE2  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9476  002EE6  EC1F  F02C         	call	_short_reverse	;wreg free
  9477                           
  9478                           ;movement.c: 36:             turnLeft(mL,mR,90);
  9479  002EEA  C0E0  F020         	movff	action@mL,turnLeft@mL
  9480  002EEE  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9481  002EF2  C0E2  F022         	movff	action@mR,turnLeft@mR
  9482  002EF6  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9483  002EFA  0E5A               	movlw	90
  9484  002EFC  6E24               	movwf	turnLeft@angle_left^0,c
  9485  002EFE  EC9D  F021         	call	_turnLeft	;wreg free
  9486  002F02                     
  9487                           ;movement.c: 37:             memory[array_index] = 2;
  9488  002F02  0103               	movlb	3	; () banked
  9489  002F04  516B               	movf	_array_index& (0+255),w,b
  9490  002F06  0D02               	mullw	2
  9491  002F08  0E3C               	movlw	low _memory
  9492  002F0A  24F3               	addwf	243,w,c
  9493  002F0C  6ED9               	movwf	fsr2l,c
  9494  002F0E  0E03               	movlw	high _memory
  9495  002F10  20F4               	addwfc	prodh,w,c
  9496  002F12  6EDA               	movwf	fsr2h,c
  9497  002F14  0E02               	movlw	2
  9498  002F16  6EDE               	movwf	postinc2,c
  9499  002F18  0E00               	movlw	0
  9500  002F1A  6EDD               	movwf	postdec2,c
  9501  002F1C                     
  9502                           ; BSR set to: 3
  9503                           ;movement.c: 38:             array_index++;
  9504  002F1C  2B6B               	incf	_array_index& (0+255),f,b
  9505  002F1E                     l5496:
  9506                           
  9507                           ;movement.c: 40:         if (color == 3){
  9508  002F1E  0E03               	movlw	3
  9509  002F20  0102               	movlb	2	; () banked
  9510  002F22  19C8               	xorwf	action@color& (0+255),w,b
  9511  002F24  A4D8               	btfss	status,2,c
  9512  002F26  EF97  F017         	goto	u5501
  9513  002F2A  EF99  F017         	goto	u5500
  9514  002F2E                     u5501:
  9515  002F2E  EFBD  F017         	goto	l5504
  9516  002F32                     u5500:
  9517  002F32                     
  9518                           ; BSR set to: 2
  9519                           ;movement.c: 41:             short_reverse(mL,mR);
  9520  002F32  C0E0  F026         	movff	action@mL,short_reverse@mL
  9521  002F36  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9522  002F3A  C0E2  F028         	movff	action@mR,short_reverse@mR
  9523  002F3E  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9524  002F42  EC1F  F02C         	call	_short_reverse	;wreg free
  9525                           
  9526                           ;movement.c: 42:             turnLeft(mL,mR,180);
  9527  002F46  C0E0  F020         	movff	action@mL,turnLeft@mL
  9528  002F4A  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9529  002F4E  C0E2  F022         	movff	action@mR,turnLeft@mR
  9530  002F52  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9531  002F56  0EB4               	movlw	180
  9532  002F58  6E24               	movwf	turnLeft@angle_left^0,c
  9533  002F5A  EC9D  F021         	call	_turnLeft	;wreg free
  9534  002F5E                     
  9535                           ;movement.c: 43:             memory[array_index] = 3;
  9536  002F5E  0103               	movlb	3	; () banked
  9537  002F60  516B               	movf	_array_index& (0+255),w,b
  9538  002F62  0D02               	mullw	2
  9539  002F64  0E3C               	movlw	low _memory
  9540  002F66  24F3               	addwf	243,w,c
  9541  002F68  6ED9               	movwf	fsr2l,c
  9542  002F6A  0E03               	movlw	high _memory
  9543  002F6C  20F4               	addwfc	prodh,w,c
  9544  002F6E  6EDA               	movwf	fsr2h,c
  9545  002F70  0E03               	movlw	3
  9546  002F72  6EDE               	movwf	postinc2,c
  9547  002F74  0E00               	movlw	0
  9548  002F76  6EDD               	movwf	postdec2,c
  9549  002F78                     
  9550                           ; BSR set to: 3
  9551                           ;movement.c: 44:             array_index++;
  9552  002F78  2B6B               	incf	_array_index& (0+255),f,b
  9553  002F7A                     l5504:
  9554                           
  9555                           ;movement.c: 46:         if (color == 4){
  9556  002F7A  0E04               	movlw	4
  9557  002F7C  0102               	movlb	2	; () banked
  9558  002F7E  19C8               	xorwf	action@color& (0+255),w,b
  9559  002F80  A4D8               	btfss	status,2,c
  9560  002F82  EFC5  F017         	goto	u5511
  9561  002F86  EFC7  F017         	goto	u5510
  9562  002F8A                     u5511:
  9563  002F8A  EFEB  F017         	goto	l5512
  9564  002F8E                     u5510:
  9565  002F8E                     
  9566                           ; BSR set to: 2
  9567                           ;movement.c: 47:             reverse_square(mL,mR);
  9568  002F8E  C0E0  F026         	movff	action@mL,reverse_square@mL
  9569  002F92  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9570  002F96  C0E2  F028         	movff	action@mR,reverse_square@mR
  9571  002F9A  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9572  002F9E  EC3F  F02C         	call	_reverse_square	;wreg free
  9573                           
  9574                           ;movement.c: 48:             turnRight(mL,mR,90);
  9575  002FA2  C0E0  F020         	movff	action@mL,turnRight@mL
  9576  002FA6  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9577  002FAA  C0E2  F022         	movff	action@mR,turnRight@mR
  9578  002FAE  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9579  002FB2  0E5A               	movlw	90
  9580  002FB4  6E24               	movwf	turnRight@angle_right^0,c
  9581  002FB6  ECD6  F020         	call	_turnRight	;wreg free
  9582  002FBA                     
  9583                           ;movement.c: 49:             memory[array_index] = 4;
  9584  002FBA  0103               	movlb	3	; () banked
  9585  002FBC  516B               	movf	_array_index& (0+255),w,b
  9586  002FBE  0D02               	mullw	2
  9587  002FC0  0E3C               	movlw	low _memory
  9588  002FC2  24F3               	addwf	243,w,c
  9589  002FC4  6ED9               	movwf	fsr2l,c
  9590  002FC6  0E03               	movlw	high _memory
  9591  002FC8  20F4               	addwfc	prodh,w,c
  9592  002FCA  6EDA               	movwf	fsr2h,c
  9593  002FCC  0E04               	movlw	4
  9594  002FCE  6EDE               	movwf	postinc2,c
  9595  002FD0  0E00               	movlw	0
  9596  002FD2  6EDD               	movwf	postdec2,c
  9597  002FD4                     
  9598                           ; BSR set to: 3
  9599                           ;movement.c: 50:             array_index++;
  9600  002FD4  2B6B               	incf	_array_index& (0+255),f,b
  9601  002FD6                     l5512:
  9602                           
  9603                           ;movement.c: 52:         if (color == 5){
  9604  002FD6  0E05               	movlw	5
  9605  002FD8  0102               	movlb	2	; () banked
  9606  002FDA  19C8               	xorwf	action@color& (0+255),w,b
  9607  002FDC  A4D8               	btfss	status,2,c
  9608  002FDE  EFF3  F017         	goto	u5521
  9609  002FE2  EFF5  F017         	goto	u5520
  9610  002FE6                     u5521:
  9611  002FE6  EF19  F018         	goto	l5520
  9612  002FEA                     u5520:
  9613  002FEA                     
  9614                           ; BSR set to: 2
  9615                           ;movement.c: 53:             reverse_square(mL,mR);
  9616  002FEA  C0E0  F026         	movff	action@mL,reverse_square@mL
  9617  002FEE  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9618  002FF2  C0E2  F028         	movff	action@mR,reverse_square@mR
  9619  002FF6  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9620  002FFA  EC3F  F02C         	call	_reverse_square	;wreg free
  9621                           
  9622                           ;movement.c: 54:             turnLeft(mL,mR,90);
  9623  002FFE  C0E0  F020         	movff	action@mL,turnLeft@mL
  9624  003002  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9625  003006  C0E2  F022         	movff	action@mR,turnLeft@mR
  9626  00300A  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9627  00300E  0E5A               	movlw	90
  9628  003010  6E24               	movwf	turnLeft@angle_left^0,c
  9629  003012  EC9D  F021         	call	_turnLeft	;wreg free
  9630  003016                     
  9631                           ;movement.c: 55:             memory[array_index] = 5;
  9632  003016  0103               	movlb	3	; () banked
  9633  003018  516B               	movf	_array_index& (0+255),w,b
  9634  00301A  0D02               	mullw	2
  9635  00301C  0E3C               	movlw	low _memory
  9636  00301E  24F3               	addwf	243,w,c
  9637  003020  6ED9               	movwf	fsr2l,c
  9638  003022  0E03               	movlw	high _memory
  9639  003024  20F4               	addwfc	prodh,w,c
  9640  003026  6EDA               	movwf	fsr2h,c
  9641  003028  0E05               	movlw	5
  9642  00302A  6EDE               	movwf	postinc2,c
  9643  00302C  0E00               	movlw	0
  9644  00302E  6EDD               	movwf	postdec2,c
  9645  003030                     
  9646                           ; BSR set to: 3
  9647                           ;movement.c: 56:             array_index++;
  9648  003030  2B6B               	incf	_array_index& (0+255),f,b
  9649  003032                     l5520:
  9650                           
  9651                           ;movement.c: 58:         if (color == 6){
  9652  003032  0E06               	movlw	6
  9653  003034  0102               	movlb	2	; () banked
  9654  003036  19C8               	xorwf	action@color& (0+255),w,b
  9655  003038  A4D8               	btfss	status,2,c
  9656  00303A  EF21  F018         	goto	u5531
  9657  00303E  EF23  F018         	goto	u5530
  9658  003042                     u5531:
  9659  003042  EF47  F018         	goto	l5528
  9660  003046                     u5530:
  9661  003046                     
  9662                           ; BSR set to: 2
  9663                           ;movement.c: 59:             short_reverse(mL,mR);
  9664  003046  C0E0  F026         	movff	action@mL,short_reverse@mL
  9665  00304A  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9666  00304E  C0E2  F028         	movff	action@mR,short_reverse@mR
  9667  003052  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9668  003056  EC1F  F02C         	call	_short_reverse	;wreg free
  9669                           
  9670                           ;movement.c: 60:             turnRight(mL,mR,135);
  9671  00305A  C0E0  F020         	movff	action@mL,turnRight@mL
  9672  00305E  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9673  003062  C0E2  F022         	movff	action@mR,turnRight@mR
  9674  003066  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9675  00306A  0E87               	movlw	135
  9676  00306C  6E24               	movwf	turnRight@angle_right^0,c
  9677  00306E  ECD6  F020         	call	_turnRight	;wreg free
  9678  003072                     
  9679                           ;movement.c: 61:             memory[array_index] = 6;
  9680  003072  0103               	movlb	3	; () banked
  9681  003074  516B               	movf	_array_index& (0+255),w,b
  9682  003076  0D02               	mullw	2
  9683  003078  0E3C               	movlw	low _memory
  9684  00307A  24F3               	addwf	243,w,c
  9685  00307C  6ED9               	movwf	fsr2l,c
  9686  00307E  0E03               	movlw	high _memory
  9687  003080  20F4               	addwfc	prodh,w,c
  9688  003082  6EDA               	movwf	fsr2h,c
  9689  003084  0E06               	movlw	6
  9690  003086  6EDE               	movwf	postinc2,c
  9691  003088  0E00               	movlw	0
  9692  00308A  6EDD               	movwf	postdec2,c
  9693  00308C                     
  9694                           ; BSR set to: 3
  9695                           ;movement.c: 62:             array_index++;
  9696  00308C  2B6B               	incf	_array_index& (0+255),f,b
  9697  00308E                     l5528:
  9698                           
  9699                           ;movement.c: 64:         if (color == 7){
  9700  00308E  0E07               	movlw	7
  9701  003090  0102               	movlb	2	; () banked
  9702  003092  19C8               	xorwf	action@color& (0+255),w,b
  9703  003094  A4D8               	btfss	status,2,c
  9704  003096  EF4F  F018         	goto	u5541
  9705  00309A  EF51  F018         	goto	u5540
  9706  00309E                     u5541:
  9707  00309E  EF75  F018         	goto	l5536
  9708  0030A2                     u5540:
  9709  0030A2                     
  9710                           ; BSR set to: 2
  9711                           ;movement.c: 65:             short_reverse(mL,mR);
  9712  0030A2  C0E0  F026         	movff	action@mL,short_reverse@mL
  9713  0030A6  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9714  0030AA  C0E2  F028         	movff	action@mR,short_reverse@mR
  9715  0030AE  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9716  0030B2  EC1F  F02C         	call	_short_reverse	;wreg free
  9717                           
  9718                           ;movement.c: 66:             turnLeft(mL,mR,135);
  9719  0030B6  C0E0  F020         	movff	action@mL,turnLeft@mL
  9720  0030BA  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9721  0030BE  C0E2  F022         	movff	action@mR,turnLeft@mR
  9722  0030C2  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9723  0030C6  0E87               	movlw	135
  9724  0030C8  6E24               	movwf	turnLeft@angle_left^0,c
  9725  0030CA  EC9D  F021         	call	_turnLeft	;wreg free
  9726  0030CE                     
  9727                           ;movement.c: 67:             memory[array_index] = 7;
  9728  0030CE  0103               	movlb	3	; () banked
  9729  0030D0  516B               	movf	_array_index& (0+255),w,b
  9730  0030D2  0D02               	mullw	2
  9731  0030D4  0E3C               	movlw	low _memory
  9732  0030D6  24F3               	addwf	243,w,c
  9733  0030D8  6ED9               	movwf	fsr2l,c
  9734  0030DA  0E03               	movlw	high _memory
  9735  0030DC  20F4               	addwfc	prodh,w,c
  9736  0030DE  6EDA               	movwf	fsr2h,c
  9737  0030E0  0E07               	movlw	7
  9738  0030E2  6EDE               	movwf	postinc2,c
  9739  0030E4  0E00               	movlw	0
  9740  0030E6  6EDD               	movwf	postdec2,c
  9741  0030E8                     
  9742                           ; BSR set to: 3
  9743                           ;movement.c: 68:             array_index++;
  9744  0030E8  2B6B               	incf	_array_index& (0+255),f,b
  9745  0030EA                     l5536:
  9746                           
  9747                           ;movement.c: 70:         if (color == 8){
  9748  0030EA  0E08               	movlw	8
  9749  0030EC  0102               	movlb	2	; () banked
  9750  0030EE  19C8               	xorwf	action@color& (0+255),w,b
  9751  0030F0  A4D8               	btfss	status,2,c
  9752  0030F2  EF7D  F018         	goto	u5551
  9753  0030F6  EF7F  F018         	goto	u5550
  9754  0030FA                     u5551:
  9755  0030FA  EF98  F018         	goto	l641
  9756  0030FE                     u5550:
  9757  0030FE                     
  9758                           ; BSR set to: 2
  9759                           ;movement.c: 71:             toggle_light(2,1);
  9760  0030FE  0E01               	movlw	1
  9761  003100  6E01               	movwf	toggle_light@toggletime^0,c
  9762  003102  0E02               	movlw	2
  9763  003104  EC0E  F01A         	call	_toggle_light
  9764  003108                     
  9765                           ;movement.c: 72:             short_reverse(mL,mR);
  9766  003108  C0E0  F026         	movff	action@mL,short_reverse@mL
  9767  00310C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9768  003110  C0E2  F028         	movff	action@mR,short_reverse@mR
  9769  003114  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9770  003118  EC1F  F02C         	call	_short_reverse	;wreg free
  9771  00311C                     
  9772                           ;movement.c: 73:             goback(mL,mR);
  9773  00311C  C0E0  F058         	movff	action@mL,goback@mL
  9774  003120  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9775  003124  C0E2  F05A         	movff	action@mR,goback@mR
  9776  003128  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9777  00312C  EC5F  F015         	call	_goback	;wreg free
  9778  003130                     l641:
  9779  003130  0012               	return		;funcret
  9780  003132                     __end_of_action:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function _toggle_light *****************
  9784 ;; Defined at:
  9785 ;;		line 29 in file "color.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  lightnumber     1    wreg     unsigned char 
  9788 ;;  toggletime      1    0[COMRAM] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9791 ;;  i               1    3[COMRAM] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9804 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;Total ram usage:        5 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_calibrate_white
  9812 ;;		_detect_color
  9813 ;;		_amb_light_measure
  9814 ;;		_action
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text47
  9819  00341C                     __ptext47:
  9820                           	callstack 0
  9821  00341C                     _toggle_light:
  9822                           	callstack 27
  9823                           
  9824                           ;incstack = 0
  9825                           ;toggle_light@lightnumber stored from wreg
  9826  00341C  6E05               	movwf	toggle_light@lightnumber^0,c
  9827  00341E                     
  9828                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9829  00341E  0E00               	movlw	0
  9830  003420  6E04               	movwf	toggle_light@i^0,c
  9831                           
  9832                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9833  003422  0E00               	movlw	0
  9834  003424  6E04               	movwf	toggle_light@i^0,c
  9835  003426  EF5A  F01B         	goto	l74
  9836  00342A                     l4534:
  9837                           
  9838                           ;color.c: 34:         if (lightnumber == 1){
  9839  00342A  0405               	decf	toggle_light@lightnumber^0,w,c
  9840  00342C  A4D8               	btfss	status,2,c
  9841  00342E  EF1B  F01A         	goto	u4321
  9842  003432  EF1D  F01A         	goto	u4320
  9843  003436                     u4321:
  9844  003436  EF55  F01A         	goto	l4542
  9845  00343A                     u4320:
  9846  00343A                     
  9847                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9848  00343A  A280               	btfss	128,1,c	;volatile
  9849  00343C  EF22  F01A         	goto	u4331
  9850  003440  EF26  F01A         	goto	u4330
  9851  003444                     u4331:
  9852  003444  6A02               	clrf	??_toggle_light^0,c
  9853  003446  2A02               	incf	??_toggle_light^0,f,c
  9854  003448  EF27  F01A         	goto	u4348
  9855  00344C                     u4330:
  9856  00344C  6A02               	clrf	??_toggle_light^0,c
  9857  00344E                     u4348:
  9858  00344E  4602               	rlncf	??_toggle_light^0,f,c
  9859  003450  5080               	movf	128,w,c	;volatile
  9860  003452  1802               	xorwf	??_toggle_light^0,w,c
  9861  003454  0BFD               	andlw	-3
  9862  003456  1802               	xorwf	??_toggle_light^0,w,c
  9863  003458  6E80               	movwf	128,c	;volatile
  9864  00345A                     
  9865                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9866  00345A  0E29               	movlw	41
  9867  00345C  6E03               	movwf	(??_toggle_light+1)^0,c
  9868  00345E  0E96               	movlw	150
  9869  003460  6E02               	movwf	??_toggle_light^0,c
  9870  003462  0E7F               	movlw	127
  9871  003464                     u6017:
  9872  003464  2EE8               	decfsz	wreg,f,c
  9873  003466  D7FE               	bra	u6017
  9874  003468  2E02               	decfsz	??_toggle_light^0,f,c
  9875  00346A  D7FC               	bra	u6017
  9876  00346C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9877  00346E  D7FA               	bra	u6017
  9878  003470  F000               	nop	
  9879  003472                     
  9880                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9881  003472  A280               	btfss	128,1,c	;volatile
  9882  003474  EF3E  F01A         	goto	u4351
  9883  003478  EF42  F01A         	goto	u4350
  9884  00347C                     u4351:
  9885  00347C  6A02               	clrf	??_toggle_light^0,c
  9886  00347E  2A02               	incf	??_toggle_light^0,f,c
  9887  003480  EF43  F01A         	goto	u4368
  9888  003484                     u4350:
  9889  003484  6A02               	clrf	??_toggle_light^0,c
  9890  003486                     u4368:
  9891  003486  4602               	rlncf	??_toggle_light^0,f,c
  9892  003488  5080               	movf	128,w,c	;volatile
  9893  00348A  1802               	xorwf	??_toggle_light^0,w,c
  9894  00348C  0BFD               	andlw	-3
  9895  00348E  1802               	xorwf	??_toggle_light^0,w,c
  9896  003490  6E80               	movwf	128,c	;volatile
  9897                           
  9898                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9899  003492  0E29               	movlw	41
  9900  003494  6E03               	movwf	(??_toggle_light+1)^0,c
  9901  003496  0E96               	movlw	150
  9902  003498  6E02               	movwf	??_toggle_light^0,c
  9903  00349A  0E7F               	movlw	127
  9904  00349C                     u6027:
  9905  00349C  2EE8               	decfsz	wreg,f,c
  9906  00349E  D7FE               	bra	u6027
  9907  0034A0  2E02               	decfsz	??_toggle_light^0,f,c
  9908  0034A2  D7FC               	bra	u6027
  9909  0034A4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9910  0034A6  D7FA               	bra	u6027
  9911  0034A8  F000               	nop	
  9912  0034AA                     l4542:
  9913                           
  9914                           ;color.c: 40:         if (lightnumber == 2){
  9915  0034AA  0E02               	movlw	2
  9916  0034AC  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9917  0034AE  A4D8               	btfss	status,2,c
  9918  0034B0  EF5C  F01A         	goto	u4371
  9919  0034B4  EF5E  F01A         	goto	u4370
  9920  0034B8                     u4371:
  9921  0034B8  EF96  F01A         	goto	l4550
  9922  0034BC                     u4370:
  9923  0034BC                     
  9924                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9925  0034BC  A87C               	btfss	124,4,c	;volatile
  9926  0034BE  EF63  F01A         	goto	u4381
  9927  0034C2  EF67  F01A         	goto	u4380
  9928  0034C6                     u4381:
  9929  0034C6  6A02               	clrf	??_toggle_light^0,c
  9930  0034C8  2A02               	incf	??_toggle_light^0,f,c
  9931  0034CA  EF68  F01A         	goto	u4398
  9932  0034CE                     u4380:
  9933  0034CE  6A02               	clrf	??_toggle_light^0,c
  9934  0034D0                     u4398:
  9935  0034D0  3A02               	swapf	??_toggle_light^0,f,c
  9936  0034D2  507C               	movf	124,w,c	;volatile
  9937  0034D4  1802               	xorwf	??_toggle_light^0,w,c
  9938  0034D6  0BEF               	andlw	-17
  9939  0034D8  1802               	xorwf	??_toggle_light^0,w,c
  9940  0034DA  6E7C               	movwf	124,c	;volatile
  9941  0034DC                     
  9942                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9943  0034DC  0E29               	movlw	41
  9944  0034DE  6E03               	movwf	(??_toggle_light+1)^0,c
  9945  0034E0  0E96               	movlw	150
  9946  0034E2  6E02               	movwf	??_toggle_light^0,c
  9947  0034E4  0E7F               	movlw	127
  9948  0034E6                     u6037:
  9949  0034E6  2EE8               	decfsz	wreg,f,c
  9950  0034E8  D7FE               	bra	u6037
  9951  0034EA  2E02               	decfsz	??_toggle_light^0,f,c
  9952  0034EC  D7FC               	bra	u6037
  9953  0034EE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9954  0034F0  D7FA               	bra	u6037
  9955  0034F2  F000               	nop	
  9956  0034F4                     
  9957                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9958  0034F4  A87C               	btfss	124,4,c	;volatile
  9959  0034F6  EF7F  F01A         	goto	u4401
  9960  0034FA  EF83  F01A         	goto	u4400
  9961  0034FE                     u4401:
  9962  0034FE  6A02               	clrf	??_toggle_light^0,c
  9963  003500  2A02               	incf	??_toggle_light^0,f,c
  9964  003502  EF84  F01A         	goto	u4418
  9965  003506                     u4400:
  9966  003506  6A02               	clrf	??_toggle_light^0,c
  9967  003508                     u4418:
  9968  003508  3A02               	swapf	??_toggle_light^0,f,c
  9969  00350A  507C               	movf	124,w,c	;volatile
  9970  00350C  1802               	xorwf	??_toggle_light^0,w,c
  9971  00350E  0BEF               	andlw	-17
  9972  003510  1802               	xorwf	??_toggle_light^0,w,c
  9973  003512  6E7C               	movwf	124,c	;volatile
  9974                           
  9975                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9976  003514  0E29               	movlw	41
  9977  003516  6E03               	movwf	(??_toggle_light+1)^0,c
  9978  003518  0E96               	movlw	150
  9979  00351A  6E02               	movwf	??_toggle_light^0,c
  9980  00351C  0E7F               	movlw	127
  9981  00351E                     u6047:
  9982  00351E  2EE8               	decfsz	wreg,f,c
  9983  003520  D7FE               	bra	u6047
  9984  003522  2E02               	decfsz	??_toggle_light^0,f,c
  9985  003524  D7FC               	bra	u6047
  9986  003526  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9987  003528  D7FA               	bra	u6047
  9988  00352A  F000               	nop	
  9989  00352C                     l4550:
  9990                           
  9991                           ;color.c: 46:         if (lightnumber == 3){
  9992  00352C  0E03               	movlw	3
  9993  00352E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9994  003530  A4D8               	btfss	status,2,c
  9995  003532  EF9D  F01A         	goto	u4421
  9996  003536  EF9F  F01A         	goto	u4420
  9997  00353A                     u4421:
  9998  00353A  EFDB  F01A         	goto	l4558
  9999  00353E                     u4420:
 10000  00353E                     
 10001                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
 10002  00353E  A67C               	btfss	124,3,c	;volatile
 10003  003540  EFA4  F01A         	goto	u4431
 10004  003544  EFA8  F01A         	goto	u4430
 10005  003548                     u4431:
 10006  003548  6A02               	clrf	??_toggle_light^0,c
 10007  00354A  2A02               	incf	??_toggle_light^0,f,c
 10008  00354C  EFA9  F01A         	goto	u4448
 10009  003550                     u4430:
 10010  003550  6A02               	clrf	??_toggle_light^0,c
 10011  003552                     u4448:
 10012  003552  4602               	rlncf	??_toggle_light^0,f,c
 10013  003554  4602               	rlncf	??_toggle_light^0,f,c
 10014  003556  4602               	rlncf	??_toggle_light^0,f,c
 10015  003558  507C               	movf	124,w,c	;volatile
 10016  00355A  1802               	xorwf	??_toggle_light^0,w,c
 10017  00355C  0BF7               	andlw	-9
 10018  00355E  1802               	xorwf	??_toggle_light^0,w,c
 10019  003560  6E7C               	movwf	124,c	;volatile
 10020  003562                     
 10021                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10022  003562  0E29               	movlw	41
 10023  003564  6E03               	movwf	(??_toggle_light+1)^0,c
 10024  003566  0E96               	movlw	150
 10025  003568  6E02               	movwf	??_toggle_light^0,c
 10026  00356A  0E7F               	movlw	127
 10027  00356C                     u6057:
 10028  00356C  2EE8               	decfsz	wreg,f,c
 10029  00356E  D7FE               	bra	u6057
 10030  003570  2E02               	decfsz	??_toggle_light^0,f,c
 10031  003572  D7FC               	bra	u6057
 10032  003574  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10033  003576  D7FA               	bra	u6057
 10034  003578  F000               	nop	
 10035  00357A                     
 10036                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 10037  00357A  A67C               	btfss	124,3,c	;volatile
 10038  00357C  EFC2  F01A         	goto	u4451
 10039  003580  EFC6  F01A         	goto	u4450
 10040  003584                     u4451:
 10041  003584  6A02               	clrf	??_toggle_light^0,c
 10042  003586  2A02               	incf	??_toggle_light^0,f,c
 10043  003588  EFC7  F01A         	goto	u4468
 10044  00358C                     u4450:
 10045  00358C  6A02               	clrf	??_toggle_light^0,c
 10046  00358E                     u4468:
 10047  00358E  4602               	rlncf	??_toggle_light^0,f,c
 10048  003590  4602               	rlncf	??_toggle_light^0,f,c
 10049  003592  4602               	rlncf	??_toggle_light^0,f,c
 10050  003594  507C               	movf	124,w,c	;volatile
 10051  003596  1802               	xorwf	??_toggle_light^0,w,c
 10052  003598  0BF7               	andlw	-9
 10053  00359A  1802               	xorwf	??_toggle_light^0,w,c
 10054  00359C  6E7C               	movwf	124,c	;volatile
 10055                           
 10056                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10057  00359E  0E29               	movlw	41
 10058  0035A0  6E03               	movwf	(??_toggle_light+1)^0,c
 10059  0035A2  0E96               	movlw	150
 10060  0035A4  6E02               	movwf	??_toggle_light^0,c
 10061  0035A6  0E7F               	movlw	127
 10062  0035A8                     u6067:
 10063  0035A8  2EE8               	decfsz	wreg,f,c
 10064  0035AA  D7FE               	bra	u6067
 10065  0035AC  2E02               	decfsz	??_toggle_light^0,f,c
 10066  0035AE  D7FC               	bra	u6067
 10067  0035B0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10068  0035B2  D7FA               	bra	u6067
 10069  0035B4  F000               	nop	
 10070  0035B6                     l4558:
 10071                           
 10072                           ;color.c: 52:         if (lightnumber == 4){
 10073  0035B6  0E04               	movlw	4
 10074  0035B8  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10075  0035BA  A4D8               	btfss	status,2,c
 10076  0035BC  EFE2  F01A         	goto	u4471
 10077  0035C0  EFE4  F01A         	goto	u4470
 10078  0035C4                     u4471:
 10079  0035C4  EF1A  F01B         	goto	l4566
 10080  0035C8                     u4470:
 10081  0035C8                     
 10082                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 10083  0035C8  A07E               	btfss	126,0,c	;volatile
 10084  0035CA  EFE9  F01A         	goto	u4481
 10085  0035CE  EFED  F01A         	goto	u4480
 10086  0035D2                     u4481:
 10087  0035D2  6A02               	clrf	??_toggle_light^0,c
 10088  0035D4  2A02               	incf	??_toggle_light^0,f,c
 10089  0035D6  EFEE  F01A         	goto	u4498
 10090  0035DA                     u4480:
 10091  0035DA  6A02               	clrf	??_toggle_light^0,c
 10092  0035DC                     u4498:
 10093  0035DC  507E               	movf	126,w,c	;volatile
 10094  0035DE  1802               	xorwf	??_toggle_light^0,w,c
 10095  0035E0  0BFE               	andlw	-2
 10096  0035E2  1802               	xorwf	??_toggle_light^0,w,c
 10097  0035E4  6E7E               	movwf	126,c	;volatile
 10098  0035E6                     
 10099                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10100  0035E6  0E29               	movlw	41
 10101  0035E8  6E03               	movwf	(??_toggle_light+1)^0,c
 10102  0035EA  0E96               	movlw	150
 10103  0035EC  6E02               	movwf	??_toggle_light^0,c
 10104  0035EE  0E7F               	movlw	127
 10105  0035F0                     u6077:
 10106  0035F0  2EE8               	decfsz	wreg,f,c
 10107  0035F2  D7FE               	bra	u6077
 10108  0035F4  2E02               	decfsz	??_toggle_light^0,f,c
 10109  0035F6  D7FC               	bra	u6077
 10110  0035F8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10111  0035FA  D7FA               	bra	u6077
 10112  0035FC  F000               	nop	
 10113  0035FE                     
 10114                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 10115  0035FE  A07E               	btfss	126,0,c	;volatile
 10116  003600  EF04  F01B         	goto	u4501
 10117  003604  EF08  F01B         	goto	u4500
 10118  003608                     u4501:
 10119  003608  6A02               	clrf	??_toggle_light^0,c
 10120  00360A  2A02               	incf	??_toggle_light^0,f,c
 10121  00360C  EF09  F01B         	goto	u4518
 10122  003610                     u4500:
 10123  003610  6A02               	clrf	??_toggle_light^0,c
 10124  003612                     u4518:
 10125  003612  507E               	movf	126,w,c	;volatile
 10126  003614  1802               	xorwf	??_toggle_light^0,w,c
 10127  003616  0BFE               	andlw	-2
 10128  003618  1802               	xorwf	??_toggle_light^0,w,c
 10129  00361A  6E7E               	movwf	126,c	;volatile
 10130                           
 10131                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10132  00361C  0E29               	movlw	41
 10133  00361E  6E03               	movwf	(??_toggle_light+1)^0,c
 10134  003620  0E96               	movlw	150
 10135  003622  6E02               	movwf	??_toggle_light^0,c
 10136  003624  0E7F               	movlw	127
 10137  003626                     u6087:
 10138  003626  2EE8               	decfsz	wreg,f,c
 10139  003628  D7FE               	bra	u6087
 10140  00362A  2E02               	decfsz	??_toggle_light^0,f,c
 10141  00362C  D7FC               	bra	u6087
 10142  00362E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10143  003630  D7FA               	bra	u6087
 10144  003632  F000               	nop	
 10145  003634                     l4566:
 10146                           
 10147                           ;color.c: 58:         if (lightnumber == 3){
 10148  003634  0E03               	movlw	3
 10149  003636  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10150  003638  A4D8               	btfss	status,2,c
 10151  00363A  EF21  F01B         	goto	u4521
 10152  00363E  EF23  F01B         	goto	u4520
 10153  003642                     u4521:
 10154  003642  EF59  F01B         	goto	l4574
 10155  003646                     u4520:
 10156  003646                     
 10157                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 10158  003646  A080               	btfss	128,0,c	;volatile
 10159  003648  EF28  F01B         	goto	u4531
 10160  00364C  EF2C  F01B         	goto	u4530
 10161  003650                     u4531:
 10162  003650  6A02               	clrf	??_toggle_light^0,c
 10163  003652  2A02               	incf	??_toggle_light^0,f,c
 10164  003654  EF2D  F01B         	goto	u4548
 10165  003658                     u4530:
 10166  003658  6A02               	clrf	??_toggle_light^0,c
 10167  00365A                     u4548:
 10168  00365A  5080               	movf	128,w,c	;volatile
 10169  00365C  1802               	xorwf	??_toggle_light^0,w,c
 10170  00365E  0BFE               	andlw	-2
 10171  003660  1802               	xorwf	??_toggle_light^0,w,c
 10172  003662  6E80               	movwf	128,c	;volatile
 10173  003664                     
 10174                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10175  003664  0E29               	movlw	41
 10176  003666  6E03               	movwf	(??_toggle_light+1)^0,c
 10177  003668  0E96               	movlw	150
 10178  00366A  6E02               	movwf	??_toggle_light^0,c
 10179  00366C  0E7F               	movlw	127
 10180  00366E                     u6097:
 10181  00366E  2EE8               	decfsz	wreg,f,c
 10182  003670  D7FE               	bra	u6097
 10183  003672  2E02               	decfsz	??_toggle_light^0,f,c
 10184  003674  D7FC               	bra	u6097
 10185  003676  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10186  003678  D7FA               	bra	u6097
 10187  00367A  F000               	nop	
 10188  00367C                     
 10189                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 10190  00367C  A080               	btfss	128,0,c	;volatile
 10191  00367E  EF43  F01B         	goto	u4551
 10192  003682  EF47  F01B         	goto	u4550
 10193  003686                     u4551:
 10194  003686  6A02               	clrf	??_toggle_light^0,c
 10195  003688  2A02               	incf	??_toggle_light^0,f,c
 10196  00368A  EF48  F01B         	goto	u4568
 10197  00368E                     u4550:
 10198  00368E  6A02               	clrf	??_toggle_light^0,c
 10199  003690                     u4568:
 10200  003690  5080               	movf	128,w,c	;volatile
 10201  003692  1802               	xorwf	??_toggle_light^0,w,c
 10202  003694  0BFE               	andlw	-2
 10203  003696  1802               	xorwf	??_toggle_light^0,w,c
 10204  003698  6E80               	movwf	128,c	;volatile
 10205                           
 10206                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10207  00369A  0E29               	movlw	41
 10208  00369C  6E03               	movwf	(??_toggle_light+1)^0,c
 10209  00369E  0E96               	movlw	150
 10210  0036A0  6E02               	movwf	??_toggle_light^0,c
 10211  0036A2  0E7F               	movlw	127
 10212  0036A4                     u6107:
 10213  0036A4  2EE8               	decfsz	wreg,f,c
 10214  0036A6  D7FE               	bra	u6107
 10215  0036A8  2E02               	decfsz	??_toggle_light^0,f,c
 10216  0036AA  D7FC               	bra	u6107
 10217  0036AC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10218  0036AE  D7FA               	bra	u6107
 10219  0036B0  F000               	nop	
 10220  0036B2                     l4574:
 10221                           
 10222                           ;color.c: 64:     }
 10223  0036B2  2A04               	incf	toggle_light@i^0,f,c
 10224  0036B4                     l74:
 10225  0036B4  5001               	movf	toggle_light@toggletime^0,w,c
 10226  0036B6  5C04               	subwf	toggle_light@i^0,w,c
 10227  0036B8  A0D8               	btfss	status,0,c
 10228  0036BA  EF61  F01B         	goto	u4571
 10229  0036BE  EF63  F01B         	goto	u4570
 10230  0036C2                     u4571:
 10231  0036C2  EF15  F01A         	goto	l4534
 10232  0036C6                     u4570:
 10233  0036C6  0012               	return		;funcret
 10234  0036C8                     __end_of_toggle_light:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _short_reverse *****************
 10238 ;; Defined at:
 10239 ;;		line 199 in file "dc_motor.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10242 ;;		 -> main@motorL(10), 
 10243 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10244 ;;		 -> main@motorR(10), 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      void 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10260 ;;Total ram usage:        6 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; Hardware stack levels required when called: 5
 10263 ;; This function calls:
 10264 ;;		_fullSpeedBack
 10265 ;;		_stop
 10266 ;; This function is called by:
 10267 ;;		_action
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text48
 10272  00583E                     __ptext48:
 10273                           	callstack 0
 10274  00583E                     _short_reverse:
 10275                           	callstack 24
 10276  00583E                     
 10277                           ;dc_motor.c: 199: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 200: { fullSpeedBack(mL, mR);
 10278  00583E  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10279  005842  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10280  005846  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10281  00584A  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10282  00584E  EC8F  F028         	call	_fullSpeedBack	;wreg free
 10283  005852                     
 10284                           ;dc_motor.c: 201:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10285  005852  0E19               	movlw	25
 10286  005854  6E2B               	movwf	(??_short_reverse+1)^0,c
 10287  005856  0E5A               	movlw	90
 10288  005858  6E2A               	movwf	??_short_reverse^0,c
 10289  00585A  0EB2               	movlw	178
 10290  00585C                     u6117:
 10291  00585C  2EE8               	decfsz	wreg,f,c
 10292  00585E  D7FE               	bra	u6117
 10293  005860  2E2A               	decfsz	??_short_reverse^0,f,c
 10294  005862  D7FC               	bra	u6117
 10295  005864  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10296  005866  D7FA               	bra	u6117
 10297  005868                     
 10298                           ;dc_motor.c: 202:     stop(mL,mR);
 10299  005868  C026  F01A         	movff	short_reverse@mL,stop@mL
 10300  00586C  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10301  005870  C028  F01C         	movff	short_reverse@mR,stop@mR
 10302  005874  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10303  005878  ECEF  F028         	call	_stop	;wreg free
 10304  00587C  0012               	return		;funcret
 10305  00587E                     __end_of_short_reverse:
 10306                           	callstack 0
 10307                           
 10308 ;; *************** function _goback *****************
 10309 ;; Defined at:
 10310 ;;		line 123 in file "movement.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;  mL              2   87[COMRAM] PTR struct DC_motor
 10313 ;;		 -> main@motorL(10), 
 10314 ;;  mR              2   89[COMRAM] PTR struct DC_motor
 10315 ;;		 -> main@motorR(10), 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  i               2  126[BANK0 ] unsigned int 
 10318 ;;  buf3          100  100[BANK1 ] unsigned char [100]
 10319 ;;  buf2          100    0[BANK2 ] unsigned char [100]
 10320 ;;  buf           100    0[BANK1 ] unsigned char [100]
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10331 ;;      Locals:         0       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10333 ;;      Totals:         6       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;Total ram usage:      308 bytes
 10335 ;; Hardware stack levels used: 1
 10336 ;; Hardware stack levels required when called: 10
 10337 ;; This function calls:
 10338 ;;		_color_predict
 10339 ;;		_fullSpeedAhead
 10340 ;;		_reverse_square
 10341 ;;		_sendStringSerial4
 10342 ;;		_sprintf
 10343 ;;		_stop
 10344 ;;		_turnLeft
 10345 ;;		_turnRight
 10346 ;; This function is called by:
 10347 ;;		_action
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text49
 10352  002ABE                     __ptext49:
 10353                           	callstack 0
 10354  002ABE                     _goback:
 10355                           	callstack 19
 10356  002ABE                     
 10357                           ;movement.c: 123: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 124:
      +                           { turnRight(mL,mR,180);
 10358  002ABE  C058  F020         	movff	goback@mL,turnRight@mL
 10359  002AC2  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10360  002AC6  C05A  F022         	movff	goback@mR,turnRight@mR
 10361  002ACA  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10362  002ACE  0EB4               	movlw	180
 10363  002AD0  6E24               	movwf	turnRight@angle_right^0,c
 10364  002AD2  ECD6  F020         	call	_turnRight	;wreg free
 10365  002AD6                     
 10366                           ;movement.c: 125:     array_index--;
 10367  002AD6  0103               	movlb	3	; () banked
 10368  002AD8  076B               	decf	_array_index& (0+255),f,b
 10369  002ADA                     
 10370                           ; BSR set to: 3
 10371                           ;movement.c: 126:     char buf[100];;movement.c: 127:     sprintf(buf,"go back\r\n");
 10372  002ADA  0E00               	movlw	low goback@buf
 10373  002ADC  0100               	movlb	0	; () banked
 10374  002ADE  6F60               	movwf	sprintf@s& (0+255),b
 10375  002AE0  0E01               	movlw	high goback@buf
 10376  002AE2  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10377  002AE4  0E31               	movlw	low STR_4
 10378  002AE6  6F62               	movwf	sprintf@fmt& (0+255),b
 10379  002AE8  0E0E               	movlw	high STR_4
 10380  002AEA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10381  002AEC  ECCF  F02A         	call	_sprintf	;wreg free
 10382  002AF0                     
 10383                           ;movement.c: 128:     sendStringSerial4(buf);
 10384  002AF0  0E00               	movlw	low goback@buf
 10385  002AF2  6E02               	movwf	sendStringSerial4@string^0,c
 10386  002AF4  0E01               	movlw	high goback@buf
 10387  002AF6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10388  002AF8  EC0A  F02D         	call	_sendStringSerial4	;wreg free
 10389  002AFC                     l5254:
 10390                           
 10391                           ;movement.c: 130:         char buf3[100];;movement.c: 131:         sprintf(buf3,"repeat\
      +                          r\n");
 10392  002AFC  0E64               	movlw	low goback@buf3
 10393  002AFE  0100               	movlb	0	; () banked
 10394  002B00  6F60               	movwf	sprintf@s& (0+255),b
 10395  002B02  0E01               	movlw	high goback@buf3
 10396  002B04  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10397  002B06  0E3B               	movlw	low STR_5
 10398  002B08  6F62               	movwf	sprintf@fmt& (0+255),b
 10399  002B0A  0E0E               	movlw	high STR_5
 10400  002B0C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10401  002B0E  ECCF  F02A         	call	_sprintf	;wreg free
 10402  002B12                     
 10403                           ;movement.c: 132:         sendStringSerial4(buf3);
 10404  002B12  0E64               	movlw	low goback@buf3
 10405  002B14  6E02               	movwf	sendStringSerial4@string^0,c
 10406  002B16  0E01               	movlw	high goback@buf3
 10407  002B18  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10408  002B1A  EC0A  F02D         	call	_sendStringSerial4	;wreg free
 10409  002B1E                     
 10410                           ;movement.c: 133:         color_predict(array_index);
 10411  002B1E  0103               	movlb	3	; () banked
 10412  002B20  516B               	movf	_array_index& (0+255),w,b
 10413  002B22  EC22  F02D         	call	_color_predict
 10414  002B26                     
 10415                           ;movement.c: 134:         color_predict(memory[array_index]);
 10416  002B26  0103               	movlb	3	; () banked
 10417  002B28  516B               	movf	_array_index& (0+255),w,b
 10418  002B2A  0D02               	mullw	2
 10419  002B2C  0E3C               	movlw	low _memory
 10420  002B2E  24F3               	addwf	243,w,c
 10421  002B30  6ED9               	movwf	fsr2l,c
 10422  002B32  0E03               	movlw	high _memory
 10423  002B34  20F4               	addwfc	prodh,w,c
 10424  002B36  6EDA               	movwf	fsr2h,c
 10425  002B38  50DF               	movf	indf2,w,c
 10426  002B3A  EC22  F02D         	call	_color_predict
 10427  002B3E                     
 10428                           ;movement.c: 135:         color_predict(200);
 10429  002B3E  0EC8               	movlw	200
 10430  002B40  EC22  F02D         	call	_color_predict
 10431  002B44                     
 10432                           ;movement.c: 136:         fullSpeedAhead(mL,mR);
 10433  002B44  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10434  002B48  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10435  002B4C  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10436  002B50  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10437  002B54  EC4D  F029         	call	_fullSpeedAhead	;wreg free
 10438  002B58                     
 10439                           ;movement.c: 137:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10440  002B58  0E00               	movlw	0
 10441  002B5A  0100               	movlb	0	; () banked
 10442  002B5C  6FDF               	movwf	(goback@i+1)& (0+255),b
 10443  002B5E  0E00               	movlw	0
 10444  002B60  6FDE               	movwf	goback@i& (0+255),b
 10445  002B62  EFC2  F015         	goto	l5272
 10446  002B66                     l5268:
 10447                           
 10448                           ; BSR set to: 0
 10449  002B66  0E52               	movlw	82
 10450  002B68  6E5D               	movwf	(??_goback+1)^0,c
 10451  002B6A  0E2B               	movlw	43
 10452  002B6C  6E5C               	movwf	??_goback^0,c
 10453  002B6E  0E00               	movlw	0
 10454  002B70                     u6127:
 10455  002B70  2EE8               	decfsz	wreg,f,c
 10456  002B72  D7FE               	bra	u6127
 10457  002B74  2E5C               	decfsz	??_goback^0,f,c
 10458  002B76  D7FC               	bra	u6127
 10459  002B78  2E5D               	decfsz	(??_goback+1)^0,f,c
 10460  002B7A  D7FA               	bra	u6127
 10461  002B7C  D000               	nop2	
 10462  002B7E  0100               	movlb	0	; () banked
 10463  002B80  4BDE               	infsnz	goback@i& (0+255),f,b
 10464  002B82  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10465  002B84                     l5272:
 10466                           
 10467                           ; BSR set to: 0
 10468  002B84  0103               	movlb	3	; () banked
 10469  002B86  516B               	movf	_array_index& (0+255),w,b
 10470  002B88  0D02               	mullw	2
 10471  002B8A  0E3C               	movlw	low _memory
 10472  002B8C  24F3               	addwf	243,w,c
 10473  002B8E  6ED9               	movwf	fsr2l,c
 10474  002B90  0E03               	movlw	high _memory
 10475  002B92  20F4               	addwfc	prodh,w,c
 10476  002B94  6EDA               	movwf	fsr2h,c
 10477  002B96  50DE               	movf	postinc2,w,c
 10478  002B98  0100               	movlb	0	; () banked
 10479  002B9A  5DDE               	subwf	goback@i& (0+255),w,b
 10480  002B9C  50DE               	movf	postinc2,w,c
 10481  002B9E  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10482  002BA0  A0D8               	btfss	status,0,c
 10483  002BA2  EFD5  F015         	goto	u5271
 10484  002BA6  EFD7  F015         	goto	u5270
 10485  002BAA                     u5271:
 10486  002BAA  EFB3  F015         	goto	l5268
 10487  002BAE                     u5270:
 10488  002BAE                     
 10489                           ; BSR set to: 0
 10490                           ;movement.c: 138:         stop(mL,mR);
 10491  002BAE  C058  F01A         	movff	goback@mL,stop@mL
 10492  002BB2  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10493  002BB6  C05A  F01C         	movff	goback@mR,stop@mR
 10494  002BBA  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10495  002BBE  ECEF  F028         	call	_stop	;wreg free
 10496  002BC2                     
 10497                           ;movement.c: 139:         if (array_index == 0){break;}
 10498  002BC2  0103               	movlb	3	; () banked
 10499  002BC4  516B               	movf	_array_index& (0+255),w,b
 10500  002BC6  A4D8               	btfss	status,2,c
 10501  002BC8  EFE8  F015         	goto	u5281
 10502  002BCC  EFEA  F015         	goto	u5280
 10503  002BD0                     u5281:
 10504  002BD0  EFEC  F015         	goto	l5280
 10505  002BD4                     u5280:
 10506  002BD4  EFF7  F016         	goto	l5330
 10507  002BD8                     l5280:
 10508                           
 10509                           ; BSR set to: 3
 10510                           ;movement.c: 140:         array_index--;
 10511  002BD8  076B               	decf	_array_index& (0+255),f,b
 10512  002BDA                     
 10513                           ; BSR set to: 3
 10514                           ;movement.c: 141:         color_predict(array_index);
 10515  002BDA  516B               	movf	_array_index& (0+255),w,b
 10516  002BDC  EC22  F02D         	call	_color_predict
 10517  002BE0                     
 10518                           ;movement.c: 142:         color_predict(memory[array_index]);
 10519  002BE0  0103               	movlb	3	; () banked
 10520  002BE2  516B               	movf	_array_index& (0+255),w,b
 10521  002BE4  0D02               	mullw	2
 10522  002BE6  0E3C               	movlw	low _memory
 10523  002BE8  24F3               	addwf	243,w,c
 10524  002BEA  6ED9               	movwf	fsr2l,c
 10525  002BEC  0E03               	movlw	high _memory
 10526  002BEE  20F4               	addwfc	prodh,w,c
 10527  002BF0  6EDA               	movwf	fsr2h,c
 10528  002BF2  50DF               	movf	indf2,w,c
 10529  002BF4  EC22  F02D         	call	_color_predict
 10530  002BF8                     
 10531                           ;movement.c: 143:         color_predict(200);
 10532  002BF8  0EC8               	movlw	200
 10533  002BFA  EC22  F02D         	call	_color_predict
 10534  002BFE                     
 10535                           ;movement.c: 144:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10536  002BFE  0103               	movlb	3	; () banked
 10537  002C00  516B               	movf	_array_index& (0+255),w,b
 10538  002C02  0D02               	mullw	2
 10539  002C04  0E3C               	movlw	low _memory
 10540  002C06  24F3               	addwf	243,w,c
 10541  002C08  6ED9               	movwf	fsr2l,c
 10542  002C0A  0E03               	movlw	high _memory
 10543  002C0C  20F4               	addwfc	prodh,w,c
 10544  002C0E  6EDA               	movwf	fsr2h,c
 10545  002C10  04DE               	decf	postinc2,w,c
 10546  002C12  10DE               	iorwf	postinc2,w,c
 10547  002C14  A4D8               	btfss	status,2,c
 10548  002C16  EF0F  F016         	goto	u5291
 10549  002C1A  EF11  F016         	goto	u5290
 10550  002C1E                     u5291:
 10551  002C1E  EF21  F016         	goto	l5294
 10552  002C22                     u5290:
 10553  002C22                     
 10554                           ; BSR set to: 3
 10555  002C22  C058  F020         	movff	goback@mL,turnLeft@mL
 10556  002C26  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10557  002C2A  C05A  F022         	movff	goback@mR,turnLeft@mR
 10558  002C2E  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10559  002C32  0E5A               	movlw	90
 10560  002C34  6E24               	movwf	turnLeft@angle_left^0,c
 10561  002C36  EC9D  F021         	call	_turnLeft	;wreg free
 10562  002C3A                     l5292:
 10563  002C3A  0103               	movlb	3	; () banked
 10564  002C3C  076B               	decf	_array_index& (0+255),f,b
 10565  002C3E  EF7E  F015         	goto	l5254
 10566  002C42                     l5294:
 10567                           
 10568                           ; BSR set to: 3
 10569  002C42  516B               	movf	_array_index& (0+255),w,b
 10570  002C44  0D02               	mullw	2
 10571  002C46  0E3C               	movlw	low _memory
 10572  002C48  24F3               	addwf	243,w,c
 10573  002C4A  6ED9               	movwf	fsr2l,c
 10574  002C4C  0E03               	movlw	high _memory
 10575  002C4E  20F4               	addwfc	prodh,w,c
 10576  002C50  6EDA               	movwf	fsr2h,c
 10577  002C52  0E02               	movlw	2
 10578  002C54  18DE               	xorwf	postinc2,w,c
 10579  002C56  10DE               	iorwf	postinc2,w,c
 10580  002C58  A4D8               	btfss	status,2,c
 10581  002C5A  EF31  F016         	goto	u5301
 10582  002C5E  EF33  F016         	goto	u5300
 10583  002C62                     u5301:
 10584  002C62  EF41  F016         	goto	l5300
 10585  002C66                     u5300:
 10586  002C66                     
 10587                           ; BSR set to: 3
 10588  002C66  C058  F020         	movff	goback@mL,turnRight@mL
 10589  002C6A  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10590  002C6E  C05A  F022         	movff	goback@mR,turnRight@mR
 10591  002C72  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10592  002C76  0E5A               	movlw	90
 10593  002C78  6E24               	movwf	turnRight@angle_right^0,c
 10594  002C7A  ECD6  F020         	call	_turnRight	;wreg free
 10595  002C7E  EF1D  F016         	goto	l5292
 10596  002C82                     l5300:
 10597                           
 10598                           ; BSR set to: 3
 10599  002C82  516B               	movf	_array_index& (0+255),w,b
 10600  002C84  0D02               	mullw	2
 10601  002C86  0E3C               	movlw	low _memory
 10602  002C88  24F3               	addwf	243,w,c
 10603  002C8A  6ED9               	movwf	fsr2l,c
 10604  002C8C  0E03               	movlw	high _memory
 10605  002C8E  20F4               	addwfc	prodh,w,c
 10606  002C90  6EDA               	movwf	fsr2h,c
 10607  002C92  0E03               	movlw	3
 10608  002C94  18DE               	xorwf	postinc2,w,c
 10609  002C96  10DE               	iorwf	postinc2,w,c
 10610  002C98  A4D8               	btfss	status,2,c
 10611  002C9A  EF51  F016         	goto	u5311
 10612  002C9E  EF53  F016         	goto	u5310
 10613  002CA2                     u5311:
 10614  002CA2  EF61  F016         	goto	l5306
 10615  002CA6                     u5310:
 10616  002CA6                     
 10617                           ; BSR set to: 3
 10618  002CA6  C058  F020         	movff	goback@mL,turnLeft@mL
 10619  002CAA  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10620  002CAE  C05A  F022         	movff	goback@mR,turnLeft@mR
 10621  002CB2  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10622  002CB6  0EB4               	movlw	180
 10623  002CB8  6E24               	movwf	turnLeft@angle_left^0,c
 10624  002CBA  EC9D  F021         	call	_turnLeft	;wreg free
 10625  002CBE  EF1D  F016         	goto	l5292
 10626  002CC2                     l5306:
 10627                           
 10628                           ; BSR set to: 3
 10629  002CC2  516B               	movf	_array_index& (0+255),w,b
 10630  002CC4  0D02               	mullw	2
 10631  002CC6  0E3C               	movlw	low _memory
 10632  002CC8  24F3               	addwf	243,w,c
 10633  002CCA  6ED9               	movwf	fsr2l,c
 10634  002CCC  0E03               	movlw	high _memory
 10635  002CCE  20F4               	addwfc	prodh,w,c
 10636  002CD0  6EDA               	movwf	fsr2h,c
 10637  002CD2  0E04               	movlw	4
 10638  002CD4  18DE               	xorwf	postinc2,w,c
 10639  002CD6  10DE               	iorwf	postinc2,w,c
 10640  002CD8  A4D8               	btfss	status,2,c
 10641  002CDA  EF71  F016         	goto	u5321
 10642  002CDE  EF73  F016         	goto	u5320
 10643  002CE2                     u5321:
 10644  002CE2  EF8B  F016         	goto	l5312
 10645  002CE6                     u5320:
 10646  002CE6                     
 10647                           ; BSR set to: 3
 10648  002CE6  C058  F026         	movff	goback@mL,reverse_square@mL
 10649  002CEA  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10650  002CEE  C05A  F028         	movff	goback@mR,reverse_square@mR
 10651  002CF2  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10652  002CF6  EC3F  F02C         	call	_reverse_square	;wreg free
 10653  002CFA  C058  F020         	movff	goback@mL,turnLeft@mL
 10654  002CFE  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10655  002D02  C05A  F022         	movff	goback@mR,turnLeft@mR
 10656  002D06  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10657  002D0A  0E5A               	movlw	90
 10658  002D0C  6E24               	movwf	turnLeft@angle_left^0,c
 10659  002D0E  EC9D  F021         	call	_turnLeft	;wreg free
 10660  002D12  EF1D  F016         	goto	l5292
 10661  002D16                     l5312:
 10662                           
 10663                           ; BSR set to: 3
 10664  002D16  516B               	movf	_array_index& (0+255),w,b
 10665  002D18  0D02               	mullw	2
 10666  002D1A  0E3C               	movlw	low _memory
 10667  002D1C  24F3               	addwf	243,w,c
 10668  002D1E  6ED9               	movwf	fsr2l,c
 10669  002D20  0E03               	movlw	high _memory
 10670  002D22  20F4               	addwfc	prodh,w,c
 10671  002D24  6EDA               	movwf	fsr2h,c
 10672  002D26  0E05               	movlw	5
 10673  002D28  18DE               	xorwf	postinc2,w,c
 10674  002D2A  10DE               	iorwf	postinc2,w,c
 10675  002D2C  A4D8               	btfss	status,2,c
 10676  002D2E  EF9B  F016         	goto	u5331
 10677  002D32  EF9D  F016         	goto	u5330
 10678  002D36                     u5331:
 10679  002D36  EFB5  F016         	goto	l5318
 10680  002D3A                     u5330:
 10681  002D3A                     
 10682                           ; BSR set to: 3
 10683  002D3A  C058  F026         	movff	goback@mL,reverse_square@mL
 10684  002D3E  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10685  002D42  C05A  F028         	movff	goback@mR,reverse_square@mR
 10686  002D46  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10687  002D4A  EC3F  F02C         	call	_reverse_square	;wreg free
 10688  002D4E  C058  F020         	movff	goback@mL,turnRight@mL
 10689  002D52  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10690  002D56  C05A  F022         	movff	goback@mR,turnRight@mR
 10691  002D5A  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10692  002D5E  0E5A               	movlw	90
 10693  002D60  6E24               	movwf	turnRight@angle_right^0,c
 10694  002D62  ECD6  F020         	call	_turnRight	;wreg free
 10695  002D66  EF1D  F016         	goto	l5292
 10696  002D6A                     l5318:
 10697                           
 10698                           ; BSR set to: 3
 10699  002D6A  516B               	movf	_array_index& (0+255),w,b
 10700  002D6C  0D02               	mullw	2
 10701  002D6E  0E3C               	movlw	low _memory
 10702  002D70  24F3               	addwf	243,w,c
 10703  002D72  6ED9               	movwf	fsr2l,c
 10704  002D74  0E03               	movlw	high _memory
 10705  002D76  20F4               	addwfc	prodh,w,c
 10706  002D78  6EDA               	movwf	fsr2h,c
 10707  002D7A  0E06               	movlw	6
 10708  002D7C  18DE               	xorwf	postinc2,w,c
 10709  002D7E  10DE               	iorwf	postinc2,w,c
 10710  002D80  A4D8               	btfss	status,2,c
 10711  002D82  EFC5  F016         	goto	u5341
 10712  002D86  EFC7  F016         	goto	u5340
 10713  002D8A                     u5341:
 10714  002D8A  EFD5  F016         	goto	l5324
 10715  002D8E                     u5340:
 10716  002D8E                     
 10717                           ; BSR set to: 3
 10718  002D8E  C058  F020         	movff	goback@mL,turnLeft@mL
 10719  002D92  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10720  002D96  C05A  F022         	movff	goback@mR,turnLeft@mR
 10721  002D9A  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10722  002D9E  0E87               	movlw	135
 10723  002DA0  6E24               	movwf	turnLeft@angle_left^0,c
 10724  002DA2  EC9D  F021         	call	_turnLeft	;wreg free
 10725  002DA6  EF1D  F016         	goto	l5292
 10726  002DAA                     l5324:
 10727                           
 10728                           ; BSR set to: 3
 10729  002DAA  516B               	movf	_array_index& (0+255),w,b
 10730  002DAC  0D02               	mullw	2
 10731  002DAE  0E3C               	movlw	low _memory
 10732  002DB0  24F3               	addwf	243,w,c
 10733  002DB2  6ED9               	movwf	fsr2l,c
 10734  002DB4  0E03               	movlw	high _memory
 10735  002DB6  20F4               	addwfc	prodh,w,c
 10736  002DB8  6EDA               	movwf	fsr2h,c
 10737  002DBA  0E07               	movlw	7
 10738  002DBC  18DE               	xorwf	postinc2,w,c
 10739  002DBE  10DE               	iorwf	postinc2,w,c
 10740  002DC0  A4D8               	btfss	status,2,c
 10741  002DC2  EFE5  F016         	goto	u5351
 10742  002DC6  EFE7  F016         	goto	u5350
 10743  002DCA                     u5351:
 10744  002DCA  EFF5  F016         	goto	l664
 10745  002DCE                     u5350:
 10746  002DCE                     
 10747                           ; BSR set to: 3
 10748  002DCE  C058  F020         	movff	goback@mL,turnRight@mL
 10749  002DD2  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10750  002DD6  C05A  F022         	movff	goback@mR,turnRight@mR
 10751  002DDA  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10752  002DDE  0E87               	movlw	135
 10753  002DE0  6E24               	movwf	turnRight@angle_right^0,c
 10754  002DE2  ECD6  F020         	call	_turnRight	;wreg free
 10755  002DE6  EF1D  F016         	goto	l5292
 10756  002DEA                     l664:
 10757                           
 10758                           ; BSR set to: 3
 10759  002DEA  EF7E  F015         	goto	l5254
 10760  002DEE                     l5330:
 10761                           
 10762                           ; BSR set to: 3
 10763                           ;movement.c: 152:     char buf2[100];;movement.c: 153:     sprintf(buf2,"go back finish\
      +                          r\n");
 10764  002DEE  0E00               	movlw	low goback@buf2
 10765  002DF0  0100               	movlb	0	; () banked
 10766  002DF2  6F60               	movwf	sprintf@s& (0+255),b
 10767  002DF4  0E02               	movlw	high goback@buf2
 10768  002DF6  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10769  002DF8  0E05               	movlw	low STR_6
 10770  002DFA  6F62               	movwf	sprintf@fmt& (0+255),b
 10771  002DFC  0E0E               	movlw	high STR_6
 10772  002DFE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10773  002E00  ECCF  F02A         	call	_sprintf	;wreg free
 10774  002E04                     
 10775                           ;movement.c: 154:     sendStringSerial4(buf2);
 10776  002E04  0E00               	movlw	low goback@buf2
 10777  002E06  6E02               	movwf	sendStringSerial4@string^0,c
 10778  002E08  0E02               	movlw	high goback@buf2
 10779  002E0A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10780  002E0C  EC0A  F02D         	call	_sendStringSerial4	;wreg free
 10781  002E10                     l5334:
 10782  002E10  C058  F01A         	movff	goback@mL,stop@mL
 10783  002E14  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10784  002E18  C05A  F01C         	movff	goback@mR,stop@mR
 10785  002E1C  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10786  002E20  ECEF  F028         	call	_stop	;wreg free
 10787  002E24  EF08  F017         	goto	l5334
 10788  002E28  0012               	return		;funcret
 10789  002E2A                     __end_of_goback:
 10790                           	callstack 0
 10791                           
 10792 ;; *************** function _turnRight *****************
 10793 ;; Defined at:
 10794 ;;		line 122 in file "dc_motor.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10797 ;;		 -> main@motorL(10), 
 10798 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10799 ;;		 -> main@motorR(10), 
 10800 ;;  angle_right     1   35[COMRAM] unsigned char 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  i               2   45[COMRAM] unsigned int 
 10803 ;;  i               2   43[COMRAM] unsigned int 
 10804 ;;  i               2   41[COMRAM] unsigned int 
 10805 ;;  delay           2   47[COMRAM] unsigned int 
 10806 ;;  delay_180       2   39[COMRAM] unsigned int 
 10807 ;;  delay_135       2   37[COMRAM] unsigned int 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      void 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10817 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10818 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;Total ram usage:       18 bytes
 10822 ;; Hardware stack levels used: 1
 10823 ;; Hardware stack levels required when called: 4
 10824 ;; This function calls:
 10825 ;;		_setMotorPWM
 10826 ;;		_stop
 10827 ;; This function is called by:
 10828 ;;		_action
 10829 ;;		_goback
 10830 ;;		_test_action
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text50
 10835  0041AC                     __ptext50:
 10836                           	callstack 0
 10837  0041AC                     _turnRight:
 10838                           	callstack 25
 10839  0041AC                     
 10840                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10841  0041AC  EE20 F001          	lfsr	2,1
 10842  0041B0  5020               	movf	turnRight@mL^0,w,c
 10843  0041B2  26D9               	addwf	fsr2l,f,c
 10844  0041B4  5021               	movf	(turnRight@mL+1)^0,w,c
 10845  0041B6  22DA               	addwfc	fsr2h,f,c
 10846  0041B8  0E01               	movlw	1
 10847  0041BA  6EDF               	movwf	indf2,c
 10848                           
 10849                           ;dc_motor.c: 125:     mR->direction=1;
 10850  0041BC  EE20 F001          	lfsr	2,1
 10851  0041C0  5022               	movf	turnRight@mR^0,w,c
 10852  0041C2  26D9               	addwf	fsr2l,f,c
 10853  0041C4  5023               	movf	(turnRight@mR+1)^0,w,c
 10854  0041C6  22DA               	addwfc	fsr2h,f,c
 10855  0041C8  0E01               	movlw	1
 10856  0041CA  6EDF               	movwf	indf2,c
 10857                           
 10858                           ;dc_motor.c: 126:     while (mL->power <25){
 10859  0041CC  EF07  F021         	goto	l4674
 10860  0041D0                     l4666:
 10861                           
 10862                           ;dc_motor.c: 127:         mL->power += 5;
 10863  0041D0  C020  FFD9         	movff	turnRight@mL,fsr2l
 10864  0041D4  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10865  0041D8  0E05               	movlw	5
 10866  0041DA  26DF               	addwf	indf2,f,c
 10867                           
 10868                           ;dc_motor.c: 128:         mR->power = 0;
 10869  0041DC  C022  FFD9         	movff	turnRight@mR,fsr2l
 10870  0041E0  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10871  0041E4  0E00               	movlw	0
 10872  0041E6  6EDF               	movwf	indf2,c
 10873  0041E8                     
 10874                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10875  0041E8  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10876  0041EC  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10877  0041F0  EC5D  F01D         	call	_setMotorPWM	;wreg free
 10878  0041F4                     
 10879                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10880  0041F4  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10881  0041F8  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10882  0041FC  EC5D  F01D         	call	_setMotorPWM	;wreg free
 10883  004200                     
 10884                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10885  004200  0ED0               	movlw	208
 10886  004202  6E25               	movwf	??_turnRight^0,c
 10887  004204  0ECA               	movlw	202
 10888  004206                     u6137:
 10889  004206  2EE8               	decfsz	wreg,f,c
 10890  004208  D7FE               	bra	u6137
 10891  00420A  2E25               	decfsz	??_turnRight^0,f,c
 10892  00420C  D7FC               	bra	u6137
 10893  00420E                     l4674:
 10894                           
 10895                           ;dc_motor.c: 126:     while (mL->power <25){
 10896  00420E  C020  FFD9         	movff	turnRight@mL,fsr2l
 10897  004212  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10898  004216  0E18               	movlw	24
 10899  004218  64DF               	cpfsgt	indf2,c
 10900  00421A  EF11  F021         	goto	u4671
 10901  00421E  EF13  F021         	goto	u4670
 10902  004222                     u4671:
 10903  004222  EFE8  F020         	goto	l4666
 10904  004226                     u4670:
 10905  004226                     
 10906                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10907  004226  5024               	movf	turnRight@angle_right^0,w,c
 10908  004228  0100               	movlb	0	; () banked
 10909  00422A  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10910  00422C  CFF3 F030          	movff	prodl,turnRight@delay
 10911  004230  CFF4 F031          	movff	prodh,turnRight@delay+1
 10912  004234                     
 10913                           ; BSR set to: 0
 10914  004234  0E0F               	movlw	15
 10915  004236  2430               	addwf	turnRight@delay^0,w,c
 10916  004238  6E26               	movwf	turnRight@delay_135^0,c
 10917  00423A  0E00               	movlw	0
 10918  00423C  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10919  00423E  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10920  004240                     
 10921                           ; BSR set to: 0
 10922  004240  0E0A               	movlw	10
 10923  004242  2430               	addwf	turnRight@delay^0,w,c
 10924  004244  6E28               	movwf	turnRight@delay_180^0,c
 10925  004246  0E00               	movlw	0
 10926  004248  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10927  00424A  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10928  00424C                     
 10929                           ; BSR set to: 0
 10930                           ;dc_motor.c: 136:     if (angle_right == 180){
 10931  00424C  0EB4               	movlw	180
 10932  00424E  1824               	xorwf	turnRight@angle_right^0,w,c
 10933  004250  A4D8               	btfss	status,2,c
 10934  004252  EF2D  F021         	goto	u4681
 10935  004256  EF2F  F021         	goto	u4680
 10936  00425A                     u4681:
 10937  00425A  EF4A  F021         	goto	l4690
 10938  00425E                     u4680:
 10939  00425E                     
 10940                           ; BSR set to: 0
 10941                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10942  00425E  0E00               	movlw	0
 10943  004260  6E2B               	movwf	(turnRight@i+1)^0,c
 10944  004262  0E00               	movlw	0
 10945  004264  6E2A               	movwf	turnRight@i^0,c
 10946  004266  EF3F  F021         	goto	l335
 10947  00426A                     l4686:
 10948  00426A  0E15               	movlw	21
 10949  00426C  6E25               	movwf	??_turnRight^0,c
 10950  00426E  0EC6               	movlw	198
 10951  004270                     u6147:
 10952  004270  2EE8               	decfsz	wreg,f,c
 10953  004272  D7FE               	bra	u6147
 10954  004274  2E25               	decfsz	??_turnRight^0,f,c
 10955  004276  D7FC               	bra	u6147
 10956  004278  D000               	nop2	
 10957  00427A  4A2A               	infsnz	turnRight@i^0,f,c
 10958  00427C  2A2B               	incf	(turnRight@i+1)^0,f,c
 10959  00427E                     l335:
 10960  00427E  5028               	movf	turnRight@delay_180^0,w,c
 10961  004280  5C2A               	subwf	turnRight@i^0,w,c
 10962  004282  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10963  004284  582B               	subwfb	(turnRight@i+1)^0,w,c
 10964  004286  A0D8               	btfss	status,0,c
 10965  004288  EF48  F021         	goto	u4691
 10966  00428C  EF4A  F021         	goto	u4690
 10967  004290                     u4691:
 10968  004290  EF35  F021         	goto	l4686
 10969  004294                     u4690:
 10970  004294                     l4690:
 10971                           
 10972                           ;dc_motor.c: 139:     if (angle_right == 135){
 10973  004294  0E87               	movlw	135
 10974  004296  1824               	xorwf	turnRight@angle_right^0,w,c
 10975  004298  A4D8               	btfss	status,2,c
 10976  00429A  EF51  F021         	goto	u4701
 10977  00429E  EF53  F021         	goto	u4700
 10978  0042A2                     u4701:
 10979  0042A2  EF6E  F021         	goto	l4698
 10980  0042A6                     u4700:
 10981  0042A6                     
 10982                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10983  0042A6  0E00               	movlw	0
 10984  0042A8  6E2D               	movwf	(turnRight@i_1358+1)^0,c
 10985  0042AA  0E00               	movlw	0
 10986  0042AC  6E2C               	movwf	turnRight@i_1358^0,c
 10987  0042AE  EF63  F021         	goto	l339
 10988  0042B2                     l4694:
 10989  0042B2  0E15               	movlw	21
 10990  0042B4  6E25               	movwf	??_turnRight^0,c
 10991  0042B6  0EC6               	movlw	198
 10992  0042B8                     u6157:
 10993  0042B8  2EE8               	decfsz	wreg,f,c
 10994  0042BA  D7FE               	bra	u6157
 10995  0042BC  2E25               	decfsz	??_turnRight^0,f,c
 10996  0042BE  D7FC               	bra	u6157
 10997  0042C0  D000               	nop2	
 10998  0042C2  4A2C               	infsnz	turnRight@i_1358^0,f,c
 10999  0042C4  2A2D               	incf	(turnRight@i_1358+1)^0,f,c
 11000  0042C6                     l339:
 11001  0042C6  5026               	movf	turnRight@delay_135^0,w,c
 11002  0042C8  5C2C               	subwf	turnRight@i_1358^0,w,c
 11003  0042CA  5027               	movf	(turnRight@delay_135+1)^0,w,c
 11004  0042CC  582D               	subwfb	(turnRight@i_1358+1)^0,w,c
 11005  0042CE  A0D8               	btfss	status,0,c
 11006  0042D0  EF6C  F021         	goto	u4711
 11007  0042D4  EF6E  F021         	goto	u4710
 11008  0042D8                     u4711:
 11009  0042D8  EF59  F021         	goto	l4694
 11010  0042DC                     u4710:
 11011  0042DC                     l4698:
 11012                           
 11013                           ;dc_motor.c: 142:     if (angle_right == 90){
 11014  0042DC  0E5A               	movlw	90
 11015  0042DE  1824               	xorwf	turnRight@angle_right^0,w,c
 11016  0042E0  A4D8               	btfss	status,2,c
 11017  0042E2  EF75  F021         	goto	u4721
 11018  0042E6  EF77  F021         	goto	u4720
 11019  0042EA                     u4721:
 11020  0042EA  EF92  F021         	goto	l4706
 11021  0042EE                     u4720:
 11022  0042EE                     
 11023                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11024  0042EE  0E00               	movlw	0
 11025  0042F0  6E2F               	movwf	(turnRight@i_1359+1)^0,c
 11026  0042F2  0E00               	movlw	0
 11027  0042F4  6E2E               	movwf	turnRight@i_1359^0,c
 11028  0042F6  EF87  F021         	goto	l343
 11029  0042FA                     l4702:
 11030  0042FA  0E15               	movlw	21
 11031  0042FC  6E25               	movwf	??_turnRight^0,c
 11032  0042FE  0EC6               	movlw	198
 11033  004300                     u6167:
 11034  004300  2EE8               	decfsz	wreg,f,c
 11035  004302  D7FE               	bra	u6167
 11036  004304  2E25               	decfsz	??_turnRight^0,f,c
 11037  004306  D7FC               	bra	u6167
 11038  004308  D000               	nop2	
 11039  00430A  4A2E               	infsnz	turnRight@i_1359^0,f,c
 11040  00430C  2A2F               	incf	(turnRight@i_1359+1)^0,f,c
 11041  00430E                     l343:
 11042  00430E  5030               	movf	turnRight@delay^0,w,c
 11043  004310  5C2E               	subwf	turnRight@i_1359^0,w,c
 11044  004312  5031               	movf	(turnRight@delay+1)^0,w,c
 11045  004314  582F               	subwfb	(turnRight@i_1359+1)^0,w,c
 11046  004316  A0D8               	btfss	status,0,c
 11047  004318  EF90  F021         	goto	u4731
 11048  00431C  EF92  F021         	goto	u4730
 11049  004320                     u4731:
 11050  004320  EF7D  F021         	goto	l4702
 11051  004324                     u4730:
 11052  004324                     l4706:
 11053                           
 11054                           ;dc_motor.c: 145:     stop(mL,mR);
 11055  004324  C020  F01A         	movff	turnRight@mL,stop@mL
 11056  004328  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 11057  00432C  C022  F01C         	movff	turnRight@mR,stop@mR
 11058  004330  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 11059  004334  ECEF  F028         	call	_stop	;wreg free
 11060  004338  0012               	return		;funcret
 11061  00433A                     __end_of_turnRight:
 11062                           	callstack 0
 11063                           
 11064 ;; *************** function _turnLeft *****************
 11065 ;; Defined at:
 11066 ;;		line 95 in file "dc_motor.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11069 ;;		 -> main@motorL(10), 
 11070 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11071 ;;		 -> main@motorR(10), 
 11072 ;;  angle_left      1   35[COMRAM] unsigned char 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  i               2   45[COMRAM] unsigned int 
 11075 ;;  i               2   43[COMRAM] unsigned int 
 11076 ;;  i               2   41[COMRAM] unsigned int 
 11077 ;;  delay           2   47[COMRAM] unsigned int 
 11078 ;;  delay_180       2   39[COMRAM] unsigned int 
 11079 ;;  delay_135       2   37[COMRAM] unsigned int 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11089 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11090 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11092 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11093 ;;Total ram usage:       18 bytes
 11094 ;; Hardware stack levels used: 1
 11095 ;; Hardware stack levels required when called: 4
 11096 ;; This function calls:
 11097 ;;		_setMotorPWM
 11098 ;;		_stop
 11099 ;; This function is called by:
 11100 ;;		_action
 11101 ;;		_goback
 11102 ;;		_test_action
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           	psect	text51
 11107  00433A                     __ptext51:
 11108                           	callstack 0
 11109  00433A                     _turnLeft:
 11110                           	callstack 25
 11111  00433A                     
 11112                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 11113  00433A  EE20 F001          	lfsr	2,1
 11114  00433E  5020               	movf	turnLeft@mL^0,w,c
 11115  004340  26D9               	addwf	fsr2l,f,c
 11116  004342  5021               	movf	(turnLeft@mL+1)^0,w,c
 11117  004344  22DA               	addwfc	fsr2h,f,c
 11118  004346  0E01               	movlw	1
 11119  004348  6EDF               	movwf	indf2,c
 11120                           
 11121                           ;dc_motor.c: 98:       mR->direction=1;
 11122  00434A  EE20 F001          	lfsr	2,1
 11123  00434E  5022               	movf	turnLeft@mR^0,w,c
 11124  004350  26D9               	addwf	fsr2l,f,c
 11125  004352  5023               	movf	(turnLeft@mR+1)^0,w,c
 11126  004354  22DA               	addwfc	fsr2h,f,c
 11127  004356  0E01               	movlw	1
 11128  004358  6EDF               	movwf	indf2,c
 11129                           
 11130                           ;dc_motor.c: 99:       while (mR->power <25){
 11131  00435A  EFCE  F021         	goto	l4630
 11132  00435E                     l4622:
 11133                           
 11134                           ;dc_motor.c: 100:         mR->power += 5;
 11135  00435E  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11136  004362  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11137  004366  0E05               	movlw	5
 11138  004368  26DF               	addwf	indf2,f,c
 11139                           
 11140                           ;dc_motor.c: 101:         mL->power = 0;
 11141  00436A  C020  FFD9         	movff	turnLeft@mL,fsr2l
 11142  00436E  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 11143  004372  0E00               	movlw	0
 11144  004374  6EDF               	movwf	indf2,c
 11145  004376                     
 11146                           ;dc_motor.c: 102:         setMotorPWM(mL);
 11147  004376  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 11148  00437A  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11149  00437E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11150  004382                     
 11151                           ;dc_motor.c: 103:         setMotorPWM(mR);
 11152  004382  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 11153  004386  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11154  00438A  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11155  00438E                     
 11156                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11157  00438E  0ED0               	movlw	208
 11158  004390  6E25               	movwf	??_turnLeft^0,c
 11159  004392  0ECA               	movlw	202
 11160  004394                     u6177:
 11161  004394  2EE8               	decfsz	wreg,f,c
 11162  004396  D7FE               	bra	u6177
 11163  004398  2E25               	decfsz	??_turnLeft^0,f,c
 11164  00439A  D7FC               	bra	u6177
 11165  00439C                     l4630:
 11166                           
 11167                           ;dc_motor.c: 99:       while (mR->power <25){
 11168  00439C  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11169  0043A0  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11170  0043A4  0E18               	movlw	24
 11171  0043A6  64DF               	cpfsgt	indf2,c
 11172  0043A8  EFD8  F021         	goto	u4601
 11173  0043AC  EFDA  F021         	goto	u4600
 11174  0043B0                     u4601:
 11175  0043B0  EFAF  F021         	goto	l4622
 11176  0043B4                     u4600:
 11177  0043B4                     
 11178                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 11179  0043B4  5024               	movf	turnLeft@angle_left^0,w,c
 11180  0043B6  0100               	movlb	0	; () banked
 11181  0043B8  03FE               	mulwf	_SENSITIVITY& (0+255),b
 11182  0043BA  CFF3 F030          	movff	prodl,turnLeft@delay
 11183  0043BE  CFF4 F031          	movff	prodh,turnLeft@delay+1
 11184  0043C2                     
 11185                           ; BSR set to: 0
 11186  0043C2  0E0F               	movlw	15
 11187  0043C4  2430               	addwf	turnLeft@delay^0,w,c
 11188  0043C6  6E26               	movwf	turnLeft@delay_135^0,c
 11189  0043C8  0E00               	movlw	0
 11190  0043CA  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11191  0043CC  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 11192  0043CE                     
 11193                           ; BSR set to: 0
 11194  0043CE  0E0A               	movlw	10
 11195  0043D0  2430               	addwf	turnLeft@delay^0,w,c
 11196  0043D2  6E28               	movwf	turnLeft@delay_180^0,c
 11197  0043D4  0E00               	movlw	0
 11198  0043D6  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11199  0043D8  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 11200  0043DA                     
 11201                           ; BSR set to: 0
 11202                           ;dc_motor.c: 109:     if (angle_left == 180){
 11203  0043DA  0EB4               	movlw	180
 11204  0043DC  1824               	xorwf	turnLeft@angle_left^0,w,c
 11205  0043DE  A4D8               	btfss	status,2,c
 11206  0043E0  EFF4  F021         	goto	u4611
 11207  0043E4  EFF6  F021         	goto	u4610
 11208  0043E8                     u4611:
 11209  0043E8  EF11  F022         	goto	l4646
 11210  0043EC                     u4610:
 11211  0043EC                     
 11212                           ; BSR set to: 0
 11213                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11214  0043EC  0E00               	movlw	0
 11215  0043EE  6E2B               	movwf	(turnLeft@i+1)^0,c
 11216  0043F0  0E00               	movlw	0
 11217  0043F2  6E2A               	movwf	turnLeft@i^0,c
 11218  0043F4  EF06  F022         	goto	l317
 11219  0043F8                     l4642:
 11220  0043F8  0E15               	movlw	21
 11221  0043FA  6E25               	movwf	??_turnLeft^0,c
 11222  0043FC  0EC6               	movlw	198
 11223  0043FE                     u6187:
 11224  0043FE  2EE8               	decfsz	wreg,f,c
 11225  004400  D7FE               	bra	u6187
 11226  004402  2E25               	decfsz	??_turnLeft^0,f,c
 11227  004404  D7FC               	bra	u6187
 11228  004406  D000               	nop2	
 11229  004408  4A2A               	infsnz	turnLeft@i^0,f,c
 11230  00440A  2A2B               	incf	(turnLeft@i+1)^0,f,c
 11231  00440C                     l317:
 11232  00440C  5028               	movf	turnLeft@delay_180^0,w,c
 11233  00440E  5C2A               	subwf	turnLeft@i^0,w,c
 11234  004410  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 11235  004412  582B               	subwfb	(turnLeft@i+1)^0,w,c
 11236  004414  A0D8               	btfss	status,0,c
 11237  004416  EF0F  F022         	goto	u4621
 11238  00441A  EF11  F022         	goto	u4620
 11239  00441E                     u4621:
 11240  00441E  EFFC  F021         	goto	l4642
 11241  004422                     u4620:
 11242  004422                     l4646:
 11243                           
 11244                           ;dc_motor.c: 112:     if (angle_left == 135){
 11245  004422  0E87               	movlw	135
 11246  004424  1824               	xorwf	turnLeft@angle_left^0,w,c
 11247  004426  A4D8               	btfss	status,2,c
 11248  004428  EF18  F022         	goto	u4631
 11249  00442C  EF1A  F022         	goto	u4630
 11250  004430                     u4631:
 11251  004430  EF35  F022         	goto	l4654
 11252  004434                     u4630:
 11253  004434                     
 11254                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11255  004434  0E00               	movlw	0
 11256  004436  6E2D               	movwf	(turnLeft@i_1333+1)^0,c
 11257  004438  0E00               	movlw	0
 11258  00443A  6E2C               	movwf	turnLeft@i_1333^0,c
 11259  00443C  EF2A  F022         	goto	l321
 11260  004440                     l4650:
 11261  004440  0E15               	movlw	21
 11262  004442  6E25               	movwf	??_turnLeft^0,c
 11263  004444  0EC6               	movlw	198
 11264  004446                     u6197:
 11265  004446  2EE8               	decfsz	wreg,f,c
 11266  004448  D7FE               	bra	u6197
 11267  00444A  2E25               	decfsz	??_turnLeft^0,f,c
 11268  00444C  D7FC               	bra	u6197
 11269  00444E  D000               	nop2	
 11270  004450  4A2C               	infsnz	turnLeft@i_1333^0,f,c
 11271  004452  2A2D               	incf	(turnLeft@i_1333+1)^0,f,c
 11272  004454                     l321:
 11273  004454  5026               	movf	turnLeft@delay_135^0,w,c
 11274  004456  5C2C               	subwf	turnLeft@i_1333^0,w,c
 11275  004458  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 11276  00445A  582D               	subwfb	(turnLeft@i_1333+1)^0,w,c
 11277  00445C  A0D8               	btfss	status,0,c
 11278  00445E  EF33  F022         	goto	u4641
 11279  004462  EF35  F022         	goto	u4640
 11280  004466                     u4641:
 11281  004466  EF20  F022         	goto	l4650
 11282  00446A                     u4640:
 11283  00446A                     l4654:
 11284                           
 11285                           ;dc_motor.c: 115:     if (angle_left == 90){
 11286  00446A  0E5A               	movlw	90
 11287  00446C  1824               	xorwf	turnLeft@angle_left^0,w,c
 11288  00446E  A4D8               	btfss	status,2,c
 11289  004470  EF3C  F022         	goto	u4651
 11290  004474  EF3E  F022         	goto	u4650
 11291  004478                     u4651:
 11292  004478  EF59  F022         	goto	l4662
 11293  00447C                     u4650:
 11294  00447C                     
 11295                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11296  00447C  0E00               	movlw	0
 11297  00447E  6E2F               	movwf	(turnLeft@i_1334+1)^0,c
 11298  004480  0E00               	movlw	0
 11299  004482  6E2E               	movwf	turnLeft@i_1334^0,c
 11300  004484  EF4E  F022         	goto	l325
 11301  004488                     l4658:
 11302  004488  0E15               	movlw	21
 11303  00448A  6E25               	movwf	??_turnLeft^0,c
 11304  00448C  0EC6               	movlw	198
 11305  00448E                     u6207:
 11306  00448E  2EE8               	decfsz	wreg,f,c
 11307  004490  D7FE               	bra	u6207
 11308  004492  2E25               	decfsz	??_turnLeft^0,f,c
 11309  004494  D7FC               	bra	u6207
 11310  004496  D000               	nop2	
 11311  004498  4A2E               	infsnz	turnLeft@i_1334^0,f,c
 11312  00449A  2A2F               	incf	(turnLeft@i_1334+1)^0,f,c
 11313  00449C                     l325:
 11314  00449C  5030               	movf	turnLeft@delay^0,w,c
 11315  00449E  5C2E               	subwf	turnLeft@i_1334^0,w,c
 11316  0044A0  5031               	movf	(turnLeft@delay+1)^0,w,c
 11317  0044A2  582F               	subwfb	(turnLeft@i_1334+1)^0,w,c
 11318  0044A4  A0D8               	btfss	status,0,c
 11319  0044A6  EF57  F022         	goto	u4661
 11320  0044AA  EF59  F022         	goto	u4660
 11321  0044AE                     u4661:
 11322  0044AE  EF44  F022         	goto	l4658
 11323  0044B2                     u4660:
 11324  0044B2                     l4662:
 11325                           
 11326                           ;dc_motor.c: 118:     stop(mL,mR);
 11327  0044B2  C020  F01A         	movff	turnLeft@mL,stop@mL
 11328  0044B6  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11329  0044BA  C022  F01C         	movff	turnLeft@mR,stop@mR
 11330  0044BE  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11331  0044C2  ECEF  F028         	call	_stop	;wreg free
 11332  0044C6  0012               	return		;funcret
 11333  0044C8                     __end_of_turnLeft:
 11334                           	callstack 0
 11335                           
 11336 ;; *************** function _reverse_square *****************
 11337 ;; Defined at:
 11338 ;;		line 205 in file "dc_motor.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11341 ;;		 -> main@motorL(10), 
 11342 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11343 ;;		 -> main@motorR(10), 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11359 ;;Total ram usage:        6 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 5
 11362 ;; This function calls:
 11363 ;;		_fullSpeedBack
 11364 ;;		_stop
 11365 ;; This function is called by:
 11366 ;;		_action
 11367 ;;		_goback
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text52
 11372  00587E                     __ptext52:
 11373                           	callstack 0
 11374  00587E                     _reverse_square:
 11375                           	callstack 24
 11376  00587E                     
 11377                           ;dc_motor.c: 205: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 206: { fullSpeedBack(mL, mR);
 11378  00587E  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11379  005882  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11380  005886  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11381  00588A  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11382  00588E  EC8F  F028         	call	_fullSpeedBack	;wreg free
 11383  005892                     
 11384                           ;dc_motor.c: 207:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 11385  005892  0E7A               	movlw	122
 11386  005894  6E2B               	movwf	(??_reverse_square+1)^0,c
 11387  005896  0EC1               	movlw	193
 11388  005898  6E2A               	movwf	??_reverse_square^0,c
 11389  00589A  0E82               	movlw	130
 11390  00589C                     u6217:
 11391  00589C  2EE8               	decfsz	wreg,f,c
 11392  00589E  D7FE               	bra	u6217
 11393  0058A0  2E2A               	decfsz	??_reverse_square^0,f,c
 11394  0058A2  D7FC               	bra	u6217
 11395  0058A4  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11396  0058A6  D7FA               	bra	u6217
 11397  0058A8                     
 11398                           ;dc_motor.c: 208:     stop(mL,mR);
 11399  0058A8  C026  F01A         	movff	reverse_square@mL,stop@mL
 11400  0058AC  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11401  0058B0  C028  F01C         	movff	reverse_square@mR,stop@mR
 11402  0058B4  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11403  0058B8  ECEF  F028         	call	_stop	;wreg free
 11404  0058BC  0012               	return		;funcret
 11405  0058BE                     __end_of_reverse_square:
 11406                           	callstack 0
 11407                           
 11408 ;; *************** function _fullSpeedBack *****************
 11409 ;; Defined at:
 11410 ;;		line 168 in file "dc_motor.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11413 ;;		 -> main@motorL(10), 
 11414 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11415 ;;		 -> main@motorR(10), 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      void 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;Total ram usage:        6 bytes
 11432 ;; Hardware stack levels used: 1
 11433 ;; Hardware stack levels required when called: 4
 11434 ;; This function calls:
 11435 ;;		_setMotorPWM
 11436 ;;		_stop
 11437 ;; This function is called by:
 11438 ;;		_short_reverse
 11439 ;;		_reverse_square
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text53
 11444  00511E                     __ptext53:
 11445                           	callstack 0
 11446  00511E                     _fullSpeedBack:
 11447                           	callstack 24
 11448  00511E                     
 11449                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11450  00511E  EE20 F001          	lfsr	2,1
 11451  005122  5020               	movf	fullSpeedBack@mL^0,w,c
 11452  005124  26D9               	addwf	fsr2l,f,c
 11453  005126  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11454  005128  22DA               	addwfc	fsr2h,f,c
 11455  00512A  0E00               	movlw	0
 11456  00512C  6EDF               	movwf	indf2,c
 11457                           
 11458                           ;dc_motor.c: 171:     mR->direction=0;
 11459  00512E  EE20 F001          	lfsr	2,1
 11460  005132  5022               	movf	fullSpeedBack@mR^0,w,c
 11461  005134  26D9               	addwf	fsr2l,f,c
 11462  005136  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11463  005138  22DA               	addwfc	fsr2h,f,c
 11464  00513A  0E00               	movlw	0
 11465  00513C  6EDF               	movwf	indf2,c
 11466                           
 11467                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11468  00513E  EFC0  F028         	goto	l4446
 11469  005142                     l4438:
 11470                           
 11471                           ;dc_motor.c: 173:         mL->power += 10;
 11472  005142  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11473  005146  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11474  00514A  0E0A               	movlw	10
 11475  00514C  26DF               	addwf	indf2,f,c
 11476                           
 11477                           ;dc_motor.c: 174:         mR->power += 10;
 11478  00514E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11479  005152  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11480  005156  0E0A               	movlw	10
 11481  005158  26DF               	addwf	indf2,f,c
 11482  00515A                     
 11483                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11484  00515A  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11485  00515E  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11486  005162  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11487  005166                     
 11488                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11489  005166  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11490  00516A  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11491  00516E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11492  005172                     
 11493                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11494  005172  0ED0               	movlw	208
 11495  005174  6E24               	movwf	??_fullSpeedBack^0,c
 11496  005176  0ECA               	movlw	202
 11497  005178                     u6227:
 11498  005178  2EE8               	decfsz	wreg,f,c
 11499  00517A  D7FE               	bra	u6227
 11500  00517C  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11501  00517E  D7FC               	bra	u6227
 11502  005180                     l4446:
 11503                           
 11504                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11505  005180  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11506  005184  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11507  005188  0E32               	movlw	50
 11508  00518A  60DF               	cpfslt	indf2,c
 11509  00518C  EFCA  F028         	goto	u4141
 11510  005190  EFCC  F028         	goto	u4140
 11511  005194                     u4141:
 11512  005194  EFD8  F028         	goto	l4450
 11513  005198                     u4140:
 11514  005198  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11515  00519C  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11516  0051A0  0E31               	movlw	49
 11517  0051A2  64DF               	cpfsgt	indf2,c
 11518  0051A4  EFD6  F028         	goto	u4151
 11519  0051A8  EFD8  F028         	goto	u4150
 11520  0051AC                     u4151:
 11521  0051AC  EFA1  F028         	goto	l4438
 11522  0051B0                     u4150:
 11523  0051B0                     l4450:
 11524                           
 11525                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11526  0051B0  0E29               	movlw	41
 11527  0051B2  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11528  0051B4  0E96               	movlw	150
 11529  0051B6  6E24               	movwf	??_fullSpeedBack^0,c
 11530  0051B8  0E7F               	movlw	127
 11531  0051BA                     u6237:
 11532  0051BA  2EE8               	decfsz	wreg,f,c
 11533  0051BC  D7FE               	bra	u6237
 11534  0051BE  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11535  0051C0  D7FC               	bra	u6237
 11536  0051C2  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11537  0051C4  D7FA               	bra	u6237
 11538  0051C6  F000               	nop	
 11539  0051C8                     
 11540                           ;dc_motor.c: 180:     stop(mL,mR);
 11541  0051C8  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11542  0051CC  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11543  0051D0  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11544  0051D4  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11545  0051D8  ECEF  F028         	call	_stop	;wreg free
 11546  0051DC  0012               	return		;funcret
 11547  0051DE                     __end_of_fullSpeedBack:
 11548                           	callstack 0
 11549                           
 11550 ;; *************** function _stop *****************
 11551 ;; Defined at:
 11552 ;;		line 82 in file "dc_motor.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11555 ;;		 -> main@motorL(10), 
 11556 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11557 ;;		 -> main@motorR(10), 
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;		None
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;Total ram usage:        6 bytes
 11574 ;; Hardware stack levels used: 1
 11575 ;; Hardware stack levels required when called: 3
 11576 ;; This function calls:
 11577 ;;		_setMotorPWM
 11578 ;; This function is called by:
 11579 ;;		_turnLeft
 11580 ;;		_turnRight
 11581 ;;		_fullSpeedBack
 11582 ;;		_halfSpeedBack
 11583 ;;		_short_reverse
 11584 ;;		_reverse_square
 11585 ;;		_main
 11586 ;;		_short_burst_back
 11587 ;;		_goback
 11588 ;;		_test_function
 11589 ;;		_fullSpeedAhead_test
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text54
 11594  0051DE                     __ptext54:
 11595                           	callstack 0
 11596  0051DE                     _stop:
 11597                           	callstack 26
 11598  0051DE                     
 11599                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11600  0051DE  EF28  F029         	goto	l4208
 11601  0051E2                     l4194:
 11602                           
 11603                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11604  0051E2  C01A  FFD9         	movff	stop@mL,fsr2l
 11605  0051E6  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11606  0051EA  50DF               	movf	indf2,w,c
 11607  0051EC  B4D8               	btfsc	status,2,c
 11608  0051EE  EFFB  F028         	goto	u3821
 11609  0051F2  EFFD  F028         	goto	u3820
 11610  0051F6                     u3821:
 11611  0051F6  EF03  F029         	goto	l4198
 11612  0051FA                     u3820:
 11613  0051FA  C01A  FFD9         	movff	stop@mL,fsr2l
 11614  0051FE  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11615  005202  0E05               	movlw	5
 11616  005204  5EDF               	subwf	indf2,f,c
 11617  005206                     l4198:
 11618                           
 11619                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11620  005206  C01C  FFD9         	movff	stop@mR,fsr2l
 11621  00520A  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11622  00520E  50DF               	movf	indf2,w,c
 11623  005210  B4D8               	btfsc	status,2,c
 11624  005212  EF0D  F029         	goto	u3831
 11625  005216  EF0F  F029         	goto	u3830
 11626  00521A                     u3831:
 11627  00521A  EF15  F029         	goto	l4202
 11628  00521E                     u3830:
 11629  00521E  C01C  FFD9         	movff	stop@mR,fsr2l
 11630  005222  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11631  005226  0E05               	movlw	5
 11632  005228  5EDF               	subwf	indf2,f,c
 11633  00522A                     l4202:
 11634                           
 11635                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11636  00522A  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11637  00522E  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11638  005232  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11639  005236                     
 11640                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11641  005236  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11642  00523A  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11643  00523E  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11644  005242                     
 11645                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11646  005242  0ED0               	movlw	208
 11647  005244  6E1E               	movwf	??_stop^0,c
 11648  005246  0ECA               	movlw	202
 11649  005248                     u6247:
 11650  005248  2EE8               	decfsz	wreg,f,c
 11651  00524A  D7FE               	bra	u6247
 11652  00524C  2E1E               	decfsz	??_stop^0,f,c
 11653  00524E  D7FC               	bra	u6247
 11654  005250                     l4208:
 11655                           
 11656                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11657  005250  C01A  FFD9         	movff	stop@mL,fsr2l
 11658  005254  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11659  005258  50DF               	movf	indf2,w,c
 11660  00525A  A4D8               	btfss	status,2,c
 11661  00525C  EF32  F029         	goto	u3841
 11662  005260  EF34  F029         	goto	u3840
 11663  005264                     u3841:
 11664  005264  EFF1  F028         	goto	l4194
 11665  005268                     u3840:
 11666  005268  C01C  FFD9         	movff	stop@mR,fsr2l
 11667  00526C  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11668  005270  50DF               	movf	indf2,w,c
 11669  005272  A4D8               	btfss	status,2,c
 11670  005274  EF3E  F029         	goto	u3851
 11671  005278  EF40  F029         	goto	u3850
 11672  00527C                     u3851:
 11673  00527C  EFF1  F028         	goto	l4194
 11674  005280                     u3850:
 11675  005280                     
 11676                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11677  005280  0E29               	movlw	41
 11678  005282  6E1F               	movwf	(??_stop+1)^0,c
 11679  005284  0E96               	movlw	150
 11680  005286  6E1E               	movwf	??_stop^0,c
 11681  005288  0E7F               	movlw	127
 11682  00528A                     u6257:
 11683  00528A  2EE8               	decfsz	wreg,f,c
 11684  00528C  D7FE               	bra	u6257
 11685  00528E  2E1E               	decfsz	??_stop^0,f,c
 11686  005290  D7FC               	bra	u6257
 11687  005292  2E1F               	decfsz	(??_stop+1)^0,f,c
 11688  005294  D7FA               	bra	u6257
 11689  005296  F000               	nop	
 11690  005298  0012               	return		;funcret
 11691  00529A                     __end_of_stop:
 11692                           	callstack 0
 11693                           
 11694 ;; *************** function _fullSpeedAhead *****************
 11695 ;; Defined at:
 11696 ;;		line 149 in file "dc_motor.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11699 ;;		 -> main@motorL(10), 
 11700 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11701 ;;		 -> main@motorR(10), 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;		None
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;Total ram usage:        5 bytes
 11718 ;; Hardware stack levels used: 1
 11719 ;; Hardware stack levels required when called: 3
 11720 ;; This function calls:
 11721 ;;		_setMotorPWM
 11722 ;; This function is called by:
 11723 ;;		_main
 11724 ;;		_short_burst_back
 11725 ;;		_goback
 11726 ;;		_test_function
 11727 ;;		_fullSpeedAhead_test
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text55
 11732  00529A                     __ptext55:
 11733                           	callstack 0
 11734  00529A                     _fullSpeedAhead:
 11735                           	callstack 26
 11736  00529A                     
 11737                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11738  00529A  EE20 F001          	lfsr	2,1
 11739  00529E  501A               	movf	fullSpeedAhead@mL^0,w,c
 11740  0052A0  26D9               	addwf	fsr2l,f,c
 11741  0052A2  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11742  0052A4  22DA               	addwfc	fsr2h,f,c
 11743  0052A6  0E01               	movlw	1
 11744  0052A8  6EDF               	movwf	indf2,c
 11745                           
 11746                           ;dc_motor.c: 152:     mR->direction=1;
 11747  0052AA  EE20 F001          	lfsr	2,1
 11748  0052AE  501C               	movf	fullSpeedAhead@mR^0,w,c
 11749  0052B0  26D9               	addwf	fsr2l,f,c
 11750  0052B2  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11751  0052B4  22DA               	addwfc	fsr2h,f,c
 11752  0052B6  0E01               	movlw	1
 11753  0052B8  6EDF               	movwf	indf2,c
 11754                           
 11755                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11756  0052BA  EF7E  F029         	goto	l4718
 11757  0052BE                     l4710:
 11758                           
 11759                           ;dc_motor.c: 154:         mL->power += 10;
 11760  0052BE  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11761  0052C2  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11762  0052C6  0E0A               	movlw	10
 11763  0052C8  26DF               	addwf	indf2,f,c
 11764                           
 11765                           ;dc_motor.c: 155:         mR->power += 10;
 11766  0052CA  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11767  0052CE  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11768  0052D2  0E0A               	movlw	10
 11769  0052D4  26DF               	addwf	indf2,f,c
 11770  0052D6                     
 11771                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11772  0052D6  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11773  0052DA  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11774  0052DE  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11775  0052E2                     
 11776                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11777  0052E2  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11778  0052E6  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11779  0052EA  EC5D  F01D         	call	_setMotorPWM	;wreg free
 11780  0052EE                     
 11781                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11782  0052EE  0ED0               	movlw	208
 11783  0052F0  6E1E               	movwf	??_fullSpeedAhead^0,c
 11784  0052F2  0ECA               	movlw	202
 11785  0052F4                     u6267:
 11786  0052F4  2EE8               	decfsz	wreg,f,c
 11787  0052F6  D7FE               	bra	u6267
 11788  0052F8  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11789  0052FA  D7FC               	bra	u6267
 11790  0052FC                     l4718:
 11791                           
 11792                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11793  0052FC  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11794  005300  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11795  005304  0E14               	movlw	20
 11796  005306  60DF               	cpfslt	indf2,c
 11797  005308  EF88  F029         	goto	u4741
 11798  00530C  EF8A  F029         	goto	u4740
 11799  005310                     u4741:
 11800  005310  EF96  F029         	goto	l354
 11801  005314                     u4740:
 11802  005314  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11803  005318  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11804  00531C  0E13               	movlw	19
 11805  00531E  64DF               	cpfsgt	indf2,c
 11806  005320  EF94  F029         	goto	u4751
 11807  005324  EF96  F029         	goto	u4750
 11808  005328                     u4751:
 11809  005328  EF5F  F029         	goto	l4710
 11810  00532C                     u4750:
 11811  00532C                     l354:
 11812  00532C  0012               	return		;funcret
 11813  00532E                     __end_of_fullSpeedAhead:
 11814                           	callstack 0
 11815                           
 11816 ;; *************** function _setMotorPWM *****************
 11817 ;; Defined at:
 11818 ;;		line 59 in file "dc_motor.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11821 ;;		 -> main@motorR(10), main@motorL(10), 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  PWMduty         2   23[COMRAM] int 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11835 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11836 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11837 ;;Total ram usage:       11 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 2
 11840 ;; This function calls:
 11841 ;;		___awdiv
 11842 ;;		___wmul
 11843 ;; This function is called by:
 11844 ;;		_stop
 11845 ;;		_turnLeft
 11846 ;;		_turnRight
 11847 ;;		_fullSpeedAhead
 11848 ;;		_fullSpeedBack
 11849 ;;		_halfSpeedBack
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text56
 11854  003ABA                     __ptext56:
 11855                           	callstack 0
 11856  003ABA                     _setMotorPWM:
 11857                           	callstack 26
 11858  003ABA                     
 11859                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11860  003ABA  EE20 F001          	lfsr	2,1
 11861  003ABE  500F               	movf	setMotorPWM@m^0,w,c
 11862  003AC0  26D9               	addwf	fsr2l,f,c
 11863  003AC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11864  003AC4  22DA               	addwfc	fsr2h,f,c
 11865  003AC6  50DF               	movf	indf2,w,c
 11866  003AC8  B4D8               	btfsc	status,2,c
 11867  003ACA  EF69  F01D         	goto	u3331
 11868  003ACE  EF6B  F01D         	goto	u3330
 11869  003AD2                     u3331:
 11870  003AD2  EF9C  F01D         	goto	l3908
 11871  003AD6                     u3330:
 11872  003AD6                     
 11873                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11874  003AD6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11875  003ADA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11876  003ADE  50DF               	movf	indf2,w,c
 11877  003AE0  6E11               	movwf	??_setMotorPWM^0,c
 11878  003AE2  5011               	movf	??_setMotorPWM^0,w,c
 11879  003AE4  6E01               	movwf	___wmul@multiplier^0,c
 11880  003AE6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11881  003AE8  EE20 F007          	lfsr	2,7
 11882  003AEC  500F               	movf	setMotorPWM@m^0,w,c
 11883  003AEE  26D9               	addwf	fsr2l,f,c
 11884  003AF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11885  003AF2  22DA               	addwfc	fsr2h,f,c
 11886  003AF4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11887  003AF8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11888  003AFC  EC62  F02D         	call	___wmul	;wreg free
 11889  003B00  C001  F007         	movff	?___wmul,___awdiv@dividend
 11890  003B04  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11891  003B08  0E00               	movlw	0
 11892  003B0A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11893  003B0C  0E64               	movlw	100
 11894  003B0E  6E09               	movwf	___awdiv@divisor^0,c
 11895  003B10  ECCD  F027         	call	___awdiv	;wreg free
 11896  003B14  EE20 F007          	lfsr	2,7
 11897  003B18  500F               	movf	setMotorPWM@m^0,w,c
 11898  003B1A  26D9               	addwf	fsr2l,f,c
 11899  003B1C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11900  003B1E  22DA               	addwfc	fsr2h,f,c
 11901  003B20  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11902  003B24  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11903  003B28  5007               	movf	?___awdiv^0,w,c
 11904  003B2A  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11905  003B2C  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11906  003B2E  5008               	movf	(?___awdiv+1)^0,w,c
 11907  003B30  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11908  003B32  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11909                           
 11910                           ;dc_motor.c: 66:  }
 11911  003B34  EFBF  F01D         	goto	l3910
 11912  003B38                     l3908:
 11913                           
 11914                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11915  003B38  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11916  003B3C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11917  003B40  50DF               	movf	indf2,w,c
 11918  003B42  6E11               	movwf	??_setMotorPWM^0,c
 11919  003B44  5011               	movf	??_setMotorPWM^0,w,c
 11920  003B46  6E01               	movwf	___wmul@multiplier^0,c
 11921  003B48  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11922  003B4A  EE20 F007          	lfsr	2,7
 11923  003B4E  500F               	movf	setMotorPWM@m^0,w,c
 11924  003B50  26D9               	addwf	fsr2l,f,c
 11925  003B52  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11926  003B54  22DA               	addwfc	fsr2h,f,c
 11927  003B56  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11928  003B5A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11929  003B5E  EC62  F02D         	call	___wmul	;wreg free
 11930  003B62  C001  F007         	movff	?___wmul,___awdiv@dividend
 11931  003B66  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11932  003B6A  0E00               	movlw	0
 11933  003B6C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11934  003B6E  0E64               	movlw	100
 11935  003B70  6E09               	movwf	___awdiv@divisor^0,c
 11936  003B72  ECCD  F027         	call	___awdiv	;wreg free
 11937  003B76  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11938  003B7A  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11939  003B7E                     l3910:
 11940                           
 11941                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11942  003B7E  EE20 F002          	lfsr	2,2
 11943  003B82  500F               	movf	setMotorPWM@m^0,w,c
 11944  003B84  26D9               	addwf	fsr2l,f,c
 11945  003B86  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11946  003B88  22DA               	addwfc	fsr2h,f,c
 11947  003B8A  CFDE F011          	movff	postinc2,??_setMotorPWM
 11948  003B8E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11949  003B92  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11950  003B96  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11951  003B9A  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11952  003B9E                     
 11953                           ;dc_motor.c: 74:  if (m->direction){
 11954  003B9E  EE20 F001          	lfsr	2,1
 11955  003BA2  500F               	movf	setMotorPWM@m^0,w,c
 11956  003BA4  26D9               	addwf	fsr2l,f,c
 11957  003BA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11958  003BA8  22DA               	addwfc	fsr2h,f,c
 11959  003BAA  50DF               	movf	indf2,w,c
 11960  003BAC  B4D8               	btfsc	status,2,c
 11961  003BAE  EFDB  F01D         	goto	u3341
 11962  003BB2  EFDD  F01D         	goto	u3340
 11963  003BB6                     u3341:
 11964  003BB6  EF12  F01E         	goto	l3916
 11965  003BBA                     u3340:
 11966  003BBA                     
 11967                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11968  003BBA  EE20 F004          	lfsr	2,4
 11969  003BBE  500F               	movf	setMotorPWM@m^0,w,c
 11970  003BC0  26D9               	addwf	fsr2l,f,c
 11971  003BC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11972  003BC4  22DA               	addwfc	fsr2h,f,c
 11973  003BC6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11974  003BCA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11975  003BCE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11976  003BD2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11977  003BD6  EE10 F004          	lfsr	1,4
 11978  003BDA  500F               	movf	setMotorPWM@m^0,w,c
 11979  003BDC  26E1               	addwf	fsr1l,f,c
 11980  003BDE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11981  003BE0  22E2               	addwfc	fsr1h,f,c
 11982  003BE2  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11983  003BE6  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11984  003BEA  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11985  003BEE  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11986  003BF2  50E7               	movf	indf1,w,c
 11987  003BF4  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11988  003BF6  EE10 F006          	lfsr	1,6
 11989  003BFA  500F               	movf	setMotorPWM@m^0,w,c
 11990  003BFC  26E1               	addwf	fsr1l,f,c
 11991  003BFE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11992  003C00  22E2               	addwfc	fsr1h,f,c
 11993  003C02  50E7               	movf	indf1,w,c
 11994  003C04  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11995  003C06  0E01               	movlw	1
 11996  003C08  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11997  003C0A  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11998  003C0C  EF0A  F01E         	goto	u3354
 11999  003C10                     u3355:
 12000  003C10  90D8               	bcf	status,0,c
 12001  003C12  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 12002  003C14                     u3354:
 12003  003C14  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 12004  003C16  EF08  F01E         	goto	u3355
 12005  003C1A  5017               	movf	(??_setMotorPWM+6)^0,w,c
 12006  003C1C  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 12007  003C1E  6EDF               	movwf	indf2,c
 12008                           
 12009                           ;dc_motor.c: 76:  } else {
 12010  003C20  EF46  F01E         	goto	l302
 12011  003C24                     l3916:
 12012                           
 12013                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 12014  003C24  EE20 F004          	lfsr	2,4
 12015  003C28  500F               	movf	setMotorPWM@m^0,w,c
 12016  003C2A  26D9               	addwf	fsr2l,f,c
 12017  003C2C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12018  003C2E  22DA               	addwfc	fsr2h,f,c
 12019  003C30  CFDE F011          	movff	postinc2,??_setMotorPWM
 12020  003C34  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12021  003C38  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12022  003C3C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12023  003C40  EE10 F004          	lfsr	1,4
 12024  003C44  500F               	movf	setMotorPWM@m^0,w,c
 12025  003C46  26E1               	addwf	fsr1l,f,c
 12026  003C48  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12027  003C4A  22E2               	addwfc	fsr1h,f,c
 12028  003C4C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 12029  003C50  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 12030  003C54  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 12031  003C58  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 12032  003C5C  50E7               	movf	indf1,w,c
 12033  003C5E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 12034  003C60  EE10 F006          	lfsr	1,6
 12035  003C64  500F               	movf	setMotorPWM@m^0,w,c
 12036  003C66  26E1               	addwf	fsr1l,f,c
 12037  003C68  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12038  003C6A  22E2               	addwfc	fsr1h,f,c
 12039  003C6C  50E7               	movf	indf1,w,c
 12040  003C6E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 12041  003C70  0E01               	movlw	1
 12042  003C72  6E17               	movwf	(??_setMotorPWM+6)^0,c
 12043  003C74  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 12044  003C76  EF3F  F01E         	goto	u3364
 12045  003C7A                     u3365:
 12046  003C7A  90D8               	bcf	status,0,c
 12047  003C7C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 12048  003C7E                     u3364:
 12049  003C7E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 12050  003C80  EF3D  F01E         	goto	u3365
 12051  003C84  5017               	movf	(??_setMotorPWM+6)^0,w,c
 12052  003C86  0AFF               	xorlw	255
 12053  003C88  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 12054  003C8A  6EDF               	movwf	indf2,c
 12055  003C8C                     l302:
 12056  003C8C  0012               	return		;funcret
 12057  003C8E                     __end_of_setMotorPWM:
 12058                           	callstack 0
 12059                           
 12060 ;; *************** function ___wmul *****************
 12061 ;; Defined at:
 12062 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;  multiplier      2    0[COMRAM] unsigned int 
 12065 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;  product         2    4[COMRAM] unsigned int 
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  2    0[COMRAM] unsigned int 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, prodl, prodh
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12081 ;;Total ram usage:        6 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 1
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_detect_color
 12088 ;;		_setMotorPWM
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           	psect	text57
 12093  005AC4                     __ptext57:
 12094                           	callstack 0
 12095  005AC4                     ___wmul:
 12096                           	callstack 27
 12097  005AC4  5001               	movf	___wmul@multiplier^0,w,c
 12098  005AC6  0203               	mulwf	___wmul@multiplicand^0,c
 12099  005AC8  CFF3 F005          	movff	prodl,___wmul@product
 12100  005ACC  CFF4 F006          	movff	prodh,___wmul@product+1
 12101  005AD0  5001               	movf	___wmul@multiplier^0,w,c
 12102  005AD2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12103  005AD4  50F3               	movf	243,w,c
 12104  005AD6  2606               	addwf	(___wmul@product+1)^0,f,c
 12105  005AD8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12106  005ADA  0203               	mulwf	___wmul@multiplicand^0,c
 12107  005ADC  50F3               	movf	243,w,c
 12108  005ADE  2606               	addwf	(___wmul@product+1)^0,f,c
 12109  005AE0  C005  F001         	movff	___wmul@product,?___wmul
 12110  005AE4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12111  005AE8  0012               	return		;funcret
 12112  005AEA                     __end_of___wmul:
 12113                           	callstack 0
 12114                           
 12115 ;; *************** function ___awdiv *****************
 12116 ;; Defined at:
 12117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  dividend        2    6[COMRAM] int 
 12120 ;;  divisor         2    8[COMRAM] int 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  quotient        2   12[COMRAM] int 
 12123 ;;  sign            1   11[COMRAM] unsigned char 
 12124 ;;  counter         1   10[COMRAM] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  2    6[COMRAM] int 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12138 ;;Total ram usage:        8 bytes
 12139 ;; Hardware stack levels used: 1
 12140 ;; Hardware stack levels required when called: 1
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_setMotorPWM
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text58
 12149  004F9A                     __ptext58:
 12150                           	callstack 0
 12151  004F9A                     ___awdiv:
 12152                           	callstack 26
 12153  004F9A  0E00               	movlw	0
 12154  004F9C  6E0C               	movwf	___awdiv@sign^0,c
 12155  004F9E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 12156  004FA0  EFD6  F027         	goto	u3100
 12157  004FA4  EFD4  F027         	goto	u3101
 12158  004FA8                     u3101:
 12159  004FA8  EFDC  F027         	goto	l3802
 12160  004FAC                     u3100:
 12161  004FAC  6C09               	negf	___awdiv@divisor^0,c
 12162  004FAE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 12163  004FB0  B0D8               	btfsc	status,0,c
 12164  004FB2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 12165  004FB4  0E01               	movlw	1
 12166  004FB6  6E0C               	movwf	___awdiv@sign^0,c
 12167  004FB8                     l3802:
 12168  004FB8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 12169  004FBA  EFE3  F027         	goto	u3110
 12170  004FBE  EFE1  F027         	goto	u3111
 12171  004FC2                     u3111:
 12172  004FC2  EFE9  F027         	goto	l3808
 12173  004FC6                     u3110:
 12174  004FC6  6C07               	negf	___awdiv@dividend^0,c
 12175  004FC8  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 12176  004FCA  B0D8               	btfsc	status,0,c
 12177  004FCC  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 12178  004FCE  0E01               	movlw	1
 12179  004FD0  1A0C               	xorwf	___awdiv@sign^0,f,c
 12180  004FD2                     l3808:
 12181  004FD2  0E00               	movlw	0
 12182  004FD4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 12183  004FD6  0E00               	movlw	0
 12184  004FD8  6E0D               	movwf	___awdiv@quotient^0,c
 12185  004FDA  5009               	movf	___awdiv@divisor^0,w,c
 12186  004FDC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 12187  004FDE  B4D8               	btfsc	status,2,c
 12188  004FE0  EFF4  F027         	goto	u3121
 12189  004FE4  EFF6  F027         	goto	u3120
 12190  004FE8                     u3121:
 12191  004FE8  EF1E  F028         	goto	l3830
 12192  004FEC                     u3120:
 12193  004FEC  0E01               	movlw	1
 12194  004FEE  6E0B               	movwf	___awdiv@counter^0,c
 12195  004FF0  EFFE  F027         	goto	l3816
 12196  004FF4                     l3814:
 12197  004FF4  90D8               	bcf	status,0,c
 12198  004FF6  3609               	rlcf	___awdiv@divisor^0,f,c
 12199  004FF8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 12200  004FFA  2A0B               	incf	___awdiv@counter^0,f,c
 12201  004FFC                     l3816:
 12202  004FFC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 12203  004FFE  EF03  F028         	goto	u3131
 12204  005002  EF05  F028         	goto	u3130
 12205  005006                     u3131:
 12206  005006  EFFA  F027         	goto	l3814
 12207  00500A                     u3130:
 12208  00500A                     l3818:
 12209  00500A  90D8               	bcf	status,0,c
 12210  00500C  360D               	rlcf	___awdiv@quotient^0,f,c
 12211  00500E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 12212  005010  5009               	movf	___awdiv@divisor^0,w,c
 12213  005012  5C07               	subwf	___awdiv@dividend^0,w,c
 12214  005014  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12215  005016  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 12216  005018  A0D8               	btfss	status,0,c
 12217  00501A  EF11  F028         	goto	u3141
 12218  00501E  EF13  F028         	goto	u3140
 12219  005022                     u3141:
 12220  005022  EF18  F028         	goto	l3826
 12221  005026                     u3140:
 12222  005026  5009               	movf	___awdiv@divisor^0,w,c
 12223  005028  5E07               	subwf	___awdiv@dividend^0,f,c
 12224  00502A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12225  00502C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 12226  00502E  800D               	bsf	___awdiv@quotient^0,0,c
 12227  005030                     l3826:
 12228  005030  90D8               	bcf	status,0,c
 12229  005032  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 12230  005034  3209               	rrcf	___awdiv@divisor^0,f,c
 12231  005036  2E0B               	decfsz	___awdiv@counter^0,f,c
 12232  005038  EF05  F028         	goto	l3818
 12233  00503C                     l3830:
 12234  00503C  500C               	movf	___awdiv@sign^0,w,c
 12235  00503E  B4D8               	btfsc	status,2,c
 12236  005040  EF24  F028         	goto	u3151
 12237  005044  EF26  F028         	goto	u3150
 12238  005048                     u3151:
 12239  005048  EF2A  F028         	goto	l3834
 12240  00504C                     u3150:
 12241  00504C  6C0D               	negf	___awdiv@quotient^0,c
 12242  00504E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 12243  005050  B0D8               	btfsc	status,0,c
 12244  005052  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 12245  005054                     l3834:
 12246  005054  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12247  005058  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12248  00505C  0012               	return		;funcret
 12249  00505E                     __end_of___awdiv:
 12250                           	callstack 0
 12251                           
 12252 ;; *************** function _color_predict *****************
 12253 ;; Defined at:
 12254 ;;		line 250 in file "color.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;  color           1    wreg     unsigned char 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  color           1  125[BANK0 ] unsigned char 
 12259 ;;  buf           100   25[BANK0 ] unsigned char [100]
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12273 ;;Total ram usage:      101 bytes
 12274 ;; Hardware stack levels used: 1
 12275 ;; Hardware stack levels required when called: 9
 12276 ;; This function calls:
 12277 ;;		_sendStringSerial4
 12278 ;;		_sprintf
 12279 ;; This function is called by:
 12280 ;;		_color_data_collection
 12281 ;;		_main
 12282 ;;		_goback
 12283 ;;		_test_function
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text59
 12288  005A44                     __ptext59:
 12289                           	callstack 0
 12290  005A44                     _color_predict:
 12291                           	callstack 20
 12292                           
 12293                           ;incstack = 0
 12294                           ;color_predict@color stored from wreg
 12295  005A44  0100               	movlb	0	; () banked
 12296  005A46  6FDD               	movwf	color_predict@color& (0+255),b
 12297  005A48                     
 12298                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 12299  005A48  0E79               	movlw	low color_predict@buf
 12300  005A4A  0100               	movlb	0	; () banked
 12301  005A4C  6F60               	movwf	sprintf@s& (0+255),b
 12302  005A4E  0E00               	movlw	high color_predict@buf
 12303  005A50  6F61               	movwf	(sprintf@s+1)& (0+255),b
 12304  005A52  0E1E               	movlw	low (STR_1+8)
 12305  005A54  6F62               	movwf	sprintf@fmt& (0+255),b
 12306  005A56  0E0E               	movlw	high (STR_1+8)
 12307  005A58  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 12308  005A5A  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 12309  005A5E  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12310  005A60  ECCF  F02A         	call	_sprintf	;wreg free
 12311  005A64                     
 12312                           ;color.c: 254:     sendStringSerial4(buf);
 12313  005A64  0E79               	movlw	low color_predict@buf
 12314  005A66  6E02               	movwf	sendStringSerial4@string^0,c
 12315  005A68  0E00               	movlw	high color_predict@buf
 12316  005A6A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 12317  005A6C  EC0A  F02D         	call	_sendStringSerial4	;wreg free
 12318  005A70  0012               	return		;funcret
 12319  005A72                     __end_of_color_predict:
 12320                           	callstack 0
 12321                           
 12322 ;; *************** function _sprintf *****************
 12323 ;; Defined at:
 12324 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  s               2    0[BANK0 ] PTR unsigned char 
 12327 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 12328 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 12329 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 12330 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12331 ;;		 -> STR_2(6), STR_1(14), 
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;  f              11   14[BANK0 ] struct _IO_FILE
 12334 ;;  ap              2   12[BANK0 ] PTR void [1]
 12335 ;;		 -> ?_sprintf(2), 
 12336 ;;  ret             2    0        int 
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  2    0[BANK0 ] int 
 12339 ;; Registers used:
 12340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12346 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12347 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12349 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12350 ;;Total ram usage:       25 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 8
 12353 ;; This function calls:
 12354 ;;		_vfprintf
 12355 ;; This function is called by:
 12356 ;;		_color_display
 12357 ;;		_color_predict
 12358 ;;		_action
 12359 ;;		_goback
 12360 ;; This function uses a non-reentrant model
 12361 ;;
 12362                           
 12363                           	psect	text60
 12364  00559E                     __ptext60:
 12365                           	callstack 0
 12366  00559E                     _sprintf:
 12367                           	callstack 20
 12368  00559E  0E64               	movlw	low (?_sprintf+4)
 12369  0055A0  0100               	movlb	0	; () banked
 12370  0055A2  6F6C               	movwf	sprintf@ap& (0+255),b
 12371  0055A4  0E00               	movlw	high (?_sprintf+4)
 12372  0055A6  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 12373  0055A8  C060  F06E         	movff	sprintf@s,sprintf@f
 12374  0055AC  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 12375  0055B0                     
 12376                           ; BSR set to: 0
 12377  0055B0  0E00               	movlw	0
 12378  0055B2  6F72               	movwf	(sprintf@f+4)& (0+255),b
 12379  0055B4  0E00               	movlw	0
 12380  0055B6  6F71               	movwf	(sprintf@f+3)& (0+255),b
 12381  0055B8                     
 12382                           ; BSR set to: 0
 12383  0055B8  0E00               	movlw	0
 12384  0055BA  6F78               	movwf	(sprintf@f+10)& (0+255),b
 12385  0055BC  0E00               	movlw	0
 12386  0055BE  6F77               	movwf	(sprintf@f+9)& (0+255),b
 12387  0055C0                     
 12388                           ; BSR set to: 0
 12389  0055C0  0E6E               	movlw	low sprintf@f
 12390  0055C2  6E50               	movwf	vfprintf@fp^0,c
 12391  0055C4  0E00               	movlw	high sprintf@f
 12392  0055C6  6E51               	movwf	(vfprintf@fp+1)^0,c
 12393  0055C8  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 12394  0055CC  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 12395  0055D0  0E6C               	movlw	low sprintf@ap
 12396  0055D2  6E54               	movwf	vfprintf@ap^0,c
 12397  0055D4  0E00               	movlw	high sprintf@ap
 12398  0055D6  6E55               	movwf	(vfprintf@ap+1)^0,c
 12399  0055D8  EC44  F02A         	call	_vfprintf	;wreg free
 12400  0055DC  0100               	movlb	0	; () banked
 12401  0055DE  5171               	movf	(sprintf@f+3)& (0+255),w,b
 12402  0055E0  2560               	addwf	sprintf@s& (0+255),w,b
 12403  0055E2  6ED9               	movwf	fsr2l,c
 12404  0055E4  5172               	movf	(sprintf@f+4)& (0+255),w,b
 12405  0055E6  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 12406  0055E8  6EDA               	movwf	fsr2h,c
 12407  0055EA  0E00               	movlw	0
 12408  0055EC  6EDF               	movwf	indf2,c
 12409  0055EE                     
 12410                           ; BSR set to: 0
 12411  0055EE  0012               	return		;funcret
 12412  0055F0                     __end_of_sprintf:
 12413                           	callstack 0
 12414                           
 12415 ;; *************** function _vfprintf *****************
 12416 ;; Defined at:
 12417 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 12420 ;;		 -> sprintf@f(11), 
 12421 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 12422 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12423 ;;		 -> STR_2(6), STR_1(14), 
 12424 ;;  ap              2   83[COMRAM] PTR PTR void 
 12425 ;;		 -> sprintf@ap(2), 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 12428 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12429 ;;		 -> STR_2(6), STR_1(14), 
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  2   79[COMRAM] int 
 12432 ;; Registers used:
 12433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12439 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12443 ;;Total ram usage:        8 bytes
 12444 ;; Hardware stack levels used: 1
 12445 ;; Hardware stack levels required when called: 7
 12446 ;; This function calls:
 12447 ;;		_vfpfcnvrt
 12448 ;; This function is called by:
 12449 ;;		_sprintf
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           	psect	text61
 12454  005488                     __ptext61:
 12455                           	callstack 0
 12456  005488                     _vfprintf:
 12457                           	callstack 20
 12458  005488                     
 12459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12460  005488  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12461  00548C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12462  005490                     
 12463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12464  005490  0E00               	movlw	0
 12465  005492  0101               	movlb	1	; () banked
 12466  005494  6FF5               	movwf	(_nout+1)& (0+255),b
 12467  005496  0E00               	movlw	0
 12468  005498  6FF4               	movwf	_nout& (0+255),b
 12469                           
 12470                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12471  00549A  EF62  F02A         	goto	l4390
 12472  00549E                     l4388:
 12473                           
 12474                           ; BSR set to: 1
 12475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12476  00549E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12477  0054A2  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12478  0054A6  0E56               	movlw	low vfprintf@cfmt
 12479  0054A8  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12480  0054AA  0E00               	movlw	high vfprintf@cfmt
 12481  0054AC  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12482  0054AE  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12483  0054B2  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12484  0054B6  ECFC  F01F         	call	_vfpfcnvrt	;wreg free
 12485  0054BA  5040               	movf	?_vfpfcnvrt^0,w,c
 12486  0054BC  0101               	movlb	1	; () banked
 12487  0054BE  27F4               	addwf	_nout& (0+255),f,b
 12488  0054C0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12489  0054C2  23F5               	addwfc	(_nout+1)& (0+255),f,b
 12490  0054C4                     l4390:
 12491                           
 12492                           ; BSR set to: 1
 12493                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12494  0054C4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12495  0054C8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12496  0054CC                     	if	0	;tblptru may be non-zero
 12497  0054CC                     	endif
 12498  0054CC                     	if	0	;tblptru may be non-zero
 12499  0054CC                     	endif
 12500  0054CC  0008               	tblrd		*
 12501  0054CE  50F5               	movf	tablat,w,c
 12502  0054D0  0900               	iorlw	0
 12503  0054D2  A4D8               	btfss	status,2,c
 12504  0054D4  EF6E  F02A         	goto	u4121
 12505  0054D8  EF70  F02A         	goto	u4120
 12506  0054DC                     u4121:
 12507  0054DC  EF4F  F02A         	goto	l4388
 12508  0054E0                     u4120:
 12509  0054E0                     
 12510                           ; BSR set to: 1
 12511                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12512  0054E0  C1F4  F050         	movff	_nout,?_vfprintf
 12513  0054E4  C1F5  F051         	movff	_nout+1,?_vfprintf+1
 12514  0054E8                     
 12515                           ; BSR set to: 1
 12516  0054E8  0012               	return		;funcret
 12517  0054EA                     __end_of_vfprintf:
 12518                           	callstack 0
 12519                           
 12520 ;; *************** function _vfpfcnvrt *****************
 12521 ;; Defined at:
 12522 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12525 ;;		 -> sprintf@f(11), 
 12526 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12527 ;;		 -> vfprintf@cfmt(2), 
 12528 ;;  ap              2   67[COMRAM] PTR PTR void 
 12529 ;;		 -> sprintf@ap(2), 
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;  ll              8   71[COMRAM] long long 
 12532 ;;  llu             8    0        unsigned long long 
 12533 ;;  f               4    0        unsigned long long 
 12534 ;;  vp              3    0        PTR void 
 12535 ;;  ct              3    0        unsigned char [3]
 12536 ;;  cp              3    0        PTR unsigned char 
 12537 ;;  i               2    0        int 
 12538 ;;  done            2    0        int 
 12539 ;;  c               1    0        unsigned char 
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  2   63[COMRAM] int 
 12542 ;; Registers used:
 12543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12549 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12550 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12552 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12553 ;;Total ram usage:       16 bytes
 12554 ;; Hardware stack levels used: 1
 12555 ;; Hardware stack levels required when called: 6
 12556 ;; This function calls:
 12557 ;;		_dtoa
 12558 ;;		_fputc
 12559 ;; This function is called by:
 12560 ;;		_vfprintf
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text62
 12565  003FF8                     __ptext62:
 12566                           	callstack 0
 12567  003FF8                     _vfpfcnvrt:
 12568                           	callstack 20
 12569  003FF8                     
 12570                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12571  003FF8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12572  003FFC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12573  004000  CFDE FFF6          	movff	postinc2,tblptrl
 12574  004004  CFDD FFF7          	movff	postdec2,tblptrh
 12575  004008                     	if	0	;tblptru may be non-zero
 12576  004008                     	endif
 12577  004008                     	if	0	;tblptru may be non-zero
 12578  004008                     	endif
 12579  004008  0008               	tblrd		*
 12580  00400A  50F5               	movf	tablat,w,c
 12581  00400C  0A25               	xorlw	37
 12582  00400E  A4D8               	btfss	status,2,c
 12583  004010  EF0C  F020         	goto	u3761
 12584  004014  EF0E  F020         	goto	u3760
 12585  004018                     u3761:
 12586  004018  EFBA  F020         	goto	l4154
 12587  00401C                     u3760:
 12588  00401C                     
 12589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12590  00401C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12591  004020  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12592  004024  2ADE               	incf	postinc2,f,c
 12593  004026  0E00               	movlw	0
 12594  004028  22DD               	addwfc	postdec2,f,c
 12595  00402A                     
 12596                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12597  00402A  0E00               	movlw	0
 12598  00402C  0101               	movlb	1	; () banked
 12599  00402E  6FF7               	movwf	(_width+1)& (0+255),b
 12600  004030  0E00               	movlw	0
 12601  004032  6FF6               	movwf	_width& (0+255),b
 12602  004034  C1F6  F0F8         	movff	_width,_flags
 12603  004038  C1F7  F0F9         	movff	_width+1,_flags+1
 12604  00403C                     
 12605                           ; BSR set to: 1
 12606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12607  00403C  69F8               	setf	_prec& (0+255),b
 12608  00403E  69F9               	setf	(_prec+1)& (0+255),b
 12609  004040                     
 12610                           ; BSR set to: 1
 12611                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12612  004040  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12613  004044  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12614  004048  CFDE FFF6          	movff	postinc2,tblptrl
 12615  00404C  CFDD FFF7          	movff	postdec2,tblptrh
 12616  004050                     	if	0	;tblptru may be non-zero
 12617  004050                     	endif
 12618  004050                     	if	0	;tblptru may be non-zero
 12619  004050                     	endif
 12620  004050  0008               	tblrd		*
 12621  004052  50F5               	movf	tablat,w,c
 12622  004054  0A64               	xorlw	100
 12623  004056  B4D8               	btfsc	status,2,c
 12624  004058  EF30  F020         	goto	u3771
 12625  00405C  EF32  F020         	goto	u3770
 12626  004060                     u3771:
 12627  004060  EF44  F020         	goto	l4132
 12628  004064                     u3770:
 12629  004064                     
 12630                           ; BSR set to: 1
 12631  004064  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12632  004068  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12633  00406C  CFDE FFF6          	movff	postinc2,tblptrl
 12634  004070  CFDD FFF7          	movff	postdec2,tblptrh
 12635  004074                     	if	0	;tblptru may be non-zero
 12636  004074                     	endif
 12637  004074                     	if	0	;tblptru may be non-zero
 12638  004074                     	endif
 12639  004074  0008               	tblrd		*
 12640  004076  50F5               	movf	tablat,w,c
 12641  004078  0A69               	xorlw	105
 12642  00407A  A4D8               	btfss	status,2,c
 12643  00407C  EF42  F020         	goto	u3781
 12644  004080  EF44  F020         	goto	u3780
 12645  004084                     u3781:
 12646  004084  EF84  F020         	goto	l4138
 12647  004088                     u3780:
 12648  004088                     l4132:
 12649                           
 12650                           ; BSR set to: 1
 12651                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12652  004088  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12653  00408C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12654  004090  2ADE               	incf	postinc2,f,c
 12655  004092  0E00               	movlw	0
 12656  004094  22DD               	addwfc	postdec2,f,c
 12657                           
 12658                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12659  004096  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12660  00409A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12661  00409E  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12662  0040A2  0E02               	movlw	2
 12663  0040A4  26DE               	addwf	postinc2,f,c
 12664  0040A6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12665  0040AA  0E00               	movlw	0
 12666  0040AC  22DD               	addwfc	postdec2,f,c
 12667  0040AE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12668  0040B2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12669  0040B6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12670  0040BA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12671  0040BE  0E00               	movlw	0
 12672  0040C0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12673  0040C2  0EFF               	movlw	-1
 12674  0040C4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12675  0040C6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12676  0040C8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12677  0040CA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12678  0040CC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12679  0040CE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12680  0040D0                     
 12681                           ; BSR set to: 1
 12682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12683  0040D0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12684  0040D4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12685  0040D8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12686  0040DC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12687  0040E0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12688  0040E4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12689  0040E8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12690  0040EC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12691  0040F0  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12692  0040F4  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12693  0040F8  EC99  F018         	call	_dtoa	;wreg free
 12694  0040FC  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12695  004100  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12696  004104  EFD5  F020         	goto	l1542
 12697  004108                     l4138:
 12698                           
 12699                           ; BSR set to: 1
 12700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12701  004108  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12702  00410C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12703  004110  CFDE FFF6          	movff	postinc2,tblptrl
 12704  004114  CFDD FFF7          	movff	postdec2,tblptrh
 12705  004118                     	if	0	;tblptru may be non-zero
 12706  004118                     	endif
 12707  004118                     	if	0	;tblptru may be non-zero
 12708  004118                     	endif
 12709  004118  0008               	tblrd		*
 12710  00411A  50F5               	movf	tablat,w,c
 12711  00411C  0A25               	xorlw	37
 12712  00411E  A4D8               	btfss	status,2,c
 12713  004120  EF94  F020         	goto	u3791
 12714  004124  EF96  F020         	goto	u3790
 12715  004128                     u3791:
 12716  004128  EFAD  F020         	goto	l4148
 12717  00412C                     u3790:
 12718  00412C                     
 12719                           ; BSR set to: 1
 12720                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12721  00412C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12722  004130  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12723  004134  2ADE               	incf	postinc2,f,c
 12724  004136  0E00               	movlw	0
 12725  004138  22DD               	addwfc	postdec2,f,c
 12726  00413A                     
 12727                           ; BSR set to: 1
 12728                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12729  00413A  0E00               	movlw	0
 12730  00413C  6E02               	movwf	(fputc@c+1)^0,c
 12731  00413E  0E25               	movlw	37
 12732  004140  6E01               	movwf	fputc@c^0,c
 12733  004142  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12734  004146  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12735  00414A  ECA2  F026         	call	_fputc	;wreg free
 12736  00414E                     l4144:
 12737                           
 12738                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12739  00414E  0E00               	movlw	0
 12740  004150  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12741  004152  0E01               	movlw	1
 12742  004154  6E40               	movwf	?_vfpfcnvrt^0,c
 12743  004156  EFD5  F020         	goto	l1542
 12744  00415A                     l4148:
 12745                           
 12746                           ; BSR set to: 1
 12747                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12748  00415A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12749  00415E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12750  004162  2ADE               	incf	postinc2,f,c
 12751  004164  0E00               	movlw	0
 12752  004166  22DD               	addwfc	postdec2,f,c
 12753  004168                     
 12754                           ; BSR set to: 1
 12755                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12756  004168  0E00               	movlw	0
 12757  00416A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12758  00416C  0E00               	movlw	0
 12759  00416E  6E40               	movwf	?_vfpfcnvrt^0,c
 12760  004170  EFD5  F020         	goto	l1542
 12761  004174                     l4154:
 12762                           
 12763                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12764  004174  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12765  004178  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12766  00417C  CFDE FFF6          	movff	postinc2,tblptrl
 12767  004180  CFDD FFF7          	movff	postdec2,tblptrh
 12768  004184                     	if	0	;tblptru may be non-zero
 12769  004184                     	endif
 12770  004184                     	if	0	;tblptru may be non-zero
 12771  004184                     	endif
 12772  004184  0008               	tblrd		*
 12773  004186  50F5               	movf	tablat,w,c
 12774  004188  6E01               	movwf	fputc@c^0,c
 12775  00418A  6A02               	clrf	(fputc@c+1)^0,c
 12776  00418C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12777  004190  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12778  004194  ECA2  F026         	call	_fputc	;wreg free
 12779  004198                     
 12780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12781  004198  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12782  00419C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12783  0041A0  2ADE               	incf	postinc2,f,c
 12784  0041A2  0E00               	movlw	0
 12785  0041A4  22DD               	addwfc	postdec2,f,c
 12786  0041A6  EFA7  F020         	goto	l4144
 12787  0041AA                     l1542:
 12788  0041AA  0012               	return		;funcret
 12789  0041AC                     __end_of_vfpfcnvrt:
 12790                           	callstack 0
 12791                           
 12792 ;; *************** function _dtoa *****************
 12793 ;; Defined at:
 12794 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12797 ;;		 -> sprintf@f(11), 
 12798 ;;  d               8   29[COMRAM] long long 
 12799 ;; Auto vars:     Size  Location     Type
 12800 ;;  n               8   53[COMRAM] long long 
 12801 ;;  i               2   61[COMRAM] int 
 12802 ;;  s               2   51[COMRAM] int 
 12803 ;;  w               2   49[COMRAM] int 
 12804 ;;  p               2   47[COMRAM] int 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  2   27[COMRAM] int 
 12807 ;; Registers used:
 12808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12814 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12815 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12816 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12817 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12818 ;;Total ram usage:       36 bytes
 12819 ;; Hardware stack levels used: 1
 12820 ;; Hardware stack levels required when called: 5
 12821 ;; This function calls:
 12822 ;;		___aodiv
 12823 ;;		___aomod
 12824 ;;		_abs
 12825 ;;		_pad
 12826 ;; This function is called by:
 12827 ;;		_vfpfcnvrt
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text63
 12832  003132                     __ptext63:
 12833                           	callstack 0
 12834  003132                     _dtoa:
 12835                           	callstack 20
 12836  003132                     
 12837                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12838  003132  C01E  F036         	movff	dtoa@d,dtoa@n
 12839  003136  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12840  00313A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12841  00313E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12842  003142  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12843  003146  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12844  00314A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12845  00314E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12846  003152                     
 12847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12848  003152  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12849  003154  EFAE  F018         	goto	u3161
 12850  003158  EFB1  F018         	goto	u3160
 12851  00315C                     u3161:
 12852  00315C  0E01               	movlw	1
 12853  00315E  EFB2  F018         	goto	u3170
 12854  003162                     u3160:
 12855  003162  0E00               	movlw	0
 12856  003164                     u3170:
 12857  003164  6E34               	movwf	dtoa@s^0,c
 12858  003166  6A35               	clrf	(dtoa@s+1)^0,c
 12859                           
 12860                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12861  003168  5034               	movf	dtoa@s^0,w,c
 12862  00316A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12863  00316C  B4D8               	btfsc	status,2,c
 12864  00316E  EFBB  F018         	goto	u3181
 12865  003172  EFBD  F018         	goto	u3180
 12866  003176                     u3181:
 12867  003176  EFCD  F018         	goto	l3844
 12868  00317A                     u3180:
 12869  00317A                     
 12870                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12871  00317A  1E3D               	comf	(dtoa@n+7)^0,f,c
 12872  00317C  1E3C               	comf	(dtoa@n+6)^0,f,c
 12873  00317E  1E3B               	comf	(dtoa@n+5)^0,f,c
 12874  003180  1E3A               	comf	(dtoa@n+4)^0,f,c
 12875  003182  1E39               	comf	(dtoa@n+3)^0,f,c
 12876  003184  1E38               	comf	(dtoa@n+2)^0,f,c
 12877  003186  1E37               	comf	(dtoa@n+1)^0,f,c
 12878  003188  6C36               	negf	dtoa@n^0,c
 12879  00318A  0E00               	movlw	0
 12880  00318C  2237               	addwfc	(dtoa@n+1)^0,f,c
 12881  00318E  2238               	addwfc	(dtoa@n+2)^0,f,c
 12882  003190  2239               	addwfc	(dtoa@n+3)^0,f,c
 12883  003192  223A               	addwfc	(dtoa@n+4)^0,f,c
 12884  003194  223B               	addwfc	(dtoa@n+5)^0,f,c
 12885  003196  223C               	addwfc	(dtoa@n+6)^0,f,c
 12886  003198  223D               	addwfc	(dtoa@n+7)^0,f,c
 12887  00319A                     l3844:
 12888                           
 12889                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12890  00319A  0101               	movlb	1	; () banked
 12891  00319C  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12892  00319E  EFD3  F018         	goto	u3191
 12893  0031A2  EFD5  F018         	goto	u3190
 12894  0031A6                     u3191:
 12895  0031A6  EFD7  F018         	goto	l3848
 12896  0031AA                     u3190:
 12897  0031AA                     
 12898                           ; BSR set to: 1
 12899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12900  0031AA  0100               	movlb	0	; () banked
 12901  0031AC  93F8               	bcf	_flags& (0+255),1,b
 12902  0031AE                     l3848:
 12903                           
 12904                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12905  0031AE  0101               	movlb	1	; () banked
 12906  0031B0  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12907  0031B2  EFE5  F018         	goto	u3200
 12908  0031B6  51F9               	movf	(_prec+1)& (0+255),w,b
 12909  0031B8  E106               	bnz	u3201
 12910  0031BA  05F8               	decf	_prec& (0+255),w,b
 12911  0031BC  B0D8               	btfsc	status,0,c
 12912  0031BE  EFE3  F018         	goto	u3201
 12913  0031C2  EFE5  F018         	goto	u3200
 12914  0031C6                     u3201:
 12915  0031C6  EFEB  F018         	goto	l1515
 12916  0031CA                     u3200:
 12917  0031CA                     
 12918                           ; BSR set to: 1
 12919  0031CA  0E00               	movlw	0
 12920  0031CC  6E31               	movwf	(dtoa@p+1)^0,c
 12921  0031CE  0E01               	movlw	1
 12922  0031D0  6E30               	movwf	dtoa@p^0,c
 12923  0031D2  EFEF  F018         	goto	l1517
 12924  0031D6                     l1515:
 12925                           
 12926                           ; BSR set to: 1
 12927  0031D6  C1F8  F030         	movff	_prec,dtoa@p
 12928  0031DA  C1F9  F031         	movff	_prec+1,dtoa@p+1
 12929  0031DE                     l1517:
 12930                           
 12931                           ; BSR set to: 1
 12932                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12933  0031DE  C1F6  F032         	movff	_width,dtoa@w
 12934  0031E2  C1F7  F033         	movff	_width+1,dtoa@w+1
 12935  0031E6                     
 12936                           ; BSR set to: 1
 12937                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12938  0031E6  5034               	movf	dtoa@s^0,w,c
 12939  0031E8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12940  0031EA  A4D8               	btfss	status,2,c
 12941  0031EC  EFFA  F018         	goto	u3211
 12942  0031F0  EFFC  F018         	goto	u3210
 12943  0031F4                     u3211:
 12944  0031F4  EF04  F019         	goto	l3856
 12945  0031F8                     u3210:
 12946  0031F8                     
 12947                           ; BSR set to: 1
 12948  0031F8  0100               	movlb	0	; () banked
 12949  0031FA  A5F8               	btfss	_flags& (0+255),2,b
 12950  0031FC  EF02  F019         	goto	u3221
 12951  003200  EF04  F019         	goto	u3220
 12952  003204                     u3221:
 12953  003204  EF07  F019         	goto	l3858
 12954  003208                     u3220:
 12955  003208                     l3856:
 12956                           
 12957                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12958  003208  0632               	decf	dtoa@w^0,f,c
 12959  00320A  A0D8               	btfss	status,0,c
 12960  00320C  0633               	decf	(dtoa@w+1)^0,f,c
 12961  00320E                     l3858:
 12962                           
 12963                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12964  00320E  0E00               	movlw	0
 12965  003210  6E3F               	movwf	(dtoa@i+1)^0,c
 12966  003212  0E1F               	movlw	31
 12967  003214  6E3E               	movwf	dtoa@i^0,c
 12968  003216                     
 12969                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12970  003216  0E00               	movlw	0
 12971  003218  0102               	movlb	2	; () banked
 12972  00321A  6FE8               	movwf	(_dbuf+31)& (0+255),b
 12973                           
 12974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12975  00321C  EF8C  F019         	goto	l3872
 12976  003220                     l3862:
 12977                           
 12978                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12979  003220  063E               	decf	dtoa@i^0,f,c
 12980  003222  A0D8               	btfss	status,0,c
 12981  003224  063F               	decf	(dtoa@i+1)^0,f,c
 12982  003226                     
 12983                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12984  003226  0EC9               	movlw	low _dbuf
 12985  003228  243E               	addwf	dtoa@i^0,w,c
 12986  00322A  6ED9               	movwf	fsr2l,c
 12987  00322C  0E02               	movlw	high _dbuf
 12988  00322E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12989  003230  6EDA               	movwf	fsr2h,c
 12990  003232  C036  F001         	movff	dtoa@n,___aomod@dividend
 12991  003236  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12992  00323A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12993  00323E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12994  003242  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12995  003246  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12996  00324A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12997  00324E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12998  003252  0E0A               	movlw	10
 12999  003254  6E09               	movwf	___aomod@divisor^0,c
 13000  003256  0E00               	movlw	0
 13001  003258  6E0A               	movwf	(___aomod@divisor+1)^0,c
 13002  00325A  0E00               	movlw	0
 13003  00325C  6E0B               	movwf	(___aomod@divisor+2)^0,c
 13004  00325E  0E00               	movlw	0
 13005  003260  6E0C               	movwf	(___aomod@divisor+3)^0,c
 13006  003262  0E00               	movlw	0
 13007  003264  6E0D               	movwf	(___aomod@divisor+4)^0,c
 13008  003266  0E00               	movlw	0
 13009  003268  6E0E               	movwf	(___aomod@divisor+5)^0,c
 13010  00326A  0E00               	movlw	0
 13011  00326C  6E0F               	movwf	(___aomod@divisor+6)^0,c
 13012  00326E  0E00               	movlw	0
 13013  003270  6E10               	movwf	(___aomod@divisor+7)^0,c
 13014  003272  ECED  F023         	call	___aomod	;wreg free
 13015  003276  C001  F026         	movff	?___aomod,??_dtoa
 13016  00327A  C002  F027         	movff	?___aomod+1,??_dtoa+1
 13017  00327E  C003  F028         	movff	?___aomod+2,??_dtoa+2
 13018  003282  C004  F029         	movff	?___aomod+3,??_dtoa+3
 13019  003286  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 13020  00328A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 13021  00328E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 13022  003292  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 13023  003296  C026  F013         	movff	??_dtoa,abs@a
 13024  00329A  C028  F014         	movff	??_dtoa+2,abs@a+1
 13025  00329E  EC5F  F02C         	call	_abs	;wreg free
 13026  0032A2  5013               	movf	?_abs^0,w,c
 13027  0032A4  0F30               	addlw	48
 13028  0032A6  6EDF               	movwf	indf2,c
 13029  0032A8                     
 13030                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 13031  0032A8  0630               	decf	dtoa@p^0,f,c
 13032  0032AA  A0D8               	btfss	status,0,c
 13033  0032AC  0631               	decf	(dtoa@p+1)^0,f,c
 13034  0032AE                     
 13035                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 13036  0032AE  0632               	decf	dtoa@w^0,f,c
 13037  0032B0  A0D8               	btfss	status,0,c
 13038  0032B2  0633               	decf	(dtoa@w+1)^0,f,c
 13039  0032B4                     
 13040                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 13041  0032B4  C036  F001         	movff	dtoa@n,___aodiv@dividend
 13042  0032B8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 13043  0032BC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 13044  0032C0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 13045  0032C4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 13046  0032C8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 13047  0032CC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 13048  0032D0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 13049  0032D4  0E0A               	movlw	10
 13050  0032D6  6E09               	movwf	___aodiv@divisor^0,c
 13051  0032D8  0E00               	movlw	0
 13052  0032DA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 13053  0032DC  0E00               	movlw	0
 13054  0032DE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 13055  0032E0  0E00               	movlw	0
 13056  0032E2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 13057  0032E4  0E00               	movlw	0
 13058  0032E6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 13059  0032E8  0E00               	movlw	0
 13060  0032EA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 13061  0032EC  0E00               	movlw	0
 13062  0032EE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 13063  0032F0  0E00               	movlw	0
 13064  0032F2  6E10               	movwf	(___aodiv@divisor+7)^0,c
 13065  0032F4  EC29  F023         	call	___aodiv	;wreg free
 13066  0032F8  C001  F036         	movff	?___aodiv,dtoa@n
 13067  0032FC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 13068  003300  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 13069  003304  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 13070  003308  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 13071  00330C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 13072  003310  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 13073  003314  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 13074  003318                     l3872:
 13075                           
 13076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13077  003318  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 13078  00331A  EF97  F019         	goto	u3231
 13079  00331E  503F               	movf	(dtoa@i+1)^0,w,c
 13080  003320  E108               	bnz	u3230
 13081  003322  043E               	decf	dtoa@i^0,w,c
 13082  003324  A0D8               	btfss	status,0,c
 13083  003326  EF97  F019         	goto	u3231
 13084  00332A  EF99  F019         	goto	u3230
 13085  00332E                     u3231:
 13086  00332E  EFCA  F019         	goto	l3882
 13087  003332                     u3230:
 13088  003332  5036               	movf	dtoa@n^0,w,c
 13089  003334  1037               	iorwf	(dtoa@n+1)^0,w,c
 13090  003336  1038               	iorwf	(dtoa@n+2)^0,w,c
 13091  003338  1039               	iorwf	(dtoa@n+3)^0,w,c
 13092  00333A  103A               	iorwf	(dtoa@n+4)^0,w,c
 13093  00333C  103B               	iorwf	(dtoa@n+5)^0,w,c
 13094  00333E  103C               	iorwf	(dtoa@n+6)^0,w,c
 13095  003340  103D               	iorwf	(dtoa@n+7)^0,w,c
 13096  003342  A4D8               	btfss	status,2,c
 13097  003344  EFA6  F019         	goto	u3241
 13098  003348  EFA8  F019         	goto	u3240
 13099  00334C                     u3241:
 13100  00334C  EF10  F019         	goto	l3862
 13101  003350                     u3240:
 13102  003350  BE31               	btfsc	(dtoa@p+1)^0,7,c
 13103  003352  EFB5  F019         	goto	u3250
 13104  003356  5031               	movf	(dtoa@p+1)^0,w,c
 13105  003358  E106               	bnz	u3251
 13106  00335A  0430               	decf	dtoa@p^0,w,c
 13107  00335C  B0D8               	btfsc	status,0,c
 13108  00335E  EFB3  F019         	goto	u3251
 13109  003362  EFB5  F019         	goto	u3250
 13110  003366                     u3251:
 13111  003366  EF10  F019         	goto	l3862
 13112  00336A                     u3250:
 13113  00336A  BE33               	btfsc	(dtoa@w+1)^0,7,c
 13114  00336C  EFC0  F019         	goto	u3261
 13115  003370  5033               	movf	(dtoa@w+1)^0,w,c
 13116  003372  E108               	bnz	u3260
 13117  003374  0432               	decf	dtoa@w^0,w,c
 13118  003376  A0D8               	btfss	status,0,c
 13119  003378  EFC0  F019         	goto	u3261
 13120  00337C  EFC2  F019         	goto	u3260
 13121  003380                     u3261:
 13122  003380  EFCA  F019         	goto	l3882
 13123  003384                     u3260:
 13124  003384  0100               	movlb	0	; () banked
 13125  003386  B3F8               	btfsc	_flags& (0+255),1,b
 13126  003388  EFC8  F019         	goto	u3271
 13127  00338C  EFCA  F019         	goto	u3270
 13128  003390                     u3271:
 13129  003390  EF10  F019         	goto	l3862
 13130  003394                     u3270:
 13131  003394                     l3882:
 13132                           
 13133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 13134  003394  5034               	movf	dtoa@s^0,w,c
 13135  003396  1035               	iorwf	(dtoa@s+1)^0,w,c
 13136  003398  A4D8               	btfss	status,2,c
 13137  00339A  EFD1  F019         	goto	u3281
 13138  00339E  EFD3  F019         	goto	u3280
 13139  0033A2                     u3281:
 13140  0033A2  EFDB  F019         	goto	l3886
 13141  0033A6                     u3280:
 13142  0033A6  0100               	movlb	0	; () banked
 13143  0033A8  A5F8               	btfss	_flags& (0+255),2,b
 13144  0033AA  EFD9  F019         	goto	u3291
 13145  0033AE  EFDB  F019         	goto	u3290
 13146  0033B2                     u3291:
 13147  0033B2  EFF9  F019         	goto	l3896
 13148  0033B6                     u3290:
 13149  0033B6                     l3886:
 13150                           
 13151                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 13152  0033B6  063E               	decf	dtoa@i^0,f,c
 13153  0033B8  A0D8               	btfss	status,0,c
 13154  0033BA  063F               	decf	(dtoa@i+1)^0,f,c
 13155  0033BC                     
 13156                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 13157  0033BC  5034               	movf	dtoa@s^0,w,c
 13158  0033BE  1035               	iorwf	(dtoa@s+1)^0,w,c
 13159  0033C0  A4D8               	btfss	status,2,c
 13160  0033C2  EFE5  F019         	goto	u3301
 13161  0033C6  EFE7  F019         	goto	u3300
 13162  0033CA                     u3301:
 13163  0033CA  EFED  F019         	goto	l3892
 13164  0033CE                     u3300:
 13165  0033CE  0E00               	movlw	0
 13166  0033D0  6E2F               	movwf	(_dtoa$2913+1)^0,c
 13167  0033D2  0E2B               	movlw	43
 13168  0033D4  6E2E               	movwf	_dtoa$2913^0,c
 13169  0033D6  EFF1  F019         	goto	l3894
 13170  0033DA                     l3892:
 13171  0033DA  0E00               	movlw	0
 13172  0033DC  6E2F               	movwf	(_dtoa$2913+1)^0,c
 13173  0033DE  0E2D               	movlw	45
 13174  0033E0  6E2E               	movwf	_dtoa$2913^0,c
 13175  0033E2                     l3894:
 13176  0033E2  0EC9               	movlw	low _dbuf
 13177  0033E4  243E               	addwf	dtoa@i^0,w,c
 13178  0033E6  6ED9               	movwf	fsr2l,c
 13179  0033E8  0E02               	movlw	high _dbuf
 13180  0033EA  203F               	addwfc	(dtoa@i+1)^0,w,c
 13181  0033EC  6EDA               	movwf	fsr2h,c
 13182  0033EE  C02E  FFDF         	movff	_dtoa$2913,indf2
 13183  0033F2                     l3896:
 13184                           
 13185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 13186  0033F2  C01C  F011         	movff	dtoa@fp,pad@fp
 13187  0033F6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13188  0033FA  0EC9               	movlw	low _dbuf
 13189  0033FC  243E               	addwf	dtoa@i^0,w,c
 13190  0033FE  6E13               	movwf	pad@buf^0,c
 13191  003400  0E02               	movlw	high _dbuf
 13192  003402  203F               	addwfc	(dtoa@i+1)^0,w,c
 13193  003404  6E14               	movwf	(pad@buf+1)^0,c
 13194  003406  C032  F015         	movff	dtoa@w,pad@p
 13195  00340A  C033  F016         	movff	dtoa@w+1,pad@p+1
 13196  00340E  EC6A  F027         	call	_pad	;wreg free
 13197  003412  C011  F01C         	movff	?_pad,?_dtoa
 13198  003416  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13199  00341A  0012               	return		;funcret
 13200  00341C                     __end_of_dtoa:
 13201                           	callstack 0
 13202                           
 13203 ;; *************** function _pad *****************
 13204 ;; Defined at:
 13205 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13208 ;;		 -> sprintf@f(11), 
 13209 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13210 ;;		 -> dbuf(32), 
 13211 ;;  p               2   20[COMRAM] int 
 13212 ;; Auto vars:     Size  Location     Type
 13213 ;;  w               2   25[COMRAM] int 
 13214 ;;  i               2   23[COMRAM] int 
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  2   16[COMRAM] int 
 13217 ;; Registers used:
 13218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13224 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13225 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13227 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13228 ;;Total ram usage:       11 bytes
 13229 ;; Hardware stack levels used: 1
 13230 ;; Hardware stack levels required when called: 4
 13231 ;; This function calls:
 13232 ;;		_fputc
 13233 ;;		_fputs
 13234 ;;		_strlen
 13235 ;; This function is called by:
 13236 ;;		_dtoa
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text64
 13241  004ED4                     __ptext64:
 13242                           	callstack 0
 13243  004ED4                     _pad:
 13244                           	callstack 20
 13245  004ED4                     
 13246                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13247  004ED4  0100               	movlb	0	; () banked
 13248  004ED6  A1F8               	btfss	_flags& (0+255),0,b
 13249  004ED8  EF70  F027         	goto	u3051
 13250  004EDC  EF72  F027         	goto	u3050
 13251  004EE0                     u3051:
 13252  004EE0  EF7C  F027         	goto	l3766
 13253  004EE4                     u3050:
 13254  004EE4                     
 13255                           ; BSR set to: 0
 13256                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13257  004EE4  C013  F00A         	movff	pad@buf,fputs@s
 13258  004EE8  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13259  004EEC  C011  F00C         	movff	pad@fp,fputs@fp
 13260  004EF0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13261  004EF4  ECBB  F02B         	call	_fputs	;wreg free
 13262  004EF8                     l3766:
 13263                           
 13264                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13265  004EF8  BE16               	btfsc	(pad@p+1)^0,7,c
 13266  004EFA  EF81  F027         	goto	u3061
 13267  004EFE  EF83  F027         	goto	u3060
 13268  004F02                     u3061:
 13269  004F02  EF89  F027         	goto	l3770
 13270  004F06                     u3060:
 13271  004F06  C015  F01A         	movff	pad@p,pad@w
 13272  004F0A  C016  F01B         	movff	pad@p+1,pad@w+1
 13273  004F0E  EF8D  F027         	goto	l1504
 13274  004F12                     l3770:
 13275  004F12  0E00               	movlw	0
 13276  004F14  6E1B               	movwf	(pad@w+1)^0,c
 13277  004F16  0E00               	movlw	0
 13278  004F18  6E1A               	movwf	pad@w^0,c
 13279  004F1A                     l1504:
 13280                           
 13281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13282  004F1A  0E00               	movlw	0
 13283  004F1C  6E19               	movwf	(pad@i+1)^0,c
 13284  004F1E  0E00               	movlw	0
 13285  004F20  6E18               	movwf	pad@i^0,c
 13286                           
 13287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13288  004F22  EF9F  F027         	goto	l3776
 13289  004F26                     l3772:
 13290                           
 13291                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13292  004F26  0E00               	movlw	0
 13293  004F28  6E02               	movwf	(fputc@c+1)^0,c
 13294  004F2A  0E20               	movlw	32
 13295  004F2C  6E01               	movwf	fputc@c^0,c
 13296  004F2E  C011  F003         	movff	pad@fp,fputc@fp
 13297  004F32  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13298  004F36  ECA2  F026         	call	_fputc	;wreg free
 13299  004F3A                     
 13300                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13301  004F3A  4A18               	infsnz	pad@i^0,f,c
 13302  004F3C  2A19               	incf	(pad@i+1)^0,f,c
 13303  004F3E                     l3776:
 13304                           
 13305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13306  004F3E  501A               	movf	pad@w^0,w,c
 13307  004F40  5C18               	subwf	pad@i^0,w,c
 13308  004F42  5019               	movf	(pad@i+1)^0,w,c
 13309  004F44  0A80               	xorlw	128
 13310  004F46  6E17               	movwf	??_pad^0,c
 13311  004F48  501B               	movf	(pad@w+1)^0,w,c
 13312  004F4A  0A80               	xorlw	128
 13313  004F4C  5817               	subwfb	??_pad^0,w,c
 13314  004F4E  A0D8               	btfss	status,0,c
 13315  004F50  EFAC  F027         	goto	u3071
 13316  004F54  EFAE  F027         	goto	u3070
 13317  004F58                     u3071:
 13318  004F58  EF93  F027         	goto	l3772
 13319  004F5C                     u3070:
 13320  004F5C                     
 13321                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13322  004F5C  0100               	movlb	0	; () banked
 13323  004F5E  B1F8               	btfsc	_flags& (0+255),0,b
 13324  004F60  EFB4  F027         	goto	u3081
 13325  004F64  EFB6  F027         	goto	u3080
 13326  004F68                     u3081:
 13327  004F68  EFC0  F027         	goto	l3780
 13328  004F6C                     u3080:
 13329  004F6C                     
 13330                           ; BSR set to: 0
 13331                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13332  004F6C  C013  F00A         	movff	pad@buf,fputs@s
 13333  004F70  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13334  004F74  C011  F00C         	movff	pad@fp,fputs@fp
 13335  004F78  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13336  004F7C  ECBB  F02B         	call	_fputs	;wreg free
 13337  004F80                     l3780:
 13338                           
 13339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13340  004F80  C013  F001         	movff	pad@buf,strlen@s
 13341  004F84  C014  F002         	movff	pad@buf+1,strlen@s+1
 13342  004F88  ECD5  F02C         	call	_strlen	;wreg free
 13343  004F8C  501A               	movf	pad@w^0,w,c
 13344  004F8E  2401               	addwf	?_strlen^0,w,c
 13345  004F90  6E11               	movwf	?_pad^0,c
 13346  004F92  501B               	movf	(pad@w+1)^0,w,c
 13347  004F94  2002               	addwfc	(?_strlen+1)^0,w,c
 13348  004F96  6E12               	movwf	(?_pad+1)^0,c
 13349  004F98  0012               	return		;funcret
 13350  004F9A                     __end_of_pad:
 13351                           	callstack 0
 13352                           
 13353 ;; *************** function _strlen *****************
 13354 ;; Defined at:
 13355 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13358 ;;		 -> dbuf(32), 
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13361 ;;		 -> dbuf(32), 
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  2    0[COMRAM] unsigned int 
 13364 ;; Registers used:
 13365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13375 ;;Total ram usage:        4 bytes
 13376 ;; Hardware stack levels used: 1
 13377 ;; Hardware stack levels required when called: 1
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_pad
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text65
 13386  0059AA                     __ptext65:
 13387                           	callstack 0
 13388  0059AA                     _strlen:
 13389                           	callstack 22
 13390  0059AA  C001  F003         	movff	strlen@s,strlen@a
 13391  0059AE  C002  F004         	movff	strlen@s+1,strlen@a+1
 13392  0059B2  EFDD  F02C         	goto	l3676
 13393  0059B6                     l3674:
 13394  0059B6  4A01               	infsnz	strlen@s^0,f,c
 13395  0059B8  2A02               	incf	(strlen@s+1)^0,f,c
 13396  0059BA                     l3676:
 13397  0059BA  C001  FFD9         	movff	strlen@s,fsr2l
 13398  0059BE  C002  FFDA         	movff	strlen@s+1,fsr2h
 13399  0059C2  50DF               	movf	indf2,w,c
 13400  0059C4  A4D8               	btfss	status,2,c
 13401  0059C6  EFE7  F02C         	goto	u2911
 13402  0059CA  EFE9  F02C         	goto	u2910
 13403  0059CE                     u2911:
 13404  0059CE  EFDB  F02C         	goto	l3674
 13405  0059D2                     u2910:
 13406  0059D2  5003               	movf	strlen@a^0,w,c
 13407  0059D4  5C01               	subwf	strlen@s^0,w,c
 13408  0059D6  6E01               	movwf	?_strlen^0,c
 13409  0059D8  5004               	movf	(strlen@a+1)^0,w,c
 13410  0059DA  5802               	subwfb	(strlen@s+1)^0,w,c
 13411  0059DC  6E02               	movwf	(?_strlen+1)^0,c
 13412  0059DE  0012               	return		;funcret
 13413  0059E0                     __end_of_strlen:
 13414                           	callstack 0
 13415                           
 13416 ;; *************** function _fputs *****************
 13417 ;; Defined at:
 13418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13421 ;;		 -> dbuf(32), 
 13422 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13423 ;;		 -> sprintf@f(11), 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;  i               2   14[COMRAM] int 
 13426 ;;  c               1   13[COMRAM] unsigned char 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  2    9[COMRAM] int 
 13429 ;; Registers used:
 13430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13440 ;;Total ram usage:        7 bytes
 13441 ;; Hardware stack levels used: 1
 13442 ;; Hardware stack levels required when called: 3
 13443 ;; This function calls:
 13444 ;;		_fputc
 13445 ;; This function is called by:
 13446 ;;		_pad
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text66
 13451  005776                     __ptext66:
 13452                           	callstack 0
 13453  005776                     _fputs:
 13454                           	callstack 20
 13455  005776  0E00               	movlw	0
 13456  005778  6E10               	movwf	(fputs@i+1)^0,c
 13457  00577A  0E00               	movlw	0
 13458  00577C  6E0F               	movwf	fputs@i^0,c
 13459  00577E  EFCC  F02B         	goto	l3670
 13460  005782                     l3666:
 13461  005782  C00E  F001         	movff	fputs@c,fputc@c
 13462  005786  6A02               	clrf	(fputc@c+1)^0,c
 13463  005788  C00C  F003         	movff	fputs@fp,fputc@fp
 13464  00578C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13465  005790  ECA2  F026         	call	_fputc	;wreg free
 13466  005794  4A0F               	infsnz	fputs@i^0,f,c
 13467  005796  2A10               	incf	(fputs@i+1)^0,f,c
 13468  005798                     l3670:
 13469  005798  500F               	movf	fputs@i^0,w,c
 13470  00579A  240A               	addwf	fputs@s^0,w,c
 13471  00579C  6ED9               	movwf	fsr2l,c
 13472  00579E  5010               	movf	(fputs@i+1)^0,w,c
 13473  0057A0  200B               	addwfc	(fputs@s+1)^0,w,c
 13474  0057A2  6EDA               	movwf	fsr2h,c
 13475  0057A4  50DF               	movf	indf2,w,c
 13476  0057A6  6E0E               	movwf	fputs@c^0,c
 13477  0057A8  500E               	movf	fputs@c^0,w,c
 13478  0057AA  A4D8               	btfss	status,2,c
 13479  0057AC  EFDA  F02B         	goto	u2901
 13480  0057B0  EFDC  F02B         	goto	u2900
 13481  0057B4                     u2901:
 13482  0057B4  EFC1  F02B         	goto	l3666
 13483  0057B8                     u2900:
 13484  0057B8  0012               	return		;funcret
 13485  0057BA                     __end_of_fputs:
 13486                           	callstack 0
 13487                           
 13488 ;; *************** function _fputc *****************
 13489 ;; Defined at:
 13490 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  c               2    0[COMRAM] int 
 13493 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13494 ;;		 -> sprintf@f(11), 
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  2    0[COMRAM] int 
 13499 ;; Registers used:
 13500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13508 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13509 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13510 ;;Total ram usage:        9 bytes
 13511 ;; Hardware stack levels used: 1
 13512 ;; Hardware stack levels required when called: 2
 13513 ;; This function calls:
 13514 ;;		_putch
 13515 ;; This function is called by:
 13516 ;;		_pad
 13517 ;;		_vfpfcnvrt
 13518 ;;		_fputs
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           	psect	text67
 13523  004D44                     __ptext67:
 13524                           	callstack 0
 13525  004D44                     _fputc:
 13526                           	callstack 23
 13527  004D44  5003               	movf	fputc@fp^0,w,c
 13528  004D46  1004               	iorwf	(fputc@fp+1)^0,w,c
 13529  004D48  B4D8               	btfsc	status,2,c
 13530  004D4A  EFA9  F026         	goto	u2861
 13531  004D4E  EFAB  F026         	goto	u2860
 13532  004D52                     u2861:
 13533  004D52  EFB4  F026         	goto	l3654
 13534  004D56                     u2860:
 13535  004D56  5003               	movf	fputc@fp^0,w,c
 13536  004D58  1004               	iorwf	(fputc@fp+1)^0,w,c
 13537  004D5A  A4D8               	btfss	status,2,c
 13538  004D5C  EFB2  F026         	goto	u2871
 13539  004D60  EFB4  F026         	goto	u2870
 13540  004D64                     u2871:
 13541  004D64  EFB9  F026         	goto	l3656
 13542  004D68                     u2870:
 13543  004D68                     l3654:
 13544  004D68  5001               	movf	fputc@c^0,w,c
 13545  004D6A  EC36  F02E         	call	_putch
 13546  004D6E  EF06  F027         	goto	l1568
 13547  004D72                     l3656:
 13548  004D72  EE20 F009          	lfsr	2,9
 13549  004D76  5003               	movf	fputc@fp^0,w,c
 13550  004D78  26D9               	addwf	fsr2l,f,c
 13551  004D7A  5004               	movf	(fputc@fp+1)^0,w,c
 13552  004D7C  22DA               	addwfc	fsr2h,f,c
 13553  004D7E  50DE               	movf	postinc2,w,c
 13554  004D80  10DE               	iorwf	postinc2,w,c
 13555  004D82  B4D8               	btfsc	status,2,c
 13556  004D84  EFC6  F026         	goto	u2881
 13557  004D88  EFC8  F026         	goto	u2880
 13558  004D8C                     u2881:
 13559  004D8C  EFE3  F026         	goto	l3660
 13560  004D90                     u2880:
 13561  004D90  EE20 F009          	lfsr	2,9
 13562  004D94  5003               	movf	fputc@fp^0,w,c
 13563  004D96  26D9               	addwf	fsr2l,f,c
 13564  004D98  5004               	movf	(fputc@fp+1)^0,w,c
 13565  004D9A  22DA               	addwfc	fsr2h,f,c
 13566  004D9C  EE10 F003          	lfsr	1,3
 13567  004DA0  5003               	movf	fputc@fp^0,w,c
 13568  004DA2  26E1               	addwf	fsr1l,f,c
 13569  004DA4  5004               	movf	(fputc@fp+1)^0,w,c
 13570  004DA6  22E2               	addwfc	fsr1h,f,c
 13571  004DA8  50DE               	movf	postinc2,w,c
 13572  004DAA  5CE6               	subwf	postinc1,w,c
 13573  004DAC  50E6               	movf	postinc1,w,c
 13574  004DAE  0A80               	xorlw	128
 13575  004DB0  6E09               	movwf	(??_fputc+4)^0,c
 13576  004DB2  50DE               	movf	postinc2,w,c
 13577  004DB4  0A80               	xorlw	128
 13578  004DB6  5809               	subwfb	(??_fputc+4)^0,w,c
 13579  004DB8  B0D8               	btfsc	status,0,c
 13580  004DBA  EFE1  F026         	goto	u2891
 13581  004DBE  EFE3  F026         	goto	u2890
 13582  004DC2                     u2891:
 13583  004DC2  EF06  F027         	goto	l1568
 13584  004DC6                     u2890:
 13585  004DC6                     l3660:
 13586  004DC6  EE20 F003          	lfsr	2,3
 13587  004DCA  5003               	movf	fputc@fp^0,w,c
 13588  004DCC  26D9               	addwf	fsr2l,f,c
 13589  004DCE  5004               	movf	(fputc@fp+1)^0,w,c
 13590  004DD0  22DA               	addwfc	fsr2h,f,c
 13591  004DD2  CFDE F005          	movff	postinc2,??_fputc
 13592  004DD6  CFDD F006          	movff	postdec2,??_fputc+1
 13593  004DDA  C003  FFD9         	movff	fputc@fp,fsr2l
 13594  004DDE  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13595  004DE2  CFDE F007          	movff	postinc2,??_fputc+2
 13596  004DE6  CFDD F008          	movff	postdec2,??_fputc+3
 13597  004DEA  5005               	movf	??_fputc^0,w,c
 13598  004DEC  2407               	addwf	(??_fputc+2)^0,w,c
 13599  004DEE  6ED9               	movwf	fsr2l,c
 13600  004DF0  5006               	movf	(??_fputc+1)^0,w,c
 13601  004DF2  2008               	addwfc	(??_fputc+3)^0,w,c
 13602  004DF4  6EDA               	movwf	fsr2h,c
 13603  004DF6  C001  FFDF         	movff	fputc@c,indf2
 13604  004DFA  EE20 F003          	lfsr	2,3
 13605  004DFE  5003               	movf	fputc@fp^0,w,c
 13606  004E00  26D9               	addwf	fsr2l,f,c
 13607  004E02  5004               	movf	(fputc@fp+1)^0,w,c
 13608  004E04  22DA               	addwfc	fsr2h,f,c
 13609  004E06  2ADE               	incf	postinc2,f,c
 13610  004E08  0E00               	movlw	0
 13611  004E0A  22DD               	addwfc	postdec2,f,c
 13612  004E0C                     l1568:
 13613  004E0C  0012               	return		;funcret
 13614  004E0E                     __end_of_fputc:
 13615                           	callstack 0
 13616                           
 13617 ;; *************** function _putch *****************
 13618 ;; Defined at:
 13619 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  c               1    wreg     unsigned char 
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;  c               1    0[COMRAM] unsigned char 
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  1    wreg      void 
 13626 ;; Registers used:
 13627 ;;		wreg
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13637 ;;Total ram usage:        0 bytes
 13638 ;; Hardware stack levels used: 1
 13639 ;; Hardware stack levels required when called: 1
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_fputc
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           	psect	text68
 13648  005C6C                     __ptext68:
 13649                           	callstack 0
 13650  005C6C                     _putch:
 13651                           	callstack 23
 13652  005C6C  0012               	return		;funcret
 13653  005C6E                     __end_of_putch:
 13654                           	callstack 0
 13655                           
 13656 ;; *************** function _abs *****************
 13657 ;; Defined at:
 13658 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;  a               2   18[COMRAM] int 
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  2   18[COMRAM] int 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13676 ;;Total ram usage:        4 bytes
 13677 ;; Hardware stack levels used: 1
 13678 ;; Hardware stack levels required when called: 1
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_dtoa
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text69
 13687  0058BE                     __ptext69:
 13688                           	callstack 0
 13689  0058BE                     _abs:
 13690                           	callstack 23
 13691  0058BE  BE14               	btfsc	(abs@a+1)^0,7,c
 13692  0058C0  EF6C  F02C         	goto	u3090
 13693  0058C4  5014               	movf	(abs@a+1)^0,w,c
 13694  0058C6  E106               	bnz	u3091
 13695  0058C8  0413               	decf	abs@a^0,w,c
 13696  0058CA  B0D8               	btfsc	status,0,c
 13697  0058CC  EF6A  F02C         	goto	u3091
 13698  0058D0  EF6C  F02C         	goto	u3090
 13699  0058D4                     u3091:
 13700  0058D4  EF7A  F02C         	goto	l1553
 13701  0058D8                     u3090:
 13702  0058D8  C013  F015         	movff	abs@a,??_abs
 13703  0058DC  C014  F016         	movff	abs@a+1,??_abs+1
 13704  0058E0  1E15               	comf	??_abs^0,f,c
 13705  0058E2  1E16               	comf	(??_abs+1)^0,f,c
 13706  0058E4  4A15               	infsnz	??_abs^0,f,c
 13707  0058E6  2A16               	incf	(??_abs+1)^0,f,c
 13708  0058E8  C015  F013         	movff	??_abs,?_abs
 13709  0058EC  C016  F014         	movff	??_abs+1,?_abs+1
 13710  0058F0  EF7E  F02C         	goto	l1556
 13711  0058F4                     l1553:
 13712  0058F4  C013  F013         	movff	abs@a,?_abs
 13713  0058F8  C014  F014         	movff	abs@a+1,?_abs+1
 13714  0058FC                     l1556:
 13715  0058FC  0012               	return		;funcret
 13716  0058FE                     __end_of_abs:
 13717                           	callstack 0
 13718                           
 13719 ;; *************** function ___aomod *****************
 13720 ;; Defined at:
 13721 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  dividend        8    0[COMRAM] long long 
 13724 ;;  divisor         8    8[COMRAM] long long 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  sign            1   17[COMRAM] unsigned char 
 13727 ;;  counter         1   16[COMRAM] unsigned char 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  8    0[COMRAM] long long 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13737 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13740 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13741 ;;Total ram usage:       18 bytes
 13742 ;; Hardware stack levels used: 1
 13743 ;; Hardware stack levels required when called: 1
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_dtoa
 13748 ;; This function uses a non-reentrant model
 13749 ;;
 13750                           
 13751                           	psect	text70
 13752  0047DA                     __ptext70:
 13753                           	callstack 0
 13754  0047DA                     ___aomod:
 13755                           	callstack 23
 13756  0047DA  0E00               	movlw	0
 13757  0047DC  6E12               	movwf	___aomod@sign^0,c
 13758  0047DE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13759  0047E0  EFF6  F023         	goto	u2990
 13760  0047E4  EFF4  F023         	goto	u2991
 13761  0047E8                     u2991:
 13762  0047E8  EF08  F024         	goto	l3734
 13763  0047EC                     u2990:
 13764  0047EC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13765  0047EE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13766  0047F0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13767  0047F2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13768  0047F4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13769  0047F6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13770  0047F8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13771  0047FA  6C01               	negf	___aomod@dividend^0,c
 13772  0047FC  0E00               	movlw	0
 13773  0047FE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13774  004800  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13775  004802  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13776  004804  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13777  004806  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13778  004808  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13779  00480A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13780  00480C  0E01               	movlw	1
 13781  00480E  6E12               	movwf	___aomod@sign^0,c
 13782  004810                     l3734:
 13783  004810  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13784  004812  EF0F  F024         	goto	u3000
 13785  004816  EF0D  F024         	goto	u3001
 13786  00481A                     u3001:
 13787  00481A  EF1F  F024         	goto	l3738
 13788  00481E                     u3000:
 13789  00481E  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13790  004820  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13791  004822  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13792  004824  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13793  004826  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13794  004828  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13795  00482A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13796  00482C  6C09               	negf	___aomod@divisor^0,c
 13797  00482E  0E00               	movlw	0
 13798  004830  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13799  004832  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13800  004834  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13801  004836  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13802  004838  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13803  00483A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13804  00483C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13805  00483E                     l3738:
 13806  00483E  5009               	movf	___aomod@divisor^0,w,c
 13807  004840  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13808  004842  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13809  004844  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13810  004846  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13811  004848  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13812  00484A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13813  00484C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13814  00484E  B4D8               	btfsc	status,2,c
 13815  004850  EF2C  F024         	goto	u3011
 13816  004854  EF2E  F024         	goto	u3010
 13817  004858                     u3011:
 13818  004858  EF76  F024         	goto	l3754
 13819  00485C                     u3010:
 13820  00485C  0E01               	movlw	1
 13821  00485E  6E11               	movwf	___aomod@counter^0,c
 13822  004860  EF3C  F024         	goto	l3744
 13823  004864                     l3742:
 13824  004864  90D8               	bcf	status,0,c
 13825  004866  3609               	rlcf	___aomod@divisor^0,f,c
 13826  004868  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13827  00486A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13828  00486C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13829  00486E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13830  004870  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13831  004872  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13832  004874  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13833  004876  2A11               	incf	___aomod@counter^0,f,c
 13834  004878                     l3744:
 13835  004878  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13836  00487A  EF41  F024         	goto	u3021
 13837  00487E  EF43  F024         	goto	u3020
 13838  004882                     u3021:
 13839  004882  EF32  F024         	goto	l3742
 13840  004886                     u3020:
 13841  004886                     l3746:
 13842  004886  5009               	movf	___aomod@divisor^0,w,c
 13843  004888  5C01               	subwf	___aomod@dividend^0,w,c
 13844  00488A  500A               	movf	(___aomod@divisor+1)^0,w,c
 13845  00488C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13846  00488E  500B               	movf	(___aomod@divisor+2)^0,w,c
 13847  004890  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13848  004892  500C               	movf	(___aomod@divisor+3)^0,w,c
 13849  004894  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13850  004896  500D               	movf	(___aomod@divisor+4)^0,w,c
 13851  004898  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13852  00489A  500E               	movf	(___aomod@divisor+5)^0,w,c
 13853  00489C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13854  00489E  500F               	movf	(___aomod@divisor+6)^0,w,c
 13855  0048A0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13856  0048A2  5010               	movf	(___aomod@divisor+7)^0,w,c
 13857  0048A4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13858  0048A6  A0D8               	btfss	status,0,c
 13859  0048A8  EF58  F024         	goto	u3031
 13860  0048AC  EF5A  F024         	goto	u3030
 13861  0048B0                     u3031:
 13862  0048B0  EF6A  F024         	goto	l3750
 13863  0048B4                     u3030:
 13864  0048B4  5009               	movf	___aomod@divisor^0,w,c
 13865  0048B6  5E01               	subwf	___aomod@dividend^0,f,c
 13866  0048B8  500A               	movf	(___aomod@divisor+1)^0,w,c
 13867  0048BA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13868  0048BC  500B               	movf	(___aomod@divisor+2)^0,w,c
 13869  0048BE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13870  0048C0  500C               	movf	(___aomod@divisor+3)^0,w,c
 13871  0048C2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13872  0048C4  500D               	movf	(___aomod@divisor+4)^0,w,c
 13873  0048C6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13874  0048C8  500E               	movf	(___aomod@divisor+5)^0,w,c
 13875  0048CA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13876  0048CC  500F               	movf	(___aomod@divisor+6)^0,w,c
 13877  0048CE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13878  0048D0  5010               	movf	(___aomod@divisor+7)^0,w,c
 13879  0048D2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13880  0048D4                     l3750:
 13881  0048D4  90D8               	bcf	status,0,c
 13882  0048D6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13883  0048D8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13884  0048DA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13885  0048DC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13886  0048DE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13887  0048E0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13888  0048E2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13889  0048E4  3209               	rrcf	___aomod@divisor^0,f,c
 13890  0048E6  2E11               	decfsz	___aomod@counter^0,f,c
 13891  0048E8  EF43  F024         	goto	l3746
 13892  0048EC                     l3754:
 13893  0048EC  5012               	movf	___aomod@sign^0,w,c
 13894  0048EE  B4D8               	btfsc	status,2,c
 13895  0048F0  EF7C  F024         	goto	u3041
 13896  0048F4  EF7E  F024         	goto	u3040
 13897  0048F8                     u3041:
 13898  0048F8  EF8E  F024         	goto	l3758
 13899  0048FC                     u3040:
 13900  0048FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13901  0048FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13902  004900  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13903  004902  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13904  004904  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13905  004906  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13906  004908  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13907  00490A  6C01               	negf	___aomod@dividend^0,c
 13908  00490C  0E00               	movlw	0
 13909  00490E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13910  004910  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13911  004912  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13912  004914  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13913  004916  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13914  004918  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13915  00491A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13916  00491C                     l3758:
 13917  00491C  C001  F001         	movff	___aomod@dividend,?___aomod
 13918  004920  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13919  004924  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13920  004928  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13921  00492C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13922  004930  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13923  004934  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13924  004938  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13925  00493C  0012               	return		;funcret
 13926  00493E                     __end_of___aomod:
 13927                           	callstack 0
 13928                           
 13929 ;; *************** function ___aodiv *****************
 13930 ;; Defined at:
 13931 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  dividend        8    0[COMRAM] long long 
 13934 ;;  divisor         8    8[COMRAM] long long 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;  quotient        8   18[COMRAM] long long 
 13937 ;;  sign            1   17[COMRAM] unsigned char 
 13938 ;;  counter         1   16[COMRAM] unsigned char 
 13939 ;; Return value:  Size  Location     Type
 13940 ;;                  8    0[COMRAM] long long 
 13941 ;; Registers used:
 13942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13943 ;; Tracked objects:
 13944 ;;		On entry : 0/0
 13945 ;;		On exit  : 0/0
 13946 ;;		Unchanged: 0/0
 13947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13948 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13949 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13951 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13952 ;;Total ram usage:       26 bytes
 13953 ;; Hardware stack levels used: 1
 13954 ;; Hardware stack levels required when called: 1
 13955 ;; This function calls:
 13956 ;;		Nothing
 13957 ;; This function is called by:
 13958 ;;		_dtoa
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           	psect	text71
 13963  004652                     __ptext71:
 13964                           	callstack 0
 13965  004652                     ___aodiv:
 13966                           	callstack 23
 13967  004652  0E00               	movlw	0
 13968  004654  6E12               	movwf	___aodiv@sign^0,c
 13969  004656  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13970  004658  EF32  F023         	goto	u2920
 13971  00465C  EF30  F023         	goto	u2921
 13972  004660                     u2921:
 13973  004660  EF44  F023         	goto	l3690
 13974  004664                     u2920:
 13975  004664  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13976  004666  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13977  004668  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13978  00466A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13979  00466C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13980  00466E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13981  004670  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13982  004672  6C09               	negf	___aodiv@divisor^0,c
 13983  004674  0E00               	movlw	0
 13984  004676  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13985  004678  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13986  00467A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13987  00467C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13988  00467E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13989  004680  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13990  004682  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13991  004684  0E01               	movlw	1
 13992  004686  6E12               	movwf	___aodiv@sign^0,c
 13993  004688                     l3690:
 13994  004688  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13995  00468A  EF4B  F023         	goto	u2930
 13996  00468E  EF49  F023         	goto	u2931
 13997  004692                     u2931:
 13998  004692  EF5D  F023         	goto	l3696
 13999  004696                     u2930:
 14000  004696  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 14001  004698  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 14002  00469A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 14003  00469C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 14004  00469E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 14005  0046A0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 14006  0046A2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 14007  0046A4  6C01               	negf	___aodiv@dividend^0,c
 14008  0046A6  0E00               	movlw	0
 14009  0046A8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 14010  0046AA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 14011  0046AC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 14012  0046AE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 14013  0046B0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 14014  0046B2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 14015  0046B4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 14016  0046B6  0E01               	movlw	1
 14017  0046B8  1A12               	xorwf	___aodiv@sign^0,f,c
 14018  0046BA                     l3696:
 14019  0046BA  EE20  F013         	lfsr	2,___aodiv@quotient
 14020  0046BE  0E07               	movlw	7
 14021  0046C0                     u2941:
 14022  0046C0  6ADE               	clrf	postinc2,c
 14023  0046C2  06E8               	decf	wreg,f,c
 14024  0046C4  E2FD               	bc	u2941
 14025  0046C6  5009               	movf	___aodiv@divisor^0,w,c
 14026  0046C8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 14027  0046CA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 14028  0046CC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 14029  0046CE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 14030  0046D0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 14031  0046D2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 14032  0046D4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 14033  0046D6  B4D8               	btfsc	status,2,c
 14034  0046D8  EF70  F023         	goto	u2951
 14035  0046DC  EF72  F023         	goto	u2950
 14036  0046E0                     u2951:
 14037  0046E0  EFC4  F023         	goto	l3718
 14038  0046E4                     u2950:
 14039  0046E4  0E01               	movlw	1
 14040  0046E6  6E11               	movwf	___aodiv@counter^0,c
 14041  0046E8  EF80  F023         	goto	l3704
 14042  0046EC                     l3702:
 14043  0046EC  90D8               	bcf	status,0,c
 14044  0046EE  3609               	rlcf	___aodiv@divisor^0,f,c
 14045  0046F0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 14046  0046F2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 14047  0046F4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 14048  0046F6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 14049  0046F8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 14050  0046FA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 14051  0046FC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 14052  0046FE  2A11               	incf	___aodiv@counter^0,f,c
 14053  004700                     l3704:
 14054  004700  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 14055  004702  EF85  F023         	goto	u2961
 14056  004706  EF87  F023         	goto	u2960
 14057  00470A                     u2961:
 14058  00470A  EF76  F023         	goto	l3702
 14059  00470E                     u2960:
 14060  00470E                     l3706:
 14061  00470E  90D8               	bcf	status,0,c
 14062  004710  3613               	rlcf	___aodiv@quotient^0,f,c
 14063  004712  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 14064  004714  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 14065  004716  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 14066  004718  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14067  00471A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14068  00471C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14069  00471E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14070  004720  5009               	movf	___aodiv@divisor^0,w,c
 14071  004722  5C01               	subwf	___aodiv@dividend^0,w,c
 14072  004724  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14073  004726  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14074  004728  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14075  00472A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14076  00472C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14077  00472E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14078  004730  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14079  004732  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14080  004734  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14081  004736  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14082  004738  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14083  00473A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14084  00473C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14085  00473E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14086  004740  A0D8               	btfss	status,0,c
 14087  004742  EFA5  F023         	goto	u2971
 14088  004746  EFA7  F023         	goto	u2970
 14089  00474A                     u2971:
 14090  00474A  EFB8  F023         	goto	l3714
 14091  00474E                     u2970:
 14092  00474E  5009               	movf	___aodiv@divisor^0,w,c
 14093  004750  5E01               	subwf	___aodiv@dividend^0,f,c
 14094  004752  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14095  004754  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14096  004756  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14097  004758  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14098  00475A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14099  00475C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14100  00475E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14101  004760  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14102  004762  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14103  004764  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14104  004766  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14105  004768  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14106  00476A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14107  00476C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14108  00476E  8013               	bsf	___aodiv@quotient^0,0,c
 14109  004770                     l3714:
 14110  004770  90D8               	bcf	status,0,c
 14111  004772  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14112  004774  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14113  004776  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14114  004778  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14115  00477A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14116  00477C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14117  00477E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14118  004780  3209               	rrcf	___aodiv@divisor^0,f,c
 14119  004782  2E11               	decfsz	___aodiv@counter^0,f,c
 14120  004784  EF87  F023         	goto	l3706
 14121  004788                     l3718:
 14122  004788  5012               	movf	___aodiv@sign^0,w,c
 14123  00478A  B4D8               	btfsc	status,2,c
 14124  00478C  EFCA  F023         	goto	u2981
 14125  004790  EFCC  F023         	goto	u2980
 14126  004794                     u2981:
 14127  004794  EFDC  F023         	goto	l3722
 14128  004798                     u2980:
 14129  004798  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14130  00479A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14131  00479C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14132  00479E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14133  0047A0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14134  0047A2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14135  0047A4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14136  0047A6  6C13               	negf	___aodiv@quotient^0,c
 14137  0047A8  0E00               	movlw	0
 14138  0047AA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14139  0047AC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14140  0047AE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14141  0047B0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14142  0047B2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14143  0047B4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14144  0047B6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14145  0047B8                     l3722:
 14146  0047B8  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14147  0047BC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14148  0047C0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14149  0047C4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14150  0047C8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14151  0047CC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14152  0047D0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14153  0047D4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14154  0047D8  0012               	return		;funcret
 14155  0047DA                     __end_of___aodiv:
 14156                           	callstack 0
 14157                           
 14158 ;; *************** function _sendStringSerial4 *****************
 14159 ;; Defined at:
 14160 ;;		line 36 in file "serial.c"
 14161 ;; Parameters:    Size  Location     Type
 14162 ;;  string          2    1[COMRAM] PTR unsigned char 
 14163 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 14164 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;		None
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      void 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14180 ;;Total ram usage:        2 bytes
 14181 ;; Hardware stack levels used: 1
 14182 ;; Hardware stack levels required when called: 2
 14183 ;; This function calls:
 14184 ;;		_sendCharSerial4
 14185 ;; This function is called by:
 14186 ;;		_color_display
 14187 ;;		_color_predict
 14188 ;;		_action
 14189 ;;		_goback
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text72
 14194  005A14                     __ptext72:
 14195                           	callstack 0
 14196  005A14                     _sendStringSerial4:
 14197                           	callstack 26
 14198  005A14                     
 14199                           ;serial.c: 38:     while(*string != 0){
 14200  005A14  EF15  F02D         	goto	l4434
 14201  005A18                     l4430:
 14202                           
 14203                           ;serial.c: 39:   sendCharSerial4(*string++);}
 14204  005A18  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14205  005A1C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14206  005A20  50DF               	movf	indf2,w,c
 14207  005A22  EC03  F02E         	call	_sendCharSerial4
 14208  005A26  4A02               	infsnz	sendStringSerial4@string^0,f,c
 14209  005A28  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 14210  005A2A                     l4434:
 14211                           
 14212                           ;serial.c: 38:     while(*string != 0){
 14213  005A2A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14214  005A2E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14215  005A32  50DF               	movf	indf2,w,c
 14216  005A34  A4D8               	btfss	status,2,c
 14217  005A36  EF1F  F02D         	goto	u4131
 14218  005A3A  EF21  F02D         	goto	u4130
 14219  005A3E                     u4131:
 14220  005A3E  EF0C  F02D         	goto	l4430
 14221  005A42                     u4130:
 14222  005A42  0012               	return		;funcret
 14223  005A44                     __end_of_sendStringSerial4:
 14224                           	callstack 0
 14225                           
 14226 ;; *************** function _sendCharSerial4 *****************
 14227 ;; Defined at:
 14228 ;;		line 29 in file "serial.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;  charToSend      1    wreg     unsigned char 
 14231 ;; Auto vars:     Size  Location     Type
 14232 ;;  charToSend      1    0[COMRAM] unsigned char 
 14233 ;; Return value:  Size  Location     Type
 14234 ;;                  1    wreg      void 
 14235 ;; Registers used:
 14236 ;;		wreg
 14237 ;; Tracked objects:
 14238 ;;		On entry : 0/0
 14239 ;;		On exit  : 0/0
 14240 ;;		Unchanged: 0/0
 14241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14246 ;;Total ram usage:        1 bytes
 14247 ;; Hardware stack levels used: 1
 14248 ;; Hardware stack levels required when called: 1
 14249 ;; This function calls:
 14250 ;;		Nothing
 14251 ;; This function is called by:
 14252 ;;		_sendStringSerial4
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text73
 14257  005C06                     __ptext73:
 14258                           	callstack 0
 14259  005C06                     _sendCharSerial4:
 14260                           	callstack 26
 14261                           
 14262                           ;incstack = 0
 14263                           ;sendCharSerial4@charToSend stored from wreg
 14264  005C06  6E01               	movwf	sendCharSerial4@charToSend^0,c
 14265  005C08                     l425:
 14266  005C08  010E               	movlb	14	; () banked
 14267  005C0A  A537               	btfss	55,2,b	;volatile
 14268  005C0C  EF0A  F02E         	goto	u3861
 14269  005C10  EF0C  F02E         	goto	u3860
 14270  005C14                     u3861:
 14271  005C14  EF04  F02E         	goto	l425
 14272  005C18                     u3860:
 14273  005C18                     
 14274                           ; BSR set to: 14
 14275                           ;serial.c: 31:     TX4REG = charToSend;
 14276  005C18  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 14277  005C1C                     
 14278                           ; BSR set to: 14
 14279  005C1C  0012               	return		;funcret
 14280  005C1E                     __end_of_sendCharSerial4:
 14281                           	callstack 0
 14282                           
 14283 ;; *************** function _Timer0_init *****************
 14284 ;; Defined at:
 14285 ;;		line 7 in file "timers.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1    wreg      void 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14303 ;;Total ram usage:        0 bytes
 14304 ;; Hardware stack levels used: 1
 14305 ;; Hardware stack levels required when called: 1
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_main
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text74
 14314  005BE8                     __ptext74:
 14315                           	callstack 0
 14316  005BE8                     _Timer0_init:
 14317                           	callstack 29
 14318  005BE8                     
 14319                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14320  005BE8  50D6               	movf	214,w,c	;volatile
 14321  005BEA  0B1F               	andlw	-225
 14322  005BEC  0940               	iorlw	64
 14323  005BEE  6ED6               	movwf	214,c	;volatile
 14324  005BF0                     
 14325                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14326  005BF0  88D6               	bsf	214,4,c	;volatile
 14327                           
 14328                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 14329  005BF2  50D6               	movf	214,w,c	;volatile
 14330  005BF4  0BF0               	andlw	-16
 14331  005BF6  0908               	iorlw	8
 14332  005BF8  6ED6               	movwf	214,c	;volatile
 14333  005BFA                     
 14334                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14335  005BFA  88D5               	bsf	213,4,c	;volatile
 14336                           
 14337                           ;timers.c: 16:     TMR0H=0b00001011;
 14338  005BFC  0E0B               	movlw	11
 14339  005BFE  6ED4               	movwf	212,c	;volatile
 14340                           
 14341                           ;timers.c: 17:     TMR0L=0b11011011;
 14342  005C00  0EDB               	movlw	219
 14343  005C02  6ED3               	movwf	211,c	;volatile
 14344  005C04  0012               	return		;funcret
 14345  005C06                     __end_of_Timer0_init:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _Interrupts_init *****************
 14349 ;; Defined at:
 14350 ;;		line 9 in file "interrupts.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		None
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14368 ;;Total ram usage:        0 bytes
 14369 ;; Hardware stack levels used: 1
 14370 ;; Hardware stack levels required when called: 1
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_main
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           	psect	text75
 14379  005C40                     __ptext75:
 14380                           	callstack 0
 14381  005C40                     _Interrupts_init:
 14382                           	callstack 29
 14383  005C40  8EF2               	bsf	242,7,c	;volatile
 14384                           
 14385                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14386  005C42  8AF2               	bsf	242,5,c	;volatile
 14387                           
 14388                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14389  005C44  8CF2               	bsf	242,6,c	;volatile
 14390                           
 14391                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14392  005C46  010E               	movlb	14	; () banked
 14393  005C48  8B29               	bsf	41,5,b	;volatile
 14394  005C4A                     
 14395                           ; BSR set to: 14
 14396  005C4A  0012               	return		;funcret
 14397  005C4C                     __end_of_Interrupts_init:
 14398                           	callstack 0
 14399                           
 14400 ;; *************** function _HighISR *****************
 14401 ;; Defined at:
 14402 ;;		line 21 in file "interrupts.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;		None
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1    wreg      void 
 14409 ;; Registers used:
 14410 ;;		status,2, status,0
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;Total ram usage:        0 bytes
 14421 ;; Hardware stack levels used: 1
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		Interrupt level 2
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	intcode
 14430  000008                     __pintcode:
 14431                           	callstack 0
 14432  000008                     _HighISR:
 14433                           	callstack 19
 14434                           
 14435                           ; BSR set to: 14
 14436                           ;incstack = 0
 14437  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14438  00000A                     
 14439                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14440  00000A  010E               	movlb	14	; () banked
 14441  00000C  AB33               	btfss	51,5,b	;volatile
 14442  00000E  EF0B  F000         	goto	i2u563_41
 14443  000012  EF0D  F000         	goto	i2u563_40
 14444  000016                     i2u563_41:
 14445  000016  EF12  F000         	goto	i2l694
 14446  00001A                     i2u563_40:
 14447  00001A                     
 14448                           ; BSR set to: 14
 14449                           ;interrupts.c: 24:         second ++;
 14450  00001A  0103               	movlb	3	; () banked
 14451  00001C  4B68               	infsnz	_second& (0+255),f,b
 14452  00001E  2B69               	incf	(_second+1)& (0+255),f,b
 14453  000020                     
 14454                           ; BSR set to: 3
 14455                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14456  000020  010E               	movlb	14	; () banked
 14457  000022  9B33               	bcf	51,5,b	;volatile
 14458  000024                     i2l694:
 14459                           
 14460                           ; BSR set to: 14
 14461  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14462  000026  0011               	retfie		f
 14463  000028                     __end_of_HighISR:
 14464                           	callstack 0
 14465                           
 14466                           	psect	rparam
 14467  0000                     
 14468                           	psect	temp
 14469  00005F                     btemp:
 14470                           	callstack 0
 14471  00005F                     	ds	1
 14472  0000                     int$flags	set	btemp
 14473  0000                     wtemp8	set	btemp+1
 14474  0000                     ttemp5	set	btemp+1
 14475  0000                     ttemp6	set	btemp+4
 14476  0000                     ttemp7	set	btemp+8
 14477                           
 14478                           	psect	idloc
 14479                           
 14480                           ;Config register IDLOC0 @ 0x200000
 14481                           ;	unspecified, using default values
 14482  200000                     	org	2097152
 14483  200000  0FFF               	dw	4095
 14484                           
 14485                           ;Config register IDLOC1 @ 0x200002
 14486                           ;	unspecified, using default values
 14487  200002                     	org	2097154
 14488  200002  0FFF               	dw	4095
 14489                           
 14490                           ;Config register IDLOC2 @ 0x200004
 14491                           ;	unspecified, using default values
 14492  200004                     	org	2097156
 14493  200004  0FFF               	dw	4095
 14494                           
 14495                           ;Config register IDLOC3 @ 0x200006
 14496                           ;	unspecified, using default values
 14497  200006                     	org	2097158
 14498  200006  0FFF               	dw	4095
 14499                           
 14500                           ;Config register IDLOC4 @ 0x200008
 14501                           ;	unspecified, using default values
 14502  200008                     	org	2097160
 14503  200008  0FFF               	dw	4095
 14504                           
 14505                           ;Config register IDLOC5 @ 0x20000A
 14506                           ;	unspecified, using default values
 14507  20000A                     	org	2097162
 14508  20000A  0FFF               	dw	4095
 14509                           
 14510                           ;Config register IDLOC6 @ 0x20000C
 14511                           ;	unspecified, using default values
 14512  20000C                     	org	2097164
 14513  20000C  0FFF               	dw	4095
 14514                           
 14515                           ;Config register IDLOC7 @ 0x20000E
 14516                           ;	unspecified, using default values
 14517  20000E                     	org	2097166
 14518  20000E  0FFF               	dw	4095
 14519                           
 14520                           	psect	config
 14521                           
 14522                           ;Config register CONFIG1L @ 0x300000
 14523                           ;	External Oscillator mode Selection bits
 14524                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14525                           ;	Power-up default value for COSC bits
 14526                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14527  300000                     	org	3145728
 14528  300000  AA                 	db	170
 14529                           
 14530                           ;Config register CONFIG1H @ 0x300001
 14531                           ;	unspecified, using default values
 14532                           ;	Clock Out Enable bit
 14533                           ;	CLKOUTEN = 0x1, unprogrammed default
 14534                           ;	Clock Switch Enable bit
 14535                           ;	CSWEN = 0x1, unprogrammed default
 14536                           ;	Fail-Safe Clock Monitor Enable bit
 14537                           ;	FCMEN = 0x1, unprogrammed default
 14538  300001                     	org	3145729
 14539  300001  FF                 	db	255
 14540                           
 14541                           ;Config register CONFIG2L @ 0x300002
 14542                           ;	unspecified, using default values
 14543                           ;	Master Clear Enable bit
 14544                           ;	MCLRE = 0x1, unprogrammed default
 14545                           ;	Power-up Timer Enable bit
 14546                           ;	PWRTE = 0x1, unprogrammed default
 14547                           ;	Low-power BOR enable bit
 14548                           ;	LPBOREN = 0x1, unprogrammed default
 14549                           ;	Brown-out Reset Enable bits
 14550                           ;	BOREN = 0x3, unprogrammed default
 14551  300002                     	org	3145730
 14552  300002  FF                 	db	255
 14553                           
 14554                           ;Config register CONFIG2H @ 0x300003
 14555                           ;	unspecified, using default values
 14556                           ;	Brown Out Reset Voltage selection bits
 14557                           ;	BORV = 0x3, unprogrammed default
 14558                           ;	ZCD Disable bit
 14559                           ;	ZCD = 0x1, unprogrammed default
 14560                           ;	PPSLOCK bit One-Way Set Enable bit
 14561                           ;	PPS1WAY = 0x1, unprogrammed default
 14562                           ;	Stack Full/Underflow Reset Enable bit
 14563                           ;	STVREN = 0x1, unprogrammed default
 14564                           ;	Debugger Enable bit
 14565                           ;	DEBUG = 0x1, unprogrammed default
 14566                           ;	Extended Instruction Set Enable bit
 14567                           ;	XINST = 0x1, unprogrammed default
 14568  300003                     	org	3145731
 14569  300003  FF                 	db	255
 14570                           
 14571                           ;Config register CONFIG3L @ 0x300004
 14572                           ;	WDT Period Select bits
 14573                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14574                           ;	WDT operating mode
 14575                           ;	WDTE = OFF, WDT Disabled
 14576  300004                     	org	3145732
 14577  300004  9F                 	db	159
 14578                           
 14579                           ;Config register CONFIG3H @ 0x300005
 14580                           ;	unspecified, using default values
 14581                           ;	WDT Window Select bits
 14582                           ;	WDTCWS = 0x7, unprogrammed default
 14583                           ;	WDT input clock selector
 14584                           ;	WDTCCS = 0x7, unprogrammed default
 14585  300005                     	org	3145733
 14586  300005  FF                 	db	255
 14587                           
 14588                           ;Config register CONFIG4L @ 0x300006
 14589                           ;	unspecified, using default values
 14590                           ;	Write Protection Block 0
 14591                           ;	WRT0 = 0x1, unprogrammed default
 14592                           ;	Write Protection Block 1
 14593                           ;	WRT1 = 0x1, unprogrammed default
 14594                           ;	Write Protection Block 2
 14595                           ;	WRT2 = 0x1, unprogrammed default
 14596                           ;	Write Protection Block 3
 14597                           ;	WRT3 = 0x1, unprogrammed default
 14598                           ;	Write Protection Block 3
 14599                           ;	WRT4 = 0x1, unprogrammed default
 14600                           ;	Write Protection Block 3
 14601                           ;	WRT5 = 0x1, unprogrammed default
 14602                           ;	Write Protection Block 3
 14603                           ;	WRT6 = 0x1, unprogrammed default
 14604                           ;	Write Protection Block 3
 14605                           ;	WRT7 = 0x1, unprogrammed default
 14606  300006                     	org	3145734
 14607  300006  FF                 	db	255
 14608                           
 14609                           ;Config register CONFIG4H @ 0x300007
 14610                           ;	unspecified, using default values
 14611                           ;	Configuration Register Write Protection bit
 14612                           ;	WRTC = 0x1, unprogrammed default
 14613                           ;	Boot Block Write Protection bit
 14614                           ;	WRTB = 0x1, unprogrammed default
 14615                           ;	Data EEPROM Write Protection bit
 14616                           ;	WRTD = 0x1, unprogrammed default
 14617                           ;	Scanner Enable bit
 14618                           ;	SCANE = 0x1, unprogrammed default
 14619                           ;	Low Voltage Programming Enable bit
 14620                           ;	LVP = 0x1, unprogrammed default
 14621  300007                     	org	3145735
 14622  300007  FF                 	db	255
 14623                           
 14624                           ;Config register CONFIG5L @ 0x300008
 14625                           ;	unspecified, using default values
 14626                           ;	UserNVM Program Memory Code Protection bit
 14627                           ;	CP = 0x1, unprogrammed default
 14628                           ;	DataNVM Memory Code Protection bit
 14629                           ;	CPD = 0x1, unprogrammed default
 14630  300008                     	org	3145736
 14631  300008  FF                 	db	255
 14632                           
 14633                           ;Config register CONFIG5H @ 0x300009
 14634                           ;	unspecified, using default values
 14635  300009                     	org	3145737
 14636  300009  FF                 	db	255
 14637                           
 14638                           ;Config register CONFIG6L @ 0x30000A
 14639                           ;	unspecified, using default values
 14640                           ;	Table Read Protection Block 0
 14641                           ;	EBTR0 = 0x1, unprogrammed default
 14642                           ;	Table Read Protection Block 1
 14643                           ;	EBTR1 = 0x1, unprogrammed default
 14644                           ;	Table Read Protection Block 2
 14645                           ;	EBTR2 = 0x1, unprogrammed default
 14646                           ;	Table Read Protection Block 3
 14647                           ;	EBTR3 = 0x1, unprogrammed default
 14648                           ;	Table Read Protection Block 4
 14649                           ;	EBTR4 = 0x1, unprogrammed default
 14650                           ;	Table Read Protection Block 5
 14651                           ;	EBTR5 = 0x1, unprogrammed default
 14652                           ;	Table Read Protection Block 6
 14653                           ;	EBTR6 = 0x1, unprogrammed default
 14654                           ;	Table Read Protection Block 7
 14655                           ;	EBTR7 = 0x1, unprogrammed default
 14656  30000A                     	org	3145738
 14657  30000A  FF                 	db	255
 14658                           
 14659                           ;Config register CONFIG6H @ 0x30000B
 14660                           ;	unspecified, using default values
 14661                           ;	Boot Block Table Read Protection bit
 14662                           ;	EBTRB = 0x1, unprogrammed default
 14663  30000B                     	org	3145739
 14664  30000B  FF                 	db	255
 14665                           tosu	equ	0xFFF
 14666                           tosh	equ	0xFFE
 14667                           tosl	equ	0xFFD
 14668                           stkptr	equ	0xFFC
 14669                           pclatu	equ	0xFFB
 14670                           pclath	equ	0xFFA
 14671                           pcl	equ	0xFF9
 14672                           tblptru	equ	0xFF8
 14673                           tblptrh	equ	0xFF7
 14674                           tblptrl	equ	0xFF6
 14675                           tablat	equ	0xFF5
 14676                           prodh	equ	0xFF4
 14677                           prodl	equ	0xFF3
 14678                           indf0	equ	0xFEF
 14679                           postinc0	equ	0xFEE
 14680                           postdec0	equ	0xFED
 14681                           preinc0	equ	0xFEC
 14682                           plusw0	equ	0xFEB
 14683                           fsr0h	equ	0xFEA
 14684                           fsr0l	equ	0xFE9
 14685                           wreg	equ	0xFE8
 14686                           indf1	equ	0xFE7
 14687                           postinc1	equ	0xFE6
 14688                           postdec1	equ	0xFE5
 14689                           preinc1	equ	0xFE4
 14690                           plusw1	equ	0xFE3
 14691                           fsr1h	equ	0xFE2
 14692                           fsr1l	equ	0xFE1
 14693                           bsr	equ	0xFE0
 14694                           indf2	equ	0xFDF
 14695                           postinc2	equ	0xFDE
 14696                           postdec2	equ	0xFDD
 14697                           preinc2	equ	0xFDC
 14698                           plusw2	equ	0xFDB
 14699                           fsr2h	equ	0xFDA
 14700                           fsr2l	equ	0xFD9
 14701                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256    200     251
    BANK2           256    201     233
    BANK3           256     67     175
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), main@amb(BANK3[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2831$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2831$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    halfSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    halfSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), main@motorL(BANK3[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_halfSpeedBack
    _halfSpeedBack->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _action->_goback

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_action
    _action->_goback

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0  355918
                                            150 BANK0      2     2      0
                                              0 BANK3     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   28528
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  112394
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19671
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   28242
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19347
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13324
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11781
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3484
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2062
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2987
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4   15556
                                             37 COMRAM     6     2      4
                     _fullSpeedAhead
                      _halfSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _halfSpeedBack                                        6     2      4    7354
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                             105   101      4  113439
                                            128 BANK0      4     0      4
                                            100 BANK2    101   101      0
                             _goback
                     _reverse_square
                  _sendStringSerial4
                      _short_reverse
                            _sprintf
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12997
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                             308   304      4   57665
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                                              0 BANK1    200   200      0
                                              0 BANK2    100   100      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9961
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   10645
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   12693
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    7506
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4491
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3427
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2491
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _sendStringSerial4
       _sprintf
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _sendStringSerial4
     _short_reverse
       _fullSpeedBack
       _stop
     _sprintf
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___wmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _short_burst_back
     _fullSpeedAhead
     _halfSpeedBack
       _setMotorPWM
       _stop
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     43      AF      11       68.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C9      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8      FB       7       98.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     391      57        0.0%
DATA                 0      0     391       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 15:38:50 2022

                ?_short_reverse 0026                  _color_read_Red 55F0                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 5690  
                 _color_predict 5A44                              l71 5C32                              l82 36C6  
                            l74 36B4                              l91 563E                              l85 5A12  
                            l94 56DE                              l88 5BC8                              l97 568E  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 56E0  
              _color_read_Green 5640               ??_Interrupts_init 0001                             l100 572E  
                           l103 5546                             l112 5B88                             l202 5A9A  
                           l106 5B28                             l211 5C68                             l115 5B68  
                           l220 5C3E                             l132 5418                             l205 5A9C  
                           l109 5B08                             l141 38D0                             l302 3C8C  
                           l310 5298                             l214 5C54                             l118 5B48  
                           l223 57FA                             l208 5AC2                             l321 4454  
                           l217 5C5E                             l129 3E42                             l138 5A70  
                           l162 5934                             l171 4A64                             l163 5936  
                           l325 449C                             l317 440C                             l174 4ED0  
                           l343 430E                             l335 427E                             l159 1A8A  
                           l175 4ED2                             l167 53A8                             l328 44C6  
                           l416 5BE6                             l425 5C08                             l434 5A42  
                           l354 532C                             l346 4338                             l339 42C6  
                           l428 5C1C                             l292 583C                             l365 51DC  
                           l373 511C                             l295 4D42                             l376 587C  
                           l705 5C04                             l641 3130                             l379 58BC  
                           l548 398C                             l629 559C                             l647 5BA8  
                           l664 2DEA                             l921 493C                             l908 47D8  
                           l688 5C4A                             l794 5AE8               verify_color@color 009A  
              ?_calibrate_white 000C        __end_of_distance_measure 4ED4                             _abs 58BE  
                           _pad 4ED4                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                 __end_of_LED_OFF 5B2A  
                  ___fltol@exp1 0065                            l1025 505C                            ?_abs 0013  
                          l1064 4C70                            l1322 1C7A                            l1091 4B6C  
                          l1059 4C2A                            l1331 1F4A                            l1323 1C68  
                          l1412 2374                            l1068 59A8                            l1324 1C2E  
                          l1415 2206                            l1600 59DE                            l1504 4F1A  
                          l1408 2010                            l4000 1BFA                            l1425 2336  
                          l1417 227E                            l1418 226C                            l4010 1C4C  
                          l4002 1C16                            l1507 4F5C                            l1515 31D6  
                          l1339 1D94                            l1452 3FF6                            l4100 1EEA  
                          l1348 1E64                            l4020 1C98                            l4012 1C5A  
                          l4004 1C26                            l1364 5774                            l1509 4F98  
                          l1517 31DE                            l1381 28E0                            l1349 1E52  
                          l1542 41AA                            l1390 29C8                            l4110 1F24  
                          l4102 1F0A                            l4030 1CD8                            l4014 1C5C  
                          l4006 1C3C                            l1470 5970                            l1535 341A  
                          l1463 3F8E                            l4120 3FF8                            l4200 521E  
                          l1376 2ABC                            l1456 3F32                            l4112 1F2A  
                          l4104 1F0E                            l4040 1D02                            l4032 1CE4  
                          l4024 1CAC                            l4016 1C66                            l4008 1C48  
                          l5000 3E16                            l1553 58F4                            l1449 3E9A  
                          l4130 4064                            l4122 401C                            l4210 5268  
                          l4202 522A                            l1378 291C                            l4114 1F38  
                          l4106 1F1C                            l4050 1D74                            l4034 1CE8  
                          l4026 1CBC                            l4018 1C88                            l4042 1D08  
                          l5010 36CC                            l5002 3E1C                            l1387 2962  
                          l1556 58FC                            l4140 412C                            l4132 4088  
                          l4124 402A                            l1548 54E0                            l4212 5280  
                          l4204 5236                            l4300 21EC                            l4220 1F58  
                          l4116 1F3A                            l4108 1F22                            l4060 1DCE  
                          l4044 1D2E                            l4052 1D84                            l4036 1CF6  
                          l4028 1CCA                            l5020 371E                            l5012 36D6  
                          l5004 3E38                            l5100 1352                            l1549 54E8  
                          l1477 55EE                            l1389 29DA                            l4214 5C08  
                          l4150 4168                            l4142 413A                            l4134 40D0  
                          l4126 403C                            l4206 5242                            l4310 2228  
                          l4302 21F6                            l4230 1F98                            l4222 1F66  
                          l4070 1DFE                            l4062 1DD8                            l4054 1DAA  
                          l4046 1D62                            l4038 1CF8                            l5030 3782  
                          l5022 3736                            l5014 36EE                            l5006 3E3E  
                          l5110 14C8                            l5102 1356                            l4216 5C18  
                          l1568 4E0C                            l1576 57B8                            l4144 414E  
                          l4128 4040                            l4208 5250                            l4320 229A  
                          l4312 2236                            l4304 2204                            l4240 1FC8  
                          l4232 1F9E                            l4224 1F68                            l4080 1E26  
                          l4072 1E02                            l4064 1DE6                            l4056 1DBA  
                          l4048 1D64                            l4400 56D6                            l5040 37E6  
                          l5032 379A                            l5024 374E                            l5016 36F2  
                          l5008 36C8                            l5120 1664                            l5112 14E4  
                          l5104 1362                            l5200 4E28                            l4138 4108  
                          l4154 4174                            l4162 5C60                            l4170 5C56  
                          l4410 56E0                            l4330 2304                            l4322 22A8  
                          l4314 2264                            l4306 2216                            l4250 2000  
                          l4242 1FCA                            l4234 1FAE                            l4226 1F78  
                          l4218 1F4C                            l4090 1E80                            l4082 1E34  
                          l4074 1E12                            l4066 1DE8                            l5050 384A  
                          l5042 37FE                            l5034 37B2                            l5026 3752  
                          l5018 3706                            l5130 178C                            l5122 167C  
                          l5114 158C                            l5106 1404                            l5210 4EB4  
                          l5202 4E42                            l1579 5C6C                            l1587 2722  
                          l3700 46E4                            l4156 4198                            l4148 415A  
                          l4420 55B8                            l5300 2C82                            l4164 5C64  
                          l4172 5C5A                            l4180 57C0                            l4412 5726  
                          l4340 235A                            l4332 231E                            l4324 22D2  
                          l4308 2224                            l4260 2050                            l4252 2020  
                          l4244 1FDA                            l4236 1FB4                            l4228 1F88  
                          l4092 1E8E                            l4084 1E4A                            l4068 1DF6  
                          l4076 1E14                            l4500 2396                            l4404 5640  
                          l5060 38AE                            l5052 3862                            l5044 3816  
                          l5036 37B6                            l5028 376A                            l5140 18A6  
                          l5132 17BA                            l5124 16AA                            l5116 15A8  
                          l5108 1420                            l5212 4ECC                            l5204 4E4E  
                          l4430 5A18                            l3710 474E                            l3702 46EC  
                          l4422 55C0                            l5302 2CA6                            l4166 5C36  
                          l5230 50B2                            l5222 505E                            l4182 57C8  
                          l4174 5C4C                            l4334 233A                            l4342 2360  
                          l4318 228E                            l4326 22D6                            l4270 20A0  
                          l4262 205A                            l4254 2030                            l4246 1FEA  
                          l4238 1FBA                            l4094 1EC8                            l4078 1E22  
                          l4350 5740                            l4510 246E                            l4502 23DE  
                          l4406 5686                            l5054 387A                            l5046 382E  
                          l5038 37CE                            l5150 19BE                            l5142 18AE  
                          l5134 187A                            l5126 1778                            l5118 1650  
                          l5070 0F40                            l5062 0E46                            l5206 4E52  
                          l4432 5A26                            l3720 4798                            l3712 476E  
                          l3704 4700                            l4424 55DC                            l4416 559E  
                          l3800 4FB4                            l4192 51DE                            l4440 515A  
                          l5320 2D8E                            l5312 2D16                            l5240 583E  
                          l4168 5C3A                            l5400 5BE4                            l5224 5082  
                          l5232 50C0                            l4184 57D0                            l4176 5C50  
                          l4360 4BDA                            l4344 2364                            l4336 234A  
                          l4328 22F0                            l4280 20E2                            l4272 20AC  
                          l4264 2070                            l4248 1FFA                            l4088 1E74  
                          l4096 1ECA                            l4520 2612                            l4504 23F2  
                          l5056 3892                            l5048 3832                            l4600 540C  
                          l5160 1A68                            l5152 1A00                            l5144 196E  
                          l5136 1884                            l5128 1782                            l5080 10D4  
                          l5072 0F5C                            l5064 0E94                            l5208 4E98  
                          l5410 5BFA                            l4434 5A2A                            l3722 47B8  
                          l3714 4770                            l3706 470E                            l3730 47EC  
                          l3650 4D44                            l4418 55B0                            l4602 5A48  
                          l3810 4FDA                            l3802 4FB8                            l4194 51E2  
                          l4450 51B0                            l4442 5166                            l5314 2D3A  
                          l5306 2CC2                            l5330 2DEE                            l5250 2ADA  
                          l5242 5852                            l5234 50D8                            l5226 509A  
                          l4186 57F6                            l4178 57BC                            l4370 4C68  
                          l4362 4BEA                            l4354 4B6E                            l4338 2358  
                          l4290 2144                            l4282 20F2                            l4274 20BA  
                          l4266 207C                            l4258 2044                            l4098 1EDA  
                          l4522 267E                            l4514 24A6                            l4506 242E  
                          l5170 4958                            l5058 38AA                            l4610 58FE  
                          l5162 1A7C                            l5154 1A06                            l5146 1978  
                          l5138 188E                            l5090 11BA                            l5082 10EC  
                          l5074 1004                            l5066 0E98                            l5412 5C40  
                          l4428 5A14                            l3716 4782                            l3708 4720  
                          l3740 485C                            l3732 480C                            l3660 4DC6  
                          l3652 4D56                            l4604 5A64                            l3820 5010  
                          l3812 4FEC                            l3804 4FC6                            l4196 51FA  
                          l4452 51C8                            l4444 5172                            l4436 511E  
                          l4620 433A                            l4700 42EE                            l5332 2E04  
                          l5324 2DAA                            l5308 2CE6                            l5260 2B26  
                          l5252 2AF0                            l5244 5868                            l4540 3472  
                          l4532 341E                            l5500 2F5E                            l3900 5A9C  
                          l5340 59E4                            l5236 50F0                            l5228 50A6  
                          l4188 57F8                            l4460 4A92                            l4372 4C6E  
                          l4364 4BF8                            l4356 4B9C                            l4292 2160  
                          l4284 210C                            l4276 20C6                            l4268 2094  
                          l4380 5998                            l4348 5730                            l4524 26B2  
                          l4516 2574                            l4508 2452                            l5180 49A2  
                          l5172 4962                            l4612 5904                            l5164 1A86  
                          l5156 1A34                            l5148 197E                            l5092 1262  
                          l5084 10F0                            l5076 1018                            l5068 0EA4  
                          l5420 44F0                            l5406 5BE8                            l3718 4788  
                          l3750 48D4                            l3742 4864                            l3734 4810  
                          l3726 47DA                            l3654 4D68                            l3670 5798  
                          l4390 54C4                            l3822 5026                            l3814 4FF4  
                          l3830 503C                            l3806 4FCE                            l3910 3B7E  
                          l4710 52BE                            l4198 5206                            l4438 5142  
                          l4446 5180                            l4622 435E                            l4630 439C  
                          l4702 42FA                            l5334 2E10                            l5326 2DCE  
                          l5318 2D6A                            l5270 2B7E                            l5262 2B3E  
                          l5254 2AFC                            l5246 2ABE                            l4550 352C  
                          l4542 34AA                            l4534 342A                            l5510 2FD4  
                          l5502 2F78                            l3902 5AAC                            l5342 59EE  
                          l5414 5B8A                            l5238 5108                            l4470 4AE0  
                          l4462 4ABC                            l4454 4A66                            l4366 4C0A  
                          l4358 4BAC                            l4294 218A                            l4286 211C  
                          l4278 20D6                            l4526 26EE                            l4518 25E0  
                          l4606 5938                            l5190 4A52                            l5182 49AE  
                          l5174 4966                            l4614 591A                            l5158 1A62  
                          l5094 127E                            l5086 10FC                            l5078 10C0  
                          l5430 453A                            l5422 44FC                            l5350 534A  
                          ?_pad 0011                            l5408 5BF0                            l3752 48E6  
                          l3744 4878                            l3736 481E                            l3728 47DE  
                          l3656 4D72                            l3664 5776                            l3672 59AA  
                          l3840 3152                            l4384 5488                            l3832 504C  
                          l3824 502E                            l3816 4FFC                            l3808 4FD2  
                          l3912 3B9E                            l3904 3ABA                            l4720 5314  
                          l4712 52D6                            l4448 5198                            l4640 43EC  
                          l4632 43B4                            l4624 4376                            l4704 430A  
                          l5280 2BD8                            l5272 2B84                            l5264 2B44  
                          l5256 2B12                            l5248 2AD6                            l4560 35C8  
                          l4552 353E                            l4544 34BC                            l4536 343A  
                          l5520 3032                            l5512 2FD6                            l5504 2F7A  
                          l5336 5C1E                            l5344 59FE                            l4800 28D0  
                          l4480 4B0C                            l4464 4ABE                            l4456 4A7E  
                          l4368 4C18                            l4296 21C0                            l4288 2138  
                          l4376 5972                            l3920 1A98                            l4528 2712  
                          l5192 4A5C                            l5184 49C6                            l5176 497E  
                          l5168 493E                            l4392 55F0                            l4616 5930  
                          l5096 1326                            l5088 119E                            l5440 4584  
                          l5432 4546                            l5424 4510                            l5416 44CC  
                          l5352 5368                            l5600 38EE                            l3690 4688  
                          l3682 4652                            l3746 4886                            l3754 48EC  
                          l3738 483E                            l3658 4D90                            l3666 5782  
                          l3674 59B6                            l3770 4F12                            l3762 4ED4  
                          l3850 31CA                            l3842 317A                            l4386 5490  
                          l3834 5054                            l3826 5030                            l3818 500A  
                          l3914 3BBA                            l3906 3AD6                            l4714 52E2  
                          l4722 587E                            l4650 4440                            l4642 43F8  
                          l4634 43C2                            l4626 4382                            l4706 4324  
                          l5290 2C22                            l5282 2BDA                            l5274 2BAE  
                          l5266 2B58                            l5258 2B1E                            l4570 3664  
                          l4562 35E6                            l4554 3562                            l4546 34DC  
                          l4538 345A                            l5530 30A2                            l5522 3046  
                          l5514 2FEA                            l5506 2F8E                            l5346 5A08  
                          l5338 59E0                            l5370 5824                            l4810 291A  
                          l4802 28DE                            l4730 2730                            l4490 4B3C  
                          l4466 4ACE                            l4298 21CE                            l4378 5988  
                          l3930 1AD8                            l3922 1AA6                            l5186 49D2  
                          l5178 498A                            l4394 5636                            l5098 133A  
                          l5450 45BE                            l5434 4552                            l5426 4524  
                          l5418 44DE                            l5362 53A6                            l5354 5380  
                          l5610 3914                            l5602 38F2                            l3692 4696  
                          l3684 4656                            l3756 48FC                            l3748 48B4  
                          l3668 5794                            l3676 59BA                            l3780 4F80  
                          l3772 4F26                            l3764 4EE4                            l3860 3216  
                          l3852 31E6                            l3844 319A                            l4388 549E  
                          l3828 5036                            l3916 3C24                            l3908 3B38  
                          l4716 52EE                            l4708 529A                            l4724 5892  
                          l4660 4498                            l4652 4450                            l4644 4408  
                          l4636 43CE                            l4628 438E                            l5292 2C3A  
                          l5284 2BE0                            l5276 2BC2                            l5268 2B66  
                          l4572 367C                            l4564 35FE                            l4556 357A  
                          l4548 34F4                            l5540 3108                            l5532 30CE  
                          l5524 3072                            l5516 3016                            l5508 2FBA  
                          l5372 5838                            l5380 4C8E                            l4820 2960  
                          l4812 292C                            l4804 28EA                            l4740 2770  
                          l4732 273E                            l4900 3FA2                            l4492 4B4C  
                          l4476 4AF8                            l4468 4AD2                            l3940 1B0A  
                          l3932 1ADA                            l3924 1AA8                            l5188 49EA  
                          l4580 5B10                            l5196 4E0E                            l5460 4618  
                          l5444 459C                            l5436 4566                            l5428 4536  
                          l5356 53A0                            l5348 5332                            l5620 3938  
                          l5612 3914                            l5604 38F6                            l3694 46B6  
                          l3686 4664                            l3758 491C                            l3678 59D2  
                          l3774 4F3A                            l3766 4EF8                            l3870 32B4  
                          l3862 3220                            l3854 31F8                            l3846 31AA  
                          l3838 3132                            l3790 5AE0                            l4718 52FC  
                          l4726 58A8                            l4662 44B2                            l4654 446A  
                          l4646 4422                            l4638 43DA                            l4670 41F4  
                          l5294 2C42                            l5286 2BF8                            l4574 36B2  
                          l4566 3634                            l4558 35B6                            l5542 311C  
                          l5534 30E8                            l5526 308C                            l5518 3030  
                          l5374 583A                            l5366 57FC                            l5382 4CA2  
                          l5390 5BCA                            l5470 5574                            l4830 29C0  
                          l4814 2942                            l4822 2972                            l4806 2908  
                          l4750 2796                            l4742 2772                            l4734 2740  
                          l4902 3FC6                            l4494 4B5C                            l4486 4B20  
                          l4478 4B02                            l3950 1B32                            l3942 1B0C  
                          l3926 1AB8                            l3934 1AE2                            l3918 1A8C  
                          l4590 5B4A                            l4582 5AEA                            l4398 5690  
                          l5198 4E24                            l5462 462C                            l5454 45D4  
                          l5446 45A8                            l5438 457E                            l5630 39BE  
                          l5622 3944                            l5614 3920                            l5606 38FA  
                          l3696 46BA                            l3688 4684                            l3784 58BE  
                          l3776 4F3E                            l3768 4F06                            l3880 3384  
                          l3864 3226                            l3872 3318                            l3856 3208  
                          l3848 31AE                            l4656 447C                            l4648 4434  
                          l4680 4240                            l4672 4200                            l4664 41AC  
                          l5296 2C66                            l5288 2BFE                            l4568 3646  
                          l5536 30EA                            l5528 308E                            l5480 2E68  
                          l4920 5A86                            l4912 5A72                            l5368 580C  
                          l5384 4CB6                            l5376 4C72                            l5392 5BD4  
                          l5472 5588                            l4840 2A2E                            l4824 2980  
                          l4816 2948                            l4808 290A                            l4760 27D6  
                          l4752 27A4                            l4736 2750                            l4744 277A  
                          l4728 2724                            l4904 3FD6                            l4488 4B2C  
                          l3960 1B6C                            l3952 1B42                            l3944 1B12  
                          l3936 1AF2                            l3928 1AC8                            l4592 5B50  
                          l4584 5AF0                            l4576 54EA                            l5464 4646  
                          l5456 45E8                            l5448 45AE                            l5632 39EC  
                          l5640 3A14                            l5624 3958                            l5608 390E  
                          l3698 46C6                            l3786 58D8                            l3778 4F6C  
                          l3890 33CE                            l3874 3332                            l3882 3394  
                          l3866 32A8                            l3858 320E                            l3794 4F9A  
                          l4658 4488                            l4690 4294                            l4682 424C  
                          l4666 41D0                            l4674 420E                            l5538 30FE  
                          l5490 2ED6                            l5482 2E7A                            l5474 2E2E  
                          l4922 5A88                            l4914 5A7C                            l5386 4CC6  
                          l5378 4C7E                            l5394 5BD6                            l5466 5548  
                          l4586 5B6A                            l4850 2A98                            l4834 29EA  
                          l4842 2A32                            l4826 2984                            l4818 2952  
                          l4770 2816                            l4762 27D8                            l4754 27A6  
                          l4746 278A                            l4738 2760                            l4906 3FE4  
                          l3970 1B98                            l3962 1B7E                            l3954 1B52  
                          l3946 1B20                            l3938 1AF8                            l4498 2376  
                          l4594 5B2A                            l4578 5B0A                            l5458 4608  
                          l5650 3A8E                            l5642 3A28                            l5634 39F2  
                          l5626 397A                            l5618 3936                            l3892 33DA  
                          l3884 33A6                            l3876 3350                            l3868 32AE  
                          l3796 4F9E                            l3788 5AC4                            l4692 42A6  
                          l4684 425E                            l4676 4226                            l4668 41E8  
                          l5492 2F02                            l5484 2EA6                            l5476 2E40  
                          l4916 5A82                            l4924 5BAC                            l5388 4CDA  
                          l5396 5BE0                            l5468 555C                            l4588 5B70  
                          l4852 2A9C                            l4844 2A4C                            l4836 29F6  
                          l4828 2992                            l4780 2846                            l4772 281E  
                          l4756 27B6                            l4764 27E0                            l4748 2790  
                          l4908 3FE6                            l3980 1BAC                            l3972 1B9C  
                          l3964 1B8C                            l3956 1B54                            l3948 1B22  
                          l4596 5B30                            l4940 3CE4                            l4932 3CB0  
                          l5652 3AA8                            l5644 3A42                            l5636 3A0A  
                          l5628 3996                            l3894 33E2                            l3886 33B6  
                          l3878 336A                            l3798 4FAC                            l4694 42B2  
                          l4686 426A                            l4678 4234                            l5494 2F1C  
                          l5486 2EC0                            l5478 2E5C                            l4918 5A84  
                          l5398 5BE2                            l4854 2AAA                            l4846 2A62  
                          l4838 2A04                            l4790 2884                            l4782 2846  
                          l4774 2822                            l4766 27F0                            l4758 27C6  
                          l4870 3E64                            l3990 1BC0                            l3982 1BB0  
                          l3974 1BA0                            l3966 1B90                            l3958 1B5C  
                          l4598 53AA                            l4942 3CEA                            l4934 3CB4  
                          l4926 3C8E                            l5654 3AAE                            l5646 3A56  
                          l5638 3A10                            l5590 38D2                            l3888 33BC  
                          l3896 33F2                            l4696 42C2                            l4688 427A  
                          l5496 2F1E                            l5488 2EC2                            l4856 2AB0  
                          l4848 2A7C                            l4792 2894                            l4768 2806  
                          l4880 3EDC                            l4872 3EAA                            l3992 1BC4  
                          l3984 1BB4                            l3976 1BA4                            l3968 1B94  
                          l4960 3D4A                            l4952 3D16                            l4944 3D06  
                          l4936 3CC0                            l5648 3A70                            l5592 38D6  
                          l4698 42DC                            l5498 2F32                            l4858 2AB2  
                          l4794 28A4                            l4786 285A                            l4778 2836  
                          l4890 3F64                            l4882 3EE8                            l4874 3EC0  
                          l4866 3E46                            l3994 1BC8                            l3986 1BB8  
                          l3978 1BA8                            l4962 3D50                            l4954 3D1A  
                          l4946 3D0C                            l4938 3CCC                            l5594 38DA  
                          l4796 28AC                            l4788 2874                            l4892 3F70  
                          l4884 3F1A                            l4868 3E56                            l3988 1BBC  
                          l3996 1BCC                            l4980 3DB0                            l4972 3D7C  
                          l4964 3D6C                            l4956 3D26                            l5596 38E6  
                          l4798 28BC                            l4894 3F7E                            l4886 3F1C  
                          l4878 3ED4                            l3998 1BD0                            l4982 3DB6  
                          l4974 3D80                            l4966 3D72                            l4958 3D32  
                          l5598 38EA                            l4896 3F9C                            l4888 3F28  
                          l4992 3DE2                            l4984 3DD2                            l4976 3D8C  
                          l4898 3F9E                            l4994 3DE6                            l4986 3DD8  
                          l4978 3D98                            l4996 3DF2                            l4998 3DFE  
                          STR_1 0E16                            STR_2 0E1E                            STR_3 0E24  
                          STR_4 0E31                            STR_5 0E3B                            STR_6 0E05  
                          u3000 481E                            u3001 481A                            u3010 485C  
                          u3011 4858                            u3020 4886                            u3100 4FAC  
                          u3021 4882                            u3101 4FA8                            u3030 48B4  
                          u3110 4FC6                            u3031 48B0                            u3111 4FC2  
                          u3040 48FC                            u3200 31CA                            u3120 4FEC  
                          u4000 227A                    _BAUD4CONbits 000EE9                            u3041 48F8  
                          u3201 31C6                            u3121 4FE8                            u4001 2276  
                          _LATE 000F7D                            u3050 4EE4                            u3210 31F8  
                          u3130 500A                            u4010 228E                            u3051 4EE0  
                          u3211 31F4                            u3131 5006                            u4011 228A  
                          _LATG 000F7F                            u3060 4F06                            u3300 33CE  
                          u3220 3208                            u3140 5026                            u4100 4C68  
                          u4020 22A8                            u3061 4F02                            u3301 33CA  
                          u3221 3204                            u3141 5022                            u4101 4C64  
                          u4021 22A4                            u3070 4F5C                            u3230 3332  
                          u3150 504C                            u3310 5AAC                            u4030 22F0  
                          u4110 5988                            u3071 4F58                            u3231 332E  
                          u3151 5048                            u3311 5AA8                            u4031 22EC  
                          u4111 5984                            u3080 4F6C                            u3240 3350  
                          u3160 3162                            u4120 54E0                            u3320 5AC2  
                          u5000 3E64                            u4200 4B1C                            u4040 231E  
                          u3400 1B0A                            u3081 4F68                            u3241 334C  
                          u3161 315C                            u4121 54DC                            u3321 5ABE  
                          u5001 3E60                            u4201 4B18                            u4041 231A  
                          u3401 1B06                            u4130 5A42                            u3090 58D8  
                          u3250 336A                            u3170 3164                            u3330 3AD6  
                          u5010 3EC0                            u4210 4B3C                            u4050 2358  
                          u3410 1B20                            _T2PR 000FBC                            u4131 5A3E  
                          u3091 58D4                            u3251 3366                            u3331 3AD2  
                          u5011 3EBC                            u4211 4B38                            u4051 2354  
                          u3411 1B1C                            u3260 3384                            u3180 317A  
                          u3340 3BBA                            u4140 5198                            u5020 3F16  
                          u4220 4B4C                            u4060 4B9C                            u3500 1C5A  
                          u3420 1B32                            u4300 26D2                            u5100 3D6C  
                          u3261 3380                            u3181 3176                            u3341 3BB6  
                          u4141 5194                            u5021 3F12                            u4221 4B48  
                          u4061 4B98                            u3501 1C56                            u3421 1B2E  
                          u5101 3D68                            u3270 3394                            u3190 31AA  
                          u4150 51B0                            u5030 3F60                            u4070 4BDA  
                          u3510 1C7A                            u3430 1B42                            u4310 26EE  
                          u4230 23B6                            u5110 3DD2                            u3271 3390  
                          u3191 31A6                            u4151 51AC                            u5031 3F5C  
                          u4071 4BD6                            u3511 1C76                            u3431 1B3E  
                          u4311 26EA                            u5111 3DCE                            u3280 33A6  
                          u4400 3506                            u4320 343A                            u5040 3F7E  
                          u4160 4A7E                            u4080 4BF8                            u3600 1DBA  
                          u3520 1C88                            u3440 1B7E                            u4240 23DE  
                          u5120 3E38                            u5200 1A00                            u3281 33A2  
                          u4401 34FE                            u4321 3436                            u5041 3F7A  
                          u4161 4A7A                            u4081 4BF4                            u3601 1DB6  
                          u3521 1C84                            u3441 1B7A                            u4305 26C8  
                          u4241 23DA                            u5121 3E34                            u5201 19FC  
                          u3290 33B6                            u3354 3C14                            u4330 344C  
                          u5050 3F8E                            u4170 4AB2                            u4090 4C18  
                          u3610 1DE6                            u3530 1C98                            u3450 1B8C  
                          u3370 1AA6                            u4250 2412                            u5210 1A34  
                          u5130 16AA                            u3291 33B2                            u3355 3C10  
                          u4331 3444                            u5051 3F8A                            u4091 4C14  
                          u3611 1DE2                            u3531 1C94                            u3451 1B88  
                          u3371 1AA2                            u4235 23AC                            u5211 1A30  
                          u5131 16A6                            u2900 57B8                            u3364 3C7E  
                          u5300 2C66                            u4500 3610                            u4420 353E  
                          u5060 3F9C                            u4180 4AE0                            u3700 1EC8  
                          u3620 1DF6                            u3540 1CCA                            u3460 1BFA  
                          u3380 1AB8                            u4260 242E                            u5220 1A62  
                          u5140 1778                            u2901 57B4                            u3365 3C7A  
                          u5301 2C62                            u4501 3608                            u4421 353A  
                          u5061 3F98                            u4181 4ADC                            u3701 1EC4  
                          u3621 1DF2                            u3541 1CC6                            u3461 1BF6  
                          u3381 1AB4                            u4261 242A                            u5221 1A5E  
                          u5141 1774                            u2910 59D2                            u5310 2CA6  
                          u4430 3550                            u4350 3484                            u5070 3FD6  
                          u4190 4AF4                            u3710 1EDA                            u3630 1E12  
                          u3550 1CD8                            u3470 1C12                            u3390 1AC8  
                          u4270 246E                            u5230 1A7C                            u5150 17BA  
                          u2911 59CE                            u5311 2CA2                            u4431 3548  
                          u4351 347C                            u6007 59F4                            u5071 3FD2  
                          u4191 4AF0                            u4175 4AA8                            u3711 1ED6  
                          u3631 1E0E                            u3551 1CD4                            u3471 1C0C  
                          u3391 1AC4                            u4271 246A                            u4255 2408  
                          u5231 1A78                            u5151 17B6                            u2920 4664  
                          u4600 43B4                            u5320 2CE6                            u4520 3646  
                          u5080 3FE4                            u3800 57E4                            u3720 1EEA  
                          u3640 1E22                            u3560 1CF6                            u3480 1C14  
                          u4280 2574                            u5160 187A                            u5240 4ECC  
                          u5400 4510                            u2921 4660                            u4601 43B0  
                          u5321 2CE2                            u4521 3642                            u6017 3464  
                          u5081 3FE0                            u3801 57DC                            u3721 1EE6  
                          u3641 1E1E                            u3561 1CF2                            u4281 2570  
                          u5161 1876                            u5241 4EC8                            u5401 450C  
                          u2930 4696                            u4610 43EC                            u5330 2D3A  
                          u4530 3658                            u4450 358C                            u4418 3508  
                          u4370 34BC                            u5250 50D8                            u3730 1F0A  
                          u3650 1E34                            u3570 1D2E                            u3490 1C3C  
                          u4290 2612                            u5090 3D06                            u5170 18A6  
                          u5410 4536              verify_color@color2 0098                            u2931 4692  
                          u4611 43E8                            u5331 2D36                            u6107 36A4  
                          u4531 3650                            u4451 3584                            u4371 34B8  
                          u6027 349C                            u5251 50D4                            u3731 1F06  
                          u3651 1E30                            u3571 1D2A                            u3491 1C38  
                          u4291 260E                            u5091 3D02                            u5171 18A2  
                          u5411 4532                            u2860 4D56                            u3820 51FA  
                          u4620 4422                            u4700 42A6                            u5340 2D8E  
                          u4380 34CE                            u4348 344E                            u5500 2F32  
                          u5260 50F0                            u3900 1FC8                            u3740 1F1C  
                          u3660 1E4A                            u3580 1D74                            u5180 196E  
                          u5420 4566                            u2941 46C0                            u2861 4D52  
                          u3821 51F6                            u4621 441E                            u4701 42A2  
                          u5341 2D8A                            u6117 585C                            u6037 34E6  
                          u4381 34C6                            u5501 2F2E                            u5261 50EC  
                          u3901 1FC4                            u3741 1F18                            u3661 1E46  
                          u3581 1D70                            u5181 196A                            u5421 4562  
                          u2950 46E4                            u2870 4D68                            u3830 521E  
                          u4630 4434                            u4710 42DC                            u5350 2DCE  
                          u5270 2BAE                            u4550 368E                            u4518 3612  
                          u4470 35C8                            u5510 2F8E                            u3910 1FDA  
                          u3750 1F38                            u3670 1E60                            u3590 1DAA  
                          u5190 19BE                            u5430 4598                            u2951 46E0  
                          u2871 4D64                            u3831 521A                            u6207 448E  
                          u4631 4430                            u4711 42D8                            u5351 2DCA  
                          u5271 2BAA                            u6127 2B70                            u4551 3686  
                          u4471 35C4                            u6047 351E                            u5511 2F8A  
                          u3911 1FD6                            u3751 1F34                            u3671 1E5C  
                          u3591 1DA6                            u5191 19BA                            u5431 4594  
                          u2960 470E                            u2880 4D90                            u3760 401C  
                          u3840 5268                            u4640 446A                            u4720 42EE  
                          u5280 2BD4                            u4480 35DA                            u4448 3552  
                          u4368 3486                            u5520 2FEA                            u4800 27B6  
                          u3920 1FEA                            u3680 1E74                            u5440 45BE  
                          u5360 53A0                            u2961 470A                            u2881 4D8C  
                          u3761 4018                            u3841 5264                            u6217 589C  
                          u4641 4466                            u4721 42EA                            u6137 4206  
                          u5281 2BD0                            u4481 35D2                            u6057 356C  
                          u5521 2FE6                            u4801 27B2                            u3921 1FE6  
                          u3681 1E70                            u5441 45BA                            u5361 539C  
                          u2970 474E                            u2890 4DC6                            u3770 4064  
                          u3850 5280                            u4650 447C                            u4730 4324  
                          u5290 2C22                            u4570 36C6                            u5530 3046  
                          u4810 27C6                            u3818 57E6                            u3930 2020  
                          u3690 1E8E                            u5450 45D0                            u5610 398C  
                          u2971 474A                            u2891 4DC2                            u3771 4060  
                          u3851 527C                            u6227 5178                            u4651 4478  
                          u4731 4320                            u6147 4270                            u5291 2C1E  
                          u4571 36C2                            u6067 35A8                            u5531 3042  
                          u4811 27C2                            u3931 201C                            u3691 1E8A  
                          u5451 45CC                            u5611 3988                            u3860 5C18  
                          u2980 4798                            u3780 4088                            u4740 5314  
                          u4660 44B2                            u4548 365A                            u4468 358E  
                          u5540 30A2                            u4900 2980                            u4820 2806  
                          u3940 2030                            u4580 591A                            u5460 4618  
                          u5620 39BE                            u3861 5C14                            u2981 4794  
                          u3781 4084                            u4741 5310                            u6237 51BA  
                          u4661 44AE                            u6157 42B8                            u6077 35F0  
                          u5541 309E                            u4901 297C                            u4821 2802  
                          u3941 202C                            u4581 5916                            u5461 4614  
                          u5621 39BA                            u2990 47EC                            u3790 412C  
                          u4750 532C                            u4670 4226                            u4398 34D0  
                          u5550 30FE                            u5470 2E40                            u4910 2992  
                          u4830 2846                            u3950 21AA                            u3870 1F66  
                          u4590 5930                            u5390 44F0                            u2991 47E8  
                          u3791 4128                            u4751 5328                            u6247 5248  
                          u6167 4300                            u4671 4222                            u6087 3626  
                          u5551 30FA                            u5471 2E3C                            u4911 298E  
                          u4831 2842                            u3871 1F62                            u4591 592C  
                          u5391 44EC                            u4680 425E                            u4568 3690  
                          u5480 2E7A                            u4920 29C0                            u4840 28BC  
                          u4760 273E                            u3960 2204                            u3880 1F78  
                          u6257 528A                            u6177 4394                            u4681 425A  
                          u6097 366E                            u5481 2E76                            u4921 29BC  
                          u4841 28B8                            u4761 273A                            u3961 2200  
                          u3881 1F74                            u4690 4294                            u4498 35DC  
                          u5490 2ED6                            u4930 29D6                            u4850 28DE  
                          u4770 2750                            u3970 2224                            u3890 1F88  
                          u6267 52F4                            u6187 43FE                            u4691 4290  
                          u5491 2ED2                            u4931 29D2                            u4851 28DA  
                          u4771 274C                            u3971 2220                            u3955 21A0  
                          u3891 1F84                            u5707 3A34                            u4940 29EA  
                          u4860 2908                            u4780 2760                            u3980 2236  
                          u6197 4446                            u4941 29E6                            u4861 2904  
                          u4781 275C                            u3981 2232                            u5717 533E  
                          u4950 2A04                            u4870 292C                            u4790 27A4  
                          u3990 2264                            u4951 2A00                            u4871 2928  
                          u4791 27A0                            u3991 2260                            u5807 3DA2  
                          u5727 5374                            u4960 2A4C                            u4880 2942  
                          u4961 2A48                            u4881 293E                            u5817 3E08  
                          u5737 4638                            u4970 2A7C                            u4890 2960  
                          u4971 2A78                            u4891 295C                            u5907 5B3A  
                          u5827 36E0                            u5747 4E34                            u4980 2AAA  
                          u4981 2AA6                            u5917 5B5A                            u5837 3740  
                          u5757 10E0                            u4990 3E56                            u4991 3E52  
                          u5927 4972                            u5847 37A4                            u5767 1346  
                          u5937 4996                            u5857 3820                            u5777 1670  
                          u5947 49BA                            u5867 389C                            u5787 3CD6  
                          u5957 49DE                            u5877 38B8                            u5797 3D3C  
                          u5967 5B7A                            u5887 5AFA                            u5977 5566  
                          u5897 5B1A                            u5987 50B8                            u5997 50FA  
                          abs@a 0013                            _dbuf 02C9                            _main 38D2  
                          _dtoa 3132                            _prec 01F8                            _nout 01F4  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 51DE                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 5640                 __end_of_HighISR 0028  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 47DA  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1F4C                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 493E                 __end_of___fldiv 2ABE                 __end_of___awdiv 505E  
               __end_of___flneg 59AA                 __end_of___flmul 2376                 __end_of___flsub 5776  
               __end_of___fltol 4B6E                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5B4A                           _LED_C 5B6A                           _LED_G 5B2A  
                         _LED_R 5AEA                           i2l694 0024                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5C1E      __end_of_I2C_2_Master_Start 5C6A         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5C40                 __end_of_compare 5938                    compare@lower 006A  
                         _flags 00F8                           _color 036A                    compare@upper 006E  
                         _fputc 4D44                           _fputs 5776                           pad@fp 0011  
                         _width 01F6                           _putch 5C6C                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5972                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 55F0                color_display@buf 0079         __end_of_color_read_Blue 56E0  
         _I2C_2_Master_RepStart 5C4C                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 541A                    __end_of_main 3ABA                    __end_of_dtoa 341C  
                 main@amb_light 0374            __end_of_detect_color 1A8C                    __end_of_stop 529A  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 00F6  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5C1E                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4C72                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5660 0020                          i2l5656 000A                          i2l5658 001A  
            turnLeft@angle_left 0024                       ??_HighISR 0001        __end_of_color_click_init 5A14  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3FF8                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4B6E                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5AC4  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 2E2A                       ??___flsub 0019  
                     ??___fltol 0060           __end_of_halfSpeedBack 511E                          _goback 2ABE  
                 compare@result 0070                          _memory 033C                          clear_0 544A  
                        clear_1 5456                          clear_2 5462                ___awdiv@quotient 000D  
                        _second 0368                          _motorL 01E6                          _motorR 01DC  
                        isa$std 000001                          pad@buf 0013                          _roundf 2376  
                        dtoa@fp 001C                          _strlen 59AA                       ??_compare 005F  
                 toggle_light@i 0004                __end_of_pin_init 5BAA                          fputc@c 0001  
       toggle_light@lightnumber 0005                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                  test_function@m 00E6                  test_function@w 00E8  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 005F  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 54EA  
                        stop@mL 001A                          stop@mR 001C               ??_initDCmotorsPWM 0003  
                     ??_sprintf 0058                __end_of_turnLeft 44C8                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 5476  
                 verify_color@m 0092                   verify_color@w 0094        __end_of_color_read_Clear 5730  
                    ___flneg@f1 0001        __end_of_color_read_Green 5690          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 5B6A  
                 __end_of_LED_C 5B8A                   __end_of_LED_G 5B4A                   __end_of_LED_R 5B0A  
              ?_color_read_Blue 0005                 _Interrupts_init 5C40                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 511E                    __pidataBANK0 5C6A                    __pidataBANK1 5C6E  
       __end_of_buggylight_init 5C34            turnRight@angle_right 0024           _distance_measure$3278 0074  
                 __end_of_fputc 4E0E               detect_color@color 008B                   __end_of_fputs 57BA  
                 __end_of_putch 5C6E                   __end_of_toint 0E05             __end_of_Timer0_init 5C06  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 006A              ??_distance_measure 0070  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00F8                      __pbssBANK1 01C8                      __pbssBANK2 02C9  
                    __pbssBANK3 0300                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 5BAA                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 00E0                         ?_goback 0058                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 5B0A  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E              short_burst_back@mL 0026  
            short_burst_back@mR 0028                    _detect_color 0E46   __end_of_color_data_collection 3E44  
       __end_of_Interrupts_init 5C4C          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5BCA              _I2C_2_Master_Start 5C60  
                    _initUSART4 5BCA              _I2C_2_Master_Write 5C34                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00F2                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5BE8         sendStringSerial4@string 0002  
                       ___aodiv 4652                         ___fladd 1A8C                         ___aomod 47DA  
                       ___fldiv 2724                         ___awdiv 4F9A                         ___flneg 5972  
                       ___flmul 1F4C                         ___flsub 5730                         ___fltol 4A66  
           ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00       distance_measure@threshold 007A  
                       __pcinit 541A                         __ramtop 0E00                      _read_color 54EA  
                     ?_turnLeft 0020                         __ptext0 38D2                         __ptext1 532E  
                       __ptext2 44C8                         __ptext3 4E0E                         __ptext4 0E46  
                       __ptext5 58FE                         __ptext6 3C8E                         __ptext7 54EA  
                       __ptext8 53AA                         __ptext9 36C8                         _compare 58FE  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 5938                   _RxBufWriteCnt 00FD  
                       goback@i 00DE          distance_measure@CC_amb 0078                         main@amb 036C  
        distance_measure@CG_amb 0072                         _sprintf 559E                         main@rgb 0377  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 5476  
            setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF                 _CALIBRATION_180 01FA  
                       fputc@fp 0003           __end_of_test_function 4652                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00EA                 test_function@mR 00EC  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
              _short_burst_back 5548               __end_of_vfpfcnvrt 41AC           __end_of_short_reverse 587E  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 57FC                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4D44  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4               __end_of_turnRight 433A  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C                      goback@buf2 0200                      goback@buf3 0164  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                 halfSpeedBack@mL 0020  
               halfSpeedBack@mR 0022                      _start_move 0366                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 01C8                    _EUSART4TXbuf 0300               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0092  
         __end_of_color_display 541A                      main@motorL 039B                      main@motorR 03A5  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 0085  
                detect_color@BC 007F                  detect_color@BG 0089                  detect_color@GB 007D  
                detect_color@GG 0087                  detect_color@BR 008C                  detect_color@GR 0081  
                detect_color@RB 007B                  detect_color@RG 0079                  detect_color@RR 0083  
         __end_of_color_predict 5A72                  __end_of___flge 4C72                  _fullSpeedAhead 529A  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5AEA                  __end_of_action 3132                     ?_read_color 000C  
                __end_of_goback 2E2A                  __end_of_roundf 2724              turnRight@delay_135 0026  
            turnRight@delay_180 0028                  __end_of_strlen 59E0             color_read_Clear@tmp 000A  
           start_initialization 541A                     __end_of_abs 58FE                     __end_of_pad 4F9A  
                 _TxBufWriteCnt 00FB               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
                _reverse_square 587E         __end_of_initDCmotorsPWM 583E                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 532E                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 005E                        ??_goback 005C                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK0 00FE                     __pdataBANK1 01FA  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                        ?_LED_OFF 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                   __pcstackBANK2 0200                   __pcstackBANK3 036C  
              ___aodiv@dividend 0001                        ?_HighISR 0001          __end_of_reverse_square 58BE  
                     _dtoa$2913 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 00F3  
                 _halfSpeedBack 505E                 turnRight@i_1358 002C                 turnRight@i_1359 002E  
                turnLeft@i_1333 002C                  turnLeft@i_1334 002E            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 5A9C               _I2C_2_Master_Init 5A72               _I2C_2_Master_Read 57BA  
             _I2C_2_Master_Stop 5C56          toggle_light@toggletime 0001                    _RxBufReadCnt 00FC  
      __end_of_short_burst_back 559E                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001                       action@buf 0264        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5A14           _color_data_collection 3C8E  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u563_40 001A  
                      i2u563_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                  ?_halfSpeedBack 0020  
                      _SSP2STAT 000ED8                     _array_index 036B                       _vfpfcnvrt 3FF8  
     __end_of_I2C_2_Master_Idle 5AC4            __end_of_toggle_light 36C8       __end_of_I2C_2_Master_Init 5A9C  
     __end_of_I2C_2_Master_Read 57FC               ___wmul@multiplier 0001                       goback@buf 0100  
     __end_of_I2C_2_Master_Stop 5C60                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 53AA          test_function@amb_light 00F0                       main@white 037F  
             ??_color_read_Blue 0007                       _stop_move 0364                   detect_color@m 0071  
                 detect_color@w 0073                    _TxBufReadCnt 00FA                       _turnRight 41AC  
               _calibrate_white 36C8       __end_of_sendStringSerial4 5A44               _amb_light_measure 493E  
 __end_of_I2C_2_Master_RepStart 5C56              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3C8E  
                    roundf@F527 01F0                _distance_measure 4E0E                    ??_initUSART4 0001  
            ?_amb_light_measure 006A                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 51DE  
                  __Lsmallconst 0E00            compare@value2compare 006C             ??_amb_light_measure 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 02C8                      sprintf@fmt 0062                        ___xxtofl 3E44  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5BE8  
                    ?_turnRight 0020                        __ptext10 55F0                        __ptext11 5640  
                      __ptext20 5730                        __ptext12 5690                        __ptext21 1A8C  
                      __ptext13 5AEA                        __ptext30 2724                        __ptext22 5972  
                      __ptext14 5B0A                        __ptext31 5B6A                        __ptext23 1F4C  
                      __ptext15 5B2A                        __ptext40 5C34                        __ptext32 5548  
                      __ptext24 4B6E                        __ptext16 5B4A                        __ptext41 5C56  
                      __ptext33 505E                        __ptext25 4A66                        __ptext17 493E  
                      __ptext50 41AC                        __ptext42 5C60                        __ptext34 5B8A  
                      __ptext26 56E0                        __ptext18 5938                        __ptext51 433A  
                      __ptext43 5A9C                        __ptext35 5BCA                        __ptext27 5C4C  
                      __ptext19 2376                        __ptext60 559E                        __ptext52 587E  
                      __ptext44 5A72                        __ptext36 4C72                        __ptext28 57BA  
                      __ptext61 5488                        __ptext53 511E                        __ptext45 5C1E  
                      __ptext37 57FC                        __ptext29 3E44                        __ptext70 47DA  
                      __ptext62 3FF8                        __ptext54 51DE                        __ptext46 2E2A  
                      __ptext38 59E0                        __ptext71 4652                        __ptext63 3132  
                      __ptext55 529A                        __ptext47 341C                        __ptext39 5BAA  
                      __ptext72 5A14                        __ptext64 4ED4                        __ptext56 3ABA  
                      __ptext48 583E                        __ptext73 5C06                        __ptext65 59AA  
                      __ptext57 5AC4                        __ptext49 2ABE                        __ptext74 5BE8  
                      __ptext66 5776                        __ptext58 4F9A                        __ptext75 5C40  
                      __ptext67 4D44                        __ptext59 5A44                        __ptext68 5C6C  
                      __ptext69 58BE       __end_of_amb_light_measure 4A66                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 0030  
        test_function@test_code 00F5                   turnLeft@delay 0030                        action@mL 00E0  
                      action@mR 00E2                      turnLeft@mL 0020                      turnLeft@mR 0022  
            __end_of_read_color 5548                        _pin_init 5B8A                      turnRight@i 002A  
               ??_halfSpeedBack 0024                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FE  
                      goback@mL 0058                        goback@mR 005A                        _vfprintf 5488  
                      _turnLeft 433A                ___aomod@dividend 0001         __end_of_calibrate_white 38D2  
                    _INTCONbits 000FF2                     _setMotorPWM 3ABA                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0001                ??_fullSpeedAhead 001E  
                 _test_function 44C8                       turnLeft@i 002A                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 583E                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 59E0                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3277 008E                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     ??_turnRight 0025               ?_short_burst_back 0026  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012              ??_short_burst_back 002A                 _sendCharSerial4 5C06  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 00E6  
                  _toggle_light 341C                    ___aomod@sign 0012                    _verify_color 532E  
                   _roundf$3280 0049                     _roundf$3279 004F                   _color_display 53AA  
               main@stop_signal 0376  
