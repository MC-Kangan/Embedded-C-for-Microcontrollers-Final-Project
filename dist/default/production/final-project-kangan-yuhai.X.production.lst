

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Mar 13 17:10:07 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.35
    99                           ; Generated 05/05/2021 GMT
   100                           ; 
   101                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F67K40 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK0
   135  005AA4                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _SENSITIVITY
   139  005AA4  0A                 	db	10
   140                           
   141                           	psect	idataBANK1
   142  005AA0                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for _CALIBRATION_180
   146  005AA0  14                 	db	20
   147                           
   148                           ;initializer for _CALIBRATION_135
   149  005AA1  0A                 	db	10
   150                           
   151                           	psect	smallconst
   152  000E00                     __psmallconst:
   153                           	callstack 0
   154  000E00  00                 	db	0
   155  000E01  0000               	dw	0
   156  000E03  4B00               	dw	19200
   157  000E05                     __end_of_toint:
   158                           	callstack 0
   159  0000                     _TX4REG	set	3812
   160  0000                     _RC4STAbits	set	3815
   161  0000                     _SP4BRGH	set	3814
   162  0000                     _LATEbits	set	3965
   163  0000                     _TRISGbits	set	3975
   164  0000                     _TRISEbits	set	3973
   165  0000                     _LATGbits	set	3967
   166  0000                     _LATFbits	set	3966
   167  0000                     _TRISFbits	set	3974
   168  0000                     _SSP2CON2bits	set	3802
   169  0000                     _LATG	set	3967
   170  0000                     _LATE	set	3965
   171  0000                     _RX4PPS	set	3605
   172  0000                     _SSP2CLKPPS	set	3612
   173  0000                     _SSP2DATPPS	set	3613
   174  0000                     _ANSELDbits	set	3751
   175  0000                     _SSP2ADD	set	3798
   176  0000                     _SSP2CON1bits	set	3801
   177  0000                     _LATAbits	set	3961
   178  0000                     _LATDbits	set	3964
   179  0000                     _LATHbits	set	3968
   180  0000                     _TRISDbits	set	3972
   181  0000                     _TRISHbits	set	3976
   182  0000                     _PORTFbits	set	3982
   183  0000                     _T2PR	set	4028
   184  0000                     _T2CONbits	set	4029
   185  0000                     _PWM7DCH	set	4000
   186  0000                     _PWM6DCH	set	4003
   187  0000                     _TRISAbits	set	3969
   188  0000                     _TRISCbits	set	3971
   189  0000                     _LATCbits	set	3963
   190  0000                     _RC4REG	set	3811
   191  0000                     _SP4BRGL	set	3813
   192  0000                     _TX4STAbits	set	3816
   193  0000                     _BAUD4CONbits	set	3817
   194  0000                     _SSP2CON2	set	3802
   195  0000                     _SSP2STAT	set	3800
   196  0000                     _ANSELFbits	set	3764
   197  0000                     _SSP2BUF	set	3797
   198  0000                     _PIE0bits	set	3625
   199  0000                     _PIE4bits	set	3629
   200  0000                     _PIR4bits	set	3639
   201  0000                     _RC0PPS	set	3682
   202  0000                     _RC7PPS	set	3689
   203  0000                     _RD5PPS	set	3695
   204  0000                     _RE2PPS	set	3700
   205  0000                     _RD6PPS	set	3696
   206  0000                     _TMR0L	set	4051
   207  0000                     _TMR0H	set	4052
   208  0000                     _T0CON0bits	set	4053
   209  0000                     _T2CLKCONbits	set	4031
   210  0000                     _T2HLTbits	set	4030
   211  0000                     _PWM6CONbits	set	4004
   212  0000                     _PWM7CONbits	set	4001
   213  0000                     _PIR0bits	set	3635
   214  0000                     _T0CON1bits	set	4054
   215  0000                     _INTCONbits	set	4082
   216  000E05                     STR_1:
   217                           
   218                           ; BSR set to: 14
   219  000E05  25                 	db	37
   220  000E06  64                 	db	100	;'d'
   221  000E07  09                 	db	9
   222  000E08  25                 	db	37
   223  000E09  64                 	db	100	;'d'
   224  000E0A  09                 	db	9
   225  000E0B  25                 	db	37
   226  000E0C  64                 	db	100	;'d'
   227  000E0D  09                 	db	9
   228  000E0E  25                 	db	37
   229  000E0F  64                 	db	100	;'d'
   230  000E10  0D                 	db	13
   231  000E11  0A                 	db	10
   232  000E12  00                 	db	0
   233  000E13  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238  005312                     __pcinit:
   239                           	callstack 0
   240  005312                     start_initialization:
   241                           	callstack 0
   242  005312                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to BANK1 (2 bytes)
   246                           ; load TBLPTR registers with __pidataBANK1
   247  005312  0EA0               	movlw	low __pidataBANK1
   248  005314  6EF6               	movwf	tblptrl,c
   249  005316  0E5A               	movlw	high __pidataBANK1
   250  005318  6EF7               	movwf	tblptrh,c
   251  00531A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   252  00531C  6EF8               	movwf	tblptru,c
   253  00531E  0009               	tblrd		*+	;fetch initializer
   254  005320  CFF5 F1C3          	movff	tablat,__pdataBANK1
   255  005324  0009               	tblrd		*+	;fetch initializer
   256  005326  CFF5 F1C4          	movff	tablat,__pdataBANK1+1
   257                           
   258                           ; Initialize objects allocated to BANK0 (1 bytes)
   259                           ; load TBLPTR registers with __pidataBANK0
   260  00532A  0EA4               	movlw	low __pidataBANK0
   261  00532C  6EF6               	movwf	tblptrl,c
   262  00532E  0E5A               	movlw	high __pidataBANK0
   263  005330  6EF7               	movwf	tblptrh,c
   264  005332  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   265  005334  6EF8               	movwf	tblptru,c
   266  005336  0009               	tblrd		*+	;fetch initializer
   267  005338  CFF5 F0FF          	movff	tablat,__pdataBANK0
   268                           
   269                           ; Clear objects allocated to BANK2 (60 bytes)
   270  00533C  EE02  F000         	lfsr	0,__pbssBANK2
   271  005340  0E3C               	movlw	60
   272  005342                     clear_0:
   273  005342  6AEE               	clrf	postinc0,c
   274  005344  06E8               	decf	wreg,f,c
   275  005346  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK1 (128 bytes)
   278  005348  EE01  F000         	lfsr	0,__pbssBANK1
   279  00534C  0E80               	movlw	128
   280  00534E                     clear_1:
   281  00534E  6AEE               	clrf	postinc0,c
   282  005350  06E8               	decf	wreg,f,c
   283  005352  E1FD               	bnz	clear_1
   284                           
   285                           ; Clear objects allocated to BANK0 (8 bytes)
   286  005354  EE00  F0F7         	lfsr	0,__pbssBANK0
   287  005358  0E08               	movlw	8
   288  00535A                     clear_2:
   289  00535A  6AEE               	clrf	postinc0,c
   290  00535C  06E8               	decf	wreg,f,c
   291  00535E  E1FD               	bnz	clear_2
   292  005360                     end_of_initialization:
   293                           	callstack 0
   294  005360                     __end_of__initialization:
   295                           	callstack 0
   296  005360  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297  005362  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298  005364  0E00               	movlw	low (__Lsmallconst shr (0+16))
   299  005366  6EF8               	movwf	tblptru,c
   300  005368  0E0E               	movlw	high __Lsmallconst
   301  00536A  6EF7               	movwf	tblptrh,c
   302  00536C  0100               	movlb	0
   303  00536E  EFC7  F01F         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	bssBANK0
   306  0000F7                     __pbssBANK0:
   307                           	callstack 0
   308  0000F7                     _prec:
   309                           	callstack 0
   310  0000F7                     	ds	2
   311  0000F9                     _flags:
   312                           	callstack 0
   313  0000F9                     	ds	2
   314  0000FB                     _TxBufReadCnt:
   315                           	callstack 0
   316  0000FB                     	ds	1
   317  0000FC                     _TxBufWriteCnt:
   318                           	callstack 0
   319  0000FC                     	ds	1
   320  0000FD                     _RxBufReadCnt:
   321                           	callstack 0
   322  0000FD                     	ds	1
   323  0000FE                     _RxBufWriteCnt:
   324                           	callstack 0
   325  0000FE                     	ds	1
   326                           
   327                           	psect	dataBANK0
   328  0000FF                     __pdataBANK0:
   329                           	callstack 0
   330  0000FF                     _SENSITIVITY:
   331                           	callstack 0
   332  0000FF                     	ds	1
   333                           
   334                           	psect	bssBANK1
   335  000100                     __pbssBANK1:
   336                           	callstack 0
   337  000100                     _memory:
   338                           	callstack 0
   339  000100                     	ds	40
   340  000128                     _EUSART4RXbuf:
   341                           	callstack 0
   342  000128                     	ds	20
   343  00013C                     _motorR:
   344                           	callstack 0
   345  00013C                     	ds	10
   346  000146                     _motorL:
   347                           	callstack 0
   348  000146                     	ds	10
   349  000150                     roundf@F527:
   350                           	callstack 0
   351  000150                     	ds	4
   352  000154                     _nout:
   353                           	callstack 0
   354  000154                     	ds	2
   355  000156                     _width:
   356                           	callstack 0
   357  000156                     	ds	2
   358  000158                     _stop_move:
   359                           	callstack 0
   360  000158                     	ds	2
   361  00015A                     _start_move:
   362                           	callstack 0
   363  00015A                     	ds	2
   364  00015C                     _second:
   365                           	callstack 0
   366  00015C                     	ds	2
   367  00015E                     _color:
   368                           	callstack 0
   369  00015E                     	ds	1
   370  00015F                     _array_index:
   371                           	callstack 0
   372  00015F                     	ds	1
   373  000160                     _dbuf:
   374                           	callstack 0
   375  000160                     	ds	32
   376                           
   377                           	psect	dataBANK1
   378  0001C3                     __pdataBANK1:
   379                           	callstack 0
   380  0001C3                     _CALIBRATION_180:
   381                           	callstack 0
   382  0001C3                     	ds	1
   383  0001C4                     _CALIBRATION_135:
   384                           	callstack 0
   385  0001C4                     	ds	1
   386                           
   387                           	psect	bssBANK2
   388  000200                     __pbssBANK2:
   389                           	callstack 0
   390  000200                     _EUSART4TXbuf:
   391                           	callstack 0
   392  000200                     	ds	60
   393                           
   394                           	psect	cstackBANK1
   395  000180                     __pcstackBANK1:
   396                           	callstack 0
   397  000180                     main@amb:
   398                           	callstack 0
   399                           
   400                           ; 8 bytes @ 0x0
   401  000180                     	ds	8
   402  000188                     main@amb_light:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000188                     	ds	2
   407  00018A                     main@stop_signal:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xA
   411  00018A                     	ds	1
   412  00018B                     main@rgb:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0xB
   416  00018B                     	ds	8
   417  000193                     main@white:
   418                           	callstack 0
   419                           
   420                           ; 28 bytes @ 0x13
   421  000193                     	ds	28
   422  0001AF                     main@motorL:
   423                           	callstack 0
   424                           
   425                           ; 10 bytes @ 0x2F
   426  0001AF                     	ds	10
   427  0001B9                     main@motorR:
   428                           	callstack 0
   429                           
   430                           ; 10 bytes @ 0x39
   431  0001B9                     	ds	10
   432                           
   433                           	psect	cstackBANK0
   434  000060                     __pcstackBANK0:
   435                           	callstack 0
   436  000060                     ??___fltol:
   437  000060                     ?_sprintf:
   438                           	callstack 0
   439  000060                     sprintf@s:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x0
   443  000060                     	ds	2
   444  000062                     sprintf@fmt:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2
   448  000062                     	ds	2
   449  000064                     ___fltol@sign1:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x4
   453  000064                     	ds	1
   454  000065                     ___fltol@exp1:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x5
   458  000065                     	ds	1
   459  000066                     ?_lroundf:
   460                           	callstack 0
   461  000066                     lroundf@x:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x6
   465  000066                     	ds	4
   466  00006A                     ?_amb_light_measure:
   467                           	callstack 0
   468  00006A                     compare@lower:
   469                           	callstack 0
   470  00006A                     amb_light_measure@amb:
   471                           	callstack 0
   472  00006A                     distance_measure@mL:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xA
   476  00006A                     	ds	2
   477  00006C                     ??_amb_light_measure:
   478  00006C                     compare@value2compare:
   479                           	callstack 0
   480  00006C                     distance_measure@mR:
   481                           	callstack 0
   482  00006C                     sprintf@ap:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xC
   486  00006C                     	ds	2
   487  00006E                     compare@upper:
   488                           	callstack 0
   489  00006E                     amb_light_measure@upper_bound:
   490                           	callstack 0
   491  00006E                     distance_measure@amb_light:
   492                           	callstack 0
   493  00006E                     sprintf@f:
   494                           	callstack 0
   495                           
   496                           ; 11 bytes @ 0xE
   497  00006E                     	ds	2
   498  000070                     ??_distance_measure:
   499  000070                     compare@result:
   500                           	callstack 0
   501  000070                     amb_light_measure@CC_amb_ave:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x10
   505  000070                     	ds	1
   506  000071                     detect_color@m:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x11
   510  000071                     	ds	1
   511  000072                     amb_light_measure@CC_amb_1:
   512                           	callstack 0
   513  000072                     distance_measure@CG_amb:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x12
   517  000072                     	ds	1
   518  000073                     detect_color@w:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x13
   522  000073                     	ds	1
   523  000074                     amb_light_measure@CC_amb_2:
   524                           	callstack 0
   525  000074                     _distance_measure$3243:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x14
   529  000074                     	ds	1
   530  000075                     ??_detect_color:
   531                           
   532                           ; 1 bytes @ 0x15
   533  000075                     	ds	1
   534  000076                     amb_light_measure@CC_amb_3:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x16
   538  000076                     	ds	2
   539  000078                     distance_measure@CC_amb:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x18
   543  000078                     	ds	1
   544  000079                     detect_color@RB:
   545                           	callstack 0
   546  000079                     color_display@buf:
   547                           	callstack 0
   548  000079                     color_predict@buf:
   549                           	callstack 0
   550                           
   551                           ; 100 bytes @ 0x19
   552  000079                     	ds	1
   553  00007A                     distance_measure@threshold:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x1A
   557  00007A                     	ds	1
   558  00007B                     detect_color@GB:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1B
   562  00007B                     	ds	1
   563  00007C                     distance_measure@stop:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x1C
   567  00007C                     	ds	1
   568  00007D                     detect_color@RG:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1D
   572  00007D                     	ds	2
   573  00007F                     detect_color@GR:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x1F
   577  00007F                     	ds	2
   578  000081                     detect_color@GG:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x21
   582  000081                     	ds	2
   583  000083                     detect_color@BC:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x23
   587  000083                     	ds	2
   588  000085                     detect_color@RR:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x25
   592  000085                     	ds	2
   593  000087                     detect_color@BR:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x27
   597  000087                     	ds	2
   598  000089                     detect_color@BB:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x29
   602  000089                     	ds	2
   603  00008B                     detect_color@color:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x2B
   607  00008B                     	ds	1
   608  00008C                     detect_color@BG:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x2C
   612  00008C                     	ds	2
   613  00008E                     _detect_color$3242:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x2E
   617  00008E                     	ds	4
   618  000092                     verify_color@m:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x32
   622  000092                     	ds	2
   623  000094                     verify_color@w:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x34
   627  000094                     	ds	2
   628  000096                     ??_verify_color:
   629                           
   630                           ; 1 bytes @ 0x36
   631  000096                     	ds	2
   632  000098                     verify_color@color2:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x38
   636  000098                     	ds	2
   637  00009A                     verify_color@color:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x3A
   641  00009A                     	ds	67
   642  0000DD                     color_predict@color:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x7D
   646  0000DD                     	ds	1
   647  0000DE                     color_data_collection@i:
   648                           	callstack 0
   649  0000DE                     goback@i:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x7E
   653  0000DE                     	ds	2
   654  0000E0                     color_data_collection@j:
   655                           	callstack 0
   656  0000E0                     action@mL:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x80
   660  0000E0                     	ds	2
   661  0000E2                     color_data_collection@k:
   662                           	callstack 0
   663  0000E2                     action@mR:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x82
   667  0000E2                     	ds	2
   668  0000E4                     color_data_collection@x:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x84
   672  0000E4                     	ds	2
   673  0000E6                     test_function@m:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x86
   677  0000E6                     	ds	2
   678  0000E8                     test_function@w:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x88
   682  0000E8                     	ds	2
   683  0000EA                     test_function@mL:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8A
   687  0000EA                     	ds	2
   688  0000EC                     test_function@mR:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x8C
   692  0000EC                     	ds	2
   693  0000EE                     ??_test_function:
   694                           
   695                           ; 1 bytes @ 0x8E
   696  0000EE                     	ds	2
   697  0000F0                     test_function@amb_light:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x90
   701  0000F0                     	ds	2
   702  0000F2                     test_function@complete:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x92
   706  0000F2                     	ds	1
   707  0000F3                     test_function@stop_signal:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x93
   711  0000F3                     	ds	1
   712  0000F4                     test_function@test_code:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x94
   716  0000F4                     	ds	1
   717  0000F5                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x95
   720  0000F5                     	ds	2
   721                           
   722                           	psect	cstackCOMRAM
   723  000001                     __pcstackCOMRAM:
   724                           	callstack 0
   725  000001                     ??_LED_OFF:
   726  000001                     ??_LED_R:
   727  000001                     ??_LED_C:
   728  000001                     ??_LED_B:
   729  000001                     ??_LED_G:
   730  000001                     ??_I2C_2_Master_Idle:
   731  000001                     ?_strlen:
   732                           	callstack 0
   733  000001                     ?___wmul:
   734                           	callstack 0
   735  000001                     ?___fladd:
   736                           	callstack 0
   737  000001                     ?___flneg:
   738                           	callstack 0
   739  000001                     ?___xxtofl:
   740                           	callstack 0
   741  000001                     ?___aodiv:
   742                           	callstack 0
   743  000001                     ?___aomod:
   744                           	callstack 0
   745  000001                     toggle_light@toggletime:
   746                           	callstack 0
   747  000001                     sendCharSerial4@charToSend:
   748                           	callstack 0
   749  000001                     initDCmotorsPWM@PWMperiod:
   750                           	callstack 0
   751  000001                     initDCmotors_parameter@motorL:
   752                           	callstack 0
   753  000001                     ___wmul@multiplier:
   754                           	callstack 0
   755  000001                     fputc@c:
   756                           	callstack 0
   757  000001                     strlen@s:
   758                           	callstack 0
   759  000001                     ___flge@ff1:
   760                           	callstack 0
   761  000001                     ___flneg@f1:
   762                           	callstack 0
   763  000001                     ___fladd@b:
   764                           	callstack 0
   765  000001                     ___xxtofl@val:
   766                           	callstack 0
   767  000001                     ___aodiv@dividend:
   768                           	callstack 0
   769  000001                     ___aomod@dividend:
   770                           	callstack 0
   771                           
   772                           ; 8 bytes @ 0x0
   773  000001                     	ds	1
   774  000002                     ??_I2C_2_Master_Read:
   775  000002                     ??_toggle_light:
   776  000002                     I2C_2_Master_Write@data_byte:
   777                           	callstack 0
   778  000002                     sendStringSerial4@string:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x1
   782  000002                     	ds	1
   783  000003                     color_writetoaddr@value:
   784                           	callstack 0
   785  000003                     I2C_2_Master_Read@ack:
   786                           	callstack 0
   787  000003                     initDCmotors_parameter@motorR:
   788                           	callstack 0
   789  000003                     ___wmul@multiplicand:
   790                           	callstack 0
   791  000003                     fputc@fp:
   792                           	callstack 0
   793  000003                     strlen@a:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x2
   797  000003                     	ds	1
   798  000004                     toggle_light@i:
   799                           	callstack 0
   800  000004                     color_writetoaddr@address:
   801                           	callstack 0
   802  000004                     I2C_2_Master_Read@tmp:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x3
   806  000004                     	ds	1
   807  000005                     ??_fputc:
   808  000005                     ??_color_click_init:
   809  000005                     ??___xxtofl:
   810  000005                     ?_color_read_Red:
   811                           	callstack 0
   812  000005                     ?_color_read_Blue:
   813                           	callstack 0
   814  000005                     ?_color_read_Green:
   815                           	callstack 0
   816  000005                     ?_color_read_Clear:
   817                           	callstack 0
   818  000005                     toggle_light@lightnumber:
   819                           	callstack 0
   820  000005                     ___wmul@product:
   821                           	callstack 0
   822  000005                     ___flge@ff2:
   823                           	callstack 0
   824  000005                     ___fladd@a:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x4
   828  000005                     	ds	2
   829  000007                     ??_color_read_Red:
   830  000007                     ??_color_read_Blue:
   831  000007                     ??_color_read_Green:
   832  000007                     ??_color_read_Clear:
   833  000007                     ?___awdiv:
   834                           	callstack 0
   835  000007                     ___awdiv@dividend:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x6
   839  000007                     	ds	2
   840  000009                     ??___fladd:
   841  000009                     ??___flge:
   842  000009                     ___xxtofl@sign:
   843                           	callstack 0
   844  000009                     ___awdiv@divisor:
   845                           	callstack 0
   846  000009                     ___aodiv@divisor:
   847                           	callstack 0
   848  000009                     ___aomod@divisor:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x8
   852  000009                     	ds	1
   853  00000A                     ___xxtofl@exp:
   854                           	callstack 0
   855  00000A                     color_read_Red@tmp:
   856                           	callstack 0
   857  00000A                     color_read_Blue@tmp:
   858                           	callstack 0
   859  00000A                     color_read_Green@tmp:
   860                           	callstack 0
   861  00000A                     color_read_Clear@tmp:
   862                           	callstack 0
   863  00000A                     fputs@s:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x9
   867  00000A                     	ds	1
   868  00000B                     ___awdiv@counter:
   869                           	callstack 0
   870  00000B                     ___xxtofl@arg:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xA
   874  00000B                     	ds	1
   875  00000C                     ___awdiv@sign:
   876                           	callstack 0
   877  00000C                     read_color@m:
   878                           	callstack 0
   879  00000C                     calibrate_white@w:
   880                           	callstack 0
   881  00000C                     fputs@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0xB
   885  00000C                     	ds	1
   886  00000D                     ___fladd@signs:
   887                           	callstack 0
   888  00000D                     ___awdiv@quotient:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0xC
   892  00000D                     	ds	1
   893  00000E                     ??_calibrate_white:
   894  00000E                     ___fladd@aexp:
   895                           	callstack 0
   896  00000E                     fputs@c:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0xD
   900  00000E                     	ds	1
   901  00000F                     ?___fldiv:
   902                           	callstack 0
   903  00000F                     ___fladd@bexp:
   904                           	callstack 0
   905  00000F                     setMotorPWM@m:
   906                           	callstack 0
   907  00000F                     fputs@i:
   908                           	callstack 0
   909  00000F                     ___fldiv@b:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0xE
   913  00000F                     	ds	1
   914  000010                     ___fladd@grs:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0xF
   918  000010                     	ds	1
   919  000011                     ??_setMotorPWM:
   920  000011                     ?_pad:
   921                           	callstack 0
   922  000011                     ?___flsub:
   923                           	callstack 0
   924  000011                     ___aodiv@counter:
   925                           	callstack 0
   926  000011                     ___aomod@counter:
   927                           	callstack 0
   928  000011                     pad@fp:
   929                           	callstack 0
   930  000011                     ___flsub@b:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x10
   934  000011                     	ds	1
   935  000012                     ___aodiv@sign:
   936                           	callstack 0
   937  000012                     ___aomod@sign:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x11
   941  000012                     	ds	1
   942  000013                     ?_abs:
   943                           	callstack 0
   944  000013                     pad@buf:
   945                           	callstack 0
   946  000013                     abs@a:
   947                           	callstack 0
   948  000013                     ___fldiv@a:
   949                           	callstack 0
   950  000013                     ___aodiv@quotient:
   951                           	callstack 0
   952                           
   953                           ; 8 bytes @ 0x12
   954  000013                     	ds	2
   955  000015                     ??_abs:
   956  000015                     pad@p:
   957                           	callstack 0
   958  000015                     ___flsub@a:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x14
   962  000015                     	ds	2
   963  000017                     ??___fldiv:
   964  000017                     ??_pad:
   965                           
   966                           ; 1 bytes @ 0x16
   967  000017                     	ds	1
   968  000018                     setMotorPWM@PWMduty:
   969                           	callstack 0
   970  000018                     pad@i:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x17
   974  000018                     	ds	1
   975  000019                     
   976                           ; 1 bytes @ 0x18
   977  000019                     	ds	1
   978  00001A                     stop@mL:
   979                           	callstack 0
   980  00001A                     fullSpeedAhead@mL:
   981                           	callstack 0
   982  00001A                     pad@w:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x19
   986  00001A                     	ds	1
   987  00001B                     ___fldiv@rem:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x1A
   991  00001B                     	ds	1
   992  00001C                     ?_dtoa:
   993                           	callstack 0
   994  00001C                     stop@mR:
   995                           	callstack 0
   996  00001C                     fullSpeedAhead@mR:
   997                           	callstack 0
   998  00001C                     dtoa@fp:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x1B
  1002  00001C                     	ds	2
  1003  00001E                     ??_stop:
  1004  00001E                     ??_fullSpeedAhead:
  1005  00001E                     dtoa@d:
  1006                           	callstack 0
  1007                           
  1008                           ; 8 bytes @ 0x1D
  1009  00001E                     	ds	1
  1010  00001F                     ___fldiv@sign:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x1E
  1014  00001F                     	ds	1
  1015  000020                     turnLeft@mL:
  1016                           	callstack 0
  1017  000020                     turnRight@mL:
  1018                           	callstack 0
  1019  000020                     fullSpeedBack@mL:
  1020                           	callstack 0
  1021  000020                     ___fldiv@new_exp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1F
  1025  000020                     	ds	2
  1026  000022                     turnLeft@mR:
  1027                           	callstack 0
  1028  000022                     turnRight@mR:
  1029                           	callstack 0
  1030  000022                     fullSpeedBack@mR:
  1031                           	callstack 0
  1032  000022                     ___fldiv@grs:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x21
  1036  000022                     	ds	2
  1037  000024                     ??_fullSpeedBack:
  1038  000024                     turnLeft@angle_left:
  1039                           	callstack 0
  1040  000024                     turnRight@angle_right:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x23
  1044  000024                     	ds	1
  1045  000025                     ??_turnLeft:
  1046  000025                     ??_turnRight:
  1047                           
  1048                           ; 1 bytes @ 0x24
  1049  000025                     	ds	1
  1050  000026                     ??_dtoa:
  1051  000026                     ___fldiv@bexp:
  1052                           	callstack 0
  1053  000026                     turnLeft@delay_135:
  1054                           	callstack 0
  1055  000026                     turnRight@delay_135:
  1056                           	callstack 0
  1057  000026                     short_reverse@mL:
  1058                           	callstack 0
  1059  000026                     reverse_square@mL:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x25
  1063  000026                     	ds	1
  1064  000027                     ___fldiv@aexp:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x26
  1068  000027                     	ds	1
  1069  000028                     ?___flmul:
  1070                           	callstack 0
  1071  000028                     turnLeft@delay_180:
  1072                           	callstack 0
  1073  000028                     turnRight@delay_180:
  1074                           	callstack 0
  1075  000028                     short_reverse@mR:
  1076                           	callstack 0
  1077  000028                     reverse_square@mR:
  1078                           	callstack 0
  1079  000028                     ___flmul@b:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x27
  1083  000028                     	ds	2
  1084  00002A                     ??_short_reverse:
  1085  00002A                     ??_reverse_square:
  1086  00002A                     turnLeft@i:
  1087                           	callstack 0
  1088  00002A                     turnRight@i:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x29
  1092  00002A                     	ds	2
  1093  00002C                     turnLeft@i_1333:
  1094                           	callstack 0
  1095  00002C                     turnRight@i_1358:
  1096                           	callstack 0
  1097  00002C                     ___flmul@a:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x2B
  1101  00002C                     	ds	2
  1102  00002E                     turnLeft@i_1334:
  1103                           	callstack 0
  1104  00002E                     turnRight@i_1359:
  1105                           	callstack 0
  1106  00002E                     _dtoa$2877:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x2D
  1110  00002E                     	ds	2
  1111  000030                     ??___flmul:
  1112  000030                     turnLeft@delay:
  1113                           	callstack 0
  1114  000030                     turnRight@delay:
  1115                           	callstack 0
  1116  000030                     dtoa@p:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x2F
  1120  000030                     	ds	2
  1121  000032                     dtoa@w:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x31
  1125  000032                     	ds	2
  1126  000034                     ___flmul@sign:
  1127                           	callstack 0
  1128  000034                     dtoa@s:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x33
  1132  000034                     	ds	1
  1133  000035                     ___flmul@grs:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x34
  1137  000035                     	ds	1
  1138  000036                     dtoa@n:
  1139                           	callstack 0
  1140                           
  1141                           ; 8 bytes @ 0x35
  1142  000036                     	ds	3
  1143  000039                     ___flmul@aexp:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x38
  1147  000039                     	ds	1
  1148  00003A                     ___flmul@bexp:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x39
  1152  00003A                     	ds	1
  1153  00003B                     ___flmul@prod:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3A
  1157  00003B                     	ds	3
  1158  00003E                     dtoa@i:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3D
  1162  00003E                     	ds	1
  1163  00003F                     ___flmul@temp:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x3E
  1167  00003F                     	ds	1
  1168  000040                     ?_vfpfcnvrt:
  1169                           	callstack 0
  1170  000040                     vfpfcnvrt@fp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x3F
  1174  000040                     	ds	1
  1175  000041                     ?_roundf:
  1176                           	callstack 0
  1177  000041                     roundf@x:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x40
  1181  000041                     	ds	1
  1182  000042                     vfpfcnvrt@fmt:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x41
  1186  000042                     	ds	2
  1187  000044                     vfpfcnvrt@ap:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x43
  1191  000044                     	ds	1
  1192  000045                     ??_roundf:
  1193                           
  1194                           ; 1 bytes @ 0x44
  1195  000045                     	ds	1
  1196  000046                     ??_vfpfcnvrt:
  1197                           
  1198                           ; 1 bytes @ 0x45
  1199  000046                     	ds	2
  1200  000048                     vfpfcnvrt@ll:
  1201                           	callstack 0
  1202                           
  1203                           ; 8 bytes @ 0x47
  1204  000048                     	ds	1
  1205  000049                     _roundf$3245:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x48
  1209  000049                     	ds	4
  1210  00004D                     roundf@e:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x4C
  1214  00004D                     	ds	2
  1215  00004F                     _roundf$3244:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x4E
  1219  00004F                     	ds	1
  1220  000050                     ?_vfprintf:
  1221                           	callstack 0
  1222  000050                     vfprintf@fp:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x4F
  1226  000050                     	ds	2
  1227  000052                     vfprintf@fmt:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x51
  1231  000052                     	ds	1
  1232  000053                     roundf@u:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x52
  1236  000053                     	ds	1
  1237  000054                     vfprintf@ap:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x53
  1241  000054                     	ds	2
  1242  000056                     vfprintf@cfmt:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x55
  1246  000056                     	ds	1
  1247  000057                     roundf@y:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x56
  1251  000057                     	ds	1
  1252  000058                     color_display@m:
  1253                           	callstack 0
  1254  000058                     goback@mL:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x57
  1258  000058                     	ds	2
  1259  00005A                     color_data_collection@m:
  1260                           	callstack 0
  1261  00005A                     goback@mR:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x59
  1265  00005A                     	ds	1
  1266  00005B                     ?___fltol:
  1267                           	callstack 0
  1268  00005B                     ___fltol@f1:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x5A
  1272  00005B                     	ds	1
  1273  00005C                     ??_goback:
  1274  00005C                     ??_color_data_collection:
  1275                           
  1276                           ; 1 bytes @ 0x5B
  1277  00005C                     	ds	2
  1278  00005E                     action@color:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x5D
  1282  00005E                     	ds	1
  1283  00005F                     
  1284                           ; 1 bytes @ 0x5E
  1285 ;;
  1286 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1287 ;;
  1288 ;; *************** function _main *****************
  1289 ;; Defined at:
  1290 ;;		line 29 in file "main.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  white          28   19[BANK1 ] struct white_card
  1295 ;;  motorR         10   57[BANK1 ] struct DC_motor
  1296 ;;  motorL         10   47[BANK1 ] struct DC_motor
  1297 ;;  rgb             8   11[BANK1 ] struct color_rgb
  1298 ;;  amb             8    0[BANK1 ] struct color_rgb
  1299 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1300 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;      Totals:         0       2      67       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1314 ;;Total ram usage:       69 bytes
  1315 ;; Hardware stack levels required when called: 12
  1316 ;; This function calls:
  1317 ;;		_I2C_2_Master_Init
  1318 ;;		_Interrupts_init
  1319 ;;		_Timer0_init
  1320 ;;		_action
  1321 ;;		_amb_light_measure
  1322 ;;		_buggylight_init
  1323 ;;		_calibrate_white
  1324 ;;		_color_click_init
  1325 ;;		_color_predict
  1326 ;;		_detect_color
  1327 ;;		_distance_measure
  1328 ;;		_fullSpeedAhead
  1329 ;;		_initDCmotorsPWM
  1330 ;;		_initDCmotors_parameter
  1331 ;;		_initUSART4
  1332 ;;		_pin_init
  1333 ;;		_stop
  1334 ;;		_test_function
  1335 ;;		_verify_color
  1336 ;; This function is called by:
  1337 ;;		Startup code after reset
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text0
  1342  003F8E                     __ptext0:
  1343                           	callstack 0
  1344  003F8E                     _main:
  1345                           	callstack 19
  1346  003F8E                     
  1347                           ;main.c: 32:     I2C_2_Master_Init();
  1348  003F8E  EC54  F02C         	call	_I2C_2_Master_Init	;wreg free
  1349  003F92                     
  1350                           ;main.c: 33:     color_click_init();
  1351  003F92  EC0B  F02C         	call	_color_click_init	;wreg free
  1352  003F96                     
  1353                           ;main.c: 34:     initDCmotorsPWM(199);
  1354  003F96  0E00               	movlw	0
  1355  003F98  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1356  003F9A  0EC7               	movlw	199
  1357  003F9C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1358  003F9E  EC17  F02B         	call	_initDCmotorsPWM	;wreg free
  1359  003FA2                     
  1360                           ;main.c: 35:     buggylight_init();
  1361  003FA2  EC2A  F02D         	call	_buggylight_init	;wreg free
  1362  003FA6                     
  1363                           ;main.c: 36:     initUSART4();
  1364  003FA6  EC00  F02D         	call	_initUSART4	;wreg free
  1365  003FAA                     
  1366                           ;main.c: 37:     Timer0_init();
  1367  003FAA  EC0F  F02D         	call	_Timer0_init	;wreg free
  1368  003FAE                     
  1369                           ;main.c: 38:     Interrupts_init();
  1370  003FAE  EC3B  F02D         	call	_Interrupts_init	;wreg free
  1371  003FB2                     
  1372                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1373  003FB2  ECE0  F02C         	call	_pin_init	;wreg free
  1374  003FB6                     
  1375                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1376  003FB6  0EAF               	movlw	low main@motorL
  1377  003FB8  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1378  003FBA  0E01               	movlw	high main@motorL
  1379  003FBC  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1380  003FBE  0EB9               	movlw	low main@motorR
  1381  003FC0  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1382  003FC2  0E01               	movlw	high main@motorR
  1383  003FC4  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1384  003FC6  ECE4  F025         	call	_initDCmotors_parameter	;wreg free
  1385  003FCA                     
  1386                           ;main.c: 49:     unsigned char stop_signal = 0;
  1387  003FCA  0E00               	movlw	0
  1388  003FCC  0101               	movlb	1	; () banked
  1389  003FCE  6F8A               	movwf	main@stop_signal& (0+255),b
  1390  003FD0                     
  1391                           ; BSR set to: 1
  1392                           ;main.c: 54:         calibrate_white(&white);
  1393  003FD0  0E93               	movlw	low main@white
  1394  003FD2  6E0C               	movwf	calibrate_white@w^0,c
  1395  003FD4  0E01               	movlw	high main@white
  1396  003FD6  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1397  003FD8  EC48  F01B         	call	_calibrate_white	;wreg free
  1398  003FDC                     
  1399                           ;main.c: 55:         amb_light = amb_light_measure(&amb);
  1400  003FDC  0E80               	movlw	low main@amb
  1401  003FDE  0100               	movlb	0	; () banked
  1402  003FE0  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1403  003FE2  0E01               	movlw	high main@amb
  1404  003FE4  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1405  003FE6  EC4A  F024         	call	_amb_light_measure	;wreg free
  1406  003FEA  C06A  F188         	movff	?_amb_light_measure,main@amb_light
  1407  003FEE  C06B  F189         	movff	?_amb_light_measure+1,main@amb_light+1
  1408  003FF2                     l5523:
  1409                           
  1410                           ;main.c: 66:             T0CON0bits.T0EN=1;
  1411  003FF2  8ED5               	bsf	213,7,c	;volatile
  1412  003FF4                     
  1413                           ;main.c: 67:             start_move = second;
  1414  003FF4  C15C  F15A         	movff	_second,_start_move
  1415  003FF8  C15D  F15B         	movff	_second+1,_start_move+1
  1416                           
  1417                           ;main.c: 68:             while (stop_signal == 0){
  1418  003FFC  EF1B  F020         	goto	l5531
  1419  004000                     l5527:
  1420                           
  1421                           ; BSR set to: 1
  1422                           ;main.c: 69:                 fullSpeedAhead(&motorL, &motorR);
  1423  004000  0EAF               	movlw	low main@motorL
  1424  004002  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1425  004004  0E01               	movlw	high main@motorL
  1426  004006  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1427  004008  0EB9               	movlw	low main@motorR
  1428  00400A  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1429  00400C  0E01               	movlw	high main@motorR
  1430  00400E  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1431  004010  EC98  F028         	call	_fullSpeedAhead	;wreg free
  1432  004014                     
  1433                           ;main.c: 70:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1434  004014  0EAF               	movlw	low main@motorL
  1435  004016  0100               	movlb	0	; () banked
  1436  004018  6F6A               	movwf	distance_measure@mL& (0+255),b
  1437  00401A  0E01               	movlw	high main@motorL
  1438  00401C  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1439  00401E  0EB9               	movlw	low main@motorR
  1440  004020  6F6C               	movwf	distance_measure@mR& (0+255),b
  1441  004022  0E01               	movlw	high main@motorR
  1442  004024  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1443  004026  C188  F06E         	movff	main@amb_light,distance_measure@amb_light
  1444  00402A  C189  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1445  00402E  ECB2  F026         	call	_distance_measure	;wreg free
  1446  004032  0101               	movlb	1	; () banked
  1447  004034  6F8A               	movwf	main@stop_signal& (0+255),b
  1448  004036                     l5531:
  1449                           
  1450                           ;main.c: 68:             while (stop_signal == 0){
  1451  004036  0101               	movlb	1	; () banked
  1452  004038  518A               	movf	main@stop_signal& (0+255),w,b
  1453  00403A  B4D8               	btfsc	status,2,c
  1454  00403C  EF22  F020         	goto	u5581
  1455  004040  EF24  F020         	goto	u5580
  1456  004044                     u5581:
  1457  004044  EF00  F020         	goto	l5527
  1458  004048                     u5580:
  1459  004048                     
  1460                           ; BSR set to: 1
  1461                           ;main.c: 72:             T0CON0bits.T0EN=0;
  1462  004048  9ED5               	bcf	213,7,c	;volatile
  1463                           
  1464                           ;main.c: 73:             stop_move = second;
  1465  00404A  C15C  F158         	movff	_second,_stop_move
  1466  00404E  C15D  F159         	movff	_second+1,_stop_move+1
  1467  004052                     
  1468                           ; BSR set to: 1
  1469                           ;main.c: 74:             memory[array_index] = (stop_move-start_move);
  1470  004052  515A               	movf	_start_move& (0+255),w,b
  1471  004054  5D58               	subwf	_stop_move& (0+255),w,b
  1472  004056  0100               	movlb	0	; () banked
  1473  004058  6FF5               	movwf	??_main& (0+255),b
  1474  00405A  0101               	movlb	1	; () banked
  1475  00405C  515B               	movf	(_start_move+1)& (0+255),w,b
  1476  00405E  5959               	subwfb	(_stop_move+1)& (0+255),w,b
  1477  004060  0100               	movlb	0	; () banked
  1478  004062  6FF6               	movwf	(??_main+1)& (0+255),b
  1479  004064  0101               	movlb	1	; () banked
  1480  004066  515F               	movf	_array_index& (0+255),w,b
  1481  004068  0D02               	mullw	2
  1482  00406A  0E00               	movlw	low _memory
  1483  00406C  24F3               	addwf	243,w,c
  1484  00406E  6ED9               	movwf	fsr2l,c
  1485  004070  0E01               	movlw	high _memory
  1486  004072  20F4               	addwfc	prodh,w,c
  1487  004074  6EDA               	movwf	fsr2h,c
  1488  004076  C0F5  FFDE         	movff	??_main,postinc2
  1489  00407A  C0F6  FFDD         	movff	??_main+1,postdec2
  1490  00407E                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 75:             array_index++;
  1493  00407E  2B5F               	incf	_array_index& (0+255),f,b
  1494  004080                     
  1495                           ; BSR set to: 1
  1496                           ;main.c: 76:             color_predict(stop_move-start_move);
  1497  004080  515A               	movf	_start_move& (0+255),w,b
  1498  004082  5D58               	subwf	_stop_move& (0+255),w,b
  1499  004084  EC3D  F02C         	call	_color_predict
  1500  004088                     
  1501                           ;main.c: 77:             color_predict(array_index);
  1502  004088  0101               	movlb	1	; () banked
  1503  00408A  515F               	movf	_array_index& (0+255),w,b
  1504  00408C  EC3D  F02C         	call	_color_predict
  1505  004090                     
  1506                           ;main.c: 78:             color_predict(200);
  1507  004090  0EC8               	movlw	200
  1508  004092  EC3D  F02C         	call	_color_predict
  1509  004096                     
  1510                           ;main.c: 80:             stop(&motorL, &motorR);
  1511  004096  0EAF               	movlw	low main@motorL
  1512  004098  6E1A               	movwf	stop@mL^0,c
  1513  00409A  0E01               	movlw	high main@motorL
  1514  00409C  6E1B               	movwf	(stop@mL+1)^0,c
  1515  00409E  0EB9               	movlw	low main@motorR
  1516  0040A0  6E1C               	movwf	stop@mR^0,c
  1517  0040A2  0E01               	movlw	high main@motorR
  1518  0040A4  6E1D               	movwf	(stop@mR+1)^0,c
  1519  0040A6  EC3A  F028         	call	_stop	;wreg free
  1520  0040AA                     
  1521                           ;main.c: 81:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1522  0040AA  0E52               	movlw	82
  1523  0040AC  0100               	movlb	0	; () banked
  1524  0040AE  6FF6               	movwf	(??_main+1)& (0+255),b
  1525  0040B0  0E2B               	movlw	43
  1526  0040B2  6FF5               	movwf	??_main& (0+255),b
  1527  0040B4  0E00               	movlw	0
  1528  0040B6                     u5667:
  1529  0040B6  2EE8               	decfsz	wreg,f,c
  1530  0040B8  D7FE               	bra	u5667
  1531  0040BA  2FF5               	decfsz	??_main& (0+255),f,b
  1532  0040BC  D7FC               	bra	u5667
  1533  0040BE  2FF6               	decfsz	(??_main+1)& (0+255),f,b
  1534  0040C0  D7FA               	bra	u5667
  1535  0040C2  F000               	nop	
  1536  0040C4                     
  1537                           ;main.c: 82:             color = detect_color(&rgb, &white);
  1538  0040C4  0E8B               	movlw	low main@rgb
  1539  0040C6  0100               	movlb	0	; () banked
  1540  0040C8  6F71               	movwf	detect_color@m& (0+255),b
  1541  0040CA  0E01               	movlw	high main@rgb
  1542  0040CC  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1543  0040CE  0E93               	movlw	low main@white
  1544  0040D0  6F73               	movwf	detect_color@w& (0+255),b
  1545  0040D2  0E01               	movlw	high main@white
  1546  0040D4  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1547  0040D6  EC0A  F007         	call	_detect_color	;wreg free
  1548  0040DA  0101               	movlb	1	; () banked
  1549  0040DC  6F5E               	movwf	_color& (0+255),b
  1550  0040DE                     
  1551                           ; BSR set to: 1
  1552                           ;main.c: 83:             color = verify_color(color, &rgb, &white);
  1553  0040DE  0E8B               	movlw	low main@rgb
  1554  0040E0  0100               	movlb	0	; () banked
  1555  0040E2  6F92               	movwf	verify_color@m& (0+255),b
  1556  0040E4  0E01               	movlw	high main@rgb
  1557  0040E6  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1558  0040E8  0E93               	movlw	low main@white
  1559  0040EA  6F94               	movwf	verify_color@w& (0+255),b
  1560  0040EC  0E01               	movlw	high main@white
  1561  0040EE  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1562  0040F0  0101               	movlb	1	; () banked
  1563  0040F2  515E               	movf	_color& (0+255),w,b
  1564  0040F4  ECE2  F028         	call	_verify_color
  1565  0040F8  0101               	movlb	1	; () banked
  1566  0040FA  6F5E               	movwf	_color& (0+255),b
  1567  0040FC                     
  1568                           ; BSR set to: 1
  1569                           ;main.c: 86:             action(color, &motorL, &motorR);
  1570  0040FC  0EAF               	movlw	low main@motorL
  1571  0040FE  0100               	movlb	0	; () banked
  1572  004100  6FE0               	movwf	action@mL& (0+255),b
  1573  004102  0E01               	movlw	high main@motorL
  1574  004104  6FE1               	movwf	(action@mL+1)& (0+255),b
  1575  004106  0EB9               	movlw	low main@motorR
  1576  004108  6FE2               	movwf	action@mR& (0+255),b
  1577  00410A  0E01               	movlw	high main@motorR
  1578  00410C  6FE3               	movwf	(action@mR+1)& (0+255),b
  1579  00410E  0101               	movlb	1	; () banked
  1580  004110  515E               	movf	_color& (0+255),w,b
  1581  004112  EC8C  F018         	call	_action
  1582  004116                     
  1583                           ;main.c: 87:             color = 0;
  1584  004116  0E00               	movlw	0
  1585  004118  0101               	movlb	1	; () banked
  1586  00411A  6F5E               	movwf	_color& (0+255),b
  1587  00411C                     
  1588                           ; BSR set to: 1
  1589                           ;main.c: 88:             stop_signal = 0;
  1590  00411C  0E00               	movlw	0
  1591  00411E  6F8A               	movwf	main@stop_signal& (0+255),b
  1592  004120  EFF9  F01F         	goto	l5523
  1593  004124  EF14  F000         	goto	start
  1594  004128                     __end_of_main:
  1595                           	callstack 0
  1596                           
  1597 ;; *************** function _verify_color *****************
  1598 ;; Defined at:
  1599 ;;		line 357 in file "color.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  color           1    wreg     unsigned char 
  1602 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1603 ;;		 -> main@rgb(8), 
  1604 ;;  w               2   52[BANK0 ] PTR struct white_card
  1605 ;;		 -> main@white(28), 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  color           1   58[BANK0 ] unsigned char 
  1608 ;;  color2          2   56[BANK0 ] unsigned int 
  1609 ;;  color3          2    0        unsigned int 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;Total ram usage:        9 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 6
  1626 ;; This function calls:
  1627 ;;		_detect_color
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text1
  1634  0051C4                     __ptext1:
  1635                           	callstack 0
  1636  0051C4                     _verify_color:
  1637                           	callstack 24
  1638                           
  1639                           ; BSR set to: 1
  1640                           ;incstack = 0
  1641                           ;verify_color@color stored from wreg
  1642  0051C4  0100               	movlb	0	; () banked
  1643  0051C6  6F9A               	movwf	verify_color@color& (0+255),b
  1644  0051C8                     
  1645                           ;color.c: 357: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 358: {;color.c: 359:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1646  0051C8  0E05               	movlw	5
  1647  0051CA  0100               	movlb	0	; () banked
  1648  0051CC  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1649  0051CE  0E0F               	movlw	15
  1650  0051D0  6F96               	movwf	??_verify_color& (0+255),b
  1651  0051D2  0EF1               	movlw	241
  1652  0051D4                     u5677:
  1653  0051D4  2EE8               	decfsz	wreg,f,c
  1654  0051D6  D7FE               	bra	u5677
  1655  0051D8  2F96               	decfsz	??_verify_color& (0+255),f,b
  1656  0051DA  D7FC               	bra	u5677
  1657  0051DC  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1658  0051DE  D7FA               	bra	u5677
  1659  0051E0                     
  1660                           ;color.c: 360:     unsigned int color2, color3;;color.c: 361:     color2 = detect_color(
      +                          m,w);
  1661  0051E0  C092  F071         	movff	verify_color@m,detect_color@m
  1662  0051E4  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1663  0051E8  C094  F073         	movff	verify_color@w,detect_color@w
  1664  0051EC  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1665  0051F0  EC0A  F007         	call	_detect_color	;wreg free
  1666  0051F4  0100               	movlb	0	; () banked
  1667  0051F6  6F96               	movwf	??_verify_color& (0+255),b
  1668  0051F8  5196               	movf	??_verify_color& (0+255),w,b
  1669  0051FA  6F98               	movwf	verify_color@color2& (0+255),b
  1670  0051FC  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1671  0051FE                     
  1672                           ; BSR set to: 0
  1673                           ;color.c: 362:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1674  0051FE  0E05               	movlw	5
  1675  005200  0100               	movlb	0	; () banked
  1676  005202  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1677  005204  0E0F               	movlw	15
  1678  005206  6F96               	movwf	??_verify_color& (0+255),b
  1679  005208  0EF1               	movlw	241
  1680  00520A                     u5687:
  1681  00520A  2EE8               	decfsz	wreg,f,c
  1682  00520C  D7FE               	bra	u5687
  1683  00520E  2F96               	decfsz	??_verify_color& (0+255),f,b
  1684  005210  D7FC               	bra	u5687
  1685  005212  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1686  005214  D7FA               	bra	u5687
  1687  005216                     
  1688                           ;color.c: 364:     if (color == color2){return color;}
  1689  005216  0100               	movlb	0	; () banked
  1690  005218  519A               	movf	verify_color@color& (0+255),w,b
  1691  00521A  6F96               	movwf	??_verify_color& (0+255),b
  1692  00521C  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1693  00521E  5198               	movf	verify_color@color2& (0+255),w,b
  1694  005220  1996               	xorwf	??_verify_color& (0+255),w,b
  1695  005222  E107               	bnz	u5331
  1696  005224  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1697  005226  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1698  005228  A4D8               	btfss	status,2,c
  1699  00522A  EF19  F029         	goto	u5331
  1700  00522E  EF1B  F029         	goto	u5330
  1701  005232                     u5331:
  1702  005232  EF1E  F029         	goto	l5277
  1703  005236                     u5330:
  1704  005236                     
  1705                           ; BSR set to: 0
  1706  005236  519A               	movf	verify_color@color& (0+255),w,b
  1707  005238  EF1F  F029         	goto	l171
  1708  00523C                     l5277:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;color.c: 367:         return color;}
  1712  00523C  0E00               	movlw	0
  1713  00523E                     l171:
  1714                           
  1715                           ; BSR set to: 0
  1716  00523E  0012               	return		;funcret
  1717  005240                     __end_of_verify_color:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _test_function *****************
  1721 ;; Defined at:
  1722 ;;		line 16 in file "test_and_calibration.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  test_code       1    wreg     unsigned char 
  1725 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1726 ;;		 -> main@rgb(8), 
  1727 ;;  w               2  136[BANK0 ] PTR struct white_card
  1728 ;;		 -> main@white(28), 
  1729 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1730 ;;		 -> main@motorL(10), 
  1731 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1732 ;;		 -> main@motorR(10), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  test_code       1  148[BANK0 ] unsigned char 
  1735 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1736 ;;  stop_signal     1  147[BANK0 ] unsigned char 
  1737 ;;  complete        1  146[BANK0 ] unsigned char 
  1738 ;;  color           1    0        unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;Total ram usage:       15 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 11
  1755 ;; This function calls:
  1756 ;;		_LED_C
  1757 ;;		_amb_light_measure
  1758 ;;		_calibrate_white
  1759 ;;		_color_data_collection
  1760 ;;		_color_display
  1761 ;;		_detect_color
  1762 ;;		_distance_measure
  1763 ;;		_fullSpeedAhead
  1764 ;;		_read_color
  1765 ;;		_stop
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text2
  1772  0042B0                     __ptext2:
  1773                           	callstack 0
  1774  0042B0                     _test_function:
  1775                           	callstack 19
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;incstack = 0
  1779                           ;test_function@test_code stored from wreg
  1780  0042B0  0100               	movlb	0	; () banked
  1781  0042B2  6FF4               	movwf	test_function@test_code& (0+255),b
  1782  0042B4                     
  1783                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1784  0042B4  0E00               	movlw	0
  1785  0042B6  0100               	movlb	0	; () banked
  1786  0042B8  6FF2               	movwf	test_function@complete& (0+255),b
  1787                           
  1788                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1789  0042BA  0E00               	movlw	0
  1790  0042BC  6FF3               	movwf	test_function@stop_signal& (0+255),b
  1791                           
  1792                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1793  0042BE  0E00               	movlw	0
  1794  0042C0  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1795  0042C2  0E00               	movlw	0
  1796  0042C4  6FF0               	movwf	test_function@amb_light& (0+255),b
  1797  0042C6                     
  1798                           ; BSR set to: 0
  1799                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1800  0042C6  0E02               	movlw	2
  1801  0042C8  19F4               	xorwf	test_function@test_code& (0+255),w,b
  1802  0042CA  A4D8               	btfss	status,2,c
  1803  0042CC  EF6A  F021         	goto	u5361
  1804  0042D0  EF6C  F021         	goto	u5360
  1805  0042D4                     u5361:
  1806  0042D4  EF72  F021         	goto	l5337
  1807  0042D8                     u5360:
  1808  0042D8                     
  1809                           ; BSR set to: 0
  1810  0042D8  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1811  0042DC  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1812  0042E0  EC48  F01B         	call	_calibrate_white	;wreg free
  1813  0042E4                     l5337:
  1814                           
  1815                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1816  0042E4  0E04               	movlw	4
  1817  0042E6  0100               	movlb	0	; () banked
  1818  0042E8  19F4               	xorwf	test_function@test_code& (0+255),w,b
  1819  0042EA  A4D8               	btfss	status,2,c
  1820  0042EC  EF7A  F021         	goto	u5371
  1821  0042F0  EF7C  F021         	goto	u5370
  1822  0042F4                     u5371:
  1823  0042F4  EF86  F021         	goto	l5341
  1824  0042F8                     u5370:
  1825  0042F8                     
  1826                           ; BSR set to: 0
  1827  0042F8  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1828  0042FC  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1829  004300  EC4A  F024         	call	_amb_light_measure	;wreg free
  1830  004304  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1831  004308  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1832  00430C                     l5341:
  1833                           
  1834                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1835  00430C  0100               	movlb	0	; () banked
  1836  00430E  05F4               	decf	test_function@test_code& (0+255),w,b
  1837  004310  A4D8               	btfss	status,2,c
  1838  004312  EF8D  F021         	goto	u5381
  1839  004316  EF8F  F021         	goto	u5380
  1840  00431A                     u5381:
  1841  00431A  EF9D  F021         	goto	l5349
  1842  00431E                     u5380:
  1843  00431E                     
  1844                           ; BSR set to: 0
  1845                           ;test_and_calibration.c: 29:             LED_C();
  1846  00431E  ECD0  F02C         	call	_LED_C	;wreg free
  1847  004322                     
  1848                           ;test_and_calibration.c: 30:             read_color(m);
  1849  004322  C0E6  F00C         	movff	test_function@m,read_color@m
  1850  004326  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  1851  00432A  ECB9  F029         	call	_read_color	;wreg free
  1852  00432E                     
  1853                           ;test_and_calibration.c: 31:             color_display(m);
  1854  00432E  C0E6  F058         	movff	test_function@m,color_display@m
  1855  004332  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  1856  004336  EC20  F029         	call	_color_display	;wreg free
  1857  00433A                     l5349:
  1858                           
  1859                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1860  00433A  0E02               	movlw	2
  1861  00433C  0100               	movlb	0	; () banked
  1862  00433E  19F4               	xorwf	test_function@test_code& (0+255),w,b
  1863  004340  A4D8               	btfss	status,2,c
  1864  004342  EFA5  F021         	goto	u5391
  1865  004346  EFA7  F021         	goto	u5390
  1866  00434A                     u5391:
  1867  00434A  EFB1  F021         	goto	l5353
  1868  00434E                     u5390:
  1869  00434E                     
  1870                           ; BSR set to: 0
  1871  00434E  C0E6  F071         	movff	test_function@m,detect_color@m
  1872  004352  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  1873  004356  C0E8  F073         	movff	test_function@w,detect_color@w
  1874  00435A  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  1875  00435E  EC0A  F007         	call	_detect_color	;wreg free
  1876  004362                     l5353:
  1877                           
  1878                           ;test_and_calibration.c: 40:         if (test_code == 3){
  1879  004362  0E03               	movlw	3
  1880  004364  0100               	movlb	0	; () banked
  1881  004366  19F4               	xorwf	test_function@test_code& (0+255),w,b
  1882  004368  A4D8               	btfss	status,2,c
  1883  00436A  EFB9  F021         	goto	u5401
  1884  00436E  EFBB  F021         	goto	u5400
  1885  004372                     u5401:
  1886  004372  EFCE  F021         	goto	l5363
  1887  004376                     u5400:
  1888  004376  EFC6  F021         	goto	l5361
  1889  00437A                     l5357:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  1893  00437A  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  1894  00437E  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1895  004382  EC37  F01D         	call	_color_data_collection	;wreg free
  1896  004386                     
  1897                           ;test_and_calibration.c: 43:                 complete = 1;
  1898  004386  0E01               	movlw	1
  1899  004388  0100               	movlb	0	; () banked
  1900  00438A  6FF2               	movwf	test_function@complete& (0+255),b
  1901  00438C                     l5361:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;test_and_calibration.c: 41:             while (complete == 0){
  1905  00438C  51F2               	movf	test_function@complete& (0+255),w,b
  1906  00438E  B4D8               	btfsc	status,2,c
  1907  004390  EFCC  F021         	goto	u5411
  1908  004394  EFCE  F021         	goto	u5410
  1909  004398                     u5411:
  1910  004398  EFBD  F021         	goto	l5357
  1911  00439C                     u5410:
  1912  00439C                     l5363:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;test_and_calibration.c: 47:         if (test_code == 4){
  1916  00439C  0E04               	movlw	4
  1917  00439E  19F4               	xorwf	test_function@test_code& (0+255),w,b
  1918  0043A0  A4D8               	btfss	status,2,c
  1919  0043A2  EFD5  F021         	goto	u5421
  1920  0043A6  EFD7  F021         	goto	u5420
  1921  0043AA                     u5421:
  1922  0043AA  EF86  F021         	goto	l5341
  1923  0043AE                     u5420:
  1924  0043AE  EFF3  F021         	goto	l5371
  1925  0043B2                     l5367:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  1929  0043B2  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1930  0043B6  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1931  0043BA  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1932  0043BE  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1933  0043C2  EC98  F028         	call	_fullSpeedAhead	;wreg free
  1934  0043C6                     
  1935                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1936  0043C6  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  1937  0043CA  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1938  0043CE  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  1939  0043D2  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1940  0043D6  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1941  0043DA  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1942  0043DE  ECB2  F026         	call	_distance_measure	;wreg free
  1943  0043E2  0100               	movlb	0	; () banked
  1944  0043E4  6FF3               	movwf	test_function@stop_signal& (0+255),b
  1945  0043E6                     l5371:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  1949  0043E6  51F3               	movf	test_function@stop_signal& (0+255),w,b
  1950  0043E8  B4D8               	btfsc	status,2,c
  1951  0043EA  EFF9  F021         	goto	u5431
  1952  0043EE  EFFB  F021         	goto	u5430
  1953  0043F2                     u5431:
  1954  0043F2  EFD9  F021         	goto	l5367
  1955  0043F6                     u5430:
  1956  0043F6                     
  1957                           ; BSR set to: 0
  1958                           ;test_and_calibration.c: 52:             stop(mL, mR);
  1959  0043F6  C0EA  F01A         	movff	test_function@mL,stop@mL
  1960  0043FA  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  1961  0043FE  C0EC  F01C         	movff	test_function@mR,stop@mR
  1962  004402  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  1963  004406  EC3A  F028         	call	_stop	;wreg free
  1964  00440A                     
  1965                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1966  00440A  0E52               	movlw	82
  1967  00440C  0100               	movlb	0	; () banked
  1968  00440E  6FEF               	movwf	(??_test_function+1)& (0+255),b
  1969  004410  0E2B               	movlw	43
  1970  004412  6FEE               	movwf	??_test_function& (0+255),b
  1971  004414  0E00               	movlw	0
  1972  004416                     u5697:
  1973  004416  2EE8               	decfsz	wreg,f,c
  1974  004418  D7FE               	bra	u5697
  1975  00441A  2FEE               	decfsz	??_test_function& (0+255),f,b
  1976  00441C  D7FC               	bra	u5697
  1977  00441E  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  1978  004420  D7FA               	bra	u5697
  1979  004422  F000               	nop	
  1980  004424                     
  1981                           ;test_and_calibration.c: 54:             stop_signal = 0;
  1982  004424  0E00               	movlw	0
  1983  004426  0100               	movlb	0	; () banked
  1984  004428  6FF3               	movwf	test_function@stop_signal& (0+255),b
  1985  00442A  EF86  F021         	goto	l5341
  1986  00442E  0012               	return		;funcret
  1987  004430                     __end_of_test_function:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _distance_measure *****************
  1991 ;; Defined at:
  1992 ;;		line 393 in file "color.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1995 ;;		 -> main@motorL(10), 
  1996 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1997 ;;		 -> main@motorR(10), 
  1998 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  threshold       2   26[BANK0 ] unsigned int 
  2001 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2002 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2003 ;;  stop            1   28[BANK0 ] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;Total ram usage:       19 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 5
  2020 ;; This function calls:
  2021 ;;		_LED_C
  2022 ;;		___flmul
  2023 ;;		___xxtofl
  2024 ;;		_color_read_Clear
  2025 ;;		_color_read_Green
  2026 ;;		_lroundf
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;;		_test_function
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text3
  2034  004D64                     __ptext3:
  2035                           	callstack 0
  2036  004D64                     _distance_measure:
  2037                           	callstack 24
  2038  004D64  0E00               	movlw	0
  2039  004D66  0100               	movlb	0	; () banked
  2040  004D68  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2041  004D6A  0E00               	movlw	0
  2042  004D6C  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2043                           
  2044                           ;color.c: 396:     unsigned char stop = 0;
  2045  004D6E  0E00               	movlw	0
  2046  004D70  6F7C               	movwf	distance_measure@stop& (0+255),b
  2047                           
  2048                           ;color.c: 397:     unsigned int threshold = 0;
  2049  004D72  0E00               	movlw	0
  2050  004D74  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2051  004D76  0E00               	movlw	0
  2052  004D78  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2053  004D7A                     
  2054                           ; BSR set to: 0
  2055                           ;color.c: 398:     LED_C();
  2056  004D7A  ECD0  F02C         	call	_LED_C	;wreg free
  2057  004D7E                     
  2058                           ;color.c: 399:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2059  004D7E  0E09               	movlw	9
  2060  004D80  0100               	movlb	0	; () banked
  2061  004D82  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2062  004D84  0E1E               	movlw	30
  2063  004D86  6F70               	movwf	??_distance_measure& (0+255),b
  2064  004D88  0EE4               	movlw	228
  2065  004D8A                     u5707:
  2066  004D8A  2EE8               	decfsz	wreg,f,c
  2067  004D8C  D7FE               	bra	u5707
  2068  004D8E  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2069  004D90  D7FC               	bra	u5707
  2070  004D92  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2071  004D94  D7FA               	bra	u5707
  2072  004D96  F000               	nop	
  2073  004D98                     
  2074                           ;color.c: 400:     CC_amb = color_read_Clear();
  2075  004D98  EC89  F02A         	call	_color_read_Clear	;wreg free
  2076  004D9C  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2077  004DA0  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2078  004DA4  EC39  F02A         	call	_color_read_Green	;wreg free
  2079  004DA8                     
  2080                           ;color.c: 402:     threshold = lroundf((float)amb_light * 1.05);
  2081  004DA8  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2082  004DAC  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2083  004DB0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2084  004DB2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2085  004DB4  0E00               	movlw	0
  2086  004DB6  ECED  F01E         	call	___xxtofl
  2087  004DBA  C001  F028         	movff	?___xxtofl,___flmul@b
  2088  004DBE  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2089  004DC2  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2090  004DC6  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2091  004DCA  0E66               	movlw	102
  2092  004DCC  6E2C               	movwf	___flmul@a^0,c
  2093  004DCE  0E66               	movlw	102
  2094  004DD0  6E2D               	movwf	(___flmul@a+1)^0,c
  2095  004DD2  0E86               	movlw	134
  2096  004DD4  6E2E               	movwf	(___flmul@a+2)^0,c
  2097  004DD6  0E3F               	movlw	63
  2098  004DD8  6E2F               	movwf	(___flmul@a+3)^0,c
  2099  004DDA  ECFA  F00F         	call	___flmul	;wreg free
  2100  004DDE  C028  F074         	movff	?___flmul,_distance_measure$3243
  2101  004DE2  C029  F075         	movff	?___flmul+1,_distance_measure$3243+1
  2102  004DE6  C02A  F076         	movff	?___flmul+2,_distance_measure$3243+2
  2103  004DEA  C02B  F077         	movff	?___flmul+3,_distance_measure$3243+3
  2104  004DEE                     
  2105                           ;color.c: 402:     threshold = lroundf((float)amb_light * 1.05);
  2106  004DEE  C074  F066         	movff	_distance_measure$3243,lroundf@x
  2107  004DF2  C075  F067         	movff	_distance_measure$3243+1,lroundf@x+1
  2108  004DF6  C076  F068         	movff	_distance_measure$3243+2,lroundf@x+2
  2109  004DFA  C077  F069         	movff	_distance_measure$3243+3,lroundf@x+3
  2110  004DFE  ECB7  F02B         	call	_lroundf	;wreg free
  2111  004E02  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2112  004E06  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2113  004E0A                     
  2114                           ;color.c: 405:     if (CC_amb >= threshold){stop = 1;}
  2115  004E0A  0100               	movlb	0	; () banked
  2116  004E0C  517A               	movf	distance_measure@threshold& (0+255),w,b
  2117  004E0E  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2118  004E10  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2119  004E12  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2120  004E14  A0D8               	btfss	status,0,c
  2121  004E16  EF0F  F027         	goto	u5231
  2122  004E1A  EF11  F027         	goto	u5230
  2123  004E1E                     u5231:
  2124  004E1E  EF13  F027         	goto	l178
  2125  004E22                     u5230:
  2126  004E22                     
  2127                           ; BSR set to: 0
  2128  004E22  0E01               	movlw	1
  2129  004E24  6F7C               	movwf	distance_measure@stop& (0+255),b
  2130  004E26                     l178:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;color.c: 406:     return stop;
  2134  004E26  517C               	movf	distance_measure@stop& (0+255),w,b
  2135  004E28                     
  2136                           ; BSR set to: 0
  2137  004E28  0012               	return		;funcret
  2138  004E2A                     __end_of_distance_measure:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _detect_color *****************
  2142 ;; Defined at:
  2143 ;;		line 287 in file "color.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2146 ;;		 -> main@rgb(8), 
  2147 ;;  w               2   19[BANK0 ] PTR struct white_card
  2148 ;;		 -> main@white(28), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  BG              2   44[BANK0 ] unsigned int 
  2151 ;;  BB              2   41[BANK0 ] unsigned int 
  2152 ;;  BR              2   39[BANK0 ] unsigned int 
  2153 ;;  RR              2   37[BANK0 ] unsigned int 
  2154 ;;  BC              2   35[BANK0 ] unsigned int 
  2155 ;;  GG              2   33[BANK0 ] unsigned int 
  2156 ;;  GR              2   31[BANK0 ] unsigned int 
  2157 ;;  RG              2   29[BANK0 ] unsigned int 
  2158 ;;  GB              2   27[BANK0 ] unsigned int 
  2159 ;;  RB              2   25[BANK0 ] unsigned int 
  2160 ;;  color           1   43[BANK0 ] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;Total ram usage:       33 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 5
  2177 ;; This function calls:
  2178 ;;		_LED_B
  2179 ;;		_LED_G
  2180 ;;		_LED_R
  2181 ;;		___fldiv
  2182 ;;		___flmul
  2183 ;;		___xxtofl
  2184 ;;		_compare
  2185 ;;		_lroundf
  2186 ;;		_read_color
  2187 ;;		_toggle_light
  2188 ;; This function is called by:
  2189 ;;		_verify_color
  2190 ;;		_main
  2191 ;;		_test_function
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text4
  2196  000E14                     __ptext4:
  2197                           	callstack 0
  2198  000E14                     _detect_color:
  2199                           	callstack 24
  2200  000E14  0E00               	movlw	0
  2201  000E16  0100               	movlb	0	; () banked
  2202  000E18  6F7E               	movwf	(detect_color@RG+1)& (0+255),b
  2203  000E1A  0E00               	movlw	0
  2204  000E1C  6F7D               	movwf	detect_color@RG& (0+255),b
  2205  000E1E  0E00               	movlw	0
  2206  000E20  6F7A               	movwf	(detect_color@RB+1)& (0+255),b
  2207  000E22  0E00               	movlw	0
  2208  000E24  6F79               	movwf	detect_color@RB& (0+255),b
  2209  000E26  0E00               	movlw	0
  2210  000E28  6F80               	movwf	(detect_color@GR+1)& (0+255),b
  2211  000E2A  0E00               	movlw	0
  2212  000E2C  6F7F               	movwf	detect_color@GR& (0+255),b
  2213  000E2E  0E00               	movlw	0
  2214  000E30  6F82               	movwf	(detect_color@GG+1)& (0+255),b
  2215  000E32  0E00               	movlw	0
  2216  000E34  6F81               	movwf	detect_color@GG& (0+255),b
  2217  000E36  0E00               	movlw	0
  2218  000E38  6F7C               	movwf	(detect_color@GB+1)& (0+255),b
  2219  000E3A  0E00               	movlw	0
  2220  000E3C  6F7B               	movwf	detect_color@GB& (0+255),b
  2221  000E3E  0E00               	movlw	0
  2222  000E40  6F88               	movwf	(detect_color@BR+1)& (0+255),b
  2223  000E42  0E00               	movlw	0
  2224  000E44  6F87               	movwf	detect_color@BR& (0+255),b
  2225  000E46  0E00               	movlw	0
  2226  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  2227  000E4A  0E00               	movlw	0
  2228  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  2229  000E4E  0E00               	movlw	0
  2230  000E50  6F8A               	movwf	(detect_color@BB+1)& (0+255),b
  2231  000E52  0E00               	movlw	0
  2232  000E54  6F89               	movwf	detect_color@BB& (0+255),b
  2233  000E56  0E00               	movlw	0
  2234  000E58  6F84               	movwf	(detect_color@BC+1)& (0+255),b
  2235  000E5A  0E00               	movlw	0
  2236  000E5C  6F83               	movwf	detect_color@BC& (0+255),b
  2237                           
  2238                           ;color.c: 292:     unsigned char color = 0;
  2239  000E5E  0E00               	movlw	0
  2240  000E60  6F8B               	movwf	detect_color@color& (0+255),b
  2241  000E62                     
  2242                           ; BSR set to: 0
  2243                           ;color.c: 294:     LED_R();
  2244  000E62  EC90  F02C         	call	_LED_R	;wreg free
  2245  000E66                     
  2246                           ;color.c: 295:     read_color(m);
  2247  000E66  C071  F00C         	movff	detect_color@m,read_color@m
  2248  000E6A  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2249  000E6E  ECB9  F029         	call	_read_color	;wreg free
  2250  000E72                     
  2251                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2252  000E72  C073  FFD9         	movff	detect_color@w,fsr2l
  2253  000E76  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2254  000E7A  CFDE F075          	movff	postinc2,??_detect_color
  2255  000E7E  CFDD F076          	movff	postdec2,??_detect_color+1
  2256  000E82  C075  F001         	movff	??_detect_color,___xxtofl@val
  2257  000E86  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2258  000E8A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2259  000E8C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2260  000E8E  0E00               	movlw	0
  2261  000E90  ECED  F01E         	call	___xxtofl
  2262  000E94  C001  F013         	movff	?___xxtofl,___fldiv@a
  2263  000E98  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2264  000E9C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2265  000EA0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2266  000EA4  C071  FFD9         	movff	detect_color@m,fsr2l
  2267  000EA8  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2268  000EAC  CFDE F077          	movff	postinc2,??_detect_color+2
  2269  000EB0  CFDD F078          	movff	postdec2,??_detect_color+3
  2270  000EB4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2271  000EB8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2272  000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2273  000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2274  000EC0  0E00               	movlw	0
  2275  000EC2  ECED  F01E         	call	___xxtofl
  2276  000EC6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2277  000ECA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2278  000ECE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2279  000ED2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2280  000ED6  ECE6  F013         	call	___fldiv	;wreg free
  2281  000EDA  C00F  F028         	movff	?___fldiv,___flmul@b
  2282  000EDE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2283  000EE2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2284  000EE6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2285  000EEA  0E00               	movlw	0
  2286  000EEC  6E2C               	movwf	___flmul@a^0,c
  2287  000EEE  0E00               	movlw	0
  2288  000EF0  6E2D               	movwf	(___flmul@a+1)^0,c
  2289  000EF2  0EC8               	movlw	200
  2290  000EF4  6E2E               	movwf	(___flmul@a+2)^0,c
  2291  000EF6  0E42               	movlw	66
  2292  000EF8  6E2F               	movwf	(___flmul@a+3)^0,c
  2293  000EFA  ECFA  F00F         	call	___flmul	;wreg free
  2294  000EFE  C028  F08E         	movff	?___flmul,_detect_color$3242
  2295  000F02  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2296  000F06  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2297  000F0A  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2298  000F0E                     
  2299                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2300  000F0E  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2301  000F12  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2302  000F16  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2303  000F1A  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2304  000F1E  ECB7  F02B         	call	_lroundf	;wreg free
  2305  000F22  C066  F085         	movff	?_lroundf,detect_color@RR
  2306  000F26  C067  F086         	movff	?_lroundf+1,detect_color@RR+1
  2307  000F2A  0100               	movlb	0	; () banked
  2308  000F2C  EE20 F002          	lfsr	2,2
  2309  000F30  5173               	movf	detect_color@w& (0+255),w,b
  2310  000F32  26D9               	addwf	fsr2l,f,c
  2311  000F34  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2312  000F36  22DA               	addwfc	fsr2h,f,c
  2313  000F38  CFDE F075          	movff	postinc2,??_detect_color
  2314  000F3C  CFDD F076          	movff	postdec2,??_detect_color+1
  2315  000F40  C075  F001         	movff	??_detect_color,___xxtofl@val
  2316  000F44  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2317  000F48  6A03               	clrf	(___xxtofl@val+2)^0,c
  2318  000F4A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2319  000F4C  0E00               	movlw	0
  2320  000F4E  ECED  F01E         	call	___xxtofl
  2321  000F52  C001  F013         	movff	?___xxtofl,___fldiv@a
  2322  000F56  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2323  000F5A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2324  000F5E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2325  000F62  0100               	movlb	0	; () banked
  2326  000F64  EE20 F002          	lfsr	2,2
  2327  000F68  5171               	movf	detect_color@m& (0+255),w,b
  2328  000F6A  26D9               	addwf	fsr2l,f,c
  2329  000F6C  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2330  000F6E  22DA               	addwfc	fsr2h,f,c
  2331  000F70  CFDE F077          	movff	postinc2,??_detect_color+2
  2332  000F74  CFDD F078          	movff	postdec2,??_detect_color+3
  2333  000F78  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2334  000F7C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2335  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  2336  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  2337  000F84  0E00               	movlw	0
  2338  000F86  ECED  F01E         	call	___xxtofl
  2339  000F8A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2340  000F8E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2341  000F92  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2342  000F96  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2343  000F9A  ECE6  F013         	call	___fldiv	;wreg free
  2344  000F9E  C00F  F028         	movff	?___fldiv,___flmul@b
  2345  000FA2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2346  000FA6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2347  000FAA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2348  000FAE  0E00               	movlw	0
  2349  000FB0  6E2C               	movwf	___flmul@a^0,c
  2350  000FB2  0E00               	movlw	0
  2351  000FB4  6E2D               	movwf	(___flmul@a+1)^0,c
  2352  000FB6  0EC8               	movlw	200
  2353  000FB8  6E2E               	movwf	(___flmul@a+2)^0,c
  2354  000FBA  0E42               	movlw	66
  2355  000FBC  6E2F               	movwf	(___flmul@a+3)^0,c
  2356  000FBE  ECFA  F00F         	call	___flmul	;wreg free
  2357  000FC2  C028  F08E         	movff	?___flmul,_detect_color$3242
  2358  000FC6  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2359  000FCA  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2360  000FCE  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2361  000FD2  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2362  000FD6  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2363  000FDA  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2364  000FDE  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2365  000FE2  ECB7  F02B         	call	_lroundf	;wreg free
  2366  000FE6  C066  F07D         	movff	?_lroundf,detect_color@RG
  2367  000FEA  C067  F07E         	movff	?_lroundf+1,detect_color@RG+1
  2368  000FEE  0100               	movlb	0	; () banked
  2369  000FF0  EE20 F004          	lfsr	2,4
  2370  000FF4  5173               	movf	detect_color@w& (0+255),w,b
  2371  000FF6  26D9               	addwf	fsr2l,f,c
  2372  000FF8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2373  000FFA  22DA               	addwfc	fsr2h,f,c
  2374  000FFC  CFDE F075          	movff	postinc2,??_detect_color
  2375  001000  CFDD F076          	movff	postdec2,??_detect_color+1
  2376  001004  C075  F001         	movff	??_detect_color,___xxtofl@val
  2377  001008  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2378  00100C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2379  00100E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2380  001010  0E00               	movlw	0
  2381  001012  ECED  F01E         	call	___xxtofl
  2382  001016  C001  F013         	movff	?___xxtofl,___fldiv@a
  2383  00101A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2384  00101E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2385  001022  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2386  001026  0100               	movlb	0	; () banked
  2387  001028  EE20 F004          	lfsr	2,4
  2388  00102C  5171               	movf	detect_color@m& (0+255),w,b
  2389  00102E  26D9               	addwf	fsr2l,f,c
  2390  001030  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2391  001032  22DA               	addwfc	fsr2h,f,c
  2392  001034  CFDE F077          	movff	postinc2,??_detect_color+2
  2393  001038  CFDD F078          	movff	postdec2,??_detect_color+3
  2394  00103C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2395  001040  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2396  001044  6A03               	clrf	(___xxtofl@val+2)^0,c
  2397  001046  6A04               	clrf	(___xxtofl@val+3)^0,c
  2398  001048  0E00               	movlw	0
  2399  00104A  ECED  F01E         	call	___xxtofl
  2400  00104E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2401  001052  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2402  001056  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2403  00105A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2404  00105E  ECE6  F013         	call	___fldiv	;wreg free
  2405  001062  C00F  F028         	movff	?___fldiv,___flmul@b
  2406  001066  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2407  00106A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2408  00106E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2409  001072  0E00               	movlw	0
  2410  001074  6E2C               	movwf	___flmul@a^0,c
  2411  001076  0E00               	movlw	0
  2412  001078  6E2D               	movwf	(___flmul@a+1)^0,c
  2413  00107A  0EC8               	movlw	200
  2414  00107C  6E2E               	movwf	(___flmul@a+2)^0,c
  2415  00107E  0E42               	movlw	66
  2416  001080  6E2F               	movwf	(___flmul@a+3)^0,c
  2417  001082  ECFA  F00F         	call	___flmul	;wreg free
  2418  001086  C028  F08E         	movff	?___flmul,_detect_color$3242
  2419  00108A  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2420  00108E  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2421  001092  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2422  001096  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2423  00109A  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2424  00109E  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2425  0010A2  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2426  0010A6  ECB7  F02B         	call	_lroundf	;wreg free
  2427  0010AA                     
  2428                           ;color.c: 298:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2429  0010AA  0E05               	movlw	5
  2430  0010AC  0100               	movlb	0	; () banked
  2431  0010AE  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2432  0010B0  0E0F               	movlw	15
  2433  0010B2  6F75               	movwf	??_detect_color& (0+255),b
  2434  0010B4  0EF1               	movlw	241
  2435  0010B6                     u5717:
  2436  0010B6  2EE8               	decfsz	wreg,f,c
  2437  0010B8  D7FE               	bra	u5717
  2438  0010BA  2F75               	decfsz	??_detect_color& (0+255),f,b
  2439  0010BC  D7FC               	bra	u5717
  2440  0010BE  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2441  0010C0  D7FA               	bra	u5717
  2442  0010C2                     
  2443                           ;color.c: 300:     LED_G();
  2444  0010C2  ECB0  F02C         	call	_LED_G	;wreg free
  2445  0010C6                     
  2446                           ;color.c: 301:     read_color(m);
  2447  0010C6  C071  F00C         	movff	detect_color@m,read_color@m
  2448  0010CA  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2449  0010CE  ECB9  F029         	call	_read_color	;wreg free
  2450  0010D2                     
  2451                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2452  0010D2  0100               	movlb	0	; () banked
  2453  0010D4  EE20 F006          	lfsr	2,6
  2454  0010D8  5173               	movf	detect_color@w& (0+255),w,b
  2455  0010DA  26D9               	addwf	fsr2l,f,c
  2456  0010DC  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2457  0010DE  22DA               	addwfc	fsr2h,f,c
  2458  0010E0  CFDE F075          	movff	postinc2,??_detect_color
  2459  0010E4  CFDD F076          	movff	postdec2,??_detect_color+1
  2460  0010E8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2461  0010EC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2462  0010F0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2463  0010F2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2464  0010F4  0E00               	movlw	0
  2465  0010F6  ECED  F01E         	call	___xxtofl
  2466  0010FA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2467  0010FE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2468  001102  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2469  001106  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2470  00110A  C071  FFD9         	movff	detect_color@m,fsr2l
  2471  00110E  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2472  001112  CFDE F077          	movff	postinc2,??_detect_color+2
  2473  001116  CFDD F078          	movff	postdec2,??_detect_color+3
  2474  00111A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2475  00111E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2476  001122  6A03               	clrf	(___xxtofl@val+2)^0,c
  2477  001124  6A04               	clrf	(___xxtofl@val+3)^0,c
  2478  001126  0E00               	movlw	0
  2479  001128  ECED  F01E         	call	___xxtofl
  2480  00112C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2481  001130  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2482  001134  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2483  001138  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2484  00113C  ECE6  F013         	call	___fldiv	;wreg free
  2485  001140  C00F  F028         	movff	?___fldiv,___flmul@b
  2486  001144  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2487  001148  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2488  00114C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2489  001150  0E00               	movlw	0
  2490  001152  6E2C               	movwf	___flmul@a^0,c
  2491  001154  0E00               	movlw	0
  2492  001156  6E2D               	movwf	(___flmul@a+1)^0,c
  2493  001158  0EC8               	movlw	200
  2494  00115A  6E2E               	movwf	(___flmul@a+2)^0,c
  2495  00115C  0E42               	movlw	66
  2496  00115E  6E2F               	movwf	(___flmul@a+3)^0,c
  2497  001160  ECFA  F00F         	call	___flmul	;wreg free
  2498  001164  C028  F08E         	movff	?___flmul,_detect_color$3242
  2499  001168  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2500  00116C  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2501  001170  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2502  001174                     
  2503                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2504  001174  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2505  001178  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2506  00117C  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2507  001180  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2508  001184  ECB7  F02B         	call	_lroundf	;wreg free
  2509  001188  C066  F07F         	movff	?_lroundf,detect_color@GR
  2510  00118C  C067  F080         	movff	?_lroundf+1,detect_color@GR+1
  2511  001190  0100               	movlb	0	; () banked
  2512  001192  EE20 F008          	lfsr	2,8
  2513  001196  5173               	movf	detect_color@w& (0+255),w,b
  2514  001198  26D9               	addwf	fsr2l,f,c
  2515  00119A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2516  00119C  22DA               	addwfc	fsr2h,f,c
  2517  00119E  CFDE F075          	movff	postinc2,??_detect_color
  2518  0011A2  CFDD F076          	movff	postdec2,??_detect_color+1
  2519  0011A6  C075  F001         	movff	??_detect_color,___xxtofl@val
  2520  0011AA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2521  0011AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2522  0011B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2523  0011B2  0E00               	movlw	0
  2524  0011B4  ECED  F01E         	call	___xxtofl
  2525  0011B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2526  0011BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2527  0011C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2528  0011C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2529  0011C8  0100               	movlb	0	; () banked
  2530  0011CA  EE20 F002          	lfsr	2,2
  2531  0011CE  5171               	movf	detect_color@m& (0+255),w,b
  2532  0011D0  26D9               	addwf	fsr2l,f,c
  2533  0011D2  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2534  0011D4  22DA               	addwfc	fsr2h,f,c
  2535  0011D6  CFDE F077          	movff	postinc2,??_detect_color+2
  2536  0011DA  CFDD F078          	movff	postdec2,??_detect_color+3
  2537  0011DE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2538  0011E2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2539  0011E6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2540  0011E8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2541  0011EA  0E00               	movlw	0
  2542  0011EC  ECED  F01E         	call	___xxtofl
  2543  0011F0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2544  0011F4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2545  0011F8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2546  0011FC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2547  001200  ECE6  F013         	call	___fldiv	;wreg free
  2548  001204  C00F  F028         	movff	?___fldiv,___flmul@b
  2549  001208  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2550  00120C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2551  001210  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2552  001214  0E00               	movlw	0
  2553  001216  6E2C               	movwf	___flmul@a^0,c
  2554  001218  0E00               	movlw	0
  2555  00121A  6E2D               	movwf	(___flmul@a+1)^0,c
  2556  00121C  0EC8               	movlw	200
  2557  00121E  6E2E               	movwf	(___flmul@a+2)^0,c
  2558  001220  0E42               	movlw	66
  2559  001222  6E2F               	movwf	(___flmul@a+3)^0,c
  2560  001224  ECFA  F00F         	call	___flmul	;wreg free
  2561  001228  C028  F08E         	movff	?___flmul,_detect_color$3242
  2562  00122C  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2563  001230  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2564  001234  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2565  001238  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2566  00123C  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2567  001240  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2568  001244  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2569  001248  ECB7  F02B         	call	_lroundf	;wreg free
  2570  00124C  C066  F081         	movff	?_lroundf,detect_color@GG
  2571  001250  C067  F082         	movff	?_lroundf+1,detect_color@GG+1
  2572  001254  0100               	movlb	0	; () banked
  2573  001256  EE20 F00A          	lfsr	2,10
  2574  00125A  5173               	movf	detect_color@w& (0+255),w,b
  2575  00125C  26D9               	addwf	fsr2l,f,c
  2576  00125E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2577  001260  22DA               	addwfc	fsr2h,f,c
  2578  001262  CFDE F075          	movff	postinc2,??_detect_color
  2579  001266  CFDD F076          	movff	postdec2,??_detect_color+1
  2580  00126A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2581  00126E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2582  001272  6A03               	clrf	(___xxtofl@val+2)^0,c
  2583  001274  6A04               	clrf	(___xxtofl@val+3)^0,c
  2584  001276  0E00               	movlw	0
  2585  001278  ECED  F01E         	call	___xxtofl
  2586  00127C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2587  001280  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2588  001284  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2589  001288  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2590  00128C  0100               	movlb	0	; () banked
  2591  00128E  EE20 F004          	lfsr	2,4
  2592  001292  5171               	movf	detect_color@m& (0+255),w,b
  2593  001294  26D9               	addwf	fsr2l,f,c
  2594  001296  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2595  001298  22DA               	addwfc	fsr2h,f,c
  2596  00129A  CFDE F077          	movff	postinc2,??_detect_color+2
  2597  00129E  CFDD F078          	movff	postdec2,??_detect_color+3
  2598  0012A2  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2599  0012A6  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2600  0012AA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2601  0012AC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2602  0012AE  0E00               	movlw	0
  2603  0012B0  ECED  F01E         	call	___xxtofl
  2604  0012B4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2605  0012B8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2606  0012BC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2607  0012C0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2608  0012C4  ECE6  F013         	call	___fldiv	;wreg free
  2609  0012C8  C00F  F028         	movff	?___fldiv,___flmul@b
  2610  0012CC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2611  0012D0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2612  0012D4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2613  0012D8  0E00               	movlw	0
  2614  0012DA  6E2C               	movwf	___flmul@a^0,c
  2615  0012DC  0E00               	movlw	0
  2616  0012DE  6E2D               	movwf	(___flmul@a+1)^0,c
  2617  0012E0  0EC8               	movlw	200
  2618  0012E2  6E2E               	movwf	(___flmul@a+2)^0,c
  2619  0012E4  0E42               	movlw	66
  2620  0012E6  6E2F               	movwf	(___flmul@a+3)^0,c
  2621  0012E8  ECFA  F00F         	call	___flmul	;wreg free
  2622  0012EC  C028  F08E         	movff	?___flmul,_detect_color$3242
  2623  0012F0  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2624  0012F4  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2625  0012F8  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2626  0012FC  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2627  001300  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2628  001304  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2629  001308  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2630  00130C  ECB7  F02B         	call	_lroundf	;wreg free
  2631  001310                     
  2632                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2633  001310  0E05               	movlw	5
  2634  001312  0100               	movlb	0	; () banked
  2635  001314  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2636  001316  0E0F               	movlw	15
  2637  001318  6F75               	movwf	??_detect_color& (0+255),b
  2638  00131A  0EF1               	movlw	241
  2639  00131C                     u5727:
  2640  00131C  2EE8               	decfsz	wreg,f,c
  2641  00131E  D7FE               	bra	u5727
  2642  001320  2F75               	decfsz	??_detect_color& (0+255),f,b
  2643  001322  D7FC               	bra	u5727
  2644  001324  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2645  001326  D7FA               	bra	u5727
  2646  001328                     
  2647                           ;color.c: 308:     LED_B();
  2648  001328  ECC0  F02C         	call	_LED_B	;wreg free
  2649  00132C                     
  2650                           ;color.c: 309:     read_color(m);
  2651  00132C  C071  F00C         	movff	detect_color@m,read_color@m
  2652  001330  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2653  001334  ECB9  F029         	call	_read_color	;wreg free
  2654  001338                     
  2655                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2656  001338  0100               	movlb	0	; () banked
  2657  00133A  EE20 F00C          	lfsr	2,12
  2658  00133E  5173               	movf	detect_color@w& (0+255),w,b
  2659  001340  26D9               	addwf	fsr2l,f,c
  2660  001342  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2661  001344  22DA               	addwfc	fsr2h,f,c
  2662  001346  CFDE F075          	movff	postinc2,??_detect_color
  2663  00134A  CFDD F076          	movff	postdec2,??_detect_color+1
  2664  00134E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2665  001352  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2666  001356  6A03               	clrf	(___xxtofl@val+2)^0,c
  2667  001358  6A04               	clrf	(___xxtofl@val+3)^0,c
  2668  00135A  0E00               	movlw	0
  2669  00135C  ECED  F01E         	call	___xxtofl
  2670  001360  C001  F013         	movff	?___xxtofl,___fldiv@a
  2671  001364  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2672  001368  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2673  00136C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2674  001370  C071  FFD9         	movff	detect_color@m,fsr2l
  2675  001374  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2676  001378  CFDE F077          	movff	postinc2,??_detect_color+2
  2677  00137C  CFDD F078          	movff	postdec2,??_detect_color+3
  2678  001380  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2679  001384  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2680  001388  6A03               	clrf	(___xxtofl@val+2)^0,c
  2681  00138A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2682  00138C  0E00               	movlw	0
  2683  00138E  ECED  F01E         	call	___xxtofl
  2684  001392  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2685  001396  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2686  00139A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2687  00139E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2688  0013A2  ECE6  F013         	call	___fldiv	;wreg free
  2689  0013A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2690  0013AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2691  0013AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2692  0013B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2693  0013B6  0E00               	movlw	0
  2694  0013B8  6E2C               	movwf	___flmul@a^0,c
  2695  0013BA  0E00               	movlw	0
  2696  0013BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2697  0013BE  0EC8               	movlw	200
  2698  0013C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2699  0013C2  0E42               	movlw	66
  2700  0013C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2701  0013C6  ECFA  F00F         	call	___flmul	;wreg free
  2702  0013CA  C028  F08E         	movff	?___flmul,_detect_color$3242
  2703  0013CE  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2704  0013D2  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2705  0013D6  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2706  0013DA                     
  2707                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2708  0013DA  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2709  0013DE  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2710  0013E2  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2711  0013E6  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2712  0013EA  ECB7  F02B         	call	_lroundf	;wreg free
  2713  0013EE  C066  F087         	movff	?_lroundf,detect_color@BR
  2714  0013F2  C067  F088         	movff	?_lroundf+1,detect_color@BR+1
  2715  0013F6  0100               	movlb	0	; () banked
  2716  0013F8  EE20 F00E          	lfsr	2,14
  2717  0013FC  5173               	movf	detect_color@w& (0+255),w,b
  2718  0013FE  26D9               	addwf	fsr2l,f,c
  2719  001400  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2720  001402  22DA               	addwfc	fsr2h,f,c
  2721  001404  CFDE F075          	movff	postinc2,??_detect_color
  2722  001408  CFDD F076          	movff	postdec2,??_detect_color+1
  2723  00140C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2724  001410  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2725  001414  6A03               	clrf	(___xxtofl@val+2)^0,c
  2726  001416  6A04               	clrf	(___xxtofl@val+3)^0,c
  2727  001418  0E00               	movlw	0
  2728  00141A  ECED  F01E         	call	___xxtofl
  2729  00141E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2730  001422  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2731  001426  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2732  00142A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2733  00142E  0100               	movlb	0	; () banked
  2734  001430  EE20 F002          	lfsr	2,2
  2735  001434  5171               	movf	detect_color@m& (0+255),w,b
  2736  001436  26D9               	addwf	fsr2l,f,c
  2737  001438  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2738  00143A  22DA               	addwfc	fsr2h,f,c
  2739  00143C  CFDE F077          	movff	postinc2,??_detect_color+2
  2740  001440  CFDD F078          	movff	postdec2,??_detect_color+3
  2741  001444  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2742  001448  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2743  00144C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2744  00144E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2745  001450  0E00               	movlw	0
  2746  001452  ECED  F01E         	call	___xxtofl
  2747  001456  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2748  00145A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2749  00145E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2750  001462  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2751  001466  ECE6  F013         	call	___fldiv	;wreg free
  2752  00146A  C00F  F028         	movff	?___fldiv,___flmul@b
  2753  00146E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2754  001472  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2755  001476  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2756  00147A  0E00               	movlw	0
  2757  00147C  6E2C               	movwf	___flmul@a^0,c
  2758  00147E  0E00               	movlw	0
  2759  001480  6E2D               	movwf	(___flmul@a+1)^0,c
  2760  001482  0EC8               	movlw	200
  2761  001484  6E2E               	movwf	(___flmul@a+2)^0,c
  2762  001486  0E42               	movlw	66
  2763  001488  6E2F               	movwf	(___flmul@a+3)^0,c
  2764  00148A  ECFA  F00F         	call	___flmul	;wreg free
  2765  00148E  C028  F08E         	movff	?___flmul,_detect_color$3242
  2766  001492  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2767  001496  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2768  00149A  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2769  00149E  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2770  0014A2  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2771  0014A6  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2772  0014AA  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2773  0014AE  ECB7  F02B         	call	_lroundf	;wreg free
  2774  0014B2  C066  F08C         	movff	?_lroundf,detect_color@BG
  2775  0014B6  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  2776  0014BA  0100               	movlb	0	; () banked
  2777  0014BC  EE20 F010          	lfsr	2,16
  2778  0014C0  5173               	movf	detect_color@w& (0+255),w,b
  2779  0014C2  26D9               	addwf	fsr2l,f,c
  2780  0014C4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2781  0014C6  22DA               	addwfc	fsr2h,f,c
  2782  0014C8  CFDE F075          	movff	postinc2,??_detect_color
  2783  0014CC  CFDD F076          	movff	postdec2,??_detect_color+1
  2784  0014D0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2785  0014D4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2786  0014D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2787  0014DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2788  0014DC  0E00               	movlw	0
  2789  0014DE  ECED  F01E         	call	___xxtofl
  2790  0014E2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2791  0014E6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2792  0014EA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2793  0014EE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2794  0014F2  0100               	movlb	0	; () banked
  2795  0014F4  EE20 F004          	lfsr	2,4
  2796  0014F8  5171               	movf	detect_color@m& (0+255),w,b
  2797  0014FA  26D9               	addwf	fsr2l,f,c
  2798  0014FC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2799  0014FE  22DA               	addwfc	fsr2h,f,c
  2800  001500  CFDE F077          	movff	postinc2,??_detect_color+2
  2801  001504  CFDD F078          	movff	postdec2,??_detect_color+3
  2802  001508  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2803  00150C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2804  001510  6A03               	clrf	(___xxtofl@val+2)^0,c
  2805  001512  6A04               	clrf	(___xxtofl@val+3)^0,c
  2806  001514  0E00               	movlw	0
  2807  001516  ECED  F01E         	call	___xxtofl
  2808  00151A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2809  00151E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2810  001522  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2811  001526  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2812  00152A  ECE6  F013         	call	___fldiv	;wreg free
  2813  00152E  C00F  F028         	movff	?___fldiv,___flmul@b
  2814  001532  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2815  001536  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2816  00153A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2817  00153E  0E00               	movlw	0
  2818  001540  6E2C               	movwf	___flmul@a^0,c
  2819  001542  0E00               	movlw	0
  2820  001544  6E2D               	movwf	(___flmul@a+1)^0,c
  2821  001546  0EC8               	movlw	200
  2822  001548  6E2E               	movwf	(___flmul@a+2)^0,c
  2823  00154A  0E42               	movlw	66
  2824  00154C  6E2F               	movwf	(___flmul@a+3)^0,c
  2825  00154E  ECFA  F00F         	call	___flmul	;wreg free
  2826  001552  C028  F08E         	movff	?___flmul,_detect_color$3242
  2827  001556  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2828  00155A  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2829  00155E  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2830  001562  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2831  001566  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2832  00156A  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2833  00156E  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2834  001572  ECB7  F02B         	call	_lroundf	;wreg free
  2835  001576  C066  F089         	movff	?_lroundf,detect_color@BB
  2836  00157A  C067  F08A         	movff	?_lroundf+1,detect_color@BB+1
  2837  00157E                     
  2838                           ;color.c: 311:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2839  00157E  0100               	movlb	0	; () banked
  2840  001580  EE20 F01A          	lfsr	2,26
  2841  001584  5173               	movf	detect_color@w& (0+255),w,b
  2842  001586  26D9               	addwf	fsr2l,f,c
  2843  001588  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2844  00158A  22DA               	addwfc	fsr2h,f,c
  2845  00158C  CFDE F075          	movff	postinc2,??_detect_color
  2846  001590  CFDD F076          	movff	postdec2,??_detect_color+1
  2847  001594  C075  F001         	movff	??_detect_color,___xxtofl@val
  2848  001598  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2849  00159C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2850  00159E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2851  0015A0  0E00               	movlw	0
  2852  0015A2  ECED  F01E         	call	___xxtofl
  2853  0015A6  C001  F013         	movff	?___xxtofl,___fldiv@a
  2854  0015AA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2855  0015AE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2856  0015B2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2857  0015B6  0100               	movlb	0	; () banked
  2858  0015B8  EE20 F006          	lfsr	2,6
  2859  0015BC  5171               	movf	detect_color@m& (0+255),w,b
  2860  0015BE  26D9               	addwf	fsr2l,f,c
  2861  0015C0  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2862  0015C2  22DA               	addwfc	fsr2h,f,c
  2863  0015C4  CFDE F077          	movff	postinc2,??_detect_color+2
  2864  0015C8  CFDD F078          	movff	postdec2,??_detect_color+3
  2865  0015CC  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2866  0015D0  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2867  0015D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2868  0015D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2869  0015D8  0E00               	movlw	0
  2870  0015DA  ECED  F01E         	call	___xxtofl
  2871  0015DE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2872  0015E2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2873  0015E6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2874  0015EA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2875  0015EE  ECE6  F013         	call	___fldiv	;wreg free
  2876  0015F2  C00F  F028         	movff	?___fldiv,___flmul@b
  2877  0015F6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2878  0015FA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2879  0015FE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2880  001602  0E00               	movlw	0
  2881  001604  6E2C               	movwf	___flmul@a^0,c
  2882  001606  0E00               	movlw	0
  2883  001608  6E2D               	movwf	(___flmul@a+1)^0,c
  2884  00160A  0EC8               	movlw	200
  2885  00160C  6E2E               	movwf	(___flmul@a+2)^0,c
  2886  00160E  0E42               	movlw	66
  2887  001610  6E2F               	movwf	(___flmul@a+3)^0,c
  2888  001612  ECFA  F00F         	call	___flmul	;wreg free
  2889  001616  C028  F08E         	movff	?___flmul,_detect_color$3242
  2890  00161A  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2891  00161E  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2892  001622  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2893  001626                     
  2894                           ;color.c: 311:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2895  001626  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2896  00162A  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2897  00162E  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2898  001632  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2899  001636  ECB7  F02B         	call	_lroundf	;wreg free
  2900  00163A  C066  F083         	movff	?_lroundf,detect_color@BC
  2901  00163E  C067  F084         	movff	?_lroundf+1,detect_color@BC+1
  2902  001642                     
  2903                           ;color.c: 312:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2904  001642  0E05               	movlw	5
  2905  001644  0100               	movlb	0	; () banked
  2906  001646  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2907  001648  0E0F               	movlw	15
  2908  00164A  6F75               	movwf	??_detect_color& (0+255),b
  2909  00164C  0EF1               	movlw	241
  2910  00164E                     u5737:
  2911  00164E  2EE8               	decfsz	wreg,f,c
  2912  001650  D7FE               	bra	u5737
  2913  001652  2F75               	decfsz	??_detect_color& (0+255),f,b
  2914  001654  D7FC               	bra	u5737
  2915  001656  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2916  001658  D7FA               	bra	u5737
  2917  00165A                     
  2918                           ;color.c: 315:     if (compare(0, BR, 70)){
  2919  00165A  0E00               	movlw	0
  2920  00165C  0100               	movlb	0	; () banked
  2921  00165E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2922  001660  0E00               	movlw	0
  2923  001662  6F6A               	movwf	compare@lower& (0+255),b
  2924  001664  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2925  001668  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2926  00166C  0E00               	movlw	0
  2927  00166E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2928  001670  0E46               	movlw	70
  2929  001672  6F6E               	movwf	compare@upper& (0+255),b
  2930  001674  EC9A  F02B         	call	_compare	;wreg free
  2931  001678  0900               	iorlw	0
  2932  00167A  B4D8               	btfsc	status,2,c
  2933  00167C  EF42  F00B         	goto	u5091
  2934  001680  EF44  F00B         	goto	u5090
  2935  001684                     u5091:
  2936  001684  EFB5  F00B         	goto	l5069
  2937  001688                     u5090:
  2938  001688                     
  2939                           ;color.c: 317:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2940  001688  C089  F001         	movff	detect_color@BB,___xxtofl@val
  2941  00168C  C08A  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2942  001690  6A03               	clrf	(___xxtofl@val+2)^0,c
  2943  001692  6A04               	clrf	(___xxtofl@val+3)^0,c
  2944  001694  0E00               	movlw	0
  2945  001696  ECED  F01E         	call	___xxtofl
  2946  00169A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2947  00169E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2948  0016A2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2949  0016A6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2950  0016AA  0100               	movlb	0	; () banked
  2951  0016AC  518C               	movf	detect_color@BG& (0+255),w,b
  2952  0016AE  2581               	addwf	detect_color@GG& (0+255),w,b
  2953  0016B0  6F75               	movwf	??_detect_color& (0+255),b
  2954  0016B2  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  2955  0016B4  2182               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2956  0016B6  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2957  0016B8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2958  0016BC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2959  0016C0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2960  0016C2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2961  0016C4  0E00               	movlw	0
  2962  0016C6  ECED  F01E         	call	___xxtofl
  2963  0016CA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2964  0016CE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2965  0016D2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2966  0016D6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2967  0016DA  ECE6  F013         	call	___fldiv	;wreg free
  2968  0016DE  C00F  F028         	movff	?___fldiv,___flmul@b
  2969  0016E2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2970  0016E6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2971  0016EA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2972  0016EE  0E00               	movlw	0
  2973  0016F0  6E2C               	movwf	___flmul@a^0,c
  2974  0016F2  0E00               	movlw	0
  2975  0016F4  6E2D               	movwf	(___flmul@a+1)^0,c
  2976  0016F6  0E48               	movlw	72
  2977  0016F8  6E2E               	movwf	(___flmul@a+2)^0,c
  2978  0016FA  0E43               	movlw	67
  2979  0016FC  6E2F               	movwf	(___flmul@a+3)^0,c
  2980  0016FE  ECFA  F00F         	call	___flmul	;wreg free
  2981  001702  C028  F08E         	movff	?___flmul,_detect_color$3242
  2982  001706  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  2983  00170A  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  2984  00170E  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  2985                           
  2986                           ;color.c: 317:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2987  001712  0E00               	movlw	0
  2988  001714  0100               	movlb	0	; () banked
  2989  001716  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2990  001718  0E00               	movlw	0
  2991  00171A  6F6A               	movwf	compare@lower& (0+255),b
  2992  00171C  C08E  F066         	movff	_detect_color$3242,lroundf@x
  2993  001720  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  2994  001724  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  2995  001728  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  2996  00172C  ECB7  F02B         	call	_lroundf	;wreg free
  2997  001730  C066  F06C         	movff	?_lroundf,compare@value2compare
  2998  001734  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2999  001738  0E01               	movlw	1
  3000  00173A  0100               	movlb	0	; () banked
  3001  00173C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3002  00173E  0E9B               	movlw	155
  3003  001740  6F6E               	movwf	compare@upper& (0+255),b
  3004  001742  EC9A  F02B         	call	_compare	;wreg free
  3005  001746  0900               	iorlw	0
  3006  001748  B4D8               	btfsc	status,2,c
  3007  00174A  EFA9  F00B         	goto	u5101
  3008  00174E  EFAB  F00B         	goto	u5100
  3009  001752                     u5101:
  3010  001752  EFB0  F00B         	goto	l5067
  3011  001756                     u5100:
  3012  001756  0E03               	movlw	3
  3013  001758  0100               	movlb	0	; () banked
  3014  00175A  6F8B               	movwf	detect_color@color& (0+255),b
  3015  00175C  EF27  F00D         	goto	l5097
  3016  001760                     l5067:
  3017  001760  0E02               	movlw	2
  3018  001762  0100               	movlb	0	; () banked
  3019  001764  6F8B               	movwf	detect_color@color& (0+255),b
  3020  001766  EF27  F00D         	goto	l5097
  3021  00176A                     l5069:
  3022                           
  3023                           ;color.c: 321:         if (compare(0, BG, 75)){
  3024  00176A  0E00               	movlw	0
  3025  00176C  0100               	movlb	0	; () banked
  3026  00176E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3027  001770  0E00               	movlw	0
  3028  001772  6F6A               	movwf	compare@lower& (0+255),b
  3029  001774  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  3030  001778  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3031  00177C  0E00               	movlw	0
  3032  00177E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3033  001780  0E4B               	movlw	75
  3034  001782  6F6E               	movwf	compare@upper& (0+255),b
  3035  001784  EC9A  F02B         	call	_compare	;wreg free
  3036  001788  0900               	iorlw	0
  3037  00178A  B4D8               	btfsc	status,2,c
  3038  00178C  EFCA  F00B         	goto	u5111
  3039  001790  EFCC  F00B         	goto	u5110
  3040  001794                     u5111:
  3041  001794  EF45  F00C         	goto	l5081
  3042  001798                     u5110:
  3043  001798                     
  3044                           ;color.c: 323:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  3045  001798  C07D  F001         	movff	detect_color@RG,___xxtofl@val
  3046  00179C  C07E  F002         	movff	detect_color@RG+1,___xxtofl@val+1
  3047  0017A0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3048  0017A2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3049  0017A4  0E00               	movlw	0
  3050  0017A6  ECED  F01E         	call	___xxtofl
  3051  0017AA  C001  F013         	movff	?___xxtofl,___fldiv@a
  3052  0017AE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3053  0017B2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3054  0017B6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3055  0017BA  C085  F001         	movff	detect_color@RR,___xxtofl@val
  3056  0017BE  C086  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3057  0017C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3058  0017C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3059  0017C6  0E00               	movlw	0
  3060  0017C8  ECED  F01E         	call	___xxtofl
  3061  0017CC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3062  0017D0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3063  0017D4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3064  0017D8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3065  0017DC  ECE6  F013         	call	___fldiv	;wreg free
  3066  0017E0  C00F  F028         	movff	?___fldiv,___flmul@b
  3067  0017E4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3068  0017E8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3069  0017EC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3070  0017F0  0E00               	movlw	0
  3071  0017F2  6E2C               	movwf	___flmul@a^0,c
  3072  0017F4  0E00               	movlw	0
  3073  0017F6  6E2D               	movwf	(___flmul@a+1)^0,c
  3074  0017F8  0EFA               	movlw	250
  3075  0017FA  6E2E               	movwf	(___flmul@a+2)^0,c
  3076  0017FC  0E43               	movlw	67
  3077  0017FE  6E2F               	movwf	(___flmul@a+3)^0,c
  3078  001800  ECFA  F00F         	call	___flmul	;wreg free
  3079  001804  C028  F08E         	movff	?___flmul,_detect_color$3242
  3080  001808  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  3081  00180C  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  3082  001810  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  3083                           
  3084                           ;color.c: 323:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  3085  001814  0E00               	movlw	0
  3086  001816  0100               	movlb	0	; () banked
  3087  001818  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3088  00181A  0E00               	movlw	0
  3089  00181C  6F6A               	movwf	compare@lower& (0+255),b
  3090  00181E  C08E  F066         	movff	_detect_color$3242,lroundf@x
  3091  001822  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  3092  001826  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  3093  00182A  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  3094  00182E  ECB7  F02B         	call	_lroundf	;wreg free
  3095  001832  C066  F06C         	movff	?_lroundf,compare@value2compare
  3096  001836  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3097  00183A  0E02               	movlw	2
  3098  00183C  0100               	movlb	0	; () banked
  3099  00183E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3100  001840  0E9E               	movlw	158
  3101  001842  6F6E               	movwf	compare@upper& (0+255),b
  3102  001844  EC9A  F02B         	call	_compare	;wreg free
  3103  001848  0900               	iorlw	0
  3104  00184A  B4D8               	btfsc	status,2,c
  3105  00184C  EF2A  F00C         	goto	u5121
  3106  001850  EF2C  F00C         	goto	u5120
  3107  001854                     u5121:
  3108  001854  EF40  F00C         	goto	l5079
  3109  001858                     u5120:
  3110  001858                     
  3111                           ;color.c: 324:                 if (GR > 90){color = 6;}
  3112  001858  0100               	movlb	0	; () banked
  3113  00185A  5180               	movf	(detect_color@GR+1)& (0+255),w,b
  3114  00185C  E109               	bnz	u5130
  3115  00185E  0E5B               	movlw	91
  3116  001860  5D7F               	subwf	detect_color@GR& (0+255),w,b
  3117  001862  A0D8               	btfss	status,0,c
  3118  001864  EF36  F00C         	goto	u5131
  3119  001868  EF38  F00C         	goto	u5130
  3120  00186C                     u5131:
  3121  00186C  EF3C  F00C         	goto	l5077
  3122  001870                     u5130:
  3123  001870                     
  3124                           ; BSR set to: 0
  3125  001870  0E06               	movlw	6
  3126  001872  6F8B               	movwf	detect_color@color& (0+255),b
  3127  001874  EF27  F00D         	goto	l5097
  3128  001878                     l5077:
  3129                           
  3130                           ; BSR set to: 0
  3131  001878  0E00               	movlw	0
  3132  00187A  6F8B               	movwf	detect_color@color& (0+255),b
  3133  00187C  EF27  F00D         	goto	l5097
  3134  001880                     l5079:
  3135  001880  0E01               	movlw	1
  3136  001882  0100               	movlb	0	; () banked
  3137  001884  6F8B               	movwf	detect_color@color& (0+255),b
  3138  001886  EF27  F00D         	goto	l5097
  3139  00188A                     l5081:
  3140                           
  3141                           ;color.c: 330:             if (compare(0, lroundf((float)(BR + BG)/BB * 100), 100)){
  3142  00188A  C089  F001         	movff	detect_color@BB,___xxtofl@val
  3143  00188E  C08A  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3144  001892  6A03               	clrf	(___xxtofl@val+2)^0,c
  3145  001894  6A04               	clrf	(___xxtofl@val+3)^0,c
  3146  001896  0E00               	movlw	0
  3147  001898  ECED  F01E         	call	___xxtofl
  3148  00189C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3149  0018A0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3150  0018A4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3151  0018A8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3152  0018AC  0100               	movlb	0	; () banked
  3153  0018AE  518C               	movf	detect_color@BG& (0+255),w,b
  3154  0018B0  2587               	addwf	detect_color@BR& (0+255),w,b
  3155  0018B2  6F75               	movwf	??_detect_color& (0+255),b
  3156  0018B4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3157  0018B6  2188               	addwfc	(detect_color@BR+1)& (0+255),w,b
  3158  0018B8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3159  0018BA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3160  0018BE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3161  0018C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3162  0018C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3163  0018C6  0E00               	movlw	0
  3164  0018C8  ECED  F01E         	call	___xxtofl
  3165  0018CC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3166  0018D0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3167  0018D4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3168  0018D8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3169  0018DC  ECE6  F013         	call	___fldiv	;wreg free
  3170  0018E0  C00F  F028         	movff	?___fldiv,___flmul@b
  3171  0018E4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3172  0018E8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3173  0018EC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3174  0018F0  0E00               	movlw	0
  3175  0018F2  6E2C               	movwf	___flmul@a^0,c
  3176  0018F4  0E00               	movlw	0
  3177  0018F6  6E2D               	movwf	(___flmul@a+1)^0,c
  3178  0018F8  0EC8               	movlw	200
  3179  0018FA  6E2E               	movwf	(___flmul@a+2)^0,c
  3180  0018FC  0E42               	movlw	66
  3181  0018FE  6E2F               	movwf	(___flmul@a+3)^0,c
  3182  001900  ECFA  F00F         	call	___flmul	;wreg free
  3183  001904  C028  F08E         	movff	?___flmul,_detect_color$3242
  3184  001908  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  3185  00190C  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  3186  001910  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  3187                           
  3188                           ;color.c: 330:             if (compare(0, lroundf((float)(BR + BG)/BB * 100), 100)){
  3189  001914  0E00               	movlw	0
  3190  001916  0100               	movlb	0	; () banked
  3191  001918  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3192  00191A  0E00               	movlw	0
  3193  00191C  6F6A               	movwf	compare@lower& (0+255),b
  3194  00191E  C08E  F066         	movff	_detect_color$3242,lroundf@x
  3195  001922  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  3196  001926  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  3197  00192A  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  3198  00192E  ECB7  F02B         	call	_lroundf	;wreg free
  3199  001932  C066  F06C         	movff	?_lroundf,compare@value2compare
  3200  001936  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3201  00193A  0E00               	movlw	0
  3202  00193C  0100               	movlb	0	; () banked
  3203  00193E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3204  001940  0E64               	movlw	100
  3205  001942  6F6E               	movwf	compare@upper& (0+255),b
  3206  001944  EC9A  F02B         	call	_compare	;wreg free
  3207  001948  0900               	iorlw	0
  3208  00194A  B4D8               	btfsc	status,2,c
  3209  00194C  EFAA  F00C         	goto	u5141
  3210  001950  EFAC  F00C         	goto	u5140
  3211  001954                     u5141:
  3212  001954  EFBC  F00C         	goto	l5089
  3213  001958                     u5140:
  3214  001958                     
  3215                           ;color.c: 331:                 if (BG > 90){color = 7;}
  3216  001958  0100               	movlb	0	; () banked
  3217  00195A  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3218  00195C  E109               	bnz	u5150
  3219  00195E  0E5B               	movlw	91
  3220  001960  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3221  001962  A0D8               	btfss	status,0,c
  3222  001964  EFB6  F00C         	goto	u5151
  3223  001968  EFB8  F00C         	goto	u5150
  3224  00196C                     u5151:
  3225  00196C  EF3C  F00C         	goto	l5077
  3226  001970                     u5150:
  3227  001970                     
  3228                           ; BSR set to: 0
  3229  001970  0E07               	movlw	7
  3230  001972  6F8B               	movwf	detect_color@color& (0+255),b
  3231  001974  EF27  F00D         	goto	l5097
  3232  001978                     l5089:
  3233                           
  3234                           ;color.c: 335:                 if (BG > BB && lroundf((float)BB / BC * 100) < 90){color 
      +                          = 4;}
  3235  001978  0100               	movlb	0	; () banked
  3236  00197A  518C               	movf	detect_color@BG& (0+255),w,b
  3237  00197C  5D89               	subwf	detect_color@BB& (0+255),w,b
  3238  00197E  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3239  001980  598A               	subwfb	(detect_color@BB+1)& (0+255),w,b
  3240  001982  B0D8               	btfsc	status,0,c
  3241  001984  EFC6  F00C         	goto	u5161
  3242  001988  EFC8  F00C         	goto	u5160
  3243  00198C                     u5161:
  3244  00198C  EF25  F00D         	goto	l5095
  3245  001990                     u5160:
  3246  001990                     
  3247                           ; BSR set to: 0
  3248  001990  C083  F001         	movff	detect_color@BC,___xxtofl@val
  3249  001994  C084  F002         	movff	detect_color@BC+1,___xxtofl@val+1
  3250  001998  6A03               	clrf	(___xxtofl@val+2)^0,c
  3251  00199A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3252  00199C  0E00               	movlw	0
  3253  00199E  ECED  F01E         	call	___xxtofl
  3254  0019A2  C001  F013         	movff	?___xxtofl,___fldiv@a
  3255  0019A6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3256  0019AA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3257  0019AE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3258  0019B2  C089  F001         	movff	detect_color@BB,___xxtofl@val
  3259  0019B6  C08A  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3260  0019BA  6A03               	clrf	(___xxtofl@val+2)^0,c
  3261  0019BC  6A04               	clrf	(___xxtofl@val+3)^0,c
  3262  0019BE  0E00               	movlw	0
  3263  0019C0  ECED  F01E         	call	___xxtofl
  3264  0019C4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3265  0019C8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3266  0019CC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3267  0019D0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3268  0019D4  ECE6  F013         	call	___fldiv	;wreg free
  3269  0019D8  C00F  F028         	movff	?___fldiv,___flmul@b
  3270  0019DC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3271  0019E0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3272  0019E4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3273  0019E8  0E00               	movlw	0
  3274  0019EA  6E2C               	movwf	___flmul@a^0,c
  3275  0019EC  0E00               	movlw	0
  3276  0019EE  6E2D               	movwf	(___flmul@a+1)^0,c
  3277  0019F0  0EC8               	movlw	200
  3278  0019F2  6E2E               	movwf	(___flmul@a+2)^0,c
  3279  0019F4  0E42               	movlw	66
  3280  0019F6  6E2F               	movwf	(___flmul@a+3)^0,c
  3281  0019F8  ECFA  F00F         	call	___flmul	;wreg free
  3282  0019FC  C028  F08E         	movff	?___flmul,_detect_color$3242
  3283  001A00  C029  F08F         	movff	?___flmul+1,_detect_color$3242+1
  3284  001A04  C02A  F090         	movff	?___flmul+2,_detect_color$3242+2
  3285  001A08  C02B  F091         	movff	?___flmul+3,_detect_color$3242+3
  3286  001A0C  C08E  F066         	movff	_detect_color$3242,lroundf@x
  3287  001A10  C08F  F067         	movff	_detect_color$3242+1,lroundf@x+1
  3288  001A14  C090  F068         	movff	_detect_color$3242+2,lroundf@x+2
  3289  001A18  C091  F069         	movff	_detect_color$3242+3,lroundf@x+3
  3290  001A1C  ECB7  F02B         	call	_lroundf	;wreg free
  3291  001A20  0100               	movlb	0	; () banked
  3292  001A22  BF69               	btfsc	(?_lroundf+3)& (0+255),7,b
  3293  001A24  EF21  F00D         	goto	u5170
  3294  001A28  5169               	movf	(?_lroundf+3)& (0+255),w,b
  3295  001A2A  1168               	iorwf	(?_lroundf+2)& (0+255),w,b
  3296  001A2C  1167               	iorwf	(?_lroundf+1)& (0+255),w,b
  3297  001A2E  E107               	bnz	u5171
  3298  001A30  0E5A               	movlw	90
  3299  001A32  5D66               	subwf	?_lroundf& (0+255),w,b
  3300  001A34  B0D8               	btfsc	status,0,c
  3301  001A36  EF1F  F00D         	goto	u5171
  3302  001A3A  EF21  F00D         	goto	u5170
  3303  001A3E                     u5171:
  3304  001A3E  EF25  F00D         	goto	l5095
  3305  001A42                     u5170:
  3306  001A42                     
  3307                           ; BSR set to: 0
  3308  001A42  0E04               	movlw	4
  3309  001A44  6F8B               	movwf	detect_color@color& (0+255),b
  3310  001A46  EF27  F00D         	goto	l5097
  3311  001A4A                     l5095:
  3312                           
  3313                           ; BSR set to: 0
  3314  001A4A  0E05               	movlw	5
  3315  001A4C  6F8B               	movwf	detect_color@color& (0+255),b
  3316  001A4E                     l5097:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;color.c: 341:     if (compare(90, BR, 110) && compare(90,BG,110)){color = 8;}
  3320  001A4E  0E00               	movlw	0
  3321  001A50  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3322  001A52  0E5A               	movlw	90
  3323  001A54  6F6A               	movwf	compare@lower& (0+255),b
  3324  001A56  C087  F06C         	movff	detect_color@BR,compare@value2compare
  3325  001A5A  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3326  001A5E  0E00               	movlw	0
  3327  001A60  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3328  001A62  0E6E               	movlw	110
  3329  001A64  6F6E               	movwf	compare@upper& (0+255),b
  3330  001A66  EC9A  F02B         	call	_compare	;wreg free
  3331  001A6A  0900               	iorlw	0
  3332  001A6C  B4D8               	btfsc	status,2,c
  3333  001A6E  EF3B  F00D         	goto	u5181
  3334  001A72  EF3D  F00D         	goto	u5180
  3335  001A76                     u5181:
  3336  001A76  EF57  F00D         	goto	l5103
  3337  001A7A                     u5180:
  3338  001A7A  0E00               	movlw	0
  3339  001A7C  0100               	movlb	0	; () banked
  3340  001A7E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3341  001A80  0E5A               	movlw	90
  3342  001A82  6F6A               	movwf	compare@lower& (0+255),b
  3343  001A84  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  3344  001A88  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3345  001A8C  0E00               	movlw	0
  3346  001A8E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3347  001A90  0E6E               	movlw	110
  3348  001A92  6F6E               	movwf	compare@upper& (0+255),b
  3349  001A94  EC9A  F02B         	call	_compare	;wreg free
  3350  001A98  0900               	iorlw	0
  3351  001A9A  B4D8               	btfsc	status,2,c
  3352  001A9C  EF52  F00D         	goto	u5191
  3353  001AA0  EF54  F00D         	goto	u5190
  3354  001AA4                     u5191:
  3355  001AA4  EF57  F00D         	goto	l5103
  3356  001AA8                     u5190:
  3357  001AA8  0E08               	movlw	8
  3358  001AAA  0100               	movlb	0	; () banked
  3359  001AAC  6F8B               	movwf	detect_color@color& (0+255),b
  3360  001AAE                     l5103:
  3361                           
  3362                           ;color.c: 342:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3363  001AAE  0E00               	movlw	0
  3364  001AB0  0100               	movlb	0	; () banked
  3365  001AB2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3366  001AB4  0E00               	movlw	0
  3367  001AB6  6F6A               	movwf	compare@lower& (0+255),b
  3368  001AB8  C087  F06C         	movff	detect_color@BR,compare@value2compare
  3369  001ABC  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3370  001AC0  0E00               	movlw	0
  3371  001AC2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3372  001AC4  0E19               	movlw	25
  3373  001AC6  6F6E               	movwf	compare@upper& (0+255),b
  3374  001AC8  EC9A  F02B         	call	_compare	;wreg free
  3375  001ACC  0900               	iorlw	0
  3376  001ACE  B4D8               	btfsc	status,2,c
  3377  001AD0  EF6C  F00D         	goto	u5201
  3378  001AD4  EF6E  F00D         	goto	u5200
  3379  001AD8                     u5201:
  3380  001AD8  EF88  F00D         	goto	l5109
  3381  001ADC                     u5200:
  3382  001ADC  0E00               	movlw	0
  3383  001ADE  0100               	movlb	0	; () banked
  3384  001AE0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3385  001AE2  0E00               	movlw	0
  3386  001AE4  6F6A               	movwf	compare@lower& (0+255),b
  3387  001AE6  C085  F06C         	movff	detect_color@RR,compare@value2compare
  3388  001AEA  C086  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3389  001AEE  0E00               	movlw	0
  3390  001AF0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3391  001AF2  0E5A               	movlw	90
  3392  001AF4  6F6E               	movwf	compare@upper& (0+255),b
  3393  001AF6  EC9A  F02B         	call	_compare	;wreg free
  3394  001AFA  0900               	iorlw	0
  3395  001AFC  B4D8               	btfsc	status,2,c
  3396  001AFE  EF83  F00D         	goto	u5211
  3397  001B02  EF85  F00D         	goto	u5210
  3398  001B06                     u5211:
  3399  001B06  EF88  F00D         	goto	l5109
  3400  001B0A                     u5210:
  3401  001B0A  0E00               	movlw	0
  3402  001B0C  0100               	movlb	0	; () banked
  3403  001B0E  6F8B               	movwf	detect_color@color& (0+255),b
  3404  001B10                     l5109:
  3405                           
  3406                           ;color.c: 344:     if (color == 8) {toggle_light(2,1);}
  3407  001B10  0E08               	movlw	8
  3408  001B12  0100               	movlb	0	; () banked
  3409  001B14  198B               	xorwf	detect_color@color& (0+255),w,b
  3410  001B16  A4D8               	btfss	status,2,c
  3411  001B18  EF90  F00D         	goto	u5221
  3412  001B1C  EF92  F00D         	goto	u5220
  3413  001B20                     u5221:
  3414  001B20  EF97  F00D         	goto	l5113
  3415  001B24                     u5220:
  3416  001B24                     
  3417                           ; BSR set to: 0
  3418  001B24  0E01               	movlw	1
  3419  001B26  6E01               	movwf	toggle_light@toggletime^0,c
  3420  001B28  0E02               	movlw	2
  3421  001B2A  ECF2  F019         	call	_toggle_light
  3422  001B2E                     l5113:
  3423                           
  3424                           ;color.c: 346:     return color;
  3425  001B2E  0100               	movlb	0	; () banked
  3426  001B30  518B               	movf	detect_color@color& (0+255),w,b
  3427  001B32                     
  3428                           ; BSR set to: 0
  3429  001B32  0012               	return		;funcret
  3430  001B34                     __end_of_detect_color:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _compare *****************
  3434 ;; Defined at:
  3435 ;;		line 349 in file "color.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  lower           2   10[BANK0 ] unsigned int 
  3438 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3439 ;;  upper           2   14[BANK0 ] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  result          1   16[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      unsigned char 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_detect_color
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text5
  3466  005734                     __ptext5:
  3467                           	callstack 0
  3468  005734                     _compare:
  3469                           	callstack 27
  3470  005734                     
  3471                           ;color.c: 349: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 350: {;color.c: 351:     unsigned char result = 0;
  3472  005734  0E00               	movlw	0
  3473  005736  0100               	movlb	0	; () banked
  3474  005738  6F70               	movwf	compare@result& (0+255),b
  3475  00573A                     
  3476                           ; BSR set to: 0
  3477                           ;color.c: 352:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3478  00573A  516C               	movf	compare@value2compare& (0+255),w,b
  3479  00573C  5D6A               	subwf	compare@lower& (0+255),w,b
  3480  00573E  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3481  005740  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3482  005742  B0D8               	btfsc	status,0,c
  3483  005744  EFA6  F02B         	goto	u4561
  3484  005748  EFA8  F02B         	goto	u4560
  3485  00574C                     u4561:
  3486  00574C  EFB5  F02B         	goto	l166
  3487  005750                     u4560:
  3488  005750                     
  3489                           ; BSR set to: 0
  3490  005750  516C               	movf	compare@value2compare& (0+255),w,b
  3491  005752  5D6E               	subwf	compare@upper& (0+255),w,b
  3492  005754  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3493  005756  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3494  005758  A0D8               	btfss	status,0,c
  3495  00575A  EFB1  F02B         	goto	u4571
  3496  00575E  EFB3  F02B         	goto	u4570
  3497  005762                     u4571:
  3498  005762  EFB5  F02B         	goto	l166
  3499  005766                     u4570:
  3500  005766                     
  3501                           ; BSR set to: 0
  3502  005766  0E01               	movlw	1
  3503  005768  6F70               	movwf	compare@result& (0+255),b
  3504  00576A                     l166:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;color.c: 353:     return result;
  3508  00576A  5170               	movf	compare@result& (0+255),w,b
  3509  00576C                     
  3510                           ; BSR set to: 0
  3511  00576C  0012               	return		;funcret
  3512  00576E                     __end_of_compare:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _color_data_collection *****************
  3516 ;; Defined at:
  3517 ;;		line 200 in file "color.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3520 ;;		 -> main@rgb(8), 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  x               2  132[BANK0 ] int 
  3523 ;;  k               2  130[BANK0 ] int 
  3524 ;;  j               2  128[BANK0 ] int 
  3525 ;;  i               2  126[BANK0 ] int 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;Total ram usage:       12 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 10
  3542 ;; This function calls:
  3543 ;;		_LED_B
  3544 ;;		_LED_C
  3545 ;;		_LED_G
  3546 ;;		_LED_R
  3547 ;;		_color_display
  3548 ;;		_color_predict
  3549 ;;		_read_color
  3550 ;; This function is called by:
  3551 ;;		_test_function
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text6
  3556  003A6E                     __ptext6:
  3557                           	callstack 0
  3558  003A6E                     _color_data_collection:
  3559                           	callstack 19
  3560  003A6E                     
  3561                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3562  003A6E  0E00               	movlw	0
  3563  003A70  0100               	movlb	0	; () banked
  3564  003A72  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3565  003A74  0E00               	movlw	0
  3566  003A76  6FDE               	movwf	color_data_collection@i& (0+255),b
  3567  003A78  0E00               	movlw	0
  3568  003A7A  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3569  003A7C  0E00               	movlw	0
  3570  003A7E  6FE2               	movwf	color_data_collection@k& (0+255),b
  3571  003A80  0E00               	movlw	0
  3572  003A82  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3573  003A84  0E00               	movlw	0
  3574  003A86  6FE4               	movwf	color_data_collection@x& (0+255),b
  3575                           
  3576                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3577  003A88  0E00               	movlw	0
  3578  003A8A  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3579  003A8C  0E00               	movlw	0
  3580  003A8E  6FDE               	movwf	color_data_collection@i& (0+255),b
  3581  003A90                     l4871:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;color.c: 204:         LED_C();
  3585  003A90  ECD0  F02C         	call	_LED_C	;wreg free
  3586  003A94                     
  3587                           ;color.c: 205:         read_color(m);
  3588  003A94  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3589  003A98  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3590  003A9C  ECB9  F029         	call	_read_color	;wreg free
  3591  003AA0                     
  3592                           ;color.c: 206:         color_display(m);
  3593  003AA0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3594  003AA4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3595  003AA8  EC20  F029         	call	_color_display	;wreg free
  3596  003AAC                     
  3597                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3598  003AAC  0E09               	movlw	9
  3599  003AAE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3600  003AB0  0E1E               	movlw	30
  3601  003AB2  6E5C               	movwf	??_color_data_collection^0,c
  3602  003AB4  0EE4               	movlw	228
  3603  003AB6                     u5747:
  3604  003AB6  2EE8               	decfsz	wreg,f,c
  3605  003AB8  D7FE               	bra	u5747
  3606  003ABA  2E5C               	decfsz	??_color_data_collection^0,f,c
  3607  003ABC  D7FC               	bra	u5747
  3608  003ABE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3609  003AC0  D7FA               	bra	u5747
  3610  003AC2  D000               	nop2	
  3611  003AC4                     
  3612                           ;color.c: 208:     }
  3613  003AC4  0100               	movlb	0	; () banked
  3614  003AC6  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3615  003AC8  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3616  003ACA                     
  3617                           ; BSR set to: 0
  3618  003ACA  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3619  003ACC  EF71  F01D         	goto	u5051
  3620  003AD0  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3621  003AD2  E109               	bnz	u5050
  3622  003AD4  0E05               	movlw	5
  3623  003AD6  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3624  003AD8  A0D8               	btfss	status,0,c
  3625  003ADA  EF71  F01D         	goto	u5051
  3626  003ADE  EF73  F01D         	goto	u5050
  3627  003AE2                     u5051:
  3628  003AE2  EF48  F01D         	goto	l4871
  3629  003AE6                     u5050:
  3630  003AE6                     
  3631                           ; BSR set to: 0
  3632                           ;color.c: 209:     color_predict(00000);
  3633  003AE6  0E00               	movlw	0
  3634  003AE8  EC3D  F02C         	call	_color_predict
  3635  003AEC                     
  3636                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3637  003AEC  0E00               	movlw	0
  3638  003AEE  0100               	movlb	0	; () banked
  3639  003AF0  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3640  003AF2  0E00               	movlw	0
  3641  003AF4  6FE0               	movwf	color_data_collection@j& (0+255),b
  3642  003AF6                     l4891:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;color.c: 211:         LED_R();
  3646  003AF6  EC90  F02C         	call	_LED_R	;wreg free
  3647  003AFA                     
  3648                           ;color.c: 212:         read_color(m);
  3649  003AFA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3650  003AFE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3651  003B02  ECB9  F029         	call	_read_color	;wreg free
  3652  003B06                     
  3653                           ;color.c: 213:         color_display(m);
  3654  003B06  C05A  F058         	movff	color_data_collection@m,color_display@m
  3655  003B0A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3656  003B0E  EC20  F029         	call	_color_display	;wreg free
  3657  003B12                     
  3658                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3659  003B12  0E09               	movlw	9
  3660  003B14  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3661  003B16  0E1E               	movlw	30
  3662  003B18  6E5C               	movwf	??_color_data_collection^0,c
  3663  003B1A  0EE4               	movlw	228
  3664  003B1C                     u5757:
  3665  003B1C  2EE8               	decfsz	wreg,f,c
  3666  003B1E  D7FE               	bra	u5757
  3667  003B20  2E5C               	decfsz	??_color_data_collection^0,f,c
  3668  003B22  D7FC               	bra	u5757
  3669  003B24  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3670  003B26  D7FA               	bra	u5757
  3671  003B28  D000               	nop2	
  3672  003B2A                     
  3673                           ;color.c: 215:     }
  3674  003B2A  0100               	movlb	0	; () banked
  3675  003B2C  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3676  003B2E  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3677  003B30                     
  3678                           ; BSR set to: 0
  3679  003B30  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3680  003B32  EFA4  F01D         	goto	u5061
  3681  003B36  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3682  003B38  E109               	bnz	u5060
  3683  003B3A  0E05               	movlw	5
  3684  003B3C  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3685  003B3E  A0D8               	btfss	status,0,c
  3686  003B40  EFA4  F01D         	goto	u5061
  3687  003B44  EFA6  F01D         	goto	u5060
  3688  003B48                     u5061:
  3689  003B48  EF7B  F01D         	goto	l4891
  3690  003B4C                     u5060:
  3691  003B4C                     
  3692                           ; BSR set to: 0
  3693                           ;color.c: 216:     color_predict(00000);
  3694  003B4C  0E00               	movlw	0
  3695  003B4E  EC3D  F02C         	call	_color_predict
  3696  003B52                     
  3697                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3698  003B52  0E00               	movlw	0
  3699  003B54  0100               	movlb	0	; () banked
  3700  003B56  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3701  003B58  0E00               	movlw	0
  3702  003B5A  6FE2               	movwf	color_data_collection@k& (0+255),b
  3703  003B5C                     l4911:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;color.c: 218:         LED_G();
  3707  003B5C  ECB0  F02C         	call	_LED_G	;wreg free
  3708  003B60                     
  3709                           ;color.c: 219:         read_color(m);
  3710  003B60  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3711  003B64  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3712  003B68  ECB9  F029         	call	_read_color	;wreg free
  3713  003B6C                     
  3714                           ;color.c: 220:         color_display(m);
  3715  003B6C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3716  003B70  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3717  003B74  EC20  F029         	call	_color_display	;wreg free
  3718  003B78                     
  3719                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3720  003B78  0E09               	movlw	9
  3721  003B7A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3722  003B7C  0E1E               	movlw	30
  3723  003B7E  6E5C               	movwf	??_color_data_collection^0,c
  3724  003B80  0EE4               	movlw	228
  3725  003B82                     u5767:
  3726  003B82  2EE8               	decfsz	wreg,f,c
  3727  003B84  D7FE               	bra	u5767
  3728  003B86  2E5C               	decfsz	??_color_data_collection^0,f,c
  3729  003B88  D7FC               	bra	u5767
  3730  003B8A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3731  003B8C  D7FA               	bra	u5767
  3732  003B8E  D000               	nop2	
  3733  003B90                     
  3734                           ;color.c: 222:     }
  3735  003B90  0100               	movlb	0	; () banked
  3736  003B92  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3737  003B94  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3738  003B96                     
  3739                           ; BSR set to: 0
  3740  003B96  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3741  003B98  EFD7  F01D         	goto	u5071
  3742  003B9C  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3743  003B9E  E109               	bnz	u5070
  3744  003BA0  0E05               	movlw	5
  3745  003BA2  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3746  003BA4  A0D8               	btfss	status,0,c
  3747  003BA6  EFD7  F01D         	goto	u5071
  3748  003BAA  EFD9  F01D         	goto	u5070
  3749  003BAE                     u5071:
  3750  003BAE  EFAE  F01D         	goto	l4911
  3751  003BB2                     u5070:
  3752  003BB2                     
  3753                           ; BSR set to: 0
  3754                           ;color.c: 223:     color_predict(00000);
  3755  003BB2  0E00               	movlw	0
  3756  003BB4  EC3D  F02C         	call	_color_predict
  3757  003BB8                     
  3758                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3759  003BB8  0E00               	movlw	0
  3760  003BBA  0100               	movlb	0	; () banked
  3761  003BBC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3762  003BBE  0E00               	movlw	0
  3763  003BC0  6FE4               	movwf	color_data_collection@x& (0+255),b
  3764  003BC2                     l4931:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;color.c: 225:         LED_B();
  3768  003BC2  ECC0  F02C         	call	_LED_B	;wreg free
  3769  003BC6                     
  3770                           ;color.c: 226:         read_color(m);
  3771  003BC6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3772  003BCA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3773  003BCE  ECB9  F029         	call	_read_color	;wreg free
  3774  003BD2                     
  3775                           ;color.c: 227:         color_display(m);
  3776  003BD2  C05A  F058         	movff	color_data_collection@m,color_display@m
  3777  003BD6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3778  003BDA  EC20  F029         	call	_color_display	;wreg free
  3779  003BDE                     
  3780                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3781  003BDE  0E09               	movlw	9
  3782  003BE0  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3783  003BE2  0E1E               	movlw	30
  3784  003BE4  6E5C               	movwf	??_color_data_collection^0,c
  3785  003BE6  0EE4               	movlw	228
  3786  003BE8                     u5777:
  3787  003BE8  2EE8               	decfsz	wreg,f,c
  3788  003BEA  D7FE               	bra	u5777
  3789  003BEC  2E5C               	decfsz	??_color_data_collection^0,f,c
  3790  003BEE  D7FC               	bra	u5777
  3791  003BF0  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3792  003BF2  D7FA               	bra	u5777
  3793  003BF4  D000               	nop2	
  3794  003BF6                     
  3795                           ;color.c: 229:     }
  3796  003BF6  0100               	movlb	0	; () banked
  3797  003BF8  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3798  003BFA  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3799  003BFC                     
  3800                           ; BSR set to: 0
  3801  003BFC  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3802  003BFE  EF0A  F01E         	goto	u5081
  3803  003C02  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3804  003C04  E109               	bnz	u5080
  3805  003C06  0E05               	movlw	5
  3806  003C08  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3807  003C0A  A0D8               	btfss	status,0,c
  3808  003C0C  EF0A  F01E         	goto	u5081
  3809  003C10  EF0C  F01E         	goto	u5080
  3810  003C14                     u5081:
  3811  003C14  EFE1  F01D         	goto	l4931
  3812  003C18                     u5080:
  3813  003C18                     
  3814                           ; BSR set to: 0
  3815                           ;color.c: 230:     color_predict(1);
  3816  003C18  0E01               	movlw	1
  3817  003C1A  EC3D  F02C         	call	_color_predict
  3818  003C1E                     
  3819                           ;color.c: 231:     LED_C();
  3820  003C1E  ECD0  F02C         	call	_LED_C	;wreg free
  3821  003C22  0012               	return		;funcret
  3822  003C24                     __end_of_color_data_collection:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _read_color *****************
  3826 ;; Defined at:
  3827 ;;		line 147 in file "color.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3830 ;;		 -> main@rgb(8), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 4
  3849 ;; This function calls:
  3850 ;;		_color_read_Blue
  3851 ;;		_color_read_Clear
  3852 ;;		_color_read_Green
  3853 ;;		_color_read_Red
  3854 ;; This function is called by:
  3855 ;;		_color_data_collection
  3856 ;;		_detect_color
  3857 ;;		_test_function
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text7
  3862  005372                     __ptext7:
  3863                           	callstack 0
  3864  005372                     _read_color:
  3865                           	callstack 24
  3866  005372                     
  3867                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3868  005372  EC11  F02A         	call	_color_read_Red	;wreg free
  3869  005376  C00C  FFD9         	movff	read_color@m,fsr2l
  3870  00537A  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3871  00537E  C005  FFDE         	movff	?_color_read_Red,postinc2
  3872  005382  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3873                           
  3874                           ;color.c: 150:     m->B = color_read_Blue();
  3875  005386  EC61  F02A         	call	_color_read_Blue	;wreg free
  3876  00538A  EE20 F004          	lfsr	2,4
  3877  00538E  500C               	movf	read_color@m^0,w,c
  3878  005390  26D9               	addwf	fsr2l,f,c
  3879  005392  500D               	movf	(read_color@m+1)^0,w,c
  3880  005394  22DA               	addwfc	fsr2h,f,c
  3881  005396  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3882  00539A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3883                           
  3884                           ;color.c: 151:     m->G = color_read_Green();
  3885  00539E  EC39  F02A         	call	_color_read_Green	;wreg free
  3886  0053A2  EE20 F002          	lfsr	2,2
  3887  0053A6  500C               	movf	read_color@m^0,w,c
  3888  0053A8  26D9               	addwf	fsr2l,f,c
  3889  0053AA  500D               	movf	(read_color@m+1)^0,w,c
  3890  0053AC  22DA               	addwfc	fsr2h,f,c
  3891  0053AE  C005  FFDE         	movff	?_color_read_Green,postinc2
  3892  0053B2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3893                           
  3894                           ;color.c: 152:     m->C = color_read_Clear();
  3895  0053B6  EC89  F02A         	call	_color_read_Clear	;wreg free
  3896  0053BA  EE20 F006          	lfsr	2,6
  3897  0053BE  500C               	movf	read_color@m^0,w,c
  3898  0053C0  26D9               	addwf	fsr2l,f,c
  3899  0053C2  500D               	movf	(read_color@m+1)^0,w,c
  3900  0053C4  22DA               	addwfc	fsr2h,f,c
  3901  0053C6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3902  0053CA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3903  0053CE  0012               	return		;funcret
  3904  0053D0                     __end_of_read_color:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _color_display *****************
  3908 ;; Defined at:
  3909 ;;		line 234 in file "color.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3912 ;;		 -> main@rgb(8), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;Total ram usage:      102 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 9
  3931 ;; This function calls:
  3932 ;;		_sendStringSerial4
  3933 ;;		_sprintf
  3934 ;; This function is called by:
  3935 ;;		_color_data_collection
  3936 ;;		_test_function
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text8
  3941  005240                     __ptext8:
  3942                           	callstack 0
  3943  005240                     _color_display:
  3944                           	callstack 20
  3945  005240                     
  3946                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3947  005240  0E79               	movlw	low color_display@buf
  3948  005242  0100               	movlb	0	; () banked
  3949  005244  6F60               	movwf	sprintf@s& (0+255),b
  3950  005246  0E00               	movlw	high color_display@buf
  3951  005248  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3952  00524A  0E05               	movlw	low STR_1
  3953  00524C  6F62               	movwf	sprintf@fmt& (0+255),b
  3954  00524E  0E0E               	movlw	high STR_1
  3955  005250  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3956  005252  C058  FFD9         	movff	color_display@m,fsr2l
  3957  005256  C059  FFDA         	movff	color_display@m+1,fsr2h
  3958  00525A  CFDE F064          	movff	postinc2,?_sprintf+4
  3959  00525E  CFDD F065          	movff	postdec2,?_sprintf+5
  3960  005262  EE20 F002          	lfsr	2,2
  3961  005266  5058               	movf	color_display@m^0,w,c
  3962  005268  26D9               	addwf	fsr2l,f,c
  3963  00526A  5059               	movf	(color_display@m+1)^0,w,c
  3964  00526C  22DA               	addwfc	fsr2h,f,c
  3965  00526E  CFDE F066          	movff	postinc2,?_sprintf+6
  3966  005272  CFDD F067          	movff	postdec2,?_sprintf+7
  3967  005276  EE20 F004          	lfsr	2,4
  3968  00527A  5058               	movf	color_display@m^0,w,c
  3969  00527C  26D9               	addwf	fsr2l,f,c
  3970  00527E  5059               	movf	(color_display@m+1)^0,w,c
  3971  005280  22DA               	addwfc	fsr2h,f,c
  3972  005282  CFDE F068          	movff	postinc2,?_sprintf+8
  3973  005286  CFDD F069          	movff	postdec2,?_sprintf+9
  3974  00528A  EE20 F006          	lfsr	2,6
  3975  00528E  5058               	movf	color_display@m^0,w,c
  3976  005290  26D9               	addwf	fsr2l,f,c
  3977  005292  5059               	movf	(color_display@m+1)^0,w,c
  3978  005294  22DA               	addwfc	fsr2h,f,c
  3979  005296  CFDE F06A          	movff	postinc2,?_sprintf+10
  3980  00529A  CFDD F06B          	movff	postdec2,?_sprintf+11
  3981  00529E  ECE8  F029         	call	_sprintf	;wreg free
  3982  0052A2                     
  3983                           ;color.c: 238:     sendStringSerial4(buf);
  3984  0052A2  0E79               	movlw	low color_display@buf
  3985  0052A4  6E02               	movwf	sendStringSerial4@string^0,c
  3986  0052A6  0E00               	movlw	high color_display@buf
  3987  0052A8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3988  0052AA  EC25  F02C         	call	_sendStringSerial4	;wreg free
  3989  0052AE  0012               	return		;funcret
  3990  0052B0                     __end_of_color_display:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _calibrate_white *****************
  3994 ;; Defined at:
  3995 ;;		line 258 in file "color.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  w               2   11[COMRAM] PTR struct white_card
  3998 ;;		 -> main@white(28), 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:        4 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 4
  4017 ;; This function calls:
  4018 ;;		_LED_B
  4019 ;;		_LED_C
  4020 ;;		_LED_G
  4021 ;;		_LED_OFF
  4022 ;;		_LED_R
  4023 ;;		_color_read_Blue
  4024 ;;		_color_read_Clear
  4025 ;;		_color_read_Green
  4026 ;;		_color_read_Red
  4027 ;;		_toggle_light
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;;		_test_function
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text9
  4035  003690                     __ptext9:
  4036                           	callstack 0
  4037  003690                     _calibrate_white:
  4038                           	callstack 25
  4039  003690                     
  4040                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  4041  003690  ECA0  F02C         	call	_LED_OFF	;wreg free
  4042  003694                     
  4043                           ;color.c: 261:     toggle_light(1,2);
  4044  003694  0E02               	movlw	2
  4045  003696  6E01               	movwf	toggle_light@toggletime^0,c
  4046  003698  0E01               	movlw	1
  4047  00369A  ECF2  F019         	call	_toggle_light
  4048  00369E                     
  4049                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4050  00369E  0E29               	movlw	41
  4051  0036A0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4052  0036A2  0E96               	movlw	150
  4053  0036A4  6E0E               	movwf	??_calibrate_white^0,c
  4054  0036A6  0E7F               	movlw	127
  4055  0036A8                     u5787:
  4056  0036A8  2EE8               	decfsz	wreg,f,c
  4057  0036AA  D7FE               	bra	u5787
  4058  0036AC  2E0E               	decfsz	??_calibrate_white^0,f,c
  4059  0036AE  D7FC               	bra	u5787
  4060  0036B0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4061  0036B2  D7FA               	bra	u5787
  4062  0036B4  F000               	nop	
  4063  0036B6                     
  4064                           ;color.c: 264:     LED_R();
  4065  0036B6  EC90  F02C         	call	_LED_R	;wreg free
  4066  0036BA                     
  4067                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  4068  0036BA  EC11  F02A         	call	_color_read_Red	;wreg free
  4069  0036BE  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  4070  0036C2  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  4071  0036C6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4072  0036CA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4073  0036CE  EC39  F02A         	call	_color_read_Green	;wreg free
  4074  0036D2  EE20 F002          	lfsr	2,2
  4075  0036D6  500C               	movf	calibrate_white@w^0,w,c
  4076  0036D8  26D9               	addwf	fsr2l,f,c
  4077  0036DA  500D               	movf	(calibrate_white@w+1)^0,w,c
  4078  0036DC  22DA               	addwfc	fsr2h,f,c
  4079  0036DE  C005  FFDE         	movff	?_color_read_Green,postinc2
  4080  0036E2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4081  0036E6  EC61  F02A         	call	_color_read_Blue	;wreg free
  4082  0036EA  EE20 F004          	lfsr	2,4
  4083  0036EE  500C               	movf	calibrate_white@w^0,w,c
  4084  0036F0  26D9               	addwf	fsr2l,f,c
  4085  0036F2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4086  0036F4  22DA               	addwfc	fsr2h,f,c
  4087  0036F6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4088  0036FA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4089  0036FE                     
  4090                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4091  0036FE  0E09               	movlw	9
  4092  003700  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4093  003702  0E1E               	movlw	30
  4094  003704  6E0E               	movwf	??_calibrate_white^0,c
  4095  003706  0EE4               	movlw	228
  4096  003708                     u5797:
  4097  003708  2EE8               	decfsz	wreg,f,c
  4098  00370A  D7FE               	bra	u5797
  4099  00370C  2E0E               	decfsz	??_calibrate_white^0,f,c
  4100  00370E  D7FC               	bra	u5797
  4101  003710  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4102  003712  D7FA               	bra	u5797
  4103  003714  D000               	nop2	
  4104  003716                     
  4105                           ;color.c: 268:     LED_G();
  4106  003716  ECB0  F02C         	call	_LED_G	;wreg free
  4107  00371A                     
  4108                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  4109  00371A  EC11  F02A         	call	_color_read_Red	;wreg free
  4110  00371E  EE20 F006          	lfsr	2,6
  4111  003722  500C               	movf	calibrate_white@w^0,w,c
  4112  003724  26D9               	addwf	fsr2l,f,c
  4113  003726  500D               	movf	(calibrate_white@w+1)^0,w,c
  4114  003728  22DA               	addwfc	fsr2h,f,c
  4115  00372A  C005  FFDE         	movff	?_color_read_Red,postinc2
  4116  00372E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4117  003732  EC39  F02A         	call	_color_read_Green	;wreg free
  4118  003736  EE20 F008          	lfsr	2,8
  4119  00373A  500C               	movf	calibrate_white@w^0,w,c
  4120  00373C  26D9               	addwf	fsr2l,f,c
  4121  00373E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4122  003740  22DA               	addwfc	fsr2h,f,c
  4123  003742  C005  FFDE         	movff	?_color_read_Green,postinc2
  4124  003746  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4125  00374A  EC61  F02A         	call	_color_read_Blue	;wreg free
  4126  00374E  EE20 F00A          	lfsr	2,10
  4127  003752  500C               	movf	calibrate_white@w^0,w,c
  4128  003754  26D9               	addwf	fsr2l,f,c
  4129  003756  500D               	movf	(calibrate_white@w+1)^0,w,c
  4130  003758  22DA               	addwfc	fsr2h,f,c
  4131  00375A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4132  00375E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4133  003762                     
  4134                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4135  003762  0E09               	movlw	9
  4136  003764  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4137  003766  0E1E               	movlw	30
  4138  003768  6E0E               	movwf	??_calibrate_white^0,c
  4139  00376A  0EE4               	movlw	228
  4140  00376C                     u5807:
  4141  00376C  2EE8               	decfsz	wreg,f,c
  4142  00376E  D7FE               	bra	u5807
  4143  003770  2E0E               	decfsz	??_calibrate_white^0,f,c
  4144  003772  D7FC               	bra	u5807
  4145  003774  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4146  003776  D7FA               	bra	u5807
  4147  003778  D000               	nop2	
  4148  00377A                     
  4149                           ;color.c: 273:     LED_B();
  4150  00377A  ECC0  F02C         	call	_LED_B	;wreg free
  4151  00377E                     
  4152                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  4153  00377E  EC11  F02A         	call	_color_read_Red	;wreg free
  4154  003782  EE20 F00C          	lfsr	2,12
  4155  003786  500C               	movf	calibrate_white@w^0,w,c
  4156  003788  26D9               	addwf	fsr2l,f,c
  4157  00378A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4158  00378C  22DA               	addwfc	fsr2h,f,c
  4159  00378E  C005  FFDE         	movff	?_color_read_Red,postinc2
  4160  003792  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4161  003796  EC39  F02A         	call	_color_read_Green	;wreg free
  4162  00379A  EE20 F00E          	lfsr	2,14
  4163  00379E  500C               	movf	calibrate_white@w^0,w,c
  4164  0037A0  26D9               	addwf	fsr2l,f,c
  4165  0037A2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4166  0037A4  22DA               	addwfc	fsr2h,f,c
  4167  0037A6  C005  FFDE         	movff	?_color_read_Green,postinc2
  4168  0037AA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4169  0037AE  EC61  F02A         	call	_color_read_Blue	;wreg free
  4170  0037B2  EE20 F010          	lfsr	2,16
  4171  0037B6  500C               	movf	calibrate_white@w^0,w,c
  4172  0037B8  26D9               	addwf	fsr2l,f,c
  4173  0037BA  500D               	movf	(calibrate_white@w+1)^0,w,c
  4174  0037BC  22DA               	addwfc	fsr2h,f,c
  4175  0037BE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4176  0037C2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4177  0037C6  EC89  F02A         	call	_color_read_Clear	;wreg free
  4178  0037CA  EE20 F01A          	lfsr	2,26
  4179  0037CE  500C               	movf	calibrate_white@w^0,w,c
  4180  0037D0  26D9               	addwf	fsr2l,f,c
  4181  0037D2  500D               	movf	(calibrate_white@w+1)^0,w,c
  4182  0037D4  22DA               	addwfc	fsr2h,f,c
  4183  0037D6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4184  0037DA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4185  0037DE                     
  4186                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4187  0037DE  0E09               	movlw	9
  4188  0037E0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4189  0037E2  0E1E               	movlw	30
  4190  0037E4  6E0E               	movwf	??_calibrate_white^0,c
  4191  0037E6  0EE4               	movlw	228
  4192  0037E8                     u5817:
  4193  0037E8  2EE8               	decfsz	wreg,f,c
  4194  0037EA  D7FE               	bra	u5817
  4195  0037EC  2E0E               	decfsz	??_calibrate_white^0,f,c
  4196  0037EE  D7FC               	bra	u5817
  4197  0037F0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4198  0037F2  D7FA               	bra	u5817
  4199  0037F4  D000               	nop2	
  4200  0037F6                     
  4201                           ;color.c: 277:     LED_C();
  4202  0037F6  ECD0  F02C         	call	_LED_C	;wreg free
  4203  0037FA                     
  4204                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4205  0037FA  EC11  F02A         	call	_color_read_Red	;wreg free
  4206  0037FE  EE20 F012          	lfsr	2,18
  4207  003802  500C               	movf	calibrate_white@w^0,w,c
  4208  003804  26D9               	addwf	fsr2l,f,c
  4209  003806  500D               	movf	(calibrate_white@w+1)^0,w,c
  4210  003808  22DA               	addwfc	fsr2h,f,c
  4211  00380A  C005  FFDE         	movff	?_color_read_Red,postinc2
  4212  00380E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4213  003812  EC39  F02A         	call	_color_read_Green	;wreg free
  4214  003816  EE20 F014          	lfsr	2,20
  4215  00381A  500C               	movf	calibrate_white@w^0,w,c
  4216  00381C  26D9               	addwf	fsr2l,f,c
  4217  00381E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4218  003820  22DA               	addwfc	fsr2h,f,c
  4219  003822  C005  FFDE         	movff	?_color_read_Green,postinc2
  4220  003826  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4221  00382A  EC61  F02A         	call	_color_read_Blue	;wreg free
  4222  00382E  EE20 F016          	lfsr	2,22
  4223  003832  500C               	movf	calibrate_white@w^0,w,c
  4224  003834  26D9               	addwf	fsr2l,f,c
  4225  003836  500D               	movf	(calibrate_white@w+1)^0,w,c
  4226  003838  22DA               	addwfc	fsr2h,f,c
  4227  00383A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4228  00383E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4229  003842  EC89  F02A         	call	_color_read_Clear	;wreg free
  4230  003846  EE20 F018          	lfsr	2,24
  4231  00384A  500C               	movf	calibrate_white@w^0,w,c
  4232  00384C  26D9               	addwf	fsr2l,f,c
  4233  00384E  500D               	movf	(calibrate_white@w+1)^0,w,c
  4234  003850  22DA               	addwfc	fsr2h,f,c
  4235  003852  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4236  003856  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4237  00385A                     
  4238                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4239  00385A  0E29               	movlw	41
  4240  00385C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4241  00385E  0E96               	movlw	150
  4242  003860  6E0E               	movwf	??_calibrate_white^0,c
  4243  003862  0E7F               	movlw	127
  4244  003864                     u5827:
  4245  003864  2EE8               	decfsz	wreg,f,c
  4246  003866  D7FE               	bra	u5827
  4247  003868  2E0E               	decfsz	??_calibrate_white^0,f,c
  4248  00386A  D7FC               	bra	u5827
  4249  00386C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4250  00386E  D7FA               	bra	u5827
  4251  003870  F000               	nop	
  4252  003872                     
  4253                           ;color.c: 281:     LED_OFF();
  4254  003872  ECA0  F02C         	call	_LED_OFF	;wreg free
  4255  003876                     
  4256                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4257  003876  0E29               	movlw	41
  4258  003878  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4259  00387A  0E96               	movlw	150
  4260  00387C  6E0E               	movwf	??_calibrate_white^0,c
  4261  00387E  0E7F               	movlw	127
  4262  003880                     u5837:
  4263  003880  2EE8               	decfsz	wreg,f,c
  4264  003882  D7FE               	bra	u5837
  4265  003884  2E0E               	decfsz	??_calibrate_white^0,f,c
  4266  003886  D7FC               	bra	u5837
  4267  003888  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4268  00388A  D7FA               	bra	u5837
  4269  00388C  F000               	nop	
  4270                           
  4271                           ;color.c: 283:     toggle_light(1,2);
  4272  00388E  0E02               	movlw	2
  4273  003890  6E01               	movwf	toggle_light@toggletime^0,c
  4274  003892  0E01               	movlw	1
  4275  003894  ECF2  F019         	call	_toggle_light
  4276  003898  0012               	return		;funcret
  4277  00389A                     __end_of_calibrate_white:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _color_read_Red *****************
  4281 ;; Defined at:
  4282 ;;		line 91 in file "color.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  tmp             2    9[COMRAM] unsigned int 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    4[COMRAM] unsigned int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;Total ram usage:        7 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 3
  4303 ;; This function calls:
  4304 ;;		_I2C_2_Master_Read
  4305 ;;		_I2C_2_Master_RepStart
  4306 ;;		_I2C_2_Master_Start
  4307 ;;		_I2C_2_Master_Stop
  4308 ;;		_I2C_2_Master_Write
  4309 ;; This function is called by:
  4310 ;;		_read_color
  4311 ;;		_calibrate_white
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text10
  4316  005422                     __ptext10:
  4317                           	callstack 0
  4318  005422                     _color_read_Red:
  4319                           	callstack 24
  4320  005422                     
  4321                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4322  005422  EC4B  F02D         	call	_I2C_2_Master_Start	;wreg free
  4323                           
  4324                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4325  005426  0E52               	movlw	82
  4326  005428  EC35  F02D         	call	_I2C_2_Master_Write
  4327                           
  4328                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4329  00542C  0EB6               	movlw	182
  4330  00542E  EC35  F02D         	call	_I2C_2_Master_Write
  4331                           
  4332                           ;color.c: 97:  I2C_2_Master_RepStart();
  4333  005432  EC41  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4334                           
  4335                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4336  005436  0E53               	movlw	83
  4337  005438  EC35  F02D         	call	_I2C_2_Master_Write
  4338                           
  4339                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4340  00543C  0E01               	movlw	1
  4341  00543E  ECF6  F02A         	call	_I2C_2_Master_Read
  4342  005442  6E07               	movwf	??_color_read_Red^0,c
  4343  005444  5007               	movf	??_color_read_Red^0,w,c
  4344  005446  6E0A               	movwf	color_read_Red@tmp^0,c
  4345  005448  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4346                           
  4347                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4348  00544A  0E00               	movlw	0
  4349  00544C  ECF6  F02A         	call	_I2C_2_Master_Read
  4350  005450  6E07               	movwf	??_color_read_Red^0,c
  4351  005452  5007               	movf	??_color_read_Red^0,w,c
  4352  005454  6E09               	movwf	(??_color_read_Red+2)^0,c
  4353  005456  6A08               	clrf	(??_color_read_Red+1)^0,c
  4354  005458  500A               	movf	color_read_Red@tmp^0,w,c
  4355  00545A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4356  00545C  6E0A               	movwf	color_read_Red@tmp^0,c
  4357  00545E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4358  005460  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4359  005462  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4360                           
  4361                           ;color.c: 101:  I2C_2_Master_Stop();
  4362  005464  EC46  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4363  005468                     
  4364                           ;color.c: 102:  return tmp;
  4365  005468  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4366  00546C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4367  005470  0012               	return		;funcret
  4368  005472                     __end_of_color_read_Red:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _color_read_Green *****************
  4372 ;; Defined at:
  4373 ;;		line 119 in file "color.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  tmp             2    9[COMRAM] unsigned int 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2    4[COMRAM] unsigned int 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;Total ram usage:        7 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 3
  4394 ;; This function calls:
  4395 ;;		_I2C_2_Master_Read
  4396 ;;		_I2C_2_Master_RepStart
  4397 ;;		_I2C_2_Master_Start
  4398 ;;		_I2C_2_Master_Stop
  4399 ;;		_I2C_2_Master_Write
  4400 ;; This function is called by:
  4401 ;;		_read_color
  4402 ;;		_calibrate_white
  4403 ;;		_distance_measure
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text11
  4408  005472                     __ptext11:
  4409                           	callstack 0
  4410  005472                     _color_read_Green:
  4411                           	callstack 24
  4412  005472                     
  4413                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4414  005472  EC4B  F02D         	call	_I2C_2_Master_Start	;wreg free
  4415                           
  4416                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4417  005476  0E52               	movlw	82
  4418  005478  EC35  F02D         	call	_I2C_2_Master_Write
  4419                           
  4420                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4421  00547C  0EB8               	movlw	184
  4422  00547E  EC35  F02D         	call	_I2C_2_Master_Write
  4423                           
  4424                           ;color.c: 125:  I2C_2_Master_RepStart();
  4425  005482  EC41  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4426                           
  4427                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4428  005486  0E53               	movlw	83
  4429  005488  EC35  F02D         	call	_I2C_2_Master_Write
  4430                           
  4431                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4432  00548C  0E01               	movlw	1
  4433  00548E  ECF6  F02A         	call	_I2C_2_Master_Read
  4434  005492  6E07               	movwf	??_color_read_Green^0,c
  4435  005494  5007               	movf	??_color_read_Green^0,w,c
  4436  005496  6E0A               	movwf	color_read_Green@tmp^0,c
  4437  005498  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4438                           
  4439                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4440  00549A  0E00               	movlw	0
  4441  00549C  ECF6  F02A         	call	_I2C_2_Master_Read
  4442  0054A0  6E07               	movwf	??_color_read_Green^0,c
  4443  0054A2  5007               	movf	??_color_read_Green^0,w,c
  4444  0054A4  6E09               	movwf	(??_color_read_Green+2)^0,c
  4445  0054A6  6A08               	clrf	(??_color_read_Green+1)^0,c
  4446  0054A8  500A               	movf	color_read_Green@tmp^0,w,c
  4447  0054AA  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4448  0054AC  6E0A               	movwf	color_read_Green@tmp^0,c
  4449  0054AE  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4450  0054B0  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4451  0054B2  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4452                           
  4453                           ;color.c: 129:  I2C_2_Master_Stop();
  4454  0054B4  EC46  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4455  0054B8                     
  4456                           ;color.c: 130:  return tmp;
  4457  0054B8  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4458  0054BC  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4459  0054C0  0012               	return		;funcret
  4460  0054C2                     __end_of_color_read_Green:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _color_read_Blue *****************
  4464 ;; Defined at:
  4465 ;;		line 105 in file "color.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  tmp             2    9[COMRAM] unsigned int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  2    4[COMRAM] unsigned int 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;Total ram usage:        7 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 3
  4486 ;; This function calls:
  4487 ;;		_I2C_2_Master_Read
  4488 ;;		_I2C_2_Master_RepStart
  4489 ;;		_I2C_2_Master_Start
  4490 ;;		_I2C_2_Master_Stop
  4491 ;;		_I2C_2_Master_Write
  4492 ;; This function is called by:
  4493 ;;		_read_color
  4494 ;;		_calibrate_white
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text12
  4499  0054C2                     __ptext12:
  4500                           	callstack 0
  4501  0054C2                     _color_read_Blue:
  4502                           	callstack 24
  4503  0054C2                     
  4504                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4505  0054C2  EC4B  F02D         	call	_I2C_2_Master_Start	;wreg free
  4506                           
  4507                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4508  0054C6  0E52               	movlw	82
  4509  0054C8  EC35  F02D         	call	_I2C_2_Master_Write
  4510                           
  4511                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4512  0054CC  0EBA               	movlw	186
  4513  0054CE  EC35  F02D         	call	_I2C_2_Master_Write
  4514                           
  4515                           ;color.c: 111:  I2C_2_Master_RepStart();
  4516  0054D2  EC41  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4517                           
  4518                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4519  0054D6  0E53               	movlw	83
  4520  0054D8  EC35  F02D         	call	_I2C_2_Master_Write
  4521                           
  4522                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4523  0054DC  0E01               	movlw	1
  4524  0054DE  ECF6  F02A         	call	_I2C_2_Master_Read
  4525  0054E2  6E07               	movwf	??_color_read_Blue^0,c
  4526  0054E4  5007               	movf	??_color_read_Blue^0,w,c
  4527  0054E6  6E0A               	movwf	color_read_Blue@tmp^0,c
  4528  0054E8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4529                           
  4530                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4531  0054EA  0E00               	movlw	0
  4532  0054EC  ECF6  F02A         	call	_I2C_2_Master_Read
  4533  0054F0  6E07               	movwf	??_color_read_Blue^0,c
  4534  0054F2  5007               	movf	??_color_read_Blue^0,w,c
  4535  0054F4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4536  0054F6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4537  0054F8  500A               	movf	color_read_Blue@tmp^0,w,c
  4538  0054FA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4539  0054FC  6E0A               	movwf	color_read_Blue@tmp^0,c
  4540  0054FE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4541  005500  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4542  005502  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4543                           
  4544                           ;color.c: 115:  I2C_2_Master_Stop();
  4545  005504  EC46  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4546  005508                     
  4547                           ;color.c: 116:  return tmp;
  4548  005508  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4549  00550C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4550  005510  0012               	return		;funcret
  4551  005512                     __end_of_color_read_Blue:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _LED_R *****************
  4555 ;; Defined at:
  4556 ;;		line 164 in file "color.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;Total ram usage:        2 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_color_data_collection
  4581 ;;		_calibrate_white
  4582 ;;		_detect_color
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text13
  4587  005920                     __ptext13:
  4588                           	callstack 0
  4589  005920                     _LED_R:
  4590                           	callstack 27
  4591  005920                     
  4592                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4593  005920  827F               	bsf	127,1,c	;volatile
  4594                           
  4595                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4596  005922  9E7E               	bcf	126,7,c	;volatile
  4597                           
  4598                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4599  005924  9879               	bcf	121,4,c	;volatile
  4600  005926                     
  4601                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4602  005926  0E11               	movlw	17
  4603  005928  6E02               	movwf	(??_LED_R+1)^0,c
  4604  00592A  0E3C               	movlw	60
  4605  00592C  6E01               	movwf	??_LED_R^0,c
  4606  00592E  0ECB               	movlw	203
  4607  005930                     u5847:
  4608  005930  2EE8               	decfsz	wreg,f,c
  4609  005932  D7FE               	bra	u5847
  4610  005934  2E01               	decfsz	??_LED_R^0,f,c
  4611  005936  D7FC               	bra	u5847
  4612  005938  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4613  00593A  D7FA               	bra	u5847
  4614  00593C  F000               	nop	
  4615  00593E  0012               	return		;funcret
  4616  005940                     __end_of_LED_R:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _LED_OFF *****************
  4620 ;; Defined at:
  4621 ;;		line 155 in file "color.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4639 ;;Total ram usage:        2 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 1
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_calibrate_white
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text14
  4650  005940                     __ptext14:
  4651                           	callstack 0
  4652  005940                     _LED_OFF:
  4653                           	callstack 27
  4654  005940                     
  4655                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4656  005940  927F               	bcf	127,1,c	;volatile
  4657                           
  4658                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4659  005942  9E7E               	bcf	126,7,c	;volatile
  4660                           
  4661                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4662  005944  9879               	bcf	121,4,c	;volatile
  4663  005946                     
  4664                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4665  005946  0E11               	movlw	17
  4666  005948  6E02               	movwf	(??_LED_OFF+1)^0,c
  4667  00594A  0E3C               	movlw	60
  4668  00594C  6E01               	movwf	??_LED_OFF^0,c
  4669  00594E  0ECB               	movlw	203
  4670  005950                     u5857:
  4671  005950  2EE8               	decfsz	wreg,f,c
  4672  005952  D7FE               	bra	u5857
  4673  005954  2E01               	decfsz	??_LED_OFF^0,f,c
  4674  005956  D7FC               	bra	u5857
  4675  005958  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4676  00595A  D7FA               	bra	u5857
  4677  00595C  F000               	nop	
  4678  00595E  0012               	return		;funcret
  4679  005960                     __end_of_LED_OFF:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _LED_G *****************
  4683 ;; Defined at:
  4684 ;;		line 191 in file "color.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4702 ;;Total ram usage:        2 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 1
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_color_data_collection
  4709 ;;		_calibrate_white
  4710 ;;		_detect_color
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text15
  4715  005960                     __ptext15:
  4716                           	callstack 0
  4717  005960                     _LED_G:
  4718                           	callstack 27
  4719  005960                     
  4720                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4721  005960  927F               	bcf	127,1,c	;volatile
  4722                           
  4723                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4724  005962  9E7E               	bcf	126,7,c	;volatile
  4725                           
  4726                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4727  005964  8879               	bsf	121,4,c	;volatile
  4728  005966                     
  4729                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4730  005966  0E11               	movlw	17
  4731  005968  6E02               	movwf	(??_LED_G+1)^0,c
  4732  00596A  0E3C               	movlw	60
  4733  00596C  6E01               	movwf	??_LED_G^0,c
  4734  00596E  0ECB               	movlw	203
  4735  005970                     u5867:
  4736  005970  2EE8               	decfsz	wreg,f,c
  4737  005972  D7FE               	bra	u5867
  4738  005974  2E01               	decfsz	??_LED_G^0,f,c
  4739  005976  D7FC               	bra	u5867
  4740  005978  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4741  00597A  D7FA               	bra	u5867
  4742  00597C  F000               	nop	
  4743  00597E  0012               	return		;funcret
  4744  005980                     __end_of_LED_G:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _LED_B *****************
  4748 ;; Defined at:
  4749 ;;		line 182 in file "color.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;Total ram usage:        2 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_color_data_collection
  4774 ;;		_calibrate_white
  4775 ;;		_detect_color
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text16
  4780  005980                     __ptext16:
  4781                           	callstack 0
  4782  005980                     _LED_B:
  4783                           	callstack 27
  4784  005980                     
  4785                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4786  005980  927F               	bcf	127,1,c	;volatile
  4787                           
  4788                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4789  005982  8E7E               	bsf	126,7,c	;volatile
  4790                           
  4791                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4792  005984  9879               	bcf	121,4,c	;volatile
  4793  005986                     
  4794                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4795  005986  0E11               	movlw	17
  4796  005988  6E02               	movwf	(??_LED_B+1)^0,c
  4797  00598A  0E3C               	movlw	60
  4798  00598C  6E01               	movwf	??_LED_B^0,c
  4799  00598E  0ECB               	movlw	203
  4800  005990                     u5877:
  4801  005990  2EE8               	decfsz	wreg,f,c
  4802  005992  D7FE               	bra	u5877
  4803  005994  2E01               	decfsz	??_LED_B^0,f,c
  4804  005996  D7FC               	bra	u5877
  4805  005998  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4806  00599A  D7FA               	bra	u5877
  4807  00599C  F000               	nop	
  4808  00599E  0012               	return		;funcret
  4809  0059A0                     __end_of_LED_B:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _amb_light_measure *****************
  4813 ;; Defined at:
  4814 ;;		line 370 in file "color.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4817 ;;		 -> main@rgb(8), main@amb(8), 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4820 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4821 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4822 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4823 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2   10[BANK0 ] unsigned int 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;Total ram usage:       14 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 5
  4840 ;; This function calls:
  4841 ;;		_LED_C
  4842 ;;		___fldiv
  4843 ;;		___xxtofl
  4844 ;;		_color_read_Clear
  4845 ;;		_lroundf
  4846 ;;		_toggle_light
  4847 ;; This function is called by:
  4848 ;;		_main
  4849 ;;		_test_function
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text17
  4854  004894                     __ptext17:
  4855                           	callstack 0
  4856  004894                     _amb_light_measure:
  4857                           	callstack 24
  4858  004894  0E00               	movlw	0
  4859  004896  0100               	movlb	0	; () banked
  4860  004898  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4861  00489A  0E00               	movlw	0
  4862  00489C  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4863  00489E  0E00               	movlw	0
  4864  0048A0  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4865  0048A2  0E00               	movlw	0
  4866  0048A4  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4867  0048A6  0E00               	movlw	0
  4868  0048A8  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4869  0048AA  0E00               	movlw	0
  4870  0048AC  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4871  0048AE                     
  4872                           ; BSR set to: 0
  4873                           ;color.c: 373:     toggle_light(2,2);
  4874  0048AE  0E02               	movlw	2
  4875  0048B0  6E01               	movwf	toggle_light@toggletime^0,c
  4876  0048B2  0E02               	movlw	2
  4877  0048B4  ECF2  F019         	call	_toggle_light
  4878  0048B8                     
  4879                           ;color.c: 374:     LED_C();
  4880  0048B8  ECD0  F02C         	call	_LED_C	;wreg free
  4881  0048BC                     
  4882                           ;color.c: 375:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4883  0048BC  0E29               	movlw	41
  4884  0048BE  0100               	movlb	0	; () banked
  4885  0048C0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4886  0048C2  0E96               	movlw	150
  4887  0048C4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4888  0048C6  0E7F               	movlw	127
  4889  0048C8                     u5887:
  4890  0048C8  2EE8               	decfsz	wreg,f,c
  4891  0048CA  D7FE               	bra	u5887
  4892  0048CC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4893  0048CE  D7FC               	bra	u5887
  4894  0048D0  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4895  0048D2  D7FA               	bra	u5887
  4896  0048D4                     
  4897                           ;color.c: 377:     CC_amb_1 = color_read_Clear();
  4898  0048D4  EC89  F02A         	call	_color_read_Clear	;wreg free
  4899  0048D8  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4900  0048DC  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4901  0048E0                     
  4902                           ;color.c: 378:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4903  0048E0  0E11               	movlw	17
  4904  0048E2  0100               	movlb	0	; () banked
  4905  0048E4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4906  0048E6  0E3C               	movlw	60
  4907  0048E8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4908  0048EA  0ECB               	movlw	203
  4909  0048EC                     u5897:
  4910  0048EC  2EE8               	decfsz	wreg,f,c
  4911  0048EE  D7FE               	bra	u5897
  4912  0048F0  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4913  0048F2  D7FC               	bra	u5897
  4914  0048F4  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4915  0048F6  D7FA               	bra	u5897
  4916  0048F8                     
  4917                           ;color.c: 380:     CC_amb_2 = color_read_Clear();
  4918  0048F8  EC89  F02A         	call	_color_read_Clear	;wreg free
  4919  0048FC  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4920  004900  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4921  004904                     
  4922                           ;color.c: 381:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4923  004904  0E11               	movlw	17
  4924  004906  0100               	movlb	0	; () banked
  4925  004908  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4926  00490A  0E3C               	movlw	60
  4927  00490C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4928  00490E  0ECB               	movlw	203
  4929  004910                     u5907:
  4930  004910  2EE8               	decfsz	wreg,f,c
  4931  004912  D7FE               	bra	u5907
  4932  004914  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4933  004916  D7FC               	bra	u5907
  4934  004918  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4935  00491A  D7FA               	bra	u5907
  4936  00491C                     
  4937                           ;color.c: 383:     CC_amb_3 = color_read_Clear();
  4938  00491C  EC89  F02A         	call	_color_read_Clear	;wreg free
  4939  004920  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4940  004924  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4941  004928                     
  4942                           ;color.c: 384:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4943  004928  0E11               	movlw	17
  4944  00492A  0100               	movlb	0	; () banked
  4945  00492C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4946  00492E  0E3C               	movlw	60
  4947  004930  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4948  004932  0ECB               	movlw	203
  4949  004934                     u5917:
  4950  004934  2EE8               	decfsz	wreg,f,c
  4951  004936  D7FE               	bra	u5917
  4952  004938  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4953  00493A  D7FC               	bra	u5917
  4954  00493C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4955  00493E  D7FA               	bra	u5917
  4956  004940                     
  4957                           ;color.c: 386:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4958  004940  0100               	movlb	0	; () banked
  4959  004942  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4960  004944  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4961  004946  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4962  004948  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4963  00494A  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4964  00494C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4965  00494E  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4966  004950  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4967  004952  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4968  004954  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4969  004956  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4970  00495A  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4971  00495E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4972  004960  6A04               	clrf	(___xxtofl@val+3)^0,c
  4973  004962  0E00               	movlw	0
  4974  004964  ECED  F01E         	call	___xxtofl
  4975  004968  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4976  00496C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4977  004970  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4978  004974  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4979  004978  0E00               	movlw	0
  4980  00497A  6E13               	movwf	___fldiv@a^0,c
  4981  00497C  0E00               	movlw	0
  4982  00497E  6E14               	movwf	(___fldiv@a+1)^0,c
  4983  004980  0E40               	movlw	64
  4984  004982  6E15               	movwf	(___fldiv@a+2)^0,c
  4985  004984  0E40               	movlw	64
  4986  004986  6E16               	movwf	(___fldiv@a+3)^0,c
  4987  004988  ECE6  F013         	call	___fldiv	;wreg free
  4988  00498C  C00F  F066         	movff	?___fldiv,lroundf@x
  4989  004990  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4990  004994  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4991  004998  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4992  00499C  ECB7  F02B         	call	_lroundf	;wreg free
  4993  0049A0  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4994  0049A4  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4995  0049A8                     
  4996                           ;color.c: 388:     toggle_light(2,2);
  4997  0049A8  0E02               	movlw	2
  4998  0049AA  6E01               	movwf	toggle_light@toggletime^0,c
  4999  0049AC  0E02               	movlw	2
  5000  0049AE  ECF2  F019         	call	_toggle_light
  5001  0049B2                     
  5002                           ;color.c: 390:     return CC_amb_ave;
  5003  0049B2  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  5004  0049B6  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  5005  0049BA  0012               	return		;funcret
  5006  0049BC                     __end_of_amb_light_measure:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _lroundf *****************
  5010 ;; Defined at:
  5011 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  x               4    6[BANK0 ] float 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4    6[BANK0 ] long 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5028 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;Total ram usage:        4 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 4
  5032 ;; This function calls:
  5033 ;;		___fltol
  5034 ;;		_roundf
  5035 ;; This function is called by:
  5036 ;;		_detect_color
  5037 ;;		_amb_light_measure
  5038 ;;		_distance_measure
  5039 ;;		_check_color_reading
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text18
  5044  00576E                     __ptext18:
  5045                           	callstack 0
  5046  00576E                     _lroundf:
  5047                           	callstack 24
  5048  00576E  C066  F041         	movff	lroundf@x,roundf@x
  5049  005772  C067  F042         	movff	lroundf@x+1,roundf@x+1
  5050  005776  C068  F043         	movff	lroundf@x+2,roundf@x+2
  5051  00577A  C069  F044         	movff	lroundf@x+3,roundf@x+3
  5052  00577E  EC0F  F012         	call	_roundf	;wreg free
  5053  005782  C041  F05B         	movff	?_roundf,___fltol@f1
  5054  005786  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  5055  00578A  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  5056  00578E  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  5057  005792  ECDE  F024         	call	___fltol	;wreg free
  5058  005796  C05B  F066         	movff	?___fltol,?_lroundf
  5059  00579A  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  5060  00579E  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  5061  0057A2  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  5062  0057A6  0012               	return		;funcret
  5063  0057A8                     __end_of_lroundf:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _roundf *****************
  5067 ;; Defined at:
  5068 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  x               4   64[COMRAM] float 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  y               4   86[COMRAM] float 
  5073 ;;  u               4   82[COMRAM] struct .
  5074 ;;  e               2   76[COMRAM] int 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  4   64[COMRAM] float 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;Total ram usage:       26 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 3
  5091 ;; This function calls:
  5092 ;;		___fladd
  5093 ;;		___flge
  5094 ;;		___flmul
  5095 ;;		___flneg
  5096 ;;		___flsub
  5097 ;; This function is called by:
  5098 ;;		_lroundf
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text19
  5103  00241E                     __ptext19:
  5104                           	callstack 0
  5105  00241E                     _roundf:
  5106                           	callstack 24
  5107  00241E  C150  F053         	movff	roundf@F527,roundf@u
  5108  002422  C151  F054         	movff	roundf@F527+1,roundf@u+1
  5109  002426  C152  F055         	movff	roundf@F527+2,roundf@u+2
  5110  00242A  C153  F056         	movff	roundf@F527+3,roundf@u+3
  5111  00242E  C041  F053         	movff	roundf@x,roundf@u
  5112  002432  C042  F054         	movff	roundf@x+1,roundf@u+1
  5113  002436  C043  F055         	movff	roundf@x+2,roundf@u+2
  5114  00243A  C044  F056         	movff	roundf@x+3,roundf@u+3
  5115  00243E  C053  F045         	movff	roundf@u,??_roundf
  5116  002442  C054  F046         	movff	roundf@u+1,??_roundf+1
  5117  002446  C055  F047         	movff	roundf@u+2,??_roundf+2
  5118  00244A  C056  F048         	movff	roundf@u+3,??_roundf+3
  5119  00244E  0E18               	movlw	24
  5120  002450  EF2F  F012         	goto	u4210
  5121  002454                     u4215:
  5122  002454  90D8               	bcf	status,0,c
  5123  002456  3248               	rrcf	(??_roundf+3)^0,f,c
  5124  002458  3247               	rrcf	(??_roundf+2)^0,f,c
  5125  00245A  3246               	rrcf	(??_roundf+1)^0,f,c
  5126  00245C  3245               	rrcf	??_roundf^0,f,c
  5127  00245E                     u4210:
  5128  00245E  2EE8               	decfsz	wreg,f,c
  5129  002460  EF2A  F012         	goto	u4215
  5130  002464  5045               	movf	??_roundf^0,w,c
  5131  002466  6E4D               	movwf	roundf@e^0,c
  5132  002468  6A4E               	clrf	(roundf@e+1)^0,c
  5133  00246A  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5134  00246C  EF41  F012         	goto	u4221
  5135  002470  504E               	movf	(roundf@e+1)^0,w,c
  5136  002472  E109               	bnz	u4220
  5137  002474  0E96               	movlw	150
  5138  002476  5C4D               	subwf	roundf@e^0,w,c
  5139  002478  A0D8               	btfss	status,0,c
  5140  00247A  EF41  F012         	goto	u4221
  5141  00247E  EF43  F012         	goto	u4220
  5142  002482                     u4221:
  5143  002482  EF4D  F012         	goto	l4447
  5144  002486                     u4220:
  5145  002486  C041  F041         	movff	roundf@x,?_roundf
  5146  00248A  C042  F042         	movff	roundf@x+1,?_roundf+1
  5147  00248E  C043  F043         	movff	roundf@x+2,?_roundf+2
  5148  002492  C044  F044         	movff	roundf@x+3,?_roundf+3
  5149  002496  EFE5  F013         	goto	l1566
  5150  00249A                     l4447:
  5151  00249A  C053  F045         	movff	roundf@u,??_roundf
  5152  00249E  C054  F046         	movff	roundf@u+1,??_roundf+1
  5153  0024A2  C055  F047         	movff	roundf@u+2,??_roundf+2
  5154  0024A6  C056  F048         	movff	roundf@u+3,??_roundf+3
  5155  0024AA  0E20               	movlw	32
  5156  0024AC  EF5D  F012         	goto	u4230
  5157  0024B0                     u4235:
  5158  0024B0  90D8               	bcf	status,0,c
  5159  0024B2  3248               	rrcf	(??_roundf+3)^0,f,c
  5160  0024B4  3247               	rrcf	(??_roundf+2)^0,f,c
  5161  0024B6  3246               	rrcf	(??_roundf+1)^0,f,c
  5162  0024B8  3245               	rrcf	??_roundf^0,f,c
  5163  0024BA                     u4230:
  5164  0024BA  2EE8               	decfsz	wreg,f,c
  5165  0024BC  EF58  F012         	goto	u4235
  5166  0024C0  5045               	movf	??_roundf^0,w,c
  5167  0024C2  1046               	iorwf	(??_roundf+1)^0,w,c
  5168  0024C4  1047               	iorwf	(??_roundf+2)^0,w,c
  5169  0024C6  1048               	iorwf	(??_roundf+3)^0,w,c
  5170  0024C8  B4D8               	btfsc	status,2,c
  5171  0024CA  EF69  F012         	goto	u4241
  5172  0024CE  EF6B  F012         	goto	u4240
  5173  0024D2                     u4241:
  5174  0024D2  EF7D  F012         	goto	l4451
  5175  0024D6                     u4240:
  5176  0024D6  C041  F001         	movff	roundf@x,___flneg@f1
  5177  0024DA  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5178  0024DE  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5179  0024E2  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5180  0024E6  ECD4  F02B         	call	___flneg	;wreg free
  5181  0024EA  C001  F041         	movff	?___flneg,roundf@x
  5182  0024EE  C002  F042         	movff	?___flneg+1,roundf@x+1
  5183  0024F2  C003  F043         	movff	?___flneg+2,roundf@x+2
  5184  0024F6  C004  F044         	movff	?___flneg+3,roundf@x+3
  5185  0024FA                     l4451:
  5186  0024FA  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5187  0024FC  EF8B  F012         	goto	u4250
  5188  002500  504E               	movf	(roundf@e+1)^0,w,c
  5189  002502  E107               	bnz	u4251
  5190  002504  0E7E               	movlw	126
  5191  002506  5C4D               	subwf	roundf@e^0,w,c
  5192  002508  B0D8               	btfsc	status,0,c
  5193  00250A  EF89  F012         	goto	u4251
  5194  00250E  EF8B  F012         	goto	u4250
  5195  002512                     u4251:
  5196  002512  EFA7  F012         	goto	l4457
  5197  002516                     u4250:
  5198  002516  C053  F028         	movff	roundf@u,___flmul@b
  5199  00251A  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5200  00251E  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5201  002522  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5202  002526  0E00               	movlw	0
  5203  002528  6E2C               	movwf	___flmul@a^0,c
  5204  00252A  0E00               	movlw	0
  5205  00252C  6E2D               	movwf	(___flmul@a+1)^0,c
  5206  00252E  0E00               	movlw	0
  5207  002530  6E2E               	movwf	(___flmul@a+2)^0,c
  5208  002532  0E00               	movlw	0
  5209  002534  6E2F               	movwf	(___flmul@a+3)^0,c
  5210  002536  ECFA  F00F         	call	___flmul	;wreg free
  5211  00253A  C028  F041         	movff	?___flmul,?_roundf
  5212  00253E  C029  F042         	movff	?___flmul+1,?_roundf+1
  5213  002542  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5214  002546  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5215  00254A  EFE5  F013         	goto	l1566
  5216  00254E                     l4457:
  5217  00254E  0E00               	movlw	0
  5218  002550  6E05               	movwf	___fladd@a^0,c
  5219  002552  0E00               	movlw	0
  5220  002554  6E06               	movwf	(___fladd@a+1)^0,c
  5221  002556  0E00               	movlw	0
  5222  002558  6E07               	movwf	(___fladd@a+2)^0,c
  5223  00255A  0E4B               	movlw	75
  5224  00255C  6E08               	movwf	(___fladd@a+3)^0,c
  5225  00255E  C041  F001         	movff	roundf@x,___fladd@b
  5226  002562  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5227  002566  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5228  00256A  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5229  00256E  EC9A  F00D         	call	___fladd	;wreg free
  5230  002572  C001  F04F         	movff	?___fladd,_roundf$3244
  5231  002576  C002  F050         	movff	?___fladd+1,_roundf$3244+1
  5232  00257A  C003  F051         	movff	?___fladd+2,_roundf$3244+2
  5233  00257E  C004  F052         	movff	?___fladd+3,_roundf$3244+3
  5234  002582  0E00               	movlw	0
  5235  002584  6E05               	movwf	___fladd@a^0,c
  5236  002586  0E00               	movlw	0
  5237  002588  6E06               	movwf	(___fladd@a+1)^0,c
  5238  00258A  0E00               	movlw	0
  5239  00258C  6E07               	movwf	(___fladd@a+2)^0,c
  5240  00258E  0ECB               	movlw	203
  5241  002590  6E08               	movwf	(___fladd@a+3)^0,c
  5242  002592  C04F  F001         	movff	_roundf$3244,___fladd@b
  5243  002596  C050  F002         	movff	_roundf$3244+1,___fladd@b+1
  5244  00259A  C051  F003         	movff	_roundf$3244+2,___fladd@b+2
  5245  00259E  C052  F004         	movff	_roundf$3244+3,___fladd@b+3
  5246  0025A2  EC9A  F00D         	call	___fladd	;wreg free
  5247  0025A6  C001  F049         	movff	?___fladd,_roundf$3245
  5248  0025AA  C002  F04A         	movff	?___fladd+1,_roundf$3245+1
  5249  0025AE  C003  F04B         	movff	?___fladd+2,_roundf$3245+2
  5250  0025B2  C004  F04C         	movff	?___fladd+3,_roundf$3245+3
  5251  0025B6  C049  F011         	movff	_roundf$3245,___flsub@b
  5252  0025BA  C04A  F012         	movff	_roundf$3245+1,___flsub@b+1
  5253  0025BE  C04B  F013         	movff	_roundf$3245+2,___flsub@b+2
  5254  0025C2  C04C  F014         	movff	_roundf$3245+3,___flsub@b+3
  5255  0025C6  C041  F015         	movff	roundf@x,___flsub@a
  5256  0025CA  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5257  0025CE  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5258  0025D2  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5259  0025D6  ECB1  F02A         	call	___flsub	;wreg free
  5260  0025DA  C011  F057         	movff	?___flsub,roundf@y
  5261  0025DE  C012  F058         	movff	?___flsub+1,roundf@y+1
  5262  0025E2  C013  F059         	movff	?___flsub+2,roundf@y+2
  5263  0025E6  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5264  0025EA  0E00               	movlw	0
  5265  0025EC  6E01               	movwf	___flge@ff1^0,c
  5266  0025EE  0E00               	movlw	0
  5267  0025F0  6E02               	movwf	(___flge@ff1+1)^0,c
  5268  0025F2  0E00               	movlw	0
  5269  0025F4  6E03               	movwf	(___flge@ff1+2)^0,c
  5270  0025F6  0E3F               	movlw	63
  5271  0025F8  6E04               	movwf	(___flge@ff1+3)^0,c
  5272  0025FA  C057  F005         	movff	roundf@y,___flge@ff2
  5273  0025FE  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5274  002602  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5275  002606  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5276  00260A  EC62  F025         	call	___flge	;wreg free
  5277  00260E  B0D8               	btfsc	status,0,c
  5278  002610  EF0C  F013         	goto	u4261
  5279  002614  EF0E  F013         	goto	u4260
  5280  002618                     u4261:
  5281  002618  EF44  F013         	goto	l4461
  5282  00261C                     u4260:
  5283  00261C  C041  F005         	movff	roundf@x,___fladd@a
  5284  002620  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5285  002624  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5286  002628  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5287  00262C  C057  F001         	movff	roundf@y,___fladd@b
  5288  002630  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5289  002634  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5290  002638  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5291  00263C  EC9A  F00D         	call	___fladd	;wreg free
  5292  002640  C001  F04F         	movff	?___fladd,_roundf$3244
  5293  002644  C002  F050         	movff	?___fladd+1,_roundf$3244+1
  5294  002648  C003  F051         	movff	?___fladd+2,_roundf$3244+2
  5295  00264C  C004  F052         	movff	?___fladd+3,_roundf$3244+3
  5296  002650  C04F  F001         	movff	_roundf$3244,___fladd@b
  5297  002654  C050  F002         	movff	_roundf$3244+1,___fladd@b+1
  5298  002658  C051  F003         	movff	_roundf$3244+2,___fladd@b+2
  5299  00265C  C052  F004         	movff	_roundf$3244+3,___fladd@b+3
  5300  002660  0E00               	movlw	0
  5301  002662  6E05               	movwf	___fladd@a^0,c
  5302  002664  0E00               	movlw	0
  5303  002666  6E06               	movwf	(___fladd@a+1)^0,c
  5304  002668  0E80               	movlw	128
  5305  00266A  6E07               	movwf	(___fladd@a+2)^0,c
  5306  00266C  0EBF               	movlw	191
  5307  00266E  6E08               	movwf	(___fladd@a+3)^0,c
  5308  002670  EC9A  F00D         	call	___fladd	;wreg free
  5309  002674  C001  F057         	movff	?___fladd,roundf@y
  5310  002678  C002  F058         	movff	?___fladd+1,roundf@y+1
  5311  00267C  C003  F059         	movff	?___fladd+2,roundf@y+2
  5312  002680  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5313  002684  EFAD  F013         	goto	l4467
  5314  002688                     l4461:
  5315  002688  0E00               	movlw	0
  5316  00268A  6E01               	movwf	___flge@ff1^0,c
  5317  00268C  0E00               	movlw	0
  5318  00268E  6E02               	movwf	(___flge@ff1+1)^0,c
  5319  002690  0E00               	movlw	0
  5320  002692  6E03               	movwf	(___flge@ff1+2)^0,c
  5321  002694  0EBF               	movlw	191
  5322  002696  6E04               	movwf	(___flge@ff1+3)^0,c
  5323  002698  C057  F005         	movff	roundf@y,___flge@ff2
  5324  00269C  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5325  0026A0  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5326  0026A4  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5327  0026A8  EC62  F025         	call	___flge	;wreg free
  5328  0026AC  A0D8               	btfss	status,0,c
  5329  0026AE  EF5B  F013         	goto	u4271
  5330  0026B2  EF5D  F013         	goto	u4270
  5331  0026B6                     u4271:
  5332  0026B6  EF93  F013         	goto	l4465
  5333  0026BA                     u4270:
  5334  0026BA  C041  F005         	movff	roundf@x,___fladd@a
  5335  0026BE  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5336  0026C2  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5337  0026C6  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5338  0026CA  C057  F001         	movff	roundf@y,___fladd@b
  5339  0026CE  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5340  0026D2  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5341  0026D6  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5342  0026DA  EC9A  F00D         	call	___fladd	;wreg free
  5343  0026DE  C001  F04F         	movff	?___fladd,_roundf$3244
  5344  0026E2  C002  F050         	movff	?___fladd+1,_roundf$3244+1
  5345  0026E6  C003  F051         	movff	?___fladd+2,_roundf$3244+2
  5346  0026EA  C004  F052         	movff	?___fladd+3,_roundf$3244+3
  5347  0026EE  C04F  F001         	movff	_roundf$3244,___fladd@b
  5348  0026F2  C050  F002         	movff	_roundf$3244+1,___fladd@b+1
  5349  0026F6  C051  F003         	movff	_roundf$3244+2,___fladd@b+2
  5350  0026FA  C052  F004         	movff	_roundf$3244+3,___fladd@b+3
  5351  0026FE  0E00               	movlw	0
  5352  002700  6E05               	movwf	___fladd@a^0,c
  5353  002702  0E00               	movlw	0
  5354  002704  6E06               	movwf	(___fladd@a+1)^0,c
  5355  002706  0E80               	movlw	128
  5356  002708  6E07               	movwf	(___fladd@a+2)^0,c
  5357  00270A  0E3F               	movlw	63
  5358  00270C  6E08               	movwf	(___fladd@a+3)^0,c
  5359  00270E  EC9A  F00D         	call	___fladd	;wreg free
  5360  002712  C001  F057         	movff	?___fladd,roundf@y
  5361  002716  C002  F058         	movff	?___fladd+1,roundf@y+1
  5362  00271A  C003  F059         	movff	?___fladd+2,roundf@y+2
  5363  00271E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5364  002722  EFAD  F013         	goto	l4467
  5365  002726                     l4465:
  5366  002726  C057  F001         	movff	roundf@y,___fladd@b
  5367  00272A  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5368  00272E  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5369  002732  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5370  002736  C041  F005         	movff	roundf@x,___fladd@a
  5371  00273A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5372  00273E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5373  002742  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5374  002746  EC9A  F00D         	call	___fladd	;wreg free
  5375  00274A  C001  F057         	movff	?___fladd,roundf@y
  5376  00274E  C002  F058         	movff	?___fladd+1,roundf@y+1
  5377  002752  C003  F059         	movff	?___fladd+2,roundf@y+2
  5378  002756  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5379  00275A                     l4467:
  5380  00275A  C053  F045         	movff	roundf@u,??_roundf
  5381  00275E  C054  F046         	movff	roundf@u+1,??_roundf+1
  5382  002762  C055  F047         	movff	roundf@u+2,??_roundf+2
  5383  002766  C056  F048         	movff	roundf@u+3,??_roundf+3
  5384  00276A  0E20               	movlw	32
  5385  00276C  EFBD  F013         	goto	u4280
  5386  002770                     u4285:
  5387  002770  90D8               	bcf	status,0,c
  5388  002772  3248               	rrcf	(??_roundf+3)^0,f,c
  5389  002774  3247               	rrcf	(??_roundf+2)^0,f,c
  5390  002776  3246               	rrcf	(??_roundf+1)^0,f,c
  5391  002778  3245               	rrcf	??_roundf^0,f,c
  5392  00277A                     u4280:
  5393  00277A  2EE8               	decfsz	wreg,f,c
  5394  00277C  EFB8  F013         	goto	u4285
  5395  002780  5045               	movf	??_roundf^0,w,c
  5396  002782  1046               	iorwf	(??_roundf+1)^0,w,c
  5397  002784  1047               	iorwf	(??_roundf+2)^0,w,c
  5398  002786  1048               	iorwf	(??_roundf+3)^0,w,c
  5399  002788  B4D8               	btfsc	status,2,c
  5400  00278A  EFC9  F013         	goto	u4291
  5401  00278E  EFCB  F013         	goto	u4290
  5402  002792                     u4291:
  5403  002792  EFDD  F013         	goto	l4471
  5404  002796                     u4290:
  5405  002796  C057  F001         	movff	roundf@y,___flneg@f1
  5406  00279A  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5407  00279E  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5408  0027A2  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5409  0027A6  ECD4  F02B         	call	___flneg	;wreg free
  5410  0027AA  C001  F057         	movff	?___flneg,roundf@y
  5411  0027AE  C002  F058         	movff	?___flneg+1,roundf@y+1
  5412  0027B2  C003  F059         	movff	?___flneg+2,roundf@y+2
  5413  0027B6  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5414  0027BA                     l4471:
  5415  0027BA  C057  F041         	movff	roundf@y,?_roundf
  5416  0027BE  C058  F042         	movff	roundf@y+1,?_roundf+1
  5417  0027C2  C059  F043         	movff	roundf@y+2,?_roundf+2
  5418  0027C6  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5419  0027CA                     l1566:
  5420  0027CA  0012               	return		;funcret
  5421  0027CC                     __end_of_roundf:
  5422                           	callstack 0
  5423                           
  5424 ;; *************** function ___flsub *****************
  5425 ;; Defined at:
  5426 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  b               4   16[COMRAM] float 
  5429 ;;  a               4   20[COMRAM] float 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  4   16[COMRAM] float 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5441 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;Total ram usage:        8 bytes
  5446 ;; Hardware stack levels used: 1
  5447 ;; Hardware stack levels required when called: 2
  5448 ;; This function calls:
  5449 ;;		___fladd
  5450 ;; This function is called by:
  5451 ;;		_roundf
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text20
  5456  005562                     __ptext20:
  5457                           	callstack 0
  5458  005562                     ___flsub:
  5459                           	callstack 24
  5460  005562  0E00               	movlw	0
  5461  005564  1A15               	xorwf	___flsub@a^0,f,c
  5462  005566  0E00               	movlw	0
  5463  005568  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5464  00556A  0E00               	movlw	0
  5465  00556C  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5466  00556E  0E80               	movlw	128
  5467  005570  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5468  005572  C011  F001         	movff	___flsub@b,___fladd@b
  5469  005576  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5470  00557A  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5471  00557E  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5472  005582  C015  F005         	movff	___flsub@a,___fladd@a
  5473  005586  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5474  00558A  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5475  00558E  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5476  005592  EC9A  F00D         	call	___fladd	;wreg free
  5477  005596  C001  F011         	movff	?___fladd,?___flsub
  5478  00559A  C002  F012         	movff	?___fladd+1,?___flsub+1
  5479  00559E  C003  F013         	movff	?___fladd+2,?___flsub+2
  5480  0055A2  C004  F014         	movff	?___fladd+3,?___flsub+3
  5481  0055A6  0012               	return		;funcret
  5482  0055A8                     __end_of___flsub:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function ___fladd *****************
  5486 ;; Defined at:
  5487 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  b               4    0[COMRAM] float 
  5490 ;;  a               4    4[COMRAM] float 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  grs             1   15[COMRAM] unsigned char 
  5493 ;;  bexp            1   14[COMRAM] unsigned char 
  5494 ;;  aexp            1   13[COMRAM] unsigned char 
  5495 ;;  signs           1   12[COMRAM] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4    0[COMRAM] unsigned char 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5505 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;Total ram usage:       16 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		___flsub
  5516 ;;		_roundf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text21
  5521  001B34                     __ptext21:
  5522                           	callstack 0
  5523  001B34                     ___fladd:
  5524                           	callstack 24
  5525  001B34  5004               	movf	(___fladd@b+3)^0,w,c
  5526  001B36  0B80               	andlw	128
  5527  001B38  6E0D               	movwf	___fladd@signs^0,c
  5528  001B3A  5004               	movf	(___fladd@b+3)^0,w,c
  5529  001B3C  2404               	addwf	(___fladd@b+3)^0,w,c
  5530  001B3E  6E0F               	movwf	___fladd@bexp^0,c
  5531  001B40  AE03               	btfss	(___fladd@b+2)^0,7,c
  5532  001B42  EFA5  F00D         	goto	u3351
  5533  001B46  EFA7  F00D         	goto	u3350
  5534  001B4A                     u3351:
  5535  001B4A  EFA8  F00D         	goto	l3867
  5536  001B4E                     u3350:
  5537  001B4E  800F               	bsf	___fladd@bexp^0,0,c
  5538  001B50                     l3867:
  5539  001B50  500F               	movf	___fladd@bexp^0,w,c
  5540  001B52  B4D8               	btfsc	status,2,c
  5541  001B54  EFAE  F00D         	goto	u3361
  5542  001B58  EFB0  F00D         	goto	u3360
  5543  001B5C                     u3361:
  5544  001B5C  EFC5  F00D         	goto	l3877
  5545  001B60                     u3360:
  5546  001B60  280F               	incf	___fladd@bexp^0,w,c
  5547  001B62  A4D8               	btfss	status,2,c
  5548  001B64  EFB6  F00D         	goto	u3371
  5549  001B68  EFB8  F00D         	goto	u3370
  5550  001B6C                     u3371:
  5551  001B6C  EFC0  F00D         	goto	l3873
  5552  001B70                     u3370:
  5553  001B70  0E00               	movlw	0
  5554  001B72  6E01               	movwf	___fladd@b^0,c
  5555  001B74  0E00               	movlw	0
  5556  001B76  6E02               	movwf	(___fladd@b+1)^0,c
  5557  001B78  0E00               	movlw	0
  5558  001B7A  6E03               	movwf	(___fladd@b+2)^0,c
  5559  001B7C  0E00               	movlw	0
  5560  001B7E  6E04               	movwf	(___fladd@b+3)^0,c
  5561  001B80                     l3873:
  5562  001B80  8E03               	bsf	(___fladd@b+2)^0,7,c
  5563  001B82  0E00               	movlw	0
  5564  001B84  6E04               	movwf	(___fladd@b+3)^0,c
  5565  001B86  EFCD  F00D         	goto	l3879
  5566  001B8A                     l3877:
  5567  001B8A  0E00               	movlw	0
  5568  001B8C  6E01               	movwf	___fladd@b^0,c
  5569  001B8E  0E00               	movlw	0
  5570  001B90  6E02               	movwf	(___fladd@b+1)^0,c
  5571  001B92  0E00               	movlw	0
  5572  001B94  6E03               	movwf	(___fladd@b+2)^0,c
  5573  001B96  0E00               	movlw	0
  5574  001B98  6E04               	movwf	(___fladd@b+3)^0,c
  5575  001B9A                     l3879:
  5576  001B9A  5008               	movf	(___fladd@a+3)^0,w,c
  5577  001B9C  0B80               	andlw	128
  5578  001B9E  6E0E               	movwf	___fladd@aexp^0,c
  5579  001BA0  500D               	movf	___fladd@signs^0,w,c
  5580  001BA2  180E               	xorwf	___fladd@aexp^0,w,c
  5581  001BA4  B4D8               	btfsc	status,2,c
  5582  001BA6  EFD7  F00D         	goto	u3381
  5583  001BAA  EFD9  F00D         	goto	u3380
  5584  001BAE                     u3381:
  5585  001BAE  EFDA  F00D         	goto	l3885
  5586  001BB2                     u3380:
  5587  001BB2  8C0D               	bsf	___fladd@signs^0,6,c
  5588  001BB4                     l3885:
  5589  001BB4  5008               	movf	(___fladd@a+3)^0,w,c
  5590  001BB6  2408               	addwf	(___fladd@a+3)^0,w,c
  5591  001BB8  6E0E               	movwf	___fladd@aexp^0,c
  5592  001BBA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5593  001BBC  EFE2  F00D         	goto	u3391
  5594  001BC0  EFE4  F00D         	goto	u3390
  5595  001BC4                     u3391:
  5596  001BC4  EFE5  F00D         	goto	l3891
  5597  001BC8                     u3390:
  5598  001BC8  800E               	bsf	___fladd@aexp^0,0,c
  5599  001BCA                     l3891:
  5600  001BCA  500E               	movf	___fladd@aexp^0,w,c
  5601  001BCC  B4D8               	btfsc	status,2,c
  5602  001BCE  EFEB  F00D         	goto	u3401
  5603  001BD2  EFED  F00D         	goto	u3400
  5604  001BD6                     u3401:
  5605  001BD6  EF02  F00E         	goto	l3901
  5606  001BDA                     u3400:
  5607  001BDA  280E               	incf	___fladd@aexp^0,w,c
  5608  001BDC  A4D8               	btfss	status,2,c
  5609  001BDE  EFF3  F00D         	goto	u3411
  5610  001BE2  EFF5  F00D         	goto	u3410
  5611  001BE6                     u3411:
  5612  001BE6  EFFD  F00D         	goto	l3897
  5613  001BEA                     u3410:
  5614  001BEA  0E00               	movlw	0
  5615  001BEC  6E05               	movwf	___fladd@a^0,c
  5616  001BEE  0E00               	movlw	0
  5617  001BF0  6E06               	movwf	(___fladd@a+1)^0,c
  5618  001BF2  0E00               	movlw	0
  5619  001BF4  6E07               	movwf	(___fladd@a+2)^0,c
  5620  001BF6  0E00               	movlw	0
  5621  001BF8  6E08               	movwf	(___fladd@a+3)^0,c
  5622  001BFA                     l3897:
  5623  001BFA  8E07               	bsf	(___fladd@a+2)^0,7,c
  5624  001BFC  0E00               	movlw	0
  5625  001BFE  6E08               	movwf	(___fladd@a+3)^0,c
  5626  001C00  EF0A  F00E         	goto	l3903
  5627  001C04                     l3901:
  5628  001C04  0E00               	movlw	0
  5629  001C06  6E05               	movwf	___fladd@a^0,c
  5630  001C08  0E00               	movlw	0
  5631  001C0A  6E06               	movwf	(___fladd@a+1)^0,c
  5632  001C0C  0E00               	movlw	0
  5633  001C0E  6E07               	movwf	(___fladd@a+2)^0,c
  5634  001C10  0E00               	movlw	0
  5635  001C12  6E08               	movwf	(___fladd@a+3)^0,c
  5636  001C14                     l3903:
  5637  001C14  500F               	movf	___fladd@bexp^0,w,c
  5638  001C16  5C0E               	subwf	___fladd@aexp^0,w,c
  5639  001C18  B0D8               	btfsc	status,0,c
  5640  001C1A  EF11  F00E         	goto	u3421
  5641  001C1E  EF13  F00E         	goto	u3420
  5642  001C22                     u3421:
  5643  001C22  EF3A  F00E         	goto	l3939
  5644  001C26                     u3420:
  5645  001C26  AC0D               	btfss	___fladd@signs^0,6,c
  5646  001C28  EF18  F00E         	goto	u3431
  5647  001C2C  EF1A  F00E         	goto	u3430
  5648  001C30                     u3431:
  5649  001C30  EF1C  F00E         	goto	l3909
  5650  001C34                     u3430:
  5651  001C34  0E80               	movlw	128
  5652  001C36  1A0D               	xorwf	___fladd@signs^0,f,c
  5653  001C38                     l3909:
  5654  001C38  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5655  001C3C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5656  001C40  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5657  001C44  C001  F010         	movff	___fladd@b,___fladd@grs
  5658  001C48  C005  F001         	movff	___fladd@a,___fladd@b
  5659  001C4C  C010  F005         	movff	___fladd@grs,___fladd@a
  5660  001C50  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5661  001C54  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5662  001C58  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5663  001C5C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5664  001C60  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5665  001C64  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5666  001C68  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5667  001C6C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5668  001C70  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5669  001C74                     l3939:
  5670  001C74  0E00               	movlw	0
  5671  001C76  6E10               	movwf	___fladd@grs^0,c
  5672  001C78  500F               	movf	___fladd@bexp^0,w,c
  5673  001C7A  C00E  F009         	movff	___fladd@aexp,??___fladd
  5674  001C7E  6A0A               	clrf	(??___fladd+1)^0,c
  5675  001C80  5E09               	subwf	??___fladd^0,f,c
  5676  001C82  0E00               	movlw	0
  5677  001C84  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5678  001C86  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5679  001C88  EF4F  F00E         	goto	u3441
  5680  001C8C  500A               	movf	(??___fladd+1)^0,w,c
  5681  001C8E  E109               	bnz	u3440
  5682  001C90  0E1A               	movlw	26
  5683  001C92  5C09               	subwf	??___fladd^0,w,c
  5684  001C94  A0D8               	btfss	status,0,c
  5685  001C96  EF4F  F00E         	goto	u3441
  5686  001C9A  EF51  F00E         	goto	u3440
  5687  001C9E                     u3441:
  5688  001C9E  EF88  F00E         	goto	l1302
  5689  001CA2                     u3440:
  5690  001CA2  5001               	movf	___fladd@b^0,w,c
  5691  001CA4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5692  001CA6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5693  001CA8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5694  001CAA  A4D8               	btfss	status,2,c
  5695  001CAC  EF5A  F00E         	goto	u3451
  5696  001CB0  EF5D  F00E         	goto	u3450
  5697  001CB4                     u3451:
  5698  001CB4  0E01               	movlw	1
  5699  001CB6  EF5E  F00E         	goto	u3460
  5700  001CBA                     u3450:
  5701  001CBA  0E00               	movlw	0
  5702  001CBC                     u3460:
  5703  001CBC  6E10               	movwf	___fladd@grs^0,c
  5704  001CBE  0E00               	movlw	0
  5705  001CC0  6E01               	movwf	___fladd@b^0,c
  5706  001CC2  0E00               	movlw	0
  5707  001CC4  6E02               	movwf	(___fladd@b+1)^0,c
  5708  001CC6  0E00               	movlw	0
  5709  001CC8  6E03               	movwf	(___fladd@b+2)^0,c
  5710  001CCA  0E00               	movlw	0
  5711  001CCC  6E04               	movwf	(___fladd@b+3)^0,c
  5712  001CCE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5713  001CD2  EF91  F00E         	goto	l1301
  5714  001CD6                     l1303:
  5715  001CD6  A010               	btfss	___fladd@grs^0,0,c
  5716  001CD8  EF70  F00E         	goto	u3471
  5717  001CDC  EF72  F00E         	goto	u3470
  5718  001CE0                     u3471:
  5719  001CE0  EF78  F00E         	goto	l3951
  5720  001CE4                     u3470:
  5721  001CE4  90D8               	bcf	status,0,c
  5722  001CE6  3010               	rrcf	___fladd@grs^0,w,c
  5723  001CE8  0901               	iorlw	1
  5724  001CEA  6E10               	movwf	___fladd@grs^0,c
  5725  001CEC  EF7A  F00E         	goto	l3953
  5726  001CF0                     l3951:
  5727  001CF0  90D8               	bcf	status,0,c
  5728  001CF2  3210               	rrcf	___fladd@grs^0,f,c
  5729  001CF4                     l3953:
  5730  001CF4  A001               	btfss	___fladd@b^0,0,c
  5731  001CF6  EF7F  F00E         	goto	u3481
  5732  001CFA  EF81  F00E         	goto	u3480
  5733  001CFE                     u3481:
  5734  001CFE  EF82  F00E         	goto	l3957
  5735  001D02                     u3480:
  5736  001D02  8E10               	bsf	___fladd@grs^0,7,c
  5737  001D04                     l3957:
  5738  001D04  3404               	rlcf	(___fladd@b+3)^0,w,c
  5739  001D06  3204               	rrcf	(___fladd@b+3)^0,f,c
  5740  001D08  3203               	rrcf	(___fladd@b+2)^0,f,c
  5741  001D0A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5742  001D0C  3201               	rrcf	___fladd@b^0,f,c
  5743  001D0E  2A0F               	incf	___fladd@bexp^0,f,c
  5744  001D10                     l1302:
  5745  001D10  500E               	movf	___fladd@aexp^0,w,c
  5746  001D12  5C0F               	subwf	___fladd@bexp^0,w,c
  5747  001D14  A0D8               	btfss	status,0,c
  5748  001D16  EF8F  F00E         	goto	u3491
  5749  001D1A  EF91  F00E         	goto	u3490
  5750  001D1E                     u3491:
  5751  001D1E  EF6B  F00E         	goto	l1303
  5752  001D22                     u3490:
  5753  001D22                     l1301:
  5754  001D22  BC0D               	btfsc	___fladd@signs^0,6,c
  5755  001D24  EF96  F00E         	goto	u3501
  5756  001D28  EF98  F00E         	goto	u3500
  5757  001D2C                     u3501:
  5758  001D2C  EFD8  F00E         	goto	l3985
  5759  001D30                     u3500:
  5760  001D30  500F               	movf	___fladd@bexp^0,w,c
  5761  001D32  A4D8               	btfss	status,2,c
  5762  001D34  EF9E  F00E         	goto	u3511
  5763  001D38  EFA0  F00E         	goto	u3510
  5764  001D3C                     u3511:
  5765  001D3C  EFAA  F00E         	goto	l3967
  5766  001D40                     u3510:
  5767  001D40  0E00               	movlw	0
  5768  001D42  6E01               	movwf	?___fladd^0,c
  5769  001D44  0E00               	movlw	0
  5770  001D46  6E02               	movwf	(?___fladd+1)^0,c
  5771  001D48  0E00               	movlw	0
  5772  001D4A  6E03               	movwf	(?___fladd+2)^0,c
  5773  001D4C  0E00               	movlw	0
  5774  001D4E  6E04               	movwf	(?___fladd+3)^0,c
  5775  001D50  EFF9  F00F         	goto	l1310
  5776  001D54                     l3967:
  5777  001D54  5005               	movf	___fladd@a^0,w,c
  5778  001D56  2601               	addwf	___fladd@b^0,f,c
  5779  001D58  5006               	movf	(___fladd@a+1)^0,w,c
  5780  001D5A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5781  001D5C  5007               	movf	(___fladd@a+2)^0,w,c
  5782  001D5E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5783  001D60  5008               	movf	(___fladd@a+3)^0,w,c
  5784  001D62  2204               	addwfc	(___fladd@b+3)^0,f,c
  5785  001D64  A004               	btfss	(___fladd@b+3)^0,0,c
  5786  001D66  EFB7  F00E         	goto	u3521
  5787  001D6A  EFB9  F00E         	goto	u3520
  5788  001D6E                     u3521:
  5789  001D6E  EF65  F00F         	goto	l4021
  5790  001D72                     u3520:
  5791  001D72  A010               	btfss	___fladd@grs^0,0,c
  5792  001D74  EFBE  F00E         	goto	u3531
  5793  001D78  EFC0  F00E         	goto	u3530
  5794  001D7C                     u3531:
  5795  001D7C  EFC6  F00E         	goto	l3975
  5796  001D80                     u3530:
  5797  001D80  90D8               	bcf	status,0,c
  5798  001D82  3010               	rrcf	___fladd@grs^0,w,c
  5799  001D84  0901               	iorlw	1
  5800  001D86  6E10               	movwf	___fladd@grs^0,c
  5801  001D88  EFC8  F00E         	goto	l3977
  5802  001D8C                     l3975:
  5803  001D8C  90D8               	bcf	status,0,c
  5804  001D8E  3210               	rrcf	___fladd@grs^0,f,c
  5805  001D90                     l3977:
  5806  001D90  A001               	btfss	___fladd@b^0,0,c
  5807  001D92  EFCD  F00E         	goto	u3541
  5808  001D96  EFCF  F00E         	goto	u3540
  5809  001D9A                     u3541:
  5810  001D9A  EFD0  F00E         	goto	l3981
  5811  001D9E                     u3540:
  5812  001D9E  8E10               	bsf	___fladd@grs^0,7,c
  5813  001DA0                     l3981:
  5814  001DA0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5815  001DA2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5816  001DA4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5817  001DA6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5818  001DA8  3201               	rrcf	___fladd@b^0,f,c
  5819  001DAA  2A0F               	incf	___fladd@bexp^0,f,c
  5820  001DAC  EF65  F00F         	goto	l4021
  5821  001DB0                     l3985:
  5822  001DB0  5005               	movf	___fladd@a^0,w,c
  5823  001DB2  5C01               	subwf	___fladd@b^0,w,c
  5824  001DB4  5006               	movf	(___fladd@a+1)^0,w,c
  5825  001DB6  5802               	subwfb	(___fladd@b+1)^0,w,c
  5826  001DB8  5007               	movf	(___fladd@a+2)^0,w,c
  5827  001DBA  5803               	subwfb	(___fladd@b+2)^0,w,c
  5828  001DBC  5004               	movf	(___fladd@b+3)^0,w,c
  5829  001DBE  0A80               	xorlw	128
  5830  001DC0  6E09               	movwf	??___fladd^0,c
  5831  001DC2  5008               	movf	(___fladd@a+3)^0,w,c
  5832  001DC4  0A80               	xorlw	128
  5833  001DC6  5809               	subwfb	??___fladd^0,w,c
  5834  001DC8  B0D8               	btfsc	status,0,c
  5835  001DCA  EFE9  F00E         	goto	u3551
  5836  001DCE  EFEB  F00E         	goto	u3550
  5837  001DD2                     u3551:
  5838  001DD2  EF16  F00F         	goto	l3995
  5839  001DD6                     u3550:
  5840  001DD6  5001               	movf	___fladd@b^0,w,c
  5841  001DD8  5C05               	subwf	___fladd@a^0,w,c
  5842  001DDA  6E09               	movwf	??___fladd^0,c
  5843  001DDC  5002               	movf	(___fladd@b+1)^0,w,c
  5844  001DDE  5806               	subwfb	(___fladd@a+1)^0,w,c
  5845  001DE0  6E0A               	movwf	(??___fladd+1)^0,c
  5846  001DE2  5003               	movf	(___fladd@b+2)^0,w,c
  5847  001DE4  5807               	subwfb	(___fladd@a+2)^0,w,c
  5848  001DE6  6E0B               	movwf	(??___fladd+2)^0,c
  5849  001DE8  5004               	movf	(___fladd@b+3)^0,w,c
  5850  001DEA  5808               	subwfb	(___fladd@a+3)^0,w,c
  5851  001DEC  6E0C               	movwf	(??___fladd+3)^0,c
  5852  001DEE  0EFF               	movlw	255
  5853  001DF0  2409               	addwf	??___fladd^0,w,c
  5854  001DF2  6E01               	movwf	___fladd@b^0,c
  5855  001DF4  0EFF               	movlw	255
  5856  001DF6  200A               	addwfc	(??___fladd+1)^0,w,c
  5857  001DF8  6E02               	movwf	(___fladd@b+1)^0,c
  5858  001DFA  0EFF               	movlw	255
  5859  001DFC  200B               	addwfc	(??___fladd+2)^0,w,c
  5860  001DFE  6E03               	movwf	(___fladd@b+2)^0,c
  5861  001E00  0EFF               	movlw	255
  5862  001E02  200C               	addwfc	(??___fladd+3)^0,w,c
  5863  001E04  6E04               	movwf	(___fladd@b+3)^0,c
  5864  001E06  0E80               	movlw	128
  5865  001E08  1A0D               	xorwf	___fladd@signs^0,f,c
  5866  001E0A  6C10               	negf	___fladd@grs^0,c
  5867  001E0C  5010               	movf	___fladd@grs^0,w,c
  5868  001E0E  A4D8               	btfss	status,2,c
  5869  001E10  EF0C  F00F         	goto	u3561
  5870  001E14  EF0E  F00F         	goto	u3560
  5871  001E18                     u3561:
  5872  001E18  EF1E  F00F         	goto	l1318
  5873  001E1C                     u3560:
  5874  001E1C  0E01               	movlw	1
  5875  001E1E  2601               	addwf	___fladd@b^0,f,c
  5876  001E20  0E00               	movlw	0
  5877  001E22  2202               	addwfc	(___fladd@b+1)^0,f,c
  5878  001E24  2203               	addwfc	(___fladd@b+2)^0,f,c
  5879  001E26  2204               	addwfc	(___fladd@b+3)^0,f,c
  5880  001E28  EF1E  F00F         	goto	l1318
  5881  001E2C                     l3995:
  5882  001E2C  5005               	movf	___fladd@a^0,w,c
  5883  001E2E  5E01               	subwf	___fladd@b^0,f,c
  5884  001E30  5006               	movf	(___fladd@a+1)^0,w,c
  5885  001E32  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5886  001E34  5007               	movf	(___fladd@a+2)^0,w,c
  5887  001E36  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5888  001E38  5008               	movf	(___fladd@a+3)^0,w,c
  5889  001E3A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5890  001E3C                     l1318:
  5891  001E3C  5001               	movf	___fladd@b^0,w,c
  5892  001E3E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5893  001E40  1003               	iorwf	(___fladd@b+2)^0,w,c
  5894  001E42  1004               	iorwf	(___fladd@b+3)^0,w,c
  5895  001E44  A4D8               	btfss	status,2,c
  5896  001E46  EF27  F00F         	goto	u3571
  5897  001E4A  EF29  F00F         	goto	u3570
  5898  001E4E                     u3571:
  5899  001E4E  EF5E  F00F         	goto	l4019
  5900  001E52                     u3570:
  5901  001E52  5010               	movf	___fladd@grs^0,w,c
  5902  001E54  A4D8               	btfss	status,2,c
  5903  001E56  EF2F  F00F         	goto	u3581
  5904  001E5A  EF31  F00F         	goto	u3580
  5905  001E5E                     u3581:
  5906  001E5E  EF5E  F00F         	goto	l4019
  5907  001E62                     u3580:
  5908  001E62  0E00               	movlw	0
  5909  001E64  6E01               	movwf	?___fladd^0,c
  5910  001E66  0E00               	movlw	0
  5911  001E68  6E02               	movwf	(?___fladd+1)^0,c
  5912  001E6A  0E00               	movlw	0
  5913  001E6C  6E03               	movwf	(?___fladd+2)^0,c
  5914  001E6E  0E00               	movlw	0
  5915  001E70  6E04               	movwf	(?___fladd+3)^0,c
  5916  001E72  EFF9  F00F         	goto	l1310
  5917  001E76                     l4003:
  5918  001E76  90D8               	bcf	status,0,c
  5919  001E78  3601               	rlcf	___fladd@b^0,f,c
  5920  001E7A  3602               	rlcf	(___fladd@b+1)^0,f,c
  5921  001E7C  3603               	rlcf	(___fladd@b+2)^0,f,c
  5922  001E7E  3604               	rlcf	(___fladd@b+3)^0,f,c
  5923  001E80  AE10               	btfss	___fladd@grs^0,7,c
  5924  001E82  EF45  F00F         	goto	u3591
  5925  001E86  EF47  F00F         	goto	u3590
  5926  001E8A                     u3591:
  5927  001E8A  EF48  F00F         	goto	l4009
  5928  001E8E                     u3590:
  5929  001E8E  8001               	bsf	___fladd@b^0,0,c
  5930  001E90                     l4009:
  5931  001E90  A010               	btfss	___fladd@grs^0,0,c
  5932  001E92  EF4D  F00F         	goto	u3601
  5933  001E96  EF4F  F00F         	goto	u3600
  5934  001E9A                     u3601:
  5935  001E9A  EF53  F00F         	goto	l4013
  5936  001E9E                     u3600:
  5937  001E9E  80D8               	bsf	status,0,c
  5938  001EA0  3610               	rlcf	___fladd@grs^0,f,c
  5939  001EA2  EF55  F00F         	goto	l4015
  5940  001EA6                     l4013:
  5941  001EA6  90D8               	bcf	status,0,c
  5942  001EA8  3610               	rlcf	___fladd@grs^0,f,c
  5943  001EAA                     l4015:
  5944  001EAA  500F               	movf	___fladd@bexp^0,w,c
  5945  001EAC  B4D8               	btfsc	status,2,c
  5946  001EAE  EF5B  F00F         	goto	u3611
  5947  001EB2  EF5D  F00F         	goto	u3610
  5948  001EB6                     u3611:
  5949  001EB6  EF5E  F00F         	goto	l4019
  5950  001EBA                     u3610:
  5951  001EBA  060F               	decf	___fladd@bexp^0,f,c
  5952  001EBC                     l4019:
  5953  001EBC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5954  001EBE  EF63  F00F         	goto	u3621
  5955  001EC2  EF65  F00F         	goto	u3620
  5956  001EC6                     u3621:
  5957  001EC6  EF3B  F00F         	goto	l4003
  5958  001ECA                     u3620:
  5959  001ECA                     l4021:
  5960  001ECA  0E00               	movlw	0
  5961  001ECC  6E0E               	movwf	___fladd@aexp^0,c
  5962  001ECE  AE10               	btfss	___fladd@grs^0,7,c
  5963  001ED0  EF6C  F00F         	goto	u3631
  5964  001ED4  EF6E  F00F         	goto	u3630
  5965  001ED8                     u3631:
  5966  001ED8  EF86  F00F         	goto	l1327
  5967  001EDC                     u3630:
  5968  001EDC  C010  F009         	movff	___fladd@grs,??___fladd
  5969  001EE0  0E7F               	movlw	127
  5970  001EE2  1609               	andwf	??___fladd^0,f,c
  5971  001EE4  B4D8               	btfsc	status,2,c
  5972  001EE6  EF77  F00F         	goto	u3641
  5973  001EEA  EF79  F00F         	goto	u3640
  5974  001EEE                     u3641:
  5975  001EEE  EF7D  F00F         	goto	l1328
  5976  001EF2                     u3640:
  5977  001EF2                     l4027:
  5978  001EF2  0E01               	movlw	1
  5979  001EF4  6E0E               	movwf	___fladd@aexp^0,c
  5980  001EF6  EF86  F00F         	goto	l1327
  5981  001EFA                     l1328:
  5982  001EFA  A001               	btfss	___fladd@b^0,0,c
  5983  001EFC  EF82  F00F         	goto	u3651
  5984  001F00  EF84  F00F         	goto	u3650
  5985  001F04                     u3651:
  5986  001F04  EF86  F00F         	goto	l1327
  5987  001F08                     u3650:
  5988  001F08  EF79  F00F         	goto	l4027
  5989  001F0C                     l1327:
  5990  001F0C  500E               	movf	___fladd@aexp^0,w,c
  5991  001F0E  B4D8               	btfsc	status,2,c
  5992  001F10  EF8C  F00F         	goto	u3661
  5993  001F14  EF8E  F00F         	goto	u3660
  5994  001F18                     u3661:
  5995  001F18  EFB9  F00F         	goto	l4039
  5996  001F1C                     u3660:
  5997  001F1C  0E01               	movlw	1
  5998  001F1E  2601               	addwf	___fladd@b^0,f,c
  5999  001F20  0E00               	movlw	0
  6000  001F22  2202               	addwfc	(___fladd@b+1)^0,f,c
  6001  001F24  2203               	addwfc	(___fladd@b+2)^0,f,c
  6002  001F26  2204               	addwfc	(___fladd@b+3)^0,f,c
  6003  001F28  A004               	btfss	(___fladd@b+3)^0,0,c
  6004  001F2A  EF99  F00F         	goto	u3671
  6005  001F2E  EF9B  F00F         	goto	u3670
  6006  001F32                     u3671:
  6007  001F32  EFB9  F00F         	goto	l4039
  6008  001F36                     u3670:
  6009  001F36  C001  F009         	movff	___fladd@b,??___fladd
  6010  001F3A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6011  001F3E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6012  001F42  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6013  001F46  340C               	rlcf	(??___fladd+3)^0,w,c
  6014  001F48  320C               	rrcf	(??___fladd+3)^0,f,c
  6015  001F4A  320B               	rrcf	(??___fladd+2)^0,f,c
  6016  001F4C  320A               	rrcf	(??___fladd+1)^0,f,c
  6017  001F4E  3209               	rrcf	??___fladd^0,f,c
  6018  001F50  C009  F001         	movff	??___fladd,___fladd@b
  6019  001F54  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6020  001F58  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6021  001F5C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6022  001F60  280F               	incf	___fladd@bexp^0,w,c
  6023  001F62  B4D8               	btfsc	status,2,c
  6024  001F64  EFB6  F00F         	goto	u3681
  6025  001F68  EFB8  F00F         	goto	u3680
  6026  001F6C                     u3681:
  6027  001F6C  EFB9  F00F         	goto	l4039
  6028  001F70                     u3680:
  6029  001F70  2A0F               	incf	___fladd@bexp^0,f,c
  6030  001F72                     l4039:
  6031  001F72  280F               	incf	___fladd@bexp^0,w,c
  6032  001F74  B4D8               	btfsc	status,2,c
  6033  001F76  EFBF  F00F         	goto	u3691
  6034  001F7A  EFC1  F00F         	goto	u3690
  6035  001F7E                     u3691:
  6036  001F7E  EFC9  F00F         	goto	l4043
  6037  001F82                     u3690:
  6038  001F82  500F               	movf	___fladd@bexp^0,w,c
  6039  001F84  A4D8               	btfss	status,2,c
  6040  001F86  EFC7  F00F         	goto	u3701
  6041  001F8A  EFC9  F00F         	goto	u3700
  6042  001F8E                     u3701:
  6043  001F8E  EFDB  F00F         	goto	l4047
  6044  001F92                     u3700:
  6045  001F92                     l4043:
  6046  001F92  0E00               	movlw	0
  6047  001F94  6E01               	movwf	___fladd@b^0,c
  6048  001F96  0E00               	movlw	0
  6049  001F98  6E02               	movwf	(___fladd@b+1)^0,c
  6050  001F9A  0E00               	movlw	0
  6051  001F9C  6E03               	movwf	(___fladd@b+2)^0,c
  6052  001F9E  0E00               	movlw	0
  6053  001FA0  6E04               	movwf	(___fladd@b+3)^0,c
  6054  001FA2  500F               	movf	___fladd@bexp^0,w,c
  6055  001FA4  A4D8               	btfss	status,2,c
  6056  001FA6  EFD7  F00F         	goto	u3711
  6057  001FAA  EFD9  F00F         	goto	u3710
  6058  001FAE                     u3711:
  6059  001FAE  EFDB  F00F         	goto	l4047
  6060  001FB2                     u3710:
  6061  001FB2  0E00               	movlw	0
  6062  001FB4  6E0D               	movwf	___fladd@signs^0,c
  6063  001FB6                     l4047:
  6064  001FB6  A00F               	btfss	___fladd@bexp^0,0,c
  6065  001FB8  EFE0  F00F         	goto	u3721
  6066  001FBC  EFE2  F00F         	goto	u3720
  6067  001FC0                     u3721:
  6068  001FC0  EFE5  F00F         	goto	l4051
  6069  001FC4                     u3720:
  6070  001FC4  8E03               	bsf	(___fladd@b+2)^0,7,c
  6071  001FC6  EFE6  F00F         	goto	l4053
  6072  001FCA                     l4051:
  6073  001FCA  9E03               	bcf	(___fladd@b+2)^0,7,c
  6074  001FCC                     l4053:
  6075  001FCC  90D8               	bcf	status,0,c
  6076  001FCE  300F               	rrcf	___fladd@bexp^0,w,c
  6077  001FD0  6E04               	movwf	(___fladd@b+3)^0,c
  6078  001FD2  AE0D               	btfss	___fladd@signs^0,7,c
  6079  001FD4  EFEE  F00F         	goto	u3731
  6080  001FD8  EFF0  F00F         	goto	u3730
  6081  001FDC                     u3731:
  6082  001FDC  EFF1  F00F         	goto	l4059
  6083  001FE0                     u3730:
  6084  001FE0  8E04               	bsf	(___fladd@b+3)^0,7,c
  6085  001FE2                     l4059:
  6086  001FE2  C001  F001         	movff	___fladd@b,?___fladd
  6087  001FE6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6088  001FEA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6089  001FEE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6090  001FF2                     l1310:
  6091  001FF2  0012               	return		;funcret
  6092  001FF4                     __end_of___fladd:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function ___flneg *****************
  6096 ;; Defined at:
  6097 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  f1              4    0[COMRAM] unsigned char 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  4    0[COMRAM] unsigned char 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6115 ;;Total ram usage:        4 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_roundf
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text22
  6126  0057A8                     __ptext22:
  6127                           	callstack 0
  6128  0057A8                     ___flneg:
  6129                           	callstack 25
  6130  0057A8  5001               	movf	___flneg@f1^0,w,c
  6131  0057AA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6132  0057AC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6133  0057AE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6134  0057B0  B4D8               	btfsc	status,2,c
  6135  0057B2  EFDD  F02B         	goto	u4091
  6136  0057B6  EFDF  F02B         	goto	u4090
  6137  0057BA                     u4091:
  6138  0057BA  EFE7  F02B         	goto	l4323
  6139  0057BE                     u4090:
  6140  0057BE  0E00               	movlw	0
  6141  0057C0  1A01               	xorwf	___flneg@f1^0,f,c
  6142  0057C2  0E00               	movlw	0
  6143  0057C4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6144  0057C6  0E00               	movlw	0
  6145  0057C8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6146  0057CA  0E80               	movlw	128
  6147  0057CC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6148  0057CE                     l4323:
  6149  0057CE  C001  F001         	movff	___flneg@f1,?___flneg
  6150  0057D2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6151  0057D6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6152  0057DA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6153  0057DE  0012               	return		;funcret
  6154  0057E0                     __end_of___flneg:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function ___flmul *****************
  6158 ;; Defined at:
  6159 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  b               4   39[COMRAM] unsigned char 
  6162 ;;  a               4   43[COMRAM] unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  prod            4   58[COMRAM] struct .
  6165 ;;  grs             4   52[COMRAM] unsigned long 
  6166 ;;  temp            2   62[COMRAM] struct .
  6167 ;;  bexp            1   57[COMRAM] unsigned char 
  6168 ;;  aexp            1   56[COMRAM] unsigned char 
  6169 ;;  sign            1   51[COMRAM] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  4   39[COMRAM] unsigned char 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, prodl, prodh
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;Total ram usage:       25 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 1
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_detect_color
  6190 ;;		_distance_measure
  6191 ;;		_roundf
  6192 ;;		_check_color_reading
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text23
  6197  001FF4                     __ptext23:
  6198                           	callstack 0
  6199  001FF4                     ___flmul:
  6200                           	callstack 25
  6201  001FF4  502B               	movf	(___flmul@b+3)^0,w,c
  6202  001FF6  0B80               	andlw	128
  6203  001FF8  6E34               	movwf	___flmul@sign^0,c
  6204  001FFA  502B               	movf	(___flmul@b+3)^0,w,c
  6205  001FFC  242B               	addwf	(___flmul@b+3)^0,w,c
  6206  001FFE  6E3A               	movwf	___flmul@bexp^0,c
  6207  002000  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6208  002002  EF05  F010         	goto	u3851
  6209  002006  EF07  F010         	goto	u3850
  6210  00200A                     u3851:
  6211  00200A  EF08  F010         	goto	l4167
  6212  00200E                     u3850:
  6213  00200E  803A               	bsf	___flmul@bexp^0,0,c
  6214  002010                     l4167:
  6215  002010  503A               	movf	___flmul@bexp^0,w,c
  6216  002012  B4D8               	btfsc	status,2,c
  6217  002014  EF0E  F010         	goto	u3861
  6218  002018  EF10  F010         	goto	u3860
  6219  00201C                     u3861:
  6220  00201C  EF23  F010         	goto	l4175
  6221  002020                     u3860:
  6222  002020  283A               	incf	___flmul@bexp^0,w,c
  6223  002022  A4D8               	btfss	status,2,c
  6224  002024  EF16  F010         	goto	u3871
  6225  002028  EF18  F010         	goto	u3870
  6226  00202C                     u3871:
  6227  00202C  EF20  F010         	goto	l4173
  6228  002030                     u3870:
  6229  002030  0E00               	movlw	0
  6230  002032  6E28               	movwf	___flmul@b^0,c
  6231  002034  0E00               	movlw	0
  6232  002036  6E29               	movwf	(___flmul@b+1)^0,c
  6233  002038  0E00               	movlw	0
  6234  00203A  6E2A               	movwf	(___flmul@b+2)^0,c
  6235  00203C  0E00               	movlw	0
  6236  00203E  6E2B               	movwf	(___flmul@b+3)^0,c
  6237  002040                     l4173:
  6238  002040  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6239  002042  EF2B  F010         	goto	l4177
  6240  002046                     l4175:
  6241  002046  0E00               	movlw	0
  6242  002048  6E28               	movwf	___flmul@b^0,c
  6243  00204A  0E00               	movlw	0
  6244  00204C  6E29               	movwf	(___flmul@b+1)^0,c
  6245  00204E  0E00               	movlw	0
  6246  002050  6E2A               	movwf	(___flmul@b+2)^0,c
  6247  002052  0E00               	movlw	0
  6248  002054  6E2B               	movwf	(___flmul@b+3)^0,c
  6249  002056                     l4177:
  6250  002056  502F               	movf	(___flmul@a+3)^0,w,c
  6251  002058  0B80               	andlw	128
  6252  00205A  1A34               	xorwf	___flmul@sign^0,f,c
  6253  00205C  502F               	movf	(___flmul@a+3)^0,w,c
  6254  00205E  242F               	addwf	(___flmul@a+3)^0,w,c
  6255  002060  6E39               	movwf	___flmul@aexp^0,c
  6256  002062  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6257  002064  EF36  F010         	goto	u3881
  6258  002068  EF38  F010         	goto	u3880
  6259  00206C                     u3881:
  6260  00206C  EF39  F010         	goto	l4185
  6261  002070                     u3880:
  6262  002070  8039               	bsf	___flmul@aexp^0,0,c
  6263  002072                     l4185:
  6264  002072  5039               	movf	___flmul@aexp^0,w,c
  6265  002074  B4D8               	btfsc	status,2,c
  6266  002076  EF3F  F010         	goto	u3891
  6267  00207A  EF41  F010         	goto	u3890
  6268  00207E                     u3891:
  6269  00207E  EF54  F010         	goto	l4193
  6270  002082                     u3890:
  6271  002082  2839               	incf	___flmul@aexp^0,w,c
  6272  002084  A4D8               	btfss	status,2,c
  6273  002086  EF47  F010         	goto	u3901
  6274  00208A  EF49  F010         	goto	u3900
  6275  00208E                     u3901:
  6276  00208E  EF51  F010         	goto	l4191
  6277  002092                     u3900:
  6278  002092  0E00               	movlw	0
  6279  002094  6E2C               	movwf	___flmul@a^0,c
  6280  002096  0E00               	movlw	0
  6281  002098  6E2D               	movwf	(___flmul@a+1)^0,c
  6282  00209A  0E00               	movlw	0
  6283  00209C  6E2E               	movwf	(___flmul@a+2)^0,c
  6284  00209E  0E00               	movlw	0
  6285  0020A0  6E2F               	movwf	(___flmul@a+3)^0,c
  6286  0020A2                     l4191:
  6287  0020A2  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6288  0020A4  EF5C  F010         	goto	l1387
  6289  0020A8                     l4193:
  6290  0020A8  0E00               	movlw	0
  6291  0020AA  6E2C               	movwf	___flmul@a^0,c
  6292  0020AC  0E00               	movlw	0
  6293  0020AE  6E2D               	movwf	(___flmul@a+1)^0,c
  6294  0020B0  0E00               	movlw	0
  6295  0020B2  6E2E               	movwf	(___flmul@a+2)^0,c
  6296  0020B4  0E00               	movlw	0
  6297  0020B6  6E2F               	movwf	(___flmul@a+3)^0,c
  6298  0020B8                     l1387:
  6299  0020B8  5039               	movf	___flmul@aexp^0,w,c
  6300  0020BA  B4D8               	btfsc	status,2,c
  6301  0020BC  EF62  F010         	goto	u3911
  6302  0020C0  EF64  F010         	goto	u3910
  6303  0020C4                     u3911:
  6304  0020C4  EF6C  F010         	goto	l4197
  6305  0020C8                     u3910:
  6306  0020C8  503A               	movf	___flmul@bexp^0,w,c
  6307  0020CA  A4D8               	btfss	status,2,c
  6308  0020CC  EF6A  F010         	goto	u3921
  6309  0020D0  EF6C  F010         	goto	u3920
  6310  0020D4                     u3921:
  6311  0020D4  EF76  F010         	goto	l4201
  6312  0020D8                     u3920:
  6313  0020D8                     l4197:
  6314  0020D8  0E00               	movlw	0
  6315  0020DA  6E28               	movwf	?___flmul^0,c
  6316  0020DC  0E00               	movlw	0
  6317  0020DE  6E29               	movwf	(?___flmul+1)^0,c
  6318  0020E0  0E00               	movlw	0
  6319  0020E2  6E2A               	movwf	(?___flmul+2)^0,c
  6320  0020E4  0E00               	movlw	0
  6321  0020E6  6E2B               	movwf	(?___flmul+3)^0,c
  6322  0020E8  EF0E  F012         	goto	l1391
  6323  0020EC                     l4201:
  6324  0020EC  502E               	movf	(___flmul@a+2)^0,w,c
  6325  0020EE  0228               	mulwf	___flmul@b^0,c
  6326  0020F0  CFF3 F03F          	movff	prodl,___flmul@temp
  6327  0020F4  CFF4 F040          	movff	prodh,___flmul@temp+1
  6328  0020F8  503F               	movf	___flmul@temp^0,w,c
  6329  0020FA  6E35               	movwf	___flmul@grs^0,c
  6330  0020FC  6A36               	clrf	(___flmul@grs+1)^0,c
  6331  0020FE  6A37               	clrf	(___flmul@grs+2)^0,c
  6332  002100  6A38               	clrf	(___flmul@grs+3)^0,c
  6333  002102  5040               	movf	(___flmul@temp+1)^0,w,c
  6334  002104  6E3B               	movwf	___flmul@prod^0,c
  6335  002106  6A3C               	clrf	(___flmul@prod+1)^0,c
  6336  002108  6A3D               	clrf	(___flmul@prod+2)^0,c
  6337  00210A  6A3E               	clrf	(___flmul@prod+3)^0,c
  6338  00210C  502D               	movf	(___flmul@a+1)^0,w,c
  6339  00210E  0229               	mulwf	(___flmul@b+1)^0,c
  6340  002110  CFF3 F03F          	movff	prodl,___flmul@temp
  6341  002114  CFF4 F040          	movff	prodh,___flmul@temp+1
  6342  002118  503F               	movf	___flmul@temp^0,w,c
  6343  00211A  2635               	addwf	___flmul@grs^0,f,c
  6344  00211C  0E00               	movlw	0
  6345  00211E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6346  002120  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6347  002122  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6348  002124  5040               	movf	(___flmul@temp+1)^0,w,c
  6349  002126  263B               	addwf	___flmul@prod^0,f,c
  6350  002128  0E00               	movlw	0
  6351  00212A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6352  00212C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6353  00212E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6354  002130  502C               	movf	___flmul@a^0,w,c
  6355  002132  022A               	mulwf	(___flmul@b+2)^0,c
  6356  002134  CFF3 F03F          	movff	prodl,___flmul@temp
  6357  002138  CFF4 F040          	movff	prodh,___flmul@temp+1
  6358  00213C  503F               	movf	___flmul@temp^0,w,c
  6359  00213E  2635               	addwf	___flmul@grs^0,f,c
  6360  002140  0E00               	movlw	0
  6361  002142  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6362  002144  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6363  002146  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6364  002148  5040               	movf	(___flmul@temp+1)^0,w,c
  6365  00214A  263B               	addwf	___flmul@prod^0,f,c
  6366  00214C  0E00               	movlw	0
  6367  00214E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6368  002150  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6369  002152  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6370  002154  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6371  002158  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6372  00215C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6373  002160  6A35               	clrf	___flmul@grs^0,c
  6374  002162  502C               	movf	___flmul@a^0,w,c
  6375  002164  0229               	mulwf	(___flmul@b+1)^0,c
  6376  002166  CFF3 F03F          	movff	prodl,___flmul@temp
  6377  00216A  CFF4 F040          	movff	prodh,___flmul@temp+1
  6378  00216E  503F               	movf	___flmul@temp^0,w,c
  6379  002170  2635               	addwf	___flmul@grs^0,f,c
  6380  002172  5040               	movf	(___flmul@temp+1)^0,w,c
  6381  002174  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6382  002176  0E00               	movlw	0
  6383  002178  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6384  00217A  0E00               	movlw	0
  6385  00217C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6386  00217E  502D               	movf	(___flmul@a+1)^0,w,c
  6387  002180  0228               	mulwf	___flmul@b^0,c
  6388  002182  CFF3 F03F          	movff	prodl,___flmul@temp
  6389  002186  CFF4 F040          	movff	prodh,___flmul@temp+1
  6390  00218A  503F               	movf	___flmul@temp^0,w,c
  6391  00218C  2635               	addwf	___flmul@grs^0,f,c
  6392  00218E  5040               	movf	(___flmul@temp+1)^0,w,c
  6393  002190  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6394  002192  0E00               	movlw	0
  6395  002194  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6396  002196  0E00               	movlw	0
  6397  002198  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6398  00219A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6399  00219E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6400  0021A2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6401  0021A6  6A35               	clrf	___flmul@grs^0,c
  6402  0021A8  502C               	movf	___flmul@a^0,w,c
  6403  0021AA  0228               	mulwf	___flmul@b^0,c
  6404  0021AC  CFF3 F03F          	movff	prodl,___flmul@temp
  6405  0021B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6406  0021B4  503F               	movf	___flmul@temp^0,w,c
  6407  0021B6  2635               	addwf	___flmul@grs^0,f,c
  6408  0021B8  5040               	movf	(___flmul@temp+1)^0,w,c
  6409  0021BA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6410  0021BC  0E00               	movlw	0
  6411  0021BE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6412  0021C0  0E00               	movlw	0
  6413  0021C2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6414  0021C4  502E               	movf	(___flmul@a+2)^0,w,c
  6415  0021C6  0229               	mulwf	(___flmul@b+1)^0,c
  6416  0021C8  CFF3 F03F          	movff	prodl,___flmul@temp
  6417  0021CC  CFF4 F040          	movff	prodh,___flmul@temp+1
  6418  0021D0  503F               	movf	___flmul@temp^0,w,c
  6419  0021D2  263B               	addwf	___flmul@prod^0,f,c
  6420  0021D4  5040               	movf	(___flmul@temp+1)^0,w,c
  6421  0021D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6422  0021D8  0E00               	movlw	0
  6423  0021DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6424  0021DC  0E00               	movlw	0
  6425  0021DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6426  0021E0  502D               	movf	(___flmul@a+1)^0,w,c
  6427  0021E2  022A               	mulwf	(___flmul@b+2)^0,c
  6428  0021E4  CFF3 F03F          	movff	prodl,___flmul@temp
  6429  0021E8  CFF4 F040          	movff	prodh,___flmul@temp+1
  6430  0021EC  503F               	movf	___flmul@temp^0,w,c
  6431  0021EE  263B               	addwf	___flmul@prod^0,f,c
  6432  0021F0  5040               	movf	(___flmul@temp+1)^0,w,c
  6433  0021F2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6434  0021F4  0E00               	movlw	0
  6435  0021F6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6436  0021F8  0E00               	movlw	0
  6437  0021FA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6438  0021FC  502E               	movf	(___flmul@a+2)^0,w,c
  6439  0021FE  022A               	mulwf	(___flmul@b+2)^0,c
  6440  002200  CFF3 F03F          	movff	prodl,___flmul@temp
  6441  002204  CFF4 F040          	movff	prodh,___flmul@temp+1
  6442  002208  503F               	movf	___flmul@temp^0,w,c
  6443  00220A  6E30               	movwf	??___flmul^0,c
  6444  00220C  5040               	movf	(___flmul@temp+1)^0,w,c
  6445  00220E  6E31               	movwf	(??___flmul+1)^0,c
  6446  002210  6A32               	clrf	(??___flmul+2)^0,c
  6447  002212  6A33               	clrf	(??___flmul+3)^0,c
  6448  002214  C032  F033         	movff	??___flmul+2,??___flmul+3
  6449  002218  C031  F032         	movff	??___flmul+1,??___flmul+2
  6450  00221C  C030  F031         	movff	??___flmul,??___flmul+1
  6451  002220  6A30               	clrf	??___flmul^0,c
  6452  002222  5030               	movf	??___flmul^0,w,c
  6453  002224  263B               	addwf	___flmul@prod^0,f,c
  6454  002226  5031               	movf	(??___flmul+1)^0,w,c
  6455  002228  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6456  00222A  5032               	movf	(??___flmul+2)^0,w,c
  6457  00222C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6458  00222E  5033               	movf	(??___flmul+3)^0,w,c
  6459  002230  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6460  002232  C035  F030         	movff	___flmul@grs,??___flmul
  6461  002236  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6462  00223A  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6463  00223E  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6464  002242  0E19               	movlw	25
  6465  002244  EF29  F011         	goto	u3930
  6466  002248                     u3935:
  6467  002248  90D8               	bcf	status,0,c
  6468  00224A  3233               	rrcf	(??___flmul+3)^0,f,c
  6469  00224C  3232               	rrcf	(??___flmul+2)^0,f,c
  6470  00224E  3231               	rrcf	(??___flmul+1)^0,f,c
  6471  002250  3230               	rrcf	??___flmul^0,f,c
  6472  002252                     u3930:
  6473  002252  2EE8               	decfsz	wreg,f,c
  6474  002254  EF24  F011         	goto	u3935
  6475  002258  5030               	movf	??___flmul^0,w,c
  6476  00225A  263B               	addwf	___flmul@prod^0,f,c
  6477  00225C  5031               	movf	(??___flmul+1)^0,w,c
  6478  00225E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6479  002260  5032               	movf	(??___flmul+2)^0,w,c
  6480  002262  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6481  002264  5033               	movf	(??___flmul+3)^0,w,c
  6482  002266  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6483  002268  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6484  00226C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6485  002270  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6486  002274  6A35               	clrf	___flmul@grs^0,c
  6487  002276  5039               	movf	___flmul@aexp^0,w,c
  6488  002278  C03A  F030         	movff	___flmul@bexp,??___flmul
  6489  00227C  6A31               	clrf	(??___flmul+1)^0,c
  6490  00227E  2630               	addwf	??___flmul^0,f,c
  6491  002280  0E00               	movlw	0
  6492  002282  2231               	addwfc	(??___flmul+1)^0,f,c
  6493  002284  0E82               	movlw	130
  6494  002286  2430               	addwf	??___flmul^0,w,c
  6495  002288  6E3F               	movwf	___flmul@temp^0,c
  6496  00228A  0EFF               	movlw	255
  6497  00228C  2031               	addwfc	(??___flmul+1)^0,w,c
  6498  00228E  6E40               	movwf	(___flmul@temp+1)^0,c
  6499  002290  EF5F  F011         	goto	l4249
  6500  002294                     l4243:
  6501  002294  90D8               	bcf	status,0,c
  6502  002296  363B               	rlcf	___flmul@prod^0,f,c
  6503  002298  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6504  00229A  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6505  00229C  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6506  00229E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6507  0022A0  EF54  F011         	goto	u3941
  6508  0022A4  EF56  F011         	goto	u3940
  6509  0022A8                     u3941:
  6510  0022A8  EF57  F011         	goto	l1394
  6511  0022AC                     u3940:
  6512  0022AC  803B               	bsf	___flmul@prod^0,0,c
  6513  0022AE                     l1394:
  6514  0022AE  90D8               	bcf	status,0,c
  6515  0022B0  3635               	rlcf	___flmul@grs^0,f,c
  6516  0022B2  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6517  0022B4  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6518  0022B6  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6519  0022B8  063F               	decf	___flmul@temp^0,f,c
  6520  0022BA  A0D8               	btfss	status,0,c
  6521  0022BC  0640               	decf	(___flmul@temp+1)^0,f,c
  6522  0022BE                     l4249:
  6523  0022BE  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6524  0022C0  EF64  F011         	goto	u3951
  6525  0022C4  EF66  F011         	goto	u3950
  6526  0022C8                     u3951:
  6527  0022C8  EF4A  F011         	goto	l4243
  6528  0022CC                     u3950:
  6529  0022CC  0E00               	movlw	0
  6530  0022CE  6E39               	movwf	___flmul@aexp^0,c
  6531  0022D0  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6532  0022D2  EF6D  F011         	goto	u3961
  6533  0022D6  EF6F  F011         	goto	u3960
  6534  0022DA                     u3961:
  6535  0022DA  EF93  F011         	goto	l1396
  6536  0022DE                     u3960:
  6537  0022DE  0EFF               	movlw	255
  6538  0022E0  1435               	andwf	___flmul@grs^0,w,c
  6539  0022E2  6E30               	movwf	??___flmul^0,c
  6540  0022E4  0EFF               	movlw	255
  6541  0022E6  1436               	andwf	(___flmul@grs+1)^0,w,c
  6542  0022E8  6E31               	movwf	(??___flmul+1)^0,c
  6543  0022EA  0EFF               	movlw	255
  6544  0022EC  1437               	andwf	(___flmul@grs+2)^0,w,c
  6545  0022EE  6E32               	movwf	(??___flmul+2)^0,c
  6546  0022F0  0E7F               	movlw	127
  6547  0022F2  1438               	andwf	(___flmul@grs+3)^0,w,c
  6548  0022F4  6E33               	movwf	(??___flmul+3)^0,c
  6549  0022F6  5030               	movf	??___flmul^0,w,c
  6550  0022F8  1031               	iorwf	(??___flmul+1)^0,w,c
  6551  0022FA  1032               	iorwf	(??___flmul+2)^0,w,c
  6552  0022FC  1033               	iorwf	(??___flmul+3)^0,w,c
  6553  0022FE  B4D8               	btfsc	status,2,c
  6554  002300  EF84  F011         	goto	u3971
  6555  002304  EF86  F011         	goto	u3970
  6556  002308                     u3971:
  6557  002308  EF8A  F011         	goto	l1397
  6558  00230C                     u3970:
  6559  00230C                     l4257:
  6560  00230C  0E01               	movlw	1
  6561  00230E  6E39               	movwf	___flmul@aexp^0,c
  6562  002310  EF93  F011         	goto	l1396
  6563  002314                     l1397:
  6564  002314  A03B               	btfss	___flmul@prod^0,0,c
  6565  002316  EF8F  F011         	goto	u3981
  6566  00231A  EF91  F011         	goto	u3980
  6567  00231E                     u3981:
  6568  00231E  EF93  F011         	goto	l1396
  6569  002322                     u3980:
  6570  002322  EF86  F011         	goto	l4257
  6571  002326                     l1396:
  6572  002326  5039               	movf	___flmul@aexp^0,w,c
  6573  002328  B4D8               	btfsc	status,2,c
  6574  00232A  EF99  F011         	goto	u3991
  6575  00232E  EF9B  F011         	goto	u3990
  6576  002332                     u3991:
  6577  002332  EFBF  F011         	goto	l4269
  6578  002336                     u3990:
  6579  002336  0E01               	movlw	1
  6580  002338  263B               	addwf	___flmul@prod^0,f,c
  6581  00233A  0E00               	movlw	0
  6582  00233C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6583  00233E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6584  002340  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6585  002342  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6586  002344  EFA6  F011         	goto	u4001
  6587  002348  EFA8  F011         	goto	u4000
  6588  00234C                     u4001:
  6589  00234C  EFBF  F011         	goto	l4269
  6590  002350                     u4000:
  6591  002350  C03B  F030         	movff	___flmul@prod,??___flmul
  6592  002354  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6593  002358  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6594  00235C  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6595  002360  3433               	rlcf	(??___flmul+3)^0,w,c
  6596  002362  3233               	rrcf	(??___flmul+3)^0,f,c
  6597  002364  3232               	rrcf	(??___flmul+2)^0,f,c
  6598  002366  3231               	rrcf	(??___flmul+1)^0,f,c
  6599  002368  3230               	rrcf	??___flmul^0,f,c
  6600  00236A  C030  F03B         	movff	??___flmul,___flmul@prod
  6601  00236E  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6602  002372  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6603  002376  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6604  00237A  4A3F               	infsnz	___flmul@temp^0,f,c
  6605  00237C  2A40               	incf	(___flmul@temp+1)^0,f,c
  6606  00237E                     l4269:
  6607  00237E  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6608  002380  EFCA  F011         	goto	u4011
  6609  002384  5040               	movf	(___flmul@temp+1)^0,w,c
  6610  002386  E108               	bnz	u4010
  6611  002388  283F               	incf	___flmul@temp^0,w,c
  6612  00238A  A0D8               	btfss	status,0,c
  6613  00238C  EFCA  F011         	goto	u4011
  6614  002390  EFCC  F011         	goto	u4010
  6615  002394                     u4011:
  6616  002394  EFD6  F011         	goto	l4273
  6617  002398                     u4010:
  6618  002398  0E00               	movlw	0
  6619  00239A  6E3B               	movwf	___flmul@prod^0,c
  6620  00239C  0E00               	movlw	0
  6621  00239E  6E3C               	movwf	(___flmul@prod+1)^0,c
  6622  0023A0  0E80               	movlw	128
  6623  0023A2  6E3D               	movwf	(___flmul@prod+2)^0,c
  6624  0023A4  0E7F               	movlw	127
  6625  0023A6  6E3E               	movwf	(___flmul@prod+3)^0,c
  6626  0023A8  EF04  F012         	goto	l4285
  6627  0023AC                     l4273:
  6628  0023AC  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6629  0023AE  EFE3  F011         	goto	u4020
  6630  0023B2  5040               	movf	(___flmul@temp+1)^0,w,c
  6631  0023B4  E106               	bnz	u4021
  6632  0023B6  043F               	decf	___flmul@temp^0,w,c
  6633  0023B8  B0D8               	btfsc	status,0,c
  6634  0023BA  EFE1  F011         	goto	u4021
  6635  0023BE  EFE3  F011         	goto	u4020
  6636  0023C2                     u4021:
  6637  0023C2  EFEF  F011         	goto	l1404
  6638  0023C6                     u4020:
  6639  0023C6  0E00               	movlw	0
  6640  0023C8  6E3B               	movwf	___flmul@prod^0,c
  6641  0023CA  0E00               	movlw	0
  6642  0023CC  6E3C               	movwf	(___flmul@prod+1)^0,c
  6643  0023CE  0E00               	movlw	0
  6644  0023D0  6E3D               	movwf	(___flmul@prod+2)^0,c
  6645  0023D2  0E00               	movlw	0
  6646  0023D4  6E3E               	movwf	(___flmul@prod+3)^0,c
  6647  0023D6  0E00               	movlw	0
  6648  0023D8  6E34               	movwf	___flmul@sign^0,c
  6649  0023DA  EF04  F012         	goto	l4285
  6650  0023DE                     l1404:
  6651  0023DE  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6652  0023E2  0EFF               	movlw	255
  6653  0023E4  163B               	andwf	___flmul@prod^0,f,c
  6654  0023E6  0EFF               	movlw	255
  6655  0023E8  163C               	andwf	(___flmul@prod+1)^0,f,c
  6656  0023EA  0E7F               	movlw	127
  6657  0023EC  163D               	andwf	(___flmul@prod+2)^0,f,c
  6658  0023EE  0E00               	movlw	0
  6659  0023F0  163E               	andwf	(___flmul@prod+3)^0,f,c
  6660  0023F2  A03A               	btfss	___flmul@bexp^0,0,c
  6661  0023F4  EFFE  F011         	goto	u4031
  6662  0023F8  EF00  F012         	goto	u4030
  6663  0023FC                     u4031:
  6664  0023FC  EF01  F012         	goto	l4283
  6665  002400                     u4030:
  6666  002400  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6667  002402                     l4283:
  6668  002402  90D8               	bcf	status,0,c
  6669  002404  303A               	rrcf	___flmul@bexp^0,w,c
  6670  002406  6E3E               	movwf	(___flmul@prod+3)^0,c
  6671  002408                     l4285:
  6672  002408  5034               	movf	___flmul@sign^0,w,c
  6673  00240A  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6674  00240C  C03B  F028         	movff	___flmul@prod,?___flmul
  6675  002410  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6676  002414  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6677  002418  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6678  00241C                     l1391:
  6679  00241C  0012               	return		;funcret
  6680  00241E                     __end_of___flmul:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function ___flge *****************
  6684 ;; Defined at:
  6685 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  ff1             4    0[COMRAM] unsigned char 
  6688 ;;  ff2             4    4[COMRAM] unsigned char 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;		None               void
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6700 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;Total ram usage:       12 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; Hardware stack levels required when called: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_roundf
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text24
  6715  004AC4                     __ptext24:
  6716                           	callstack 0
  6717  004AC4                     ___flge:
  6718                           	callstack 25
  6719  004AC4  0E00               	movlw	0
  6720  004AC6  1401               	andwf	___flge@ff1^0,w,c
  6721  004AC8  6E09               	movwf	??___flge^0,c
  6722  004ACA  0E00               	movlw	0
  6723  004ACC  1402               	andwf	(___flge@ff1+1)^0,w,c
  6724  004ACE  6E0A               	movwf	(??___flge+1)^0,c
  6725  004AD0  0E80               	movlw	128
  6726  004AD2  1403               	andwf	(___flge@ff1+2)^0,w,c
  6727  004AD4  6E0B               	movwf	(??___flge+2)^0,c
  6728  004AD6  0E7F               	movlw	127
  6729  004AD8  1404               	andwf	(___flge@ff1+3)^0,w,c
  6730  004ADA  6E0C               	movwf	(??___flge+3)^0,c
  6731  004ADC  5009               	movf	??___flge^0,w,c
  6732  004ADE  100A               	iorwf	(??___flge+1)^0,w,c
  6733  004AE0  100B               	iorwf	(??___flge+2)^0,w,c
  6734  004AE2  100C               	iorwf	(??___flge+3)^0,w,c
  6735  004AE4  A4D8               	btfss	status,2,c
  6736  004AE6  EF77  F025         	goto	u4041
  6737  004AEA  EF79  F025         	goto	u4040
  6738  004AEE                     u4041:
  6739  004AEE  EF81  F025         	goto	l4301
  6740  004AF2                     u4040:
  6741  004AF2  0E00               	movlw	0
  6742  004AF4  6E01               	movwf	___flge@ff1^0,c
  6743  004AF6  0E00               	movlw	0
  6744  004AF8  6E02               	movwf	(___flge@ff1+1)^0,c
  6745  004AFA  0E00               	movlw	0
  6746  004AFC  6E03               	movwf	(___flge@ff1+2)^0,c
  6747  004AFE  0E00               	movlw	0
  6748  004B00  6E04               	movwf	(___flge@ff1+3)^0,c
  6749  004B02                     l4301:
  6750  004B02  0E00               	movlw	0
  6751  004B04  1405               	andwf	___flge@ff2^0,w,c
  6752  004B06  6E09               	movwf	??___flge^0,c
  6753  004B08  0E00               	movlw	0
  6754  004B0A  1406               	andwf	(___flge@ff2+1)^0,w,c
  6755  004B0C  6E0A               	movwf	(??___flge+1)^0,c
  6756  004B0E  0E80               	movlw	128
  6757  004B10  1407               	andwf	(___flge@ff2+2)^0,w,c
  6758  004B12  6E0B               	movwf	(??___flge+2)^0,c
  6759  004B14  0E7F               	movlw	127
  6760  004B16  1408               	andwf	(___flge@ff2+3)^0,w,c
  6761  004B18  6E0C               	movwf	(??___flge+3)^0,c
  6762  004B1A  5009               	movf	??___flge^0,w,c
  6763  004B1C  100A               	iorwf	(??___flge+1)^0,w,c
  6764  004B1E  100B               	iorwf	(??___flge+2)^0,w,c
  6765  004B20  100C               	iorwf	(??___flge+3)^0,w,c
  6766  004B22  A4D8               	btfss	status,2,c
  6767  004B24  EF96  F025         	goto	u4051
  6768  004B28  EF98  F025         	goto	u4050
  6769  004B2C                     u4051:
  6770  004B2C  EFA0  F025         	goto	l4305
  6771  004B30                     u4050:
  6772  004B30  0E00               	movlw	0
  6773  004B32  6E05               	movwf	___flge@ff2^0,c
  6774  004B34  0E00               	movlw	0
  6775  004B36  6E06               	movwf	(___flge@ff2+1)^0,c
  6776  004B38  0E00               	movlw	0
  6777  004B3A  6E07               	movwf	(___flge@ff2+2)^0,c
  6778  004B3C  0E00               	movlw	0
  6779  004B3E  6E08               	movwf	(___flge@ff2+3)^0,c
  6780  004B40                     l4305:
  6781  004B40  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6782  004B42  EFA5  F025         	goto	u4061
  6783  004B46  EFA7  F025         	goto	u4060
  6784  004B4A                     u4061:
  6785  004B4A  EFB0  F025         	goto	l4309
  6786  004B4E                     u4060:
  6787  004B4E  6C01               	negf	___flge@ff1^0,c
  6788  004B50  1E02               	comf	(___flge@ff1+1)^0,f,c
  6789  004B52  B0D8               	btfsc	status,0,c
  6790  004B54  2A02               	incf	(___flge@ff1+1)^0,f,c
  6791  004B56  1E03               	comf	(___flge@ff1+2)^0,f,c
  6792  004B58  B0D8               	btfsc	status,0,c
  6793  004B5A  2A03               	incf	(___flge@ff1+2)^0,f,c
  6794  004B5C  0E80               	movlw	128
  6795  004B5E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6796  004B60                     l4309:
  6797  004B60  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6798  004B62  EFB5  F025         	goto	u4071
  6799  004B66  EFB7  F025         	goto	u4070
  6800  004B6A                     u4071:
  6801  004B6A  EFC0  F025         	goto	l1038
  6802  004B6E                     u4070:
  6803  004B6E  6C05               	negf	___flge@ff2^0,c
  6804  004B70  1E06               	comf	(___flge@ff2+1)^0,f,c
  6805  004B72  B0D8               	btfsc	status,0,c
  6806  004B74  2A06               	incf	(___flge@ff2+1)^0,f,c
  6807  004B76  1E07               	comf	(___flge@ff2+2)^0,f,c
  6808  004B78  B0D8               	btfsc	status,0,c
  6809  004B7A  2A07               	incf	(___flge@ff2+2)^0,f,c
  6810  004B7C  0E80               	movlw	128
  6811  004B7E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6812  004B80                     l1038:
  6813  004B80  0E00               	movlw	0
  6814  004B82  1A01               	xorwf	___flge@ff1^0,f,c
  6815  004B84  0E00               	movlw	0
  6816  004B86  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6817  004B88  0E00               	movlw	0
  6818  004B8A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6819  004B8C  0E80               	movlw	128
  6820  004B8E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6821  004B90  0E00               	movlw	0
  6822  004B92  1A05               	xorwf	___flge@ff2^0,f,c
  6823  004B94  0E00               	movlw	0
  6824  004B96  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6825  004B98  0E00               	movlw	0
  6826  004B9A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6827  004B9C  0E80               	movlw	128
  6828  004B9E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6829  004BA0  5005               	movf	___flge@ff2^0,w,c
  6830  004BA2  5C01               	subwf	___flge@ff1^0,w,c
  6831  004BA4  5006               	movf	(___flge@ff2+1)^0,w,c
  6832  004BA6  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6833  004BA8  5007               	movf	(___flge@ff2+2)^0,w,c
  6834  004BAA  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6835  004BAC  5008               	movf	(___flge@ff2+3)^0,w,c
  6836  004BAE  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6837  004BB0  B0D8               	btfsc	status,0,c
  6838  004BB2  EFDD  F025         	goto	u4081
  6839  004BB6  EFDF  F025         	goto	u4080
  6840  004BBA                     u4081:
  6841  004BBA  EFE2  F025         	goto	l4315
  6842  004BBE                     u4080:
  6843  004BBE  90D8               	bcf	status,0,c
  6844  004BC0  EFE3  F025         	goto	l1043
  6845  004BC4                     l4315:
  6846  004BC4  80D8               	bsf	status,0,c
  6847  004BC6                     l1043:
  6848  004BC6  0012               	return		;funcret
  6849  004BC8                     __end_of___flge:
  6850                           	callstack 0
  6851                           
  6852 ;; *************** function ___fltol *****************
  6853 ;; Defined at:
  6854 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  f1              4   90[COMRAM] unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  exp1            1    5[BANK0 ] unsigned char 
  6859 ;;  sign1           1    4[BANK0 ] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  4   90[COMRAM] long 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;Total ram usage:       10 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; Hardware stack levels required when called: 1
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		_lroundf
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text25
  6884  0049BC                     __ptext25:
  6885                           	callstack 0
  6886  0049BC                     ___fltol:
  6887                           	callstack 26
  6888  0049BC  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6889  0049BE  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6890  0049C0  0100               	movlb	0	; () banked
  6891  0049C2  6F65               	movwf	___fltol@exp1& (0+255),b
  6892  0049C4  5165               	movf	___fltol@exp1& (0+255),w,b
  6893  0049C6  A4D8               	btfss	status,2,c
  6894  0049C8  EFE8  F024         	goto	u4141
  6895  0049CC  EFEA  F024         	goto	u4140
  6896  0049D0                     u4141:
  6897  0049D0  EFF4  F024         	goto	l4403
  6898  0049D4                     u4140:
  6899  0049D4                     l4399:
  6900                           
  6901                           ; BSR set to: 0
  6902  0049D4  0E00               	movlw	0
  6903  0049D6  6E5B               	movwf	?___fltol^0,c
  6904  0049D8  0E00               	movlw	0
  6905  0049DA  6E5C               	movwf	(?___fltol+1)^0,c
  6906  0049DC  0E00               	movlw	0
  6907  0049DE  6E5D               	movwf	(?___fltol+2)^0,c
  6908  0049E0  0E00               	movlw	0
  6909  0049E2  6E5E               	movwf	(?___fltol+3)^0,c
  6910  0049E4  EF61  F025         	goto	l1070
  6911  0049E8                     l4403:
  6912                           
  6913                           ; BSR set to: 0
  6914  0049E8  C05B  F060         	movff	___fltol@f1,??___fltol
  6915  0049EC  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6916  0049F0  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6917  0049F4  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6918  0049F8  0E20               	movlw	32
  6919  0049FA  EF04  F025         	goto	u4150
  6920  0049FE                     u4155:
  6921  0049FE  90D8               	bcf	status,0,c
  6922  004A00  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6923  004A02  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6924  004A04  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6925  004A06  3360               	rrcf	??___fltol& (0+255),f,b
  6926  004A08                     u4150:
  6927  004A08  2EE8               	decfsz	wreg,f,c
  6928  004A0A  EFFF  F024         	goto	u4155
  6929  004A0E  5160               	movf	??___fltol& (0+255),w,b
  6930  004A10  6F64               	movwf	___fltol@sign1& (0+255),b
  6931  004A12                     
  6932                           ; BSR set to: 0
  6933  004A12  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6934  004A14                     
  6935                           ; BSR set to: 0
  6936  004A14  0EFF               	movlw	255
  6937  004A16  165B               	andwf	___fltol@f1^0,f,c
  6938  004A18  0EFF               	movlw	255
  6939  004A1A  165C               	andwf	(___fltol@f1+1)^0,f,c
  6940  004A1C  0EFF               	movlw	255
  6941  004A1E  165D               	andwf	(___fltol@f1+2)^0,f,c
  6942  004A20  0E00               	movlw	0
  6943  004A22  165E               	andwf	(___fltol@f1+3)^0,f,c
  6944  004A24                     
  6945                           ; BSR set to: 0
  6946  004A24  0E96               	movlw	150
  6947  004A26  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6948  004A28                     
  6949                           ; BSR set to: 0
  6950  004A28  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6951  004A2A  EF1B  F025         	goto	u4160
  6952  004A2E  EF19  F025         	goto	u4161
  6953  004A32                     u4161:
  6954  004A32  EF31  F025         	goto	l4423
  6955  004A36                     u4160:
  6956  004A36                     
  6957                           ; BSR set to: 0
  6958  004A36  5165               	movf	___fltol@exp1& (0+255),w,b
  6959  004A38  0A80               	xorlw	128
  6960  004A3A  0F97               	addlw	151
  6961  004A3C  B0D8               	btfsc	status,0,c
  6962  004A3E  EF23  F025         	goto	u4171
  6963  004A42  EF25  F025         	goto	u4170
  6964  004A46                     u4171:
  6965  004A46  EF27  F025         	goto	l4419
  6966  004A4A                     u4170:
  6967  004A4A  EFEA  F024         	goto	l4399
  6968  004A4E                     l4419:
  6969                           
  6970                           ; BSR set to: 0
  6971  004A4E  90D8               	bcf	status,0,c
  6972  004A50  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6973  004A52  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6974  004A54  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6975  004A56  325B               	rrcf	___fltol@f1^0,f,c
  6976  004A58                     
  6977                           ; BSR set to: 0
  6978  004A58  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6979  004A5A  EF27  F025         	goto	l4419
  6980  004A5E  EF49  F025         	goto	l4433
  6981  004A62                     l4423:
  6982                           
  6983                           ; BSR set to: 0
  6984  004A62  0E1F               	movlw	31
  6985  004A64  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6986  004A66  EF37  F025         	goto	u4181
  6987  004A6A  EF39  F025         	goto	u4180
  6988  004A6E                     u4181:
  6989  004A6E  EF41  F025         	goto	l4431
  6990  004A72                     u4180:
  6991  004A72  EFEA  F024         	goto	l4399
  6992  004A76                     l4429:
  6993                           
  6994                           ; BSR set to: 0
  6995  004A76  90D8               	bcf	status,0,c
  6996  004A78  365B               	rlcf	___fltol@f1^0,f,c
  6997  004A7A  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6998  004A7C  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6999  004A7E  365E               	rlcf	(___fltol@f1+3)^0,f,c
  7000  004A80  0765               	decf	___fltol@exp1& (0+255),f,b
  7001  004A82                     l4431:
  7002                           
  7003                           ; BSR set to: 0
  7004  004A82  5165               	movf	___fltol@exp1& (0+255),w,b
  7005  004A84  A4D8               	btfss	status,2,c
  7006  004A86  EF47  F025         	goto	u4191
  7007  004A8A  EF49  F025         	goto	u4190
  7008  004A8E                     u4191:
  7009  004A8E  EF3B  F025         	goto	l4429
  7010  004A92                     u4190:
  7011  004A92                     l4433:
  7012                           
  7013                           ; BSR set to: 0
  7014  004A92  5164               	movf	___fltol@sign1& (0+255),w,b
  7015  004A94  B4D8               	btfsc	status,2,c
  7016  004A96  EF4F  F025         	goto	u4201
  7017  004A9A  EF51  F025         	goto	u4200
  7018  004A9E                     u4201:
  7019  004A9E  EF59  F025         	goto	l4437
  7020  004AA2                     u4200:
  7021  004AA2                     
  7022                           ; BSR set to: 0
  7023  004AA2  1E5E               	comf	(___fltol@f1+3)^0,f,c
  7024  004AA4  1E5D               	comf	(___fltol@f1+2)^0,f,c
  7025  004AA6  1E5C               	comf	(___fltol@f1+1)^0,f,c
  7026  004AA8  6C5B               	negf	___fltol@f1^0,c
  7027  004AAA  0E00               	movlw	0
  7028  004AAC  225C               	addwfc	(___fltol@f1+1)^0,f,c
  7029  004AAE  225D               	addwfc	(___fltol@f1+2)^0,f,c
  7030  004AB0  225E               	addwfc	(___fltol@f1+3)^0,f,c
  7031  004AB2                     l4437:
  7032                           
  7033                           ; BSR set to: 0
  7034  004AB2  C05B  F05B         	movff	___fltol@f1,?___fltol
  7035  004AB6  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  7036  004ABA  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  7037  004ABE  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  7038  004AC2                     l1070:
  7039                           
  7040                           ; BSR set to: 0
  7041  004AC2  0012               	return		;funcret
  7042  004AC4                     __end_of___fltol:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _color_read_Clear *****************
  7046 ;; Defined at:
  7047 ;;		line 133 in file "color.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  tmp             2    9[COMRAM] unsigned int 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    4[COMRAM] unsigned int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;Total ram usage:        7 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 3
  7068 ;; This function calls:
  7069 ;;		_I2C_2_Master_Read
  7070 ;;		_I2C_2_Master_RepStart
  7071 ;;		_I2C_2_Master_Start
  7072 ;;		_I2C_2_Master_Stop
  7073 ;;		_I2C_2_Master_Write
  7074 ;; This function is called by:
  7075 ;;		_read_color
  7076 ;;		_calibrate_white
  7077 ;;		_amb_light_measure
  7078 ;;		_distance_measure
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	text26
  7083  005512                     __ptext26:
  7084                           	callstack 0
  7085  005512                     _color_read_Clear:
  7086                           	callstack 24
  7087  005512                     
  7088                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  7089  005512  EC4B  F02D         	call	_I2C_2_Master_Start	;wreg free
  7090                           
  7091                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  7092  005516  0E52               	movlw	82
  7093  005518  EC35  F02D         	call	_I2C_2_Master_Write
  7094                           
  7095                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  7096  00551C  0EB4               	movlw	180
  7097  00551E  EC35  F02D         	call	_I2C_2_Master_Write
  7098                           
  7099                           ;color.c: 139:  I2C_2_Master_RepStart();
  7100  005522  EC41  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  7101                           
  7102                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  7103  005526  0E53               	movlw	83
  7104  005528  EC35  F02D         	call	_I2C_2_Master_Write
  7105                           
  7106                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  7107  00552C  0E01               	movlw	1
  7108  00552E  ECF6  F02A         	call	_I2C_2_Master_Read
  7109  005532  6E07               	movwf	??_color_read_Clear^0,c
  7110  005534  5007               	movf	??_color_read_Clear^0,w,c
  7111  005536  6E0A               	movwf	color_read_Clear@tmp^0,c
  7112  005538  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7113                           
  7114                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7115  00553A  0E00               	movlw	0
  7116  00553C  ECF6  F02A         	call	_I2C_2_Master_Read
  7117  005540  6E07               	movwf	??_color_read_Clear^0,c
  7118  005542  5007               	movf	??_color_read_Clear^0,w,c
  7119  005544  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7120  005546  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7121  005548  500A               	movf	color_read_Clear@tmp^0,w,c
  7122  00554A  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7123  00554C  6E0A               	movwf	color_read_Clear@tmp^0,c
  7124  00554E  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7125  005550  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7126  005552  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7127                           
  7128                           ;color.c: 143:  I2C_2_Master_Stop();
  7129  005554  EC46  F02D         	call	_I2C_2_Master_Stop	;wreg free
  7130  005558                     
  7131                           ;color.c: 144:  return tmp;
  7132  005558  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7133  00555C  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7134  005560  0012               	return		;funcret
  7135  005562                     __end_of_color_read_Clear:
  7136                           	callstack 0
  7137                           
  7138 ;; *************** function _I2C_2_Master_RepStart *****************
  7139 ;; Defined at:
  7140 ;;		line 33 in file "i2c.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 2
  7161 ;; This function calls:
  7162 ;;		_I2C_2_Master_Idle
  7163 ;; This function is called by:
  7164 ;;		_color_read_Red
  7165 ;;		_color_read_Blue
  7166 ;;		_color_read_Green
  7167 ;;		_color_read_Clear
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text27
  7172  005A82                     __ptext27:
  7173                           	callstack 0
  7174  005A82                     _I2C_2_Master_RepStart:
  7175                           	callstack 24
  7176  005A82                     
  7177                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7178  005A82  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7179  005A86                     
  7180                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7181  005A86  010E               	movlb	14	; () banked
  7182  005A88  83DA               	bsf	218,1,b	;volatile
  7183  005A8A                     
  7184                           ; BSR set to: 14
  7185  005A8A  0012               	return		;funcret
  7186  005A8C                     __end_of_I2C_2_Master_RepStart:
  7187                           	callstack 0
  7188                           
  7189 ;; *************** function _I2C_2_Master_Read *****************
  7190 ;; Defined at:
  7191 ;;		line 51 in file "i2c.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  ack             1    wreg     unsigned char 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  ack             1    2[COMRAM] unsigned char 
  7196 ;;  tmp             1    3[COMRAM] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      unsigned char 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;Total ram usage:        3 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 2
  7213 ;; This function calls:
  7214 ;;		_I2C_2_Master_Idle
  7215 ;; This function is called by:
  7216 ;;		_color_read_Red
  7217 ;;		_color_read_Blue
  7218 ;;		_color_read_Green
  7219 ;;		_color_read_Clear
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text28
  7224  0055EC                     __ptext28:
  7225                           	callstack 0
  7226  0055EC                     _I2C_2_Master_Read:
  7227                           	callstack 24
  7228                           
  7229                           ; BSR set to: 14
  7230                           ;incstack = 0
  7231                           ;I2C_2_Master_Read@ack stored from wreg
  7232  0055EC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7233  0055EE                     
  7234                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7235  0055EE  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7236  0055F2                     
  7237                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7238  0055F2  010E               	movlb	14	; () banked
  7239  0055F4  87DA               	bsf	218,3,b	;volatile
  7240                           
  7241                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7242  0055F6  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7243  0055FA                     
  7244                           ;i2c.c: 57:   tmp = SSP2BUF;
  7245  0055FA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7246                           
  7247                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7248  0055FE  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7249  005602                     
  7250                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7251  005602  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7252  005604  B4D8               	btfsc	status,2,c
  7253  005606  EF07  F02B         	goto	u3781
  7254  00560A  EF0B  F02B         	goto	u3780
  7255  00560E                     u3781:
  7256  00560E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7257  005610  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7258  005612  EF0C  F02B         	goto	u3798
  7259  005616                     u3780:
  7260  005616  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7261  005618                     u3798:
  7262  005618  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7263  00561A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7264  00561C  010E               	movlb	14	; () banked
  7265  00561E  51DA               	movf	218,w,b	;volatile
  7266  005620  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7267  005622  0BDF               	andlw	-33
  7268  005624  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7269  005626  6FDA               	movwf	218,b	;volatile
  7270  005628                     
  7271                           ; BSR set to: 14
  7272                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7273  005628  89DA               	bsf	218,4,b	;volatile
  7274  00562A                     
  7275                           ; BSR set to: 14
  7276                           ;i2c.c: 61:   return tmp;
  7277  00562A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7278  00562C                     
  7279                           ; BSR set to: 14
  7280  00562C  0012               	return		;funcret
  7281  00562E                     __end_of_I2C_2_Master_Read:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function ___xxtofl *****************
  7285 ;; Defined at:
  7286 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  sign            1    wreg     unsigned char 
  7289 ;;  val             4    0[COMRAM] long 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  sign            1    8[COMRAM] unsigned char 
  7292 ;;  arg             4   10[COMRAM] unsigned long 
  7293 ;;  exp             1    9[COMRAM] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  4    0[COMRAM] unsigned char 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7305 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7306 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;Total ram usage:       14 bytes
  7308 ;; Hardware stack levels used: 1
  7309 ;; Hardware stack levels required when called: 1
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_detect_color
  7314 ;;		_amb_light_measure
  7315 ;;		_distance_measure
  7316 ;;		_check_color_reading
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text29
  7321  003DDA                     __ptext29:
  7322                           	callstack 0
  7323  003DDA                     ___xxtofl:
  7324                           	callstack 27
  7325                           
  7326                           ; BSR set to: 14
  7327                           ;incstack = 0
  7328                           ;___xxtofl@sign stored from wreg
  7329  003DDA  6E09               	movwf	___xxtofl@sign^0,c
  7330  003DDC  5009               	movf	___xxtofl@sign^0,w,c
  7331  003DDE  B4D8               	btfsc	status,2,c
  7332  003DE0  EFF4  F01E         	goto	u4951
  7333  003DE4  EFF6  F01E         	goto	u4950
  7334  003DE8                     u4951:
  7335  003DE8  EF18  F01F         	goto	l1428
  7336  003DEC                     u4950:
  7337  003DEC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7338  003DEE  EFFD  F01E         	goto	u4960
  7339  003DF2  EFFB  F01E         	goto	u4961
  7340  003DF6                     u4961:
  7341  003DF6  EF18  F01F         	goto	l1428
  7342  003DFA                     u4960:
  7343  003DFA  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7344  003DFE  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7345  003E02  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7346  003E06  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7347  003E0A  1E05               	comf	??___xxtofl^0,f,c
  7348  003E0C  1E06               	comf	(??___xxtofl+1)^0,f,c
  7349  003E0E  1E07               	comf	(??___xxtofl+2)^0,f,c
  7350  003E10  1E08               	comf	(??___xxtofl+3)^0,f,c
  7351  003E12  2A05               	incf	??___xxtofl^0,f,c
  7352  003E14  0E00               	movlw	0
  7353  003E16  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7354  003E18  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7355  003E1A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7356  003E1C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7357  003E20  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7358  003E24  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7359  003E28  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7360  003E2C  EF20  F01F         	goto	l4811
  7361  003E30                     l1428:
  7362  003E30  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7363  003E34  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7364  003E38  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7365  003E3C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7366  003E40                     l4811:
  7367  003E40  5001               	movf	___xxtofl@val^0,w,c
  7368  003E42  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7369  003E44  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7370  003E46  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7371  003E48  A4D8               	btfss	status,2,c
  7372  003E4A  EF29  F01F         	goto	u4971
  7373  003E4E  EF2B  F01F         	goto	u4970
  7374  003E52                     u4971:
  7375  003E52  EF35  F01F         	goto	l4817
  7376  003E56                     u4970:
  7377  003E56  0E00               	movlw	0
  7378  003E58  6E01               	movwf	?___xxtofl^0,c
  7379  003E5A  0E00               	movlw	0
  7380  003E5C  6E02               	movwf	(?___xxtofl+1)^0,c
  7381  003E5E  0E00               	movlw	0
  7382  003E60  6E03               	movwf	(?___xxtofl+2)^0,c
  7383  003E62  0E00               	movlw	0
  7384  003E64  6E04               	movwf	(?___xxtofl+3)^0,c
  7385  003E66  EFC6  F01F         	goto	l1431
  7386  003E6A                     l4817:
  7387  003E6A  0E96               	movlw	150
  7388  003E6C  6E0A               	movwf	___xxtofl@exp^0,c
  7389  003E6E  EF3F  F01F         	goto	l4821
  7390  003E72                     l4819:
  7391  003E72  2A0A               	incf	___xxtofl@exp^0,f,c
  7392  003E74  90D8               	bcf	status,0,c
  7393  003E76  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7394  003E78  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7395  003E7A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7396  003E7C  320B               	rrcf	___xxtofl@arg^0,f,c
  7397  003E7E                     l4821:
  7398  003E7E  0E00               	movlw	0
  7399  003E80  140B               	andwf	___xxtofl@arg^0,w,c
  7400  003E82  6E05               	movwf	??___xxtofl^0,c
  7401  003E84  0E00               	movlw	0
  7402  003E86  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7403  003E88  6E06               	movwf	(??___xxtofl+1)^0,c
  7404  003E8A  0E00               	movlw	0
  7405  003E8C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7406  003E8E  6E07               	movwf	(??___xxtofl+2)^0,c
  7407  003E90  0EFE               	movlw	254
  7408  003E92  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7409  003E94  6E08               	movwf	(??___xxtofl+3)^0,c
  7410  003E96  5005               	movf	??___xxtofl^0,w,c
  7411  003E98  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7412  003E9A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7413  003E9C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7414  003E9E  A4D8               	btfss	status,2,c
  7415  003EA0  EF54  F01F         	goto	u4981
  7416  003EA4  EF56  F01F         	goto	u4980
  7417  003EA8                     u4981:
  7418  003EA8  EF39  F01F         	goto	l4819
  7419  003EAC                     u4980:
  7420  003EAC  EF64  F01F         	goto	l1435
  7421  003EB0                     l4823:
  7422  003EB0  2A0A               	incf	___xxtofl@exp^0,f,c
  7423  003EB2  0E01               	movlw	1
  7424  003EB4  260B               	addwf	___xxtofl@arg^0,f,c
  7425  003EB6  0E00               	movlw	0
  7426  003EB8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7427  003EBA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7428  003EBC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7429  003EBE  90D8               	bcf	status,0,c
  7430  003EC0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7431  003EC2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7432  003EC4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7433  003EC6  320B               	rrcf	___xxtofl@arg^0,f,c
  7434  003EC8                     l1435:
  7435  003EC8  0E00               	movlw	0
  7436  003ECA  140B               	andwf	___xxtofl@arg^0,w,c
  7437  003ECC  6E05               	movwf	??___xxtofl^0,c
  7438  003ECE  0E00               	movlw	0
  7439  003ED0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7440  003ED2  6E06               	movwf	(??___xxtofl+1)^0,c
  7441  003ED4  0E00               	movlw	0
  7442  003ED6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7443  003ED8  6E07               	movwf	(??___xxtofl+2)^0,c
  7444  003EDA  0EFF               	movlw	255
  7445  003EDC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7446  003EDE  6E08               	movwf	(??___xxtofl+3)^0,c
  7447  003EE0  5005               	movf	??___xxtofl^0,w,c
  7448  003EE2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7449  003EE4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7450  003EE6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7451  003EE8  A4D8               	btfss	status,2,c
  7452  003EEA  EF79  F01F         	goto	u4991
  7453  003EEE  EF7B  F01F         	goto	u4990
  7454  003EF2                     u4991:
  7455  003EF2  EF58  F01F         	goto	l4823
  7456  003EF6                     u4990:
  7457  003EF6  EF83  F01F         	goto	l4831
  7458  003EFA                     l4829:
  7459  003EFA  060A               	decf	___xxtofl@exp^0,f,c
  7460  003EFC  90D8               	bcf	status,0,c
  7461  003EFE  360B               	rlcf	___xxtofl@arg^0,f,c
  7462  003F00  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7463  003F02  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7464  003F04  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7465  003F06                     l4831:
  7466  003F06  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7467  003F08  EF88  F01F         	goto	u5001
  7468  003F0C  EF8A  F01F         	goto	u5000
  7469  003F10                     u5001:
  7470  003F10  EF92  F01F         	goto	l1442
  7471  003F14                     u5000:
  7472  003F14  0E02               	movlw	2
  7473  003F16  600A               	cpfslt	___xxtofl@exp^0,c
  7474  003F18  EF90  F01F         	goto	u5011
  7475  003F1C  EF92  F01F         	goto	u5010
  7476  003F20                     u5011:
  7477  003F20  EF7D  F01F         	goto	l4829
  7478  003F24                     u5010:
  7479  003F24                     l1442:
  7480  003F24  B00A               	btfsc	___xxtofl@exp^0,0,c
  7481  003F26  EF97  F01F         	goto	u5021
  7482  003F2A  EF99  F01F         	goto	u5020
  7483  003F2E                     u5021:
  7484  003F2E  EF9A  F01F         	goto	l4837
  7485  003F32                     u5020:
  7486  003F32  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7487  003F34                     l4837:
  7488  003F34  90D8               	bcf	status,0,c
  7489  003F36  320A               	rrcf	___xxtofl@exp^0,f,c
  7490  003F38  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7491  003F3C  6A06               	clrf	(??___xxtofl+1)^0,c
  7492  003F3E  6A07               	clrf	(??___xxtofl+2)^0,c
  7493  003F40  6A08               	clrf	(??___xxtofl+3)^0,c
  7494  003F42  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7495  003F46  6A07               	clrf	(??___xxtofl+2)^0,c
  7496  003F48  6A06               	clrf	(??___xxtofl+1)^0,c
  7497  003F4A  6A05               	clrf	??___xxtofl^0,c
  7498  003F4C  5005               	movf	??___xxtofl^0,w,c
  7499  003F4E  120B               	iorwf	___xxtofl@arg^0,f,c
  7500  003F50  5006               	movf	(??___xxtofl+1)^0,w,c
  7501  003F52  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7502  003F54  5007               	movf	(??___xxtofl+2)^0,w,c
  7503  003F56  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7504  003F58  5008               	movf	(??___xxtofl+3)^0,w,c
  7505  003F5A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7506  003F5C  5009               	movf	___xxtofl@sign^0,w,c
  7507  003F5E  B4D8               	btfsc	status,2,c
  7508  003F60  EFB4  F01F         	goto	u5031
  7509  003F64  EFB6  F01F         	goto	u5030
  7510  003F68                     u5031:
  7511  003F68  EFBE  F01F         	goto	l4847
  7512  003F6C                     u5030:
  7513  003F6C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7514  003F6E  EFBD  F01F         	goto	u5040
  7515  003F72  EFBB  F01F         	goto	u5041
  7516  003F76                     u5041:
  7517  003F76  EFBE  F01F         	goto	l4847
  7518  003F7A                     u5040:
  7519  003F7A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7520  003F7C                     l4847:
  7521  003F7C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7522  003F80  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7523  003F84  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7524  003F88  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7525  003F8C                     l1431:
  7526  003F8C  0012               	return		;funcret
  7527  003F8E                     __end_of___xxtofl:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function ___fldiv *****************
  7531 ;; Defined at:
  7532 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  b               4   14[COMRAM] unsigned char 
  7535 ;;  a               4   18[COMRAM] unsigned char 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  grs             4   33[COMRAM] unsigned long 
  7538 ;;  rem             4   26[COMRAM] unsigned long 
  7539 ;;  new_exp         2   31[COMRAM] short 
  7540 ;;  aexp            1   38[COMRAM] unsigned char 
  7541 ;;  bexp            1   37[COMRAM] unsigned char 
  7542 ;;  sign            1   30[COMRAM] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  4   14[COMRAM] unsigned char 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7552 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;Total ram usage:       25 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_detect_color
  7563 ;;		_amb_light_measure
  7564 ;;		_check_color_reading
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text30
  7569  0027CC                     __ptext30:
  7570                           	callstack 0
  7571  0027CC                     ___fldiv:
  7572                           	callstack 27
  7573  0027CC  5012               	movf	(___fldiv@b+3)^0,w,c
  7574  0027CE  0B80               	andlw	128
  7575  0027D0  6E1F               	movwf	___fldiv@sign^0,c
  7576  0027D2  5012               	movf	(___fldiv@b+3)^0,w,c
  7577  0027D4  2412               	addwf	(___fldiv@b+3)^0,w,c
  7578  0027D6  6E26               	movwf	___fldiv@bexp^0,c
  7579  0027D8  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7580  0027DA  EFF1  F013         	goto	u4721
  7581  0027DE  EFF3  F013         	goto	u4720
  7582  0027E2                     u4721:
  7583  0027E2  EFF4  F013         	goto	l4673
  7584  0027E6                     u4720:
  7585  0027E6  8026               	bsf	___fldiv@bexp^0,0,c
  7586  0027E8                     l4673:
  7587  0027E8  5026               	movf	___fldiv@bexp^0,w,c
  7588  0027EA  B4D8               	btfsc	status,2,c
  7589  0027EC  EFFA  F013         	goto	u4731
  7590  0027F0  EFFC  F013         	goto	u4730
  7591  0027F4                     u4731:
  7592  0027F4  EF11  F014         	goto	l4683
  7593  0027F8                     u4730:
  7594  0027F8  2826               	incf	___fldiv@bexp^0,w,c
  7595  0027FA  A4D8               	btfss	status,2,c
  7596  0027FC  EF02  F014         	goto	u4741
  7597  002800  EF04  F014         	goto	u4740
  7598  002804                     u4741:
  7599  002804  EF0C  F014         	goto	l4679
  7600  002808                     u4740:
  7601  002808  0E00               	movlw	0
  7602  00280A  6E0F               	movwf	___fldiv@b^0,c
  7603  00280C  0E00               	movlw	0
  7604  00280E  6E10               	movwf	(___fldiv@b+1)^0,c
  7605  002810  0E00               	movlw	0
  7606  002812  6E11               	movwf	(___fldiv@b+2)^0,c
  7607  002814  0E00               	movlw	0
  7608  002816  6E12               	movwf	(___fldiv@b+3)^0,c
  7609  002818                     l4679:
  7610  002818  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7611  00281A  0E00               	movlw	0
  7612  00281C  6E12               	movwf	(___fldiv@b+3)^0,c
  7613  00281E  EF19  F014         	goto	l4685
  7614  002822                     l4683:
  7615  002822  0E00               	movlw	0
  7616  002824  6E0F               	movwf	___fldiv@b^0,c
  7617  002826  0E00               	movlw	0
  7618  002828  6E10               	movwf	(___fldiv@b+1)^0,c
  7619  00282A  0E00               	movlw	0
  7620  00282C  6E11               	movwf	(___fldiv@b+2)^0,c
  7621  00282E  0E00               	movlw	0
  7622  002830  6E12               	movwf	(___fldiv@b+3)^0,c
  7623  002832                     l4685:
  7624  002832  5016               	movf	(___fldiv@a+3)^0,w,c
  7625  002834  0B80               	andlw	128
  7626  002836  1A1F               	xorwf	___fldiv@sign^0,f,c
  7627  002838  5016               	movf	(___fldiv@a+3)^0,w,c
  7628  00283A  2416               	addwf	(___fldiv@a+3)^0,w,c
  7629  00283C  6E27               	movwf	___fldiv@aexp^0,c
  7630  00283E  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7631  002840  EF24  F014         	goto	u4751
  7632  002844  EF26  F014         	goto	u4750
  7633  002848                     u4751:
  7634  002848  EF27  F014         	goto	l4693
  7635  00284C                     u4750:
  7636  00284C  8027               	bsf	___fldiv@aexp^0,0,c
  7637  00284E                     l4693:
  7638  00284E  5027               	movf	___fldiv@aexp^0,w,c
  7639  002850  B4D8               	btfsc	status,2,c
  7640  002852  EF2D  F014         	goto	u4761
  7641  002856  EF2F  F014         	goto	u4760
  7642  00285A                     u4761:
  7643  00285A  EF44  F014         	goto	l4703
  7644  00285E                     u4760:
  7645  00285E  2827               	incf	___fldiv@aexp^0,w,c
  7646  002860  A4D8               	btfss	status,2,c
  7647  002862  EF35  F014         	goto	u4771
  7648  002866  EF37  F014         	goto	u4770
  7649  00286A                     u4771:
  7650  00286A  EF3F  F014         	goto	l4699
  7651  00286E                     u4770:
  7652  00286E  0E00               	movlw	0
  7653  002870  6E13               	movwf	___fldiv@a^0,c
  7654  002872  0E00               	movlw	0
  7655  002874  6E14               	movwf	(___fldiv@a+1)^0,c
  7656  002876  0E00               	movlw	0
  7657  002878  6E15               	movwf	(___fldiv@a+2)^0,c
  7658  00287A  0E00               	movlw	0
  7659  00287C  6E16               	movwf	(___fldiv@a+3)^0,c
  7660  00287E                     l4699:
  7661  00287E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7662  002880  0E00               	movlw	0
  7663  002882  6E16               	movwf	(___fldiv@a+3)^0,c
  7664  002884  EF4C  F014         	goto	l4705
  7665  002888                     l4703:
  7666  002888  0E00               	movlw	0
  7667  00288A  6E13               	movwf	___fldiv@a^0,c
  7668  00288C  0E00               	movlw	0
  7669  00288E  6E14               	movwf	(___fldiv@a+1)^0,c
  7670  002890  0E00               	movlw	0
  7671  002892  6E15               	movwf	(___fldiv@a+2)^0,c
  7672  002894  0E00               	movlw	0
  7673  002896  6E16               	movwf	(___fldiv@a+3)^0,c
  7674  002898                     l4705:
  7675  002898  5013               	movf	___fldiv@a^0,w,c
  7676  00289A  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7677  00289C  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7678  00289E  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7679  0028A0  A4D8               	btfss	status,2,c
  7680  0028A2  EF55  F014         	goto	u4781
  7681  0028A6  EF57  F014         	goto	u4780
  7682  0028AA                     u4781:
  7683  0028AA  EF6F  F014         	goto	l4717
  7684  0028AE                     u4780:
  7685  0028AE  0E00               	movlw	0
  7686  0028B0  6E0F               	movwf	___fldiv@b^0,c
  7687  0028B2  0E00               	movlw	0
  7688  0028B4  6E10               	movwf	(___fldiv@b+1)^0,c
  7689  0028B6  0E00               	movlw	0
  7690  0028B8  6E11               	movwf	(___fldiv@b+2)^0,c
  7691  0028BA  0E00               	movlw	0
  7692  0028BC  6E12               	movwf	(___fldiv@b+3)^0,c
  7693  0028BE  0E80               	movlw	128
  7694  0028C0  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7695  0028C2  0E7F               	movlw	127
  7696  0028C4  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7697  0028C6                     l4711:
  7698  0028C6  501F               	movf	___fldiv@sign^0,w,c
  7699  0028C8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7700  0028CA  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7701  0028CE  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7702  0028D2  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7703  0028D6  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7704  0028DA  EFB2  F015         	goto	l1355
  7705  0028DE                     l4717:
  7706  0028DE  5026               	movf	___fldiv@bexp^0,w,c
  7707  0028E0  A4D8               	btfss	status,2,c
  7708  0028E2  EF75  F014         	goto	u4791
  7709  0028E6  EF77  F014         	goto	u4790
  7710  0028EA                     u4791:
  7711  0028EA  EF81  F014         	goto	l4725
  7712  0028EE                     u4790:
  7713  0028EE  0E00               	movlw	0
  7714  0028F0  6E0F               	movwf	?___fldiv^0,c
  7715  0028F2  0E00               	movlw	0
  7716  0028F4  6E10               	movwf	(?___fldiv+1)^0,c
  7717  0028F6  0E00               	movlw	0
  7718  0028F8  6E11               	movwf	(?___fldiv+2)^0,c
  7719  0028FA  0E00               	movlw	0
  7720  0028FC  6E12               	movwf	(?___fldiv+3)^0,c
  7721  0028FE  EFB2  F015         	goto	l1355
  7722  002902                     l4725:
  7723  002902  5027               	movf	___fldiv@aexp^0,w,c
  7724  002904  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7725  002908  6A18               	clrf	(??___fldiv+1)^0,c
  7726  00290A  5E17               	subwf	??___fldiv^0,f,c
  7727  00290C  0E00               	movlw	0
  7728  00290E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7729  002910  0E7F               	movlw	127
  7730  002912  2417               	addwf	??___fldiv^0,w,c
  7731  002914  6E20               	movwf	___fldiv@new_exp^0,c
  7732  002916  0E00               	movlw	0
  7733  002918  2018               	addwfc	(??___fldiv+1)^0,w,c
  7734  00291A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7735  00291C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7736  002920  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7737  002924  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7738  002928  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7739  00292C  0E00               	movlw	0
  7740  00292E  6E0F               	movwf	___fldiv@b^0,c
  7741  002930  0E00               	movlw	0
  7742  002932  6E10               	movwf	(___fldiv@b+1)^0,c
  7743  002934  0E00               	movlw	0
  7744  002936  6E11               	movwf	(___fldiv@b+2)^0,c
  7745  002938  0E00               	movlw	0
  7746  00293A  6E12               	movwf	(___fldiv@b+3)^0,c
  7747  00293C  0E00               	movlw	0
  7748  00293E  6E22               	movwf	___fldiv@grs^0,c
  7749  002940  0E00               	movlw	0
  7750  002942  6E23               	movwf	(___fldiv@grs+1)^0,c
  7751  002944  0E00               	movlw	0
  7752  002946  6E24               	movwf	(___fldiv@grs+2)^0,c
  7753  002948  0E00               	movlw	0
  7754  00294A  6E25               	movwf	(___fldiv@grs+3)^0,c
  7755  00294C  0E00               	movlw	0
  7756  00294E  6E27               	movwf	___fldiv@aexp^0,c
  7757  002950  EFE2  F014         	goto	l1357
  7758  002954                     l4735:
  7759  002954  5027               	movf	___fldiv@aexp^0,w,c
  7760  002956  B4D8               	btfsc	status,2,c
  7761  002958  EFB0  F014         	goto	u4801
  7762  00295C  EFB2  F014         	goto	u4800
  7763  002960                     u4801:
  7764  002960  EFC9  F014         	goto	l4743
  7765  002964                     u4800:
  7766  002964  90D8               	bcf	status,0,c
  7767  002966  361B               	rlcf	___fldiv@rem^0,f,c
  7768  002968  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7769  00296A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7770  00296C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7771  00296E  90D8               	bcf	status,0,c
  7772  002970  360F               	rlcf	___fldiv@b^0,f,c
  7773  002972  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7774  002974  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7775  002976  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7776  002978  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7777  00297A  EFC1  F014         	goto	u4811
  7778  00297E  EFC3  F014         	goto	u4810
  7779  002982                     u4811:
  7780  002982  EFC4  F014         	goto	l1360
  7781  002986                     u4810:
  7782  002986  800F               	bsf	___fldiv@b^0,0,c
  7783  002988                     l1360:
  7784  002988  90D8               	bcf	status,0,c
  7785  00298A  3622               	rlcf	___fldiv@grs^0,f,c
  7786  00298C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7787  00298E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7788  002990  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7789  002992                     l4743:
  7790  002992  5013               	movf	___fldiv@a^0,w,c
  7791  002994  5C1B               	subwf	___fldiv@rem^0,w,c
  7792  002996  5014               	movf	(___fldiv@a+1)^0,w,c
  7793  002998  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7794  00299A  5015               	movf	(___fldiv@a+2)^0,w,c
  7795  00299C  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7796  00299E  5016               	movf	(___fldiv@a+3)^0,w,c
  7797  0029A0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7798  0029A2  A0D8               	btfss	status,0,c
  7799  0029A4  EFD6  F014         	goto	u4821
  7800  0029A8  EFD8  F014         	goto	u4820
  7801  0029AC                     u4821:
  7802  0029AC  EFE1  F014         	goto	l4749
  7803  0029B0                     u4820:
  7804  0029B0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7805  0029B2  5013               	movf	___fldiv@a^0,w,c
  7806  0029B4  5E1B               	subwf	___fldiv@rem^0,f,c
  7807  0029B6  5014               	movf	(___fldiv@a+1)^0,w,c
  7808  0029B8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7809  0029BA  5015               	movf	(___fldiv@a+2)^0,w,c
  7810  0029BC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7811  0029BE  5016               	movf	(___fldiv@a+3)^0,w,c
  7812  0029C0  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7813  0029C2                     l4749:
  7814  0029C2  2A27               	incf	___fldiv@aexp^0,f,c
  7815  0029C4                     l1357:
  7816  0029C4  0E19               	movlw	25
  7817  0029C6  6427               	cpfsgt	___fldiv@aexp^0,c
  7818  0029C8  EFE8  F014         	goto	u4831
  7819  0029CC  EFEA  F014         	goto	u4830
  7820  0029D0                     u4831:
  7821  0029D0  EFAA  F014         	goto	l4735
  7822  0029D4                     u4830:
  7823  0029D4  501B               	movf	___fldiv@rem^0,w,c
  7824  0029D6  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7825  0029D8  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7826  0029DA  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7827  0029DC  B4D8               	btfsc	status,2,c
  7828  0029DE  EFF3  F014         	goto	u4841
  7829  0029E2  EFF5  F014         	goto	u4840
  7830  0029E6                     u4841:
  7831  0029E6  EF0D  F015         	goto	l4761
  7832  0029EA                     u4840:
  7833  0029EA  8022               	bsf	___fldiv@grs^0,0,c
  7834  0029EC  EF0D  F015         	goto	l4761
  7835  0029F0                     l4755:
  7836  0029F0  90D8               	bcf	status,0,c
  7837  0029F2  360F               	rlcf	___fldiv@b^0,f,c
  7838  0029F4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7839  0029F6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7840  0029F8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7841  0029FA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7842  0029FC  EF02  F015         	goto	u4851
  7843  002A00  EF04  F015         	goto	u4850
  7844  002A04                     u4851:
  7845  002A04  EF05  F015         	goto	l1366
  7846  002A08                     u4850:
  7847  002A08  800F               	bsf	___fldiv@b^0,0,c
  7848  002A0A                     l1366:
  7849  002A0A  90D8               	bcf	status,0,c
  7850  002A0C  3622               	rlcf	___fldiv@grs^0,f,c
  7851  002A0E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7852  002A10  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7853  002A12  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7854  002A14  0620               	decf	___fldiv@new_exp^0,f,c
  7855  002A16  A0D8               	btfss	status,0,c
  7856  002A18  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7857  002A1A                     l4761:
  7858  002A1A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7859  002A1C  EF12  F015         	goto	u4861
  7860  002A20  EF14  F015         	goto	u4860
  7861  002A24                     u4861:
  7862  002A24  EFF8  F014         	goto	l4755
  7863  002A28                     u4860:
  7864  002A28  0E00               	movlw	0
  7865  002A2A  6E27               	movwf	___fldiv@aexp^0,c
  7866  002A2C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7867  002A2E  EF1B  F015         	goto	u4871
  7868  002A32  EF1D  F015         	goto	u4870
  7869  002A36                     u4871:
  7870  002A36  EF41  F015         	goto	l1368
  7871  002A3A                     u4870:
  7872  002A3A  0EFF               	movlw	255
  7873  002A3C  1422               	andwf	___fldiv@grs^0,w,c
  7874  002A3E  6E17               	movwf	??___fldiv^0,c
  7875  002A40  0EFF               	movlw	255
  7876  002A42  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7877  002A44  6E18               	movwf	(??___fldiv+1)^0,c
  7878  002A46  0EFF               	movlw	255
  7879  002A48  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7880  002A4A  6E19               	movwf	(??___fldiv+2)^0,c
  7881  002A4C  0E7F               	movlw	127
  7882  002A4E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7883  002A50  6E1A               	movwf	(??___fldiv+3)^0,c
  7884  002A52  5017               	movf	??___fldiv^0,w,c
  7885  002A54  1018               	iorwf	(??___fldiv+1)^0,w,c
  7886  002A56  1019               	iorwf	(??___fldiv+2)^0,w,c
  7887  002A58  101A               	iorwf	(??___fldiv+3)^0,w,c
  7888  002A5A  B4D8               	btfsc	status,2,c
  7889  002A5C  EF32  F015         	goto	u4881
  7890  002A60  EF34  F015         	goto	u4880
  7891  002A64                     u4881:
  7892  002A64  EF38  F015         	goto	l1369
  7893  002A68                     u4880:
  7894  002A68                     l4769:
  7895  002A68  0E01               	movlw	1
  7896  002A6A  6E27               	movwf	___fldiv@aexp^0,c
  7897  002A6C  EF41  F015         	goto	l1368
  7898  002A70                     l1369:
  7899  002A70  A00F               	btfss	___fldiv@b^0,0,c
  7900  002A72  EF3D  F015         	goto	u4891
  7901  002A76  EF3F  F015         	goto	u4890
  7902  002A7A                     u4891:
  7903  002A7A  EF41  F015         	goto	l1368
  7904  002A7E                     u4890:
  7905  002A7E  EF34  F015         	goto	l4769
  7906  002A82                     l1368:
  7907  002A82  5027               	movf	___fldiv@aexp^0,w,c
  7908  002A84  B4D8               	btfsc	status,2,c
  7909  002A86  EF47  F015         	goto	u4901
  7910  002A8A  EF49  F015         	goto	u4900
  7911  002A8E                     u4901:
  7912  002A8E  EF6D  F015         	goto	l4781
  7913  002A92                     u4900:
  7914  002A92  0E01               	movlw	1
  7915  002A94  260F               	addwf	___fldiv@b^0,f,c
  7916  002A96  0E00               	movlw	0
  7917  002A98  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7918  002A9A  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7919  002A9C  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7920  002A9E  A012               	btfss	(___fldiv@b+3)^0,0,c
  7921  002AA0  EF54  F015         	goto	u4911
  7922  002AA4  EF56  F015         	goto	u4910
  7923  002AA8                     u4911:
  7924  002AA8  EF6D  F015         	goto	l4781
  7925  002AAC                     u4910:
  7926  002AAC  C00F  F017         	movff	___fldiv@b,??___fldiv
  7927  002AB0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7928  002AB4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7929  002AB8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7930  002ABC  341A               	rlcf	(??___fldiv+3)^0,w,c
  7931  002ABE  321A               	rrcf	(??___fldiv+3)^0,f,c
  7932  002AC0  3219               	rrcf	(??___fldiv+2)^0,f,c
  7933  002AC2  3218               	rrcf	(??___fldiv+1)^0,f,c
  7934  002AC4  3217               	rrcf	??___fldiv^0,f,c
  7935  002AC6  C017  F00F         	movff	??___fldiv,___fldiv@b
  7936  002ACA  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7937  002ACE  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7938  002AD2  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7939  002AD6  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7940  002AD8  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7941  002ADA                     l4781:
  7942  002ADA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7943  002ADC  EF78  F015         	goto	u4921
  7944  002AE0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7945  002AE2  E108               	bnz	u4920
  7946  002AE4  2820               	incf	___fldiv@new_exp^0,w,c
  7947  002AE6  A0D8               	btfss	status,0,c
  7948  002AE8  EF78  F015         	goto	u4921
  7949  002AEC  EF7A  F015         	goto	u4920
  7950  002AF0                     u4921:
  7951  002AF0  EF85  F015         	goto	l4785
  7952  002AF4                     u4920:
  7953  002AF4  0E00               	movlw	0
  7954  002AF6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7955  002AF8  6820               	setf	___fldiv@new_exp^0,c
  7956  002AFA  0E00               	movlw	0
  7957  002AFC  6E0F               	movwf	___fldiv@b^0,c
  7958  002AFE  0E00               	movlw	0
  7959  002B00  6E10               	movwf	(___fldiv@b+1)^0,c
  7960  002B02  0E00               	movlw	0
  7961  002B04  6E11               	movwf	(___fldiv@b+2)^0,c
  7962  002B06  0E00               	movlw	0
  7963  002B08  6E12               	movwf	(___fldiv@b+3)^0,c
  7964  002B0A                     l4785:
  7965  002B0A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7966  002B0C  EF92  F015         	goto	u4930
  7967  002B10  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7968  002B12  E106               	bnz	u4931
  7969  002B14  0420               	decf	___fldiv@new_exp^0,w,c
  7970  002B16  B0D8               	btfsc	status,0,c
  7971  002B18  EF90  F015         	goto	u4931
  7972  002B1C  EF92  F015         	goto	u4930
  7973  002B20                     u4931:
  7974  002B20  EFA0  F015         	goto	l4789
  7975  002B24                     u4930:
  7976  002B24  0E00               	movlw	0
  7977  002B26  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7978  002B28  0E00               	movlw	0
  7979  002B2A  6E20               	movwf	___fldiv@new_exp^0,c
  7980  002B2C  0E00               	movlw	0
  7981  002B2E  6E0F               	movwf	___fldiv@b^0,c
  7982  002B30  0E00               	movlw	0
  7983  002B32  6E10               	movwf	(___fldiv@b+1)^0,c
  7984  002B34  0E00               	movlw	0
  7985  002B36  6E11               	movwf	(___fldiv@b+2)^0,c
  7986  002B38  0E00               	movlw	0
  7987  002B3A  6E12               	movwf	(___fldiv@b+3)^0,c
  7988  002B3C  0E00               	movlw	0
  7989  002B3E  6E1F               	movwf	___fldiv@sign^0,c
  7990  002B40                     l4789:
  7991  002B40  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7992  002B44  A026               	btfss	___fldiv@bexp^0,0,c
  7993  002B46  EFA7  F015         	goto	u4941
  7994  002B4A  EFA9  F015         	goto	u4940
  7995  002B4E                     u4941:
  7996  002B4E  EFAC  F015         	goto	l4795
  7997  002B52                     u4940:
  7998  002B52  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7999  002B54  EFAD  F015         	goto	l4797
  8000  002B58                     l4795:
  8001  002B58  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8002  002B5A                     l4797:
  8003  002B5A  90D8               	bcf	status,0,c
  8004  002B5C  3026               	rrcf	___fldiv@bexp^0,w,c
  8005  002B5E  6E12               	movwf	(___fldiv@b+3)^0,c
  8006  002B60  EF63  F014         	goto	l4711
  8007  002B64                     l1355:
  8008  002B64  0012               	return		;funcret
  8009  002B66                     __end_of___fldiv:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function _LED_C *****************
  8013 ;; Defined at:
  8014 ;;		line 173 in file "color.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;Total ram usage:        2 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_color_data_collection
  8039 ;;		_calibrate_white
  8040 ;;		_amb_light_measure
  8041 ;;		_distance_measure
  8042 ;;		_test_function
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text31
  8047  0059A0                     __ptext31:
  8048                           	callstack 0
  8049  0059A0                     _LED_C:
  8050                           	callstack 27
  8051  0059A0                     
  8052                           ;color.c: 175:     LATGbits.LATG1 = 1;
  8053  0059A0  827F               	bsf	127,1,c	;volatile
  8054                           
  8055                           ;color.c: 176:     LATFbits.LATF7 = 1;
  8056  0059A2  8E7E               	bsf	126,7,c	;volatile
  8057                           
  8058                           ;color.c: 177:     LATAbits.LATA4 = 1;
  8059  0059A4  8879               	bsf	121,4,c	;volatile
  8060  0059A6                     
  8061                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8062  0059A6  0E05               	movlw	5
  8063  0059A8  6E02               	movwf	(??_LED_C+1)^0,c
  8064  0059AA  0E0F               	movlw	15
  8065  0059AC  6E01               	movwf	??_LED_C^0,c
  8066  0059AE  0EF1               	movlw	241
  8067  0059B0                     u5927:
  8068  0059B0  2EE8               	decfsz	wreg,f,c
  8069  0059B2  D7FE               	bra	u5927
  8070  0059B4  2E01               	decfsz	??_LED_C^0,f,c
  8071  0059B6  D7FC               	bra	u5927
  8072  0059B8  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8073  0059BA  D7FA               	bra	u5927
  8074  0059BC  F000               	nop	
  8075  0059BE  0012               	return		;funcret
  8076  0059C0                     __end_of_LED_C:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _pin_init *****************
  8080 ;; Defined at:
  8081 ;;		line 88 in file "movement.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		None
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_main
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text32
  8110  0059C0                     __ptext32:
  8111                           	callstack 0
  8112  0059C0                     _pin_init:
  8113                           	callstack 29
  8114  0059C0  8486               	bsf	134,2,c	;volatile
  8115                           
  8116                           ;movement.c: 90:     ANSELFbits.ANSELF2=0;
  8117  0059C2  010E               	movlb	14	; () banked
  8118  0059C4  95B4               	bcf	180,2,b	;volatile
  8119                           
  8120                           ;movement.c: 91:     TRISFbits.TRISF3=1;
  8121  0059C6  8686               	bsf	134,3,c	;volatile
  8122                           
  8123                           ;movement.c: 92:     ANSELFbits.ANSELF3=0;
  8124  0059C8  97B4               	bcf	180,3,b	;volatile
  8125                           
  8126                           ;movement.c: 97:     TRISGbits.TRISG1 = 0;
  8127  0059CA  9287               	bcf	135,1,c	;volatile
  8128                           
  8129                           ;movement.c: 98:     TRISFbits.TRISF7 = 0;
  8130  0059CC  9E86               	bcf	134,7,c	;volatile
  8131                           
  8132                           ;movement.c: 99:     TRISAbits.TRISA4 = 0;
  8133  0059CE  9881               	bcf	129,4,c	;volatile
  8134                           
  8135                           ;movement.c: 100:     LATGbits.LATG1 = 1;
  8136  0059D0  827F               	bsf	127,1,c	;volatile
  8137                           
  8138                           ;movement.c: 101:     LATFbits.LATF7 = 1;
  8139  0059D2  8E7E               	bsf	126,7,c	;volatile
  8140                           
  8141                           ;movement.c: 102:     LATAbits.LATA4 = 1;
  8142  0059D4  8879               	bsf	121,4,c	;volatile
  8143                           
  8144                           ;movement.c: 105:     TRISDbits.TRISD7 = 0;
  8145  0059D6  9E84               	bcf	132,7,c	;volatile
  8146                           
  8147                           ;movement.c: 106:     LATDbits.LATD7 = 0;
  8148  0059D8  9E7C               	bcf	124,7,c	;volatile
  8149                           
  8150                           ;movement.c: 107:     TRISHbits.TRISH3 = 0;
  8151  0059DA  9688               	bcf	136,3,c	;volatile
  8152                           
  8153                           ;movement.c: 108:     LATHbits.LATH3 = 0;
  8154  0059DC  9680               	bcf	128,3,c	;volatile
  8155  0059DE                     
  8156                           ; BSR set to: 14
  8157  0059DE  0012               	return		;funcret
  8158  0059E0                     __end_of_pin_init:
  8159                           	callstack 0
  8160                           
  8161 ;; *************** function _initUSART4 *****************
  8162 ;; Defined at:
  8163 ;;		line 4 in file "serial.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;Total ram usage:        0 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 1
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_main
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text33
  8192  005A00                     __ptext33:
  8193                           	callstack 0
  8194  005A00                     _initUSART4:
  8195                           	callstack 29
  8196  005A00                     
  8197                           ;serial.c: 8:     RC0PPS = 0x12;
  8198  005A00  0E12               	movlw	18
  8199  005A02  010E               	movlb	14	; () banked
  8200  005A04  6F62               	movwf	98,b	;volatile
  8201                           
  8202                           ;serial.c: 9:     RX4PPS = 0x11;
  8203  005A06  0E11               	movlw	17
  8204  005A08  6F15               	movwf	21,b	;volatile
  8205  005A0A                     
  8206                           ; BSR set to: 14
  8207                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8208  005A0A  97E9               	bcf	233,3,b	;volatile
  8209  005A0C                     
  8210                           ; BSR set to: 14
  8211                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8212  005A0C  95E8               	bcf	232,2,b	;volatile
  8213                           
  8214                           ;serial.c: 13:     SP4BRGL = 51;
  8215  005A0E  0E33               	movlw	51
  8216  005A10  6FE5               	movwf	229,b	;volatile
  8217                           
  8218                           ;serial.c: 15:     SP4BRGH = 0;
  8219  005A12  0E00               	movlw	0
  8220  005A14  6FE6               	movwf	230,b	;volatile
  8221  005A16                     
  8222                           ; BSR set to: 14
  8223                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8224  005A16  89E7               	bsf	231,4,b	;volatile
  8225  005A18                     
  8226                           ; BSR set to: 14
  8227                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8228  005A18  8BE8               	bsf	232,5,b	;volatile
  8229  005A1A                     
  8230                           ; BSR set to: 14
  8231                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8232  005A1A  8FE7               	bsf	231,7,b	;volatile
  8233  005A1C                     
  8234                           ; BSR set to: 14
  8235  005A1C  0012               	return		;funcret
  8236  005A1E                     __end_of_initUSART4:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _initDCmotors_parameter *****************
  8240 ;; Defined at:
  8241 ;;		line 40 in file "dc_motor.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8244 ;;		 -> main@motorL(10), 
  8245 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8246 ;;		 -> main@motorR(10), 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        4 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text34
  8273  004BC8                     __ptext34:
  8274                           	callstack 0
  8275  004BC8                     _initDCmotors_parameter:
  8276                           	callstack 29
  8277  004BC8                     
  8278                           ;dc_motor.c: 42:     motorL->power = 0;
  8279  004BC8  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8280  004BCC  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8281  004BD0  0E00               	movlw	0
  8282  004BD2  6EDF               	movwf	indf2,c
  8283  004BD4                     
  8284                           ;dc_motor.c: 43:     motorL->direction = 1;
  8285  004BD4  EE20 F001          	lfsr	2,1
  8286  004BD8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8287  004BDA  26D9               	addwf	fsr2l,f,c
  8288  004BDC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8289  004BDE  22DA               	addwfc	fsr2h,f,c
  8290  004BE0  0E01               	movlw	1
  8291  004BE2  6EDF               	movwf	indf2,c
  8292  004BE4                     
  8293                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8294  004BE4  EE20 F002          	lfsr	2,2
  8295  004BE8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8296  004BEA  26D9               	addwf	fsr2l,f,c
  8297  004BEC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8298  004BEE  22DA               	addwfc	fsr2h,f,c
  8299  004BF0  0EA3               	movlw	163
  8300  004BF2  6EDE               	movwf	postinc2,c
  8301  004BF4  0E0F               	movlw	15
  8302  004BF6  6EDD               	movwf	postdec2,c
  8303  004BF8                     
  8304                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8305  004BF8  EE20 F004          	lfsr	2,4
  8306  004BFC  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8307  004BFE  26D9               	addwf	fsr2l,f,c
  8308  004C00  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8309  004C02  22DA               	addwfc	fsr2h,f,c
  8310  004C04  0E7D               	movlw	125
  8311  004C06  6EDE               	movwf	postinc2,c
  8312  004C08  0E0F               	movlw	15
  8313  004C0A  6EDD               	movwf	postdec2,c
  8314  004C0C                     
  8315                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8316  004C0C  EE20 F006          	lfsr	2,6
  8317  004C10  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8318  004C12  26D9               	addwf	fsr2l,f,c
  8319  004C14  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8320  004C16  22DA               	addwfc	fsr2h,f,c
  8321  004C18  0E04               	movlw	4
  8322  004C1A  6EDF               	movwf	indf2,c
  8323  004C1C                     
  8324                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8325  004C1C  EE20 F007          	lfsr	2,7
  8326  004C20  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8327  004C22  26D9               	addwf	fsr2l,f,c
  8328  004C24  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8329  004C26  22DA               	addwfc	fsr2h,f,c
  8330  004C28  0EC7               	movlw	199
  8331  004C2A  6EDE               	movwf	postinc2,c
  8332  004C2C  0E00               	movlw	0
  8333  004C2E  6EDD               	movwf	postdec2,c
  8334  004C30                     
  8335                           ;dc_motor.c: 50:     motorR->power = 0;
  8336  004C30  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8337  004C34  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8338  004C38  0E00               	movlw	0
  8339  004C3A  6EDF               	movwf	indf2,c
  8340                           
  8341                           ;dc_motor.c: 51:     motorR->direction = 1;
  8342  004C3C  EE20 F001          	lfsr	2,1
  8343  004C40  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8344  004C42  26D9               	addwf	fsr2l,f,c
  8345  004C44  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8346  004C46  22DA               	addwfc	fsr2h,f,c
  8347  004C48  0E01               	movlw	1
  8348  004C4A  6EDF               	movwf	indf2,c
  8349                           
  8350                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8351  004C4C  EE20 F002          	lfsr	2,2
  8352  004C50  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8353  004C52  26D9               	addwf	fsr2l,f,c
  8354  004C54  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8355  004C56  22DA               	addwfc	fsr2h,f,c
  8356  004C58  0EA0               	movlw	160
  8357  004C5A  6EDE               	movwf	postinc2,c
  8358  004C5C  0E0F               	movlw	15
  8359  004C5E  6EDD               	movwf	postdec2,c
  8360                           
  8361                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8362  004C60  EE20 F004          	lfsr	2,4
  8363  004C64  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8364  004C66  26D9               	addwf	fsr2l,f,c
  8365  004C68  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8366  004C6A  22DA               	addwfc	fsr2h,f,c
  8367  004C6C  0E7F               	movlw	127
  8368  004C6E  6EDE               	movwf	postinc2,c
  8369  004C70  0E0F               	movlw	15
  8370  004C72  6EDD               	movwf	postdec2,c
  8371                           
  8372                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8373  004C74  EE20 F006          	lfsr	2,6
  8374  004C78  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8375  004C7A  26D9               	addwf	fsr2l,f,c
  8376  004C7C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8377  004C7E  22DA               	addwfc	fsr2h,f,c
  8378  004C80  0E06               	movlw	6
  8379  004C82  6EDF               	movwf	indf2,c
  8380                           
  8381                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8382  004C84  EE20 F007          	lfsr	2,7
  8383  004C88  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8384  004C8A  26D9               	addwf	fsr2l,f,c
  8385  004C8C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8386  004C8E  22DA               	addwfc	fsr2h,f,c
  8387  004C90  0EC7               	movlw	199
  8388  004C92  6EDE               	movwf	postinc2,c
  8389  004C94  0E00               	movlw	0
  8390  004C96  6EDD               	movwf	postdec2,c
  8391  004C98  0012               	return		;funcret
  8392  004C9A                     __end_of_initDCmotors_parameter:
  8393                           	callstack 0
  8394                           
  8395 ;; *************** function _initDCmotorsPWM *****************
  8396 ;; Defined at:
  8397 ;;		line 10 in file "dc_motor.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  PWMperiod       2    0[COMRAM] int 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8415 ;;Total ram usage:        2 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_main
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text35
  8426  00562E                     __ptext35:
  8427                           	callstack 0
  8428  00562E                     _initDCmotorsPWM:
  8429                           	callstack 29
  8430  00562E                     
  8431                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8432  00562E  9485               	bcf	133,2,c	;volatile
  8433                           
  8434                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8435  005630  9E83               	bcf	131,7,c	;volatile
  8436                           
  8437                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8438  005632  9C87               	bcf	135,6,c	;volatile
  8439                           
  8440                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8441  005634  9885               	bcf	133,4,c	;volatile
  8442                           
  8443                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8444  005636  947D               	bcf	125,2,c	;volatile
  8445                           
  8446                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8447  005638  9E7B               	bcf	123,7,c	;volatile
  8448                           
  8449                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8450  00563A  9C7F               	bcf	127,6,c	;volatile
  8451                           
  8452                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8453  00563C  987D               	bcf	125,4,c	;volatile
  8454  00563E                     
  8455                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8456  00563E  50BD               	movf	189,w,c	;volatile
  8457  005640  0B8F               	andlw	-113
  8458  005642  0930               	iorlw	48
  8459  005644  6EBD               	movwf	189,c	;volatile
  8460                           
  8461                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8462  005646  0EE0               	movlw	-32
  8463  005648  16BE               	andwf	190,f,c	;volatile
  8464                           
  8465                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8466  00564A  50BF               	movf	191,w,c	;volatile
  8467  00564C  0BF0               	andlw	-16
  8468  00564E  0901               	iorlw	1
  8469  005650  6EBF               	movwf	191,c	;volatile
  8470                           
  8471                           ;dc_motor.c: 28:     T2PR=200-1;
  8472  005652  0EC7               	movlw	199
  8473  005654  6EBC               	movwf	188,c	;volatile
  8474  005656                     
  8475                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8476  005656  8EBD               	bsf	189,7,c	;volatile
  8477                           
  8478                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8479  005658  0E0A               	movlw	10
  8480  00565A  010E               	movlb	14	; () banked
  8481  00565C  6F74               	movwf	116,b	;volatile
  8482                           
  8483                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8484  00565E  0E0B               	movlw	11
  8485  005660  6F69               	movwf	105,b	;volatile
  8486                           
  8487                           ;dc_motor.c: 34:     PWM6DCH=0;
  8488  005662  0E00               	movlw	0
  8489  005664  6EA3               	movwf	163,c	;volatile
  8490                           
  8491                           ;dc_motor.c: 35:     PWM7DCH=0;
  8492  005666  0E00               	movlw	0
  8493  005668  6EA0               	movwf	160,c	;volatile
  8494  00566A                     
  8495                           ; BSR set to: 14
  8496                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8497  00566A  8EA4               	bsf	164,7,c	;volatile
  8498  00566C                     
  8499                           ; BSR set to: 14
  8500                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8501  00566C  8EA1               	bsf	161,7,c	;volatile
  8502  00566E                     
  8503                           ; BSR set to: 14
  8504  00566E  0012               	return		;funcret
  8505  005670                     __end_of_initDCmotorsPWM:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _color_click_init *****************
  8509 ;; Defined at:
  8510 ;;		line 67 in file "color.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;Total ram usage:        1 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 4
  8531 ;; This function calls:
  8532 ;;		_I2C_2_Master_Init
  8533 ;;		_color_writetoaddr
  8534 ;; This function is called by:
  8535 ;;		_main
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text36
  8540  005816                     __ptext36:
  8541                           	callstack 0
  8542  005816                     _color_click_init:
  8543                           	callstack 26
  8544  005816                     
  8545                           ;color.c: 70:     I2C_2_Master_Init();
  8546  005816  EC54  F02C         	call	_I2C_2_Master_Init	;wreg free
  8547  00581A                     
  8548                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8549  00581A  0E01               	movlw	1
  8550  00581C  6E03               	movwf	color_writetoaddr@value^0,c
  8551  00581E  0E00               	movlw	0
  8552  005820  ECF0  F02C         	call	_color_writetoaddr
  8553  005824                     
  8554                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8555  005824  0E3F               	movlw	63
  8556  005826  6E05               	movwf	??_color_click_init^0,c
  8557  005828  0E55               	movlw	85
  8558  00582A                     u5937:
  8559  00582A  2EE8               	decfsz	wreg,f,c
  8560  00582C  D7FE               	bra	u5937
  8561  00582E  2E05               	decfsz	??_color_click_init^0,f,c
  8562  005830  D7FC               	bra	u5937
  8563  005832  F000               	nop	
  8564  005834                     
  8565                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8566  005834  0E03               	movlw	3
  8567  005836  6E03               	movwf	color_writetoaddr@value^0,c
  8568  005838  0E00               	movlw	0
  8569  00583A  ECF0  F02C         	call	_color_writetoaddr
  8570  00583E                     
  8571                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8572  00583E  0ED5               	movlw	213
  8573  005840  6E03               	movwf	color_writetoaddr@value^0,c
  8574  005842  0E01               	movlw	1
  8575  005844  ECF0  F02C         	call	_color_writetoaddr
  8576  005848  0012               	return		;funcret
  8577  00584A                     __end_of_color_click_init:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _color_writetoaddr *****************
  8581 ;; Defined at:
  8582 ;;		line 83 in file "color.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  address         1    wreg     unsigned char 
  8585 ;;  value           1    2[COMRAM] unsigned char 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  address         1    3[COMRAM] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;Total ram usage:        2 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 3
  8604 ;; This function calls:
  8605 ;;		_I2C_2_Master_Start
  8606 ;;		_I2C_2_Master_Stop
  8607 ;;		_I2C_2_Master_Write
  8608 ;; This function is called by:
  8609 ;;		_color_click_init
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text37
  8614  0059E0                     __ptext37:
  8615                           	callstack 0
  8616  0059E0                     _color_writetoaddr:
  8617                           	callstack 26
  8618                           
  8619                           ;incstack = 0
  8620                           ;color_writetoaddr@address stored from wreg
  8621  0059E0  6E04               	movwf	color_writetoaddr@address^0,c
  8622  0059E2                     
  8623                           ;color.c: 84:     I2C_2_Master_Start();
  8624  0059E2  EC4B  F02D         	call	_I2C_2_Master_Start	;wreg free
  8625                           
  8626                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8627  0059E6  0E52               	movlw	82
  8628  0059E8  EC35  F02D         	call	_I2C_2_Master_Write
  8629                           
  8630                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8631  0059EC  5004               	movf	color_writetoaddr@address^0,w,c
  8632  0059EE  0980               	iorlw	128
  8633  0059F0  EC35  F02D         	call	_I2C_2_Master_Write
  8634                           
  8635                           ;color.c: 87:     I2C_2_Master_Write(value);
  8636  0059F4  5003               	movf	color_writetoaddr@value^0,w,c
  8637  0059F6  EC35  F02D         	call	_I2C_2_Master_Write
  8638                           
  8639                           ;color.c: 88:     I2C_2_Master_Stop();
  8640  0059FA  EC46  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8641  0059FE  0012               	return		;funcret
  8642  005A00                     __end_of_color_writetoaddr:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _I2C_2_Master_Write *****************
  8646 ;; Defined at:
  8647 ;;		line 45 in file "i2c.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  data_byte       1    wreg     unsigned char 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  data_byte       1    1[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;Total ram usage:        1 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 2
  8668 ;; This function calls:
  8669 ;;		_I2C_2_Master_Idle
  8670 ;; This function is called by:
  8671 ;;		_color_writetoaddr
  8672 ;;		_color_read_Red
  8673 ;;		_color_read_Blue
  8674 ;;		_color_read_Green
  8675 ;;		_color_read_Clear
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text38
  8680  005A6A                     __ptext38:
  8681                           	callstack 0
  8682  005A6A                     _I2C_2_Master_Write:
  8683                           	callstack 24
  8684                           
  8685                           ;incstack = 0
  8686                           ;I2C_2_Master_Write@data_byte stored from wreg
  8687  005A6A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8688  005A6C                     
  8689                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8690  005A6C  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8691  005A70                     
  8692                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8693  005A70  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8694  005A74  0012               	return		;funcret
  8695  005A76                     __end_of_I2C_2_Master_Write:
  8696                           	callstack 0
  8697                           
  8698 ;; *************** function _I2C_2_Master_Stop *****************
  8699 ;; Defined at:
  8700 ;;		line 39 in file "i2c.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;Total ram usage:        0 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 2
  8721 ;; This function calls:
  8722 ;;		_I2C_2_Master_Idle
  8723 ;; This function is called by:
  8724 ;;		_color_writetoaddr
  8725 ;;		_color_read_Red
  8726 ;;		_color_read_Blue
  8727 ;;		_color_read_Green
  8728 ;;		_color_read_Clear
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text39
  8733  005A8C                     __ptext39:
  8734                           	callstack 0
  8735  005A8C                     _I2C_2_Master_Stop:
  8736                           	callstack 24
  8737  005A8C                     
  8738                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8739  005A8C  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8740  005A90                     
  8741                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8742  005A90  010E               	movlb	14	; () banked
  8743  005A92  85DA               	bsf	218,2,b	;volatile
  8744  005A94                     
  8745                           ; BSR set to: 14
  8746  005A94  0012               	return		;funcret
  8747  005A96                     __end_of_I2C_2_Master_Stop:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function _I2C_2_Master_Start *****************
  8751 ;; Defined at:
  8752 ;;		line 27 in file "i2c.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1    wreg      void 
  8759 ;; Registers used:
  8760 ;;		wreg, status,2, status,0, cstack
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used: 1
  8772 ;; Hardware stack levels required when called: 2
  8773 ;; This function calls:
  8774 ;;		_I2C_2_Master_Idle
  8775 ;; This function is called by:
  8776 ;;		_color_writetoaddr
  8777 ;;		_color_read_Red
  8778 ;;		_color_read_Blue
  8779 ;;		_color_read_Green
  8780 ;;		_color_read_Clear
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text40
  8785  005A96                     __ptext40:
  8786                           	callstack 0
  8787  005A96                     _I2C_2_Master_Start:
  8788                           	callstack 24
  8789  005A96                     
  8790                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8791  005A96  EC69  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8792  005A9A                     
  8793                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8794  005A9A  010E               	movlb	14	; () banked
  8795  005A9C  81DA               	bsf	218,0,b	;volatile
  8796  005A9E                     
  8797                           ; BSR set to: 14
  8798  005A9E  0012               	return		;funcret
  8799  005AA0                     __end_of_I2C_2_Master_Start:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _I2C_2_Master_Idle *****************
  8803 ;; Defined at:
  8804 ;;		line 22 in file "i2c.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;Total ram usage:        1 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 1
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_I2C_2_Master_Start
  8829 ;;		_I2C_2_Master_RepStart
  8830 ;;		_I2C_2_Master_Stop
  8831 ;;		_I2C_2_Master_Write
  8832 ;;		_I2C_2_Master_Read
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text41
  8837  0058D2                     __ptext41:
  8838                           	callstack 0
  8839  0058D2                     _I2C_2_Master_Idle:
  8840                           	callstack 24
  8841  0058D2                     l209:
  8842  0058D2  010E               	movlb	14	; () banked
  8843  0058D4  B5D8               	btfsc	216,2,b	;volatile
  8844  0058D6  EF6F  F02C         	goto	u3291
  8845  0058DA  EF71  F02C         	goto	u3290
  8846  0058DE                     u3291:
  8847  0058DE  EF69  F02C         	goto	l209
  8848  0058E2                     u3290:
  8849  0058E2                     
  8850                           ; BSR set to: 14
  8851  0058E2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8852  0058E6  0E1F               	movlw	31
  8853  0058E8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8854  0058EA  A4D8               	btfss	status,2,c
  8855  0058EC  EF7A  F02C         	goto	u3301
  8856  0058F0  EF7C  F02C         	goto	u3300
  8857  0058F4                     u3301:
  8858  0058F4  EF69  F02C         	goto	l209
  8859  0058F8                     u3300:
  8860  0058F8                     
  8861                           ; BSR set to: 14
  8862  0058F8  0012               	return		;funcret
  8863  0058FA                     __end_of_I2C_2_Master_Idle:
  8864                           	callstack 0
  8865                           
  8866 ;; *************** function _I2C_2_Master_Init *****************
  8867 ;; Defined at:
  8868 ;;		line 4 in file "i2c.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;		None
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  1    wreg      void 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;Total ram usage:        0 bytes
  8887 ;; Hardware stack levels used: 1
  8888 ;; Hardware stack levels required when called: 1
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_color_click_init
  8893 ;;		_main
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text42
  8898  0058A8                     __ptext42:
  8899                           	callstack 0
  8900  0058A8                     _I2C_2_Master_Init:
  8901                           	callstack 28
  8902  0058A8                     
  8903                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8904  0058A8  010E               	movlb	14	; () banked
  8905  0058AA  51D9               	movf	217,w,b	;volatile
  8906  0058AC  0BF0               	andlw	-16
  8907  0058AE  0908               	iorlw	8
  8908  0058B0  6FD9               	movwf	217,b	;volatile
  8909  0058B2                     
  8910                           ; BSR set to: 14
  8911                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8912  0058B2  8BD9               	bsf	217,5,b	;volatile
  8913                           
  8914                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8915  0058B4  0E9F               	movlw	159
  8916  0058B6  6FD6               	movwf	214,b	;volatile
  8917  0058B8                     
  8918                           ; BSR set to: 14
  8919                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8920  0058B8  8A84               	bsf	132,5,c	;volatile
  8921  0058BA                     
  8922                           ; BSR set to: 14
  8923                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8924  0058BA  8C84               	bsf	132,6,c	;volatile
  8925  0058BC                     
  8926                           ; BSR set to: 14
  8927                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8928  0058BC  9BA7               	bcf	167,5,b	;volatile
  8929  0058BE                     
  8930                           ; BSR set to: 14
  8931                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8932  0058BE  9DA7               	bcf	167,6,b	;volatile
  8933                           
  8934                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8935  0058C0  0E1D               	movlw	29
  8936  0058C2  6F1D               	movwf	29,b	;volatile
  8937                           
  8938                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8939  0058C4  0E1E               	movlw	30
  8940  0058C6  6F1C               	movwf	28,b	;volatile
  8941                           
  8942                           ;i2c.c: 18:   RD5PPS=0x1C;
  8943  0058C8  0E1C               	movlw	28
  8944  0058CA  6F6F               	movwf	111,b	;volatile
  8945                           
  8946                           ;i2c.c: 19:   RD6PPS=0x1B;
  8947  0058CC  0E1B               	movlw	27
  8948  0058CE  6F70               	movwf	112,b	;volatile
  8949  0058D0                     
  8950                           ; BSR set to: 14
  8951  0058D0  0012               	return		;funcret
  8952  0058D2                     __end_of_I2C_2_Master_Init:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function _buggylight_init *****************
  8956 ;; Defined at:
  8957 ;;		line 13 in file "color.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		None
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 1
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_main
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text43
  8986  005A54                     __ptext43:
  8987                           	callstack 0
  8988  005A54                     _buggylight_init:
  8989                           	callstack 29
  8990  005A54                     
  8991                           ;color.c: 15:     TRISHbits.TRISH1=0;
  8992  005A54  9288               	bcf	136,1,c	;volatile
  8993                           
  8994                           ;color.c: 16:     TRISDbits.TRISD4=0;
  8995  005A56  9884               	bcf	132,4,c	;volatile
  8996                           
  8997                           ;color.c: 17:     TRISDbits.TRISD3=0;
  8998  005A58  9684               	bcf	132,3,c	;volatile
  8999                           
  9000                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9001  005A5A  9086               	bcf	134,0,c	;volatile
  9002                           
  9003                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9004  005A5C  9088               	bcf	136,0,c	;volatile
  9005                           
  9006                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9007  005A5E  9280               	bcf	128,1,c	;volatile
  9008                           
  9009                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9010  005A60  987C               	bcf	124,4,c	;volatile
  9011                           
  9012                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9013  005A62  967C               	bcf	124,3,c	;volatile
  9014                           
  9015                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9016  005A64  907E               	bcf	126,0,c	;volatile
  9017                           
  9018                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9019  005A66  9080               	bcf	128,0,c	;volatile
  9020  005A68  0012               	return		;funcret
  9021  005A6A                     __end_of_buggylight_init:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function _action *****************
  9025 ;; Defined at:
  9026 ;;		line 18 in file "movement.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  color           1    wreg     unsigned char 
  9029 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9030 ;;		 -> main@motorL(10), 
  9031 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9032 ;;		 -> main@motorR(10), 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  color           1   93[COMRAM] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9044 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9047 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9048 ;;Total ram usage:        5 bytes
  9049 ;; Hardware stack levels used: 1
  9050 ;; Hardware stack levels required when called: 11
  9051 ;; This function calls:
  9052 ;;		_goback
  9053 ;;		_reverse_square
  9054 ;;		_short_reverse
  9055 ;;		_toggle_light
  9056 ;;		_turnLeft
  9057 ;;		_turnRight
  9058 ;; This function is called by:
  9059 ;;		_main
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text44
  9064  003118                     __ptext44:
  9065                           	callstack 0
  9066  003118                     _action:
  9067                           	callstack 19
  9068                           
  9069                           ;incstack = 0
  9070                           ;action@color stored from wreg
  9071  003118  6E5E               	movwf	action@color^0,c
  9072  00311A                     
  9073                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
  9074  00311A  505E               	movf	action@color^0,w,c
  9075  00311C  B4D8               	btfsc	status,2,c
  9076  00311E  EF93  F018         	goto	u5441
  9077  003122  EF95  F018         	goto	u5440
  9078  003126                     u5441:
  9079  003126  EFF1  F019         	goto	l628
  9080  00312A                     u5440:
  9081  00312A                     
  9082                           ;movement.c: 25:         if (color == 1){
  9083  00312A  045E               	decf	action@color^0,w,c
  9084  00312C  A4D8               	btfss	status,2,c
  9085  00312E  EF9B  F018         	goto	u5451
  9086  003132  EF9D  F018         	goto	u5450
  9087  003136                     u5451:
  9088  003136  EFC1  F018         	goto	l5389
  9089  00313A                     u5450:
  9090  00313A                     
  9091                           ;movement.c: 26:             short_reverse(mL,mR);
  9092  00313A  C0E0  F026         	movff	action@mL,short_reverse@mL
  9093  00313E  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9094  003142  C0E2  F028         	movff	action@mR,short_reverse@mR
  9095  003146  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9096  00314A  EC38  F02B         	call	_short_reverse	;wreg free
  9097                           
  9098                           ;movement.c: 27:             turnRight(mL,mR,90);
  9099  00314E  C0E0  F020         	movff	action@mL,turnRight@mL
  9100  003152  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9101  003156  C0E2  F022         	movff	action@mR,turnRight@mR
  9102  00315A  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9103  00315E  0E5A               	movlw	90
  9104  003160  6E24               	movwf	turnRight@angle_right^0,c
  9105  003162  EC18  F022         	call	_turnRight	;wreg free
  9106  003166                     
  9107                           ;movement.c: 28:             memory[array_index] = 1;
  9108  003166  0101               	movlb	1	; () banked
  9109  003168  515F               	movf	_array_index& (0+255),w,b
  9110  00316A  0D02               	mullw	2
  9111  00316C  0E00               	movlw	low _memory
  9112  00316E  24F3               	addwf	243,w,c
  9113  003170  6ED9               	movwf	fsr2l,c
  9114  003172  0E01               	movlw	high _memory
  9115  003174  20F4               	addwfc	prodh,w,c
  9116  003176  6EDA               	movwf	fsr2h,c
  9117  003178  0E01               	movlw	1
  9118  00317A  6EDE               	movwf	postinc2,c
  9119  00317C  0E00               	movlw	0
  9120  00317E  6EDD               	movwf	postdec2,c
  9121  003180                     
  9122                           ; BSR set to: 1
  9123                           ;movement.c: 29:             array_index++;
  9124  003180  2B5F               	incf	_array_index& (0+255),f,b
  9125  003182                     l5389:
  9126                           
  9127                           ;movement.c: 31:         if (color == 2){
  9128  003182  0E02               	movlw	2
  9129  003184  185E               	xorwf	action@color^0,w,c
  9130  003186  A4D8               	btfss	status,2,c
  9131  003188  EFC8  F018         	goto	u5461
  9132  00318C  EFCA  F018         	goto	u5460
  9133  003190                     u5461:
  9134  003190  EFEE  F018         	goto	l5397
  9135  003194                     u5460:
  9136  003194                     
  9137                           ;movement.c: 32:             short_reverse(mL,mR);
  9138  003194  C0E0  F026         	movff	action@mL,short_reverse@mL
  9139  003198  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9140  00319C  C0E2  F028         	movff	action@mR,short_reverse@mR
  9141  0031A0  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9142  0031A4  EC38  F02B         	call	_short_reverse	;wreg free
  9143                           
  9144                           ;movement.c: 33:             turnLeft(mL,mR,90);
  9145  0031A8  C0E0  F020         	movff	action@mL,turnLeft@mL
  9146  0031AC  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9147  0031B0  C0E2  F022         	movff	action@mR,turnLeft@mR
  9148  0031B4  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9149  0031B8  0E5A               	movlw	90
  9150  0031BA  6E24               	movwf	turnLeft@angle_left^0,c
  9151  0031BC  ECD8  F022         	call	_turnLeft	;wreg free
  9152  0031C0                     
  9153                           ;movement.c: 34:             memory[array_index] = 2;
  9154  0031C0  0101               	movlb	1	; () banked
  9155  0031C2  515F               	movf	_array_index& (0+255),w,b
  9156  0031C4  0D02               	mullw	2
  9157  0031C6  0E00               	movlw	low _memory
  9158  0031C8  24F3               	addwf	243,w,c
  9159  0031CA  6ED9               	movwf	fsr2l,c
  9160  0031CC  0E01               	movlw	high _memory
  9161  0031CE  20F4               	addwfc	prodh,w,c
  9162  0031D0  6EDA               	movwf	fsr2h,c
  9163  0031D2  0E02               	movlw	2
  9164  0031D4  6EDE               	movwf	postinc2,c
  9165  0031D6  0E00               	movlw	0
  9166  0031D8  6EDD               	movwf	postdec2,c
  9167  0031DA                     
  9168                           ; BSR set to: 1
  9169                           ;movement.c: 35:             array_index++;
  9170  0031DA  2B5F               	incf	_array_index& (0+255),f,b
  9171  0031DC                     l5397:
  9172                           
  9173                           ;movement.c: 37:         if (color == 3){
  9174  0031DC  0E03               	movlw	3
  9175  0031DE  185E               	xorwf	action@color^0,w,c
  9176  0031E0  A4D8               	btfss	status,2,c
  9177  0031E2  EFF5  F018         	goto	u5471
  9178  0031E6  EFF7  F018         	goto	u5470
  9179  0031EA                     u5471:
  9180  0031EA  EF1B  F019         	goto	l5405
  9181  0031EE                     u5470:
  9182  0031EE                     
  9183                           ;movement.c: 38:             short_reverse(mL,mR);
  9184  0031EE  C0E0  F026         	movff	action@mL,short_reverse@mL
  9185  0031F2  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9186  0031F6  C0E2  F028         	movff	action@mR,short_reverse@mR
  9187  0031FA  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9188  0031FE  EC38  F02B         	call	_short_reverse	;wreg free
  9189                           
  9190                           ;movement.c: 39:             turnLeft(mL,mR,180);
  9191  003202  C0E0  F020         	movff	action@mL,turnLeft@mL
  9192  003206  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9193  00320A  C0E2  F022         	movff	action@mR,turnLeft@mR
  9194  00320E  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9195  003212  0EB4               	movlw	180
  9196  003214  6E24               	movwf	turnLeft@angle_left^0,c
  9197  003216  ECD8  F022         	call	_turnLeft	;wreg free
  9198  00321A                     
  9199                           ;movement.c: 40:             memory[array_index] = 3;
  9200  00321A  0101               	movlb	1	; () banked
  9201  00321C  515F               	movf	_array_index& (0+255),w,b
  9202  00321E  0D02               	mullw	2
  9203  003220  0E00               	movlw	low _memory
  9204  003222  24F3               	addwf	243,w,c
  9205  003224  6ED9               	movwf	fsr2l,c
  9206  003226  0E01               	movlw	high _memory
  9207  003228  20F4               	addwfc	prodh,w,c
  9208  00322A  6EDA               	movwf	fsr2h,c
  9209  00322C  0E03               	movlw	3
  9210  00322E  6EDE               	movwf	postinc2,c
  9211  003230  0E00               	movlw	0
  9212  003232  6EDD               	movwf	postdec2,c
  9213  003234                     
  9214                           ; BSR set to: 1
  9215                           ;movement.c: 41:             array_index++;
  9216  003234  2B5F               	incf	_array_index& (0+255),f,b
  9217  003236                     l5405:
  9218                           
  9219                           ;movement.c: 43:         if (color == 4){
  9220  003236  0E04               	movlw	4
  9221  003238  185E               	xorwf	action@color^0,w,c
  9222  00323A  A4D8               	btfss	status,2,c
  9223  00323C  EF22  F019         	goto	u5481
  9224  003240  EF24  F019         	goto	u5480
  9225  003244                     u5481:
  9226  003244  EF48  F019         	goto	l5413
  9227  003248                     u5480:
  9228  003248                     
  9229                           ;movement.c: 44:             reverse_square(mL,mR);
  9230  003248  C0E0  F026         	movff	action@mL,reverse_square@mL
  9231  00324C  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9232  003250  C0E2  F028         	movff	action@mR,reverse_square@mR
  9233  003254  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9234  003258  EC59  F02B         	call	_reverse_square	;wreg free
  9235                           
  9236                           ;movement.c: 45:             turnRight(mL,mR,90);
  9237  00325C  C0E0  F020         	movff	action@mL,turnRight@mL
  9238  003260  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9239  003264  C0E2  F022         	movff	action@mR,turnRight@mR
  9240  003268  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9241  00326C  0E5A               	movlw	90
  9242  00326E  6E24               	movwf	turnRight@angle_right^0,c
  9243  003270  EC18  F022         	call	_turnRight	;wreg free
  9244  003274                     
  9245                           ;movement.c: 46:             memory[array_index] = 4;
  9246  003274  0101               	movlb	1	; () banked
  9247  003276  515F               	movf	_array_index& (0+255),w,b
  9248  003278  0D02               	mullw	2
  9249  00327A  0E00               	movlw	low _memory
  9250  00327C  24F3               	addwf	243,w,c
  9251  00327E  6ED9               	movwf	fsr2l,c
  9252  003280  0E01               	movlw	high _memory
  9253  003282  20F4               	addwfc	prodh,w,c
  9254  003284  6EDA               	movwf	fsr2h,c
  9255  003286  0E04               	movlw	4
  9256  003288  6EDE               	movwf	postinc2,c
  9257  00328A  0E00               	movlw	0
  9258  00328C  6EDD               	movwf	postdec2,c
  9259  00328E                     
  9260                           ; BSR set to: 1
  9261                           ;movement.c: 47:             array_index++;
  9262  00328E  2B5F               	incf	_array_index& (0+255),f,b
  9263  003290                     l5413:
  9264                           
  9265                           ;movement.c: 49:         if (color == 5){
  9266  003290  0E05               	movlw	5
  9267  003292  185E               	xorwf	action@color^0,w,c
  9268  003294  A4D8               	btfss	status,2,c
  9269  003296  EF4F  F019         	goto	u5491
  9270  00329A  EF51  F019         	goto	u5490
  9271  00329E                     u5491:
  9272  00329E  EF75  F019         	goto	l5421
  9273  0032A2                     u5490:
  9274  0032A2                     
  9275                           ;movement.c: 50:             reverse_square(mL,mR);
  9276  0032A2  C0E0  F026         	movff	action@mL,reverse_square@mL
  9277  0032A6  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9278  0032AA  C0E2  F028         	movff	action@mR,reverse_square@mR
  9279  0032AE  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9280  0032B2  EC59  F02B         	call	_reverse_square	;wreg free
  9281                           
  9282                           ;movement.c: 51:             turnLeft(mL,mR,90);
  9283  0032B6  C0E0  F020         	movff	action@mL,turnLeft@mL
  9284  0032BA  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9285  0032BE  C0E2  F022         	movff	action@mR,turnLeft@mR
  9286  0032C2  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9287  0032C6  0E5A               	movlw	90
  9288  0032C8  6E24               	movwf	turnLeft@angle_left^0,c
  9289  0032CA  ECD8  F022         	call	_turnLeft	;wreg free
  9290  0032CE                     
  9291                           ;movement.c: 52:             memory[array_index] = 5;
  9292  0032CE  0101               	movlb	1	; () banked
  9293  0032D0  515F               	movf	_array_index& (0+255),w,b
  9294  0032D2  0D02               	mullw	2
  9295  0032D4  0E00               	movlw	low _memory
  9296  0032D6  24F3               	addwf	243,w,c
  9297  0032D8  6ED9               	movwf	fsr2l,c
  9298  0032DA  0E01               	movlw	high _memory
  9299  0032DC  20F4               	addwfc	prodh,w,c
  9300  0032DE  6EDA               	movwf	fsr2h,c
  9301  0032E0  0E05               	movlw	5
  9302  0032E2  6EDE               	movwf	postinc2,c
  9303  0032E4  0E00               	movlw	0
  9304  0032E6  6EDD               	movwf	postdec2,c
  9305  0032E8                     
  9306                           ; BSR set to: 1
  9307                           ;movement.c: 53:             array_index++;
  9308  0032E8  2B5F               	incf	_array_index& (0+255),f,b
  9309  0032EA                     l5421:
  9310                           
  9311                           ;movement.c: 55:         if (color == 6){
  9312  0032EA  0E06               	movlw	6
  9313  0032EC  185E               	xorwf	action@color^0,w,c
  9314  0032EE  A4D8               	btfss	status,2,c
  9315  0032F0  EF7C  F019         	goto	u5501
  9316  0032F4  EF7E  F019         	goto	u5500
  9317  0032F8                     u5501:
  9318  0032F8  EFA2  F019         	goto	l5429
  9319  0032FC                     u5500:
  9320  0032FC                     
  9321                           ;movement.c: 56:             short_reverse(mL,mR);
  9322  0032FC  C0E0  F026         	movff	action@mL,short_reverse@mL
  9323  003300  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9324  003304  C0E2  F028         	movff	action@mR,short_reverse@mR
  9325  003308  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9326  00330C  EC38  F02B         	call	_short_reverse	;wreg free
  9327                           
  9328                           ;movement.c: 57:             turnRight(mL,mR,135);
  9329  003310  C0E0  F020         	movff	action@mL,turnRight@mL
  9330  003314  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9331  003318  C0E2  F022         	movff	action@mR,turnRight@mR
  9332  00331C  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9333  003320  0E87               	movlw	135
  9334  003322  6E24               	movwf	turnRight@angle_right^0,c
  9335  003324  EC18  F022         	call	_turnRight	;wreg free
  9336  003328                     
  9337                           ;movement.c: 58:             memory[array_index] = 6;
  9338  003328  0101               	movlb	1	; () banked
  9339  00332A  515F               	movf	_array_index& (0+255),w,b
  9340  00332C  0D02               	mullw	2
  9341  00332E  0E00               	movlw	low _memory
  9342  003330  24F3               	addwf	243,w,c
  9343  003332  6ED9               	movwf	fsr2l,c
  9344  003334  0E01               	movlw	high _memory
  9345  003336  20F4               	addwfc	prodh,w,c
  9346  003338  6EDA               	movwf	fsr2h,c
  9347  00333A  0E06               	movlw	6
  9348  00333C  6EDE               	movwf	postinc2,c
  9349  00333E  0E00               	movlw	0
  9350  003340  6EDD               	movwf	postdec2,c
  9351  003342                     
  9352                           ; BSR set to: 1
  9353                           ;movement.c: 59:             array_index++;
  9354  003342  2B5F               	incf	_array_index& (0+255),f,b
  9355  003344                     l5429:
  9356                           
  9357                           ;movement.c: 61:         if (color == 7){
  9358  003344  0E07               	movlw	7
  9359  003346  185E               	xorwf	action@color^0,w,c
  9360  003348  A4D8               	btfss	status,2,c
  9361  00334A  EFA9  F019         	goto	u5511
  9362  00334E  EFAB  F019         	goto	u5510
  9363  003352                     u5511:
  9364  003352  EFCF  F019         	goto	l5437
  9365  003356                     u5510:
  9366  003356                     
  9367                           ;movement.c: 62:             short_reverse(mL,mR);
  9368  003356  C0E0  F026         	movff	action@mL,short_reverse@mL
  9369  00335A  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9370  00335E  C0E2  F028         	movff	action@mR,short_reverse@mR
  9371  003362  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9372  003366  EC38  F02B         	call	_short_reverse	;wreg free
  9373                           
  9374                           ;movement.c: 63:             turnLeft(mL,mR,135);
  9375  00336A  C0E0  F020         	movff	action@mL,turnLeft@mL
  9376  00336E  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9377  003372  C0E2  F022         	movff	action@mR,turnLeft@mR
  9378  003376  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9379  00337A  0E87               	movlw	135
  9380  00337C  6E24               	movwf	turnLeft@angle_left^0,c
  9381  00337E  ECD8  F022         	call	_turnLeft	;wreg free
  9382  003382                     
  9383                           ;movement.c: 64:             memory[array_index] = 7;
  9384  003382  0101               	movlb	1	; () banked
  9385  003384  515F               	movf	_array_index& (0+255),w,b
  9386  003386  0D02               	mullw	2
  9387  003388  0E00               	movlw	low _memory
  9388  00338A  24F3               	addwf	243,w,c
  9389  00338C  6ED9               	movwf	fsr2l,c
  9390  00338E  0E01               	movlw	high _memory
  9391  003390  20F4               	addwfc	prodh,w,c
  9392  003392  6EDA               	movwf	fsr2h,c
  9393  003394  0E07               	movlw	7
  9394  003396  6EDE               	movwf	postinc2,c
  9395  003398  0E00               	movlw	0
  9396  00339A  6EDD               	movwf	postdec2,c
  9397  00339C                     
  9398                           ; BSR set to: 1
  9399                           ;movement.c: 65:             array_index++;
  9400  00339C  2B5F               	incf	_array_index& (0+255),f,b
  9401  00339E                     l5437:
  9402                           
  9403                           ;movement.c: 67:         if (color == 8){
  9404  00339E  0E08               	movlw	8
  9405  0033A0  185E               	xorwf	action@color^0,w,c
  9406  0033A2  A4D8               	btfss	status,2,c
  9407  0033A4  EFD6  F019         	goto	u5521
  9408  0033A8  EFD8  F019         	goto	u5520
  9409  0033AC                     u5521:
  9410  0033AC  EFF1  F019         	goto	l628
  9411  0033B0                     u5520:
  9412  0033B0                     
  9413                           ;movement.c: 68:             toggle_light(2,1);
  9414  0033B0  0E01               	movlw	1
  9415  0033B2  6E01               	movwf	toggle_light@toggletime^0,c
  9416  0033B4  0E02               	movlw	2
  9417  0033B6  ECF2  F019         	call	_toggle_light
  9418  0033BA                     
  9419                           ;movement.c: 69:             short_reverse(mL,mR);
  9420  0033BA  C0E0  F026         	movff	action@mL,short_reverse@mL
  9421  0033BE  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9422  0033C2  C0E2  F028         	movff	action@mR,short_reverse@mR
  9423  0033C6  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9424  0033CA  EC38  F02B         	call	_short_reverse	;wreg free
  9425  0033CE                     
  9426                           ;movement.c: 70:             goback(mL,mR);
  9427  0033CE  C0E0  F058         	movff	action@mL,goback@mL
  9428  0033D2  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9429  0033D6  C0E2  F05A         	movff	action@mR,goback@mR
  9430  0033DA  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9431  0033DE  EC25  F017         	call	_goback	;wreg free
  9432  0033E2                     l628:
  9433  0033E2  0012               	return		;funcret
  9434  0033E4                     __end_of_action:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function _toggle_light *****************
  9438 ;; Defined at:
  9439 ;;		line 29 in file "color.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  lightnumber     1    wreg     unsigned char 
  9442 ;;  toggletime      1    0[COMRAM] unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9445 ;;  i               1    3[COMRAM] unsigned char 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9455 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;Total ram usage:        5 bytes
  9460 ;; Hardware stack levels used: 1
  9461 ;; Hardware stack levels required when called: 1
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_calibrate_white
  9466 ;;		_detect_color
  9467 ;;		_amb_light_measure
  9468 ;;		_action
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text45
  9473  0033E4                     __ptext45:
  9474                           	callstack 0
  9475  0033E4                     _toggle_light:
  9476                           	callstack 27
  9477                           
  9478                           ;incstack = 0
  9479                           ;toggle_light@lightnumber stored from wreg
  9480  0033E4  6E05               	movwf	toggle_light@lightnumber^0,c
  9481  0033E6                     
  9482                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9483  0033E6  0E00               	movlw	0
  9484  0033E8  6E04               	movwf	toggle_light@i^0,c
  9485                           
  9486                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9487  0033EA  0E00               	movlw	0
  9488  0033EC  6E04               	movwf	toggle_light@i^0,c
  9489  0033EE  EF3E  F01B         	goto	l74
  9490  0033F2                     l4477:
  9491                           
  9492                           ;color.c: 34:         if (lightnumber == 1){
  9493  0033F2  0405               	decf	toggle_light@lightnumber^0,w,c
  9494  0033F4  A4D8               	btfss	status,2,c
  9495  0033F6  EFFF  F019         	goto	u4301
  9496  0033FA  EF01  F01A         	goto	u4300
  9497  0033FE                     u4301:
  9498  0033FE  EF39  F01A         	goto	l4485
  9499  003402                     u4300:
  9500  003402                     
  9501                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9502  003402  A280               	btfss	128,1,c	;volatile
  9503  003404  EF06  F01A         	goto	u4311
  9504  003408  EF0A  F01A         	goto	u4310
  9505  00340C                     u4311:
  9506  00340C  6A02               	clrf	??_toggle_light^0,c
  9507  00340E  2A02               	incf	??_toggle_light^0,f,c
  9508  003410  EF0B  F01A         	goto	u4328
  9509  003414                     u4310:
  9510  003414  6A02               	clrf	??_toggle_light^0,c
  9511  003416                     u4328:
  9512  003416  4602               	rlncf	??_toggle_light^0,f,c
  9513  003418  5080               	movf	128,w,c	;volatile
  9514  00341A  1802               	xorwf	??_toggle_light^0,w,c
  9515  00341C  0BFD               	andlw	-3
  9516  00341E  1802               	xorwf	??_toggle_light^0,w,c
  9517  003420  6E80               	movwf	128,c	;volatile
  9518  003422                     
  9519                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9520  003422  0E29               	movlw	41
  9521  003424  6E03               	movwf	(??_toggle_light+1)^0,c
  9522  003426  0E96               	movlw	150
  9523  003428  6E02               	movwf	??_toggle_light^0,c
  9524  00342A  0E7F               	movlw	127
  9525  00342C                     u5947:
  9526  00342C  2EE8               	decfsz	wreg,f,c
  9527  00342E  D7FE               	bra	u5947
  9528  003430  2E02               	decfsz	??_toggle_light^0,f,c
  9529  003432  D7FC               	bra	u5947
  9530  003434  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9531  003436  D7FA               	bra	u5947
  9532  003438  F000               	nop	
  9533  00343A                     
  9534                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9535  00343A  A280               	btfss	128,1,c	;volatile
  9536  00343C  EF22  F01A         	goto	u4331
  9537  003440  EF26  F01A         	goto	u4330
  9538  003444                     u4331:
  9539  003444  6A02               	clrf	??_toggle_light^0,c
  9540  003446  2A02               	incf	??_toggle_light^0,f,c
  9541  003448  EF27  F01A         	goto	u4348
  9542  00344C                     u4330:
  9543  00344C  6A02               	clrf	??_toggle_light^0,c
  9544  00344E                     u4348:
  9545  00344E  4602               	rlncf	??_toggle_light^0,f,c
  9546  003450  5080               	movf	128,w,c	;volatile
  9547  003452  1802               	xorwf	??_toggle_light^0,w,c
  9548  003454  0BFD               	andlw	-3
  9549  003456  1802               	xorwf	??_toggle_light^0,w,c
  9550  003458  6E80               	movwf	128,c	;volatile
  9551                           
  9552                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9553  00345A  0E29               	movlw	41
  9554  00345C  6E03               	movwf	(??_toggle_light+1)^0,c
  9555  00345E  0E96               	movlw	150
  9556  003460  6E02               	movwf	??_toggle_light^0,c
  9557  003462  0E7F               	movlw	127
  9558  003464                     u5957:
  9559  003464  2EE8               	decfsz	wreg,f,c
  9560  003466  D7FE               	bra	u5957
  9561  003468  2E02               	decfsz	??_toggle_light^0,f,c
  9562  00346A  D7FC               	bra	u5957
  9563  00346C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9564  00346E  D7FA               	bra	u5957
  9565  003470  F000               	nop	
  9566  003472                     l4485:
  9567                           
  9568                           ;color.c: 40:         if (lightnumber == 2){
  9569  003472  0E02               	movlw	2
  9570  003474  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9571  003476  A4D8               	btfss	status,2,c
  9572  003478  EF40  F01A         	goto	u4351
  9573  00347C  EF42  F01A         	goto	u4350
  9574  003480                     u4351:
  9575  003480  EF7A  F01A         	goto	l4493
  9576  003484                     u4350:
  9577  003484                     
  9578                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9579  003484  A87C               	btfss	124,4,c	;volatile
  9580  003486  EF47  F01A         	goto	u4361
  9581  00348A  EF4B  F01A         	goto	u4360
  9582  00348E                     u4361:
  9583  00348E  6A02               	clrf	??_toggle_light^0,c
  9584  003490  2A02               	incf	??_toggle_light^0,f,c
  9585  003492  EF4C  F01A         	goto	u4378
  9586  003496                     u4360:
  9587  003496  6A02               	clrf	??_toggle_light^0,c
  9588  003498                     u4378:
  9589  003498  3A02               	swapf	??_toggle_light^0,f,c
  9590  00349A  507C               	movf	124,w,c	;volatile
  9591  00349C  1802               	xorwf	??_toggle_light^0,w,c
  9592  00349E  0BEF               	andlw	-17
  9593  0034A0  1802               	xorwf	??_toggle_light^0,w,c
  9594  0034A2  6E7C               	movwf	124,c	;volatile
  9595  0034A4                     
  9596                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9597  0034A4  0E29               	movlw	41
  9598  0034A6  6E03               	movwf	(??_toggle_light+1)^0,c
  9599  0034A8  0E96               	movlw	150
  9600  0034AA  6E02               	movwf	??_toggle_light^0,c
  9601  0034AC  0E7F               	movlw	127
  9602  0034AE                     u5967:
  9603  0034AE  2EE8               	decfsz	wreg,f,c
  9604  0034B0  D7FE               	bra	u5967
  9605  0034B2  2E02               	decfsz	??_toggle_light^0,f,c
  9606  0034B4  D7FC               	bra	u5967
  9607  0034B6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9608  0034B8  D7FA               	bra	u5967
  9609  0034BA  F000               	nop	
  9610  0034BC                     
  9611                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9612  0034BC  A87C               	btfss	124,4,c	;volatile
  9613  0034BE  EF63  F01A         	goto	u4381
  9614  0034C2  EF67  F01A         	goto	u4380
  9615  0034C6                     u4381:
  9616  0034C6  6A02               	clrf	??_toggle_light^0,c
  9617  0034C8  2A02               	incf	??_toggle_light^0,f,c
  9618  0034CA  EF68  F01A         	goto	u4398
  9619  0034CE                     u4380:
  9620  0034CE  6A02               	clrf	??_toggle_light^0,c
  9621  0034D0                     u4398:
  9622  0034D0  3A02               	swapf	??_toggle_light^0,f,c
  9623  0034D2  507C               	movf	124,w,c	;volatile
  9624  0034D4  1802               	xorwf	??_toggle_light^0,w,c
  9625  0034D6  0BEF               	andlw	-17
  9626  0034D8  1802               	xorwf	??_toggle_light^0,w,c
  9627  0034DA  6E7C               	movwf	124,c	;volatile
  9628                           
  9629                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9630  0034DC  0E29               	movlw	41
  9631  0034DE  6E03               	movwf	(??_toggle_light+1)^0,c
  9632  0034E0  0E96               	movlw	150
  9633  0034E2  6E02               	movwf	??_toggle_light^0,c
  9634  0034E4  0E7F               	movlw	127
  9635  0034E6                     u5977:
  9636  0034E6  2EE8               	decfsz	wreg,f,c
  9637  0034E8  D7FE               	bra	u5977
  9638  0034EA  2E02               	decfsz	??_toggle_light^0,f,c
  9639  0034EC  D7FC               	bra	u5977
  9640  0034EE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9641  0034F0  D7FA               	bra	u5977
  9642  0034F2  F000               	nop	
  9643  0034F4                     l4493:
  9644                           
  9645                           ;color.c: 46:         if (lightnumber == 3){
  9646  0034F4  0E03               	movlw	3
  9647  0034F6  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9648  0034F8  A4D8               	btfss	status,2,c
  9649  0034FA  EF81  F01A         	goto	u4401
  9650  0034FE  EF83  F01A         	goto	u4400
  9651  003502                     u4401:
  9652  003502  EFBF  F01A         	goto	l4501
  9653  003506                     u4400:
  9654  003506                     
  9655                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9656  003506  A67C               	btfss	124,3,c	;volatile
  9657  003508  EF88  F01A         	goto	u4411
  9658  00350C  EF8C  F01A         	goto	u4410
  9659  003510                     u4411:
  9660  003510  6A02               	clrf	??_toggle_light^0,c
  9661  003512  2A02               	incf	??_toggle_light^0,f,c
  9662  003514  EF8D  F01A         	goto	u4428
  9663  003518                     u4410:
  9664  003518  6A02               	clrf	??_toggle_light^0,c
  9665  00351A                     u4428:
  9666  00351A  4602               	rlncf	??_toggle_light^0,f,c
  9667  00351C  4602               	rlncf	??_toggle_light^0,f,c
  9668  00351E  4602               	rlncf	??_toggle_light^0,f,c
  9669  003520  507C               	movf	124,w,c	;volatile
  9670  003522  1802               	xorwf	??_toggle_light^0,w,c
  9671  003524  0BF7               	andlw	-9
  9672  003526  1802               	xorwf	??_toggle_light^0,w,c
  9673  003528  6E7C               	movwf	124,c	;volatile
  9674  00352A                     
  9675                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9676  00352A  0E29               	movlw	41
  9677  00352C  6E03               	movwf	(??_toggle_light+1)^0,c
  9678  00352E  0E96               	movlw	150
  9679  003530  6E02               	movwf	??_toggle_light^0,c
  9680  003532  0E7F               	movlw	127
  9681  003534                     u5987:
  9682  003534  2EE8               	decfsz	wreg,f,c
  9683  003536  D7FE               	bra	u5987
  9684  003538  2E02               	decfsz	??_toggle_light^0,f,c
  9685  00353A  D7FC               	bra	u5987
  9686  00353C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9687  00353E  D7FA               	bra	u5987
  9688  003540  F000               	nop	
  9689  003542                     
  9690                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9691  003542  A67C               	btfss	124,3,c	;volatile
  9692  003544  EFA6  F01A         	goto	u4431
  9693  003548  EFAA  F01A         	goto	u4430
  9694  00354C                     u4431:
  9695  00354C  6A02               	clrf	??_toggle_light^0,c
  9696  00354E  2A02               	incf	??_toggle_light^0,f,c
  9697  003550  EFAB  F01A         	goto	u4448
  9698  003554                     u4430:
  9699  003554  6A02               	clrf	??_toggle_light^0,c
  9700  003556                     u4448:
  9701  003556  4602               	rlncf	??_toggle_light^0,f,c
  9702  003558  4602               	rlncf	??_toggle_light^0,f,c
  9703  00355A  4602               	rlncf	??_toggle_light^0,f,c
  9704  00355C  507C               	movf	124,w,c	;volatile
  9705  00355E  1802               	xorwf	??_toggle_light^0,w,c
  9706  003560  0BF7               	andlw	-9
  9707  003562  1802               	xorwf	??_toggle_light^0,w,c
  9708  003564  6E7C               	movwf	124,c	;volatile
  9709                           
  9710                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9711  003566  0E29               	movlw	41
  9712  003568  6E03               	movwf	(??_toggle_light+1)^0,c
  9713  00356A  0E96               	movlw	150
  9714  00356C  6E02               	movwf	??_toggle_light^0,c
  9715  00356E  0E7F               	movlw	127
  9716  003570                     u5997:
  9717  003570  2EE8               	decfsz	wreg,f,c
  9718  003572  D7FE               	bra	u5997
  9719  003574  2E02               	decfsz	??_toggle_light^0,f,c
  9720  003576  D7FC               	bra	u5997
  9721  003578  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9722  00357A  D7FA               	bra	u5997
  9723  00357C  F000               	nop	
  9724  00357E                     l4501:
  9725                           
  9726                           ;color.c: 52:         if (lightnumber == 4){
  9727  00357E  0E04               	movlw	4
  9728  003580  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9729  003582  A4D8               	btfss	status,2,c
  9730  003584  EFC6  F01A         	goto	u4451
  9731  003588  EFC8  F01A         	goto	u4450
  9732  00358C                     u4451:
  9733  00358C  EFFE  F01A         	goto	l4509
  9734  003590                     u4450:
  9735  003590                     
  9736                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9737  003590  A07E               	btfss	126,0,c	;volatile
  9738  003592  EFCD  F01A         	goto	u4461
  9739  003596  EFD1  F01A         	goto	u4460
  9740  00359A                     u4461:
  9741  00359A  6A02               	clrf	??_toggle_light^0,c
  9742  00359C  2A02               	incf	??_toggle_light^0,f,c
  9743  00359E  EFD2  F01A         	goto	u4478
  9744  0035A2                     u4460:
  9745  0035A2  6A02               	clrf	??_toggle_light^0,c
  9746  0035A4                     u4478:
  9747  0035A4  507E               	movf	126,w,c	;volatile
  9748  0035A6  1802               	xorwf	??_toggle_light^0,w,c
  9749  0035A8  0BFE               	andlw	-2
  9750  0035AA  1802               	xorwf	??_toggle_light^0,w,c
  9751  0035AC  6E7E               	movwf	126,c	;volatile
  9752  0035AE                     
  9753                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9754  0035AE  0E29               	movlw	41
  9755  0035B0  6E03               	movwf	(??_toggle_light+1)^0,c
  9756  0035B2  0E96               	movlw	150
  9757  0035B4  6E02               	movwf	??_toggle_light^0,c
  9758  0035B6  0E7F               	movlw	127
  9759  0035B8                     u6007:
  9760  0035B8  2EE8               	decfsz	wreg,f,c
  9761  0035BA  D7FE               	bra	u6007
  9762  0035BC  2E02               	decfsz	??_toggle_light^0,f,c
  9763  0035BE  D7FC               	bra	u6007
  9764  0035C0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9765  0035C2  D7FA               	bra	u6007
  9766  0035C4  F000               	nop	
  9767  0035C6                     
  9768                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9769  0035C6  A07E               	btfss	126,0,c	;volatile
  9770  0035C8  EFE8  F01A         	goto	u4481
  9771  0035CC  EFEC  F01A         	goto	u4480
  9772  0035D0                     u4481:
  9773  0035D0  6A02               	clrf	??_toggle_light^0,c
  9774  0035D2  2A02               	incf	??_toggle_light^0,f,c
  9775  0035D4  EFED  F01A         	goto	u4498
  9776  0035D8                     u4480:
  9777  0035D8  6A02               	clrf	??_toggle_light^0,c
  9778  0035DA                     u4498:
  9779  0035DA  507E               	movf	126,w,c	;volatile
  9780  0035DC  1802               	xorwf	??_toggle_light^0,w,c
  9781  0035DE  0BFE               	andlw	-2
  9782  0035E0  1802               	xorwf	??_toggle_light^0,w,c
  9783  0035E2  6E7E               	movwf	126,c	;volatile
  9784                           
  9785                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9786  0035E4  0E29               	movlw	41
  9787  0035E6  6E03               	movwf	(??_toggle_light+1)^0,c
  9788  0035E8  0E96               	movlw	150
  9789  0035EA  6E02               	movwf	??_toggle_light^0,c
  9790  0035EC  0E7F               	movlw	127
  9791  0035EE                     u6017:
  9792  0035EE  2EE8               	decfsz	wreg,f,c
  9793  0035F0  D7FE               	bra	u6017
  9794  0035F2  2E02               	decfsz	??_toggle_light^0,f,c
  9795  0035F4  D7FC               	bra	u6017
  9796  0035F6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9797  0035F8  D7FA               	bra	u6017
  9798  0035FA  F000               	nop	
  9799  0035FC                     l4509:
  9800                           
  9801                           ;color.c: 58:         if (lightnumber == 3){
  9802  0035FC  0E03               	movlw	3
  9803  0035FE  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9804  003600  A4D8               	btfss	status,2,c
  9805  003602  EF05  F01B         	goto	u4501
  9806  003606  EF07  F01B         	goto	u4500
  9807  00360A                     u4501:
  9808  00360A  EF3D  F01B         	goto	l4517
  9809  00360E                     u4500:
  9810  00360E                     
  9811                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9812  00360E  A080               	btfss	128,0,c	;volatile
  9813  003610  EF0C  F01B         	goto	u4511
  9814  003614  EF10  F01B         	goto	u4510
  9815  003618                     u4511:
  9816  003618  6A02               	clrf	??_toggle_light^0,c
  9817  00361A  2A02               	incf	??_toggle_light^0,f,c
  9818  00361C  EF11  F01B         	goto	u4528
  9819  003620                     u4510:
  9820  003620  6A02               	clrf	??_toggle_light^0,c
  9821  003622                     u4528:
  9822  003622  5080               	movf	128,w,c	;volatile
  9823  003624  1802               	xorwf	??_toggle_light^0,w,c
  9824  003626  0BFE               	andlw	-2
  9825  003628  1802               	xorwf	??_toggle_light^0,w,c
  9826  00362A  6E80               	movwf	128,c	;volatile
  9827  00362C                     
  9828                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9829  00362C  0E29               	movlw	41
  9830  00362E  6E03               	movwf	(??_toggle_light+1)^0,c
  9831  003630  0E96               	movlw	150
  9832  003632  6E02               	movwf	??_toggle_light^0,c
  9833  003634  0E7F               	movlw	127
  9834  003636                     u6027:
  9835  003636  2EE8               	decfsz	wreg,f,c
  9836  003638  D7FE               	bra	u6027
  9837  00363A  2E02               	decfsz	??_toggle_light^0,f,c
  9838  00363C  D7FC               	bra	u6027
  9839  00363E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9840  003640  D7FA               	bra	u6027
  9841  003642  F000               	nop	
  9842  003644                     
  9843                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9844  003644  A080               	btfss	128,0,c	;volatile
  9845  003646  EF27  F01B         	goto	u4531
  9846  00364A  EF2B  F01B         	goto	u4530
  9847  00364E                     u4531:
  9848  00364E  6A02               	clrf	??_toggle_light^0,c
  9849  003650  2A02               	incf	??_toggle_light^0,f,c
  9850  003652  EF2C  F01B         	goto	u4548
  9851  003656                     u4530:
  9852  003656  6A02               	clrf	??_toggle_light^0,c
  9853  003658                     u4548:
  9854  003658  5080               	movf	128,w,c	;volatile
  9855  00365A  1802               	xorwf	??_toggle_light^0,w,c
  9856  00365C  0BFE               	andlw	-2
  9857  00365E  1802               	xorwf	??_toggle_light^0,w,c
  9858  003660  6E80               	movwf	128,c	;volatile
  9859                           
  9860                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9861  003662  0E29               	movlw	41
  9862  003664  6E03               	movwf	(??_toggle_light+1)^0,c
  9863  003666  0E96               	movlw	150
  9864  003668  6E02               	movwf	??_toggle_light^0,c
  9865  00366A  0E7F               	movlw	127
  9866  00366C                     u6037:
  9867  00366C  2EE8               	decfsz	wreg,f,c
  9868  00366E  D7FE               	bra	u6037
  9869  003670  2E02               	decfsz	??_toggle_light^0,f,c
  9870  003672  D7FC               	bra	u6037
  9871  003674  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9872  003676  D7FA               	bra	u6037
  9873  003678  F000               	nop	
  9874  00367A                     l4517:
  9875                           
  9876                           ;color.c: 64:     }
  9877  00367A  2A04               	incf	toggle_light@i^0,f,c
  9878  00367C                     l74:
  9879  00367C  5001               	movf	toggle_light@toggletime^0,w,c
  9880  00367E  5C04               	subwf	toggle_light@i^0,w,c
  9881  003680  A0D8               	btfss	status,0,c
  9882  003682  EF45  F01B         	goto	u4551
  9883  003686  EF47  F01B         	goto	u4550
  9884  00368A                     u4551:
  9885  00368A  EFF9  F019         	goto	l4477
  9886  00368E                     u4550:
  9887  00368E  0012               	return		;funcret
  9888  003690                     __end_of_toggle_light:
  9889                           	callstack 0
  9890                           
  9891 ;; *************** function _short_reverse *****************
  9892 ;; Defined at:
  9893 ;;		line 183 in file "dc_motor.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  9896 ;;		 -> main@motorL(10), 
  9897 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  9898 ;;		 -> main@motorR(10), 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9914 ;;Total ram usage:        6 bytes
  9915 ;; Hardware stack levels used: 1
  9916 ;; Hardware stack levels required when called: 5
  9917 ;; This function calls:
  9918 ;;		_fullSpeedBack
  9919 ;;		_stop
  9920 ;; This function is called by:
  9921 ;;		_action
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text46
  9926  005670                     __ptext46:
  9927                           	callstack 0
  9928  005670                     _short_reverse:
  9929                           	callstack 24
  9930  005670                     
  9931                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
  9932  005670  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
  9933  005674  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
  9934  005678  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
  9935  00567C  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
  9936  005680  ECDA  F027         	call	_fullSpeedBack	;wreg free
  9937  005684                     
  9938                           ;dc_motor.c: 185:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9939  005684  0E29               	movlw	41
  9940  005686  6E2B               	movwf	(??_short_reverse+1)^0,c
  9941  005688  0E96               	movlw	150
  9942  00568A  6E2A               	movwf	??_short_reverse^0,c
  9943  00568C  0E7F               	movlw	127
  9944  00568E                     u6047:
  9945  00568E  2EE8               	decfsz	wreg,f,c
  9946  005690  D7FE               	bra	u6047
  9947  005692  2E2A               	decfsz	??_short_reverse^0,f,c
  9948  005694  D7FC               	bra	u6047
  9949  005696  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
  9950  005698  D7FA               	bra	u6047
  9951  00569A  F000               	nop	
  9952  00569C                     
  9953                           ;dc_motor.c: 186:     stop(mL,mR);
  9954  00569C  C026  F01A         	movff	short_reverse@mL,stop@mL
  9955  0056A0  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
  9956  0056A4  C028  F01C         	movff	short_reverse@mR,stop@mR
  9957  0056A8  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
  9958  0056AC  EC3A  F028         	call	_stop	;wreg free
  9959  0056B0  0012               	return		;funcret
  9960  0056B2                     __end_of_short_reverse:
  9961                           	callstack 0
  9962                           
  9963 ;; *************** function _goback *****************
  9964 ;; Defined at:
  9965 ;;		line 111 in file "movement.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  mL              2   87[COMRAM] PTR struct DC_motor
  9968 ;;		 -> main@motorL(10), 
  9969 ;;  mR              2   89[COMRAM] PTR struct DC_motor
  9970 ;;		 -> main@motorR(10), 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  i               2  126[BANK0 ] unsigned int 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;Total ram usage:        8 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 10
  9989 ;; This function calls:
  9990 ;;		_color_predict
  9991 ;;		_fullSpeedAhead
  9992 ;;		_reverse_square
  9993 ;;		_stop
  9994 ;;		_turnLeft
  9995 ;;		_turnRight
  9996 ;; This function is called by:
  9997 ;;		_action
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text47
 10002  002E4A                     __ptext47:
 10003                           	callstack 0
 10004  002E4A                     _goback:
 10005                           	callstack 19
 10006  002E4A                     
 10007                           ;movement.c: 111: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 112:
      +                           { turnRight(mL,mR,180);
 10008  002E4A  C058  F020         	movff	goback@mL,turnRight@mL
 10009  002E4E  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10010  002E52  C05A  F022         	movff	goback@mR,turnRight@mR
 10011  002E56  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10012  002E5A  0EB4               	movlw	180
 10013  002E5C  6E24               	movwf	turnRight@angle_right^0,c
 10014  002E5E  EC18  F022         	call	_turnRight	;wreg free
 10015  002E62                     l5179:
 10016                           
 10017                           ;movement.c: 113:     array_index--;
 10018  002E62  0101               	movlb	1	; () banked
 10019  002E64  075F               	decf	_array_index& (0+255),f,b
 10020  002E66                     l5181:
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;movement.c: 115:         fullSpeedAhead(mL,mR);
 10024  002E66  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10025  002E6A  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10026  002E6E  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10027  002E72  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10028  002E76  EC98  F028         	call	_fullSpeedAhead	;wreg free
 10029  002E7A                     
 10030                           ;movement.c: 116:         color_predict(array_index);
 10031  002E7A  0101               	movlb	1	; () banked
 10032  002E7C  515F               	movf	_array_index& (0+255),w,b
 10033  002E7E  EC3D  F02C         	call	_color_predict
 10034  002E82                     
 10035                           ;movement.c: 117:         color_predict(201);
 10036  002E82  0EC9               	movlw	201
 10037  002E84  EC3D  F02C         	call	_color_predict
 10038  002E88                     
 10039                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10040  002E88  0E00               	movlw	0
 10041  002E8A  0100               	movlb	0	; () banked
 10042  002E8C  6FDF               	movwf	(goback@i+1)& (0+255),b
 10043  002E8E  0E00               	movlw	0
 10044  002E90  6FDE               	movwf	goback@i& (0+255),b
 10045  002E92  EF5A  F017         	goto	l5193
 10046  002E96                     l5189:
 10047                           
 10048                           ; BSR set to: 0
 10049  002E96  0E52               	movlw	82
 10050  002E98  6E5D               	movwf	(??_goback+1)^0,c
 10051  002E9A  0E2B               	movlw	43
 10052  002E9C  6E5C               	movwf	??_goback^0,c
 10053  002E9E  0E00               	movlw	0
 10054  002EA0                     u6057:
 10055  002EA0  2EE8               	decfsz	wreg,f,c
 10056  002EA2  D7FE               	bra	u6057
 10057  002EA4  2E5C               	decfsz	??_goback^0,f,c
 10058  002EA6  D7FC               	bra	u6057
 10059  002EA8  2E5D               	decfsz	(??_goback+1)^0,f,c
 10060  002EAA  D7FA               	bra	u6057
 10061  002EAC  D000               	nop2	
 10062  002EAE  0100               	movlb	0	; () banked
 10063  002EB0  4BDE               	infsnz	goback@i& (0+255),f,b
 10064  002EB2  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10065  002EB4                     l5193:
 10066                           
 10067                           ; BSR set to: 0
 10068  002EB4  0101               	movlb	1	; () banked
 10069  002EB6  515F               	movf	_array_index& (0+255),w,b
 10070  002EB8  0D02               	mullw	2
 10071  002EBA  0E00               	movlw	low _memory
 10072  002EBC  24F3               	addwf	243,w,c
 10073  002EBE  6ED9               	movwf	fsr2l,c
 10074  002EC0  0E01               	movlw	high _memory
 10075  002EC2  20F4               	addwfc	prodh,w,c
 10076  002EC4  6EDA               	movwf	fsr2h,c
 10077  002EC6  50DE               	movf	postinc2,w,c
 10078  002EC8  0100               	movlb	0	; () banked
 10079  002ECA  5DDE               	subwf	goback@i& (0+255),w,b
 10080  002ECC  50DE               	movf	postinc2,w,c
 10081  002ECE  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10082  002ED0  A0D8               	btfss	status,0,c
 10083  002ED2  EF6D  F017         	goto	u5241
 10084  002ED6  EF6F  F017         	goto	u5240
 10085  002EDA                     u5241:
 10086  002EDA  EF4B  F017         	goto	l5189
 10087  002EDE                     u5240:
 10088  002EDE                     
 10089                           ; BSR set to: 0
 10090                           ;movement.c: 119:         stop(mL,mR);
 10091  002EDE  C058  F01A         	movff	goback@mL,stop@mL
 10092  002EE2  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10093  002EE6  C05A  F01C         	movff	goback@mR,stop@mR
 10094  002EEA  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10095  002EEE  EC3A  F028         	call	_stop	;wreg free
 10096  002EF2                     
 10097                           ;movement.c: 120:         if (array_index == 0){break;}
 10098  002EF2  0101               	movlb	1	; () banked
 10099  002EF4  515F               	movf	_array_index& (0+255),w,b
 10100  002EF6  A4D8               	btfss	status,2,c
 10101  002EF8  EF80  F017         	goto	u5251
 10102  002EFC  EF82  F017         	goto	u5250
 10103  002F00                     u5251:
 10104  002F00  EF84  F017         	goto	l5201
 10105  002F04                     u5250:
 10106  002F04  EF7F  F018         	goto	l5249
 10107  002F08                     l5201:
 10108                           
 10109                           ; BSR set to: 1
 10110                           ;movement.c: 121:         array_index--;
 10111  002F08  075F               	decf	_array_index& (0+255),f,b
 10112  002F0A                     
 10113                           ; BSR set to: 1
 10114                           ;movement.c: 122:         color_predict(array_index);
 10115  002F0A  515F               	movf	_array_index& (0+255),w,b
 10116  002F0C  EC3D  F02C         	call	_color_predict
 10117  002F10                     
 10118                           ;movement.c: 123:         color_predict(201);
 10119  002F10  0EC9               	movlw	201
 10120  002F12  EC3D  F02C         	call	_color_predict
 10121  002F16                     
 10122                           ;movement.c: 125:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10123  002F16  0101               	movlb	1	; () banked
 10124  002F18  515F               	movf	_array_index& (0+255),w,b
 10125  002F1A  0D02               	mullw	2
 10126  002F1C  0E00               	movlw	low _memory
 10127  002F1E  24F3               	addwf	243,w,c
 10128  002F20  6ED9               	movwf	fsr2l,c
 10129  002F22  0E01               	movlw	high _memory
 10130  002F24  20F4               	addwfc	prodh,w,c
 10131  002F26  6EDA               	movwf	fsr2h,c
 10132  002F28  04DE               	decf	postinc2,w,c
 10133  002F2A  10DE               	iorwf	postinc2,w,c
 10134  002F2C  A4D8               	btfss	status,2,c
 10135  002F2E  EF9B  F017         	goto	u5261
 10136  002F32  EF9D  F017         	goto	u5260
 10137  002F36                     u5261:
 10138  002F36  EFAB  F017         	goto	l5213
 10139  002F3A                     u5260:
 10140  002F3A                     
 10141                           ; BSR set to: 1
 10142  002F3A  C058  F020         	movff	goback@mL,turnLeft@mL
 10143  002F3E  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10144  002F42  C05A  F022         	movff	goback@mR,turnLeft@mR
 10145  002F46  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10146  002F4A  0E5A               	movlw	90
 10147  002F4C  6E24               	movwf	turnLeft@angle_left^0,c
 10148  002F4E  ECD8  F022         	call	_turnLeft	;wreg free
 10149  002F52  0101               	movlb	1	; () banked
 10150  002F54  075F               	decf	_array_index& (0+255),f,b
 10151  002F56                     l5213:
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;movement.c: 126:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 10155  002F56  515F               	movf	_array_index& (0+255),w,b
 10156  002F58  0D02               	mullw	2
 10157  002F5A  0E00               	movlw	low _memory
 10158  002F5C  24F3               	addwf	243,w,c
 10159  002F5E  6ED9               	movwf	fsr2l,c
 10160  002F60  0E01               	movlw	high _memory
 10161  002F62  20F4               	addwfc	prodh,w,c
 10162  002F64  6EDA               	movwf	fsr2h,c
 10163  002F66  0E02               	movlw	2
 10164  002F68  18DE               	xorwf	postinc2,w,c
 10165  002F6A  10DE               	iorwf	postinc2,w,c
 10166  002F6C  A4D8               	btfss	status,2,c
 10167  002F6E  EFBB  F017         	goto	u5271
 10168  002F72  EFBD  F017         	goto	u5270
 10169  002F76                     u5271:
 10170  002F76  EFCB  F017         	goto	l5219
 10171  002F7A                     u5270:
 10172  002F7A                     
 10173                           ; BSR set to: 1
 10174  002F7A  C058  F020         	movff	goback@mL,turnRight@mL
 10175  002F7E  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10176  002F82  C05A  F022         	movff	goback@mR,turnRight@mR
 10177  002F86  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10178  002F8A  0E5A               	movlw	90
 10179  002F8C  6E24               	movwf	turnRight@angle_right^0,c
 10180  002F8E  EC18  F022         	call	_turnRight	;wreg free
 10181  002F92  0101               	movlb	1	; () banked
 10182  002F94  075F               	decf	_array_index& (0+255),f,b
 10183  002F96                     l5219:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;movement.c: 127:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 10187  002F96  515F               	movf	_array_index& (0+255),w,b
 10188  002F98  0D02               	mullw	2
 10189  002F9A  0E00               	movlw	low _memory
 10190  002F9C  24F3               	addwf	243,w,c
 10191  002F9E  6ED9               	movwf	fsr2l,c
 10192  002FA0  0E01               	movlw	high _memory
 10193  002FA2  20F4               	addwfc	prodh,w,c
 10194  002FA4  6EDA               	movwf	fsr2h,c
 10195  002FA6  0E03               	movlw	3
 10196  002FA8  18DE               	xorwf	postinc2,w,c
 10197  002FAA  10DE               	iorwf	postinc2,w,c
 10198  002FAC  A4D8               	btfss	status,2,c
 10199  002FAE  EFDB  F017         	goto	u5281
 10200  002FB2  EFDD  F017         	goto	u5280
 10201  002FB6                     u5281:
 10202  002FB6  EFEB  F017         	goto	l5225
 10203  002FBA                     u5280:
 10204  002FBA                     
 10205                           ; BSR set to: 1
 10206  002FBA  C058  F020         	movff	goback@mL,turnLeft@mL
 10207  002FBE  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10208  002FC2  C05A  F022         	movff	goback@mR,turnLeft@mR
 10209  002FC6  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10210  002FCA  0EB4               	movlw	180
 10211  002FCC  6E24               	movwf	turnLeft@angle_left^0,c
 10212  002FCE  ECD8  F022         	call	_turnLeft	;wreg free
 10213  002FD2  0101               	movlb	1	; () banked
 10214  002FD4  075F               	decf	_array_index& (0+255),f,b
 10215  002FD6                     l5225:
 10216                           
 10217                           ; BSR set to: 1
 10218                           ;movement.c: 128:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 10219  002FD6  515F               	movf	_array_index& (0+255),w,b
 10220  002FD8  0D02               	mullw	2
 10221  002FDA  0E00               	movlw	low _memory
 10222  002FDC  24F3               	addwf	243,w,c
 10223  002FDE  6ED9               	movwf	fsr2l,c
 10224  002FE0  0E01               	movlw	high _memory
 10225  002FE2  20F4               	addwfc	prodh,w,c
 10226  002FE4  6EDA               	movwf	fsr2h,c
 10227  002FE6  0E04               	movlw	4
 10228  002FE8  18DE               	xorwf	postinc2,w,c
 10229  002FEA  10DE               	iorwf	postinc2,w,c
 10230  002FEC  A4D8               	btfss	status,2,c
 10231  002FEE  EFFB  F017         	goto	u5291
 10232  002FF2  EFFD  F017         	goto	u5290
 10233  002FF6                     u5291:
 10234  002FF6  EF15  F018         	goto	l5231
 10235  002FFA                     u5290:
 10236  002FFA                     
 10237                           ; BSR set to: 1
 10238  002FFA  C058  F026         	movff	goback@mL,reverse_square@mL
 10239  002FFE  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10240  003002  C05A  F028         	movff	goback@mR,reverse_square@mR
 10241  003006  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10242  00300A  EC59  F02B         	call	_reverse_square	;wreg free
 10243  00300E  C058  F020         	movff	goback@mL,turnLeft@mL
 10244  003012  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10245  003016  C05A  F022         	movff	goback@mR,turnLeft@mR
 10246  00301A  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10247  00301E  0E5A               	movlw	90
 10248  003020  6E24               	movwf	turnLeft@angle_left^0,c
 10249  003022  ECD8  F022         	call	_turnLeft	;wreg free
 10250  003026  0101               	movlb	1	; () banked
 10251  003028  075F               	decf	_array_index& (0+255),f,b
 10252  00302A                     l5231:
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;movement.c: 129:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 10256  00302A  515F               	movf	_array_index& (0+255),w,b
 10257  00302C  0D02               	mullw	2
 10258  00302E  0E00               	movlw	low _memory
 10259  003030  24F3               	addwf	243,w,c
 10260  003032  6ED9               	movwf	fsr2l,c
 10261  003034  0E01               	movlw	high _memory
 10262  003036  20F4               	addwfc	prodh,w,c
 10263  003038  6EDA               	movwf	fsr2h,c
 10264  00303A  0E05               	movlw	5
 10265  00303C  18DE               	xorwf	postinc2,w,c
 10266  00303E  10DE               	iorwf	postinc2,w,c
 10267  003040  A4D8               	btfss	status,2,c
 10268  003042  EF25  F018         	goto	u5301
 10269  003046  EF27  F018         	goto	u5300
 10270  00304A                     u5301:
 10271  00304A  EF3F  F018         	goto	l5237
 10272  00304E                     u5300:
 10273  00304E                     
 10274                           ; BSR set to: 1
 10275  00304E  C058  F026         	movff	goback@mL,reverse_square@mL
 10276  003052  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10277  003056  C05A  F028         	movff	goback@mR,reverse_square@mR
 10278  00305A  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10279  00305E  EC59  F02B         	call	_reverse_square	;wreg free
 10280  003062  C058  F020         	movff	goback@mL,turnRight@mL
 10281  003066  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10282  00306A  C05A  F022         	movff	goback@mR,turnRight@mR
 10283  00306E  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10284  003072  0E5A               	movlw	90
 10285  003074  6E24               	movwf	turnRight@angle_right^0,c
 10286  003076  EC18  F022         	call	_turnRight	;wreg free
 10287  00307A  0101               	movlb	1	; () banked
 10288  00307C  075F               	decf	_array_index& (0+255),f,b
 10289  00307E                     l5237:
 10290                           
 10291                           ; BSR set to: 1
 10292                           ;movement.c: 130:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 10293  00307E  515F               	movf	_array_index& (0+255),w,b
 10294  003080  0D02               	mullw	2
 10295  003082  0E00               	movlw	low _memory
 10296  003084  24F3               	addwf	243,w,c
 10297  003086  6ED9               	movwf	fsr2l,c
 10298  003088  0E01               	movlw	high _memory
 10299  00308A  20F4               	addwfc	prodh,w,c
 10300  00308C  6EDA               	movwf	fsr2h,c
 10301  00308E  0E06               	movlw	6
 10302  003090  18DE               	xorwf	postinc2,w,c
 10303  003092  10DE               	iorwf	postinc2,w,c
 10304  003094  A4D8               	btfss	status,2,c
 10305  003096  EF4F  F018         	goto	u5311
 10306  00309A  EF51  F018         	goto	u5310
 10307  00309E                     u5311:
 10308  00309E  EF5F  F018         	goto	l5243
 10309  0030A2                     u5310:
 10310  0030A2                     
 10311                           ; BSR set to: 1
 10312  0030A2  C058  F020         	movff	goback@mL,turnLeft@mL
 10313  0030A6  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10314  0030AA  C05A  F022         	movff	goback@mR,turnLeft@mR
 10315  0030AE  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10316  0030B2  0E87               	movlw	135
 10317  0030B4  6E24               	movwf	turnLeft@angle_left^0,c
 10318  0030B6  ECD8  F022         	call	_turnLeft	;wreg free
 10319  0030BA  0101               	movlb	1	; () banked
 10320  0030BC  075F               	decf	_array_index& (0+255),f,b
 10321  0030BE                     l5243:
 10322                           
 10323                           ; BSR set to: 1
 10324                           ;movement.c: 131:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 10325  0030BE  515F               	movf	_array_index& (0+255),w,b
 10326  0030C0  0D02               	mullw	2
 10327  0030C2  0E00               	movlw	low _memory
 10328  0030C4  24F3               	addwf	243,w,c
 10329  0030C6  6ED9               	movwf	fsr2l,c
 10330  0030C8  0E01               	movlw	high _memory
 10331  0030CA  20F4               	addwfc	prodh,w,c
 10332  0030CC  6EDA               	movwf	fsr2h,c
 10333  0030CE  0E07               	movlw	7
 10334  0030D0  18DE               	xorwf	postinc2,w,c
 10335  0030D2  10DE               	iorwf	postinc2,w,c
 10336  0030D4  A4D8               	btfss	status,2,c
 10337  0030D6  EF6F  F018         	goto	u5321
 10338  0030DA  EF71  F018         	goto	u5320
 10339  0030DE                     u5321:
 10340  0030DE  EF33  F017         	goto	l5181
 10341  0030E2                     u5320:
 10342  0030E2                     
 10343                           ; BSR set to: 1
 10344  0030E2  C058  F020         	movff	goback@mL,turnRight@mL
 10345  0030E6  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10346  0030EA  C05A  F022         	movff	goback@mR,turnRight@mR
 10347  0030EE  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10348  0030F2  0E79               	movlw	121
 10349  0030F4  6E24               	movwf	turnRight@angle_right^0,c
 10350  0030F6  EC18  F022         	call	_turnRight	;wreg free
 10351  0030FA  EF31  F017         	goto	l5179
 10352  0030FE                     l5249:
 10353  0030FE  C058  F01A         	movff	goback@mL,stop@mL
 10354  003102  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10355  003106  C05A  F01C         	movff	goback@mR,stop@mR
 10356  00310A  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10357  00310E  EC3A  F028         	call	_stop	;wreg free
 10358  003112  EF7F  F018         	goto	l5249
 10359  003116  0012               	return		;funcret
 10360  003118                     __end_of_goback:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _turnRight *****************
 10364 ;; Defined at:
 10365 ;;		line 122 in file "dc_motor.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10368 ;;		 -> main@motorL(10), 
 10369 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10370 ;;		 -> main@motorR(10), 
 10371 ;;  angle_right     1   35[COMRAM] unsigned char 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  i               2   45[COMRAM] unsigned int 
 10374 ;;  i               2   43[COMRAM] unsigned int 
 10375 ;;  i               2   41[COMRAM] unsigned int 
 10376 ;;  delay           2   47[COMRAM] unsigned int 
 10377 ;;  delay_180       2   39[COMRAM] unsigned int 
 10378 ;;  delay_135       2   37[COMRAM] unsigned int 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  1    wreg      void 
 10381 ;; Registers used:
 10382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10388 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10389 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;Total ram usage:       18 bytes
 10393 ;; Hardware stack levels used: 1
 10394 ;; Hardware stack levels required when called: 4
 10395 ;; This function calls:
 10396 ;;		_setMotorPWM
 10397 ;;		_stop
 10398 ;; This function is called by:
 10399 ;;		_action
 10400 ;;		_goback
 10401 ;;		_test_action
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text48
 10406  004430                     __ptext48:
 10407                           	callstack 0
 10408  004430                     _turnRight:
 10409                           	callstack 25
 10410  004430                     
 10411                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10412  004430  EE20 F001          	lfsr	2,1
 10413  004434  5020               	movf	turnRight@mL^0,w,c
 10414  004436  26D9               	addwf	fsr2l,f,c
 10415  004438  5021               	movf	(turnRight@mL+1)^0,w,c
 10416  00443A  22DA               	addwfc	fsr2h,f,c
 10417  00443C  0E01               	movlw	1
 10418  00443E  6EDF               	movwf	indf2,c
 10419                           
 10420                           ;dc_motor.c: 125:     mR->direction=1;
 10421  004440  EE20 F001          	lfsr	2,1
 10422  004444  5022               	movf	turnRight@mR^0,w,c
 10423  004446  26D9               	addwf	fsr2l,f,c
 10424  004448  5023               	movf	(turnRight@mR+1)^0,w,c
 10425  00444A  22DA               	addwfc	fsr2h,f,c
 10426  00444C  0E01               	movlw	1
 10427  00444E  6EDF               	movwf	indf2,c
 10428                           
 10429                           ;dc_motor.c: 126:     while (mL->power <25){
 10430  004450  EF49  F022         	goto	l4615
 10431  004454                     l4607:
 10432                           
 10433                           ;dc_motor.c: 127:         mL->power += 5;
 10434  004454  C020  FFD9         	movff	turnRight@mL,fsr2l
 10435  004458  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10436  00445C  0E05               	movlw	5
 10437  00445E  26DF               	addwf	indf2,f,c
 10438                           
 10439                           ;dc_motor.c: 128:         mR->power = 0;
 10440  004460  C022  FFD9         	movff	turnRight@mR,fsr2l
 10441  004464  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10442  004468  0E00               	movlw	0
 10443  00446A  6EDF               	movwf	indf2,c
 10444  00446C                     
 10445                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10446  00446C  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10447  004470  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10448  004474  EC4D  F01C         	call	_setMotorPWM	;wreg free
 10449  004478                     
 10450                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10451  004478  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10452  00447C  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10453  004480  EC4D  F01C         	call	_setMotorPWM	;wreg free
 10454  004484                     
 10455                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10456  004484  0ED0               	movlw	208
 10457  004486  6E25               	movwf	??_turnRight^0,c
 10458  004488  0ECA               	movlw	202
 10459  00448A                     u6067:
 10460  00448A  2EE8               	decfsz	wreg,f,c
 10461  00448C  D7FE               	bra	u6067
 10462  00448E  2E25               	decfsz	??_turnRight^0,f,c
 10463  004490  D7FC               	bra	u6067
 10464  004492                     l4615:
 10465                           
 10466                           ;dc_motor.c: 126:     while (mL->power <25){
 10467  004492  C020  FFD9         	movff	turnRight@mL,fsr2l
 10468  004496  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10469  00449A  0E18               	movlw	24
 10470  00449C  64DF               	cpfsgt	indf2,c
 10471  00449E  EF53  F022         	goto	u4641
 10472  0044A2  EF55  F022         	goto	u4640
 10473  0044A6                     u4641:
 10474  0044A6  EF2A  F022         	goto	l4607
 10475  0044AA                     u4640:
 10476  0044AA                     
 10477                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10478  0044AA  5024               	movf	turnRight@angle_right^0,w,c
 10479  0044AC  0100               	movlb	0	; () banked
 10480  0044AE  03FF               	mulwf	_SENSITIVITY& (0+255),b
 10481  0044B0  CFF3 F030          	movff	prodl,turnRight@delay
 10482  0044B4  CFF4 F031          	movff	prodh,turnRight@delay+1
 10483  0044B8                     
 10484                           ; BSR set to: 0
 10485  0044B8  0E0A               	movlw	10
 10486  0044BA  2430               	addwf	turnRight@delay^0,w,c
 10487  0044BC  6E26               	movwf	turnRight@delay_135^0,c
 10488  0044BE  0E00               	movlw	0
 10489  0044C0  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10490  0044C2  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10491  0044C4                     
 10492                           ; BSR set to: 0
 10493  0044C4  0E14               	movlw	20
 10494  0044C6  2430               	addwf	turnRight@delay^0,w,c
 10495  0044C8  6E28               	movwf	turnRight@delay_180^0,c
 10496  0044CA  0E00               	movlw	0
 10497  0044CC  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10498  0044CE  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10499  0044D0                     
 10500                           ; BSR set to: 0
 10501                           ;dc_motor.c: 136:     if (angle_right == 180){
 10502  0044D0  0EB4               	movlw	180
 10503  0044D2  1824               	xorwf	turnRight@angle_right^0,w,c
 10504  0044D4  A4D8               	btfss	status,2,c
 10505  0044D6  EF6F  F022         	goto	u4651
 10506  0044DA  EF71  F022         	goto	u4650
 10507  0044DE                     u4651:
 10508  0044DE  EF8C  F022         	goto	l4631
 10509  0044E2                     u4650:
 10510  0044E2                     
 10511                           ; BSR set to: 0
 10512                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10513  0044E2  0E00               	movlw	0
 10514  0044E4  6E2B               	movwf	(turnRight@i+1)^0,c
 10515  0044E6  0E00               	movlw	0
 10516  0044E8  6E2A               	movwf	turnRight@i^0,c
 10517  0044EA  EF81  F022         	goto	l339
 10518  0044EE                     l4627:
 10519  0044EE  0E15               	movlw	21
 10520  0044F0  6E25               	movwf	??_turnRight^0,c
 10521  0044F2  0EC6               	movlw	198
 10522  0044F4                     u6077:
 10523  0044F4  2EE8               	decfsz	wreg,f,c
 10524  0044F6  D7FE               	bra	u6077
 10525  0044F8  2E25               	decfsz	??_turnRight^0,f,c
 10526  0044FA  D7FC               	bra	u6077
 10527  0044FC  D000               	nop2	
 10528  0044FE  4A2A               	infsnz	turnRight@i^0,f,c
 10529  004500  2A2B               	incf	(turnRight@i+1)^0,f,c
 10530  004502                     l339:
 10531  004502  5028               	movf	turnRight@delay_180^0,w,c
 10532  004504  5C2A               	subwf	turnRight@i^0,w,c
 10533  004506  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10534  004508  582B               	subwfb	(turnRight@i+1)^0,w,c
 10535  00450A  A0D8               	btfss	status,0,c
 10536  00450C  EF8A  F022         	goto	u4661
 10537  004510  EF8C  F022         	goto	u4660
 10538  004514                     u4661:
 10539  004514  EF77  F022         	goto	l4627
 10540  004518                     u4660:
 10541  004518                     l4631:
 10542                           
 10543                           ;dc_motor.c: 139:     if (angle_right == 135){
 10544  004518  0E87               	movlw	135
 10545  00451A  1824               	xorwf	turnRight@angle_right^0,w,c
 10546  00451C  A4D8               	btfss	status,2,c
 10547  00451E  EF93  F022         	goto	u4671
 10548  004522  EF95  F022         	goto	u4670
 10549  004526                     u4671:
 10550  004526  EFB2  F022         	goto	l4639
 10551  00452A                     u4670:
 10552  00452A                     
 10553                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10554  00452A  0E00               	movlw	0
 10555  00452C  6E2D               	movwf	(turnRight@i_1358+1)^0,c
 10556  00452E  0E00               	movlw	0
 10557  004530  6E2C               	movwf	turnRight@i_1358^0,c
 10558  004532  EFA5  F022         	goto	l343
 10559  004536                     l4635:
 10560  004536  0E15               	movlw	21
 10561  004538  6E25               	movwf	??_turnRight^0,c
 10562  00453A  0EC6               	movlw	198
 10563  00453C                     u6087:
 10564  00453C  2EE8               	decfsz	wreg,f,c
 10565  00453E  D7FE               	bra	u6087
 10566  004540  2E25               	decfsz	??_turnRight^0,f,c
 10567  004542  D7FC               	bra	u6087
 10568  004544  D000               	nop2	
 10569  004546  4A2C               	infsnz	turnRight@i_1358^0,f,c
 10570  004548  2A2D               	incf	(turnRight@i_1358+1)^0,f,c
 10571  00454A                     l343:
 10572  00454A  5026               	movf	turnRight@delay_135^0,w,c
 10573  00454C  5C2C               	subwf	turnRight@i_1358^0,w,c
 10574  00454E  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10575  004550  582D               	subwfb	(turnRight@i_1358+1)^0,w,c
 10576  004552  A0D8               	btfss	status,0,c
 10577  004554  EFAE  F022         	goto	u4681
 10578  004558  EFB0  F022         	goto	u4680
 10579  00455C                     u4681:
 10580  00455C  EF9B  F022         	goto	l4635
 10581  004560                     u4680:
 10582  004560  EFCD  F022         	goto	l4645
 10583  004564                     l4639:
 10584                           
 10585                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10586  004564  0E00               	movlw	0
 10587  004566  6E2F               	movwf	(turnRight@i_1359+1)^0,c
 10588  004568  0E00               	movlw	0
 10589  00456A  6E2E               	movwf	turnRight@i_1359^0,c
 10590  00456C  EFC2  F022         	goto	l347
 10591  004570                     l4641:
 10592  004570  0E15               	movlw	21
 10593  004572  6E25               	movwf	??_turnRight^0,c
 10594  004574  0EC6               	movlw	198
 10595  004576                     u6097:
 10596  004576  2EE8               	decfsz	wreg,f,c
 10597  004578  D7FE               	bra	u6097
 10598  00457A  2E25               	decfsz	??_turnRight^0,f,c
 10599  00457C  D7FC               	bra	u6097
 10600  00457E  D000               	nop2	
 10601  004580  4A2E               	infsnz	turnRight@i_1359^0,f,c
 10602  004582  2A2F               	incf	(turnRight@i_1359+1)^0,f,c
 10603  004584                     l347:
 10604  004584  5030               	movf	turnRight@delay^0,w,c
 10605  004586  5C2E               	subwf	turnRight@i_1359^0,w,c
 10606  004588  5031               	movf	(turnRight@delay+1)^0,w,c
 10607  00458A  582F               	subwfb	(turnRight@i_1359+1)^0,w,c
 10608  00458C  A0D8               	btfss	status,0,c
 10609  00458E  EFCB  F022         	goto	u4691
 10610  004592  EFCD  F022         	goto	u4690
 10611  004596                     u4691:
 10612  004596  EFB8  F022         	goto	l4641
 10613  00459A                     u4690:
 10614  00459A                     l4645:
 10615                           
 10616                           ;dc_motor.c: 145:     stop(mL,mR);
 10617  00459A  C020  F01A         	movff	turnRight@mL,stop@mL
 10618  00459E  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10619  0045A2  C022  F01C         	movff	turnRight@mR,stop@mR
 10620  0045A6  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10621  0045AA  EC3A  F028         	call	_stop	;wreg free
 10622  0045AE  0012               	return		;funcret
 10623  0045B0                     __end_of_turnRight:
 10624                           	callstack 0
 10625                           
 10626 ;; *************** function _turnLeft *****************
 10627 ;; Defined at:
 10628 ;;		line 95 in file "dc_motor.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10631 ;;		 -> main@motorL(10), 
 10632 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10633 ;;		 -> main@motorR(10), 
 10634 ;;  angle_left      1   35[COMRAM] unsigned char 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;  i               2   45[COMRAM] unsigned int 
 10637 ;;  i               2   43[COMRAM] unsigned int 
 10638 ;;  i               2   41[COMRAM] unsigned int 
 10639 ;;  delay           2   47[COMRAM] unsigned int 
 10640 ;;  delay_180       2   39[COMRAM] unsigned int 
 10641 ;;  delay_135       2   37[COMRAM] unsigned int 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10651 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;Total ram usage:       18 bytes
 10656 ;; Hardware stack levels used: 1
 10657 ;; Hardware stack levels required when called: 4
 10658 ;; This function calls:
 10659 ;;		_setMotorPWM
 10660 ;;		_stop
 10661 ;; This function is called by:
 10662 ;;		_action
 10663 ;;		_goback
 10664 ;;		_test_action
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           	psect	text49
 10669  0045B0                     __ptext49:
 10670                           	callstack 0
 10671  0045B0                     _turnLeft:
 10672                           	callstack 25
 10673  0045B0                     
 10674                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10675  0045B0  EE20 F001          	lfsr	2,1
 10676  0045B4  5020               	movf	turnLeft@mL^0,w,c
 10677  0045B6  26D9               	addwf	fsr2l,f,c
 10678  0045B8  5021               	movf	(turnLeft@mL+1)^0,w,c
 10679  0045BA  22DA               	addwfc	fsr2h,f,c
 10680  0045BC  0E01               	movlw	1
 10681  0045BE  6EDF               	movwf	indf2,c
 10682                           
 10683                           ;dc_motor.c: 98:       mR->direction=1;
 10684  0045C0  EE20 F001          	lfsr	2,1
 10685  0045C4  5022               	movf	turnLeft@mR^0,w,c
 10686  0045C6  26D9               	addwf	fsr2l,f,c
 10687  0045C8  5023               	movf	(turnLeft@mR+1)^0,w,c
 10688  0045CA  22DA               	addwfc	fsr2h,f,c
 10689  0045CC  0E01               	movlw	1
 10690  0045CE  6EDF               	movwf	indf2,c
 10691                           
 10692                           ;dc_motor.c: 99:       while (mR->power <25){
 10693  0045D0  EF09  F023         	goto	l4573
 10694  0045D4                     l4565:
 10695                           
 10696                           ;dc_motor.c: 100:         mR->power += 5;
 10697  0045D4  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10698  0045D8  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10699  0045DC  0E05               	movlw	5
 10700  0045DE  26DF               	addwf	indf2,f,c
 10701                           
 10702                           ;dc_motor.c: 101:         mL->power = 0;
 10703  0045E0  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10704  0045E4  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10705  0045E8  0E00               	movlw	0
 10706  0045EA  6EDF               	movwf	indf2,c
 10707  0045EC                     
 10708                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10709  0045EC  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10710  0045F0  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10711  0045F4  EC4D  F01C         	call	_setMotorPWM	;wreg free
 10712  0045F8                     
 10713                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10714  0045F8  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10715  0045FC  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10716  004600  EC4D  F01C         	call	_setMotorPWM	;wreg free
 10717  004604                     
 10718                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10719  004604  0ED0               	movlw	208
 10720  004606  6E25               	movwf	??_turnLeft^0,c
 10721  004608  0ECA               	movlw	202
 10722  00460A                     u6107:
 10723  00460A  2EE8               	decfsz	wreg,f,c
 10724  00460C  D7FE               	bra	u6107
 10725  00460E  2E25               	decfsz	??_turnLeft^0,f,c
 10726  004610  D7FC               	bra	u6107
 10727  004612                     l4573:
 10728                           
 10729                           ;dc_motor.c: 99:       while (mR->power <25){
 10730  004612  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10731  004616  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10732  00461A  0E18               	movlw	24
 10733  00461C  64DF               	cpfsgt	indf2,c
 10734  00461E  EF13  F023         	goto	u4581
 10735  004622  EF15  F023         	goto	u4580
 10736  004626                     u4581:
 10737  004626  EFEA  F022         	goto	l4565
 10738  00462A                     u4580:
 10739  00462A                     
 10740                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 10741  00462A  5024               	movf	turnLeft@angle_left^0,w,c
 10742  00462C  0100               	movlb	0	; () banked
 10743  00462E  03FF               	mulwf	_SENSITIVITY& (0+255),b
 10744  004630  CFF3 F030          	movff	prodl,turnLeft@delay
 10745  004634  CFF4 F031          	movff	prodh,turnLeft@delay+1
 10746  004638                     
 10747                           ; BSR set to: 0
 10748  004638  0E0A               	movlw	10
 10749  00463A  2430               	addwf	turnLeft@delay^0,w,c
 10750  00463C  6E26               	movwf	turnLeft@delay_135^0,c
 10751  00463E  0E00               	movlw	0
 10752  004640  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10753  004642  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 10754  004644                     
 10755                           ; BSR set to: 0
 10756  004644  0E14               	movlw	20
 10757  004646  2430               	addwf	turnLeft@delay^0,w,c
 10758  004648  6E28               	movwf	turnLeft@delay_180^0,c
 10759  00464A  0E00               	movlw	0
 10760  00464C  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10761  00464E  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 10762  004650                     
 10763                           ; BSR set to: 0
 10764                           ;dc_motor.c: 109:     if (angle_left == 180){
 10765  004650  0EB4               	movlw	180
 10766  004652  1824               	xorwf	turnLeft@angle_left^0,w,c
 10767  004654  A4D8               	btfss	status,2,c
 10768  004656  EF2F  F023         	goto	u4591
 10769  00465A  EF31  F023         	goto	u4590
 10770  00465E                     u4591:
 10771  00465E  EF4C  F023         	goto	l4589
 10772  004662                     u4590:
 10773  004662                     
 10774                           ; BSR set to: 0
 10775                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10776  004662  0E00               	movlw	0
 10777  004664  6E2B               	movwf	(turnLeft@i+1)^0,c
 10778  004666  0E00               	movlw	0
 10779  004668  6E2A               	movwf	turnLeft@i^0,c
 10780  00466A  EF41  F023         	goto	l321
 10781  00466E                     l4585:
 10782  00466E  0E15               	movlw	21
 10783  004670  6E25               	movwf	??_turnLeft^0,c
 10784  004672  0EC6               	movlw	198
 10785  004674                     u6117:
 10786  004674  2EE8               	decfsz	wreg,f,c
 10787  004676  D7FE               	bra	u6117
 10788  004678  2E25               	decfsz	??_turnLeft^0,f,c
 10789  00467A  D7FC               	bra	u6117
 10790  00467C  D000               	nop2	
 10791  00467E  4A2A               	infsnz	turnLeft@i^0,f,c
 10792  004680  2A2B               	incf	(turnLeft@i+1)^0,f,c
 10793  004682                     l321:
 10794  004682  5028               	movf	turnLeft@delay_180^0,w,c
 10795  004684  5C2A               	subwf	turnLeft@i^0,w,c
 10796  004686  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 10797  004688  582B               	subwfb	(turnLeft@i+1)^0,w,c
 10798  00468A  A0D8               	btfss	status,0,c
 10799  00468C  EF4A  F023         	goto	u4601
 10800  004690  EF4C  F023         	goto	u4600
 10801  004694                     u4601:
 10802  004694  EF37  F023         	goto	l4585
 10803  004698                     u4600:
 10804  004698                     l4589:
 10805                           
 10806                           ;dc_motor.c: 112:     if (angle_left == 135){
 10807  004698  0E87               	movlw	135
 10808  00469A  1824               	xorwf	turnLeft@angle_left^0,w,c
 10809  00469C  A4D8               	btfss	status,2,c
 10810  00469E  EF53  F023         	goto	u4611
 10811  0046A2  EF55  F023         	goto	u4610
 10812  0046A6                     u4611:
 10813  0046A6  EF72  F023         	goto	l4597
 10814  0046AA                     u4610:
 10815  0046AA                     
 10816                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10817  0046AA  0E00               	movlw	0
 10818  0046AC  6E2D               	movwf	(turnLeft@i_1333+1)^0,c
 10819  0046AE  0E00               	movlw	0
 10820  0046B0  6E2C               	movwf	turnLeft@i_1333^0,c
 10821  0046B2  EF65  F023         	goto	l325
 10822  0046B6                     l4593:
 10823  0046B6  0E15               	movlw	21
 10824  0046B8  6E25               	movwf	??_turnLeft^0,c
 10825  0046BA  0EC6               	movlw	198
 10826  0046BC                     u6127:
 10827  0046BC  2EE8               	decfsz	wreg,f,c
 10828  0046BE  D7FE               	bra	u6127
 10829  0046C0  2E25               	decfsz	??_turnLeft^0,f,c
 10830  0046C2  D7FC               	bra	u6127
 10831  0046C4  D000               	nop2	
 10832  0046C6  4A2C               	infsnz	turnLeft@i_1333^0,f,c
 10833  0046C8  2A2D               	incf	(turnLeft@i_1333+1)^0,f,c
 10834  0046CA                     l325:
 10835  0046CA  5026               	movf	turnLeft@delay_135^0,w,c
 10836  0046CC  5C2C               	subwf	turnLeft@i_1333^0,w,c
 10837  0046CE  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 10838  0046D0  582D               	subwfb	(turnLeft@i_1333+1)^0,w,c
 10839  0046D2  A0D8               	btfss	status,0,c
 10840  0046D4  EF6E  F023         	goto	u4621
 10841  0046D8  EF70  F023         	goto	u4620
 10842  0046DC                     u4621:
 10843  0046DC  EF5B  F023         	goto	l4593
 10844  0046E0                     u4620:
 10845  0046E0  EF8D  F023         	goto	l4603
 10846  0046E4                     l4597:
 10847                           
 10848                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10849  0046E4  0E00               	movlw	0
 10850  0046E6  6E2F               	movwf	(turnLeft@i_1334+1)^0,c
 10851  0046E8  0E00               	movlw	0
 10852  0046EA  6E2E               	movwf	turnLeft@i_1334^0,c
 10853  0046EC  EF82  F023         	goto	l329
 10854  0046F0                     l4599:
 10855  0046F0  0E15               	movlw	21
 10856  0046F2  6E25               	movwf	??_turnLeft^0,c
 10857  0046F4  0EC6               	movlw	198
 10858  0046F6                     u6137:
 10859  0046F6  2EE8               	decfsz	wreg,f,c
 10860  0046F8  D7FE               	bra	u6137
 10861  0046FA  2E25               	decfsz	??_turnLeft^0,f,c
 10862  0046FC  D7FC               	bra	u6137
 10863  0046FE  D000               	nop2	
 10864  004700  4A2E               	infsnz	turnLeft@i_1334^0,f,c
 10865  004702  2A2F               	incf	(turnLeft@i_1334+1)^0,f,c
 10866  004704                     l329:
 10867  004704  5030               	movf	turnLeft@delay^0,w,c
 10868  004706  5C2E               	subwf	turnLeft@i_1334^0,w,c
 10869  004708  5031               	movf	(turnLeft@delay+1)^0,w,c
 10870  00470A  582F               	subwfb	(turnLeft@i_1334+1)^0,w,c
 10871  00470C  A0D8               	btfss	status,0,c
 10872  00470E  EF8B  F023         	goto	u4631
 10873  004712  EF8D  F023         	goto	u4630
 10874  004716                     u4631:
 10875  004716  EF78  F023         	goto	l4599
 10876  00471A                     u4630:
 10877  00471A                     l4603:
 10878                           
 10879                           ;dc_motor.c: 118:     stop(mL,mR);
 10880  00471A  C020  F01A         	movff	turnLeft@mL,stop@mL
 10881  00471E  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 10882  004722  C022  F01C         	movff	turnLeft@mR,stop@mR
 10883  004726  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 10884  00472A  EC3A  F028         	call	_stop	;wreg free
 10885  00472E  0012               	return		;funcret
 10886  004730                     __end_of_turnLeft:
 10887                           	callstack 0
 10888                           
 10889 ;; *************** function _reverse_square *****************
 10890 ;; Defined at:
 10891 ;;		line 189 in file "dc_motor.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10894 ;;		 -> main@motorL(10), 
 10895 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10896 ;;		 -> main@motorR(10), 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10912 ;;Total ram usage:        6 bytes
 10913 ;; Hardware stack levels used: 1
 10914 ;; Hardware stack levels required when called: 5
 10915 ;; This function calls:
 10916 ;;		_fullSpeedBack
 10917 ;;		_stop
 10918 ;; This function is called by:
 10919 ;;		_action
 10920 ;;		_goback
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text50
 10925  0056B2                     __ptext50:
 10926                           	callstack 0
 10927  0056B2                     _reverse_square:
 10928                           	callstack 24
 10929  0056B2                     
 10930                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 10931  0056B2  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10932  0056B6  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10933  0056BA  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10934  0056BE  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10935  0056C2  ECDA  F027         	call	_fullSpeedBack	;wreg free
 10936  0056C6                     
 10937                           ;dc_motor.c: 191:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10938  0056C6  0E52               	movlw	82
 10939  0056C8  6E2B               	movwf	(??_reverse_square+1)^0,c
 10940  0056CA  0E2B               	movlw	43
 10941  0056CC  6E2A               	movwf	??_reverse_square^0,c
 10942  0056CE  0E00               	movlw	0
 10943  0056D0                     u6147:
 10944  0056D0  2EE8               	decfsz	wreg,f,c
 10945  0056D2  D7FE               	bra	u6147
 10946  0056D4  2E2A               	decfsz	??_reverse_square^0,f,c
 10947  0056D6  D7FC               	bra	u6147
 10948  0056D8  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10949  0056DA  D7FA               	bra	u6147
 10950  0056DC  D000               	nop2	
 10951  0056DE                     
 10952                           ;dc_motor.c: 192:     stop(mL,mR);
 10953  0056DE  C026  F01A         	movff	reverse_square@mL,stop@mL
 10954  0056E2  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10955  0056E6  C028  F01C         	movff	reverse_square@mR,stop@mR
 10956  0056EA  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10957  0056EE  EC3A  F028         	call	_stop	;wreg free
 10958  0056F2  0012               	return		;funcret
 10959  0056F4                     __end_of_reverse_square:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _fullSpeedBack *****************
 10963 ;; Defined at:
 10964 ;;		line 168 in file "dc_motor.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10967 ;;		 -> main@motorL(10), 
 10968 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10969 ;;		 -> main@motorR(10), 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10985 ;;Total ram usage:        6 bytes
 10986 ;; Hardware stack levels used: 1
 10987 ;; Hardware stack levels required when called: 4
 10988 ;; This function calls:
 10989 ;;		_setMotorPWM
 10990 ;;		_stop
 10991 ;; This function is called by:
 10992 ;;		_short_reverse
 10993 ;;		_reverse_square
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text51
 10998  004FB4                     __ptext51:
 10999                           	callstack 0
 11000  004FB4                     _fullSpeedBack:
 11001                           	callstack 24
 11002  004FB4                     
 11003                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11004  004FB4  EE20 F001          	lfsr	2,1
 11005  004FB8  5020               	movf	fullSpeedBack@mL^0,w,c
 11006  004FBA  26D9               	addwf	fsr2l,f,c
 11007  004FBC  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11008  004FBE  22DA               	addwfc	fsr2h,f,c
 11009  004FC0  0E00               	movlw	0
 11010  004FC2  6EDF               	movwf	indf2,c
 11011                           
 11012                           ;dc_motor.c: 171:     mR->direction=0;
 11013  004FC4  EE20 F001          	lfsr	2,1
 11014  004FC8  5022               	movf	fullSpeedBack@mR^0,w,c
 11015  004FCA  26D9               	addwf	fsr2l,f,c
 11016  004FCC  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11017  004FCE  22DA               	addwfc	fsr2h,f,c
 11018  004FD0  0E00               	movlw	0
 11019  004FD2  6EDF               	movwf	indf2,c
 11020                           
 11021                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11022  004FD4  EF0B  F028         	goto	l4389
 11023  004FD8                     l4381:
 11024                           
 11025                           ;dc_motor.c: 173:         mL->power += 10;
 11026  004FD8  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11027  004FDC  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11028  004FE0  0E0A               	movlw	10
 11029  004FE2  26DF               	addwf	indf2,f,c
 11030                           
 11031                           ;dc_motor.c: 174:         mR->power += 10;
 11032  004FE4  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11033  004FE8  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11034  004FEC  0E0A               	movlw	10
 11035  004FEE  26DF               	addwf	indf2,f,c
 11036  004FF0                     
 11037                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11038  004FF0  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11039  004FF4  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11040  004FF8  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11041  004FFC                     
 11042                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11043  004FFC  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11044  005000  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11045  005004  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11046  005008                     
 11047                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11048  005008  0ED0               	movlw	208
 11049  00500A  6E24               	movwf	??_fullSpeedBack^0,c
 11050  00500C  0ECA               	movlw	202
 11051  00500E                     u6157:
 11052  00500E  2EE8               	decfsz	wreg,f,c
 11053  005010  D7FE               	bra	u6157
 11054  005012  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11055  005014  D7FC               	bra	u6157
 11056  005016                     l4389:
 11057                           
 11058                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11059  005016  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11060  00501A  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11061  00501E  0E32               	movlw	50
 11062  005020  60DF               	cpfslt	indf2,c
 11063  005022  EF15  F028         	goto	u4121
 11064  005026  EF17  F028         	goto	u4120
 11065  00502A                     u4121:
 11066  00502A  EF23  F028         	goto	l4393
 11067  00502E                     u4120:
 11068  00502E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11069  005032  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11070  005036  0E31               	movlw	49
 11071  005038  64DF               	cpfsgt	indf2,c
 11072  00503A  EF21  F028         	goto	u4131
 11073  00503E  EF23  F028         	goto	u4130
 11074  005042                     u4131:
 11075  005042  EFEC  F027         	goto	l4381
 11076  005046                     u4130:
 11077  005046                     l4393:
 11078                           
 11079                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11080  005046  0E29               	movlw	41
 11081  005048  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11082  00504A  0E96               	movlw	150
 11083  00504C  6E24               	movwf	??_fullSpeedBack^0,c
 11084  00504E  0E7F               	movlw	127
 11085  005050                     u6167:
 11086  005050  2EE8               	decfsz	wreg,f,c
 11087  005052  D7FE               	bra	u6167
 11088  005054  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11089  005056  D7FC               	bra	u6167
 11090  005058  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11091  00505A  D7FA               	bra	u6167
 11092  00505C  F000               	nop	
 11093  00505E                     
 11094                           ;dc_motor.c: 180:     stop(mL,mR);
 11095  00505E  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11096  005062  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11097  005066  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11098  00506A  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11099  00506E  EC3A  F028         	call	_stop	;wreg free
 11100  005072  0012               	return		;funcret
 11101  005074                     __end_of_fullSpeedBack:
 11102                           	callstack 0
 11103                           
 11104 ;; *************** function _stop *****************
 11105 ;; Defined at:
 11106 ;;		line 82 in file "dc_motor.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11109 ;;		 -> main@motorL(10), 
 11110 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11111 ;;		 -> main@motorR(10), 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;		None
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11127 ;;Total ram usage:        6 bytes
 11128 ;; Hardware stack levels used: 1
 11129 ;; Hardware stack levels required when called: 3
 11130 ;; This function calls:
 11131 ;;		_setMotorPWM
 11132 ;; This function is called by:
 11133 ;;		_turnLeft
 11134 ;;		_turnRight
 11135 ;;		_fullSpeedBack
 11136 ;;		_short_reverse
 11137 ;;		_reverse_square
 11138 ;;		_main
 11139 ;;		_goback
 11140 ;;		_test_function
 11141 ;;		_fullSpeedAhead_test
 11142 ;;		_short_burst
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text52
 11147  005074                     __ptext52:
 11148                           	callstack 0
 11149  005074                     _stop:
 11150                           	callstack 26
 11151  005074                     
 11152                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11153  005074  EF73  F028         	goto	l4151
 11154  005078                     l4137:
 11155                           
 11156                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11157  005078  C01A  FFD9         	movff	stop@mL,fsr2l
 11158  00507C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11159  005080  50DF               	movf	indf2,w,c
 11160  005082  B4D8               	btfsc	status,2,c
 11161  005084  EF46  F028         	goto	u3801
 11162  005088  EF48  F028         	goto	u3800
 11163  00508C                     u3801:
 11164  00508C  EF4E  F028         	goto	l4141
 11165  005090                     u3800:
 11166  005090  C01A  FFD9         	movff	stop@mL,fsr2l
 11167  005094  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11168  005098  0E05               	movlw	5
 11169  00509A  5EDF               	subwf	indf2,f,c
 11170  00509C                     l4141:
 11171                           
 11172                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11173  00509C  C01C  FFD9         	movff	stop@mR,fsr2l
 11174  0050A0  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11175  0050A4  50DF               	movf	indf2,w,c
 11176  0050A6  B4D8               	btfsc	status,2,c
 11177  0050A8  EF58  F028         	goto	u3811
 11178  0050AC  EF5A  F028         	goto	u3810
 11179  0050B0                     u3811:
 11180  0050B0  EF60  F028         	goto	l4145
 11181  0050B4                     u3810:
 11182  0050B4  C01C  FFD9         	movff	stop@mR,fsr2l
 11183  0050B8  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11184  0050BC  0E05               	movlw	5
 11185  0050BE  5EDF               	subwf	indf2,f,c
 11186  0050C0                     l4145:
 11187                           
 11188                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11189  0050C0  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11190  0050C4  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11191  0050C8  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11192  0050CC                     
 11193                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11194  0050CC  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11195  0050D0  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11196  0050D4  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11197  0050D8                     
 11198                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11199  0050D8  0ED0               	movlw	208
 11200  0050DA  6E1E               	movwf	??_stop^0,c
 11201  0050DC  0ECA               	movlw	202
 11202  0050DE                     u6177:
 11203  0050DE  2EE8               	decfsz	wreg,f,c
 11204  0050E0  D7FE               	bra	u6177
 11205  0050E2  2E1E               	decfsz	??_stop^0,f,c
 11206  0050E4  D7FC               	bra	u6177
 11207  0050E6                     l4151:
 11208                           
 11209                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11210  0050E6  C01A  FFD9         	movff	stop@mL,fsr2l
 11211  0050EA  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11212  0050EE  50DF               	movf	indf2,w,c
 11213  0050F0  A4D8               	btfss	status,2,c
 11214  0050F2  EF7D  F028         	goto	u3821
 11215  0050F6  EF7F  F028         	goto	u3820
 11216  0050FA                     u3821:
 11217  0050FA  EF3C  F028         	goto	l4137
 11218  0050FE                     u3820:
 11219  0050FE  C01C  FFD9         	movff	stop@mR,fsr2l
 11220  005102  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11221  005106  50DF               	movf	indf2,w,c
 11222  005108  A4D8               	btfss	status,2,c
 11223  00510A  EF89  F028         	goto	u3831
 11224  00510E  EF8B  F028         	goto	u3830
 11225  005112                     u3831:
 11226  005112  EF3C  F028         	goto	l4137
 11227  005116                     u3830:
 11228  005116                     
 11229                           ;dc_motor.c: 91:     _delay((unsigned long)((100)*(64000000/4000.0)));
 11230  005116  0E09               	movlw	9
 11231  005118  6E1F               	movwf	(??_stop+1)^0,c
 11232  00511A  0E1E               	movlw	30
 11233  00511C  6E1E               	movwf	??_stop^0,c
 11234  00511E  0EE4               	movlw	228
 11235  005120                     u6187:
 11236  005120  2EE8               	decfsz	wreg,f,c
 11237  005122  D7FE               	bra	u6187
 11238  005124  2E1E               	decfsz	??_stop^0,f,c
 11239  005126  D7FC               	bra	u6187
 11240  005128  2E1F               	decfsz	(??_stop+1)^0,f,c
 11241  00512A  D7FA               	bra	u6187
 11242  00512C  D000               	nop2	
 11243  00512E  0012               	return		;funcret
 11244  005130                     __end_of_stop:
 11245                           	callstack 0
 11246                           
 11247 ;; *************** function _fullSpeedAhead *****************
 11248 ;; Defined at:
 11249 ;;		line 149 in file "dc_motor.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11252 ;;		 -> main@motorL(10), 
 11253 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11254 ;;		 -> main@motorR(10), 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      void 
 11259 ;; Registers used:
 11260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;Total ram usage:        5 bytes
 11271 ;; Hardware stack levels used: 1
 11272 ;; Hardware stack levels required when called: 3
 11273 ;; This function calls:
 11274 ;;		_setMotorPWM
 11275 ;; This function is called by:
 11276 ;;		_main
 11277 ;;		_goback
 11278 ;;		_test_function
 11279 ;;		_fullSpeedAhead_test
 11280 ;;		_short_burst
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text53
 11285  005130                     __ptext53:
 11286                           	callstack 0
 11287  005130                     _fullSpeedAhead:
 11288                           	callstack 26
 11289  005130                     
 11290                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11291  005130  EE20 F001          	lfsr	2,1
 11292  005134  501A               	movf	fullSpeedAhead@mL^0,w,c
 11293  005136  26D9               	addwf	fsr2l,f,c
 11294  005138  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11295  00513A  22DA               	addwfc	fsr2h,f,c
 11296  00513C  0E01               	movlw	1
 11297  00513E  6EDF               	movwf	indf2,c
 11298                           
 11299                           ;dc_motor.c: 152:     mR->direction=1;
 11300  005140  EE20 F001          	lfsr	2,1
 11301  005144  501C               	movf	fullSpeedAhead@mR^0,w,c
 11302  005146  26D9               	addwf	fsr2l,f,c
 11303  005148  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11304  00514A  22DA               	addwfc	fsr2h,f,c
 11305  00514C  0E01               	movlw	1
 11306  00514E  6EDF               	movwf	indf2,c
 11307                           
 11308                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11309  005150  EFC9  F028         	goto	l4657
 11310  005154                     l4649:
 11311                           
 11312                           ;dc_motor.c: 154:         mL->power += 10;
 11313  005154  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11314  005158  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11315  00515C  0E0A               	movlw	10
 11316  00515E  26DF               	addwf	indf2,f,c
 11317                           
 11318                           ;dc_motor.c: 155:         mR->power += 10;
 11319  005160  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11320  005164  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11321  005168  0E0A               	movlw	10
 11322  00516A  26DF               	addwf	indf2,f,c
 11323  00516C                     
 11324                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11325  00516C  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11326  005170  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11327  005174  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11328  005178                     
 11329                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11330  005178  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11331  00517C  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11332  005180  EC4D  F01C         	call	_setMotorPWM	;wreg free
 11333  005184                     
 11334                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11335  005184  0ED0               	movlw	208
 11336  005186  6E1E               	movwf	??_fullSpeedAhead^0,c
 11337  005188  0ECA               	movlw	202
 11338  00518A                     u6197:
 11339  00518A  2EE8               	decfsz	wreg,f,c
 11340  00518C  D7FE               	bra	u6197
 11341  00518E  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11342  005190  D7FC               	bra	u6197
 11343  005192                     l4657:
 11344                           
 11345                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11346  005192  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11347  005196  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11348  00519A  0E14               	movlw	20
 11349  00519C  60DF               	cpfslt	indf2,c
 11350  00519E  EFD3  F028         	goto	u4701
 11351  0051A2  EFD5  F028         	goto	u4700
 11352  0051A6                     u4701:
 11353  0051A6  EFE1  F028         	goto	l358
 11354  0051AA                     u4700:
 11355  0051AA  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11356  0051AE  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11357  0051B2  0E13               	movlw	19
 11358  0051B4  64DF               	cpfsgt	indf2,c
 11359  0051B6  EFDF  F028         	goto	u4711
 11360  0051BA  EFE1  F028         	goto	u4710
 11361  0051BE                     u4711:
 11362  0051BE  EFAA  F028         	goto	l4649
 11363  0051C2                     u4710:
 11364  0051C2                     l358:
 11365  0051C2  0012               	return		;funcret
 11366  0051C4                     __end_of_fullSpeedAhead:
 11367                           	callstack 0
 11368                           
 11369 ;; *************** function _setMotorPWM *****************
 11370 ;; Defined at:
 11371 ;;		line 59 in file "dc_motor.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11374 ;;		 -> main@motorR(10), main@motorL(10), 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  PWMduty         2   23[COMRAM] int 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11390 ;;Total ram usage:       11 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 2
 11393 ;; This function calls:
 11394 ;;		___awdiv
 11395 ;;		___wmul
 11396 ;; This function is called by:
 11397 ;;		_stop
 11398 ;;		_turnLeft
 11399 ;;		_turnRight
 11400 ;;		_fullSpeedAhead
 11401 ;;		_fullSpeedBack
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text54
 11406  00389A                     __ptext54:
 11407                           	callstack 0
 11408  00389A                     _setMotorPWM:
 11409                           	callstack 26
 11410  00389A                     
 11411                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11412  00389A  EE20 F001          	lfsr	2,1
 11413  00389E  500F               	movf	setMotorPWM@m^0,w,c
 11414  0038A0  26D9               	addwf	fsr2l,f,c
 11415  0038A2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11416  0038A4  22DA               	addwfc	fsr2h,f,c
 11417  0038A6  50DF               	movf	indf2,w,c
 11418  0038A8  B4D8               	btfsc	status,2,c
 11419  0038AA  EF59  F01C         	goto	u3311
 11420  0038AE  EF5B  F01C         	goto	u3310
 11421  0038B2                     u3311:
 11422  0038B2  EF8C  F01C         	goto	l3851
 11423  0038B6                     u3310:
 11424  0038B6                     
 11425                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11426  0038B6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11427  0038BA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11428  0038BE  50DF               	movf	indf2,w,c
 11429  0038C0  6E11               	movwf	??_setMotorPWM^0,c
 11430  0038C2  5011               	movf	??_setMotorPWM^0,w,c
 11431  0038C4  6E01               	movwf	___wmul@multiplier^0,c
 11432  0038C6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11433  0038C8  EE20 F007          	lfsr	2,7
 11434  0038CC  500F               	movf	setMotorPWM@m^0,w,c
 11435  0038CE  26D9               	addwf	fsr2l,f,c
 11436  0038D0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11437  0038D2  22DA               	addwfc	fsr2h,f,c
 11438  0038D4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11439  0038D8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11440  0038DC  EC7D  F02C         	call	___wmul	;wreg free
 11441  0038E0  C001  F007         	movff	?___wmul,___awdiv@dividend
 11442  0038E4  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11443  0038E8  0E00               	movlw	0
 11444  0038EA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11445  0038EC  0E64               	movlw	100
 11446  0038EE  6E09               	movwf	___awdiv@divisor^0,c
 11447  0038F0  EC78  F027         	call	___awdiv	;wreg free
 11448  0038F4  EE20 F007          	lfsr	2,7
 11449  0038F8  500F               	movf	setMotorPWM@m^0,w,c
 11450  0038FA  26D9               	addwf	fsr2l,f,c
 11451  0038FC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11452  0038FE  22DA               	addwfc	fsr2h,f,c
 11453  003900  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11454  003904  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11455  003908  5007               	movf	?___awdiv^0,w,c
 11456  00390A  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11457  00390C  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11458  00390E  5008               	movf	(?___awdiv+1)^0,w,c
 11459  003910  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11460  003912  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11461                           
 11462                           ;dc_motor.c: 66:  }
 11463  003914  EFAF  F01C         	goto	l3853
 11464  003918                     l3851:
 11465                           
 11466                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11467  003918  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11468  00391C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11469  003920  50DF               	movf	indf2,w,c
 11470  003922  6E11               	movwf	??_setMotorPWM^0,c
 11471  003924  5011               	movf	??_setMotorPWM^0,w,c
 11472  003926  6E01               	movwf	___wmul@multiplier^0,c
 11473  003928  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11474  00392A  EE20 F007          	lfsr	2,7
 11475  00392E  500F               	movf	setMotorPWM@m^0,w,c
 11476  003930  26D9               	addwf	fsr2l,f,c
 11477  003932  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11478  003934  22DA               	addwfc	fsr2h,f,c
 11479  003936  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11480  00393A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11481  00393E  EC7D  F02C         	call	___wmul	;wreg free
 11482  003942  C001  F007         	movff	?___wmul,___awdiv@dividend
 11483  003946  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11484  00394A  0E00               	movlw	0
 11485  00394C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11486  00394E  0E64               	movlw	100
 11487  003950  6E09               	movwf	___awdiv@divisor^0,c
 11488  003952  EC78  F027         	call	___awdiv	;wreg free
 11489  003956  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11490  00395A  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11491  00395E                     l3853:
 11492                           
 11493                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11494  00395E  EE20 F002          	lfsr	2,2
 11495  003962  500F               	movf	setMotorPWM@m^0,w,c
 11496  003964  26D9               	addwf	fsr2l,f,c
 11497  003966  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11498  003968  22DA               	addwfc	fsr2h,f,c
 11499  00396A  CFDE F011          	movff	postinc2,??_setMotorPWM
 11500  00396E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11501  003972  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11502  003976  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11503  00397A  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11504  00397E                     
 11505                           ;dc_motor.c: 74:  if (m->direction){
 11506  00397E  EE20 F001          	lfsr	2,1
 11507  003982  500F               	movf	setMotorPWM@m^0,w,c
 11508  003984  26D9               	addwf	fsr2l,f,c
 11509  003986  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11510  003988  22DA               	addwfc	fsr2h,f,c
 11511  00398A  50DF               	movf	indf2,w,c
 11512  00398C  B4D8               	btfsc	status,2,c
 11513  00398E  EFCB  F01C         	goto	u3321
 11514  003992  EFCD  F01C         	goto	u3320
 11515  003996                     u3321:
 11516  003996  EF02  F01D         	goto	l3859
 11517  00399A                     u3320:
 11518  00399A                     
 11519                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11520  00399A  EE20 F004          	lfsr	2,4
 11521  00399E  500F               	movf	setMotorPWM@m^0,w,c
 11522  0039A0  26D9               	addwf	fsr2l,f,c
 11523  0039A2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11524  0039A4  22DA               	addwfc	fsr2h,f,c
 11525  0039A6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11526  0039AA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11527  0039AE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11528  0039B2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11529  0039B6  EE10 F004          	lfsr	1,4
 11530  0039BA  500F               	movf	setMotorPWM@m^0,w,c
 11531  0039BC  26E1               	addwf	fsr1l,f,c
 11532  0039BE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11533  0039C0  22E2               	addwfc	fsr1h,f,c
 11534  0039C2  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11535  0039C6  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11536  0039CA  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11537  0039CE  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11538  0039D2  50E7               	movf	indf1,w,c
 11539  0039D4  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11540  0039D6  EE10 F006          	lfsr	1,6
 11541  0039DA  500F               	movf	setMotorPWM@m^0,w,c
 11542  0039DC  26E1               	addwf	fsr1l,f,c
 11543  0039DE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11544  0039E0  22E2               	addwfc	fsr1h,f,c
 11545  0039E2  50E7               	movf	indf1,w,c
 11546  0039E4  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11547  0039E6  0E01               	movlw	1
 11548  0039E8  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11549  0039EA  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11550  0039EC  EFFA  F01C         	goto	u3334
 11551  0039F0                     u3335:
 11552  0039F0  90D8               	bcf	status,0,c
 11553  0039F2  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11554  0039F4                     u3334:
 11555  0039F4  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11556  0039F6  EFF8  F01C         	goto	u3335
 11557  0039FA  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11558  0039FC  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11559  0039FE  6EDF               	movwf	indf2,c
 11560                           
 11561                           ;dc_motor.c: 76:  } else {
 11562  003A00  EF36  F01D         	goto	l306
 11563  003A04                     l3859:
 11564                           
 11565                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11566  003A04  EE20 F004          	lfsr	2,4
 11567  003A08  500F               	movf	setMotorPWM@m^0,w,c
 11568  003A0A  26D9               	addwf	fsr2l,f,c
 11569  003A0C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11570  003A0E  22DA               	addwfc	fsr2h,f,c
 11571  003A10  CFDE F011          	movff	postinc2,??_setMotorPWM
 11572  003A14  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11573  003A18  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11574  003A1C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11575  003A20  EE10 F004          	lfsr	1,4
 11576  003A24  500F               	movf	setMotorPWM@m^0,w,c
 11577  003A26  26E1               	addwf	fsr1l,f,c
 11578  003A28  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11579  003A2A  22E2               	addwfc	fsr1h,f,c
 11580  003A2C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11581  003A30  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11582  003A34  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11583  003A38  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11584  003A3C  50E7               	movf	indf1,w,c
 11585  003A3E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11586  003A40  EE10 F006          	lfsr	1,6
 11587  003A44  500F               	movf	setMotorPWM@m^0,w,c
 11588  003A46  26E1               	addwf	fsr1l,f,c
 11589  003A48  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11590  003A4A  22E2               	addwfc	fsr1h,f,c
 11591  003A4C  50E7               	movf	indf1,w,c
 11592  003A4E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11593  003A50  0E01               	movlw	1
 11594  003A52  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11595  003A54  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11596  003A56  EF2F  F01D         	goto	u3344
 11597  003A5A                     u3345:
 11598  003A5A  90D8               	bcf	status,0,c
 11599  003A5C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11600  003A5E                     u3344:
 11601  003A5E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11602  003A60  EF2D  F01D         	goto	u3345
 11603  003A64  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11604  003A66  0AFF               	xorlw	255
 11605  003A68  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11606  003A6A  6EDF               	movwf	indf2,c
 11607  003A6C                     l306:
 11608  003A6C  0012               	return		;funcret
 11609  003A6E                     __end_of_setMotorPWM:
 11610                           	callstack 0
 11611                           
 11612 ;; *************** function ___wmul *****************
 11613 ;; Defined at:
 11614 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  multiplier      2    0[COMRAM] unsigned int 
 11617 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;  product         2    4[COMRAM] unsigned int 
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  2    0[COMRAM] unsigned int 
 11622 ;; Registers used:
 11623 ;;		wreg, status,2, status,0, prodl, prodh
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;Total ram usage:        6 bytes
 11634 ;; Hardware stack levels used: 1
 11635 ;; Hardware stack levels required when called: 1
 11636 ;; This function calls:
 11637 ;;		Nothing
 11638 ;; This function is called by:
 11639 ;;		_setMotorPWM
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text55
 11644  0058FA                     __ptext55:
 11645                           	callstack 0
 11646  0058FA                     ___wmul:
 11647                           	callstack 26
 11648  0058FA  5001               	movf	___wmul@multiplier^0,w,c
 11649  0058FC  0203               	mulwf	___wmul@multiplicand^0,c
 11650  0058FE  CFF3 F005          	movff	prodl,___wmul@product
 11651  005902  CFF4 F006          	movff	prodh,___wmul@product+1
 11652  005906  5001               	movf	___wmul@multiplier^0,w,c
 11653  005908  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11654  00590A  50F3               	movf	243,w,c
 11655  00590C  2606               	addwf	(___wmul@product+1)^0,f,c
 11656  00590E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11657  005910  0203               	mulwf	___wmul@multiplicand^0,c
 11658  005912  50F3               	movf	243,w,c
 11659  005914  2606               	addwf	(___wmul@product+1)^0,f,c
 11660  005916  C005  F001         	movff	___wmul@product,?___wmul
 11661  00591A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11662  00591E  0012               	return		;funcret
 11663  005920                     __end_of___wmul:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function ___awdiv *****************
 11667 ;; Defined at:
 11668 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  dividend        2    6[COMRAM] int 
 11671 ;;  divisor         2    8[COMRAM] int 
 11672 ;; Auto vars:     Size  Location     Type
 11673 ;;  quotient        2   12[COMRAM] int 
 11674 ;;  sign            1   11[COMRAM] unsigned char 
 11675 ;;  counter         1   10[COMRAM] unsigned char 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  2    6[COMRAM] int 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11686 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11688 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11689 ;;Total ram usage:        8 bytes
 11690 ;; Hardware stack levels used: 1
 11691 ;; Hardware stack levels required when called: 1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_setMotorPWM
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text56
 11700  004EF0                     __ptext56:
 11701                           	callstack 0
 11702  004EF0                     ___awdiv:
 11703                           	callstack 26
 11704  004EF0  0E00               	movlw	0
 11705  004EF2  6E0C               	movwf	___awdiv@sign^0,c
 11706  004EF4  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11707  004EF6  EF81  F027         	goto	u3080
 11708  004EFA  EF7F  F027         	goto	u3081
 11709  004EFE                     u3081:
 11710  004EFE  EF87  F027         	goto	l3745
 11711  004F02                     u3080:
 11712  004F02  6C09               	negf	___awdiv@divisor^0,c
 11713  004F04  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11714  004F06  B0D8               	btfsc	status,0,c
 11715  004F08  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11716  004F0A  0E01               	movlw	1
 11717  004F0C  6E0C               	movwf	___awdiv@sign^0,c
 11718  004F0E                     l3745:
 11719  004F0E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11720  004F10  EF8E  F027         	goto	u3090
 11721  004F14  EF8C  F027         	goto	u3091
 11722  004F18                     u3091:
 11723  004F18  EF94  F027         	goto	l3751
 11724  004F1C                     u3090:
 11725  004F1C  6C07               	negf	___awdiv@dividend^0,c
 11726  004F1E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11727  004F20  B0D8               	btfsc	status,0,c
 11728  004F22  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11729  004F24  0E01               	movlw	1
 11730  004F26  1A0C               	xorwf	___awdiv@sign^0,f,c
 11731  004F28                     l3751:
 11732  004F28  0E00               	movlw	0
 11733  004F2A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11734  004F2C  0E00               	movlw	0
 11735  004F2E  6E0D               	movwf	___awdiv@quotient^0,c
 11736  004F30  5009               	movf	___awdiv@divisor^0,w,c
 11737  004F32  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11738  004F34  B4D8               	btfsc	status,2,c
 11739  004F36  EF9F  F027         	goto	u3101
 11740  004F3A  EFA1  F027         	goto	u3100
 11741  004F3E                     u3101:
 11742  004F3E  EFC9  F027         	goto	l3773
 11743  004F42                     u3100:
 11744  004F42  0E01               	movlw	1
 11745  004F44  6E0B               	movwf	___awdiv@counter^0,c
 11746  004F46  EFA9  F027         	goto	l3759
 11747  004F4A                     l3757:
 11748  004F4A  90D8               	bcf	status,0,c
 11749  004F4C  3609               	rlcf	___awdiv@divisor^0,f,c
 11750  004F4E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11751  004F50  2A0B               	incf	___awdiv@counter^0,f,c
 11752  004F52                     l3759:
 11753  004F52  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11754  004F54  EFAE  F027         	goto	u3111
 11755  004F58  EFB0  F027         	goto	u3110
 11756  004F5C                     u3111:
 11757  004F5C  EFA5  F027         	goto	l3757
 11758  004F60                     u3110:
 11759  004F60                     l3761:
 11760  004F60  90D8               	bcf	status,0,c
 11761  004F62  360D               	rlcf	___awdiv@quotient^0,f,c
 11762  004F64  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11763  004F66  5009               	movf	___awdiv@divisor^0,w,c
 11764  004F68  5C07               	subwf	___awdiv@dividend^0,w,c
 11765  004F6A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11766  004F6C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11767  004F6E  A0D8               	btfss	status,0,c
 11768  004F70  EFBC  F027         	goto	u3121
 11769  004F74  EFBE  F027         	goto	u3120
 11770  004F78                     u3121:
 11771  004F78  EFC3  F027         	goto	l3769
 11772  004F7C                     u3120:
 11773  004F7C  5009               	movf	___awdiv@divisor^0,w,c
 11774  004F7E  5E07               	subwf	___awdiv@dividend^0,f,c
 11775  004F80  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11776  004F82  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11777  004F84  800D               	bsf	___awdiv@quotient^0,0,c
 11778  004F86                     l3769:
 11779  004F86  90D8               	bcf	status,0,c
 11780  004F88  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11781  004F8A  3209               	rrcf	___awdiv@divisor^0,f,c
 11782  004F8C  2E0B               	decfsz	___awdiv@counter^0,f,c
 11783  004F8E  EFB0  F027         	goto	l3761
 11784  004F92                     l3773:
 11785  004F92  500C               	movf	___awdiv@sign^0,w,c
 11786  004F94  B4D8               	btfsc	status,2,c
 11787  004F96  EFCF  F027         	goto	u3131
 11788  004F9A  EFD1  F027         	goto	u3130
 11789  004F9E                     u3131:
 11790  004F9E  EFD5  F027         	goto	l3777
 11791  004FA2                     u3130:
 11792  004FA2  6C0D               	negf	___awdiv@quotient^0,c
 11793  004FA4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11794  004FA6  B0D8               	btfsc	status,0,c
 11795  004FA8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11796  004FAA                     l3777:
 11797  004FAA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11798  004FAE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11799  004FB2  0012               	return		;funcret
 11800  004FB4                     __end_of___awdiv:
 11801                           	callstack 0
 11802                           
 11803 ;; *************** function _color_predict *****************
 11804 ;; Defined at:
 11805 ;;		line 250 in file "color.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;  color           1    wreg     unsigned char 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  color           1  125[BANK0 ] unsigned char 
 11810 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11821 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11823 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11824 ;;Total ram usage:      101 bytes
 11825 ;; Hardware stack levels used: 1
 11826 ;; Hardware stack levels required when called: 9
 11827 ;; This function calls:
 11828 ;;		_sendStringSerial4
 11829 ;;		_sprintf
 11830 ;; This function is called by:
 11831 ;;		_color_data_collection
 11832 ;;		_main
 11833 ;;		_goback
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text57
 11838  00587A                     __ptext57:
 11839                           	callstack 0
 11840  00587A                     _color_predict:
 11841                           	callstack 19
 11842                           
 11843                           ;incstack = 0
 11844                           ;color_predict@color stored from wreg
 11845  00587A  0100               	movlb	0	; () banked
 11846  00587C  6FDD               	movwf	color_predict@color& (0+255),b
 11847  00587E                     
 11848                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 11849  00587E  0E79               	movlw	low color_predict@buf
 11850  005880  0100               	movlb	0	; () banked
 11851  005882  6F60               	movwf	sprintf@s& (0+255),b
 11852  005884  0E00               	movlw	high color_predict@buf
 11853  005886  6F61               	movwf	(sprintf@s+1)& (0+255),b
 11854  005888  0E0D               	movlw	low (STR_1+8)
 11855  00588A  6F62               	movwf	sprintf@fmt& (0+255),b
 11856  00588C  0E0E               	movlw	high (STR_1+8)
 11857  00588E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 11858  005890  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 11859  005894  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11860  005896  ECE8  F029         	call	_sprintf	;wreg free
 11861  00589A                     
 11862                           ;color.c: 254:     sendStringSerial4(buf);
 11863  00589A  0E79               	movlw	low color_predict@buf
 11864  00589C  6E02               	movwf	sendStringSerial4@string^0,c
 11865  00589E  0E00               	movlw	high color_predict@buf
 11866  0058A0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 11867  0058A2  EC25  F02C         	call	_sendStringSerial4	;wreg free
 11868  0058A6  0012               	return		;funcret
 11869  0058A8                     __end_of_color_predict:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function _sprintf *****************
 11873 ;; Defined at:
 11874 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  s               2    0[BANK0 ] PTR unsigned char 
 11877 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 11878 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11879 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  f              11   14[BANK0 ] struct _IO_FILE
 11882 ;;  ap              2   12[BANK0 ] PTR void [1]
 11883 ;;		 -> ?_sprintf(2), 
 11884 ;;  ret             2    0        int 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  2    0[BANK0 ] int 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11894 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11897 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;Total ram usage:       25 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; Hardware stack levels required when called: 8
 11901 ;; This function calls:
 11902 ;;		_vfprintf
 11903 ;; This function is called by:
 11904 ;;		_color_display
 11905 ;;		_color_predict
 11906 ;;		_check_color_reading
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text58
 11911  0053D0                     __ptext58:
 11912                           	callstack 0
 11913  0053D0                     _sprintf:
 11914                           	callstack 20
 11915  0053D0  0E64               	movlw	low (?_sprintf+4)
 11916  0053D2  0100               	movlb	0	; () banked
 11917  0053D4  6F6C               	movwf	sprintf@ap& (0+255),b
 11918  0053D6  0E00               	movlw	high (?_sprintf+4)
 11919  0053D8  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 11920  0053DA  C060  F06E         	movff	sprintf@s,sprintf@f
 11921  0053DE  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 11922  0053E2                     
 11923                           ; BSR set to: 0
 11924  0053E2  0E00               	movlw	0
 11925  0053E4  6F72               	movwf	(sprintf@f+4)& (0+255),b
 11926  0053E6  0E00               	movlw	0
 11927  0053E8  6F71               	movwf	(sprintf@f+3)& (0+255),b
 11928  0053EA                     
 11929                           ; BSR set to: 0
 11930  0053EA  0E00               	movlw	0
 11931  0053EC  6F78               	movwf	(sprintf@f+10)& (0+255),b
 11932  0053EE  0E00               	movlw	0
 11933  0053F0  6F77               	movwf	(sprintf@f+9)& (0+255),b
 11934  0053F2                     
 11935                           ; BSR set to: 0
 11936  0053F2  0E6E               	movlw	low sprintf@f
 11937  0053F4  6E50               	movwf	vfprintf@fp^0,c
 11938  0053F6  0E00               	movlw	high sprintf@f
 11939  0053F8  6E51               	movwf	(vfprintf@fp+1)^0,c
 11940  0053FA  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 11941  0053FE  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 11942  005402  0E6C               	movlw	low sprintf@ap
 11943  005404  6E54               	movwf	vfprintf@ap^0,c
 11944  005406  0E00               	movlw	high sprintf@ap
 11945  005408  6E55               	movwf	(vfprintf@ap+1)^0,c
 11946  00540A  EC58  F029         	call	_vfprintf	;wreg free
 11947  00540E  0100               	movlb	0	; () banked
 11948  005410  5171               	movf	(sprintf@f+3)& (0+255),w,b
 11949  005412  2560               	addwf	sprintf@s& (0+255),w,b
 11950  005414  6ED9               	movwf	fsr2l,c
 11951  005416  5172               	movf	(sprintf@f+4)& (0+255),w,b
 11952  005418  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 11953  00541A  6EDA               	movwf	fsr2h,c
 11954  00541C  0E00               	movlw	0
 11955  00541E  6EDF               	movwf	indf2,c
 11956  005420                     
 11957                           ; BSR set to: 0
 11958  005420  0012               	return		;funcret
 11959  005422                     __end_of_sprintf:
 11960                           	callstack 0
 11961                           
 11962 ;; *************** function _vfprintf *****************
 11963 ;; Defined at:
 11964 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 11967 ;;		 -> sprintf@f(11), 
 11968 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 11969 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11970 ;;  ap              2   83[COMRAM] PTR PTR void 
 11971 ;;		 -> sprintf@ap(2), 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 11974 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  2   79[COMRAM] int 
 11977 ;; Registers used:
 11978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11979 ;; Tracked objects:
 11980 ;;		On entry : 0/0
 11981 ;;		On exit  : 0/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11984 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11988 ;;Total ram usage:        8 bytes
 11989 ;; Hardware stack levels used: 1
 11990 ;; Hardware stack levels required when called: 7
 11991 ;; This function calls:
 11992 ;;		_vfpfcnvrt
 11993 ;; This function is called by:
 11994 ;;		_sprintf
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text59
 11999  0052B0                     __ptext59:
 12000                           	callstack 0
 12001  0052B0                     _vfprintf:
 12002                           	callstack 20
 12003  0052B0                     
 12004                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12005  0052B0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12006  0052B4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12007  0052B8                     
 12008                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12009  0052B8  0E00               	movlw	0
 12010  0052BA  0101               	movlb	1	; () banked
 12011  0052BC  6F55               	movwf	(_nout+1)& (0+255),b
 12012  0052BE  0E00               	movlw	0
 12013  0052C0  6F54               	movwf	_nout& (0+255),b
 12014                           
 12015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12016  0052C2  EF76  F029         	goto	l4333
 12017  0052C6                     l4331:
 12018                           
 12019                           ; BSR set to: 1
 12020                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12021  0052C6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12022  0052CA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12023  0052CE  0E56               	movlw	low vfprintf@cfmt
 12024  0052D0  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12025  0052D2  0E00               	movlw	high vfprintf@cfmt
 12026  0052D4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12027  0052D6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12028  0052DA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12029  0052DE  EC12  F01E         	call	_vfpfcnvrt	;wreg free
 12030  0052E2  5040               	movf	?_vfpfcnvrt^0,w,c
 12031  0052E4  0101               	movlb	1	; () banked
 12032  0052E6  2754               	addwf	_nout& (0+255),f,b
 12033  0052E8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12034  0052EA  2355               	addwfc	(_nout+1)& (0+255),f,b
 12035  0052EC                     l4333:
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12039  0052EC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12040  0052F0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12041  0052F4                     	if	0	;tblptru may be non-zero
 12042  0052F4                     	endif
 12043  0052F4                     	if	0	;tblptru may be non-zero
 12044  0052F4                     	endif
 12045  0052F4  0008               	tblrd		*
 12046  0052F6  50F5               	movf	tablat,w,c
 12047  0052F8  0900               	iorlw	0
 12048  0052FA  A4D8               	btfss	status,2,c
 12049  0052FC  EF82  F029         	goto	u4101
 12050  005300  EF84  F029         	goto	u4100
 12051  005304                     u4101:
 12052  005304  EF63  F029         	goto	l4331
 12053  005308                     u4100:
 12054  005308                     
 12055                           ; BSR set to: 1
 12056                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12057  005308  C154  F050         	movff	_nout,?_vfprintf
 12058  00530C  C155  F051         	movff	_nout+1,?_vfprintf+1
 12059  005310                     
 12060                           ; BSR set to: 1
 12061  005310  0012               	return		;funcret
 12062  005312                     __end_of_vfprintf:
 12063                           	callstack 0
 12064                           
 12065 ;; *************** function _vfpfcnvrt *****************
 12066 ;; Defined at:
 12067 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12070 ;;		 -> sprintf@f(11), 
 12071 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12072 ;;		 -> vfprintf@cfmt(2), 
 12073 ;;  ap              2   67[COMRAM] PTR PTR void 
 12074 ;;		 -> sprintf@ap(2), 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;  ll              8   71[COMRAM] long long 
 12077 ;;  llu             8    0        unsigned long long 
 12078 ;;  f               4    0        unsigned long long 
 12079 ;;  vp              3    0        PTR void 
 12080 ;;  ct              3    0        unsigned char [3]
 12081 ;;  cp              3    0        PTR unsigned char 
 12082 ;;  i               2    0        int 
 12083 ;;  done            2    0        int 
 12084 ;;  c               1    0        unsigned char 
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  2   63[COMRAM] int 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12095 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12098 ;;Total ram usage:       16 bytes
 12099 ;; Hardware stack levels used: 1
 12100 ;; Hardware stack levels required when called: 6
 12101 ;; This function calls:
 12102 ;;		_dtoa
 12103 ;;		_fputc
 12104 ;; This function is called by:
 12105 ;;		_vfprintf
 12106 ;; This function uses a non-reentrant model
 12107 ;;
 12108                           
 12109                           	psect	text60
 12110  003C24                     __ptext60:
 12111                           	callstack 0
 12112  003C24                     _vfpfcnvrt:
 12113                           	callstack 20
 12114  003C24                     
 12115                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12116  003C24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12117  003C28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12118  003C2C  CFDE FFF6          	movff	postinc2,tblptrl
 12119  003C30  CFDD FFF7          	movff	postdec2,tblptrh
 12120  003C34                     	if	0	;tblptru may be non-zero
 12121  003C34                     	endif
 12122  003C34                     	if	0	;tblptru may be non-zero
 12123  003C34                     	endif
 12124  003C34  0008               	tblrd		*
 12125  003C36  50F5               	movf	tablat,w,c
 12126  003C38  0A25               	xorlw	37
 12127  003C3A  A4D8               	btfss	status,2,c
 12128  003C3C  EF22  F01E         	goto	u3741
 12129  003C40  EF24  F01E         	goto	u3740
 12130  003C44                     u3741:
 12131  003C44  EFD1  F01E         	goto	l4097
 12132  003C48                     u3740:
 12133  003C48                     
 12134                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12135  003C48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12136  003C4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12137  003C50  2ADE               	incf	postinc2,f,c
 12138  003C52  0E00               	movlw	0
 12139  003C54  22DD               	addwfc	postdec2,f,c
 12140  003C56                     
 12141                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12142  003C56  0E00               	movlw	0
 12143  003C58  0101               	movlb	1	; () banked
 12144  003C5A  6F57               	movwf	(_width+1)& (0+255),b
 12145  003C5C  0E00               	movlw	0
 12146  003C5E  6F56               	movwf	_width& (0+255),b
 12147  003C60  C156  F0F9         	movff	_width,_flags
 12148  003C64  C157  F0FA         	movff	_width+1,_flags+1
 12149  003C68                     
 12150                           ; BSR set to: 1
 12151                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12152  003C68  0100               	movlb	0	; () banked
 12153  003C6A  69F7               	setf	_prec& (0+255),b
 12154  003C6C  69F8               	setf	(_prec+1)& (0+255),b
 12155  003C6E                     
 12156                           ; BSR set to: 0
 12157                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12158  003C6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12159  003C72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12160  003C76  CFDE FFF6          	movff	postinc2,tblptrl
 12161  003C7A  CFDD FFF7          	movff	postdec2,tblptrh
 12162  003C7E                     	if	0	;tblptru may be non-zero
 12163  003C7E                     	endif
 12164  003C7E                     	if	0	;tblptru may be non-zero
 12165  003C7E                     	endif
 12166  003C7E  0008               	tblrd		*
 12167  003C80  50F5               	movf	tablat,w,c
 12168  003C82  0A64               	xorlw	100
 12169  003C84  B4D8               	btfsc	status,2,c
 12170  003C86  EF47  F01E         	goto	u3751
 12171  003C8A  EF49  F01E         	goto	u3750
 12172  003C8E                     u3751:
 12173  003C8E  EF5B  F01E         	goto	l4075
 12174  003C92                     u3750:
 12175  003C92                     
 12176                           ; BSR set to: 0
 12177  003C92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12178  003C96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12179  003C9A  CFDE FFF6          	movff	postinc2,tblptrl
 12180  003C9E  CFDD FFF7          	movff	postdec2,tblptrh
 12181  003CA2                     	if	0	;tblptru may be non-zero
 12182  003CA2                     	endif
 12183  003CA2                     	if	0	;tblptru may be non-zero
 12184  003CA2                     	endif
 12185  003CA2  0008               	tblrd		*
 12186  003CA4  50F5               	movf	tablat,w,c
 12187  003CA6  0A69               	xorlw	105
 12188  003CA8  A4D8               	btfss	status,2,c
 12189  003CAA  EF59  F01E         	goto	u3761
 12190  003CAE  EF5B  F01E         	goto	u3760
 12191  003CB2                     u3761:
 12192  003CB2  EF9B  F01E         	goto	l4081
 12193  003CB6                     u3760:
 12194  003CB6                     l4075:
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12198  003CB6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12199  003CBA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12200  003CBE  2ADE               	incf	postinc2,f,c
 12201  003CC0  0E00               	movlw	0
 12202  003CC2  22DD               	addwfc	postdec2,f,c
 12203                           
 12204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12205  003CC4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12206  003CC8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12207  003CCC  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12208  003CD0  0E02               	movlw	2
 12209  003CD2  26DE               	addwf	postinc2,f,c
 12210  003CD4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12211  003CD8  0E00               	movlw	0
 12212  003CDA  22DD               	addwfc	postdec2,f,c
 12213  003CDC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12214  003CE0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12215  003CE4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12216  003CE8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12217  003CEC  0E00               	movlw	0
 12218  003CEE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12219  003CF0  0EFF               	movlw	-1
 12220  003CF2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12221  003CF4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12222  003CF6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12223  003CF8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12224  003CFA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12225  003CFC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12226  003CFE                     
 12227                           ; BSR set to: 0
 12228                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12229  003CFE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12230  003D02  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12231  003D06  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12232  003D0A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12233  003D0E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12234  003D12  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12235  003D16  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12236  003D1A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12237  003D1E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12238  003D22  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12239  003D26  ECB3  F015         	call	_dtoa	;wreg free
 12240  003D2A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12241  003D2E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12242  003D32  EFEC  F01E         	goto	l1521
 12243  003D36                     l4081:
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12247  003D36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12248  003D3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12249  003D3E  CFDE FFF6          	movff	postinc2,tblptrl
 12250  003D42  CFDD FFF7          	movff	postdec2,tblptrh
 12251  003D46                     	if	0	;tblptru may be non-zero
 12252  003D46                     	endif
 12253  003D46                     	if	0	;tblptru may be non-zero
 12254  003D46                     	endif
 12255  003D46  0008               	tblrd		*
 12256  003D48  50F5               	movf	tablat,w,c
 12257  003D4A  0A25               	xorlw	37
 12258  003D4C  A4D8               	btfss	status,2,c
 12259  003D4E  EFAB  F01E         	goto	u3771
 12260  003D52  EFAD  F01E         	goto	u3770
 12261  003D56                     u3771:
 12262  003D56  EFC4  F01E         	goto	l4091
 12263  003D5A                     u3770:
 12264  003D5A                     
 12265                           ; BSR set to: 0
 12266                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12267  003D5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12268  003D5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12269  003D62  2ADE               	incf	postinc2,f,c
 12270  003D64  0E00               	movlw	0
 12271  003D66  22DD               	addwfc	postdec2,f,c
 12272  003D68                     
 12273                           ; BSR set to: 0
 12274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12275  003D68  0E00               	movlw	0
 12276  003D6A  6E02               	movwf	(fputc@c+1)^0,c
 12277  003D6C  0E25               	movlw	37
 12278  003D6E  6E01               	movwf	fputc@c^0,c
 12279  003D70  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12280  003D74  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12281  003D78  EC4D  F026         	call	_fputc	;wreg free
 12282  003D7C                     l4087:
 12283                           
 12284                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12285  003D7C  0E00               	movlw	0
 12286  003D7E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12287  003D80  0E01               	movlw	1
 12288  003D82  6E40               	movwf	?_vfpfcnvrt^0,c
 12289  003D84  EFEC  F01E         	goto	l1521
 12290  003D88                     l4091:
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12294  003D88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12295  003D8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12296  003D90  2ADE               	incf	postinc2,f,c
 12297  003D92  0E00               	movlw	0
 12298  003D94  22DD               	addwfc	postdec2,f,c
 12299  003D96                     
 12300                           ; BSR set to: 0
 12301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12302  003D96  0E00               	movlw	0
 12303  003D98  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12304  003D9A  0E00               	movlw	0
 12305  003D9C  6E40               	movwf	?_vfpfcnvrt^0,c
 12306  003D9E  EFEC  F01E         	goto	l1521
 12307  003DA2                     l4097:
 12308                           
 12309                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12310  003DA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12311  003DA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12312  003DAA  CFDE FFF6          	movff	postinc2,tblptrl
 12313  003DAE  CFDD FFF7          	movff	postdec2,tblptrh
 12314  003DB2                     	if	0	;tblptru may be non-zero
 12315  003DB2                     	endif
 12316  003DB2                     	if	0	;tblptru may be non-zero
 12317  003DB2                     	endif
 12318  003DB2  0008               	tblrd		*
 12319  003DB4  50F5               	movf	tablat,w,c
 12320  003DB6  6E01               	movwf	fputc@c^0,c
 12321  003DB8  6A02               	clrf	(fputc@c+1)^0,c
 12322  003DBA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12323  003DBE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12324  003DC2  EC4D  F026         	call	_fputc	;wreg free
 12325  003DC6                     
 12326                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12327  003DC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12328  003DCA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12329  003DCE  2ADE               	incf	postinc2,f,c
 12330  003DD0  0E00               	movlw	0
 12331  003DD2  22DD               	addwfc	postdec2,f,c
 12332  003DD4  EFBE  F01E         	goto	l4087
 12333  003DD8                     l1521:
 12334  003DD8  0012               	return		;funcret
 12335  003DDA                     __end_of_vfpfcnvrt:
 12336                           	callstack 0
 12337                           
 12338 ;; *************** function _dtoa *****************
 12339 ;; Defined at:
 12340 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12343 ;;		 -> sprintf@f(11), 
 12344 ;;  d               8   29[COMRAM] long long 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  n               8   53[COMRAM] long long 
 12347 ;;  i               2   61[COMRAM] int 
 12348 ;;  s               2   51[COMRAM] int 
 12349 ;;  w               2   49[COMRAM] int 
 12350 ;;  p               2   47[COMRAM] int 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  2   27[COMRAM] int 
 12353 ;; Registers used:
 12354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12360 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;Total ram usage:       36 bytes
 12365 ;; Hardware stack levels used: 1
 12366 ;; Hardware stack levels required when called: 5
 12367 ;; This function calls:
 12368 ;;		___aodiv
 12369 ;;		___aomod
 12370 ;;		_abs
 12371 ;;		_pad
 12372 ;; This function is called by:
 12373 ;;		_vfpfcnvrt
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           	psect	text61
 12378  002B66                     __ptext61:
 12379                           	callstack 0
 12380  002B66                     _dtoa:
 12381                           	callstack 20
 12382  002B66                     
 12383                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12384  002B66  C01E  F036         	movff	dtoa@d,dtoa@n
 12385  002B6A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12386  002B6E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12387  002B72  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12388  002B76  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12389  002B7A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12390  002B7E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12391  002B82  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12392  002B86                     
 12393                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12394  002B86  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12395  002B88  EFC8  F015         	goto	u3141
 12396  002B8C  EFCB  F015         	goto	u3140
 12397  002B90                     u3141:
 12398  002B90  0E01               	movlw	1
 12399  002B92  EFCC  F015         	goto	u3150
 12400  002B96                     u3140:
 12401  002B96  0E00               	movlw	0
 12402  002B98                     u3150:
 12403  002B98  6E34               	movwf	dtoa@s^0,c
 12404  002B9A  6A35               	clrf	(dtoa@s+1)^0,c
 12405                           
 12406                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12407  002B9C  5034               	movf	dtoa@s^0,w,c
 12408  002B9E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12409  002BA0  B4D8               	btfsc	status,2,c
 12410  002BA2  EFD5  F015         	goto	u3161
 12411  002BA6  EFD7  F015         	goto	u3160
 12412  002BAA                     u3161:
 12413  002BAA  EFE7  F015         	goto	l3787
 12414  002BAE                     u3160:
 12415  002BAE                     
 12416                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12417  002BAE  1E3D               	comf	(dtoa@n+7)^0,f,c
 12418  002BB0  1E3C               	comf	(dtoa@n+6)^0,f,c
 12419  002BB2  1E3B               	comf	(dtoa@n+5)^0,f,c
 12420  002BB4  1E3A               	comf	(dtoa@n+4)^0,f,c
 12421  002BB6  1E39               	comf	(dtoa@n+3)^0,f,c
 12422  002BB8  1E38               	comf	(dtoa@n+2)^0,f,c
 12423  002BBA  1E37               	comf	(dtoa@n+1)^0,f,c
 12424  002BBC  6C36               	negf	dtoa@n^0,c
 12425  002BBE  0E00               	movlw	0
 12426  002BC0  2237               	addwfc	(dtoa@n+1)^0,f,c
 12427  002BC2  2238               	addwfc	(dtoa@n+2)^0,f,c
 12428  002BC4  2239               	addwfc	(dtoa@n+3)^0,f,c
 12429  002BC6  223A               	addwfc	(dtoa@n+4)^0,f,c
 12430  002BC8  223B               	addwfc	(dtoa@n+5)^0,f,c
 12431  002BCA  223C               	addwfc	(dtoa@n+6)^0,f,c
 12432  002BCC  223D               	addwfc	(dtoa@n+7)^0,f,c
 12433  002BCE                     l3787:
 12434                           
 12435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12436  002BCE  0100               	movlb	0	; () banked
 12437  002BD0  BFF8               	btfsc	(_prec+1)& (0+255),7,b
 12438  002BD2  EFED  F015         	goto	u3171
 12439  002BD6  EFEF  F015         	goto	u3170
 12440  002BDA                     u3171:
 12441  002BDA  EFF0  F015         	goto	l3791
 12442  002BDE                     u3170:
 12443  002BDE                     
 12444                           ; BSR set to: 0
 12445                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12446  002BDE  93F9               	bcf	_flags& (0+255),1,b
 12447  002BE0                     l3791:
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12451  002BE0  BFF8               	btfsc	(_prec+1)& (0+255),7,b
 12452  002BE2  EFFD  F015         	goto	u3180
 12453  002BE6  51F8               	movf	(_prec+1)& (0+255),w,b
 12454  002BE8  E106               	bnz	u3181
 12455  002BEA  05F7               	decf	_prec& (0+255),w,b
 12456  002BEC  B0D8               	btfsc	status,0,c
 12457  002BEE  EFFB  F015         	goto	u3181
 12458  002BF2  EFFD  F015         	goto	u3180
 12459  002BF6                     u3181:
 12460  002BF6  EF03  F016         	goto	l1494
 12461  002BFA                     u3180:
 12462  002BFA                     
 12463                           ; BSR set to: 0
 12464  002BFA  0E00               	movlw	0
 12465  002BFC  6E31               	movwf	(dtoa@p+1)^0,c
 12466  002BFE  0E01               	movlw	1
 12467  002C00  6E30               	movwf	dtoa@p^0,c
 12468  002C02  EF07  F016         	goto	l1496
 12469  002C06                     l1494:
 12470                           
 12471                           ; BSR set to: 0
 12472  002C06  C0F7  F030         	movff	_prec,dtoa@p
 12473  002C0A  C0F8  F031         	movff	_prec+1,dtoa@p+1
 12474  002C0E                     l1496:
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12478  002C0E  C156  F032         	movff	_width,dtoa@w
 12479  002C12  C157  F033         	movff	_width+1,dtoa@w+1
 12480  002C16                     
 12481                           ; BSR set to: 0
 12482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12483  002C16  5034               	movf	dtoa@s^0,w,c
 12484  002C18  1035               	iorwf	(dtoa@s+1)^0,w,c
 12485  002C1A  A4D8               	btfss	status,2,c
 12486  002C1C  EF12  F016         	goto	u3191
 12487  002C20  EF14  F016         	goto	u3190
 12488  002C24                     u3191:
 12489  002C24  EF1B  F016         	goto	l3799
 12490  002C28                     u3190:
 12491  002C28                     
 12492                           ; BSR set to: 0
 12493  002C28  A5F9               	btfss	_flags& (0+255),2,b
 12494  002C2A  EF19  F016         	goto	u3201
 12495  002C2E  EF1B  F016         	goto	u3200
 12496  002C32                     u3201:
 12497  002C32  EF1E  F016         	goto	l3801
 12498  002C36                     u3200:
 12499  002C36                     l3799:
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12503  002C36  0632               	decf	dtoa@w^0,f,c
 12504  002C38  A0D8               	btfss	status,0,c
 12505  002C3A  0633               	decf	(dtoa@w+1)^0,f,c
 12506  002C3C                     l3801:
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12510  002C3C  0E00               	movlw	0
 12511  002C3E  6E3F               	movwf	(dtoa@i+1)^0,c
 12512  002C40  0E1F               	movlw	31
 12513  002C42  6E3E               	movwf	dtoa@i^0,c
 12514  002C44                     
 12515                           ; BSR set to: 0
 12516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12517  002C44  0E00               	movlw	0
 12518  002C46  0101               	movlb	1	; () banked
 12519  002C48  6F7F               	movwf	(_dbuf+31)& (0+255),b
 12520                           
 12521                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12522  002C4A  EFA3  F016         	goto	l3815
 12523  002C4E                     l3805:
 12524                           
 12525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12526  002C4E  063E               	decf	dtoa@i^0,f,c
 12527  002C50  A0D8               	btfss	status,0,c
 12528  002C52  063F               	decf	(dtoa@i+1)^0,f,c
 12529  002C54                     
 12530                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12531  002C54  0E60               	movlw	low _dbuf
 12532  002C56  243E               	addwf	dtoa@i^0,w,c
 12533  002C58  6ED9               	movwf	fsr2l,c
 12534  002C5A  0E01               	movlw	high _dbuf
 12535  002C5C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12536  002C5E  6EDA               	movwf	fsr2h,c
 12537  002C60  C036  F001         	movff	dtoa@n,___aomod@dividend
 12538  002C64  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12539  002C68  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12540  002C6C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12541  002C70  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12542  002C74  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12543  002C78  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12544  002C7C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12545  002C80  0E0A               	movlw	10
 12546  002C82  6E09               	movwf	___aomod@divisor^0,c
 12547  002C84  0E00               	movlw	0
 12548  002C86  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12549  002C88  0E00               	movlw	0
 12550  002C8A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12551  002C8C  0E00               	movlw	0
 12552  002C8E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12553  002C90  0E00               	movlw	0
 12554  002C92  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12555  002C94  0E00               	movlw	0
 12556  002C96  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12557  002C98  0E00               	movlw	0
 12558  002C9A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12559  002C9C  0E00               	movlw	0
 12560  002C9E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12561  002CA0  EC98  F023         	call	___aomod	;wreg free
 12562  002CA4  C001  F026         	movff	?___aomod,??_dtoa
 12563  002CA8  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12564  002CAC  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12565  002CB0  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12566  002CB4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12567  002CB8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12568  002CBC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12569  002CC0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12570  002CC4  C026  F013         	movff	??_dtoa,abs@a
 12571  002CC8  C028  F014         	movff	??_dtoa+2,abs@a+1
 12572  002CCC  EC7A  F02B         	call	_abs	;wreg free
 12573  002CD0  5013               	movf	?_abs^0,w,c
 12574  002CD2  0F30               	addlw	48
 12575  002CD4  6EDF               	movwf	indf2,c
 12576  002CD6                     
 12577                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12578  002CD6  0630               	decf	dtoa@p^0,f,c
 12579  002CD8  A0D8               	btfss	status,0,c
 12580  002CDA  0631               	decf	(dtoa@p+1)^0,f,c
 12581  002CDC                     
 12582                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12583  002CDC  0632               	decf	dtoa@w^0,f,c
 12584  002CDE  A0D8               	btfss	status,0,c
 12585  002CE0  0633               	decf	(dtoa@w+1)^0,f,c
 12586  002CE2                     
 12587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12588  002CE2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12589  002CE6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12590  002CEA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12591  002CEE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12592  002CF2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12593  002CF6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12594  002CFA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12595  002CFE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12596  002D02  0E0A               	movlw	10
 12597  002D04  6E09               	movwf	___aodiv@divisor^0,c
 12598  002D06  0E00               	movlw	0
 12599  002D08  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12600  002D0A  0E00               	movlw	0
 12601  002D0C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12602  002D0E  0E00               	movlw	0
 12603  002D10  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12604  002D12  0E00               	movlw	0
 12605  002D14  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12606  002D16  0E00               	movlw	0
 12607  002D18  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12608  002D1A  0E00               	movlw	0
 12609  002D1C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12610  002D1E  0E00               	movlw	0
 12611  002D20  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12612  002D22  EC94  F020         	call	___aodiv	;wreg free
 12613  002D26  C001  F036         	movff	?___aodiv,dtoa@n
 12614  002D2A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12615  002D2E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12616  002D32  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12617  002D36  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12618  002D3A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12619  002D3E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12620  002D42  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12621  002D46                     l3815:
 12622                           
 12623                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12624  002D46  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12625  002D48  EFAE  F016         	goto	u3211
 12626  002D4C  503F               	movf	(dtoa@i+1)^0,w,c
 12627  002D4E  E108               	bnz	u3210
 12628  002D50  043E               	decf	dtoa@i^0,w,c
 12629  002D52  A0D8               	btfss	status,0,c
 12630  002D54  EFAE  F016         	goto	u3211
 12631  002D58  EFB0  F016         	goto	u3210
 12632  002D5C                     u3211:
 12633  002D5C  EFE1  F016         	goto	l3825
 12634  002D60                     u3210:
 12635  002D60  5036               	movf	dtoa@n^0,w,c
 12636  002D62  1037               	iorwf	(dtoa@n+1)^0,w,c
 12637  002D64  1038               	iorwf	(dtoa@n+2)^0,w,c
 12638  002D66  1039               	iorwf	(dtoa@n+3)^0,w,c
 12639  002D68  103A               	iorwf	(dtoa@n+4)^0,w,c
 12640  002D6A  103B               	iorwf	(dtoa@n+5)^0,w,c
 12641  002D6C  103C               	iorwf	(dtoa@n+6)^0,w,c
 12642  002D6E  103D               	iorwf	(dtoa@n+7)^0,w,c
 12643  002D70  A4D8               	btfss	status,2,c
 12644  002D72  EFBD  F016         	goto	u3221
 12645  002D76  EFBF  F016         	goto	u3220
 12646  002D7A                     u3221:
 12647  002D7A  EF27  F016         	goto	l3805
 12648  002D7E                     u3220:
 12649  002D7E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12650  002D80  EFCC  F016         	goto	u3230
 12651  002D84  5031               	movf	(dtoa@p+1)^0,w,c
 12652  002D86  E106               	bnz	u3231
 12653  002D88  0430               	decf	dtoa@p^0,w,c
 12654  002D8A  B0D8               	btfsc	status,0,c
 12655  002D8C  EFCA  F016         	goto	u3231
 12656  002D90  EFCC  F016         	goto	u3230
 12657  002D94                     u3231:
 12658  002D94  EF27  F016         	goto	l3805
 12659  002D98                     u3230:
 12660  002D98  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12661  002D9A  EFD7  F016         	goto	u3241
 12662  002D9E  5033               	movf	(dtoa@w+1)^0,w,c
 12663  002DA0  E108               	bnz	u3240
 12664  002DA2  0432               	decf	dtoa@w^0,w,c
 12665  002DA4  A0D8               	btfss	status,0,c
 12666  002DA6  EFD7  F016         	goto	u3241
 12667  002DAA  EFD9  F016         	goto	u3240
 12668  002DAE                     u3241:
 12669  002DAE  EFE1  F016         	goto	l3825
 12670  002DB2                     u3240:
 12671  002DB2  0100               	movlb	0	; () banked
 12672  002DB4  B3F9               	btfsc	_flags& (0+255),1,b
 12673  002DB6  EFDF  F016         	goto	u3251
 12674  002DBA  EFE1  F016         	goto	u3250
 12675  002DBE                     u3251:
 12676  002DBE  EF27  F016         	goto	l3805
 12677  002DC2                     u3250:
 12678  002DC2                     l3825:
 12679                           
 12680                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12681  002DC2  5034               	movf	dtoa@s^0,w,c
 12682  002DC4  1035               	iorwf	(dtoa@s+1)^0,w,c
 12683  002DC6  A4D8               	btfss	status,2,c
 12684  002DC8  EFE8  F016         	goto	u3261
 12685  002DCC  EFEA  F016         	goto	u3260
 12686  002DD0                     u3261:
 12687  002DD0  EFF2  F016         	goto	l3829
 12688  002DD4                     u3260:
 12689  002DD4  0100               	movlb	0	; () banked
 12690  002DD6  A5F9               	btfss	_flags& (0+255),2,b
 12691  002DD8  EFF0  F016         	goto	u3271
 12692  002DDC  EFF2  F016         	goto	u3270
 12693  002DE0                     u3271:
 12694  002DE0  EF10  F017         	goto	l3839
 12695  002DE4                     u3270:
 12696  002DE4                     l3829:
 12697                           
 12698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12699  002DE4  063E               	decf	dtoa@i^0,f,c
 12700  002DE6  A0D8               	btfss	status,0,c
 12701  002DE8  063F               	decf	(dtoa@i+1)^0,f,c
 12702  002DEA                     
 12703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12704  002DEA  5034               	movf	dtoa@s^0,w,c
 12705  002DEC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12706  002DEE  A4D8               	btfss	status,2,c
 12707  002DF0  EFFC  F016         	goto	u3281
 12708  002DF4  EFFE  F016         	goto	u3280
 12709  002DF8                     u3281:
 12710  002DF8  EF04  F017         	goto	l3835
 12711  002DFC                     u3280:
 12712  002DFC  0E00               	movlw	0
 12713  002DFE  6E2F               	movwf	(_dtoa$2877+1)^0,c
 12714  002E00  0E2B               	movlw	43
 12715  002E02  6E2E               	movwf	_dtoa$2877^0,c
 12716  002E04  EF08  F017         	goto	l3837
 12717  002E08                     l3835:
 12718  002E08  0E00               	movlw	0
 12719  002E0A  6E2F               	movwf	(_dtoa$2877+1)^0,c
 12720  002E0C  0E2D               	movlw	45
 12721  002E0E  6E2E               	movwf	_dtoa$2877^0,c
 12722  002E10                     l3837:
 12723  002E10  0E60               	movlw	low _dbuf
 12724  002E12  243E               	addwf	dtoa@i^0,w,c
 12725  002E14  6ED9               	movwf	fsr2l,c
 12726  002E16  0E01               	movlw	high _dbuf
 12727  002E18  203F               	addwfc	(dtoa@i+1)^0,w,c
 12728  002E1A  6EDA               	movwf	fsr2h,c
 12729  002E1C  C02E  FFDF         	movff	_dtoa$2877,indf2
 12730  002E20                     l3839:
 12731                           
 12732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12733  002E20  C01C  F011         	movff	dtoa@fp,pad@fp
 12734  002E24  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12735  002E28  0E60               	movlw	low _dbuf
 12736  002E2A  243E               	addwf	dtoa@i^0,w,c
 12737  002E2C  6E13               	movwf	pad@buf^0,c
 12738  002E2E  0E01               	movlw	high _dbuf
 12739  002E30  203F               	addwfc	(dtoa@i+1)^0,w,c
 12740  002E32  6E14               	movwf	(pad@buf+1)^0,c
 12741  002E34  C032  F015         	movff	dtoa@w,pad@p
 12742  002E38  C033  F016         	movff	dtoa@w+1,pad@p+1
 12743  002E3C  EC15  F027         	call	_pad	;wreg free
 12744  002E40  C011  F01C         	movff	?_pad,?_dtoa
 12745  002E44  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12746  002E48  0012               	return		;funcret
 12747  002E4A                     __end_of_dtoa:
 12748                           	callstack 0
 12749                           
 12750 ;; *************** function _pad *****************
 12751 ;; Defined at:
 12752 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12755 ;;		 -> sprintf@f(11), 
 12756 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12757 ;;		 -> dbuf(32), 
 12758 ;;  p               2   20[COMRAM] int 
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;  w               2   25[COMRAM] int 
 12761 ;;  i               2   23[COMRAM] int 
 12762 ;; Return value:  Size  Location     Type
 12763 ;;                  2   16[COMRAM] int 
 12764 ;; Registers used:
 12765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12766 ;; Tracked objects:
 12767 ;;		On entry : 0/0
 12768 ;;		On exit  : 0/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12771 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12775 ;;Total ram usage:       11 bytes
 12776 ;; Hardware stack levels used: 1
 12777 ;; Hardware stack levels required when called: 4
 12778 ;; This function calls:
 12779 ;;		_fputc
 12780 ;;		_fputs
 12781 ;;		_strlen
 12782 ;; This function is called by:
 12783 ;;		_dtoa
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           	psect	text62
 12788  004E2A                     __ptext62:
 12789                           	callstack 0
 12790  004E2A                     _pad:
 12791                           	callstack 20
 12792  004E2A                     
 12793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12794  004E2A  0100               	movlb	0	; () banked
 12795  004E2C  A1F9               	btfss	_flags& (0+255),0,b
 12796  004E2E  EF1B  F027         	goto	u3031
 12797  004E32  EF1D  F027         	goto	u3030
 12798  004E36                     u3031:
 12799  004E36  EF27  F027         	goto	l3709
 12800  004E3A                     u3030:
 12801  004E3A                     
 12802                           ; BSR set to: 0
 12803                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12804  004E3A  C013  F00A         	movff	pad@buf,fputs@s
 12805  004E3E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12806  004E42  C011  F00C         	movff	pad@fp,fputs@fp
 12807  004E46  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12808  004E4A  ECD4  F02A         	call	_fputs	;wreg free
 12809  004E4E                     l3709:
 12810                           
 12811                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12812  004E4E  BE16               	btfsc	(pad@p+1)^0,7,c
 12813  004E50  EF2C  F027         	goto	u3041
 12814  004E54  EF2E  F027         	goto	u3040
 12815  004E58                     u3041:
 12816  004E58  EF34  F027         	goto	l3713
 12817  004E5C                     u3040:
 12818  004E5C  C015  F01A         	movff	pad@p,pad@w
 12819  004E60  C016  F01B         	movff	pad@p+1,pad@w+1
 12820  004E64  EF38  F027         	goto	l1483
 12821  004E68                     l3713:
 12822  004E68  0E00               	movlw	0
 12823  004E6A  6E1B               	movwf	(pad@w+1)^0,c
 12824  004E6C  0E00               	movlw	0
 12825  004E6E  6E1A               	movwf	pad@w^0,c
 12826  004E70                     l1483:
 12827                           
 12828                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12829  004E70  0E00               	movlw	0
 12830  004E72  6E19               	movwf	(pad@i+1)^0,c
 12831  004E74  0E00               	movlw	0
 12832  004E76  6E18               	movwf	pad@i^0,c
 12833                           
 12834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12835  004E78  EF4A  F027         	goto	l3719
 12836  004E7C                     l3715:
 12837                           
 12838                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12839  004E7C  0E00               	movlw	0
 12840  004E7E  6E02               	movwf	(fputc@c+1)^0,c
 12841  004E80  0E20               	movlw	32
 12842  004E82  6E01               	movwf	fputc@c^0,c
 12843  004E84  C011  F003         	movff	pad@fp,fputc@fp
 12844  004E88  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12845  004E8C  EC4D  F026         	call	_fputc	;wreg free
 12846  004E90                     
 12847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12848  004E90  4A18               	infsnz	pad@i^0,f,c
 12849  004E92  2A19               	incf	(pad@i+1)^0,f,c
 12850  004E94                     l3719:
 12851                           
 12852                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12853  004E94  501A               	movf	pad@w^0,w,c
 12854  004E96  5C18               	subwf	pad@i^0,w,c
 12855  004E98  5019               	movf	(pad@i+1)^0,w,c
 12856  004E9A  0A80               	xorlw	128
 12857  004E9C  6E17               	movwf	??_pad^0,c
 12858  004E9E  501B               	movf	(pad@w+1)^0,w,c
 12859  004EA0  0A80               	xorlw	128
 12860  004EA2  5817               	subwfb	??_pad^0,w,c
 12861  004EA4  A0D8               	btfss	status,0,c
 12862  004EA6  EF57  F027         	goto	u3051
 12863  004EAA  EF59  F027         	goto	u3050
 12864  004EAE                     u3051:
 12865  004EAE  EF3E  F027         	goto	l3715
 12866  004EB2                     u3050:
 12867  004EB2                     
 12868                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12869  004EB2  0100               	movlb	0	; () banked
 12870  004EB4  B1F9               	btfsc	_flags& (0+255),0,b
 12871  004EB6  EF5F  F027         	goto	u3061
 12872  004EBA  EF61  F027         	goto	u3060
 12873  004EBE                     u3061:
 12874  004EBE  EF6B  F027         	goto	l3723
 12875  004EC2                     u3060:
 12876  004EC2                     
 12877                           ; BSR set to: 0
 12878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12879  004EC2  C013  F00A         	movff	pad@buf,fputs@s
 12880  004EC6  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12881  004ECA  C011  F00C         	movff	pad@fp,fputs@fp
 12882  004ECE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12883  004ED2  ECD4  F02A         	call	_fputs	;wreg free
 12884  004ED6                     l3723:
 12885                           
 12886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12887  004ED6  C013  F001         	movff	pad@buf,strlen@s
 12888  004EDA  C014  F002         	movff	pad@buf+1,strlen@s+1
 12889  004EDE  ECF0  F02B         	call	_strlen	;wreg free
 12890  004EE2  501A               	movf	pad@w^0,w,c
 12891  004EE4  2401               	addwf	?_strlen^0,w,c
 12892  004EE6  6E11               	movwf	?_pad^0,c
 12893  004EE8  501B               	movf	(pad@w+1)^0,w,c
 12894  004EEA  2002               	addwfc	(?_strlen+1)^0,w,c
 12895  004EEC  6E12               	movwf	(?_pad+1)^0,c
 12896  004EEE  0012               	return		;funcret
 12897  004EF0                     __end_of_pad:
 12898                           	callstack 0
 12899                           
 12900 ;; *************** function _strlen *****************
 12901 ;; Defined at:
 12902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12905 ;;		 -> dbuf(32), 
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12908 ;;		 -> dbuf(32), 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  2    0[COMRAM] unsigned int 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12922 ;;Total ram usage:        4 bytes
 12923 ;; Hardware stack levels used: 1
 12924 ;; Hardware stack levels required when called: 1
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		_pad
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text63
 12933  0057E0                     __ptext63:
 12934                           	callstack 0
 12935  0057E0                     _strlen:
 12936                           	callstack 22
 12937  0057E0  C001  F003         	movff	strlen@s,strlen@a
 12938  0057E4  C002  F004         	movff	strlen@s+1,strlen@a+1
 12939  0057E8  EFF8  F02B         	goto	l3619
 12940  0057EC                     l3617:
 12941  0057EC  4A01               	infsnz	strlen@s^0,f,c
 12942  0057EE  2A02               	incf	(strlen@s+1)^0,f,c
 12943  0057F0                     l3619:
 12944  0057F0  C001  FFD9         	movff	strlen@s,fsr2l
 12945  0057F4  C002  FFDA         	movff	strlen@s+1,fsr2h
 12946  0057F8  50DF               	movf	indf2,w,c
 12947  0057FA  A4D8               	btfss	status,2,c
 12948  0057FC  EF02  F02C         	goto	u2891
 12949  005800  EF04  F02C         	goto	u2890
 12950  005804                     u2891:
 12951  005804  EFF6  F02B         	goto	l3617
 12952  005808                     u2890:
 12953  005808  5003               	movf	strlen@a^0,w,c
 12954  00580A  5C01               	subwf	strlen@s^0,w,c
 12955  00580C  6E01               	movwf	?_strlen^0,c
 12956  00580E  5004               	movf	(strlen@a+1)^0,w,c
 12957  005810  5802               	subwfb	(strlen@s+1)^0,w,c
 12958  005812  6E02               	movwf	(?_strlen+1)^0,c
 12959  005814  0012               	return		;funcret
 12960  005816                     __end_of_strlen:
 12961                           	callstack 0
 12962                           
 12963 ;; *************** function _fputs *****************
 12964 ;; Defined at:
 12965 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12966 ;; Parameters:    Size  Location     Type
 12967 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12968 ;;		 -> dbuf(32), 
 12969 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12970 ;;		 -> sprintf@f(11), 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;  i               2   14[COMRAM] int 
 12973 ;;  c               1   13[COMRAM] unsigned char 
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  2    9[COMRAM] int 
 12976 ;; Registers used:
 12977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12984 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12986 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;Total ram usage:        7 bytes
 12988 ;; Hardware stack levels used: 1
 12989 ;; Hardware stack levels required when called: 3
 12990 ;; This function calls:
 12991 ;;		_fputc
 12992 ;; This function is called by:
 12993 ;;		_pad
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text64
 12998  0055A8                     __ptext64:
 12999                           	callstack 0
 13000  0055A8                     _fputs:
 13001                           	callstack 20
 13002  0055A8  0E00               	movlw	0
 13003  0055AA  6E10               	movwf	(fputs@i+1)^0,c
 13004  0055AC  0E00               	movlw	0
 13005  0055AE  6E0F               	movwf	fputs@i^0,c
 13006  0055B0  EFE5  F02A         	goto	l3613
 13007  0055B4                     l3609:
 13008  0055B4  C00E  F001         	movff	fputs@c,fputc@c
 13009  0055B8  6A02               	clrf	(fputc@c+1)^0,c
 13010  0055BA  C00C  F003         	movff	fputs@fp,fputc@fp
 13011  0055BE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13012  0055C2  EC4D  F026         	call	_fputc	;wreg free
 13013  0055C6  4A0F               	infsnz	fputs@i^0,f,c
 13014  0055C8  2A10               	incf	(fputs@i+1)^0,f,c
 13015  0055CA                     l3613:
 13016  0055CA  500F               	movf	fputs@i^0,w,c
 13017  0055CC  240A               	addwf	fputs@s^0,w,c
 13018  0055CE  6ED9               	movwf	fsr2l,c
 13019  0055D0  5010               	movf	(fputs@i+1)^0,w,c
 13020  0055D2  200B               	addwfc	(fputs@s+1)^0,w,c
 13021  0055D4  6EDA               	movwf	fsr2h,c
 13022  0055D6  50DF               	movf	indf2,w,c
 13023  0055D8  6E0E               	movwf	fputs@c^0,c
 13024  0055DA  500E               	movf	fputs@c^0,w,c
 13025  0055DC  A4D8               	btfss	status,2,c
 13026  0055DE  EFF3  F02A         	goto	u2881
 13027  0055E2  EFF5  F02A         	goto	u2880
 13028  0055E6                     u2881:
 13029  0055E6  EFDA  F02A         	goto	l3609
 13030  0055EA                     u2880:
 13031  0055EA  0012               	return		;funcret
 13032  0055EC                     __end_of_fputs:
 13033                           	callstack 0
 13034                           
 13035 ;; *************** function _fputc *****************
 13036 ;; Defined at:
 13037 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  c               2    0[COMRAM] int 
 13040 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13041 ;;		 -> sprintf@f(11), 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;		None
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  2    0[COMRAM] int 
 13046 ;; Registers used:
 13047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13055 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13056 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13057 ;;Total ram usage:        9 bytes
 13058 ;; Hardware stack levels used: 1
 13059 ;; Hardware stack levels required when called: 2
 13060 ;; This function calls:
 13061 ;;		_putch
 13062 ;; This function is called by:
 13063 ;;		_pad
 13064 ;;		_vfpfcnvrt
 13065 ;;		_fputs
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           	psect	text65
 13070  004C9A                     __ptext65:
 13071                           	callstack 0
 13072  004C9A                     _fputc:
 13073                           	callstack 23
 13074  004C9A  5003               	movf	fputc@fp^0,w,c
 13075  004C9C  1004               	iorwf	(fputc@fp+1)^0,w,c
 13076  004C9E  B4D8               	btfsc	status,2,c
 13077  004CA0  EF54  F026         	goto	u2841
 13078  004CA4  EF56  F026         	goto	u2840
 13079  004CA8                     u2841:
 13080  004CA8  EF5F  F026         	goto	l3597
 13081  004CAC                     u2840:
 13082  004CAC  5003               	movf	fputc@fp^0,w,c
 13083  004CAE  1004               	iorwf	(fputc@fp+1)^0,w,c
 13084  004CB0  A4D8               	btfss	status,2,c
 13085  004CB2  EF5D  F026         	goto	u2851
 13086  004CB6  EF5F  F026         	goto	u2850
 13087  004CBA                     u2851:
 13088  004CBA  EF64  F026         	goto	l3599
 13089  004CBE                     u2850:
 13090  004CBE                     l3597:
 13091  004CBE  5001               	movf	fputc@c^0,w,c
 13092  004CC0  EC51  F02D         	call	_putch
 13093  004CC4  EFB1  F026         	goto	l1547
 13094  004CC8                     l3599:
 13095  004CC8  EE20 F009          	lfsr	2,9
 13096  004CCC  5003               	movf	fputc@fp^0,w,c
 13097  004CCE  26D9               	addwf	fsr2l,f,c
 13098  004CD0  5004               	movf	(fputc@fp+1)^0,w,c
 13099  004CD2  22DA               	addwfc	fsr2h,f,c
 13100  004CD4  50DE               	movf	postinc2,w,c
 13101  004CD6  10DE               	iorwf	postinc2,w,c
 13102  004CD8  B4D8               	btfsc	status,2,c
 13103  004CDA  EF71  F026         	goto	u2861
 13104  004CDE  EF73  F026         	goto	u2860
 13105  004CE2                     u2861:
 13106  004CE2  EF8E  F026         	goto	l3603
 13107  004CE6                     u2860:
 13108  004CE6  EE20 F009          	lfsr	2,9
 13109  004CEA  5003               	movf	fputc@fp^0,w,c
 13110  004CEC  26D9               	addwf	fsr2l,f,c
 13111  004CEE  5004               	movf	(fputc@fp+1)^0,w,c
 13112  004CF0  22DA               	addwfc	fsr2h,f,c
 13113  004CF2  EE10 F003          	lfsr	1,3
 13114  004CF6  5003               	movf	fputc@fp^0,w,c
 13115  004CF8  26E1               	addwf	fsr1l,f,c
 13116  004CFA  5004               	movf	(fputc@fp+1)^0,w,c
 13117  004CFC  22E2               	addwfc	fsr1h,f,c
 13118  004CFE  50DE               	movf	postinc2,w,c
 13119  004D00  5CE6               	subwf	postinc1,w,c
 13120  004D02  50E6               	movf	postinc1,w,c
 13121  004D04  0A80               	xorlw	128
 13122  004D06  6E09               	movwf	(??_fputc+4)^0,c
 13123  004D08  50DE               	movf	postinc2,w,c
 13124  004D0A  0A80               	xorlw	128
 13125  004D0C  5809               	subwfb	(??_fputc+4)^0,w,c
 13126  004D0E  B0D8               	btfsc	status,0,c
 13127  004D10  EF8C  F026         	goto	u2871
 13128  004D14  EF8E  F026         	goto	u2870
 13129  004D18                     u2871:
 13130  004D18  EFB1  F026         	goto	l1547
 13131  004D1C                     u2870:
 13132  004D1C                     l3603:
 13133  004D1C  EE20 F003          	lfsr	2,3
 13134  004D20  5003               	movf	fputc@fp^0,w,c
 13135  004D22  26D9               	addwf	fsr2l,f,c
 13136  004D24  5004               	movf	(fputc@fp+1)^0,w,c
 13137  004D26  22DA               	addwfc	fsr2h,f,c
 13138  004D28  CFDE F005          	movff	postinc2,??_fputc
 13139  004D2C  CFDD F006          	movff	postdec2,??_fputc+1
 13140  004D30  C003  FFD9         	movff	fputc@fp,fsr2l
 13141  004D34  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13142  004D38  CFDE F007          	movff	postinc2,??_fputc+2
 13143  004D3C  CFDD F008          	movff	postdec2,??_fputc+3
 13144  004D40  5005               	movf	??_fputc^0,w,c
 13145  004D42  2407               	addwf	(??_fputc+2)^0,w,c
 13146  004D44  6ED9               	movwf	fsr2l,c
 13147  004D46  5006               	movf	(??_fputc+1)^0,w,c
 13148  004D48  2008               	addwfc	(??_fputc+3)^0,w,c
 13149  004D4A  6EDA               	movwf	fsr2h,c
 13150  004D4C  C001  FFDF         	movff	fputc@c,indf2
 13151  004D50  EE20 F003          	lfsr	2,3
 13152  004D54  5003               	movf	fputc@fp^0,w,c
 13153  004D56  26D9               	addwf	fsr2l,f,c
 13154  004D58  5004               	movf	(fputc@fp+1)^0,w,c
 13155  004D5A  22DA               	addwfc	fsr2h,f,c
 13156  004D5C  2ADE               	incf	postinc2,f,c
 13157  004D5E  0E00               	movlw	0
 13158  004D60  22DD               	addwfc	postdec2,f,c
 13159  004D62                     l1547:
 13160  004D62  0012               	return		;funcret
 13161  004D64                     __end_of_fputc:
 13162                           	callstack 0
 13163                           
 13164 ;; *************** function _putch *****************
 13165 ;; Defined at:
 13166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  c               1    wreg     unsigned char 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  c               1    0[COMRAM] unsigned char 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  1    wreg      void 
 13173 ;; Registers used:
 13174 ;;		wreg
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13184 ;;Total ram usage:        0 bytes
 13185 ;; Hardware stack levels used: 1
 13186 ;; Hardware stack levels required when called: 1
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_fputc
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text66
 13195  005AA2                     __ptext66:
 13196                           	callstack 0
 13197  005AA2                     _putch:
 13198                           	callstack 23
 13199  005AA2  0012               	return		;funcret
 13200  005AA4                     __end_of_putch:
 13201                           	callstack 0
 13202                           
 13203 ;; *************** function _abs *****************
 13204 ;; Defined at:
 13205 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  a               2   18[COMRAM] int 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  2   18[COMRAM] int 
 13212 ;; Registers used:
 13213 ;;		wreg, status,2, status,0
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13223 ;;Total ram usage:        4 bytes
 13224 ;; Hardware stack levels used: 1
 13225 ;; Hardware stack levels required when called: 1
 13226 ;; This function calls:
 13227 ;;		Nothing
 13228 ;; This function is called by:
 13229 ;;		_dtoa
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           	psect	text67
 13234  0056F4                     __ptext67:
 13235                           	callstack 0
 13236  0056F4                     _abs:
 13237                           	callstack 23
 13238  0056F4  BE14               	btfsc	(abs@a+1)^0,7,c
 13239  0056F6  EF87  F02B         	goto	u3070
 13240  0056FA  5014               	movf	(abs@a+1)^0,w,c
 13241  0056FC  E106               	bnz	u3071
 13242  0056FE  0413               	decf	abs@a^0,w,c
 13243  005700  B0D8               	btfsc	status,0,c
 13244  005702  EF85  F02B         	goto	u3071
 13245  005706  EF87  F02B         	goto	u3070
 13246  00570A                     u3071:
 13247  00570A  EF95  F02B         	goto	l1532
 13248  00570E                     u3070:
 13249  00570E  C013  F015         	movff	abs@a,??_abs
 13250  005712  C014  F016         	movff	abs@a+1,??_abs+1
 13251  005716  1E15               	comf	??_abs^0,f,c
 13252  005718  1E16               	comf	(??_abs+1)^0,f,c
 13253  00571A  4A15               	infsnz	??_abs^0,f,c
 13254  00571C  2A16               	incf	(??_abs+1)^0,f,c
 13255  00571E  C015  F013         	movff	??_abs,?_abs
 13256  005722  C016  F014         	movff	??_abs+1,?_abs+1
 13257  005726  EF99  F02B         	goto	l1535
 13258  00572A                     l1532:
 13259  00572A  C013  F013         	movff	abs@a,?_abs
 13260  00572E  C014  F014         	movff	abs@a+1,?_abs+1
 13261  005732                     l1535:
 13262  005732  0012               	return		;funcret
 13263  005734                     __end_of_abs:
 13264                           	callstack 0
 13265                           
 13266 ;; *************** function ___aomod *****************
 13267 ;; Defined at:
 13268 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  dividend        8    0[COMRAM] long long 
 13271 ;;  divisor         8    8[COMRAM] long long 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;  sign            1   17[COMRAM] unsigned char 
 13274 ;;  counter         1   16[COMRAM] unsigned char 
 13275 ;; Return value:  Size  Location     Type
 13276 ;;                  8    0[COMRAM] long long 
 13277 ;; Registers used:
 13278 ;;		wreg, status,2, status,0
 13279 ;; Tracked objects:
 13280 ;;		On entry : 0/0
 13281 ;;		On exit  : 0/0
 13282 ;;		Unchanged: 0/0
 13283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13284 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13287 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13288 ;;Total ram usage:       18 bytes
 13289 ;; Hardware stack levels used: 1
 13290 ;; Hardware stack levels required when called: 1
 13291 ;; This function calls:
 13292 ;;		Nothing
 13293 ;; This function is called by:
 13294 ;;		_dtoa
 13295 ;; This function uses a non-reentrant model
 13296 ;;
 13297                           
 13298                           	psect	text68
 13299  004730                     __ptext68:
 13300                           	callstack 0
 13301  004730                     ___aomod:
 13302                           	callstack 23
 13303  004730  0E00               	movlw	0
 13304  004732  6E12               	movwf	___aomod@sign^0,c
 13305  004734  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13306  004736  EFA1  F023         	goto	u2970
 13307  00473A  EF9F  F023         	goto	u2971
 13308  00473E                     u2971:
 13309  00473E  EFB3  F023         	goto	l3677
 13310  004742                     u2970:
 13311  004742  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13312  004744  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13313  004746  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13314  004748  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13315  00474A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13316  00474C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13317  00474E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13318  004750  6C01               	negf	___aomod@dividend^0,c
 13319  004752  0E00               	movlw	0
 13320  004754  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13321  004756  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13322  004758  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13323  00475A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13324  00475C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13325  00475E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13326  004760  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13327  004762  0E01               	movlw	1
 13328  004764  6E12               	movwf	___aomod@sign^0,c
 13329  004766                     l3677:
 13330  004766  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13331  004768  EFBA  F023         	goto	u2980
 13332  00476C  EFB8  F023         	goto	u2981
 13333  004770                     u2981:
 13334  004770  EFCA  F023         	goto	l3681
 13335  004774                     u2980:
 13336  004774  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13337  004776  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13338  004778  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13339  00477A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13340  00477C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13341  00477E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13342  004780  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13343  004782  6C09               	negf	___aomod@divisor^0,c
 13344  004784  0E00               	movlw	0
 13345  004786  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13346  004788  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13347  00478A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13348  00478C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13349  00478E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13350  004790  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13351  004792  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13352  004794                     l3681:
 13353  004794  5009               	movf	___aomod@divisor^0,w,c
 13354  004796  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13355  004798  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13356  00479A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13357  00479C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13358  00479E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13359  0047A0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13360  0047A2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13361  0047A4  B4D8               	btfsc	status,2,c
 13362  0047A6  EFD7  F023         	goto	u2991
 13363  0047AA  EFD9  F023         	goto	u2990
 13364  0047AE                     u2991:
 13365  0047AE  EF21  F024         	goto	l3697
 13366  0047B2                     u2990:
 13367  0047B2  0E01               	movlw	1
 13368  0047B4  6E11               	movwf	___aomod@counter^0,c
 13369  0047B6  EFE7  F023         	goto	l3687
 13370  0047BA                     l3685:
 13371  0047BA  90D8               	bcf	status,0,c
 13372  0047BC  3609               	rlcf	___aomod@divisor^0,f,c
 13373  0047BE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13374  0047C0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13375  0047C2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13376  0047C4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13377  0047C6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13378  0047C8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13379  0047CA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13380  0047CC  2A11               	incf	___aomod@counter^0,f,c
 13381  0047CE                     l3687:
 13382  0047CE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13383  0047D0  EFEC  F023         	goto	u3001
 13384  0047D4  EFEE  F023         	goto	u3000
 13385  0047D8                     u3001:
 13386  0047D8  EFDD  F023         	goto	l3685
 13387  0047DC                     u3000:
 13388  0047DC                     l3689:
 13389  0047DC  5009               	movf	___aomod@divisor^0,w,c
 13390  0047DE  5C01               	subwf	___aomod@dividend^0,w,c
 13391  0047E0  500A               	movf	(___aomod@divisor+1)^0,w,c
 13392  0047E2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13393  0047E4  500B               	movf	(___aomod@divisor+2)^0,w,c
 13394  0047E6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13395  0047E8  500C               	movf	(___aomod@divisor+3)^0,w,c
 13396  0047EA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13397  0047EC  500D               	movf	(___aomod@divisor+4)^0,w,c
 13398  0047EE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13399  0047F0  500E               	movf	(___aomod@divisor+5)^0,w,c
 13400  0047F2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13401  0047F4  500F               	movf	(___aomod@divisor+6)^0,w,c
 13402  0047F6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13403  0047F8  5010               	movf	(___aomod@divisor+7)^0,w,c
 13404  0047FA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13405  0047FC  A0D8               	btfss	status,0,c
 13406  0047FE  EF03  F024         	goto	u3011
 13407  004802  EF05  F024         	goto	u3010
 13408  004806                     u3011:
 13409  004806  EF15  F024         	goto	l3693
 13410  00480A                     u3010:
 13411  00480A  5009               	movf	___aomod@divisor^0,w,c
 13412  00480C  5E01               	subwf	___aomod@dividend^0,f,c
 13413  00480E  500A               	movf	(___aomod@divisor+1)^0,w,c
 13414  004810  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13415  004812  500B               	movf	(___aomod@divisor+2)^0,w,c
 13416  004814  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13417  004816  500C               	movf	(___aomod@divisor+3)^0,w,c
 13418  004818  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13419  00481A  500D               	movf	(___aomod@divisor+4)^0,w,c
 13420  00481C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13421  00481E  500E               	movf	(___aomod@divisor+5)^0,w,c
 13422  004820  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13423  004822  500F               	movf	(___aomod@divisor+6)^0,w,c
 13424  004824  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13425  004826  5010               	movf	(___aomod@divisor+7)^0,w,c
 13426  004828  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13427  00482A                     l3693:
 13428  00482A  90D8               	bcf	status,0,c
 13429  00482C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13430  00482E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13431  004830  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13432  004832  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13433  004834  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13434  004836  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13435  004838  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13436  00483A  3209               	rrcf	___aomod@divisor^0,f,c
 13437  00483C  2E11               	decfsz	___aomod@counter^0,f,c
 13438  00483E  EFEE  F023         	goto	l3689
 13439  004842                     l3697:
 13440  004842  5012               	movf	___aomod@sign^0,w,c
 13441  004844  B4D8               	btfsc	status,2,c
 13442  004846  EF27  F024         	goto	u3021
 13443  00484A  EF29  F024         	goto	u3020
 13444  00484E                     u3021:
 13445  00484E  EF39  F024         	goto	l3701
 13446  004852                     u3020:
 13447  004852  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13448  004854  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13449  004856  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13450  004858  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13451  00485A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13452  00485C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13453  00485E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13454  004860  6C01               	negf	___aomod@dividend^0,c
 13455  004862  0E00               	movlw	0
 13456  004864  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13457  004866  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13458  004868  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13459  00486A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13460  00486C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13461  00486E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13462  004870  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13463  004872                     l3701:
 13464  004872  C001  F001         	movff	___aomod@dividend,?___aomod
 13465  004876  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13466  00487A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13467  00487E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13468  004882  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13469  004886  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13470  00488A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13471  00488E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13472  004892  0012               	return		;funcret
 13473  004894                     __end_of___aomod:
 13474                           	callstack 0
 13475                           
 13476 ;; *************** function ___aodiv *****************
 13477 ;; Defined at:
 13478 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  dividend        8    0[COMRAM] long long 
 13481 ;;  divisor         8    8[COMRAM] long long 
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  quotient        8   18[COMRAM] long long 
 13484 ;;  sign            1   17[COMRAM] unsigned char 
 13485 ;;  counter         1   16[COMRAM] unsigned char 
 13486 ;; Return value:  Size  Location     Type
 13487 ;;                  8    0[COMRAM] long long 
 13488 ;; Registers used:
 13489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13490 ;; Tracked objects:
 13491 ;;		On entry : 0/0
 13492 ;;		On exit  : 0/0
 13493 ;;		Unchanged: 0/0
 13494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13495 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13496 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13498 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;Total ram usage:       26 bytes
 13500 ;; Hardware stack levels used: 1
 13501 ;; Hardware stack levels required when called: 1
 13502 ;; This function calls:
 13503 ;;		Nothing
 13504 ;; This function is called by:
 13505 ;;		_dtoa
 13506 ;; This function uses a non-reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text69
 13510  004128                     __ptext69:
 13511                           	callstack 0
 13512  004128                     ___aodiv:
 13513                           	callstack 23
 13514  004128  0E00               	movlw	0
 13515  00412A  6E12               	movwf	___aodiv@sign^0,c
 13516  00412C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13517  00412E  EF9D  F020         	goto	u2900
 13518  004132  EF9B  F020         	goto	u2901
 13519  004136                     u2901:
 13520  004136  EFAF  F020         	goto	l3633
 13521  00413A                     u2900:
 13522  00413A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13523  00413C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13524  00413E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13525  004140  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13526  004142  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13527  004144  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13528  004146  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13529  004148  6C09               	negf	___aodiv@divisor^0,c
 13530  00414A  0E00               	movlw	0
 13531  00414C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13532  00414E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13533  004150  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13534  004152  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13535  004154  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13536  004156  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13537  004158  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13538  00415A  0E01               	movlw	1
 13539  00415C  6E12               	movwf	___aodiv@sign^0,c
 13540  00415E                     l3633:
 13541  00415E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13542  004160  EFB6  F020         	goto	u2910
 13543  004164  EFB4  F020         	goto	u2911
 13544  004168                     u2911:
 13545  004168  EFC8  F020         	goto	l3639
 13546  00416C                     u2910:
 13547  00416C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13548  00416E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13549  004170  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13550  004172  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13551  004174  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13552  004176  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13553  004178  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13554  00417A  6C01               	negf	___aodiv@dividend^0,c
 13555  00417C  0E00               	movlw	0
 13556  00417E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13557  004180  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13558  004182  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13559  004184  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13560  004186  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13561  004188  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13562  00418A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13563  00418C  0E01               	movlw	1
 13564  00418E  1A12               	xorwf	___aodiv@sign^0,f,c
 13565  004190                     l3639:
 13566  004190  EE20  F013         	lfsr	2,___aodiv@quotient
 13567  004194  0E07               	movlw	7
 13568  004196                     u2921:
 13569  004196  6ADE               	clrf	postinc2,c
 13570  004198  06E8               	decf	wreg,f,c
 13571  00419A  E2FD               	bc	u2921
 13572  00419C  5009               	movf	___aodiv@divisor^0,w,c
 13573  00419E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13574  0041A0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13575  0041A2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13576  0041A4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13577  0041A6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13578  0041A8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13579  0041AA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13580  0041AC  B4D8               	btfsc	status,2,c
 13581  0041AE  EFDB  F020         	goto	u2931
 13582  0041B2  EFDD  F020         	goto	u2930
 13583  0041B6                     u2931:
 13584  0041B6  EF2F  F021         	goto	l3661
 13585  0041BA                     u2930:
 13586  0041BA  0E01               	movlw	1
 13587  0041BC  6E11               	movwf	___aodiv@counter^0,c
 13588  0041BE  EFEB  F020         	goto	l3647
 13589  0041C2                     l3645:
 13590  0041C2  90D8               	bcf	status,0,c
 13591  0041C4  3609               	rlcf	___aodiv@divisor^0,f,c
 13592  0041C6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13593  0041C8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13594  0041CA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13595  0041CC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13596  0041CE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13597  0041D0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13598  0041D2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13599  0041D4  2A11               	incf	___aodiv@counter^0,f,c
 13600  0041D6                     l3647:
 13601  0041D6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13602  0041D8  EFF0  F020         	goto	u2941
 13603  0041DC  EFF2  F020         	goto	u2940
 13604  0041E0                     u2941:
 13605  0041E0  EFE1  F020         	goto	l3645
 13606  0041E4                     u2940:
 13607  0041E4                     l3649:
 13608  0041E4  90D8               	bcf	status,0,c
 13609  0041E6  3613               	rlcf	___aodiv@quotient^0,f,c
 13610  0041E8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13611  0041EA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13612  0041EC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13613  0041EE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13614  0041F0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13615  0041F2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13616  0041F4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13617  0041F6  5009               	movf	___aodiv@divisor^0,w,c
 13618  0041F8  5C01               	subwf	___aodiv@dividend^0,w,c
 13619  0041FA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13620  0041FC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13621  0041FE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13622  004200  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13623  004202  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13624  004204  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13625  004206  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13626  004208  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13627  00420A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13628  00420C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13629  00420E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13630  004210  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13631  004212  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13632  004214  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13633  004216  A0D8               	btfss	status,0,c
 13634  004218  EF10  F021         	goto	u2951
 13635  00421C  EF12  F021         	goto	u2950
 13636  004220                     u2951:
 13637  004220  EF23  F021         	goto	l3657
 13638  004224                     u2950:
 13639  004224  5009               	movf	___aodiv@divisor^0,w,c
 13640  004226  5E01               	subwf	___aodiv@dividend^0,f,c
 13641  004228  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13642  00422A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13643  00422C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13644  00422E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13645  004230  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13646  004232  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13647  004234  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13648  004236  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13649  004238  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13650  00423A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13651  00423C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13652  00423E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13653  004240  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13654  004242  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13655  004244  8013               	bsf	___aodiv@quotient^0,0,c
 13656  004246                     l3657:
 13657  004246  90D8               	bcf	status,0,c
 13658  004248  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13659  00424A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13660  00424C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13661  00424E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13662  004250  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13663  004252  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13664  004254  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13665  004256  3209               	rrcf	___aodiv@divisor^0,f,c
 13666  004258  2E11               	decfsz	___aodiv@counter^0,f,c
 13667  00425A  EFF2  F020         	goto	l3649
 13668  00425E                     l3661:
 13669  00425E  5012               	movf	___aodiv@sign^0,w,c
 13670  004260  B4D8               	btfsc	status,2,c
 13671  004262  EF35  F021         	goto	u2961
 13672  004266  EF37  F021         	goto	u2960
 13673  00426A                     u2961:
 13674  00426A  EF47  F021         	goto	l3665
 13675  00426E                     u2960:
 13676  00426E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13677  004270  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13678  004272  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13679  004274  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13680  004276  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13681  004278  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13682  00427A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13683  00427C  6C13               	negf	___aodiv@quotient^0,c
 13684  00427E  0E00               	movlw	0
 13685  004280  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13686  004282  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13687  004284  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13688  004286  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13689  004288  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13690  00428A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13691  00428C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13692  00428E                     l3665:
 13693  00428E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13694  004292  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13695  004296  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13696  00429A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13697  00429E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13698  0042A2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13699  0042A6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13700  0042AA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13701  0042AE  0012               	return		;funcret
 13702  0042B0                     __end_of___aodiv:
 13703                           	callstack 0
 13704                           
 13705 ;; *************** function _sendStringSerial4 *****************
 13706 ;; Defined at:
 13707 ;;		line 36 in file "serial.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;  string          2    1[COMRAM] PTR unsigned char 
 13710 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;		None
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13726 ;;Total ram usage:        2 bytes
 13727 ;; Hardware stack levels used: 1
 13728 ;; Hardware stack levels required when called: 2
 13729 ;; This function calls:
 13730 ;;		_sendCharSerial4
 13731 ;; This function is called by:
 13732 ;;		_color_display
 13733 ;;		_color_predict
 13734 ;;		_check_color_reading
 13735 ;; This function uses a non-reentrant model
 13736 ;;
 13737                           
 13738                           	psect	text70
 13739  00584A                     __ptext70:
 13740                           	callstack 0
 13741  00584A                     _sendStringSerial4:
 13742                           	callstack 26
 13743  00584A                     
 13744                           ;serial.c: 38:     while(*string != 0){
 13745  00584A  EF30  F02C         	goto	l4377
 13746  00584E                     l4373:
 13747                           
 13748                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13749  00584E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13750  005852  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13751  005856  50DF               	movf	indf2,w,c
 13752  005858  EC1E  F02D         	call	_sendCharSerial4
 13753  00585C  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13754  00585E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13755  005860                     l4377:
 13756                           
 13757                           ;serial.c: 38:     while(*string != 0){
 13758  005860  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13759  005864  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13760  005868  50DF               	movf	indf2,w,c
 13761  00586A  A4D8               	btfss	status,2,c
 13762  00586C  EF3A  F02C         	goto	u4111
 13763  005870  EF3C  F02C         	goto	u4110
 13764  005874                     u4111:
 13765  005874  EF27  F02C         	goto	l4373
 13766  005878                     u4110:
 13767  005878  0012               	return		;funcret
 13768  00587A                     __end_of_sendStringSerial4:
 13769                           	callstack 0
 13770                           
 13771 ;; *************** function _sendCharSerial4 *****************
 13772 ;; Defined at:
 13773 ;;		line 29 in file "serial.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  charToSend      1    wreg     unsigned char 
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;  charToSend      1    0[COMRAM] unsigned char 
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      void 
 13780 ;; Registers used:
 13781 ;;		wreg
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13791 ;;Total ram usage:        1 bytes
 13792 ;; Hardware stack levels used: 1
 13793 ;; Hardware stack levels required when called: 1
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_sendStringSerial4
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text71
 13802  005A3C                     __ptext71:
 13803                           	callstack 0
 13804  005A3C                     _sendCharSerial4:
 13805                           	callstack 26
 13806                           
 13807                           ;incstack = 0
 13808                           ;sendCharSerial4@charToSend stored from wreg
 13809  005A3C  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13810  005A3E                     l421:
 13811  005A3E  010E               	movlb	14	; () banked
 13812  005A40  A537               	btfss	55,2,b	;volatile
 13813  005A42  EF25  F02D         	goto	u3841
 13814  005A46  EF27  F02D         	goto	u3840
 13815  005A4A                     u3841:
 13816  005A4A  EF1F  F02D         	goto	l421
 13817  005A4E                     u3840:
 13818  005A4E                     
 13819                           ; BSR set to: 14
 13820                           ;serial.c: 31:     TX4REG = charToSend;
 13821  005A4E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 13822  005A52                     
 13823                           ; BSR set to: 14
 13824  005A52  0012               	return		;funcret
 13825  005A54                     __end_of_sendCharSerial4:
 13826                           	callstack 0
 13827                           
 13828 ;; *************** function _Timer0_init *****************
 13829 ;; Defined at:
 13830 ;;		line 7 in file "timers.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;		None
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, status,2
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13848 ;;Total ram usage:        0 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 1
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_main
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text72
 13859  005A1E                     __ptext72:
 13860                           	callstack 0
 13861  005A1E                     _Timer0_init:
 13862                           	callstack 29
 13863  005A1E                     
 13864                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13865  005A1E  50D6               	movf	214,w,c	;volatile
 13866  005A20  0B1F               	andlw	-225
 13867  005A22  0940               	iorlw	64
 13868  005A24  6ED6               	movwf	214,c	;volatile
 13869  005A26                     
 13870                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13871  005A26  88D6               	bsf	214,4,c	;volatile
 13872                           
 13873                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13874  005A28  50D6               	movf	214,w,c	;volatile
 13875  005A2A  0BF0               	andlw	-16
 13876  005A2C  0908               	iorlw	8
 13877  005A2E  6ED6               	movwf	214,c	;volatile
 13878  005A30                     
 13879                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13880  005A30  88D5               	bsf	213,4,c	;volatile
 13881                           
 13882                           ;timers.c: 16:     TMR0H=0b00001011;
 13883  005A32  0E0B               	movlw	11
 13884  005A34  6ED4               	movwf	212,c	;volatile
 13885                           
 13886                           ;timers.c: 17:     TMR0L=0b11011011;
 13887  005A36  0EDB               	movlw	219
 13888  005A38  6ED3               	movwf	211,c	;volatile
 13889  005A3A  0012               	return		;funcret
 13890  005A3C                     __end_of_Timer0_init:
 13891                           	callstack 0
 13892                           
 13893 ;; *************** function _Interrupts_init *****************
 13894 ;; Defined at:
 13895 ;;		line 9 in file "interrupts.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;		None
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;		None
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		None
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13913 ;;Total ram usage:        0 bytes
 13914 ;; Hardware stack levels used: 1
 13915 ;; Hardware stack levels required when called: 1
 13916 ;; This function calls:
 13917 ;;		Nothing
 13918 ;; This function is called by:
 13919 ;;		_main
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text73
 13924  005A76                     __ptext73:
 13925                           	callstack 0
 13926  005A76                     _Interrupts_init:
 13927                           	callstack 29
 13928  005A76  8EF2               	bsf	242,7,c	;volatile
 13929                           
 13930                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13931  005A78  8AF2               	bsf	242,5,c	;volatile
 13932                           
 13933                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13934  005A7A  8CF2               	bsf	242,6,c	;volatile
 13935                           
 13936                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13937  005A7C  010E               	movlb	14	; () banked
 13938  005A7E  8B29               	bsf	41,5,b	;volatile
 13939  005A80                     
 13940                           ; BSR set to: 14
 13941  005A80  0012               	return		;funcret
 13942  005A82                     __end_of_Interrupts_init:
 13943                           	callstack 0
 13944                           
 13945 ;; *************** function _HighISR *****************
 13946 ;; Defined at:
 13947 ;;		line 21 in file "interrupts.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;		None
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;		None
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1    wreg      void 
 13954 ;; Registers used:
 13955 ;;		status,2, status,0
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13965 ;;Total ram usage:        0 bytes
 13966 ;; Hardware stack levels used: 1
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		Interrupt level 2
 13971 ;; This function uses a non-reentrant model
 13972 ;;
 13973                           
 13974                           	psect	intcode
 13975  000008                     __pintcode:
 13976                           	callstack 0
 13977  000008                     _HighISR:
 13978                           	callstack 19
 13979                           
 13980                           ; BSR set to: 14
 13981                           ;incstack = 0
 13982  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13983  00000A                     
 13984                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 13985  00000A  010E               	movlb	14	; () banked
 13986  00000C  AB33               	btfss	51,5,b	;volatile
 13987  00000E  EF0B  F000         	goto	i2u559_41
 13988  000012  EF0D  F000         	goto	i2u559_40
 13989  000016                     i2u559_41:
 13990  000016  EF12  F000         	goto	i2l675
 13991  00001A                     i2u559_40:
 13992  00001A                     
 13993                           ; BSR set to: 14
 13994                           ;interrupts.c: 24:         second ++;
 13995  00001A  0101               	movlb	1	; () banked
 13996  00001C  4B5C               	infsnz	_second& (0+255),f,b
 13997  00001E  2B5D               	incf	(_second+1)& (0+255),f,b
 13998  000020                     
 13999                           ; BSR set to: 1
 14000                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14001  000020  010E               	movlb	14	; () banked
 14002  000022  9B33               	bcf	51,5,b	;volatile
 14003  000024                     i2l675:
 14004                           
 14005                           ; BSR set to: 14
 14006  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14007  000026  0011               	retfie		f
 14008  000028                     __end_of_HighISR:
 14009                           	callstack 0
 14010                           
 14011                           	psect	rparam
 14012  0000                     
 14013                           	psect	temp
 14014  00005F                     btemp:
 14015                           	callstack 0
 14016  00005F                     	ds	1
 14017  0000                     int$flags	set	btemp
 14018  0000                     wtemp8	set	btemp+1
 14019  0000                     ttemp5	set	btemp+1
 14020  0000                     ttemp6	set	btemp+4
 14021  0000                     ttemp7	set	btemp+8
 14022                           
 14023                           	psect	idloc
 14024                           
 14025                           ;Config register IDLOC0 @ 0x200000
 14026                           ;	unspecified, using default values
 14027  200000                     	org	2097152
 14028  200000  0FFF               	dw	4095
 14029                           
 14030                           ;Config register IDLOC1 @ 0x200002
 14031                           ;	unspecified, using default values
 14032  200002                     	org	2097154
 14033  200002  0FFF               	dw	4095
 14034                           
 14035                           ;Config register IDLOC2 @ 0x200004
 14036                           ;	unspecified, using default values
 14037  200004                     	org	2097156
 14038  200004  0FFF               	dw	4095
 14039                           
 14040                           ;Config register IDLOC3 @ 0x200006
 14041                           ;	unspecified, using default values
 14042  200006                     	org	2097158
 14043  200006  0FFF               	dw	4095
 14044                           
 14045                           ;Config register IDLOC4 @ 0x200008
 14046                           ;	unspecified, using default values
 14047  200008                     	org	2097160
 14048  200008  0FFF               	dw	4095
 14049                           
 14050                           ;Config register IDLOC5 @ 0x20000A
 14051                           ;	unspecified, using default values
 14052  20000A                     	org	2097162
 14053  20000A  0FFF               	dw	4095
 14054                           
 14055                           ;Config register IDLOC6 @ 0x20000C
 14056                           ;	unspecified, using default values
 14057  20000C                     	org	2097164
 14058  20000C  0FFF               	dw	4095
 14059                           
 14060                           ;Config register IDLOC7 @ 0x20000E
 14061                           ;	unspecified, using default values
 14062  20000E                     	org	2097166
 14063  20000E  0FFF               	dw	4095
 14064                           
 14065                           	psect	config
 14066                           
 14067                           ;Config register CONFIG1L @ 0x300000
 14068                           ;	External Oscillator mode Selection bits
 14069                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14070                           ;	Power-up default value for COSC bits
 14071                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14072  300000                     	org	3145728
 14073  300000  AA                 	db	170
 14074                           
 14075                           ;Config register CONFIG1H @ 0x300001
 14076                           ;	unspecified, using default values
 14077                           ;	Clock Out Enable bit
 14078                           ;	CLKOUTEN = 0x1, unprogrammed default
 14079                           ;	Clock Switch Enable bit
 14080                           ;	CSWEN = 0x1, unprogrammed default
 14081                           ;	Fail-Safe Clock Monitor Enable bit
 14082                           ;	FCMEN = 0x1, unprogrammed default
 14083  300001                     	org	3145729
 14084  300001  FF                 	db	255
 14085                           
 14086                           ;Config register CONFIG2L @ 0x300002
 14087                           ;	unspecified, using default values
 14088                           ;	Master Clear Enable bit
 14089                           ;	MCLRE = 0x1, unprogrammed default
 14090                           ;	Power-up Timer Enable bit
 14091                           ;	PWRTE = 0x1, unprogrammed default
 14092                           ;	Low-power BOR enable bit
 14093                           ;	LPBOREN = 0x1, unprogrammed default
 14094                           ;	Brown-out Reset Enable bits
 14095                           ;	BOREN = 0x3, unprogrammed default
 14096  300002                     	org	3145730
 14097  300002  FF                 	db	255
 14098                           
 14099                           ;Config register CONFIG2H @ 0x300003
 14100                           ;	unspecified, using default values
 14101                           ;	Brown Out Reset Voltage selection bits
 14102                           ;	BORV = 0x3, unprogrammed default
 14103                           ;	ZCD Disable bit
 14104                           ;	ZCD = 0x1, unprogrammed default
 14105                           ;	PPSLOCK bit One-Way Set Enable bit
 14106                           ;	PPS1WAY = 0x1, unprogrammed default
 14107                           ;	Stack Full/Underflow Reset Enable bit
 14108                           ;	STVREN = 0x1, unprogrammed default
 14109                           ;	Debugger Enable bit
 14110                           ;	DEBUG = 0x1, unprogrammed default
 14111                           ;	Extended Instruction Set Enable bit
 14112                           ;	XINST = 0x1, unprogrammed default
 14113  300003                     	org	3145731
 14114  300003  FF                 	db	255
 14115                           
 14116                           ;Config register CONFIG3L @ 0x300004
 14117                           ;	WDT Period Select bits
 14118                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14119                           ;	WDT operating mode
 14120                           ;	WDTE = OFF, WDT Disabled
 14121  300004                     	org	3145732
 14122  300004  9F                 	db	159
 14123                           
 14124                           ;Config register CONFIG3H @ 0x300005
 14125                           ;	unspecified, using default values
 14126                           ;	WDT Window Select bits
 14127                           ;	WDTCWS = 0x7, unprogrammed default
 14128                           ;	WDT input clock selector
 14129                           ;	WDTCCS = 0x7, unprogrammed default
 14130  300005                     	org	3145733
 14131  300005  FF                 	db	255
 14132                           
 14133                           ;Config register CONFIG4L @ 0x300006
 14134                           ;	unspecified, using default values
 14135                           ;	Write Protection Block 0
 14136                           ;	WRT0 = 0x1, unprogrammed default
 14137                           ;	Write Protection Block 1
 14138                           ;	WRT1 = 0x1, unprogrammed default
 14139                           ;	Write Protection Block 2
 14140                           ;	WRT2 = 0x1, unprogrammed default
 14141                           ;	Write Protection Block 3
 14142                           ;	WRT3 = 0x1, unprogrammed default
 14143                           ;	Write Protection Block 3
 14144                           ;	WRT4 = 0x1, unprogrammed default
 14145                           ;	Write Protection Block 3
 14146                           ;	WRT5 = 0x1, unprogrammed default
 14147                           ;	Write Protection Block 3
 14148                           ;	WRT6 = 0x1, unprogrammed default
 14149                           ;	Write Protection Block 3
 14150                           ;	WRT7 = 0x1, unprogrammed default
 14151  300006                     	org	3145734
 14152  300006  FF                 	db	255
 14153                           
 14154                           ;Config register CONFIG4H @ 0x300007
 14155                           ;	unspecified, using default values
 14156                           ;	Configuration Register Write Protection bit
 14157                           ;	WRTC = 0x1, unprogrammed default
 14158                           ;	Boot Block Write Protection bit
 14159                           ;	WRTB = 0x1, unprogrammed default
 14160                           ;	Data EEPROM Write Protection bit
 14161                           ;	WRTD = 0x1, unprogrammed default
 14162                           ;	Scanner Enable bit
 14163                           ;	SCANE = 0x1, unprogrammed default
 14164                           ;	Low Voltage Programming Enable bit
 14165                           ;	LVP = 0x1, unprogrammed default
 14166  300007                     	org	3145735
 14167  300007  FF                 	db	255
 14168                           
 14169                           ;Config register CONFIG5L @ 0x300008
 14170                           ;	unspecified, using default values
 14171                           ;	UserNVM Program Memory Code Protection bit
 14172                           ;	CP = 0x1, unprogrammed default
 14173                           ;	DataNVM Memory Code Protection bit
 14174                           ;	CPD = 0x1, unprogrammed default
 14175  300008                     	org	3145736
 14176  300008  FF                 	db	255
 14177                           
 14178                           ;Config register CONFIG5H @ 0x300009
 14179                           ;	unspecified, using default values
 14180  300009                     	org	3145737
 14181  300009  FF                 	db	255
 14182                           
 14183                           ;Config register CONFIG6L @ 0x30000A
 14184                           ;	unspecified, using default values
 14185                           ;	Table Read Protection Block 0
 14186                           ;	EBTR0 = 0x1, unprogrammed default
 14187                           ;	Table Read Protection Block 1
 14188                           ;	EBTR1 = 0x1, unprogrammed default
 14189                           ;	Table Read Protection Block 2
 14190                           ;	EBTR2 = 0x1, unprogrammed default
 14191                           ;	Table Read Protection Block 3
 14192                           ;	EBTR3 = 0x1, unprogrammed default
 14193                           ;	Table Read Protection Block 4
 14194                           ;	EBTR4 = 0x1, unprogrammed default
 14195                           ;	Table Read Protection Block 5
 14196                           ;	EBTR5 = 0x1, unprogrammed default
 14197                           ;	Table Read Protection Block 6
 14198                           ;	EBTR6 = 0x1, unprogrammed default
 14199                           ;	Table Read Protection Block 7
 14200                           ;	EBTR7 = 0x1, unprogrammed default
 14201  30000A                     	org	3145738
 14202  30000A  FF                 	db	255
 14203                           
 14204                           ;Config register CONFIG6H @ 0x30000B
 14205                           ;	unspecified, using default values
 14206                           ;	Boot Block Table Read Protection bit
 14207                           ;	EBTRB = 0x1, unprogrammed default
 14208  30000B                     	org	3145739
 14209  30000B  FF                 	db	255
 14210                           tosu	equ	0xFFF
 14211                           tosh	equ	0xFFE
 14212                           tosl	equ	0xFFD
 14213                           stkptr	equ	0xFFC
 14214                           pclatu	equ	0xFFB
 14215                           pclath	equ	0xFFA
 14216                           pcl	equ	0xFF9
 14217                           tblptru	equ	0xFF8
 14218                           tblptrh	equ	0xFF7
 14219                           tblptrl	equ	0xFF6
 14220                           tablat	equ	0xFF5
 14221                           prodh	equ	0xFF4
 14222                           prodl	equ	0xFF3
 14223                           indf0	equ	0xFEF
 14224                           postinc0	equ	0xFEE
 14225                           postdec0	equ	0xFED
 14226                           preinc0	equ	0xFEC
 14227                           plusw0	equ	0xFEB
 14228                           fsr0h	equ	0xFEA
 14229                           fsr0l	equ	0xFE9
 14230                           wreg	equ	0xFE8
 14231                           indf1	equ	0xFE7
 14232                           postinc1	equ	0xFE6
 14233                           postdec1	equ	0xFE5
 14234                           preinc1	equ	0xFE4
 14235                           plusw1	equ	0xFE3
 14236                           fsr1h	equ	0xFE2
 14237                           fsr1l	equ	0xFE1
 14238                           bsr	equ	0xFE0
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           preinc2	equ	0xFDC
 14243                           plusw2	equ	0xFDB
 14244                           fsr2h	equ	0xFDA
 14245                           fsr2l	equ	0xFD9
 14246                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    151     160
    BANK1           256     67     197
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2795$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2795$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_action
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0  300723
                                            149 BANK0      2     2      0
                                              0 BANK1     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   28552
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  102533
                                            134 BANK0     15     7      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   20203
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   28266
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   16288
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7573
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19879
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13552
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11933
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3636
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2214
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3139
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   84351
                                             93 COMRAM     1     1      0
                                            128 BANK0      4     0      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11325
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   43044
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    8419
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    8875
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11021
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6442
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3883
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43      C5       7       77.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FF      57        0.0%
DATA                 0      0     1FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Mar 13 17:10:07 2022

                ?_short_reverse 0026                  _color_read_Red 5422                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 54C2  
                 _color_predict 587A                              l71 5A68                              l82 368E  
                            l74 367C                              l91 5470                              l85 5848  
                            l94 5510                              l88 59FE                              l97 54C0  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 5512  
              _color_read_Green 5472               ??_Interrupts_init 0001                             l100 5560  
                           l103 53CE                             l112 59BE                             l106 595E  
                           l115 599E                             l212 58F8                             l132 52AE  
                           l221 5A94                             l109 593E                             l141 3898  
                           l206 58D0                             l118 597E                             l215 5A9E  
                           l224 5A74                             l321 4682                             l209 58D2  
                           l129 3C22                             l138 58A6                             l306 3A6C  
                           l314 512E                             l218 5A8A                             l227 562C  
                           l163 1B32                             l171 523E                             l332 472E  
                           l412 5A1C                             l421 5A3E                             l325 46CA  
                           l430 5878                             l350 45AE                             l166 576A  
                           l343 454A                             l175 49BA                             l167 576C  
                           l424 5A52                             l329 4704                             l178 4E26  
                           l347 4584                             l339 4502                             l179 4E28  
                           l372 56B0                             l358 51C2                             l542 4048  
                           l375 56F2                             l296 566E                             l369 5072  
                           l634 59DE                             l299 4C98                             l900 4892  
                           l628 33E2                             l669 5A80                             l773 591E  
                           l686 5A3A                             l887 42AE               verify_color@color 009A  
              ?_calibrate_white 000C        __end_of_distance_measure 4E2A                             _abs 56F4  
                           _pad 4E2A                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                 __end_of_LED_OFF 5960  
                  ___fltol@exp1 0065                            l1004 4FB2                            l1043 4BC6  
                          ?_abs 0013                            l1301 1D22                            l1070 4AC2  
                          l1038 4B80                            l1310 1FF2                            l1302 1D10  
                          l1047 57DE                            l1303 1CD6                            l1404 23DE  
                          l1318 1E3C                            l1431 3F8C                            l1327 1F0C  
                          l1343 55A6                            l1360 2988                            l1328 1EFA  
                          l1521 3DD8                            l1514 2E48                            l1442 3F24  
                          l1355 2B64                            l1435 3EC8                            l4011 1E9E  
                          l4003 1E76                            l1532 572A                            l1428 3E30  
                          l1357 29C4                            l4013 1EA6                            l4005 1E80  
                          l4021 1ECA                            l1366 2A0A                            l1535 5732  
                          l1527 5308                            l4111 5A70                            l1391 241C  
                          l4031 1F1C                            l4023 1ECE                            l4015 1EAA  
                          l4007 1E8E                            l1528 5310                            l1456 5420  
                          l1368 2A82                            l4105 5A96                            l4113 5A8C  
                          l1369 2A70                            l4121 55EE                            l4201 20EC  
                          l4041 1F82                            l4033 1F28                            l4025 1EDC  
                          l4017 1EBA                            l4009 1E90                            l1449 57A6  
                          l5001 0E14                            l1394 22AE                            l1547 4D62  
                          l1555 55EA                            l1483 4E70                            l4107 5A9A  
                          l4115 5A90                            l4131 562A                            l4123 55F2  
                          l4211 213C                            l4203 20F8                            l1387 20B8  
                          l4051 1FCA                            l4043 1F92                            l4035 1F36  
                          l4027 1EF2                            l4019 1EBC                            l5011 0F2A  
                          l5003 0E62                            l1396 2326                            l4141 509C  
                          l4109 5A6C                            l4125 55FA                            l4117 5A82  
                          l4301 4B02                            l1397 2314                            l4221 217E  
                          l4213 2148                            l4205 2102                            l4053 1FCC  
                          l4045 1FB2                            l4037 1F70                            l5101 1AA8  
                          l5021 10C2                            l5013 0FD2                            l5005 0E66  
                          l1558 5AA2                            l1486 4EB2                            l1494 2C06  
                          l1566 27CA                            l4071 3C6E                            l4063 3C24  
                          l4143 50B4                            l4151 50E6                            l4135 5074  
                          l4127 5602                            l4119 5A86                            l4311 4B6E  
                          l4303 4B30                            l4231 21E0                            l4223 218A  
                          l4215 2154                            l4207 2118                            l4055 1FD2  
                          l4047 1FB6                            l4039 1F72                            l5111 1B24  
                          l5103 1AAE                            l5031 1238                            l5023 10C6  
                          l5015 0FEE                            l5007 0E72                            l1488 4EEE  
                          l1496 2C0E                            l3601 4CE6                            l4081 3D36  
                          l4073 3C92                            l4065 3C48                            l4153 50FE  
                          l4145 50C0                            l4137 5078                            l5201 2F08  
                          l4129 5628                            l4313 4BBE                            l4305 4B40  
                          l4241 2276                            l4233 21EC                            l4225 219A  
                          l4217 2162                            l4209 2124                            l4161 1FF4  
                          l4321 57BE                            l4057 1FE0                            l4049 1FC4  
                          l5121 48B8                            l5113 1B2E                            l5105 1ADC  
                          l5041 132C                            l5033 1254                            l5025 10D2  
                          l5017 1096                            l5009 0F0E                            l3603 4D1C  
                          l3611 55C6                            l1579 5814                            l4083 3D5A  
                          l4091 3D88                            l4075 3CB6                            l4067 3C56  
                          l4331 52C6                            l4155 5116                            l4147 50CC  
                          l4139 5090                            l5211 2F52                            l5203 2F0A  
                          l4411 4A28                            l4403 49E8                            l4315 4BC4  
                          l4307 4B4E                            l4251 22CC                            l4243 2294  
                          l4235 2208                            l4227 21B4                            l4219 216E  
                          l4171 2030                            l4163 2000                            l4323 57CE  
                          l4059 1FE2                            l5131 4904                            l5123 48BC  
                          l5107 1B0A                            l5051 14BA                            l5043 1338  
                          l5035 12FC                            l5027 1174                            l5019 10AA  
                          l4157 5A3E                            l3701 4872                            l3613 55CA  
                          l3621 5808                            l4093 3D96                            l4085 3D68  
                          l4077 3CFE                            l4069 3C68                            l4333 52EC  
                          l4149 50D8                            l5221 2FBA                            l5213 2F56  
                          l5205 2F10                            l4501 357E                            l5301 4C1C  
                          l4421 4A58                            l4413 4A36                            l4405 4A12  
                          l4309 4B60                            l4261 2336                            l4253 22D0  
                          l4245 229E                            l4237 2232                            l4229 21C4  
                          l4181 2062                            l4173 2040                            l4165 200E  
                          l5141 49B2                            l5133 491C                            l5125 48D4  
                          l5117 4894                            l4341 54C2                            l5109 1B10  
                          l5061 165A                            l5053 1562                            l5045 13DA  
                          l5037 1310                            l5029 1190                            l4159 5A4E  
                          l3631 415A                            l3607 55A8                            l3615 57E0  
                          l3711 4E5C                            l4087 3D7C                            l4327 52B0  
                          l5231 302A                            l5223 2FD2                            l5215 2F7A  
                          l5207 2F16                            l4511 360E                            l4503 3590  
                          l5303 4C30                            l5311 5A16                            l4431 4A82  
                          l4423 4A62                            l4407 4A14                            l4271 2398  
                          l4263 2342                            l4255 22DE                            l4247 22AC  
                          l4239 2268                            l4191 20A2                            l4183 2070  
                          l4175 2046                            l4167 2010                            l4319 57A8  
                          l5135 4928                            l5127 48E0                            l5119 48AE  
                          l4343 5508                            l4335 5422                            l5071 1798  
                          l5063 1688                            l5055 157E                            l5047 13F6  
                          l5039 1328                            l5151 4D98                            l5321 5A1E  
                          l3641 419C                            l3633 415E                            l3625 4128  
                          l3609 55B4                            l3617 57EC                            l3721 4EC2  
                          l3713 4E68                            l3705 4E2A                            l3801 2C3C  
                          l4097 3DA2                            l4329 52B8                            l4361 53E2  
                          l4601 4700                            l5241 30BA                            l5233 304E  
                          l5225 2FD6                            l5217 2F92                            l5209 2F3A  
                          l4513 362C                            l4505 35AE                            l5401 321A  
                          l5313 5A18                            l5305 5A00                            l4353 5512  
                          l4433 4A92                            l4409 4A24                            l4281 2400  
                          l4273 23AC                            l4265 2350                            l4257 230C  
                          l4249 22BE                            l4193 20A8                            l4185 2072  
                          l4177 2056                            l4169 2020                            l4441 241E  
                          l5137 4940                            l5129 48F8                            l4521 5940  
                          l4337 5468                            l5073 1858                            l5081 188A  
                          l5065 1756                            l5057 1626                            l5049 149E  
                          l5161 4E22                            l5153 4DA4                            l5145 4D64  
                          l5323 5A26                            l4371 584A                            l3651 41F6  
                          l3643 41BA                            l3635 416C                            l3627 412C  
                          l3619 57F0                            l3723 4ED6                            l3715 4E7C  
                          l3707 4E3A                            l3811 2CDC                            l3803 2C44  
                          l4099 3DC6                            l4363 53EA                            l3731 58FA  
                          l4603 471A                            l4611 4478                            l5243 30BE  
                          l5235 307A                            l5227 2FFA                            l5219 2F96  
                          l5171 5670                            l4515 3644                            l4507 35C6  
                          l5411 328E                            l5403 3234                            l5251 5A54  
                          l5315 5A1A                            l5307 5A0A                            l4531 59A6  
                          l4355 5558                            l4435 4AA2                            l4419 4A4E  
                          l4283 2402                            l4275 23C6                            l4267 237A  
                          l4195 20C8                            l4187 2082                            l4179 205C  
                          l4291 5562                            l4451 24FA                            l4443 243E  
                          l5139 49A8                            l4523 5946                            l4347 5472  
                          l5091 1990                            l5083 1958                            l5075 1870  
                          l5067 1760                            l5059 1642                            l5155 4DA8  
                          l5147 4D7A                            l5331 42B4                            l5325 5A30  
                          l4373 584E                            l3653 4224                            l3645 41C2  
                          l3661 425E                            l3637 418C                            l3629 413A  
                          l3717 4E90                            l3709 4E4E                            l3821 2D98  
                          l3813 2CE2                            l3805 2C4E                            l4365 53F2  
                          l3741 4F02                            l3733 5916                            l4381 4FD8  
                          l4621 44C4                            l4613 4484                            l4605 4430  
                          l5245 30E2                            l5237 307E                            l5229 3026  
                          l5181 2E66                            l5173 5684                            l4517 367A  
                          l4509 35FC                            l5421 32EA                            l5413 3290  
                          l5405 3236                            l5261 583E                            l5253 5816  
                          l5309 5A0C                            l4701 2880                            l4437 4AB2  
                          l4429 4A76                            l4277 23E2                            l4285 2408  
                          l4269 237E                            l4197 20D8                            l4189 2092  
                          l3901 1C04                            l4293 5572                            l4461 2688  
                          l4453 2516                            l4445 2486                            l4533 5980  
                          l4525 5920                            l4349 54B8                            l4541 5240  
                          l5093 1A42                            l5085 1970                            l5077 1878  
                          l5069 176A                            l5157 4DEE                            l5149 4D7E  
                          l5341 430C                            l5333 42C6                            l5501 3FA2  
                          ?_pad 0011                            l5327 5A76                            l4375 585C  
                          l3663 426E                            l3655 4244                            l3647 41D6  
                          l3639 4190                            l3671 4734                            l3727 56F4  
                          l3719 4E94                            l3831 2DEA                            l3823 2DB2  
                          l3807 2C54                            l3815 2D46                            l4367 540E  
                          l4359 53D0                            l3751 4F28                            l3743 4F0A  
                          l4391 502E                            l4383 4FF0                            l4631 4518  
                          l4623 44D0                            l4607 4454                            l4615 4492  
                          l5239 30A2                            l5191 2EAE                            l5183 2E7A  
                          l5175 569C                            l5431 3356                            l5423 32FC  
                          l5415 32A2                            l5407 3248                            l5255 581A  
                          l4711 28C6                            l4703 2888                            l4287 240C  
                          l4279 23F2                            l3911 1C3C                            l3903 1C14  
                          l4471 27BA                            l4463 26BA                            l4447 249A  
                          l4535 5986                            l4527 5926                            l4543 52A2  
                          l4519 5372                            l5095 1A4A                            l5079 1880  
                          l5159 4E0A                            l5351 434E                            l5343 431E  
                          l5335 42D8                            l5271 5236                            l5263 51C8  
                          l5511 3FB6                            l5503 3FA6                            l4377 5860  
                          l3665 428E                            l3657 4246                            l3649 41E4  
                          l3681 4794                            l3673 4742                            l3729 570E  
                          l3593 4C9A                            l3833 2DFC                            l3817 2D60  
                          l3825 2DC2                            l3809 2CD6                            l4545 587E  
                          l3761 4F60                            l3753 4F30                            l3745 4F0E  
                          l3737 4EF0                            l4393 5046                            l4385 4FFC  
                          l4641 4570                            l4633 452A                            l4625 44E2  
                          l4617 44AA                            l4609 446C                            l5249 30FE  
                          l5193 2EB4                            l5185 2E82                            l5177 2E4A  
                          l4481 3422                            l5441 33BA                            l5433 3382  
                          l5425 3328                            l5417 32CE                            l5409 3274  
                          l5257 5824                            l5281 562E                            l5329 59C0  
                          l4529 59A0                            l4721 28EE                            l4713 28CA  
                          l4705 2898                            l4297 4AC4                            l3921 1C50  
                          l3913 1C40                            l3905 1C26                            l4465 2726  
                          l4457 254E                            l4449 24D6                            l4537 5960  
                          l4553 5734                            l5089 1978                            l5097 1A4E  
                          l5361 438C                            l5353 4362                            l5345 4322  
                          l5337 42E4                            l5265 51E0                            l5513 3FCA  
                          l5505 3FAA                            l3659 4258                            l3691 480A  
                          l3683 47B2                            l3675 4762                            l3595 4CAC  
                          l3835 2E08                            l3827 2DD4                            l3819 2D7E  
                          l4547 589A                            l3771 4F8C                            l3763 4F66  
                          l3755 4F42                            l3747 4F1C                            l3739 4EF4  
                          l3851 3918                            l4651 516C                            l4395 505E  
                          l4387 5008                            l4379 4FB4                            l4571 4604  
                          l4563 45B0                            l4643 4580                            l4635 4536  
                          l4627 44EE                            l4619 44B8                            l5195 2EDE  
                          l5187 2E88                            l5179 2E62                            l4491 34BC  
                          l4483 343A                            l4475 33E6                            l5443 33CE  
                          l5435 339C                            l5427 3342                            l5419 32E8  
                          l3843 58D2                            l5259 5834                            l5283 563E  
                          l5291 4BC8                            l4731 293C                            l4707 28AE  
                          l4811 3E40                            l4299 4AF2                            l3931 1C64  
                          l3923 1C54                            l3915 1C44                            l3907 1C34  
                          l4467 275A                            l4459 261C                            l4539 5966  
                          l4555 573A                            l5099 1A7A                            l5371 43E6  
                          l5363 439C                            l5347 432E                            l5339 42F8  
                          l5267 51FE                            l5531 4036                            l5523 3FF2  
                          l5515 3FD0                            l5507 3FAE                            l3693 482A  
                          l3685 47BA                            l3677 4766                            l3669 4730  
                          l3597 4CBE                            l3837 2E10                            l3829 2DE4  
                          l3781 2B66                            l3765 4F7C                            l3757 4F4A  
                          l3773 4F92                            l3749 4F24                            l3853 395E  
                          l4653 5178                            l4389 5016                            l4661 56B2  
                          l4581 4650                            l4565 45D4                            l4573 4612  
                          l4645 459A                            l4637 4546                            l4629 44FE  
                          l5197 2EF2                            l5189 2E96                            l4493 34F4  
                          l4485 3472                            l4477 33F2                            l5437 339E  
                          l5429 3344                            l5381 312A                            l3845 58E2  
                          l5285 5656                            l5293 4BD4                            l4741 2986  
                          l4733 294C                            l4725 2902                            l4709 28BE  
                          l4717 28DE                            l4821 3E7E                            l4813 3E56  
                          l4805 3DDC                            l4397 49BC                            l3941 1C78  
                          l3933 1C68                            l3925 1C58                            l3917 1C48  
                          l3909 1C38                            l3861 1B34                            l4469 2796  
                          l4549 576E                            l4901 3B30                            l4557 5750  
                          l5373 43F6                            l5357 437A                            l5349 433A  
                          l5277 523C                            l5269 5216                            l5541 4090  
                          l5533 4052                            l5525 3FF4                            l5517 3FD0  
                          l5509 3FB2                            l3695 483C                            l3687 47CE  
                          l3679 4774                            l3599 4CC8                            l3839 2E20  
                          l3791 2BE0                            l3783 2B86                            l3775 4FA2  
                          l3767 4F84                            l3759 4F52                            l3855 397E  
                          l3847 389A                            l4655 5184                            l4647 5130  
                          l4663 56C6                            l4591 46AA                            l4583 4662  
                          l4575 462A                            l4567 45EC                            l4639 4564  
                          l4495 3506                            l4487 3484                            l4479 3402  
                          l5439 33B0                            l5391 3194                            l5383 313A  
                          l5287 566A                            l5295 4BE4                            l4751 29D4  
                          l4743 2992                            l4735 2954                            l4727 291C  
                          l4719 28EE                            l4671 27E6                            l4831 3F06  
                          l4823 3EB0                            l4807 3DEC                            l4399 49D4  
                          l3951 1CF0                            l3943 1CA2                            l3935 1C6C  
                          l3927 1C5C                            l3919 1C4C                            l3871 1B70  
                          l3863 1B40                            l4911 3B5C                            l4903 3B4C  
                          l4559 5766                            l5375 440A                            l5367 43B2  
                          l5359 4386                            l5551 40FC                            l5543 4096  
                          l5535 407E                            l5527 4000                            l5519 3FDC  
                          l3689 47DC                            l3697 4842                            l3793 2BFA  
                          l3785 2BAE                            l3777 4FAA                            l3769 4F86  
                          l3857 399A                            l3849 38B6                            l4649 5154  
                          l4657 5192                            l4665 56DE                            l4593 46B6  
                          l4585 466E                            l4577 4638                            l4569 45F8  
                          l4497 352A                            l4489 34A4                            l5393 31C0  
                          l5385 3166                            l5289 566C                            l5297 4BF8  
                          l4753 29EA                            l4761 2A1A                            l4745 29B0  
                          l4737 2964                            l4729 292C                            l4681 281A  
                          l4673 27E8                            l4841 3F5C                            l4833 3F14  
                          l4825 3EB2                            l4817 3E6A                            l4809 3DFA  
                          l3961 1D30                            l3953 1CF4                            l3945 1CBE  
                          l3937 1C70                            l3929 1C60                            l3881 1BA0  
                          l3873 1B80                            l3865 1B4E                            l4921 3B96  
                          l4913 3B60                            l4905 3B52                            l5377 4424  
                          l5369 43C6                            l5553 4116                            l5545 40AA  
                          l5537 4080                            l5529 4014                            l3699 4852  
                          l3795 2C16                            l3787 2BCE                            l3859 3A04  
                          l4659 51AA                            l4595 46C6                            l4587 467E  
                          l4579 4644                            l4499 3542                            l5395 31DA  
                          l5387 3180                            l5379 311A                            l4851 58A8  
                          l5299 4C0C                            l4763 2A28                            l4755 29F0  
                          l4747 29B2                            l4739 2978                            l4691 284C  
                          l4675 27F8                            l4683 2822                            l4667 27CC  
                          l4843 3F6C                            l4835 3F32                            l4827 3EBE  
                          l4819 3E72                            l3971 1D72                            l3963 1D40  
                          l3955 1D02                            l3947 1CCE                            l3939 1C74  
                          l3891 1BCA                            l3883 1BB2                            l3875 1B82  
                          l3867 1B50                            l4931 3BC2                            l4923 3BB2  
                          l4915 3B6C                            l5555 411C                            l5547 40C4  
                          l5539 4088                            l3797 2C28                            l3789 2BDE  
                          l4597 46E4                            l4589 4698                            l5397 31DC  
                          l5389 3182                            l4861 58BE                            l4853 58B2  
                          l4773 2A92                            l4781 2ADA                            l4765 2A2C  
                          l4757 29FA                            l4749 29C2                            l4693 284E  
                          l4685 2832                            l4677 2808                            l4669 27D8  
                          l4845 3F7A                            l4837 3F34                            l4829 3EFA  
                          l3981 1DA0                            l3973 1D80                            l3957 1D04  
                          l3949 1CE4                            l3893 1BDA                            l3885 1BB4  
                          l3869 1B60                            l3877 1B8A                            l4941 3BFC  
                          l4933 3BC6                            l4925 3BB8                            l4917 3B78  
                          l5549 40DE                            l3799 2C36                            l4599 46F0  
                          l5399 31EE                            l4855 58B8                            l4863 59E2  
                          l4791 2B44                            l4783 2AF4                            l4775 2A9E  
                          l4767 2A3A                            l4759 2A08                            l4695 285E  
                          l4687 2838                            l4679 2818                            l4847 3F7C  
                          l4839 3F38                            l3991 1E0C                            l3983 1DAA  
                          l3975 1D8C                            l3967 1D54                            l3959 1D0E  
                          l3895 1BEA                            l3887 1BBA                            l3879 1B9A  
                          l4951 369E                            l4943 3C18                            l4935 3BD2  
                          l4919 3B90                            l4871 3A90                            l5495 3F8E  
                          l4857 58BA                            l4793 2B52                            l4785 2B0A  
                          l4777 2AAC                            l4769 2A68                            l4697 286E  
                          l4689 283E                            l3993 1E1C                            l3977 1D90  
                          l3969 1D64                            l3985 1DB0                            l3897 1BFA  
                          l3889 1BC8                            l4961 36FE                            l4953 36B6  
                          l4945 3C1E                            l4937 3BDE                            l4881 3ACA  
                          l4873 3A94                            l4865 3A6E                            l5497 3F92  
                          l4859 58BC                            l4795 2B58                            l4787 2B24  
                          l4779 2AD6                            l4699 287E                            l3987 1DD6  
                          l3995 1E2C                            l3979 1D9E                            l3899 1BFC  
                          l4971 3762                            l4963 3716                            l4955 36BA  
                          l4947 3690                            l4939 3BF6                            l4891 3AF6  
                          l4883 3AE6                            l4875 3AA0                            l5499 3F96  
                          l4797 2B5A                            l4789 2B40                            l3997 1E52  
                          l3989 1E0A                            l4981 37C6                            l4973 377A  
                          l4965 371A                            l4957 36CE                            l4949 3694  
                          l4893 3AFA                            l4885 3AEC                            l4877 3AAC  
                          l3999 1E62                            l4991 382A                            l4983 37DE  
                          l4975 377E                            l4967 3732                            l4959 36E6  
                          l4895 3B06                            l4879 3AC4                            l4993 3842  
                          l4985 37F6                            l4977 3796                            l4969 374A  
                          l4897 3B12                            l4995 385A                            l4987 37FA  
                          l4979 37AE                            l4899 3B2A                            l4997 3872  
                          l4989 3812                            l4999 3876                            STR_1 0E05  
                          STR_3 0E0D                            u3000 47DC                            u3001 47D8  
                          u3010 480A                            u3011 4806                            u3020 4852  
                          u3100 4F42                            u3021 484E                            u3101 4F3E  
                          u3030 4E3A                            u3110 4F60                            u3031 4E36  
                          u3111 4F5C                            u3040 4E5C                            u3200 2C36  
                          u3120 4F7C                            u4000 2350                    _BAUD4CONbits 000EE9  
                          u3041 4E58                            u3201 2C32                            u3121 4F78  
                          u4001 234C                            _LATE 000F7D                            u3050 4EB2  
                          u3210 2D60                            u3130 4FA2                            u4010 2398  
                          u3051 4EAE                            u3211 2D5C                            u3131 4F9E  
                          u4011 2394                            _LATG 000F7F                            u3060 4EC2  
                          u3220 2D7E                            u3140 2B96                            u4100 5308  
                          u3300 58F8                            u4020 23C6                            u3061 4EBE  
                          u3221 2D7A                            u3141 2B90                            u4101 5304  
                          u3301 58F4                            u4021 23C2                            u4110 5878  
                          u3070 570E                            u3230 2D98                            u3150 2B98  
                          u3310 38B6                            u4030 2400                            u4111 5874  
                          u3071 570A                            u3231 2D94                            u3311 38B2  
                          u4031 23FC                            u3240 2DB2                            u3160 2BAE  
                          u3080 4F02                            u3320 399A                            u4120 502E  
                          u5000 3F14                            u4200 4AA2                            u4040 4AF2  
                          u3400 1BDA                            u3241 2DAE                            u3161 2BAA  
                          u3081 4EFE                            u3321 3996                            u4121 502A  
                          u5001 3F10                            u4201 4A9E                            u4041 4AEE  
                          u3401 1BD6                            u3250 2DC2                            u3170 2BDE  
                          u3090 4F1C                            u4130 5046                            u5010 3F24  
                          u4050 4B30                            u3410 1BEA                            u4210 245E  
                          _T2PR 000FBC                            u3251 2DBE                            u3171 2BDA  
                          u3091 4F18                            u4131 5042                            u5011 3F20  
                          u4051 4B2C                            u3411 1BE6                            u3260 2DD4  
                          u3180 2BFA                            u4300 3402                            u5020 3F32  
                          u4140 49D4                            u4060 4B4E                            u3500 1D30  
                          u3420 1C26                            u4220 2486                            u5100 1756  
                          u3261 2DD0                            u3181 2BF6                            u4301 33FE  
                          u5021 3F2E                            u4141 49D0                            u4061 4B4A  
                          u3501 1D2C                            u3421 1C22                            u4221 2482  
                          u5101 1752                            u3270 2DE4                            u3190 2C28  
                          u3334 39F4                            u4310 3414                            u5030 3F6C  
                          u4150 4A08                            u4070 4B6E                            u3510 1D40  
                          u3430 1C34                            u3350 1B4E                            u4230 24BA  
                          u5110 1798                            u3271 2DE0                            u3191 2C24  
                          u3335 39F0                            u4311 340C                            u5031 3F68  
                          u4071 4B6A                            u3511 1D3C                            u3431 1C30  
                          u3351 1B4A                            u4215 2454                            u5111 1794  
                          u3280 2DFC                            u3344 3A5E                            u4400 3506  
                          u5040 3F7A                            u4160 4A36                            u4080 4BBE  
                          u3600 1E9E                            u3520 1D72                            u3440 1CA2  
                          u3360 1B60                            u4240 24D6                            u5200 1ADC  
                          u5120 1858                            u3281 2DF8                            u3345 3A5A  
                          u4401 3502                            u5041 3F76                            u4161 4A32  
                          u4081 4BBA                            u3601 1E9A                            u3521 1D6E  
                          u3441 1C9E                            u3361 1B5C                            u4241 24D2  
                          u5201 1AD8                            u5121 1854                            u4410 3518  
                          u4330 344C                            u3290 58E2                            u4170 4A4A  
                          u4090 57BE                            u3610 1EBA                            u3530 1D80  
                          u3450 1CBA                            u3370 1B70                            u4250 2516  
                          u5050 3AE6                            u5210 1B0A                            u5130 1870  
                          u4411 3510                            u4331 3444                            u3291 58DE  
                          u4171 4A46                            u4155 49FE                            u4091 57BA  
                          u3611 1EB6                            u3531 1D7C                            u3451 1CB4  
                          u3371 1B6C                            u4251 2512                            u4235 24B0  
                          u5051 3AE2                            u5211 1B06                            u5131 186C  
                          u2900 413A                            u5300 304E                            u4500 360E  
                          u4180 4A72                            u3700 1F92                            u3620 1ECA  
                          u3540 1D9E                            u3460 1CBC                            u3380 1BB2  
                          u4260 261C                            u5060 3B4C                            u5220 1B24  
                          u5140 1958                            u2901 4136                            u5301 304A  
                          u4501 360A                            u4181 4A6E                            u3701 1F8E  
                          u3621 1EC6                            u3541 1D9A                            u3381 1BAE  
                          u4261 2618                            u5061 3B48                            u5221 1B20  
                          u5141 1954                            u2910 416C                            u5310 30A2  
                          u4510 3620                            u4430 3554                            u4350 3484  
                          u4190 4A92                            u3710 1FB2                            u3630 1EDC  
                          u3550 1DD6                            u3470 1CE4                            u3390 1BC8  
                          u4270 26BA                            u5070 3BB2                            u5150 1970  
                          u5230 4E22                            u2911 4168                            u5311 309E  
                          u4511 3618                            u6007 35B8                            u4431 354C  
                          u4351 3480                            u4191 4A8E                            u3711 1FAE  
                          u3631 1ED8                            u3551 1DD2                            u3471 1CE0  
                          u3391 1BC4                            u4271 26B6                            u5071 3BAE  
                          u5151 196C                            u5231 4E1E                            u2840 4CAC  
                          u3800 5090                            u4600 4698                            u5320 30E2  
                          u5240 2EDE                            u4360 3496                            u4328 3416  
                          u3720 1FC4                            u3640 1EF2                            u3560 1E1C  
                          u3480 1D02                            u4280 277A                            u5080 3C18  
                          u5160 1990                            u5400 4376                            u2921 4196  
                          u2841 4CA8                            u3801 508C                            u4601 4694  
                          u5321 30DE                            u5241 2EDA                            u6017 35EE  
                          u4361 348E                            u3721 1FC0                            u3641 1EEE  
                          u3561 1E18                            u3481 1CFE                            u5081 3C14  
                          u5161 198C                            u5401 4372                            u2930 41BA  
                          u2850 4CBE                            u3810 50B4                            u4610 46AA  
                          u5250 2F04                            u4530 3656                            u4450 3590  
                          u3730 1FE0                            u3650 1F08                            u3570 1E52  
                          u3490 1D22                            u4290 2796                            u5170 1A42  
                          u5090 1688                            u5410 439C                            u5330 5236  
            verify_color@color2 0098                            u2931 41B6                            u2851 4CBA  
                          u3811 50B0                            u4611 46A6                            u6107 460A  
                          u5251 2F00                            u4531 364E                            u6027 3636  
                          u4451 358C                            u3731 1FDC                            u3651 1F04  
                          u3571 1E4E                            u3491 1D1E                            u4291 2792  
                          u5171 1A3E                            u5091 1684                            u5411 4398  
                          u5331 5232                            u2940 41E4                            u2860 4CE6  
                          u3740 3C48                            u4700 51AA                            u3820 50FE  
                          u4620 46E0                            u5260 2F3A                            u4460 35A2  
                          u4428 351A                            u4380 34CE                            u4348 344E  
                          u5500 32FC                            u3900 2092                            u3660 1F1C  
                          u3580 1E62                            u5180 1A7A                            u5420 43AE  
                          u2941 41E0                            u2861 4CE2                            u3741 3C44  
                          u4701 51A6                            u3821 50FA                            u4621 46DC  
                          u6117 4674                            u5261 2F36                            u6037 366C  
                          u4461 359A                            u4381 34C6                            u5501 32F8  
                          u3901 208E                            u3661 1F18                            u3581 1E5E  
                          u4285 2770                            u5181 1A76                            u5421 43AA  
                          u2950 4224                            u2870 4D1C                            u3750 3C92  
                          u4710 51C2                            u3830 5116                            u4630 471A  
                          u5270 2F7A                            u4550 368E                            u5510 3356  
                          u3910 20C8                            u3670 1F36                            u3590 1E8E  
                          u5190 1AA8                            u5430 43F6                            u2951 4220  
                          u2871 4D18                            u3751 3C8E                            u4711 51BE  
                          u3831 5112                            u4631 4716                            u6127 46BC  
                          u5271 2F76                            u6047 568E                            u4551 368A  
                          u5511 3352                            u3911 20C4                            u3671 1F32  
                          u3591 1E8A                            u5191 1AA4                            u5431 43F2  
                          u3840 5A4E                            u2960 426E                            u2880 55EA  
                          u3760 3CB6                            u4640 44AA                            u5280 2FBA  
                          u4528 3622                            u4480 35D8                            u4448 3556  
                          u5520 33B0                            u5440 312A                            u4800 2964  
                          u4720 27E6                            u3920 20D8                            u3680 1F70  
                          u4560 5750                            u5360 42D8                            u3841 5A4A  
                          u2961 426A                            u2881 55E6                            u3761 3CB2  
                          u6137 46F6                            u4641 44A6                            u5281 2FB6  
                          u6057 2EA0                            u4481 35D0                            u5521 33AC  
                          u5441 3126                            u4801 2960                            u4721 27E2  
                          u3921 20D4                            u3681 1F6C                            u4561 574C  
                          u5361 42D4                            u2970 4742                            u2890 5808  
                          u3770 3D5A                            u4650 44E2                            u5290 2FFA  
                          u4378 3498                            u5450 313A                            u4810 2986  
                          u4730 27F8                            u3930 2252                            u3850 200E  
                          u3690 1F82                            u4570 5766                            u5370 42F8  
                          u2971 473E                            u2891 5804                            u3771 3D56  
                          u6147 56D0                            u4651 44DE                            u6067 448A  
                          u5291 2FF6                            u5451 3136                            u4811 2982  
                          u4731 27F4                            u3851 200A                            u3691 1F7E  
                          u4571 5762                            u5371 42F4                            u2980 4774  
                          u4580 462A                            u4660 4518                            u4548 3658  
                          u5460 3194                            u4900 2A92                            u4820 29B0  
                          u4740 2808                            u3780 5616                            u3940 22AC  
                          u3860 2020                            u5380 431E                            u2981 4770  
                          u6157 500E                            u4581 4626                            u4661 4514  
                          u6077 44F4                            u5461 3190                            u4901 2A8E  
                          u4821 29AC                            u4741 2804                            u3781 560E  
                          u3941 22A8                            u3861 201C                            u5381 431A  
                          u2990 47B2                            u4590 4662                            u4670 452A  
                          u4478 35A4                            u4398 34D0                            u5470 31EE  
                          u4910 2AAC                            u4830 29D4                            u4750 284C  
                          u3950 22CC                            u3870 2030                            u5390 434E  
                          u2991 47AE                            u6167 5050                            u4591 465E  
                          u6087 453C                            u4671 4526                            u5471 31EA  
                          u4911 2AA8                            u4831 29D0                            u4751 2848  
                          u3951 22C8                            u3935 2248                            u3871 202C  
                          u5391 434A                            u4680 4560                            u5480 3248  
                          u4920 2AF4                            u4840 29EA                            u4760 285E  
                          u3960 22DE                            u3880 2070                            u6177 50DE  
                          u6097 4576                            u4681 455C                            u5481 3244  
                          u4921 2AF0                            u4841 29E6                            u4761 285A  
                          u3961 22DA                            u3881 206C                            u4690 459A  
                          u4498 35DA                            u5490 32A2                            u4930 2B24  
                          u4850 2A08                            u4770 286E                            u3970 230C  
                          u3890 2082                            u6187 5120                            u4691 4596  
                          u5491 329E                            u4931 2B20                            u4851 2A04  
                          u4771 286A                            u3971 2308                            u3891 207E  
                          u5707 4D8A                            u4940 2B52                            u4860 2A28  
                          u4780 28AE                            u3980 2322                            u5580 4048  
                          u6197 518A                            u4941 2B4E                            u4861 2A24  
                          u4781 28AA                            u3981 231E                            u5717 10B6  
                          u5581 4044                            u4870 2A3A                            u4790 28EE  
                          u4950 3DEC                            u3798 5618                            u3990 2336  
                          u4871 2A36                            u4791 28EA                            u4951 3DE8  
                          u3991 2332                            u5807 376C                            u5727 131C  
                          u4880 2A68                            u4960 3DFA                            u4881 2A64  
                          u4961 3DF6                            u5817 37E8                            u5737 164E  
                          u4890 2A7E                            u4970 3E56                            u4891 2A7A  
                          u4971 3E52                            u5907 4910                            u5827 3864  
                          u5747 3AB6                            u5667 40B6                            u4980 3EAC  
                          u4981 3EA8                            u5917 4934                            u5837 3880  
                          u5757 3B1C                            u5677 51D4                            u4990 3EF6  
                          u5927 59B0                            u4991 3EF2                            u5847 5930  
                          u5767 3B82                            u5687 520A                            u5937 582A  
                          u5857 5950                            u5777 3BE8                            u5697 4416  
                          u5947 342C                            u5867 5970                            u5787 36A8  
                          u5957 3464                            u5877 5990                            u5797 3708  
                          u5967 34AE                            u5887 48C8                            u5977 34E6  
                          u5897 48EC                            u5987 3534                            u5997 3570  
                          abs@a 0013                            _dbuf 0160                            _main 3F8E  
                          _dtoa 2B66                            _prec 00F7                            _nout 0154  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 5074                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 5472                 __end_of_HighISR 0028  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 42B0  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1FF4                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 4894                 __end_of___fldiv 2B66                 __end_of___awdiv 4FB4  
               __end_of___flneg 57E0                 __end_of___flmul 241E                 __end_of___flsub 55A8  
               __end_of___fltol 4AC4                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5980                           _LED_C 59A0                           _LED_G 5960  
                         _LED_R 5920                           i2l675 0024                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5A54      __end_of_I2C_2_Master_Start 5AA0         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5A76                 __end_of_compare 576E                    compare@lower 006A  
                         _flags 00F9                           _color 015E                    compare@upper 006E  
                         _fputc 4C9A                           _fputs 55A8                           pad@fp 0011  
                         _width 0156                           _putch 5AA2                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 57A8                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 5422                color_display@buf 0079         __end_of_color_read_Blue 5512  
         _I2C_2_Master_RepStart 5A82                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 5312                    __end_of_main 4128                    __end_of_dtoa 2E4A  
                 main@amb_light 0188            __end_of_detect_color 1B34                    __end_of_stop 5130  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 00F5  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5A54                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4BC8                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5563 000A                          i2l5565 001A                          i2l5567 0020  
            turnLeft@angle_left 0024                       ??_HighISR 0001        __end_of_color_click_init 584A  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3F8E                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4AC4                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 58FA  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 3118                       ??___flsub 0019  
                     ??___fltol 0060                          _goback 2E4A                   compare@result 0070  
                        _memory 0100                          clear_0 5342                          clear_1 534E  
                        clear_2 535A                ___awdiv@quotient 000D                          _second 015C  
                        _motorL 0146                          _motorR 013C                          isa$std 000001  
                        pad@buf 0013                          _roundf 241E                          dtoa@fp 001C  
                        _strlen 57E0                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 59E0                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 00E6                  test_function@w 00E8                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 5312                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
              __end_of_turnLeft 4730                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
              calibrate_white@w 000C                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 5360                   verify_color@m 0092  
                 verify_color@w 0094        __end_of_color_read_Clear 5562                      ___flneg@f1 0001  
      __end_of_color_read_Green 54C2          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 59A0                   __end_of_LED_C 59C0  
                 __end_of_LED_G 5980                   __end_of_LED_R 5940                ?_color_read_Blue 0005  
               _Interrupts_init 5A76                  __pcstackCOMRAM 0001                   _fullSpeedBack 4FB4  
                  __pidataBANK0 5AA4                    __pidataBANK1 5AA0         __end_of_buggylight_init 5A6A  
          turnRight@angle_right 0024           _distance_measure$3243 0074                   __end_of_fputc 4D64  
             detect_color@color 008B                   __end_of_fputs 55EC                   __end_of_putch 5AA4  
                 __end_of_toint 0E05             __end_of_Timer0_init 5A3C                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A              ??_distance_measure 0070                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00F7  
                    __pbssBANK1 0100                      __pbssBANK2 0200                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 59E0                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 00E0                         ?_goback 0058  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5940                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
                  _detect_color 0E14   __end_of_color_data_collection 3C24         __end_of_Interrupts_init 5A82  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 5A00              _I2C_2_Master_Start 5A96                      _initUSART4 5A00  
            _I2C_2_Master_Write 5A6A                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 00F2                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5A1E         sendStringSerial4@string 0002                         ___aodiv 4128  
                       ___fladd 1B34                         ___aomod 4730                         ___fldiv 27CC  
                       ___awdiv 4EF0                         ___flneg 57A8                         ___flmul 1FF4  
                       ___flsub 5562                         ___fltol 49BC             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00       distance_measure@threshold 007A                         __pcinit 5312  
                       __ramtop 0E00                      _read_color 5372                       ?_turnLeft 0020  
                       __ptext0 3F8E                         __ptext1 51C4                         __ptext2 42B0  
                       __ptext3 4D64                         __ptext4 0E14                         __ptext5 5734  
                       __ptext6 3A6E                         __ptext7 5372                         __ptext8 5240  
                       __ptext9 3690                         _compare 5734         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
                       _lroundf 576E                   _RxBufWriteCnt 00FE                         goback@i 00DE  
        distance_measure@CC_amb 0078                         main@amb 0180          distance_measure@CG_amb 0072  
                       _sprintf 53D0                         main@rgb 018B            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 5360              setMotorPWM@PWMduty 0018  
               _CALIBRATION_135 01C4                 _CALIBRATION_180 01C3                         fputc@fp 0003  
         __end_of_test_function 4430                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 00EA                 test_function@mR 00EC                 ??_fullSpeedBack 0024  
                    ??_pin_init 0001              ??_color_click_init 0005               __end_of_vfpfcnvrt 3DDA  
         __end_of_short_reverse 56B2                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       roundf@e 004D                         roundf@u 0053                         roundf@x 0041  
                       roundf@y 0057                      ??_vfprintf 0056                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 562E                      ??_turnLeft 0025  
__end_of_initDCmotors_parameter 4C9A                       _PORTFbits 000F8E        test_function@stop_signal 00F3  
             __end_of_turnRight 45B0                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 015A                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 0128                    _EUSART4TXbuf 0200               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0092  
         __end_of_color_display 52B0                      main@motorL 01AF                      main@motorR 01B9  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 0089  
                detect_color@BC 0083                  detect_color@BG 008C                  detect_color@GB 007B  
                detect_color@GG 0081                  detect_color@BR 0087                  detect_color@GR 007F  
                detect_color@RB 0079                  detect_color@RG 007D                  detect_color@RR 0085  
         __end_of_color_predict 58A8                  __end_of___flge 4BC8                  _fullSpeedAhead 5130  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5920                  __end_of_action 33E4                     ?_read_color 000C  
                __end_of_goback 3118                  __end_of_roundf 27CC              turnRight@delay_135 0026  
            turnRight@delay_180 0028                  __end_of_strlen 5816             color_read_Clear@tmp 000A  
           start_initialization 5312                     __end_of_abs 5734                     __end_of_pad 4EF0  
                 _TxBufWriteCnt 00FC               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
                _reverse_square 56B2         __end_of_initDCmotorsPWM 5670                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 51C4                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 005E                        ??_goback 005C                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK0 00FF                     __pdataBANK1 01C3  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                        ?_LED_OFF 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 0180                ___aodiv@dividend 0001                        ?_HighISR 0001  
        __end_of_reverse_square 56F4                       _dtoa$2877 002E                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001A                       __pintcode 0008                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 0028                        ?___flsub 0011                        ?___fltol 005B  
               turnRight@i_1358 002C                 turnRight@i_1359 002E                  turnLeft@i_1333 002C  
                turnLeft@i_1334 002E            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 58D2  
             _I2C_2_Master_Init 58A8               _I2C_2_Master_Read 55EC               _I2C_2_Master_Stop 5A8C  
        toggle_light@toggletime 0001                    _RxBufReadCnt 00FD                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 584A           _color_data_collection 3A6E  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u559_40 001A  
                      i2u559_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 015F                       _vfpfcnvrt 3C24       __end_of_I2C_2_Master_Idle 58FA  
          __end_of_toggle_light 3690       __end_of_I2C_2_Master_Init 58D2       __end_of_I2C_2_Master_Read 562E  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5A96                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5240          test_function@amb_light 00F0  
                     main@white 0193               ??_color_read_Blue 0007                       _stop_move 0158  
                 detect_color@m 0071                   detect_color@w 0073                    _TxBufReadCnt 00FB  
                     _turnRight 4430                 _calibrate_white 3690       __end_of_sendStringSerial4 587A  
             _amb_light_measure 4894   __end_of_I2C_2_Master_RepStart 5A8C              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3A6E                      roundf@F527 0150                _distance_measure 4D64  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 5074                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 005E                      sprintf@fmt 0062  
                      ___xxtofl 3DDA                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5A1E                      ?_turnRight 0020                        __ptext10 5422  
                      __ptext11 5472                        __ptext20 5562                        __ptext12 54C2  
                      __ptext21 1B34                        __ptext13 5920                        __ptext30 27CC  
                      __ptext22 57A8                        __ptext14 5940                        __ptext31 59A0  
                      __ptext23 1FF4                        __ptext15 5960                        __ptext40 5A96  
                      __ptext32 59C0                        __ptext24 4AC4                        __ptext16 5980  
                      __ptext41 58D2                        __ptext33 5A00                        __ptext25 49BC  
                      __ptext17 4894                        __ptext50 56B2                        __ptext42 58A8  
                      __ptext34 4BC8                        __ptext26 5512                        __ptext18 576E  
                      __ptext51 4FB4                        __ptext43 5A54                        __ptext35 562E  
                      __ptext27 5A82                        __ptext19 241E                        __ptext60 3C24  
                      __ptext52 5074                        __ptext44 3118                        __ptext36 5816  
                      __ptext28 55EC                        __ptext61 2B66                        __ptext53 5130  
                      __ptext45 33E4                        __ptext37 59E0                        __ptext29 3DDA  
                      __ptext70 584A                        __ptext62 4E2A                        __ptext54 389A  
                      __ptext46 5670                        __ptext38 5A6A                        __ptext71 5A3C  
                      __ptext63 57E0                        __ptext55 58FA                        __ptext47 2E4A  
                      __ptext39 5A8C                        __ptext72 5A1E                        __ptext64 55A8  
                      __ptext56 4EF0                        __ptext48 4430                        __ptext73 5A76  
                      __ptext65 4C9A                        __ptext57 587A                        __ptext49 45B0  
                      __ptext66 5AA2                        __ptext58 53D0                        __ptext67 56F4  
                      __ptext59 52B0                        __ptext68 4730                        __ptext69 4128  
     __end_of_amb_light_measure 49BC                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A                  turnRight@delay 0030          test_function@test_code 00F4  
                 turnLeft@delay 0030                        action@mL 00E0                        action@mR 00E2  
                    turnLeft@mL 0020                      turnLeft@mR 0022              __end_of_read_color 53D0  
                      _pin_init 59C0                      turnRight@i 002A                        isa$xinst 000000  
          distance_measure@stop 007C                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FF                        goback@mL 0058                        goback@mR 005A  
                      _vfprintf 52B0                        _turnLeft 45B0                ___aomod@dividend 0001  
       __end_of_calibrate_white 389A                      _INTCONbits 000FF2                     _setMotorPWM 389A  
                 ?_detect_color 0071                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C               ??_buggylight_init 0001  
              ??_fullSpeedAhead 001E                   _test_function 42B0                       turnLeft@i 002A  
              reverse_square@mL 0026                reverse_square@mR 0028                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                   _short_reverse 5670                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                _color_click_init 5816  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$3242 008E  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 006A  
            distance_measure@mR 006C                  ??_detect_color 0075                     ??_turnRight 0025  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 5A3C                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 00E6                    _toggle_light 33E4  
                  ___aomod@sign 0012                    _verify_color 51C4                     _roundf$3244 004F  
                   _roundf$3245 0049                   _color_display 5240                 main@stop_signal 018A  
